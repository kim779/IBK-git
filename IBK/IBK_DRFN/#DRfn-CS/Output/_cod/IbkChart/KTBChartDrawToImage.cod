; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\KTBChart\KTBChartDrawToImage.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1CMultiLanguageResourceSetter@@QAE@XZ		; CMultiLanguageResourceSetter::~CMultiLanguageResourceSetter
PUBLIC	?OnDrawForPrint@CKTBChartCtrl@@QAEXAAVCDC@@AAVCBitmap@@VCRect@@H@Z ; CKTBChartCtrl::OnDrawForPrint
PUBLIC	?OnDrawStockItemCode@CKTBChartCtrl@@QAEXAAVCDC@@AAVCRect@@@Z ; CKTBChartCtrl::OnDrawStockItemCode
PUBLIC	?OnDrawUsingOptimizingcolor@CKTBChartCtrl@@QAEXAAVCDC@@AAVCBitmap@@VCRect@@@Z ; CKTBChartCtrl::OnDrawUsingOptimizingcolor
PUBLIC	?OnDrawUsingScreencolor@CKTBChartCtrl@@QAEXAAVCDC@@AAVCBitmap@@VCRect@@@Z ; CKTBChartCtrl::OnDrawUsingScreencolor
PUBLIC	??_C@_0BA@ENJOCHIO@LoadResourceDLL@		; `string'
PUBLIC	??_C@_01GBGANLPD@0@				; `string'
EXTRN	___std_terminate:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__GetTextExtentPoint32A@16:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ:PROC
EXTRN	__imp_?LoadStringA@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHI@Z:PROC
EXTRN	?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ:PROC ; AfxGetModuleState
EXTRN	?AfxGetStaticModuleState@@YGPAVAFX_MODULE_STATE@@XZ:PROC ; AfxGetStaticModuleState
EXTRN	?SetBkMode@CDC@@QAEHH@Z:PROC			; CDC::SetBkMode
EXTRN	?MoveTo@CDC@@QAE?AVCPoint@@HH@Z:PROC		; CDC::MoveTo
EXTRN	?LineTo@CDC@@QAEHHH@Z:PROC			; CDC::LineTo
EXTRN	__imp_?DrawBackground@CBackgroundDrawer@@QAEXPAVCDC@@AAVCRect@@HKKH@Z:PROC
EXTRN	?DrawChart@CKTBChartCtrl@@QAEXAAVCDC@@0VCRect@@H@Z:PROC ; CKTBChartCtrl::DrawChart
EXTRN	?GetMainBlockRegion@CKTBChartCtrl@@QAE?AVCRect@@XZ:PROC ; CKTBChartCtrl::GetMainBlockRegion
EXTRN	__imp_??0CGraphRegionColor@@QAE@ABK00@Z:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?g_iMetaTable@@3VIMetaTable@@A:BYTE		; g_iMetaTable
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_01GBGANLPD@0@
CONST	SEGMENT
??_C@_01GBGANLPD@0@ DB '0', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ENJOCHIO@LoadResourceDLL@
CONST	SEGMENT
??_C@_0BA@ENJOCHIO@LoadResourceDLL@ DB 'LoadResourceDLL', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnDrawStockItemCode@CKTBChartCtrl@@QAEXAAVCDC@@AAVCRect@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnDrawStockItemCode@CKTBChartCtrl@@QAEXAAVCDC@@AAVCRect@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnDrawStockItemCode@CKTBChartCtrl@@QAEXAAVCDC@@AAVCRect@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnDrawStockItemCode@CKTBChartCtrl@@QAEXAAVCDC@@AAVCRect@@@Z$2
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?OnDrawStockItemCode@CKTBChartCtrl@@QAEXAAVCDC@@AAVCRect@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?OnDrawStockItemCode@CKTBChartCtrl@@QAEXAAVCDC@@AAVCRect@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CMultiLanguageResourceSetter@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
;	COMDAT ?OnDrawUsingScreencolor@CKTBChartCtrl@@QAEXAAVCDC@@AAVCBitmap@@VCRect@@@Z
_TEXT	SEGMENT
$T1 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_memoryDC$ = 8						; size = 4
_bufferBitmap$ = 12					; size = 4
_rect$ = 16						; size = 16
?OnDrawUsingScreencolor@CKTBChartCtrl@@QAEXAAVCDC@@AAVCBitmap@@VCRect@@@Z PROC ; CKTBChartCtrl::OnDrawUsingScreencolor, COMDAT
; _this$ = ecx

; 132  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _memoryDC$[ebp]

; 133  : 	// 차트를 메모리DC에 그린다.
; 134  : 	m_pMainBlock->SetAllBlockRegion(rect);

  00014	8d 55 10	 lea	 edx, DWORD PTR _rect$[ebp]
  00017	57		 push	 edi
  00018	8b f9		 mov	 edi, ecx
  0001a	52		 push	 edx
  0001b	8b 8f 34 03 00
	00		 mov	 ecx, DWORD PTR [edi+820]
  00021	8b 01		 mov	 eax, DWORD PTR [ecx]
  00023	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]

; 135  : 
; 136  : 	DrawChart( memoryDC, memoryDC, rect);

  00029	0f 10 45 10	 movups	 xmm0, XMMWORD PTR _rect$[ebp]
  0002d	6a 00		 push	 0
  0002f	83 ec 10	 sub	 esp, 16			; 00000010H
  00032	8b cf		 mov	 ecx, edi
  00034	8b c4		 mov	 eax, esp
  00036	56		 push	 esi
  00037	56		 push	 esi
  00038	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  0003b	e8 00 00 00 00	 call	 ?DrawChart@CKTBChartCtrl@@QAEXAAVCDC@@0VCRect@@H@Z ; CKTBChartCtrl::DrawChart

; 137  : 
; 138  : 	// (2004.10.19, 배승원) Block Region 복원은 이용 이후 바로 적용한다.
; 139  : 	m_pMainBlock->SetAllBlockRegion(GetMainBlockRegion());

  00040	8b 87 34 03 00
	00		 mov	 eax, DWORD PTR [edi+820]
  00046	8b cf		 mov	 ecx, edi
  00048	8b 30		 mov	 esi, DWORD PTR [eax]
  0004a	8d 45 ec	 lea	 eax, DWORD PTR $T1[ebp]
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?GetMainBlockRegion@CKTBChartCtrl@@QAE?AVCRect@@XZ ; CKTBChartCtrl::GetMainBlockRegion
  00053	8b 8f 34 03 00
	00		 mov	 ecx, DWORD PTR [edi+820]
  00059	50		 push	 eax
  0005a	ff 96 a0 00 00
	00		 call	 DWORD PTR [esi+160]

; 140  : }

  00060	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00063	5f		 pop	 edi
  00064	33 cd		 xor	 ecx, ebp
  00066	5e		 pop	 esi
  00067	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 18 00	 ret	 24			; 00000018H
?OnDrawUsingScreencolor@CKTBChartCtrl@@QAEXAAVCDC@@AAVCBitmap@@VCRect@@@Z ENDP ; CKTBChartCtrl::OnDrawUsingScreencolor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
;	COMDAT ?OnDrawUsingOptimizingcolor@CKTBChartCtrl@@QAEXAAVCDC@@AAVCBitmap@@VCRect@@@Z
_TEXT	SEGMENT
_BlockColor2$ = -56					; size = 12
_BlockColor$ = -44					; size = 12
$T1 = -32						; size = 4
$T2 = -28						; size = 4
$T3 = -28						; size = 4
_this$GSCopy$1$ = -24					; size = 4
$T4 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_memoryDC$ = 8						; size = 4
_bufferBitmap$ = 12					; size = 4
_rect$ = 16						; size = 16
?OnDrawUsingOptimizingcolor@CKTBChartCtrl@@QAEXAAVCDC@@AAVCBitmap@@VCRect@@@Z PROC ; CKTBChartCtrl::OnDrawUsingOptimizingcolor, COMDAT
; _this$ = ecx

; 110  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _memoryDC$[ebp]

; 111  : 	m_pMainBlock->SetAllBlockRegion(rect);

  00014	8d 55 10	 lea	 edx, DWORD PTR _rect$[ebp]
  00017	56		 push	 esi
  00018	8b f1		 mov	 esi, ecx
  0001a	57		 push	 edi
  0001b	52		 push	 edx
  0001c	89 75 e8	 mov	 DWORD PTR _this$GSCopy$1$[ebp], esi
  0001f	8b 8e 34 03 00
	00		 mov	 ecx, DWORD PTR [esi+820]
  00025	8b 01		 mov	 eax, DWORD PTR [ecx]
  00027	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]

; 112  : 	m_pMainBlock->SetBackgroundColor(RGB(255,255,255));

  0002d	8b 8e 34 03 00
	00		 mov	 ecx, DWORD PTR [esi+820]
  00033	8d 55 e4	 lea	 edx, DWORD PTR $T3[ebp]
  00036	c7 45 e4 ff ff
	ff 00		 mov	 DWORD PTR $T3[ebp], 16777215 ; 00ffffffH
  0003d	52		 push	 edx
  0003e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00040	ff 90 ac 00 00
	00		 call	 DWORD PTR [eax+172]

; 113  : 	CGraphRegionColor BlockColor(RGB(255,255,255), RGB(255,255,255), m_clrBlockBorder);

  00046	8d be 68 03 00
	00		 lea	 edi, DWORD PTR [esi+872]
  0004c	c7 45 e4 ff ff
	ff 00		 mov	 DWORD PTR $T2[ebp], 16777215 ; 00ffffffH
  00053	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_??0CGraphRegionColor@@QAE@ABK00@Z
  00059	8d 45 e4	 lea	 eax, DWORD PTR $T2[ebp]
  0005c	57		 push	 edi
  0005d	50		 push	 eax
  0005e	8d 45 e0	 lea	 eax, DWORD PTR $T1[ebp]
  00061	c7 45 e0 ff ff
	ff 00		 mov	 DWORD PTR $T1[ebp], 16777215 ; 00ffffffH
  00068	50		 push	 eax
  00069	8d 4d d4	 lea	 ecx, DWORD PTR _BlockColor$[ebp]
  0006c	ff d6		 call	 esi

; 114  : 	m_pMainBlock->SetGraphRegionColor(BlockColor);

  0006e	8b 45 e8	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00071	8d 55 d4	 lea	 edx, DWORD PTR _BlockColor$[ebp]
  00074	52		 push	 edx
  00075	8b 88 34 03 00
	00		 mov	 ecx, DWORD PTR [eax+820]
  0007b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0007d	ff 90 b0 00 00
	00		 call	 DWORD PTR [eax+176]

; 115  : 	m_pMainBlock->SetGraphBackgroundGap(0, 0);

  00083	8b 45 e8	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00086	6a 00		 push	 0
  00088	6a 00		 push	 0
  0008a	8b 88 34 03 00
	00		 mov	 ecx, DWORD PTR [eax+820]
  00090	8b 01		 mov	 eax, DWORD PTR [ecx]
  00092	ff 90 10 01 00
	00		 call	 DWORD PTR [eax+272]

; 116  : 
; 117  : 	DrawChart( memoryDC, memoryDC, rect);

  00098	0f 10 45 10	 movups	 xmm0, XMMWORD PTR _rect$[ebp]
  0009c	6a 00		 push	 0
  0009e	83 ec 10	 sub	 esp, 16			; 00000010H
  000a1	8b c4		 mov	 eax, esp
  000a3	53		 push	 ebx
  000a4	53		 push	 ebx
  000a5	8b 5d e8	 mov	 ebx, DWORD PTR _this$GSCopy$1$[ebp]
  000a8	8b cb		 mov	 ecx, ebx
  000aa	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  000ad	e8 00 00 00 00	 call	 ?DrawChart@CKTBChartCtrl@@QAEXAAVCDC@@0VCRect@@H@Z ; CKTBChartCtrl::DrawChart

; 118  : 
; 119  : 	//다시 되돌리기..
; 120  : 	m_pMainBlock->SetBackgroundColor(m_clrBackground);

  000b2	8b 8b 34 03 00
	00		 mov	 ecx, DWORD PTR [ebx+820]
  000b8	8d 83 5c 03 00
	00		 lea	 eax, DWORD PTR [ebx+860]
  000be	50		 push	 eax
  000bf	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c1	ff 92 ac 00 00
	00		 call	 DWORD PTR [edx+172]

; 121  : 	CGraphRegionColor BlockColor2(m_clrBlock, m_clrLattice, m_clrBlockBorder);

  000c7	57		 push	 edi
  000c8	8d 83 98 03 00
	00		 lea	 eax, DWORD PTR [ebx+920]
  000ce	50		 push	 eax
  000cf	8d 83 64 03 00
	00		 lea	 eax, DWORD PTR [ebx+868]
  000d5	50		 push	 eax
  000d6	8d 4d c8	 lea	 ecx, DWORD PTR _BlockColor2$[ebp]
  000d9	ff d6		 call	 esi

; 122  : 	m_pMainBlock->SetGraphRegionColor(BlockColor2);

  000db	8b 8b 34 03 00
	00		 mov	 ecx, DWORD PTR [ebx+820]
  000e1	8d 55 c8	 lea	 edx, DWORD PTR _BlockColor2$[ebp]
  000e4	52		 push	 edx
  000e5	8b 01		 mov	 eax, DWORD PTR [ecx]
  000e7	ff 90 b0 00 00
	00		 call	 DWORD PTR [eax+176]

; 123  : 	m_pMainBlock->SetGraphBackgroundGap(m_nHorzGap, m_nVertGap);

  000ed	8b 8b 34 03 00
	00		 mov	 ecx, DWORD PTR [ebx+820]
  000f3	0f bf 83 ae 02
	00 00		 movsx	 eax, WORD PTR [ebx+686]
  000fa	50		 push	 eax
  000fb	0f bf 83 ac 02
	00 00		 movsx	 eax, WORD PTR [ebx+684]
  00102	8b 11		 mov	 edx, DWORD PTR [ecx]
  00104	50		 push	 eax
  00105	ff 92 10 01 00
	00		 call	 DWORD PTR [edx+272]

; 124  : 	// (2004.10.19, 배승원) Block Region 복원은 이용 이후 바로 적용한다.
; 125  : 	m_pMainBlock->SetAllBlockRegion(GetMainBlockRegion());

  0010b	8b 83 34 03 00
	00		 mov	 eax, DWORD PTR [ebx+820]
  00111	8b cb		 mov	 ecx, ebx
  00113	8b 30		 mov	 esi, DWORD PTR [eax]
  00115	8d 45 ec	 lea	 eax, DWORD PTR $T4[ebp]
  00118	50		 push	 eax
  00119	e8 00 00 00 00	 call	 ?GetMainBlockRegion@CKTBChartCtrl@@QAE?AVCRect@@XZ ; CKTBChartCtrl::GetMainBlockRegion
  0011e	50		 push	 eax
  0011f	8b 8b 34 03 00
	00		 mov	 ecx, DWORD PTR [ebx+820]
  00125	ff 96 a0 00 00
	00		 call	 DWORD PTR [esi+160]

; 126  : }

  0012b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012e	5f		 pop	 edi
  0012f	5e		 pop	 esi
  00130	33 cd		 xor	 ecx, ebp
  00132	5b		 pop	 ebx
  00133	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00138	8b e5		 mov	 esp, ebp
  0013a	5d		 pop	 ebp
  0013b	c2 18 00	 ret	 24			; 00000018H
?OnDrawUsingOptimizingcolor@CKTBChartCtrl@@QAEXAAVCDC@@AAVCBitmap@@VCRect@@@Z ENDP ; CKTBChartCtrl::OnDrawUsingOptimizingcolor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\DLL_Load\IMetaTable.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\DLL_Load\IMetaTable.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\DLL_Load\IMetaTable.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\DLL_Load\IMetaTable.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
;	COMDAT ?OnDrawStockItemCode@CKTBChartCtrl@@QAEXAAVCDC@@AAVCRect@@@Z
_TEXT	SEGMENT
$T2 = -76						; size = 8
___mlrs__$3 = -68					; size = 4
_size$4 = -64						; size = 8
_rect$GSCopy$1$ = -56					; size = 4
_nWritingItemInfoSpace$1$ = -52				; size = 4
_strFormat$5 = -48					; size = 4
_str$6 = -44						; size = 4
_memoryDC$GSCopy$1$ = -40				; size = 4
_this$GSCopy$1$ = -36					; size = 4
_p1$1$ = -36						; size = 4
$T7 = -36						; size = 4
_nleft$1$ = -36						; size = 4
$T8 = -32						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_memoryDC$ = 8						; size = 4
_rect$ = 12						; size = 4
?OnDrawStockItemCode@CKTBChartCtrl@@QAEXAAVCDC@@AAVCRect@@@Z PROC ; CKTBChartCtrl::OnDrawStockItemCode, COMDAT
; _this$ = ecx

; 59   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnDrawStockItemCode@CKTBChartCtrl@@QAEXAAVCDC@@AAVCRect@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 40	 sub	 esp, 64			; 00000040H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d dc	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
  0002e	8b 45 08	 mov	 eax, DWORD PTR _memoryDC$[ebp]

; 60   : 	int nWritingItemInfoSpace = 0;

  00031	33 db		 xor	 ebx, ebx
  00033	8b 7d 0c	 mov	 edi, DWORD PTR _rect$[ebp]
  00036	89 45 d8	 mov	 DWORD PTR _memoryDC$GSCopy$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

  00039	8b 81 2c 03 00
	00		 mov	 eax, DWORD PTR [ecx+812]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp

; 59   : {

  0003f	89 7d c8	 mov	 DWORD PTR _rect$GSCopy$1$[ebp], edi

; 60   : 	int nWritingItemInfoSpace = 0;

  00042	89 5d cc	 mov	 DWORD PTR _nWritingItemInfoSpace$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 533  : 		return( GetLength() == 0 );

  00045	39 58 f4	 cmp	 DWORD PTR [eax-12], ebx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp

; 61   : 	if(!m_strCode.IsEmpty() && !m_strItemName.IsEmpty()) 

  00048	74 14		 je	 SHORT $LN2@OnDrawStoc
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

  0004a	8b 81 20 04 00
	00		 mov	 eax, DWORD PTR [ecx+1056]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp

; 61   : 	if(!m_strCode.IsEmpty() && !m_strItemName.IsEmpty()) 

  00050	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 533  : 		return( GetLength() == 0 );

  00055	39 58 f4	 cmp	 DWORD PTR [eax-12], ebx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp

; 61   : 	if(!m_strCode.IsEmpty() && !m_strItemName.IsEmpty()) 

  00058	0f 45 d9	 cmovne	 ebx, ecx
  0005b	89 5d cc	 mov	 DWORD PTR _nWritingItemInfoSpace$1$[ebp], ebx
$LN2@OnDrawStoc:

; 65   : 	m_pBackgroundDraw.DrawBackground(&memoryDC,

  0005e	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 540  : 	left = l;

  00061	8b 07		 mov	 eax, DWORD PTR [edi]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp

; 65   : 	m_pBackgroundDraw.DrawBackground(&memoryDC,

  00063	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 542  : 	right = r;

  00066	89 4d e8	 mov	 DWORD PTR $T8[ebp+8], ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp

; 65   : 	m_pBackgroundDraw.DrawBackground(&memoryDC,

  00069	8b 4d dc	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 540  : 	left = l;

  0006c	89 45 e0	 mov	 DWORD PTR $T8[ebp], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp

; 65   : 	m_pBackgroundDraw.DrawBackground(&memoryDC,

  0006f	8d 45 e0	 lea	 eax, DWORD PTR $T8[ebp]
  00072	8d 72 14	 lea	 esi, DWORD PTR [edx+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 541  : 	top = t;

  00075	89 55 e4	 mov	 DWORD PTR $T8[ebp+4], edx

; 543  : 	bottom = b;

  00078	89 75 ec	 mov	 DWORD PTR $T8[ebp+12], esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp

; 65   : 	m_pBackgroundDraw.DrawBackground(&memoryDC,

  0007b	ff b1 3c 02 00
	00		 push	 DWORD PTR [ecx+572]
  00081	81 c1 44 03 00
	00		 add	 ecx, 836		; 00000344H
  00087	68 ff ff ff 00	 push	 16777215		; 00ffffffH
  0008c	68 ff ff ff 00	 push	 16777215		; 00ffffffH
  00091	6a 01		 push	 1
  00093	50		 push	 eax
  00094	ff 75 d8	 push	 DWORD PTR _memoryDC$GSCopy$1$[ebp]
  00097	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?DrawBackground@CBackgroundDrawer@@QAEXPAVCDC@@AAVCRect@@HKKH@Z

; 66   : 					CRect(rect.left, rect.top, rect.right, rect.top + 20),	// 그릴 background 영역 
; 67   : 					1,			// border 굵기
; 68   : 					RGB(255,255,255),		// background 색
; 69   : 					RGB(255,255,255),		// block 색
; 70   : 					m_nBorderType);			// border 타입
; 71   : 
; 72   : 	if(nWritingItemInfoSpace != 0)

  0009d	85 db		 test	 ebx, ebx
  0009f	0f 84 9f 01 00
	00		 je	 $LN58@OnDrawStoc

; 74   : 		ML_SET_LANGUAGE_RES();

  000a5	e8 00 00 00 00	 call	 ?AfxGetStaticModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetStaticModuleState
  000aa	8b 5d dc	 mov	 ebx, DWORD PTR _this$GSCopy$1$[ebp]
  000ad	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\DLL_Load\IMetaTable.h

; 936  : 	DECLARE_FUNCTION2(	LoadResourceDLL,				HMODULE, AfxGetStaticModuleState()->m_hCurrentInstanceHandle, HWND, HMODULE);

  000b0	a1 04 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp

; 74   : 		ML_SET_LANGUAGE_RES();

  000b5	8b 8b c0 05 00
	00		 mov	 ecx, DWORD PTR [ebx+1472]
  000bb	89 4d dc	 mov	 DWORD PTR _p1$1$[ebp], ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\DLL_Load\IMetaTable.h

; 936  : 	DECLARE_FUNCTION2(	LoadResourceDLL,				HMODULE, AfxGetStaticModuleState()->m_hCurrentInstanceHandle, HWND, HMODULE);

  000be	85 c0		 test	 eax, eax
  000c0	74 4c		 je	 SHORT $LN25@OnDrawStoc
  000c2	ba 80 0d 00 00	 mov	 edx, 3456		; 00000d80H
  000c7	66 3b 15 94 00
	00 00		 cmp	 dx, WORD PTR ?g_iMetaTable@@3VIMetaTable@@A+148
  000ce	74 2c		 je	 SHORT $LN59@OnDrawStoc
  000d0	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@ENJOCHIO@LoadResourceDLL@
  000d5	50		 push	 eax
  000d6	c7 05 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+144, 0
  000e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  000e6	b9 80 0d 00 00	 mov	 ecx, 3456		; 00000d80H
  000eb	a3 90 00 00 00	 mov	 DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+144, eax
  000f0	66 89 0d 94 00
	00 00		 mov	 WORD PTR ?g_iMetaTable@@3VIMetaTable@@A+148, cx
  000f7	8b 4d dc	 mov	 ecx, DWORD PTR _p1$1$[ebp]
  000fa	eb 05		 jmp	 SHORT $LN24@OnDrawStoc
$LN59@OnDrawStoc:
  000fc	a1 90 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+144
$LN24@OnDrawStoc:
  00101	85 c0		 test	 eax, eax
  00103	74 09		 je	 SHORT $LN25@OnDrawStoc
  00105	56		 push	 esi
  00106	51		 push	 ecx
  00107	ff d0		 call	 eax
  00109	83 c4 08	 add	 esp, 8
  0010c	eb 08		 jmp	 SHORT $LN61@OnDrawStoc
$LN25@OnDrawStoc:
  0010e	e8 00 00 00 00	 call	 ?AfxGetStaticModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetStaticModuleState
  00113	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$LN61@OnDrawStoc:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 25   : 		return afxCurrentResourceHandle; }

  00116	89 45 dc	 mov	 DWORD PTR $T7[ebp], eax
  00119	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\DLL_Load\IMetaTable.h

; 1032 : 		m_hInstance = AfxGetResourceHandle();

  0011e	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
  00121	89 75 bc	 mov	 DWORD PTR ___mlrs__$3[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 27   : 	{ ASSERT(hInstResource != NULL); afxCurrentResourceHandle = hInstResource; }

  00124	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
  00129	8b 4d dc	 mov	 ecx, DWORD PTR $T7[ebp]
  0012c	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp

; 75   : 		CString strFormat;

  0012f	8d 4d d0	 lea	 ecx, DWORD PTR _strFormat$5[ebp]
  00132	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00139	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 76   : 		strFormat.LoadString( IDS_FORMAT_ITEM_CODE_AND_NAME);

  0013f	68 74 9d 00 00	 push	 40308			; 00009d74H
  00144	8d 4d d0	 lea	 ecx, DWORD PTR _strFormat$5[ebp]
  00147	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0014b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringA@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHI@Z

; 77   : 		CString str;

  00151	8d 4d d4	 lea	 ecx, DWORD PTR _str$6[ebp]
  00154	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 78   : 		str.Format( strFormat, m_strCode, m_strItemName);

  0015a	ff b3 20 04 00
	00		 push	 DWORD PTR [ebx+1056]
  00160	8d 45 d4	 lea	 eax, DWORD PTR _str$6[ebp]
  00163	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00167	ff b3 2c 03 00
	00		 push	 DWORD PTR [ebx+812]
  0016d	ff 75 d0	 push	 DWORD PTR _strFormat$5[ebp]
  00170	50		 push	 eax
  00171	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ

; 79   : 		memoryDC.SetBkMode(TRANSPARENT);

  00177	8b 5d d8	 mov	 ebx, DWORD PTR _memoryDC$GSCopy$1$[ebp]
  0017a	83 c4 10	 add	 esp, 16			; 00000010H
  0017d	8b cb		 mov	 ecx, ebx
  0017f	6a 01		 push	 1
  00181	e8 00 00 00 00	 call	 ?SetBkMode@CDC@@QAEHH@Z	; CDC::SetBkMode

; 80   : 
; 81   : 		SIZE size;
; 82   : 		::GetTextExtentPoint32(memoryDC.m_hDC, "0", 1, &size);

  00186	8d 45 c0	 lea	 eax, DWORD PTR _size$4[ebp]
  00189	50		 push	 eax
  0018a	6a 01		 push	 1
  0018c	68 00 00 00 00	 push	 OFFSET ??_C@_01GBGANLPD@0@
  00191	ff 73 04	 push	 DWORD PTR [ebx+4]
  00194	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTextExtentPoint32A@16
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

  0019a	8b 4d d4	 mov	 ecx, DWORD PTR _str$6[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  0019d	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  001a0	2b 07		 sub	 eax, DWORD PTR [edi]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp

; 87   : 		int nbottom = ntop + size.cy;

  001a2	8b 7d c4	 mov	 edi, DWORD PTR _size$4[ebp+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

  001a5	8b 49 f4	 mov	 ecx, DWORD PTR [ecx-12]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp

; 85   : 		int nleft = (rect.Width() - (str.GetLength() * size.cx)) / 2;

  001a8	0f af 4d c0	 imul	 ecx, DWORD PTR _size$4[ebp]

; 88   : 		
; 89   : 		memoryDC.MoveTo(nleft - 2, ntop - 3);

  001ac	6a 02		 push	 2
  001ae	2b c1		 sub	 eax, ecx
  001b0	99		 cdq
  001b1	2b c2		 sub	 eax, edx
  001b3	d1 f8		 sar	 eax, 1
  001b5	89 45 dc	 mov	 DWORD PTR _nleft$1$[ebp], eax
  001b8	8d 1c 01	 lea	 ebx, DWORD PTR [ecx+eax]
  001bb	8b 4d d8	 mov	 ecx, DWORD PTR _memoryDC$GSCopy$1$[ebp]
  001be	83 c0 fe	 add	 eax, -2			; fffffffeH
  001c1	50		 push	 eax
  001c2	8d 45 b4	 lea	 eax, DWORD PTR $T2[ebp]
  001c5	50		 push	 eax
  001c6	e8 00 00 00 00	 call	 ?MoveTo@CDC@@QAE?AVCPoint@@HH@Z ; CDC::MoveTo

; 90   : 		memoryDC.LineTo(nleft - 2, nbottom + 1);

  001cb	8b 45 dc	 mov	 eax, DWORD PTR _nleft$1$[ebp]
  001ce	83 c7 06	 add	 edi, 6
  001d1	8b 4d d8	 mov	 ecx, DWORD PTR _memoryDC$GSCopy$1$[ebp]
  001d4	83 c0 fe	 add	 eax, -2			; fffffffeH
  001d7	57		 push	 edi
  001d8	50		 push	 eax
  001d9	e8 00 00 00 00	 call	 ?LineTo@CDC@@QAEHHH@Z	; CDC::LineTo

; 91   : 		memoryDC.LineTo(nright + 2, nbottom + 1);

  001de	57		 push	 edi
  001df	8b 7d d8	 mov	 edi, DWORD PTR _memoryDC$GSCopy$1$[ebp]
  001e2	83 c3 02	 add	 ebx, 2
  001e5	53		 push	 ebx
  001e6	8b cf		 mov	 ecx, edi
  001e8	e8 00 00 00 00	 call	 ?LineTo@CDC@@QAEHHH@Z	; CDC::LineTo

; 92   : 		memoryDC.LineTo(nright + 2, ntop - 3);

  001ed	6a 02		 push	 2
  001ef	53		 push	 ebx
  001f0	8b cf		 mov	 ecx, edi
  001f2	e8 00 00 00 00	 call	 ?LineTo@CDC@@QAEHHH@Z	; CDC::LineTo

; 93   : 		memoryDC.LineTo(nleft - 2, ntop - 3); 

  001f7	8b 5d dc	 mov	 ebx, DWORD PTR _nleft$1$[ebp]
  001fa	8b cf		 mov	 ecx, edi
  001fc	6a 02		 push	 2
  001fe	8d 43 fe	 lea	 eax, DWORD PTR [ebx-2]
  00201	50		 push	 eax
  00202	e8 00 00 00 00	 call	 ?LineTo@CDC@@QAEHHH@Z	; CDC::LineTo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

  00207	8b 45 d4	 mov	 eax, DWORD PTR _str$6[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 574  : 	{ ASSERT(m_hDC != NULL); return TextOut(x, y, (LPCTSTR)str, (int)str.GetLength()); } // call virtual

  0020a	8b 17		 mov	 edx, DWORD PTR [edi]
  0020c	ff 70 f4	 push	 DWORD PTR [eax-12]
  0020f	8b cf		 mov	 ecx, edi
  00211	50		 push	 eax
  00212	6a 05		 push	 5
  00214	53		 push	 ebx
  00215	ff 52 64	 call	 DWORD PTR [edx+100]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp

; 96   : 	}

  00218	8d 4d d4	 lea	 ecx, DWORD PTR _str$6[ebp]
  0021b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00221	8d 4d d0	 lea	 ecx, DWORD PTR _strFormat$5[ebp]
  00224	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\DLL_Load\IMetaTable.h

; 1036 : 	{

  0022a	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 27   : 	{ ASSERT(hInstResource != NULL); afxCurrentResourceHandle = hInstResource; }

  00231	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp

; 98   : 	rect.top += nWritingItemInfoSpace;	// 종목코드와 종목명을 그린 영역은 이제 제외시키자!

  00236	8b 4d c8	 mov	 ecx, DWORD PTR _rect$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 27   : 	{ ASSERT(hInstResource != NULL); afxCurrentResourceHandle = hInstResource; }

  00239	89 70 0c	 mov	 DWORD PTR [eax+12], esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp

; 98   : 	rect.top += nWritingItemInfoSpace;	// 종목코드와 종목명을 그린 영역은 이제 제외시키자!

  0023c	8b 45 cc	 mov	 eax, DWORD PTR _nWritingItemInfoSpace$1$[ebp]
  0023f	01 41 04	 add	 DWORD PTR [ecx+4], eax
  00242	eb 03		 jmp	 SHORT $LN54@OnDrawStoc
$LN58@OnDrawStoc:
  00244	01 5f 04	 add	 DWORD PTR [edi+4], ebx
$LN54@OnDrawStoc:

; 99   : }

  00247	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0024a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00251	59		 pop	 ecx
  00252	5f		 pop	 edi
  00253	5e		 pop	 esi
  00254	5b		 pop	 ebx
  00255	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00258	33 cd		 xor	 ecx, ebp
  0025a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0025f	8b e5		 mov	 esp, ebp
  00261	5d		 pop	 ebp
  00262	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnDrawStockItemCode@CKTBChartCtrl@@QAEXAAVCDC@@AAVCRect@@@Z$0:
  00000	8d 4d bc	 lea	 ecx, DWORD PTR ___mlrs__$3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CMultiLanguageResourceSetter@@QAE@XZ ; CMultiLanguageResourceSetter::~CMultiLanguageResourceSetter
__unwindfunclet$?OnDrawStockItemCode@CKTBChartCtrl@@QAEXAAVCDC@@AAVCRect@@@Z$1:
  00008	8d 4d d0	 lea	 ecx, DWORD PTR _strFormat$5[ebp]
  0000b	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?OnDrawStockItemCode@CKTBChartCtrl@@QAEXAAVCDC@@AAVCRect@@@Z$2:
  00011	8d 4d d4	 lea	 ecx, DWORD PTR _str$6[ebp]
  00014	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?OnDrawStockItemCode@CKTBChartCtrl@@QAEXAAVCDC@@AAVCRect@@@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a b0	 mov	 ecx, DWORD PTR [edx-80]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnDrawStockItemCode@CKTBChartCtrl@@QAEXAAVCDC@@AAVCRect@@@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnDrawStockItemCode@CKTBChartCtrl@@QAEXAAVCDC@@AAVCRect@@@Z ENDP ; CKTBChartCtrl::OnDrawStockItemCode
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
;	COMDAT ?OnDrawForPrint@CKTBChartCtrl@@QAEXAAVCDC@@AAVCBitmap@@VCRect@@H@Z
_TEXT	SEGMENT
_BlockColor$1 = -80					; size = 12
_pOldFont$1$ = -68					; size = 4
$T2 = -64						; size = 4
$T3 = -60						; size = 4
$T4 = -60						; size = 4
_this$GSCopy$1$ = -56					; size = 4
$T5 = -52						; size = 16
$T6 = -36						; size = 16
_rect$ = -36						; size = 16
_rect$ = -20						; size = 16
_rect$ = -20						; size = 16
_BlockColor2$7 = -16					; size = 12
__$ArrayPad$ = -4					; size = 4
_memoryDC$ = 8						; size = 4
_bufferBitmap$ = 12					; size = 4
_rcSource$ = 16						; size = 16
_bScreenColor$ = 32					; size = 4
?OnDrawForPrint@CKTBChartCtrl@@QAEXAAVCDC@@AAVCBitmap@@VCRect@@H@Z PROC ; CKTBChartCtrl::OnDrawForPrint, COMDAT
; _this$ = ecx

; 36   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 37   : 	CRect rect(rcSource);

  00010	0f 10 45 10	 movups	 xmm0, XMMWORD PTR _rcSource$[ebp]
  00014	53		 push	 ebx
  00015	8b 5d 08	 mov	 ebx, DWORD PTR _memoryDC$[ebp]
  00018	56		 push	 esi
  00019	8b f1		 mov	 esi, ecx

; 38   : 	// (2003.12.23, 배승원) Resource Manager 적용을 개선한다.
; 39   : 	CFont* pOldFont = (CFont*) memoryDC.SelectObject( m_pRscFont);

  0001b	8b cb		 mov	 ecx, ebx
  0001d	57		 push	 edi
  0001e	8b 03		 mov	 eax, DWORD PTR [ebx]
  00020	89 75 c8	 mov	 DWORD PTR _this$GSCopy$1$[ebp], esi
  00023	ff b6 b4 04 00
	00		 push	 DWORD PTR [esi+1204]
  00029	0f 11 45 ec	 movups	 XMMWORD PTR _rect$[ebp], xmm0
  0002d	ff 50 30	 call	 DWORD PTR [eax+48]
  00030	89 45 bc	 mov	 DWORD PTR _pOldFont$1$[ebp], eax

; 40   : 
; 41   : 	OnDrawStockItemCode(memoryDC, rect); // 차트에서의 종목명과 종목이름을 memoryDC에 그린다.

  00033	8b ce		 mov	 ecx, esi
  00035	8d 45 ec	 lea	 eax, DWORD PTR _rect$[ebp]
  00038	50		 push	 eax
  00039	53		 push	 ebx
  0003a	e8 00 00 00 00	 call	 ?OnDrawStockItemCode@CKTBChartCtrl@@QAEXAAVCDC@@AAVCRect@@@Z ; CKTBChartCtrl::OnDrawStockItemCode

; 42   : 
; 43   : 	if(bScreenColor)

  0003f	83 7d 20 00	 cmp	 DWORD PTR _bScreenColor$[ebp], 0
  00043	8b 8e 34 03 00
	00		 mov	 ecx, DWORD PTR [esi+820]
  00049	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR _rect$[ebp]
  0004d	74 49		 je	 SHORT $LN2@OnDrawForP

; 44   : 		OnDrawUsingScreencolor(memoryDC, bufferBitmap, rect);	// 차트를 memoryDC에 그림

  0004f	0f 11 45 ec	 movups	 XMMWORD PTR _rect$[ebp], xmm0

; 134  : 	m_pMainBlock->SetAllBlockRegion(rect);

  00053	8b 01		 mov	 eax, DWORD PTR [ecx]
  00055	8d 55 ec	 lea	 edx, DWORD PTR _rect$[ebp]
  00058	52		 push	 edx
  00059	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]

; 135  : 
; 136  : 	DrawChart( memoryDC, memoryDC, rect);

  0005f	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR _rect$[ebp]
  00063	6a 00		 push	 0
  00065	83 ec 10	 sub	 esp, 16			; 00000010H
  00068	8b ce		 mov	 ecx, esi
  0006a	8b c4		 mov	 eax, esp
  0006c	53		 push	 ebx
  0006d	53		 push	 ebx
  0006e	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00071	e8 00 00 00 00	 call	 ?DrawChart@CKTBChartCtrl@@QAEXAAVCDC@@0VCRect@@H@Z ; CKTBChartCtrl::DrawChart

; 137  : 
; 138  : 	// (2004.10.19, 배승원) Block Region 복원은 이용 이후 바로 적용한다.
; 139  : 	m_pMainBlock->SetAllBlockRegion(GetMainBlockRegion());

  00076	8b b6 34 03 00
	00		 mov	 esi, DWORD PTR [esi+820]
  0007c	8d 45 dc	 lea	 eax, DWORD PTR $T6[ebp]
  0007f	8b 4d c8	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00082	50		 push	 eax
  00083	8b 3e		 mov	 edi, DWORD PTR [esi]
  00085	e8 00 00 00 00	 call	 ?GetMainBlockRegion@CKTBChartCtrl@@QAE?AVCRect@@XZ ; CKTBChartCtrl::GetMainBlockRegion
  0008a	50		 push	 eax
  0008b	8b ce		 mov	 ecx, esi
  0008d	ff 97 a0 00 00
	00		 call	 DWORD PTR [edi+160]

; 44   : 		OnDrawUsingScreencolor(memoryDC, bufferBitmap, rect);	// 차트를 memoryDC에 그림

  00093	e9 11 01 00 00	 jmp	 $LN3@OnDrawForP
$LN2@OnDrawForP:

; 45   : 	else
; 46   : 		OnDrawUsingOptimizingcolor(memoryDC, bufferBitmap, rect);	// 간단하게 표현된 색으로 차트를 그림

  00098	0f 11 45 dc	 movups	 XMMWORD PTR _rect$[ebp], xmm0

; 111  : 	m_pMainBlock->SetAllBlockRegion(rect);

  0009c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0009e	8d 55 dc	 lea	 edx, DWORD PTR _rect$[ebp]
  000a1	52		 push	 edx
  000a2	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]

; 112  : 	m_pMainBlock->SetBackgroundColor(RGB(255,255,255));

  000a8	8b 8e 34 03 00
	00		 mov	 ecx, DWORD PTR [esi+820]
  000ae	8d 55 c4	 lea	 edx, DWORD PTR $T4[ebp]
  000b1	c7 45 c4 ff ff
	ff 00		 mov	 DWORD PTR $T4[ebp], 16777215 ; 00ffffffH
  000b8	52		 push	 edx
  000b9	8b 01		 mov	 eax, DWORD PTR [ecx]
  000bb	ff 90 ac 00 00
	00		 call	 DWORD PTR [eax+172]

; 113  : 	CGraphRegionColor BlockColor(RGB(255,255,255), RGB(255,255,255), m_clrBlockBorder);

  000c1	8d be 68 03 00
	00		 lea	 edi, DWORD PTR [esi+872]
  000c7	c7 45 c4 ff ff
	ff 00		 mov	 DWORD PTR $T3[ebp], 16777215 ; 00ffffffH
  000ce	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_??0CGraphRegionColor@@QAE@ABK00@Z
  000d4	8d 45 c4	 lea	 eax, DWORD PTR $T3[ebp]
  000d7	57		 push	 edi
  000d8	50		 push	 eax
  000d9	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  000dc	c7 45 c0 ff ff
	ff 00		 mov	 DWORD PTR $T2[ebp], 16777215 ; 00ffffffH
  000e3	50		 push	 eax
  000e4	8d 4d b0	 lea	 ecx, DWORD PTR _BlockColor$1[ebp]
  000e7	ff d6		 call	 esi

; 114  : 	m_pMainBlock->SetGraphRegionColor(BlockColor);

  000e9	8b 4d c8	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  000ec	8d 55 b0	 lea	 edx, DWORD PTR _BlockColor$1[ebp]
  000ef	52		 push	 edx
  000f0	8b 89 34 03 00
	00		 mov	 ecx, DWORD PTR [ecx+820]
  000f6	8b 01		 mov	 eax, DWORD PTR [ecx]
  000f8	ff 90 b0 00 00
	00		 call	 DWORD PTR [eax+176]

; 115  : 	m_pMainBlock->SetGraphBackgroundGap(0, 0);

  000fe	8b 45 c8	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00101	6a 00		 push	 0
  00103	6a 00		 push	 0
  00105	8b 88 34 03 00
	00		 mov	 ecx, DWORD PTR [eax+820]
  0010b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0010d	ff 90 10 01 00
	00		 call	 DWORD PTR [eax+272]

; 116  : 
; 117  : 	DrawChart( memoryDC, memoryDC, rect);

  00113	0f 10 45 dc	 movups	 xmm0, XMMWORD PTR _rect$[ebp]
  00117	8b 4d c8	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  0011a	6a 00		 push	 0
  0011c	83 ec 10	 sub	 esp, 16			; 00000010H
  0011f	8b c4		 mov	 eax, esp
  00121	53		 push	 ebx
  00122	53		 push	 ebx
  00123	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00126	e8 00 00 00 00	 call	 ?DrawChart@CKTBChartCtrl@@QAEXAAVCDC@@0VCRect@@H@Z ; CKTBChartCtrl::DrawChart

; 118  : 
; 119  : 	//다시 되돌리기..
; 120  : 	m_pMainBlock->SetBackgroundColor(m_clrBackground);

  0012b	8b 45 c8	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  0012e	8b 88 34 03 00
	00		 mov	 ecx, DWORD PTR [eax+820]
  00134	05 5c 03 00 00	 add	 eax, 860		; 0000035cH
  00139	50		 push	 eax
  0013a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0013c	ff 92 ac 00 00
	00		 call	 DWORD PTR [edx+172]

; 121  : 	CGraphRegionColor BlockColor2(m_clrBlock, m_clrLattice, m_clrBlockBorder);

  00142	57		 push	 edi
  00143	8b 7d c8	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
  00146	8d 4d f0	 lea	 ecx, DWORD PTR _BlockColor2$7[ebp]
  00149	8d 87 98 03 00
	00		 lea	 eax, DWORD PTR [edi+920]
  0014f	50		 push	 eax
  00150	8d 87 64 03 00
	00		 lea	 eax, DWORD PTR [edi+868]
  00156	50		 push	 eax
  00157	ff d6		 call	 esi

; 122  : 	m_pMainBlock->SetGraphRegionColor(BlockColor2);

  00159	8b 8f 34 03 00
	00		 mov	 ecx, DWORD PTR [edi+820]
  0015f	8d 55 f0	 lea	 edx, DWORD PTR _BlockColor2$7[ebp]
  00162	52		 push	 edx
  00163	8b 01		 mov	 eax, DWORD PTR [ecx]
  00165	ff 90 b0 00 00
	00		 call	 DWORD PTR [eax+176]

; 123  : 	m_pMainBlock->SetGraphBackgroundGap(m_nHorzGap, m_nVertGap);

  0016b	8b 8f 34 03 00
	00		 mov	 ecx, DWORD PTR [edi+820]
  00171	0f bf 87 ae 02
	00 00		 movsx	 eax, WORD PTR [edi+686]
  00178	50		 push	 eax
  00179	0f bf 87 ac 02
	00 00		 movsx	 eax, WORD PTR [edi+684]
  00180	8b 11		 mov	 edx, DWORD PTR [ecx]
  00182	50		 push	 eax
  00183	ff 92 10 01 00
	00		 call	 DWORD PTR [edx+272]

; 124  : 	// (2004.10.19, 배승원) Block Region 복원은 이용 이후 바로 적용한다.
; 125  : 	m_pMainBlock->SetAllBlockRegion(GetMainBlockRegion());

  00189	8b 87 34 03 00
	00		 mov	 eax, DWORD PTR [edi+820]
  0018f	8b cf		 mov	 ecx, edi
  00191	8b 30		 mov	 esi, DWORD PTR [eax]
  00193	8d 45 cc	 lea	 eax, DWORD PTR $T5[ebp]
  00196	50		 push	 eax
  00197	e8 00 00 00 00	 call	 ?GetMainBlockRegion@CKTBChartCtrl@@QAE?AVCRect@@XZ ; CKTBChartCtrl::GetMainBlockRegion
  0019c	8b 8f 34 03 00
	00		 mov	 ecx, DWORD PTR [edi+820]
  001a2	50		 push	 eax
  001a3	ff 96 a0 00 00
	00		 call	 DWORD PTR [esi+160]
$LN3@OnDrawForP:

; 47   : 	
; 48   : 	memoryDC.SelectObject(pOldFont);

  001a9	8b 03		 mov	 eax, DWORD PTR [ebx]
  001ab	8b cb		 mov	 ecx, ebx
  001ad	ff 75 bc	 push	 DWORD PTR _pOldFont$1$[ebp]
  001b0	ff 50 30	 call	 DWORD PTR [eax+48]

; 49   : }

  001b3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001b6	5f		 pop	 edi
  001b7	5e		 pop	 esi
  001b8	33 cd		 xor	 ecx, ebp
  001ba	5b		 pop	 ebx
  001bb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001c0	8b e5		 mov	 esp, ebp
  001c2	5d		 pop	 ebp
  001c3	c2 1c 00	 ret	 28			; 0000001cH
?OnDrawForPrint@CKTBChartCtrl@@QAEXAAVCDC@@AAVCBitmap@@VCRect@@H@Z ENDP ; CKTBChartCtrl::OnDrawForPrint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\DLL_Load\IMetaTable.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\DLL_Load\IMetaTable.h
;	COMDAT ??1CMultiLanguageResourceSetter@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CMultiLanguageResourceSetter@@QAE@XZ PROC		; CMultiLanguageResourceSetter::~CMultiLanguageResourceSetter, COMDAT
; _this$ = ecx

; 1036 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CMultiLanguageResourceSetter@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1037 : 		AfxSetResourceHandle( m_hInstance);

  00023	8b 31		 mov	 esi, DWORD PTR [ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 27   : 	{ ASSERT(hInstResource != NULL); afxCurrentResourceHandle = hInstResource; }

  00025	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
  0002a	89 70 0c	 mov	 DWORD PTR [eax+12], esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\DLL_Load\IMetaTable.h

; 1038 : 	}

  0002d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00030	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00037	59		 pop	 ecx
  00038	5e		 pop	 esi
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
  0003d	cc		 int	 3
  0003e	cc		 int	 3
  0003f	cc		 int	 3
  00040	cc		 int	 3
  00041	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CMultiLanguageResourceSetter@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CMultiLanguageResourceSetter@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CMultiLanguageResourceSetter@@QAE@XZ ENDP		; CMultiLanguageResourceSetter::~CMultiLanguageResourceSetter
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\KTBChart\KTBChartDrawToImage.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
