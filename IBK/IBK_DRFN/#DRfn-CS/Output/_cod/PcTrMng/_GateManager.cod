; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30148.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\PcTrMng\_GateManager.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0P@BKKCOCLK@RMSG_INTERFACE@		; `string'
PUBLIC	??_C@_0BB@GOOPDKI@RMSG_GETPCTRDATA@		; `string'
PUBLIC	??_C@_0BB@JPACFCL@RMSG_SETPCTRDATA@		; `string'
PUBLIC	??_C@_0BB@EPGJDGDK@RMSG_CONCERNHWND@		; `string'
PUBLIC	??_C@_0BA@JHANHJCN@RMSG_INTREQUEST@		; `string'
PUBLIC	??_C@_0BF@MNPNIDPI@RMSG_GWANSIMREGISTER@	; `string'
;	COMDAT ??_C@_0BF@MNPNIDPI@RMSG_GWANSIMREGISTER@
CONST	SEGMENT
??_C@_0BF@MNPNIDPI@RMSG_GWANSIMREGISTER@ DB 'RMSG_GWANSIMREGISTER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JHANHJCN@RMSG_INTREQUEST@
CONST	SEGMENT
??_C@_0BA@JHANHJCN@RMSG_INTREQUEST@ DB 'RMSG_INTREQUEST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EPGJDGDK@RMSG_CONCERNHWND@
CONST	SEGMENT
??_C@_0BB@EPGJDGDK@RMSG_CONCERNHWND@ DB 'RMSG_CONCERNHWND', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JPACFCL@RMSG_SETPCTRDATA@
CONST	SEGMENT
??_C@_0BB@JPACFCL@RMSG_SETPCTRDATA@ DB 'RMSG_SETPCTRDATA', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GOOPDKI@RMSG_GETPCTRDATA@
CONST	SEGMENT
??_C@_0BB@GOOPDKI@RMSG_GETPCTRDATA@ DB 'RMSG_GETPCTRDATA', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BKKCOCLK@RMSG_INTERFACE@
CONST	SEGMENT
??_C@_0P@BKKCOCLK@RMSG_INTERFACE@ DB 'RMSG_INTERFACE', 00H ; `string'
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?GetInterface@CGateManager@@UAGJHJ@Z		; CGateManager::GetInterface
PUBLIC	??_C@_0BJ@EBHLMJOA@?$CFs?$MA?$LL?5Load?G?R?5?$LM?v?5?$LO?x?$LN?$MA?$LE?O?$LE?Y?4@ ; `string'
PUBLIC	??_C@_0N@HGGCPMBP@GetInferface@			; `string'
PUBLIC	??_C@_09HPHLJGCO@Terminate@			; `string'
PUBLIC	??_C@_0BB@GLCHGPPD@SetPcTrInterface@		; `string'
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__LoadLibraryA@4:PROC
EXTRN	__imp__RegisterWindowMessageA@4:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?theApp@@3VCPcTrMngApp@@A:BYTE			; theApp
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?RMSG_INTERFACE@@3IB DD 01H DUP (?)			; RMSG_INTERFACE
?RMSG_GETPCTRDATA@@3IB DD 01H DUP (?)			; RMSG_GETPCTRDATA
?RMSG_SETPCTRDATA@@3IB DD 01H DUP (?)			; RMSG_SETPCTRDATA
?RMSG_CONCERNHWND@@3IB DD 01H DUP (?)			; RMSG_CONCERNHWND
?RMSG_INTREQUEST@@3IB DD 01H DUP (?)			; RMSG_INTREQUEST
?RMSG_GWANSIMREGISTER@@3IB DD 01H DUP (?)		; RMSG_GWANSIMREGISTER
_BSS	ENDS
CRT$XCU	SEGMENT
?RMSG_INTERFACE$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_INTERFACE@@YAXXZ ; RMSG_INTERFACE$initializer$
CRT$XCU	ENDS
;	COMDAT ??_C@_0BB@GLCHGPPD@SetPcTrInterface@
CONST	SEGMENT
??_C@_0BB@GLCHGPPD@SetPcTrInterface@ DB 'SetPcTrInterface', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HPHLJGCO@Terminate@
CONST	SEGMENT
??_C@_09HPHLJGCO@Terminate@ DB 'Terminate', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HGGCPMBP@GetInferface@
CONST	SEGMENT
??_C@_0N@HGGCPMBP@GetInferface@ DB 'GetInferface', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EBHLMJOA@?$CFs?$MA?$LL?5Load?G?R?5?$LM?v?5?$LO?x?$LN?$MA?$LE?O?$LE?Y?4@
CONST	SEGMENT
??_C@_0BJ@EBHLMJOA@?$CFs?$MA?$LL?5Load?G?R?5?$LM?v?5?$LO?x?$LN?$MA?$LE?O?$LE?Y?4@ DB '%'
	DB	's', 0c0H, 0bbH, ' Load', 0c7H, 0d2H, ' ', 0bcH, 0f6H, ' ', 0beH
	DB	0f8H, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H, '.', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadLib@CTreeListMngLoader@@QAEPAUHINSTANCE__@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadLib@CTreeListMngLoader@@QAEPAUHINSTANCE__@@XZ$0
__ehfuncinfo$?LoadLib@CTreeListMngLoader@@QAEPAUHINSTANCE__@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadLib@CTreeListMngLoader@@QAEPAUHINSTANCE__@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
?RMSG_GETPCTRDATA$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_GETPCTRDATA@@YAXXZ ; RMSG_GETPCTRDATA$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_SETPCTRDATA$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_SETPCTRDATA@@YAXXZ ; RMSG_SETPCTRDATA$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_CONCERNHWND$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_CONCERNHWND@@YAXXZ ; RMSG_CONCERNHWND$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_INTREQUEST$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_INTREQUEST@@YAXXZ ; RMSG_INTREQUEST$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_GWANSIMREGISTER$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_GWANSIMREGISTER@@YAXXZ ; RMSG_GWANSIMREGISTER$initializer$
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_GateManager.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\LoadPctrWinix.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_GateManager.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\LoadTreeListMng.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_GateManager.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\LoadTreeListMng.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_GateManager.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\LoadPartnerMng.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_GateManager.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\LoadPartnerMng.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_GateManager.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\LoadPartnerMng.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_GateManager.cpp
;	COMDAT ?GetInterface@CGateManager@@UAGJHJ@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_szMsg$1 = 12						; size = 4
_nID$ = 12						; size = 4
_dwUnUse$ = 16						; size = 4
?GetInterface@CGateManager@@UAGJHJ@Z PROC		; CGateManager::GetInterface, COMDAT

; 8    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 9    : 	if(nID<0 || nID>=MAX_INTERFACE)

  00004	8b 7d 0c	 mov	 edi, DWORD PTR _nID$[ebp]
  00007	83 ff 46	 cmp	 edi, 70			; 00000046H
  0000a	0f 87 84 01 00
	00		 ja	 $LN5@GetInterfa

; 11   : 
; 12   : 	switch(nID)

  00010	8d 47 f7	 lea	 eax, DWORD PTR [edi-9]
  00013	83 f8 2a	 cmp	 eax, 42			; 0000002aH
  00016	0f 87 6c 01 00
	00		 ja	 $LN46@GetInterfa
  0001c	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN48@GetInterfa[eax]
  00023	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN49@GetInterfa[eax*4]
$LN6@GetInterfa:

; 13   : 	{
; 14   : 		case 9: //UUID_IAUGwanManager
; 15   : 			if(theApp.m_uaInterface[nID].pInterface==NULL )

  0002a	83 3c bd 24 03
	00 00 00	 cmp	 DWORD PTR ?theApp@@3VCPcTrMngApp@@A[edi*4+804], 0
  00032	0f 85 50 01 00
	00		 jne	 $LN46@GetInterfa

; 16   : 			{
; 17   : 				//(1) 관심Manager요청
; 18   : 				theApp.m_uaInterface[nID].pInterface = theApp.m_pPctrWinixLoader->PTMGetInferface(1, NULL);

  00038	a1 ac 04 00 00	 mov	 eax, DWORD PTR ?theApp@@3VCPcTrMngApp@@A+1196
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\LoadPctrWinix.h

; 81   : 		if(!m_hLib ||!m_fpGetInferface)	 return NULL;

  0003d	83 38 00	 cmp	 DWORD PTR [eax], 0
  00040	74 19		 je	 SHORT $LN22@GetInterfa
  00042	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00045	85 c0		 test	 eax, eax
  00047	74 12		 je	 SHORT $LN22@GetInterfa

; 82   : 
; 83   : 		return m_fpGetInferface(nID, pKey);

  00049	6a 00		 push	 0
  0004b	6a 01		 push	 1
  0004d	ff d0		 call	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_GateManager.cpp

; 56   : 	return theApp.m_uaInterface[nID].pInterface;

  0004f	89 04 bd 24 03
	00 00		 mov	 DWORD PTR ?theApp@@3VCPcTrMngApp@@A[edi*4+804], eax
  00056	5f		 pop	 edi

; 57   : }

  00057	5d		 pop	 ebp
  00058	c2 0c 00	 ret	 12			; 0000000cH
$LN22@GetInterfa:

; 56   : 	return theApp.m_uaInterface[nID].pInterface;

  0005b	33 c0		 xor	 eax, eax
  0005d	89 04 bd 24 03
	00 00		 mov	 DWORD PTR ?theApp@@3VCPcTrMngApp@@A[edi*4+804], eax
  00064	5f		 pop	 edi

; 57   : }

  00065	5d		 pop	 ebp
  00066	c2 0c 00	 ret	 12			; 0000000cH
$LN10@GetInterfa:

; 19   : 			}
; 20   : 			break;
; 21   : 		case 11:
; 22   : 			if(theApp.m_uaInterface[11].pInterface==NULL )
; 23   : 			{
; 24   : //				theApp.m_uaInterface[11].pInterface = theApp.m_OrderLoader.OrderMng_GetInferface(0);
; 25   : 			}
; 26   : 			break;
; 27   : 		case 26:
; 28   : 			if(theApp.m_uaInterface[nID].pInterface==NULL)

  00069	83 3c bd 24 03
	00 00 00	 cmp	 DWORD PTR ?theApp@@3VCPcTrMngApp@@A[edi*4+804], 0
  00071	0f 85 11 01 00
	00		 jne	 $LN46@GetInterfa

; 29   : 			{
; 30   : 				theApp.m_pTLMngLoader->LoadLib();

  00077	53		 push	 ebx
  00078	8b 1d 40 04 00
	00		 mov	 ebx, DWORD PTR ?theApp@@3VCPcTrMngApp@@A+1088
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\LoadTreeListMng.h

; 45   : 		hLib  = (HINSTANCE) ::LoadLibrary((LPCTSTR)m_szLibName);

  0007e	ff 73 04	 push	 DWORD PTR [ebx+4]
  00081	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryA@4

; 46   : 		if( hLib == NULL)

  00087	85 c0		 test	 eax, eax
  00089	75 29		 jne	 SHORT $LN25@GetInterfa

; 47   : 		{
; 48   : 			CString szMsg;

  0008b	8d 4d 0c	 lea	 ecx, DWORD PTR _szMsg$1[ebp]
  0008e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 49   : 			szMsg.Format("%s을 Load할 수 없습니다.", m_szLibName);

  00094	ff 73 04	 push	 DWORD PTR [ebx+4]
  00097	8d 45 0c	 lea	 eax, DWORD PTR _szMsg$1[ebp]
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@EBHLMJOA@?$CFs?$MA?$LL?5Load?G?R?5?$LM?v?5?$LO?x?$LN?$MA?$LE?O?$LE?Y?4@
  0009f	50		 push	 eax
  000a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  000a6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 50   : 			TRACE("%s\n", szMsg);
; 51   : 			// AfxMessageBox(szMsg);
; 52   : 			return NULL;

  000a9	8d 4d 0c	 lea	 ecx, DWORD PTR _szMsg$1[ebp]
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000b2	eb 21		 jmp	 SHORT $LN29@GetInterfa
$LN25@GetInterfa:

; 76   : 		m_fpGetInferface = (FpTLM_GetInferface)::GetProcAddress(m_hLib, "GetInferface");

  000b4	68 00 00 00 00	 push	 OFFSET ??_C@_0N@HGGCPMBP@GetInferface@
  000b9	50		 push	 eax

; 54   : 		m_hLib = hLib;

  000ba	89 03		 mov	 DWORD PTR [ebx], eax

; 76   : 		m_fpGetInferface = (FpTLM_GetInferface)::GetProcAddress(m_hLib, "GetInferface");

  000bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8

; 77   : 		m_fpTLM_Terminate  = (FpTLM_Terminate)::GetProcAddress(m_hLib, "Terminate");

  000c2	68 00 00 00 00	 push	 OFFSET ??_C@_09HPHLJGCO@Terminate@
  000c7	ff 33		 push	 DWORD PTR [ebx]
  000c9	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  000cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  000d2	89 43 0c	 mov	 DWORD PTR [ebx+12], eax
$LN29@GetInterfa:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_GateManager.cpp

; 31   : 				theApp.m_uaInterface[nID].pInterface = theApp.m_pTLMngLoader->TLM_GetInferface((long)theApp.m_uaInterface[0].pInterface);

  000d5	a1 40 04 00 00	 mov	 eax, DWORD PTR ?theApp@@3VCPcTrMngApp@@A+1088
  000da	5b		 pop	 ebx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\LoadTreeListMng.h

; 83   : 		if(!m_hLib ||!m_fpGetInferface)	 return NULL;

  000db	83 38 00	 cmp	 DWORD PTR [eax], 0
  000de	0f 84 77 ff ff
	ff		 je	 $LN22@GetInterfa
  000e4	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  000e7	85 c0		 test	 eax, eax
  000e9	0f 84 6c ff ff
	ff		 je	 $LN22@GetInterfa

; 84   : 
; 85   : 		return m_fpGetInferface(pIGateMng);

  000ef	ff 35 24 03 00
	00		 push	 DWORD PTR ?theApp@@3VCPcTrMngApp@@A+804
  000f5	ff d0		 call	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_GateManager.cpp

; 56   : 	return theApp.m_uaInterface[nID].pInterface;

  000f7	89 04 bd 24 03
	00 00		 mov	 DWORD PTR ?theApp@@3VCPcTrMngApp@@A[edi*4+804], eax
  000fe	5f		 pop	 edi

; 57   : }

  000ff	5d		 pop	 ebp
  00100	c2 0c 00	 ret	 12			; 0000000cH
$LN14@GetInterfa:

; 32   : 			}
; 33   : 		case 27:
; 34   : 			if(theApp.m_uaInterface[nID].pInterface==NULL)
; 35   : 			{
; 36   : //				theApp.m_pECWMngLoader->LoadLib();
; 37   : //				theApp.m_uaInterface[nID].pInterface = theApp.m_pECWMngLoader->ECW_GetInferface((long)theApp.m_uaInterface[0].pInterface);
; 38   : 			}
; 39   : 			break;
; 40   : 		case 50: //UUID_IPartnerSvrManager:
; 41   : 			if(theApp.m_uaInterface[nID].pInterface==NULL )

  00103	83 3c bd 24 03
	00 00 00	 cmp	 DWORD PTR ?theApp@@3VCPcTrMngApp@@A[edi*4+804], 0
  0010b	75 7b		 jne	 SHORT $LN46@GetInterfa

; 42   : 			{
; 43   : 				theApp.m_uaInterface[nID].pInterface = theApp.m_pPtMngLoader->PTMGetInferface(0, NULL);

  0010d	a1 a8 04 00 00	 mov	 eax, DWORD PTR ?theApp@@3VCPcTrMngApp@@A+1192
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\LoadPartnerMng.h

; 79   : 		if(!m_hLib ||!m_fpGetInferface)	 return NULL;

  00112	83 38 00	 cmp	 DWORD PTR [eax], 0
  00115	0f 84 40 ff ff
	ff		 je	 $LN22@GetInterfa
  0011b	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0011e	85 c0		 test	 eax, eax
  00120	0f 84 35 ff ff
	ff		 je	 $LN22@GetInterfa

; 80   : 
; 81   : 		return m_fpGetInferface(nID, pKey);

  00126	6a 00		 push	 0
  00128	6a 00		 push	 0
  0012a	ff d0		 call	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_GateManager.cpp

; 56   : 	return theApp.m_uaInterface[nID].pInterface;

  0012c	89 04 bd 24 03
	00 00		 mov	 DWORD PTR ?theApp@@3VCPcTrMngApp@@A[edi*4+804], eax
  00133	5f		 pop	 edi

; 57   : }

  00134	5d		 pop	 ebp
  00135	c2 0c 00	 ret	 12			; 0000000cH
$LN16@GetInterfa:

; 44   : 			}
; 45   : 			break;
; 46   : 		case 51: //UUID_IChartBozoMsgManager:
; 47   : 			if(theApp.m_uaInterface[nID].pInterface==NULL )

  00138	83 3c bd 24 03
	00 00 00	 cmp	 DWORD PTR ?theApp@@3VCPcTrMngApp@@A[edi*4+804], 0
  00140	75 46		 jne	 SHORT $LN46@GetInterfa

; 49   : 				theApp.m_uaInterface[nID].pInterface = theApp.m_pPtMngLoader->PTMGetInferface(1, NULL);

  00142	a1 a8 04 00 00	 mov	 eax, DWORD PTR ?theApp@@3VCPcTrMngApp@@A+1192
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\LoadPartnerMng.h

; 79   : 		if(!m_hLib ||!m_fpGetInferface)	 return NULL;

  00147	83 38 00	 cmp	 DWORD PTR [eax], 0
  0014a	74 0f		 je	 SHORT $LN42@GetInterfa
  0014c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0014f	85 c0		 test	 eax, eax
  00151	74 08		 je	 SHORT $LN42@GetInterfa

; 80   : 
; 81   : 		return m_fpGetInferface(nID, pKey);

  00153	6a 00		 push	 0
  00155	6a 01		 push	 1
  00157	ff d0		 call	 eax
  00159	eb 02		 jmp	 SHORT $LN40@GetInterfa
$LN42@GetInterfa:

; 79   : 		if(!m_hLib ||!m_fpGetInferface)	 return NULL;

  0015b	33 c0		 xor	 eax, eax
$LN40@GetInterfa:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_GateManager.cpp

; 49   : 				theApp.m_uaInterface[nID].pInterface = theApp.m_pPtMngLoader->PTMGetInferface(1, NULL);

  0015d	89 04 bd 24 03
	00 00		 mov	 DWORD PTR ?theApp@@3VCPcTrMngApp@@A[edi*4+804], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\LoadPartnerMng.h

; 99   : 		if(!m_hLib)	 return ;

  00164	a1 a8 04 00 00	 mov	 eax, DWORD PTR ?theApp@@3VCPcTrMngApp@@A+1192
  00169	8b 00		 mov	 eax, DWORD PTR [eax]
  0016b	85 c0		 test	 eax, eax
  0016d	74 19		 je	 SHORT $LN46@GetInterfa

; 100  : 		
; 101  : 		FpPTM_SetPcTrInterface m_fpFn
; 102  : 			= (FpPTM_SetPcTrInterface)::GetProcAddress(m_hLib, "SetPcTrInterface");

  0016f	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GLCHGPPD@SetPcTrInterface@
  00174	50		 push	 eax
  00175	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8

; 103  : 
; 104  : 		if(m_fpFn)	m_fpFn(nID, pKey);

  0017b	85 c0		 test	 eax, eax
  0017d	74 09		 je	 SHORT $LN46@GetInterfa
  0017f	68 dc 00 00 00	 push	 OFFSET ?theApp@@3VCPcTrMngApp@@A+220
  00184	6a 00		 push	 0
  00186	ff d0		 call	 eax
$LN46@GetInterfa:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_GateManager.cpp

; 56   : 	return theApp.m_uaInterface[nID].pInterface;

  00188	8b 04 bd 24 03
	00 00		 mov	 eax, DWORD PTR ?theApp@@3VCPcTrMngApp@@A[edi*4+804]
  0018f	5f		 pop	 edi

; 57   : }

  00190	5d		 pop	 ebp
  00191	c2 0c 00	 ret	 12			; 0000000cH
$LN5@GetInterfa:

; 10   : 		return 0L;

  00194	33 c0		 xor	 eax, eax
  00196	5f		 pop	 edi

; 57   : }

  00197	5d		 pop	 ebp
  00198	c2 0c 00	 ret	 12			; 0000000cH
  0019b	90		 npad	 1
$LN49@GetInterfa:
  0019c	00 00 00 00	 DD	 $LN6@GetInterfa
  001a0	00 00 00 00	 DD	 $LN46@GetInterfa
  001a4	00 00 00 00	 DD	 $LN10@GetInterfa
  001a8	00 00 00 00	 DD	 $LN14@GetInterfa
  001ac	00 00 00 00	 DD	 $LN16@GetInterfa
  001b0	00 00 00 00	 DD	 $LN46@GetInterfa
$LN48@GetInterfa:
  001b4	00		 DB	 0
  001b5	05		 DB	 5
  001b6	01		 DB	 1
  001b7	05		 DB	 5
  001b8	05		 DB	 5
  001b9	05		 DB	 5
  001ba	05		 DB	 5
  001bb	05		 DB	 5
  001bc	05		 DB	 5
  001bd	05		 DB	 5
  001be	05		 DB	 5
  001bf	05		 DB	 5
  001c0	05		 DB	 5
  001c1	05		 DB	 5
  001c2	05		 DB	 5
  001c3	05		 DB	 5
  001c4	05		 DB	 5
  001c5	02		 DB	 2
  001c6	01		 DB	 1
  001c7	05		 DB	 5
  001c8	05		 DB	 5
  001c9	05		 DB	 5
  001ca	05		 DB	 5
  001cb	05		 DB	 5
  001cc	05		 DB	 5
  001cd	05		 DB	 5
  001ce	05		 DB	 5
  001cf	05		 DB	 5
  001d0	05		 DB	 5
  001d1	05		 DB	 5
  001d2	05		 DB	 5
  001d3	05		 DB	 5
  001d4	05		 DB	 5
  001d5	05		 DB	 5
  001d6	05		 DB	 5
  001d7	05		 DB	 5
  001d8	05		 DB	 5
  001d9	05		 DB	 5
  001da	05		 DB	 5
  001db	05		 DB	 5
  001dc	05		 DB	 5
  001dd	03		 DB	 3
  001de	04		 DB	 4
?GetInterface@CGateManager@@UAGJHJ@Z ENDP		; CGateManager::GetInterface
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\IAUGwanMng.h
;	COMDAT ??__ERMSG_GWANSIMREGISTER@@YAXXZ
text$di	SEGMENT
??__ERMSG_GWANSIMREGISTER@@YAXXZ PROC			; `dynamic initializer for 'RMSG_GWANSIMREGISTER'', COMDAT

; 173  : const UINT RMSG_GWANSIMREGISTER		=   ::RegisterWindowMessage("RMSG_GWANSIMREGISTER");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MNPNIDPI@RMSG_GWANSIMREGISTER@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_GWANSIMREGISTER@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_GWANSIMREGISTER@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_GWANSIMREGISTER''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\Define_Gwansim.h
;	COMDAT ??__ERMSG_INTREQUEST@@YAXXZ
text$di	SEGMENT
??__ERMSG_INTREQUEST@@YAXXZ PROC			; `dynamic initializer for 'RMSG_INTREQUEST'', COMDAT

; 10   : const UINT RMSG_INTREQUEST = ::RegisterWindowMessage(_T("RMSG_INTREQUEST") );

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JHANHJCN@RMSG_INTREQUEST@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_INTREQUEST@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_INTREQUEST@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_INTREQUEST''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\Define_Gwansim.h
;	COMDAT ??__ERMSG_CONCERNHWND@@YAXXZ
text$di	SEGMENT
??__ERMSG_CONCERNHWND@@YAXXZ PROC			; `dynamic initializer for 'RMSG_CONCERNHWND'', COMDAT

; 9    : const UINT RMSG_CONCERNHWND = ::RegisterWindowMessage(_T("RMSG_CONCERNHWND") );

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@EPGJDGDK@RMSG_CONCERNHWND@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_CONCERNHWND@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_CONCERNHWND@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_CONCERNHWND''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\IBaseDefine.h
;	COMDAT ??__ERMSG_SETPCTRDATA@@YAXXZ
text$di	SEGMENT
??__ERMSG_SETPCTRDATA@@YAXXZ PROC			; `dynamic initializer for 'RMSG_SETPCTRDATA'', COMDAT

; 172  : const UINT RMSG_SETPCTRDATA = ::RegisterWindowMessage("RMSG_SETPCTRDATA");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@JPACFCL@RMSG_SETPCTRDATA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_SETPCTRDATA@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_SETPCTRDATA@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_SETPCTRDATA''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\IBaseDefine.h
;	COMDAT ??__ERMSG_GETPCTRDATA@@YAXXZ
text$di	SEGMENT
??__ERMSG_GETPCTRDATA@@YAXXZ PROC			; `dynamic initializer for 'RMSG_GETPCTRDATA'', COMDAT

; 171  : const UINT RMSG_GETPCTRDATA = ::RegisterWindowMessage("RMSG_GETPCTRDATA");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GOOPDKI@RMSG_GETPCTRDATA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_GETPCTRDATA@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_GETPCTRDATA@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_GETPCTRDATA''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\IBaseDefine.h
;	COMDAT ??__ERMSG_INTERFACE@@YAXXZ
text$di	SEGMENT
??__ERMSG_INTERFACE@@YAXXZ PROC				; `dynamic initializer for 'RMSG_INTERFACE'', COMDAT

; 170  : const UINT RMSG_INTERFACE = ::RegisterWindowMessage("RMSG_INTERFACE");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BKKCOCLK@RMSG_INTERFACE@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_INTERFACE@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_INTERFACE@@YAXXZ ENDP				; `dynamic initializer for 'RMSG_INTERFACE''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_GateManager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_GateManager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
