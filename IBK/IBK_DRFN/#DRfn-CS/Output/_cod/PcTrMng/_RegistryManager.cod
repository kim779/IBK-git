; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\PcTrMng\_RegistryManager.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0P@BKKCOCLK@RMSG_INTERFACE@		; `string'
PUBLIC	??_C@_0BB@GOOPDKI@RMSG_GETPCTRDATA@		; `string'
PUBLIC	??_C@_0BB@JPACFCL@RMSG_SETPCTRDATA@		; `string'
PUBLIC	??_C@_0BB@EPGJDGDK@RMSG_CONCERNHWND@		; `string'
PUBLIC	??_C@_0BA@JHANHJCN@RMSG_INTREQUEST@		; `string'
PUBLIC	??_C@_0BF@MNPNIDPI@RMSG_GWANSIMREGISTER@	; `string'
;	COMDAT ??_C@_0BF@MNPNIDPI@RMSG_GWANSIMREGISTER@
CONST	SEGMENT
??_C@_0BF@MNPNIDPI@RMSG_GWANSIMREGISTER@ DB 'RMSG_GWANSIMREGISTER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JHANHJCN@RMSG_INTREQUEST@
CONST	SEGMENT
??_C@_0BA@JHANHJCN@RMSG_INTREQUEST@ DB 'RMSG_INTREQUEST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EPGJDGDK@RMSG_CONCERNHWND@
CONST	SEGMENT
??_C@_0BB@EPGJDGDK@RMSG_CONCERNHWND@ DB 'RMSG_CONCERNHWND', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JPACFCL@RMSG_SETPCTRDATA@
CONST	SEGMENT
??_C@_0BB@JPACFCL@RMSG_SETPCTRDATA@ DB 'RMSG_SETPCTRDATA', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GOOPDKI@RMSG_GETPCTRDATA@
CONST	SEGMENT
??_C@_0BB@GOOPDKI@RMSG_GETPCTRDATA@ DB 'RMSG_GETPCTRDATA', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BKKCOCLK@RMSG_INTERFACE@
CONST	SEGMENT
??_C@_0P@BKKCOCLK@RMSG_INTERFACE@ DB 'RMSG_INTERFACE', 00H ; `string'
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?SetStrValue@CRegistryManager@@UAGXPAUHKEY__@@PBD11@Z ; CRegistryManager::SetStrValue
PUBLIC	?GetStrValue@CRegistryManager@@UAGPBDPAUHKEY__@@PBD11@Z ; CRegistryManager::GetStrValue
EXTRN	__imp__RegisterWindowMessageA@4:PROC
EXTRN	__imp__RegCloseKey@4:PROC
EXTRN	__imp__RegCreateKeyExA@36:PROC
EXTRN	__imp__RegOpenKeyA@12:PROC
EXTRN	__imp__RegQueryValueExA@24:PROC
EXTRN	__imp__RegSetValueExA@24:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBE@Z:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?RMSG_INTERFACE@@3IB DD 01H DUP (?)			; RMSG_INTERFACE
?RMSG_GETPCTRDATA@@3IB DD 01H DUP (?)			; RMSG_GETPCTRDATA
?RMSG_SETPCTRDATA@@3IB DD 01H DUP (?)			; RMSG_SETPCTRDATA
?RMSG_CONCERNHWND@@3IB DD 01H DUP (?)			; RMSG_CONCERNHWND
?RMSG_INTREQUEST@@3IB DD 01H DUP (?)			; RMSG_INTREQUEST
?RMSG_GWANSIMREGISTER@@3IB DD 01H DUP (?)		; RMSG_GWANSIMREGISTER
_BSS	ENDS
CRT$XCU	SEGMENT
?RMSG_INTERFACE$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_INTERFACE@@YAXXZ ; RMSG_INTERFACE$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_GETPCTRDATA$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_GETPCTRDATA@@YAXXZ ; RMSG_GETPCTRDATA$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_SETPCTRDATA$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_SETPCTRDATA@@YAXXZ ; RMSG_SETPCTRDATA$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_CONCERNHWND$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_CONCERNHWND@@YAXXZ ; RMSG_CONCERNHWND$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_INTREQUEST$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_INTREQUEST@@YAXXZ ; RMSG_INTREQUEST$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_GWANSIMREGISTER$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_GWANSIMREGISTER@@YAXXZ ; RMSG_GWANSIMREGISTER$initializer$
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_RegistryManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_RegistryManager.cpp
;	COMDAT ?GetStrValue@CRegistryManager@@UAGPBDPAUHKEY__@@PBD11@Z
_TEXT	SEGMENT
_type$ = -148						; size = 4
_size$ = -144						; size = 4
_str$1 = -140						; size = 4
_openKey$ = -136					; size = 4
_Data$ = -132						; size = 128
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_hHkey$ = 12						; size = 4
_strkey$ = 16						; size = 4
_strsubkey$ = 20					; size = 4
_strDefault$ = 24					; size = 4
?GetStrValue@CRegistryManager@@UAGPBDPAUHKEY__@@PBD11@Z PROC ; CRegistryManager::GetStrValue, COMDAT

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 00 00
	00		 sub	 esp, 148		; 00000094H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 45 10	 mov	 eax, DWORD PTR _strkey$[ebp]

; 32   : 	LONG err;
; 33   : 	HKEY openKey;
; 34   : 	BYTE Data[128];
; 35   : 	DWORD type;
; 36   : 	DWORD size=sizeof(Data);
; 37   : 	
; 38   : 	err=::RegOpenKey(hHkey,strkey,&openKey);

  00016	8d 95 78 ff ff
	ff		 lea	 edx, DWORD PTR _openKey$[ebp]
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR _hHkey$[ebp]
  0001f	56		 push	 esi
  00020	8b 75 14	 mov	 esi, DWORD PTR _strsubkey$[ebp]
  00023	52		 push	 edx
  00024	50		 push	 eax
  00025	51		 push	 ecx
  00026	c7 85 70 ff ff
	ff 80 00 00 00	 mov	 DWORD PTR _size$[ebp], 128 ; 00000080H
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegOpenKeyA@12

; 39   : 	
; 40   : 	if(ERROR ==err)

  00036	85 c0		 test	 eax, eax
  00038	75 6c		 jne	 SHORT $LN3@GetStrValu

; 41   : 		err=::RegQueryValueEx(openKey,strsubkey,0,&type,Data,&size);

  0003a	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _size$[ebp]
  00040	50		 push	 eax
  00041	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _Data$[ebp]
  00047	50		 push	 eax
  00048	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _type$[ebp]
  0004e	50		 push	 eax
  0004f	6a 00		 push	 0
  00051	56		 push	 esi
  00052	ff b5 78 ff ff
	ff		 push	 DWORD PTR _openKey$[ebp]
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegQueryValueExA@24

; 42   : 	
; 43   : 	if(err==ERROR_SUCCESS)

  0005e	85 c0		 test	 eax, eax
  00060	75 44		 jne	 SHORT $LN3@GetStrValu

; 44   : 	{
; 45   : 		::RegCloseKey(openKey);

  00062	ff b5 78 ff ff
	ff		 push	 DWORD PTR _openKey$[ebp]
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCloseKey@4

; 46   : 		CString str(Data);

  0006e	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _Data$[ebp]
  00074	50		 push	 eax
  00075	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR _str$1[ebp]
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBE@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 377  : 		return( m_pszData );

  00081	8b b5 74 ff ff
	ff		 mov	 esi, DWORD PTR _str$1[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_RegistryManager.cpp

; 47   : 		return str;

  00087	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR _str$1[ebp]
  0008d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00093	8b c6		 mov	 eax, esi
  00095	5e		 pop	 esi

; 50   : 	
; 51   : 	return strDefault;
; 52   : }

  00096	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00099	33 cd		 xor	 ecx, ebp
  0009b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 14 00	 ret	 20			; 00000014H
$LN3@GetStrValu:

; 48   : 	}
; 49   : 	::RegCloseKey(openKey);

  000a6	ff b5 78 ff ff
	ff		 push	 DWORD PTR _openKey$[ebp]
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCloseKey@4

; 50   : 	
; 51   : 	return strDefault;
; 52   : }

  000b2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b5	8b 45 18	 mov	 eax, DWORD PTR _strDefault$[ebp]
  000b8	33 cd		 xor	 ecx, ebp
  000ba	5e		 pop	 esi
  000bb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 14 00	 ret	 20			; 00000014H
?GetStrValue@CRegistryManager@@UAGPBDPAUHKEY__@@PBD11@Z ENDP ; CRegistryManager::GetStrValue
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_RegistryManager.cpp
;	COMDAT ?SetStrValue@CRegistryManager@@UAGXPAUHKEY__@@PBD11@Z
_TEXT	SEGMENT
_type$ = -8						; size = 4
_hKey$ = -4						; size = 4
_this$ = 8						; size = 4
_hHkey$ = 12						; size = 4
_strKey$ = 16						; size = 4
_strSubKey$ = 20					; size = 4
_strKeyValue$ = 24					; size = 4
?SetStrValue@CRegistryManager@@UAGXPAUHKEY__@@PBD11@Z PROC ; CRegistryManager::SetStrValue, COMDAT

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 6    : 	HKEY hKey;
; 7    : 	DWORD type; 
; 8    : 
; 9    : 	::RegCreateKeyEx(hHkey,

  00006	8d 45 f8	 lea	 eax, DWORD PTR _type$[ebp]
  00009	56		 push	 esi
  0000a	50		 push	 eax
  0000b	8d 45 fc	 lea	 eax, DWORD PTR _hKey$[ebp]
  0000e	50		 push	 eax
  0000f	6a 00		 push	 0
  00011	68 3f 00 0f 00	 push	 983103			; 000f003fH
  00016	6a 00		 push	 0
  00018	6a 00		 push	 0
  0001a	6a 00		 push	 0
  0001c	ff 75 10	 push	 DWORD PTR _strKey$[ebp]
  0001f	ff 75 0c	 push	 DWORD PTR _hHkey$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCreateKeyExA@36

; 10   : 				 (LPCTSTR)strKey,0,
; 11   : 				 NULL,
; 12   : 				 REG_OPTION_NON_VOLATILE ,
; 13   : 				 KEY_CREATE_SUB_KEY|KEY_ALL_ACCESS ,
; 14   : 				 NULL,
; 15   : 				 &hKey,
; 16   : 				 &type
; 17   : 				 );
; 18   : 
; 19   : 	::RegSetValueEx(hKey,

  00028	8b 55 18	 mov	 edx, DWORD PTR _strKeyValue$[ebp]
  0002b	8b c2		 mov	 eax, edx
  0002d	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$LL3@SetStrValu:
  00030	8a 08		 mov	 cl, BYTE PTR [eax]
  00032	40		 inc	 eax
  00033	84 c9		 test	 cl, cl
  00035	75 f9		 jne	 SHORT $LL3@SetStrValu
  00037	2b c6		 sub	 eax, esi
  00039	50		 push	 eax
  0003a	52		 push	 edx
  0003b	6a 01		 push	 1
  0003d	6a 00		 push	 0
  0003f	ff 75 14	 push	 DWORD PTR _strSubKey$[ebp]
  00042	ff 75 fc	 push	 DWORD PTR _hKey$[ebp]
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegSetValueExA@24

; 20   : 				(LPCTSTR)strSubKey,
; 21   : 				0,
; 22   : 				REG_SZ,
; 23   : 				(const BYTE *)strKeyValue,
; 24   : 				(DWORD) strlen(strKeyValue)
; 25   : 				);
; 26   : 
; 27   : 	::RegCloseKey(hKey);

  0004b	ff 75 fc	 push	 DWORD PTR _hKey$[ebp]
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCloseKey@4
  00054	5e		 pop	 esi

; 28   : }

  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 14 00	 ret	 20			; 00000014H
?SetStrValue@CRegistryManager@@UAGXPAUHKEY__@@PBD11@Z ENDP ; CRegistryManager::SetStrValue
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\IAUGwanMng.h
;	COMDAT ??__ERMSG_GWANSIMREGISTER@@YAXXZ
text$di	SEGMENT
??__ERMSG_GWANSIMREGISTER@@YAXXZ PROC			; `dynamic initializer for 'RMSG_GWANSIMREGISTER'', COMDAT

; 173  : const UINT RMSG_GWANSIMREGISTER		=   ::RegisterWindowMessage("RMSG_GWANSIMREGISTER");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MNPNIDPI@RMSG_GWANSIMREGISTER@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_GWANSIMREGISTER@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_GWANSIMREGISTER@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_GWANSIMREGISTER''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\Define_Gwansim.h
;	COMDAT ??__ERMSG_INTREQUEST@@YAXXZ
text$di	SEGMENT
??__ERMSG_INTREQUEST@@YAXXZ PROC			; `dynamic initializer for 'RMSG_INTREQUEST'', COMDAT

; 10   : const UINT RMSG_INTREQUEST = ::RegisterWindowMessage(_T("RMSG_INTREQUEST") );

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JHANHJCN@RMSG_INTREQUEST@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_INTREQUEST@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_INTREQUEST@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_INTREQUEST''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\Define_Gwansim.h
;	COMDAT ??__ERMSG_CONCERNHWND@@YAXXZ
text$di	SEGMENT
??__ERMSG_CONCERNHWND@@YAXXZ PROC			; `dynamic initializer for 'RMSG_CONCERNHWND'', COMDAT

; 9    : const UINT RMSG_CONCERNHWND = ::RegisterWindowMessage(_T("RMSG_CONCERNHWND") );

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@EPGJDGDK@RMSG_CONCERNHWND@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_CONCERNHWND@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_CONCERNHWND@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_CONCERNHWND''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\IBaseDefine.h
;	COMDAT ??__ERMSG_SETPCTRDATA@@YAXXZ
text$di	SEGMENT
??__ERMSG_SETPCTRDATA@@YAXXZ PROC			; `dynamic initializer for 'RMSG_SETPCTRDATA'', COMDAT

; 172  : const UINT RMSG_SETPCTRDATA = ::RegisterWindowMessage("RMSG_SETPCTRDATA");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@JPACFCL@RMSG_SETPCTRDATA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_SETPCTRDATA@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_SETPCTRDATA@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_SETPCTRDATA''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\IBaseDefine.h
;	COMDAT ??__ERMSG_GETPCTRDATA@@YAXXZ
text$di	SEGMENT
??__ERMSG_GETPCTRDATA@@YAXXZ PROC			; `dynamic initializer for 'RMSG_GETPCTRDATA'', COMDAT

; 171  : const UINT RMSG_GETPCTRDATA = ::RegisterWindowMessage("RMSG_GETPCTRDATA");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GOOPDKI@RMSG_GETPCTRDATA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_GETPCTRDATA@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_GETPCTRDATA@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_GETPCTRDATA''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\IBaseDefine.h
;	COMDAT ??__ERMSG_INTERFACE@@YAXXZ
text$di	SEGMENT
??__ERMSG_INTERFACE@@YAXXZ PROC				; `dynamic initializer for 'RMSG_INTERFACE'', COMDAT

; 170  : const UINT RMSG_INTERFACE = ::RegisterWindowMessage("RMSG_INTERFACE");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BKKCOCLK@RMSG_INTERFACE@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_INTERFACE@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_INTERFACE@@YAXXZ ENDP				; `dynamic initializer for 'RMSG_INTERFACE''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_RegistryManager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\_RegistryManager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
