; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30148.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\PcTrMng\CodeOcx.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?m_osInterfaceName@CDispCodeOcx@@2PAPA_WA	; CDispCodeOcx::m_osInterfaceName
PUBLIC	??_C@_1BA@OILBOOAM@?$AAG?$AAe?$AAt?$AAB?$AAa?$AAs?$AAe@ ; `string'
PUBLIC	??_C@_1BA@MHMBAGAC@?$AAS?$AAe?$AAt?$AAI?$AAn?$AAf?$AAo@ ; `string'
PUBLIC	??_C@_1BM@COAEOJMH@?$AAS?$AAh?$AAo?$AAw?$AAC?$AAo?$AAd?$AAe?$AAT?$AAa?$AAb?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1CE@LOOJGLFH@?$AAS?$AAh?$AAo?$AAw?$AAM?$AAo?$AAd?$AAe?$AAC?$AAo?$AAd?$AAe?$AAT?$AAa?$AAb@ ; `string'
PUBLIC	??_C@_1BM@BPMECEHL@?$AAS?$AAe?$AAt?$AAD?$AAa?$AAt?$AAa?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg@ ; `string'
PUBLIC	??_C@_1BC@FOFHDBLP@?$AAI?$AAn?$AAi?$AAt?$AAD?$AAa?$AAt?$AAa@ ; `string'
PUBLIC	??_C@_1BI@BLILMHNM@?$AAG?$AAe?$AAt?$AAC?$AAo?$AAd?$AAe?$AAI?$AAn?$AAf?$AAo@ ; `string'
PUBLIC	??_C@_1BI@MHMNEKNF@?$AAS?$AAe?$AAt?$AAP?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn@ ; `string'
PUBLIC	??_C@_1BO@CALNKGDD@?$AAG?$AAe?$AAt?$AAM?$AAa?$AAx?$AAH?$AAa?$AAn?$AAg?$AAS?$AAa?$AAG?$AAa@ ; `string'
PUBLIC	??_C@_1DE@PPLGPNDE@?$AAS?$AAh?$AAo?$AAw?$AAC?$AAo?$AAd?$AAe?$AAT?$AAa?$AAb?$AAl?$AAe?$AAW?$AAi@ ; `string'
PUBLIC	??_C@_1CE@NBPGMFLA@?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AAA?$AAl?$AAl?$AAL?$AAi?$AAs?$AAt?$AAD?$AAa@ ; `string'
PUBLIC	??_C@_1BM@IEHPJJCJ@?$AAI?$AAn?$AAs?$AAe?$AAr?$AAt?$AAH?$AAi?$AAs?$AAt?$AAo?$AAr?$AAy@ ; `string'
PUBLIC	??_C@_1BO@FIDDDLNP@?$AAG?$AAe?$AAt?$AAH?$AAi?$AAs?$AAt?$AAo?$AAr?$AAy?$AAL?$AAi?$AAs?$AAt@ ; `string'
PUBLIC	??_C@_1CM@CONLGJCL@?$AAG?$AAe?$AAt?$AAG?$AAl?$AAo?$AAb?$AAa?$AAl?$AAD?$AAa?$AAt?$AAa?$AAT?$AAy@ ; `string'
PUBLIC	??_C@_1BO@JOPCNJNJ@?$AAG?$AAe?$AAt?$AAC?$AAo?$AAd?$AAe?$AAP?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_1CC@NKLKJNGI@?$AAG?$AAe?$AAt?$AAB?$AAa?$AAs?$AAe?$AAC?$AAo?$AAd?$AAe?$AAT?$AAa?$AAb?$AAl@ ; `string'
PUBLIC	??_C@_1BE@KFAGKBDF@?$AAG?$AAe?$AAt?$AAR?$AAs?$AAc?$AAM?$AAn?$AAg@ ; `string'
;	COMDAT ??_C@_1BE@KFAGKBDF@?$AAG?$AAe?$AAt?$AAR?$AAs?$AAc?$AAM?$AAn?$AAg@
CONST	SEGMENT
??_C@_1BE@KFAGKBDF@?$AAG?$AAe?$AAt?$AAR?$AAs?$AAc?$AAM?$AAn?$AAg@ DB 'G', 00H
	DB	'e', 00H, 't', 00H, 'R', 00H, 's', 00H, 'c', 00H, 'M', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@NKLKJNGI@?$AAG?$AAe?$AAt?$AAB?$AAa?$AAs?$AAe?$AAC?$AAo?$AAd?$AAe?$AAT?$AAa?$AAb?$AAl@
CONST	SEGMENT
??_C@_1CC@NKLKJNGI@?$AAG?$AAe?$AAt?$AAB?$AAa?$AAs?$AAe?$AAC?$AAo?$AAd?$AAe?$AAT?$AAa?$AAb?$AAl@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'T', 00H, 'a', 00H, 'b'
	DB	00H, 'l', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@JOPCNJNJ@?$AAG?$AAe?$AAt?$AAC?$AAo?$AAd?$AAe?$AAP?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr@
CONST	SEGMENT
??_C@_1BO@JOPCNJNJ@?$AAG?$AAe?$AAt?$AAC?$AAo?$AAd?$AAe?$AAP?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'C', 00H, 'o', 00H, 'd', 00H, 'e', 00H
	DB	'P', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@CONLGJCL@?$AAG?$AAe?$AAt?$AAG?$AAl?$AAo?$AAb?$AAa?$AAl?$AAD?$AAa?$AAt?$AAa?$AAT?$AAy@
CONST	SEGMENT
??_C@_1CM@CONLGJCL@?$AAG?$AAe?$AAt?$AAG?$AAl?$AAo?$AAb?$AAa?$AAl?$AAD?$AAa?$AAt?$AAa?$AAT?$AAy@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'G', 00H, 'l', 00H, 'o', 00H, 'b', 00H
	DB	'a', 00H, 'l', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 'T'
	DB	00H, 'y', 00H, 'p', 00H, 'e', 00H, 'L', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@FIDDDLNP@?$AAG?$AAe?$AAt?$AAH?$AAi?$AAs?$AAt?$AAo?$AAr?$AAy?$AAL?$AAi?$AAs?$AAt@
CONST	SEGMENT
??_C@_1BO@FIDDDLNP@?$AAG?$AAe?$AAt?$AAH?$AAi?$AAs?$AAt?$AAo?$AAr?$AAy?$AAL?$AAi?$AAs?$AAt@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'H', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@IEHPJJCJ@?$AAI?$AAn?$AAs?$AAe?$AAr?$AAt?$AAH?$AAi?$AAs?$AAt?$AAo?$AAr?$AAy@
CONST	SEGMENT
??_C@_1BM@IEHPJJCJ@?$AAI?$AAn?$AAs?$AAe?$AAr?$AAt?$AAH?$AAi?$AAs?$AAt?$AAo?$AAr?$AAy@ DB 'I'
	DB	00H, 'n', 00H, 's', 00H, 'e', 00H, 'r', 00H, 't', 00H, 'H', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@NBPGMFLA@?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AAA?$AAl?$AAl?$AAL?$AAi?$AAs?$AAt?$AAD?$AAa@
CONST	SEGMENT
??_C@_1CE@NBPGMFLA@?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AAA?$AAl?$AAl?$AAL?$AAi?$AAs?$AAt?$AAD?$AAa@ DB 'R'
	DB	00H, 'e', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 'D'
	DB	00H, 'a', 00H, 't', 00H, 'a', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@PPLGPNDE@?$AAS?$AAh?$AAo?$AAw?$AAC?$AAo?$AAd?$AAe?$AAT?$AAa?$AAb?$AAl?$AAe?$AAW?$AAi@
CONST	SEGMENT
??_C@_1DE@PPLGPNDE@?$AAS?$AAh?$AAo?$AAw?$AAC?$AAo?$AAd?$AAe?$AAT?$AAa?$AAb?$AAl?$AAe?$AAW?$AAi@ DB 'S'
	DB	00H, 'h', 00H, 'o', 00H, 'w', 00H, 'C', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, 'T', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'W'
	DB	00H, 'i', 00H, 't', 00H, 'h', 00H, 'P', 00H, 'o', 00H, 's', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@CALNKGDD@?$AAG?$AAe?$AAt?$AAM?$AAa?$AAx?$AAH?$AAa?$AAn?$AAg?$AAS?$AAa?$AAG?$AAa@
CONST	SEGMENT
??_C@_1BO@CALNKGDD@?$AAG?$AAe?$AAt?$AAM?$AAa?$AAx?$AAH?$AAa?$AAn?$AAg?$AAS?$AAa?$AAG?$AAa@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'M', 00H, 'a', 00H, 'x', 00H, 'H', 00H
	DB	'a', 00H, 'n', 00H, 'g', 00H, 'S', 00H, 'a', 00H, 'G', 00H, 'a'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@MHMNEKNF@?$AAS?$AAe?$AAt?$AAP?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn@
CONST	SEGMENT
??_C@_1BI@MHMNEKNF@?$AAS?$AAe?$AAt?$AAP?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'P', 00H, 'o', 00H, 's', 00H, 'i', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@BLILMHNM@?$AAG?$AAe?$AAt?$AAC?$AAo?$AAd?$AAe?$AAI?$AAn?$AAf?$AAo@
CONST	SEGMENT
??_C@_1BI@BLILMHNM@?$AAG?$AAe?$AAt?$AAC?$AAo?$AAd?$AAe?$AAI?$AAn?$AAf?$AAo@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'C', 00H, 'o', 00H, 'd', 00H, 'e', 00H
	DB	'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@FOFHDBLP@?$AAI?$AAn?$AAi?$AAt?$AAD?$AAa?$AAt?$AAa@
CONST	SEGMENT
??_C@_1BC@FOFHDBLP@?$AAI?$AAn?$AAi?$AAt?$AAD?$AAa?$AAt?$AAa@ DB 'I', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@BPMECEHL@?$AAS?$AAe?$AAt?$AAD?$AAa?$AAt?$AAa?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg@
CONST	SEGMENT
??_C@_1BM@BPMECEHL@?$AAS?$AAe?$AAt?$AAD?$AAa?$AAt?$AAa?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H
	DB	'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@LOOJGLFH@?$AAS?$AAh?$AAo?$AAw?$AAM?$AAo?$AAd?$AAe?$AAC?$AAo?$AAd?$AAe?$AAT?$AAa?$AAb@
CONST	SEGMENT
??_C@_1CE@LOOJGLFH@?$AAS?$AAh?$AAo?$AAw?$AAM?$AAo?$AAd?$AAe?$AAC?$AAo?$AAd?$AAe?$AAT?$AAa?$AAb@ DB 'S'
	DB	00H, 'h', 00H, 'o', 00H, 'w', 00H, 'M', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, 'C', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'T', 00H, 'a'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@COAEOJMH@?$AAS?$AAh?$AAo?$AAw?$AAC?$AAo?$AAd?$AAe?$AAT?$AAa?$AAb?$AAl?$AAe@
CONST	SEGMENT
??_C@_1BM@COAEOJMH@?$AAS?$AAh?$AAo?$AAw?$AAC?$AAo?$AAd?$AAe?$AAT?$AAa?$AAb?$AAl?$AAe@ DB 'S'
	DB	00H, 'h', 00H, 'o', 00H, 'w', 00H, 'C', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, 'T', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@MHMBAGAC@?$AAS?$AAe?$AAt?$AAI?$AAn?$AAf?$AAo@
CONST	SEGMENT
??_C@_1BA@MHMBAGAC@?$AAS?$AAe?$AAt?$AAI?$AAn?$AAf?$AAo@ DB 'S', 00H, 'e', 00H
	DB	't', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@OILBOOAM@?$AAG?$AAe?$AAt?$AAB?$AAa?$AAs?$AAe@
CONST	SEGMENT
??_C@_1BA@OILBOOAM@?$AAG?$AAe?$AAt?$AAB?$AAa?$AAs?$AAe@ DB 'G', 00H, 'e', 00H
	DB	't', 00H, 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
?m_osInterfaceName@CDispCodeOcx@@2PAPA_WA DD FLAT:??_C@_1BA@OILBOOAM@?$AAG?$AAe?$AAt?$AAB?$AAa?$AAs?$AAe@ ; CDispCodeOcx::m_osInterfaceName
	DD	FLAT:??_C@_1BA@MHMBAGAC@?$AAS?$AAe?$AAt?$AAI?$AAn?$AAf?$AAo@
	DD	FLAT:??_C@_1BM@COAEOJMH@?$AAS?$AAh?$AAo?$AAw?$AAC?$AAo?$AAd?$AAe?$AAT?$AAa?$AAb?$AAl?$AAe@
	DD	FLAT:??_C@_1CE@LOOJGLFH@?$AAS?$AAh?$AAo?$AAw?$AAM?$AAo?$AAd?$AAe?$AAC?$AAo?$AAd?$AAe?$AAT?$AAa?$AAb@
	DD	FLAT:??_C@_1BM@BPMECEHL@?$AAS?$AAe?$AAt?$AAD?$AAa?$AAt?$AAa?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg@
	DD	FLAT:??_C@_1BC@FOFHDBLP@?$AAI?$AAn?$AAi?$AAt?$AAD?$AAa?$AAt?$AAa@
	DD	FLAT:??_C@_1BI@BLILMHNM@?$AAG?$AAe?$AAt?$AAC?$AAo?$AAd?$AAe?$AAI?$AAn?$AAf?$AAo@
	DD	FLAT:??_C@_1BI@MHMNEKNF@?$AAS?$AAe?$AAt?$AAP?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn@
	DD	FLAT:??_C@_1BO@CALNKGDD@?$AAG?$AAe?$AAt?$AAM?$AAa?$AAx?$AAH?$AAa?$AAn?$AAg?$AAS?$AAa?$AAG?$AAa@
	DD	FLAT:??_C@_1DE@PPLGPNDE@?$AAS?$AAh?$AAo?$AAw?$AAC?$AAo?$AAd?$AAe?$AAT?$AAa?$AAb?$AAl?$AAe?$AAW?$AAi@
	DD	FLAT:??_C@_1CE@NBPGMFLA@?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AAA?$AAl?$AAl?$AAL?$AAi?$AAs?$AAt?$AAD?$AAa@
	DD	FLAT:??_C@_1BM@IEHPJJCJ@?$AAI?$AAn?$AAs?$AAe?$AAr?$AAt?$AAH?$AAi?$AAs?$AAt?$AAo?$AAr?$AAy@
	DD	FLAT:??_C@_1BO@FIDDDLNP@?$AAG?$AAe?$AAt?$AAH?$AAi?$AAs?$AAt?$AAo?$AAr?$AAy?$AAL?$AAi?$AAs?$AAt@
	DD	FLAT:??_C@_1CM@CONLGJCL@?$AAG?$AAe?$AAt?$AAG?$AAl?$AAo?$AAb?$AAa?$AAl?$AAD?$AAa?$AAt?$AAa?$AAT?$AAy@
	DD	FLAT:??_C@_1BO@JOPCNJNJ@?$AAG?$AAe?$AAt?$AAC?$AAo?$AAd?$AAe?$AAP?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr@
	DD	FLAT:??_C@_1CC@NKLKJNGI@?$AAG?$AAe?$AAt?$AAB?$AAa?$AAs?$AAe?$AAC?$AAo?$AAd?$AAe?$AAT?$AAa?$AAb?$AAl@
	DD	FLAT:??_C@_1BE@KFAGKBDF@?$AAG?$AAe?$AAt?$AAR?$AAs?$AAc?$AAM?$AAn?$AAg@
_DATA	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0CDispCodeOcx@@QAE@XZ				; CDispCodeOcx::CDispCodeOcx
PUBLIC	??1CDispCodeOcx@@QAE@XZ				; CDispCodeOcx::~CDispCodeOcx
PUBLIC	?InitInterfaceName@CDispCodeOcx@@QAEXPAUIDispatch@@@Z ; CDispCodeOcx::InitInterfaceName
PUBLIC	?GetBaseCodeTable@CDispCodeOcx@@QAEJXZ		; CDispCodeOcx::GetBaseCodeTable
PUBLIC	?SetInfo@CDispCodeOcx@@QAEXJ@Z			; CDispCodeOcx::SetInfo
PUBLIC	?ShowCodeTable@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@@Z ; CDispCodeOcx::ShowCodeTable
PUBLIC	?ShowModeCodeTable@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@@Z ; CDispCodeOcx::ShowModeCodeTable
PUBLIC	?SetDataString@CDispCodeOcx@@QAEXFPBD@Z		; CDispCodeOcx::SetDataString
PUBLIC	?InitData@CDispCodeOcx@@QAEHPBD@Z		; CDispCodeOcx::InitData
PUBLIC	?GetCodeInfo@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDF0@Z ; CDispCodeOcx::GetCodeInfo
PUBLIC	?SetPosition@CDispCodeOcx@@QAEXPBDFF@Z		; CDispCodeOcx::SetPosition
PUBLIC	?GetMaxHangSaGa@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CDispCodeOcx::GetMaxHangSaGa
PUBLIC	?ShowCodeTableWithPosition@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@FF@Z ; CDispCodeOcx::ShowCodeTableWithPosition
PUBLIC	?RemoveAllListData@CDispCodeOcx@@QAEHXZ		; CDispCodeOcx::RemoveAllListData
PUBLIC	?InsertHistory@CDispCodeOcx@@QAEHFJPBD0@Z	; CDispCodeOcx::InsertHistory
PUBLIC	?GetHistoryList@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@FJ@Z ; CDispCodeOcx::GetHistoryList
PUBLIC	?GetGlobalDataTypeList@CDispCodeOcx@@QAEJXZ	; CDispCodeOcx::GetGlobalDataTypeList
PUBLIC	?GetCodePointer@CDispCodeOcx@@QAEJPBD@Z		; CDispCodeOcx::GetCodePointer
PUBLIC	?GetRscMng@CDispCodeOcx@@QAEXJ@Z		; CDispCodeOcx::GetRscMng
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	___std_terminate:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	??0COleDispatchDriver@@QAE@XZ:PROC		; COleDispatchDriver::COleDispatchDriver
EXTRN	?ReleaseDispatch@COleDispatchDriver@@QAEXXZ:PROC ; COleDispatchDriver::ReleaseDispatch
EXTRN	?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ:PROC ; COleDispatchDriver::InvokeHelper
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_GUID_NULL:BYTE
EXTRN	___security_cookie:DWORD
;	COMDAT ?parms@?1??GetRscMng@CDispCodeOcx@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetRscMng@CDispCodeOcx@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CDispCodeOcx::GetRscMng'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??GetCodePointer@CDispCodeOcx@@QAEJPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetCodePointer@CDispCodeOcx@@QAEJPBD@Z@4PAEA DB 0eH, 00H ; `CDispCodeOcx::GetCodePointer'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??GetHistoryList@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@FJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetHistoryList@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@FJ@Z@4PAEA DB 02H
	DB	03H, 00H					; `CDispCodeOcx::GetHistoryList'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??InsertHistory@CDispCodeOcx@@QAEHFJPBD0@Z@4PAEA
_DATA	SEGMENT
?parms@?1??InsertHistory@CDispCodeOcx@@QAEHFJPBD0@Z@4PAEA DB 02H, 03H, 0eH
	DB	0eH, 00H					; `CDispCodeOcx::InsertHistory'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??ShowCodeTableWithPosition@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@FF@Z@4PAEA
_DATA	SEGMENT
?parms@?1??ShowCodeTableWithPosition@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@FF@Z@4PAEA DB 0eH
	DB	0cH, 02H, 02H, 00H				; `CDispCodeOcx::ShowCodeTableWithPosition'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetPosition@CDispCodeOcx@@QAEXPBDFF@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetPosition@CDispCodeOcx@@QAEXPBDFF@Z@4PAEA DB 0eH, 02H, 02H, 00H ; `CDispCodeOcx::SetPosition'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??GetCodeInfo@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDF0@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetCodeInfo@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDF0@Z@4PAEA DB 0eH
	DB	02H, 0eH, 00H				; `CDispCodeOcx::GetCodeInfo'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??InitData@CDispCodeOcx@@QAEHPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??InitData@CDispCodeOcx@@QAEHPBD@Z@4PAEA DB 0eH, 00H ; `CDispCodeOcx::InitData'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetDataString@CDispCodeOcx@@QAEXFPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetDataString@CDispCodeOcx@@QAEXFPBD@Z@4PAEA DB 02H, 0eH, 00H ; `CDispCodeOcx::SetDataString'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??ShowModeCodeTable@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@@Z@4PAEA
_DATA	SEGMENT
?parms@?1??ShowModeCodeTable@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@@Z@4PAEA DB 0eH
	DB	0cH, 00H					; `CDispCodeOcx::ShowModeCodeTable'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??ShowCodeTable@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@@Z@4PAEA
_DATA	SEGMENT
?parms@?1??ShowCodeTable@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@@Z@4PAEA DB 0eH
	DB	0cH, 00H					; `CDispCodeOcx::ShowCodeTable'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetInfo@CDispCodeOcx@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetInfo@CDispCodeOcx@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CDispCodeOcx::SetInfo'::`2'::parms
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetHistoryList@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@FJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetHistoryList@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@FJ@Z$0
__ehfuncinfo$?GetHistoryList@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@FJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetHistoryList@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@FJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetMaxHangSaGa@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetMaxHangSaGa@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0
__ehfuncinfo$?GetMaxHangSaGa@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetMaxHangSaGa@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCodeInfo@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDF0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCodeInfo@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDF0@Z$0
__ehfuncinfo$?GetCodeInfo@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDF0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCodeInfo@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDF0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CDispCodeOcx@@QAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1CDispCodeOcx@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CDispCodeOcx@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1COleDispatchDriver@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ?GetRscMng@CDispCodeOcx@@QAEXJ@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
_lKey$ = 8						; size = 4
?GetRscMng@CDispCodeOcx@@QAEXJ@Z PROC			; CDispCodeOcx::GetRscMng, COMDAT
; _this$ = ecx

; 191  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 192  : 	BOOL result;
; 193  : 	static BYTE parms[] =
; 194  : 		VTS_I4;
; 195  : 	InvokeHelper(m_pdID[IIx_GetRscMng], DISPATCH_METHOD, VT_EMPTY, (void*)&result, parms,

  00003	ff 75 08	 push	 DWORD PTR _lKey$[ebp]
  00006	8d 45 08	 lea	 eax, DWORD PTR _result$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??GetRscMng@CDispCodeOcx@@QAEXJ@Z@4PAEA
  0000e	50		 push	 eax
  0000f	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00012	6a 00		 push	 0
  00014	6a 01		 push	 1
  00016	ff 70 40	 push	 DWORD PTR [eax+64]
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  0001f	83 c4 1c	 add	 esp, 28			; 0000001cH

; 196  : 		lKey);
; 197  : }

  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
?GetRscMng@CDispCodeOcx@@QAEXJ@Z ENDP			; CDispCodeOcx::GetRscMng
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ?GetCodePointer@CDispCodeOcx@@QAEJPBD@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
_szKey$ = 8						; size = 4
?GetCodePointer@CDispCodeOcx@@QAEJPBD@Z PROC		; CDispCodeOcx::GetCodePointer, COMDAT
; _this$ = ecx

; 181  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 	long result;
; 183  : 	static BYTE parms[] =
; 184  : 		VTS_BSTR;
; 185  : 	InvokeHelper(m_pdID[IIx_GetCodePointer], DISPATCH_METHOD, VT_I4, (void*)&result, parms,

  00003	ff 75 08	 push	 DWORD PTR _szKey$[ebp]
  00006	8d 45 08	 lea	 eax, DWORD PTR _result$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??GetCodePointer@CDispCodeOcx@@QAEJPBD@Z@4PAEA
  0000e	50		 push	 eax
  0000f	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00012	6a 03		 push	 3
  00014	6a 01		 push	 1
  00016	ff 70 38	 push	 DWORD PTR [eax+56]
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 186  : 		szKey);
; 187  : 	return result;

  0001f	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  00022	83 c4 1c	 add	 esp, 28			; 0000001cH

; 188  : }

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?GetCodePointer@CDispCodeOcx@@QAEJPBD@Z ENDP		; CDispCodeOcx::GetCodePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ?GetGlobalDataTypeList@CDispCodeOcx@@QAEJXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?GetGlobalDataTypeList@CDispCodeOcx@@QAEJXZ PROC	; CDispCodeOcx::GetGlobalDataTypeList, COMDAT
; _this$ = ecx

; 174  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 175  : 	long result;
; 176  : 	InvokeHelper(m_pdID[IIx_GetGlobalDataTypeList], DISPATCH_METHOD, VT_I4, (void*)&result, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00009	50		 push	 eax
  0000a	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0000d	6a 03		 push	 3
  0000f	6a 01		 push	 1
  00011	ff 70 34	 push	 DWORD PTR [eax+52]
  00014	51		 push	 ecx
  00015	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 177  : 	return result;

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]
  0001d	83 c4 18	 add	 esp, 24			; 00000018H

; 178  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?GetGlobalDataTypeList@CDispCodeOcx@@QAEJXZ ENDP	; CDispCodeOcx::GetGlobalDataTypeList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ?GetHistoryList@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@FJ@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_nMaxCount$ = 12					; size = 2
_nType$ = 16						; size = 4
?GetHistoryList@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@FJ@Z PROC ; CDispCodeOcx::GetHistoryList, COMDAT
; _this$ = ecx

; 164  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetHistoryList@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@FJ@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 165  : 	CString result;

  0002e	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00031	8b cf		 mov	 ecx, edi
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 166  : 	static BYTE parms[] =
; 167  : 		VTS_I2 VTS_I4;
; 168  : 	InvokeHelper(m_pdID[IIx_GetHistoryList], DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
; 169  : 		nMaxCount, nType);
; 170  : 	return result;

  00039	ff 75 10	 push	 DWORD PTR _nType$[ebp]
  0003c	0f bf 45 0c	 movsx	 eax, WORD PTR _nMaxCount$[ebp]
  00040	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00043	50		 push	 eax
  00044	68 00 00 00 00	 push	 OFFSET ?parms@?1??GetHistoryList@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@FJ@Z@4PAEA
  00049	57		 push	 edi
  0004a	6a 08		 push	 8
  0004c	6a 01		 push	 1
  0004e	ff 71 30	 push	 DWORD PTR [ecx+48]
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00058	56		 push	 esi
  00059	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T2[ebp], 1
  00060	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00065	83 c4 20	 add	 esp, 32			; 00000020H
  00068	8b c7		 mov	 eax, edi

; 171  : }

  0006a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00074	59		 pop	 ecx
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetHistoryList@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@FJ@Z$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0d 00 00
	00		 je	 $LN4@GetHistory
  0000c	83 65 f0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00010	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00013	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN4@GetHistory:
  00019	c3		 ret	 0
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?GetHistoryList@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@FJ@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetHistoryList@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@FJ@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetHistoryList@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@FJ@Z ENDP ; CDispCodeOcx::GetHistoryList
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ?InsertHistory@CDispCodeOcx@@QAEHFJPBD0@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
_nMaxCount$ = 8						; size = 2
_nType$ = 12						; size = 4
_Code$ = 16						; size = 4
_CodeName$ = 20						; size = 4
?InsertHistory@CDispCodeOcx@@QAEHFJPBD0@Z PROC		; CDispCodeOcx::InsertHistory, COMDAT
; _this$ = ecx

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 155  : 	BOOL result;
; 156  : 	static BYTE parms[] =
; 157  : 		VTS_I2 VTS_I4 VTS_BSTR VTS_BSTR;
; 158  : 	InvokeHelper(m_pdID[IIx_InsertHistory], DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,

  00003	ff 75 14	 push	 DWORD PTR _CodeName$[ebp]
  00006	0f bf 45 08	 movsx	 eax, WORD PTR _nMaxCount$[ebp]
  0000a	ff 75 10	 push	 DWORD PTR _Code$[ebp]
  0000d	ff 75 0c	 push	 DWORD PTR _nType$[ebp]
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ?parms@?1??InsertHistory@CDispCodeOcx@@QAEHFJPBD0@Z@4PAEA
  00016	8d 45 08	 lea	 eax, DWORD PTR _result$[ebp]
  00019	50		 push	 eax
  0001a	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001d	6a 0b		 push	 11			; 0000000bH
  0001f	6a 01		 push	 1
  00021	ff 70 2c	 push	 DWORD PTR [eax+44]
  00024	51		 push	 ecx
  00025	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 159  : 		nMaxCount, nType, Code, CodeName);
; 160  : 	return result;

  0002a	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  0002d	83 c4 28	 add	 esp, 40			; 00000028H

; 161  : }

  00030	5d		 pop	 ebp
  00031	c2 10 00	 ret	 16			; 00000010H
?InsertHistory@CDispCodeOcx@@QAEHFJPBD0@Z ENDP		; CDispCodeOcx::InsertHistory
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ?RemoveAllListData@CDispCodeOcx@@QAEHXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?RemoveAllListData@CDispCodeOcx@@QAEHXZ PROC		; CDispCodeOcx::RemoveAllListData, COMDAT
; _this$ = ecx

; 147  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 148  : 	BOOL result;
; 149  : 	InvokeHelper(m_pdID[IIx_RemoveAllListData], DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00009	50		 push	 eax
  0000a	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0000d	6a 0b		 push	 11			; 0000000bH
  0000f	6a 01		 push	 1
  00011	ff 70 28	 push	 DWORD PTR [eax+40]
  00014	51		 push	 ecx
  00015	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 150  : 	return result;

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]
  0001d	83 c4 18	 add	 esp, 24			; 00000018H

; 151  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?RemoveAllListData@CDispCodeOcx@@QAEHXZ ENDP		; CDispCodeOcx::RemoveAllListData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ?ShowCodeTableWithPosition@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@FF@Z
_TEXT	SEGMENT
__szCodeKey$ = 8					; size = 4
__hWnd$ = 12						; size = 4
_nX$ = 16						; size = 2
_result$ = 20						; size = 4
_nY$ = 20						; size = 2
?ShowCodeTableWithPosition@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@FF@Z PROC ; CDispCodeOcx::ShowCodeTableWithPosition, COMDAT
; _this$ = ecx

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 138  : 	long result;
; 139  : 	static BYTE parms[] =
; 140  : 		VTS_BSTR VTS_VARIANT VTS_I2 VTS_I2;
; 141  : 	InvokeHelper(m_pdID[IIx_ShowCodeTableWithPosition], DISPATCH_METHOD, VT_I4, (void*)&result, parms,

  00003	0f bf 45 14	 movsx	 eax, WORD PTR _nY$[ebp]
  00007	50		 push	 eax
  00008	0f bf 45 10	 movsx	 eax, WORD PTR _nX$[ebp]
  0000c	50		 push	 eax
  0000d	ff 75 0c	 push	 DWORD PTR __hWnd$[ebp]
  00010	8d 45 14	 lea	 eax, DWORD PTR _result$[ebp]
  00013	ff 75 08	 push	 DWORD PTR __szCodeKey$[ebp]
  00016	68 00 00 00 00	 push	 OFFSET ?parms@?1??ShowCodeTableWithPosition@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@FF@Z@4PAEA
  0001b	50		 push	 eax
  0001c	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001f	6a 03		 push	 3
  00021	6a 01		 push	 1
  00023	ff 70 24	 push	 DWORD PTR [eax+36]
  00026	51		 push	 ecx
  00027	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 142  : 		_szCodeKey, &_hWnd, nX, nY);
; 143  : 	return result;

  0002c	8b 45 14	 mov	 eax, DWORD PTR _result$[ebp]
  0002f	83 c4 28	 add	 esp, 40			; 00000028H

; 144  : }

  00032	5d		 pop	 ebp
  00033	c2 10 00	 ret	 16			; 00000010H
?ShowCodeTableWithPosition@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@FF@Z ENDP ; CDispCodeOcx::ShowCodeTableWithPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ?GetMaxHangSaGa@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetMaxHangSaGa@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC ; CDispCodeOcx::GetMaxHangSaGa, COMDAT
; _this$ = ecx

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetMaxHangSaGa@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 131  : 	CString result;

  0002e	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00031	8b cf		 mov	 ecx, edi
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 132  : 	InvokeHelper(m_pdID[IIx_GetMaxHangSaGa], DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
; 133  : 	return result;

  00039	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0003c	6a 00		 push	 0
  0003e	57		 push	 edi
  0003f	6a 08		 push	 8
  00041	6a 01		 push	 1
  00043	ff 71 20	 push	 DWORD PTR [ecx+32]
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004d	56		 push	 esi
  0004e	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T2[ebp], 1
  00055	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  0005a	83 c4 18	 add	 esp, 24			; 00000018H
  0005d	8b c7		 mov	 eax, edi

; 134  : }

  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetMaxHangSaGa@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0d 00 00
	00		 je	 $LN4@GetMaxHang
  0000c	83 65 f0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00010	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00013	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN4@GetMaxHang:
  00019	c3		 ret	 0
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?GetMaxHangSaGa@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetMaxHangSaGa@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetMaxHangSaGa@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CDispCodeOcx::GetMaxHangSaGa
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ?SetPosition@CDispCodeOcx@@QAEXPBDFF@Z
_TEXT	SEGMENT
_szKey$ = 8						; size = 4
_nX$ = 12						; size = 2
_nY$ = 16						; size = 2
?SetPosition@CDispCodeOcx@@QAEXPBDFF@Z PROC		; CDispCodeOcx::SetPosition, COMDAT
; _this$ = ecx

; 122  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 123  : 	static BYTE parms[] =
; 124  : 		VTS_BSTR VTS_I2 VTS_I2;
; 125  : 	InvokeHelper(m_pdID[IIx_SetPosition], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	0f bf 45 10	 movsx	 eax, WORD PTR _nY$[ebp]
  00007	50		 push	 eax
  00008	0f bf 45 0c	 movsx	 eax, WORD PTR _nX$[ebp]
  0000c	50		 push	 eax
  0000d	ff 75 08	 push	 DWORD PTR _szKey$[ebp]
  00010	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00013	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetPosition@CDispCodeOcx@@QAEXPBDFF@Z@4PAEA
  00018	6a 00		 push	 0
  0001a	6a 00		 push	 0
  0001c	6a 01		 push	 1
  0001e	ff 70 1c	 push	 DWORD PTR [eax+28]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00027	83 c4 24	 add	 esp, 36			; 00000024H

; 126  : 		 szKey, nX, nY);
; 127  : }

  0002a	5d		 pop	 ebp
  0002b	c2 0c 00	 ret	 12			; 0000000cH
?SetPosition@CDispCodeOcx@@QAEXPBDFF@Z ENDP		; CDispCodeOcx::SetPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ?GetCodeInfo@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDF0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__szCodeKey$ = 12					; size = 4
__nFlag$ = 16						; size = 2
__szKey$ = 20						; size = 4
?GetCodeInfo@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDF0@Z PROC ; CDispCodeOcx::GetCodeInfo, COMDAT
; _this$ = ecx

; 112  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetCodeInfo@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDF0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 113  : 	CString result;

  0002e	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00031	8b cf		 mov	 ecx, edi
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 114  : 	static BYTE parms[] =
; 115  : 		VTS_BSTR VTS_I2 VTS_BSTR;
; 116  : 	InvokeHelper(m_pdID[IIx_GetCodeInfo], DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
; 117  : 		_szCodeKey, _nFlag, _szKey);
; 118  : 	return result;

  00039	ff 75 14	 push	 DWORD PTR __szKey$[ebp]
  0003c	0f bf 45 10	 movsx	 eax, WORD PTR __nFlag$[ebp]
  00040	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00043	50		 push	 eax
  00044	ff 75 0c	 push	 DWORD PTR __szCodeKey$[ebp]
  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004e	68 00 00 00 00	 push	 OFFSET ?parms@?1??GetCodeInfo@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDF0@Z@4PAEA
  00053	57		 push	 edi
  00054	6a 08		 push	 8
  00056	6a 01		 push	 1
  00058	ff 71 18	 push	 DWORD PTR [ecx+24]
  0005b	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T2[ebp], 1
  00062	56		 push	 esi
  00063	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00068	83 c4 24	 add	 esp, 36			; 00000024H
  0006b	8b c7		 mov	 eax, edi

; 119  : }

  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00077	59		 pop	 ecx
  00078	5f		 pop	 edi
  00079	5e		 pop	 esi
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCodeInfo@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDF0@Z$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0d 00 00
	00		 je	 $LN4@GetCodeInf
  0000c	83 65 f0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00010	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00013	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN4@GetCodeInf:
  00019	c3		 ret	 0
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?GetCodeInfo@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDF0@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetCodeInfo@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDF0@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetCodeInfo@CDispCodeOcx@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDF0@Z ENDP ; CDispCodeOcx::GetCodeInfo
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ?InitData@CDispCodeOcx@@QAEHPBD@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
_szRootPath$ = 8					; size = 4
?InitData@CDispCodeOcx@@QAEHPBD@Z PROC			; CDispCodeOcx::InitData, COMDAT
; _this$ = ecx

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 103  : 	BOOL result;
; 104  : 	static BYTE parms[] =
; 105  : 		VTS_BSTR;
; 106  : 	InvokeHelper(m_pdID[IIx_InitData], DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,

  00003	ff 75 08	 push	 DWORD PTR _szRootPath$[ebp]
  00006	8d 45 08	 lea	 eax, DWORD PTR _result$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??InitData@CDispCodeOcx@@QAEHPBD@Z@4PAEA
  0000e	50		 push	 eax
  0000f	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00012	6a 0b		 push	 11			; 0000000bH
  00014	6a 01		 push	 1
  00016	ff 70 14	 push	 DWORD PTR [eax+20]
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 107  : 		szRootPath);
; 108  : 	return result;

  0001f	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  00022	83 c4 1c	 add	 esp, 28			; 0000001cH

; 109  : }

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?InitData@CDispCodeOcx@@QAEHPBD@Z ENDP			; CDispCodeOcx::InitData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ?SetDataString@CDispCodeOcx@@QAEXFPBD@Z
_TEXT	SEGMENT
_nKey$ = 8						; size = 2
_szData$ = 12						; size = 4
?SetDataString@CDispCodeOcx@@QAEXFPBD@Z PROC		; CDispCodeOcx::SetDataString, COMDAT
; _this$ = ecx

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 95   : 	static BYTE parms[] =
; 96   : 		VTS_I2 VTS_BSTR;
; 97   : 	InvokeHelper(m_pdID[IIx_SetDataString], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 0c	 push	 DWORD PTR _szData$[ebp]
  00006	0f bf 45 08	 movsx	 eax, WORD PTR _nKey$[ebp]
  0000a	50		 push	 eax
  0000b	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0000e	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetDataString@CDispCodeOcx@@QAEXFPBD@Z@4PAEA
  00013	6a 00		 push	 0
  00015	6a 00		 push	 0
  00017	6a 01		 push	 1
  00019	ff 70 10	 push	 DWORD PTR [eax+16]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00022	83 c4 20	 add	 esp, 32			; 00000020H

; 98   : 		 nKey, szData);
; 99   : }

  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?SetDataString@CDispCodeOcx@@QAEXFPBD@Z ENDP		; CDispCodeOcx::SetDataString
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ?ShowModeCodeTable@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@@Z
_TEXT	SEGMENT
__szCodeKey$ = 8					; size = 4
_result$ = 12						; size = 4
__hWnd$ = 12						; size = 4
?ShowModeCodeTable@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@@Z PROC ; CDispCodeOcx::ShowModeCodeTable, COMDAT
; _this$ = ecx

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 85   : 	long result;
; 86   : 	static BYTE parms[] =
; 87   : 		VTS_BSTR VTS_VARIANT;
; 88   : 	InvokeHelper(m_pdID[IIx_ShowModeCodeTable], DISPATCH_METHOD, VT_I4, (void*)&result, parms,

  00003	ff 75 0c	 push	 DWORD PTR __hWnd$[ebp]
  00006	8d 45 0c	 lea	 eax, DWORD PTR _result$[ebp]
  00009	ff 75 08	 push	 DWORD PTR __szCodeKey$[ebp]
  0000c	68 00 00 00 00	 push	 OFFSET ?parms@?1??ShowModeCodeTable@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@@Z@4PAEA
  00011	50		 push	 eax
  00012	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00015	6a 03		 push	 3
  00017	6a 01		 push	 1
  00019	ff 70 0c	 push	 DWORD PTR [eax+12]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 89   : 		_szCodeKey, &_hWnd);
; 90   : 	return result;

  00022	8b 45 0c	 mov	 eax, DWORD PTR _result$[ebp]
  00025	83 c4 20	 add	 esp, 32			; 00000020H

; 91   : }

  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
?ShowModeCodeTable@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@@Z ENDP ; CDispCodeOcx::ShowModeCodeTable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ?ShowCodeTable@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@@Z
_TEXT	SEGMENT
__szCodeKey$ = 8					; size = 4
_result$ = 12						; size = 4
__hWnd$ = 12						; size = 4
?ShowCodeTable@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@@Z PROC ; CDispCodeOcx::ShowCodeTable, COMDAT
; _this$ = ecx

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 75   : 	long result;
; 76   : 	static BYTE parms[] =
; 77   : 		VTS_BSTR VTS_VARIANT;
; 78   : 	InvokeHelper(m_pdID[IIx_ShowCodeTable], DISPATCH_METHOD, VT_I4, (void*)&result, parms,

  00003	ff 75 0c	 push	 DWORD PTR __hWnd$[ebp]
  00006	8d 45 0c	 lea	 eax, DWORD PTR _result$[ebp]
  00009	ff 75 08	 push	 DWORD PTR __szCodeKey$[ebp]
  0000c	68 00 00 00 00	 push	 OFFSET ?parms@?1??ShowCodeTable@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@@Z@4PAEA
  00011	50		 push	 eax
  00012	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00015	6a 03		 push	 3
  00017	6a 01		 push	 1
  00019	ff 70 08	 push	 DWORD PTR [eax+8]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 79   : 		_szCodeKey, &_hWnd);
; 80   : 	return result;

  00022	8b 45 0c	 mov	 eax, DWORD PTR _result$[ebp]
  00025	83 c4 20	 add	 esp, 32			; 00000020H

; 81   : }

  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
?ShowCodeTable@CDispCodeOcx@@QAEJPBDABUtagVARIANT@@@Z ENDP ; CDispCodeOcx::ShowCodeTable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ?SetInfo@CDispCodeOcx@@QAEXJ@Z
_TEXT	SEGMENT
__dwInfo$ = 8						; size = 4
?SetInfo@CDispCodeOcx@@QAEXJ@Z PROC			; CDispCodeOcx::SetInfo, COMDAT
; _this$ = ecx

; 66   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   : 	static BYTE parms[] =
; 68   : 		VTS_I4;
; 69   : 	InvokeHelper(m_pdID[IIx_SetInfo], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR __dwInfo$[ebp]
  00006	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetInfo@CDispCodeOcx@@QAEXJ@Z@4PAEA
  0000e	6a 00		 push	 0
  00010	6a 00		 push	 0
  00012	6a 01		 push	 1
  00014	ff 70 04	 push	 DWORD PTR [eax+4]
  00017	51		 push	 ecx
  00018	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  0001d	83 c4 1c	 add	 esp, 28			; 0000001cH

; 70   : 		 _dwInfo);
; 71   : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?SetInfo@CDispCodeOcx@@QAEXJ@Z ENDP			; CDispCodeOcx::SetInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ?GetBaseCodeTable@CDispCodeOcx@@QAEJXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?GetBaseCodeTable@CDispCodeOcx@@QAEJXZ PROC		; CDispCodeOcx::GetBaseCodeTable, COMDAT
; _this$ = ecx

; 58   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 59   : 	long result;
; 60   : 	InvokeHelper(m_pdID[IIx_GetBaseCodeTable], DISPATCH_METHOD, VT_I4, (void*)&result, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00009	50		 push	 eax
  0000a	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0000d	6a 03		 push	 3
  0000f	6a 01		 push	 1
  00011	ff 70 3c	 push	 DWORD PTR [eax+60]
  00014	51		 push	 ecx
  00015	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 61   : 	// m_pdID[IIx_GetBaseCodeTable]
; 62   : 	return result;

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]
  0001d	83 c4 18	 add	 esp, 24			; 00000018H

; 63   : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?GetBaseCodeTable@CDispCodeOcx@@QAEJXZ ENDP		; CDispCodeOcx::GetBaseCodeTable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ?InitInterfaceName@CDispCodeOcx@@QAEXPAUIDispatch@@@Z
_TEXT	SEGMENT
_pDisp$ = 8						; size = 4
?InitInterfaceName@CDispCodeOcx@@QAEXPAUIDispatch@@@Z PROC ; CDispCodeOcx::InitInterfaceName, COMDAT
; _this$ = ecx

; 33   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 34   : 	int i, nCount = sizeof( m_osInterfaceName) / sizeof( OLECHAR *);
; 35   : 	m_pdID = new DISPID[ nCount];

  00006	6a 44		 push	 68			; 00000044H
  00008	8b d9		 mov	 ebx, ecx
  0000a	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0000f	8b 7d 08	 mov	 edi, DWORD PTR _pDisp$[ebp]
  00012	83 c4 04	 add	 esp, 4
  00015	89 43 0c	 mov	 DWORD PTR [ebx+12], eax
  00018	33 f6		 xor	 esi, esi
  0001a	66 0f 1f 44 00
	00		 npad	 6
$LL4@InitInterf:

; 36   : 	for( i = 0; i < nCount; i++)
; 37   : 		pDisp->GetIDsOfNames( IID_NULL, &m_osInterfaceName[ i], 1, LOCALE_USER_DEFAULT, m_pdID + i);

  00020	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
  00023	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00025	03 c6		 add	 eax, esi
  00027	50		 push	 eax
  00028	68 00 04 00 00	 push	 1024			; 00000400H
  0002d	6a 01		 push	 1
  0002f	8d 86 00 00 00
	00		 lea	 eax, DWORD PTR ?m_osInterfaceName@CDispCodeOcx@@2PAPA_WA[esi]
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET _GUID_NULL
  0003b	57		 push	 edi
  0003c	ff 51 14	 call	 DWORD PTR [ecx+20]
  0003f	83 c6 04	 add	 esi, 4
  00042	83 fe 44	 cmp	 esi, 68			; 00000044H
  00045	7c d9		 jl	 SHORT $LL4@InitInterf

; 38   : }

  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
?InitInterfaceName@CDispCodeOcx@@QAEXPAUIDispatch@@@Z ENDP ; CDispCodeOcx::InitInterfaceName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxole.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ??1CDispCodeOcx@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CDispCodeOcx@@QAE@XZ PROC				; CDispCodeOcx::~CDispCodeOcx, COMDAT
; _this$ = ecx

; 46   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CDispCodeOcx@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 47   : 	delete m_pdID;

  00025	6a 04		 push	 4
  00027	ff 76 0c	 push	 DWORD PTR [esi+12]
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	83 c4 08	 add	 esp, 8

; 48   : 	m_pdID = NULL;

  00032	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxole.inl

; 131  : 	{ ReleaseDispatch(); }

  00039	8b ce		 mov	 ecx, esi
  0003b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00042	e8 00 00 00 00	 call	 ?ReleaseDispatch@COleDispatchDriver@@QAEXXZ ; COleDispatchDriver::ReleaseDispatch
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp

; 49   : }

  00047	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00051	59		 pop	 ecx
  00052	5e		 pop	 esi
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
  00057	cc		 int	 3
  00058	cc		 int	 3
  00059	cc		 int	 3
  0005a	cc		 int	 3
  0005b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CDispCodeOcx@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CDispCodeOcx@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CDispCodeOcx@@QAE@XZ ENDP				; CDispCodeOcx::~CDispCodeOcx
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ??0CDispCodeOcx@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDispCodeOcx@@QAE@XZ PROC				; CDispCodeOcx::CDispCodeOcx, COMDAT
; _this$ = ecx

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000a	e8 00 00 00 00	 call	 ??0COleDispatchDriver@@QAE@XZ ; COleDispatchDriver::COleDispatchDriver

; 42   : 	m_pdispatch = NULL;

  0000f	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 43   : }

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??0CDispCodeOcx@@QAE@XZ ENDP				; CDispCodeOcx::CDispCodeOcx
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\DrCommon\PcTrMng\CodeOcx.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
