; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30148.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\PcTrMng\DispDesk.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?m_osInterfaceName@CDispDesk@@2PAPA_WA		; CDispDesk::m_osInterfaceName
PUBLIC	??_C@_1O@KIELGECM@?$AAS?$AAe?$AAn?$AAd?$AAT?$AAR@ ; `string'
PUBLIC	??_C@_1BE@NEKAOIBK@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAT?$AAR@ ; `string'
PUBLIC	??_C@_1CA@NFELDDBO@?$AAS?$AAe?$AAt?$AAS?$AAo?$AAc?$AAk?$AAe?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1CA@LJJIEHNN@?$AAG?$AAe?$AAt?$AAS?$AAo?$AAc?$AAk?$AAe?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1CG@JDJGOFKB@?$AAS?$AAe?$AAt?$AAS?$AAh?$AAa?$AAr?$AAe?$AAd?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf@ ; `string'
PUBLIC	??_C@_1BK@GDHAKDF@?$AAU?$AAn?$AAL?$AAo?$AAa?$AAd?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt@ ; `string'
PUBLIC	??_C@_1M@FBDBEKAM@?$AAB?$AAl?$AAa?$AAn?$AAk@	; `string'
PUBLIC	??_C@_1BM@JDHAJGKD@?$AAS?$AAh?$AAo?$AAw?$AAT?$AAr?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe@ ; `string'
PUBLIC	??_C@_1BO@HKIJKHNI@?$AAS?$AAh?$AAo?$AAw?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AAB?$AAo?$AAx@ ; `string'
PUBLIC	??_C@_1BE@PIOPHLCJ@?$AAG?$AAe?$AAt?$AAT?$AAr?$AAL?$AAi?$AAs?$AAt@ ; `string'
PUBLIC	??_C@_1BG@IADOHFP@?$AAG?$AAe?$AAt?$AAM?$AAa?$AAp?$AAN?$AAa?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_1BG@DGIFPOCN@?$AAG?$AAe?$AAt?$AAM?$AAa?$AAp?$AAI?$AAn?$AAf?$AAo@ ; `string'
PUBLIC	??_C@_1CI@JFNEDDFJ@?$AAG?$AAe?$AAt?$AAC?$AAt?$AAr?$AAl?$AAH?$AAw?$AAn?$AAd?$AAF?$AAr?$AAo?$AAm@ ; `string'
PUBLIC	??_C@_1CI@LAKBAIKD@?$AAG?$AAe?$AAt?$AAC?$AAt?$AAr?$AAl?$AAN?$AAa?$AAm?$AAe?$AAF?$AAr?$AAo?$AAm@ ; `string'
PUBLIC	??_C@_1CI@KMMLONAK@?$AAG?$AAe?$AAt?$AAC?$AAt?$AAr?$AAl?$AAT?$AAy?$AAp?$AAe?$AAF?$AAr?$AAo?$AAm@ ; `string'
PUBLIC	??_C@_1CI@CFCJLACK@?$AAG?$AAe?$AAt?$AAC?$AAt?$AAr?$AAl?$AAT?$AAy?$AAp?$AAe?$AAF?$AAr?$AAo?$AAm@ ; `string'
PUBLIC	??_C@_1BK@HPKJAGHK@?$AAC?$AAa?$AAl?$AAl?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn@ ; `string'
PUBLIC	??_C@_1CE@BEIIHEOD@?$AAS?$AAe?$AAt?$AAP?$AAa?$AAr?$AAe?$AAn?$AAt?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt@ ; `string'
PUBLIC	??_C@_1CA@IFGEACPB@?$AAG?$AAe?$AAt?$AAD?$AAi?$AAs?$AAp?$AAF?$AAr?$AAo?$AAm?$AAN?$AAa?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_1BI@NDKNJEPM@?$AAG?$AAe?$AAt?$AAR?$AAo?$AAo?$AAt?$AAP?$AAa?$AAt?$AAh@ ; `string'
PUBLIC	??_C@_1BM@CHGEHELO@?$AAG?$AAe?$AAt?$AAF?$AAo?$AAr?$AAm?$AAT?$AAr?$AAD?$AAa?$AAt?$AAa@ ; `string'
PUBLIC	??_C@_1BM@DKOMFBBK@?$AAS?$AAe?$AAt?$AAF?$AAo?$AAr?$AAm?$AAT?$AAr?$AAD?$AAa?$AAt?$AAa@ ; `string'
PUBLIC	??_C@_1BG@NICPHEAF@?$AAF?$AAo?$AAr?$AAm?$AAU?$AAn?$AAL?$AAo?$AAa?$AAd@ ; `string'
PUBLIC	??_C@_1BO@BKAOKKAA@?$AAS?$AAe?$AAt?$AAO?$AAp?$AAe?$AAn?$AAM?$AAa?$AAp?$AAD?$AAa?$AAt?$AAa@ ; `string'
PUBLIC	??_C@_1CC@IALEMHMG@?$AAS?$AAe?$AAn?$AAd?$AAD?$AAa?$AAt?$AAa?$AAT?$AAo?$AAO?$AAp?$AAe?$AAn?$AAe@ ; `string'
PUBLIC	??_C@_1BI@KFOFPKIA@?$AAC?$AAa?$AAl?$AAl?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@ ; `string'
PUBLIC	??_C@_1BO@JLGBBKCC@?$AAG?$AAe?$AAt?$AAO?$AAp?$AAe?$AAn?$AAM?$AAa?$AAp?$AAD?$AAa?$AAt?$AAa@ ; `string'
PUBLIC	??_C@_1CA@GMCBGANC@?$AAS?$AAe?$AAt?$AAO?$AAp?$AAe?$AAn?$AAM?$AAa?$AAp?$AAD?$AAa?$AAt?$AAa?$AA2@ ; `string'
PUBLIC	??_C@_1BO@EAFJHIHC@?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AAF?$AAr?$AAo?$AAm?$AAM?$AAa?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1BI@KGHAFHKA@?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAF?$AAo?$AAc?$AAu?$AAs@ ; `string'
PUBLIC	??_C@_1BE@GHIPLDDL@?$AAG?$AAo?$AAt?$AAo?$AAF?$AAo?$AAc?$AAu?$AAs@ ; `string'
PUBLIC	??_C@_1BG@JGFILGLN@?$AAS?$AAe?$AAt?$AAK?$AAe?$AAy?$AAD?$AAa?$AAt?$AAa@ ; `string'
PUBLIC	??_C@_1BG@GDAOGPPM@?$AAG?$AAe?$AAt?$AAK?$AAe?$AAy?$AAD?$AAa?$AAt?$AAa@ ; `string'
PUBLIC	??_C@_1CK@NFKNHMDM@?$AAS?$AAe?$AAt?$AAG?$AAS?$AAh?$AAa?$AAr?$AAe?$AAd?$AAN?$AAo?$AAt?$AAi?$AAf@ ; `string'
PUBLIC	??_C@_1BE@FJHGHHJA@?$AAL?$AAo?$AAa?$AAd?$AAX?$AAf?$AAm?$AAE?$AAx@ ; `string'
PUBLIC	??_C@_1BG@BNAAOKLP@?$AAR?$AAe?$AAs?$AAi?$AAz?$AAe?$AAF?$AAo?$AAn?$AAt@ ; `string'
PUBLIC	??_C@_1BG@BHGFMEJB@?$AAG?$AAe?$AAt?$AAM?$AAa?$AAp?$AAS?$AAi?$AAz?$AAe@ ; `string'
PUBLIC	??_C@_1BI@MHKGKKII@?$AAS?$AAe?$AAt?$AAI?$AAn?$AAi?$AAt?$AAF?$AAo?$AAn?$AAt@ ; `string'
PUBLIC	??_C@_1BG@OKCOEOIM@?$AAS?$AAe?$AAt?$AAT?$AAa?$AAb?$AAS?$AAt?$AAo?$AAp@ ; `string'
PUBLIC	??_C@_1CC@CGCAKOBD@?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AAG?$AAS?$AAh?$AAa?$AAr?$AAe?$AAD?$AAa?$AAt@ ; `string'
PUBLIC	??_C@_1CC@LOMMDIOP@?$AAS?$AAe?$AAt?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAu?$AAn?$AAt?$AAF?$AAl?$AAa@ ; `string'
PUBLIC	??_C@_1BI@HILDJCJO@?$AAD?$AAe?$AAb?$AAu?$AAg?$AAT?$AAr?$AAD?$AAa?$AAt?$AAa@ ; `string'
PUBLIC	??_C@_1BK@DOELELCL@?$AAS?$AAe?$AAn?$AAd?$AAT?$AAr?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt@ ; `string'
PUBLIC	??_C@_1BA@KMFOECKF@?$AAS?$AAe?$AAt?$AAF?$AAl?$AAa?$AAg@ ; `string'
PUBLIC	??_C@_1BM@OENDCIID@?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AAT?$AAR?$AAI?$AAn?$AAO?$AAu?$AAt@ ; `string'
PUBLIC	??_C@_1BK@IGCGCFNE@?$AAG?$AAe?$AAt?$AAU?$AAs?$AAe?$AAr?$AAC?$AAo?$AAl?$AAo?$AAr@ ; `string'
PUBLIC	??_C@_1CI@IEJNALOK@?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAr?$AAM?$AAe?$AAs@ ; `string'
PUBLIC	??_C@_1CE@NALKHLND@?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAs?$AAg?$AAC?$AAo@ ; `string'
PUBLIC	??_C@_1CI@MEFMNOH@?$AAS?$AAe?$AAl?$AAe?$AAc?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAC?$AAo?$AAm@ ; `string'
PUBLIC	??_C@_1BE@LCNOBEJ@?$AAS?$AAe?$AAt?$AAR?$AAs?$AAc?$AAM?$AAn?$AAg@ ; `string'
PUBLIC	??_C@_1BK@GNILNMLM@?$AAM?$AAa?$AAi?$AAn?$AAK?$AAe?$AAy?$AAP?$AAr?$AAe?$AAs?$AAs@ ; `string'
PUBLIC	??_C@_1CI@KGMGLBIN@?$AAS?$AAe?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAi?$AAn?$AAg?$AAH?$AAa@ ; `string'
PUBLIC	??_C@_1CC@BJGPLKHJ@?$AAS?$AAe?$AAt?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn@ ; `string'
PUBLIC	??_C@_1CE@LJGELICL@?$AAA?$AAd?$AAd?$AAU?$AAs?$AAe?$AAr?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt?$AAI?$AAt@ ; `string'
PUBLIC	??_C@_1BG@DLIGMEDF@?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AAO?$AAu?$AAt@ ; `string'
PUBLIC	??_C@_1BK@OENEFBNG@?$AAE?$AAx?$AAc?$AAu?$AAt?$AAe?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt@ ; `string'
PUBLIC	??_C@_1BG@LEJKLDJC@?$AAG?$AAe?$AAt?$AAM?$AAa?$AAp?$AAD?$AAa?$AAt?$AAa@ ; `string'
PUBLIC	??_C@_1BM@DHCCDBJ@?$AAS?$AAe?$AAn?$AAd?$AAT?$AAR?$AAF?$AAo?$AAr?$AAC?$AAe?$AAr?$AAt@ ; `string'
PUBLIC	??_C@_1BM@IBHIPADC@?$AAR?$AAe?$AAs?$AAi?$AAz?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@ ; `string'
PUBLIC	??_C@_1BI@BDEOEOEI@?$AAM?$AAo?$AAv?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@ ; `string'
PUBLIC	??_C@_1CE@JBKJBJLC@?$AAS?$AAe?$AAt?$AAC?$AAt?$AAr?$AAl?$AAR?$AAe?$AAs?$AAi?$AAz?$AAe?$AAF?$AAl@ ; `string'
PUBLIC	??_C@_1BK@GJGINPCK@?$AAI?$AAs?$AAD?$AAe?$AAs?$AAk?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe@ ; `string'
;	COMDAT ??_C@_1BK@GJGINPCK@?$AAI?$AAs?$AAD?$AAe?$AAs?$AAk?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe@
CONST	SEGMENT
??_C@_1BK@GJGINPCK@?$AAI?$AAs?$AAD?$AAe?$AAs?$AAk?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe@ DB 'I'
	DB	00H, 's', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'k', 00H, 'A', 00H
	DB	'c', 00H, 't', 00H, 'i', 00H, 'v', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@JBKJBJLC@?$AAS?$AAe?$AAt?$AAC?$AAt?$AAr?$AAl?$AAR?$AAe?$AAs?$AAi?$AAz?$AAe?$AAF?$AAl@
CONST	SEGMENT
??_C@_1CE@JBKJBJLC@?$AAS?$AAe?$AAt?$AAC?$AAt?$AAr?$AAl?$AAR?$AAe?$AAs?$AAi?$AAz?$AAe?$AAF?$AAl@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'C', 00H, 't', 00H, 'r', 00H, 'l', 00H
	DB	'R', 00H, 'e', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'F'
	DB	00H, 'l', 00H, 'a', 00H, 'g', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@BDEOEOEI@?$AAM?$AAo?$AAv?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@
CONST	SEGMENT
??_C@_1BI@BDEOEOEI@?$AAM?$AAo?$AAv?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@ DB 'M'
	DB	00H, 'o', 00H, 'v', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H
	DB	't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@IBHIPADC@?$AAR?$AAe?$AAs?$AAi?$AAz?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@
CONST	SEGMENT
??_C@_1BM@IBHIPADC@?$AAR?$AAe?$AAs?$AAi?$AAz?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@ DB 'R'
	DB	00H, 'e', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@DHCCDBJ@?$AAS?$AAe?$AAn?$AAd?$AAT?$AAR?$AAF?$AAo?$AAr?$AAC?$AAe?$AAr?$AAt@
CONST	SEGMENT
??_C@_1BM@DHCCDBJ@?$AAS?$AAe?$AAn?$AAd?$AAT?$AAR?$AAF?$AAo?$AAr?$AAC?$AAe?$AAr?$AAt@ DB 'S'
	DB	00H, 'e', 00H, 'n', 00H, 'd', 00H, 'T', 00H, 'R', 00H, 'F', 00H
	DB	'o', 00H, 'r', 00H, 'C', 00H, 'e', 00H, 'r', 00H, 't', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@LEJKLDJC@?$AAG?$AAe?$AAt?$AAM?$AAa?$AAp?$AAD?$AAa?$AAt?$AAa@
CONST	SEGMENT
??_C@_1BG@LEJKLDJC@?$AAG?$AAe?$AAt?$AAM?$AAa?$AAp?$AAD?$AAa?$AAt?$AAa@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 'D', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@OENEFBNG@?$AAE?$AAx?$AAc?$AAu?$AAt?$AAe?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt@
CONST	SEGMENT
??_C@_1BK@OENEFBNG@?$AAE?$AAx?$AAc?$AAu?$AAt?$AAe?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt@ DB 'E'
	DB	00H, 'x', 00H, 'c', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S', 00H
	DB	'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@DLIGMEDF@?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AAO?$AAu?$AAt@
CONST	SEGMENT
??_C@_1BG@DLIGMEDF@?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AAO?$AAu?$AAt@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H
	DB	'O', 00H, 'u', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@LJGELICL@?$AAA?$AAd?$AAd?$AAU?$AAs?$AAe?$AAr?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt?$AAI?$AAt@
CONST	SEGMENT
??_C@_1CE@LJGELICL@?$AAA?$AAd?$AAd?$AAU?$AAs?$AAe?$AAr?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt?$AAI?$AAt@ DB 'A'
	DB	00H, 'd', 00H, 'd', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	'S', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't', 00H, 'I'
	DB	00H, 't', 00H, 'e', 00H, 'm', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@BJGPLKHJ@?$AAS?$AAe?$AAt?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn@
CONST	SEGMENT
??_C@_1CC@BJGPLKHJ@?$AAS?$AAe?$AAt?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'i', 00H
	DB	'f', 00H, 'y', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'a'
	DB	00H, 'n', 00H, 'd', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@KGMGLBIN@?$AAS?$AAe?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAi?$AAn?$AAg?$AAH?$AAa@
CONST	SEGMENT
??_C@_1CI@KGMGLBIN@?$AAS?$AAe?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAi?$AAn?$AAg?$AAH?$AAa@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'M', 00H, 'o', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'H'
	DB	00H, 'a', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@GNILNMLM@?$AAM?$AAa?$AAi?$AAn?$AAK?$AAe?$AAy?$AAP?$AAr?$AAe?$AAs?$AAs@
CONST	SEGMENT
??_C@_1BK@GNILNMLM@?$AAM?$AAa?$AAi?$AAn?$AAK?$AAe?$AAy?$AAP?$AAr?$AAe?$AAs?$AAs@ DB 'M'
	DB	00H, 'a', 00H, 'i', 00H, 'n', 00H, 'K', 00H, 'e', 00H, 'y', 00H
	DB	'P', 00H, 'r', 00H, 'e', 00H, 's', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@LCNOBEJ@?$AAS?$AAe?$AAt?$AAR?$AAs?$AAc?$AAM?$AAn?$AAg@
CONST	SEGMENT
??_C@_1BE@LCNOBEJ@?$AAS?$AAe?$AAt?$AAR?$AAs?$AAc?$AAM?$AAn?$AAg@ DB 'S', 00H
	DB	'e', 00H, 't', 00H, 'R', 00H, 's', 00H, 'c', 00H, 'M', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@MEFMNOH@?$AAS?$AAe?$AAl?$AAe?$AAc?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAC?$AAo?$AAm@
CONST	SEGMENT
??_C@_1CI@MEFMNOH@?$AAS?$AAe?$AAl?$AAe?$AAc?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAC?$AAo?$AAm@ DB 'S'
	DB	00H, 'e', 00H, 'l', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'P', 00H
	DB	'a', 00H, 'c', 00H, 'k', 00H, 'e', 00H, 't', 00H, 'C', 00H, 'o'
	DB	00H, 'm', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@NALKHLND@?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAs?$AAg?$AAC?$AAo@
CONST	SEGMENT
??_C@_1CE@NALKHLND@?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAs?$AAg?$AAC?$AAo@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 'M', 00H, 's', 00H, 'g', 00H, 'C'
	DB	00H, 'o', 00H, 'd', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@IEJNALOK@?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAr?$AAM?$AAe?$AAs@
CONST	SEGMENT
??_C@_1CI@IEJNALOK@?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAr?$AAM?$AAe?$AAs@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 'T', 00H, 'r', 00H, 'M', 00H, 'e'
	DB	00H, 's', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@IGCGCFNE@?$AAG?$AAe?$AAt?$AAU?$AAs?$AAe?$AAr?$AAC?$AAo?$AAl?$AAo?$AAr@
CONST	SEGMENT
??_C@_1BK@IGCGCFNE@?$AAG?$AAe?$AAt?$AAU?$AAs?$AAe?$AAr?$AAC?$AAo?$AAl?$AAo?$AAr@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@OENDCIID@?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AAT?$AAR?$AAI?$AAn?$AAO?$AAu?$AAt@
CONST	SEGMENT
??_C@_1BM@OENDCIID@?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AAT?$AAR?$AAI?$AAn?$AAO?$AAu?$AAt@ DB 'C'
	DB	00H, 'h', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 'T', 00H
	DB	'R', 00H, 'I', 00H, 'n', 00H, 'O', 00H, 'u', 00H, 't', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@KMFOECKF@?$AAS?$AAe?$AAt?$AAF?$AAl?$AAa?$AAg@
CONST	SEGMENT
??_C@_1BA@KMFOECKF@?$AAS?$AAe?$AAt?$AAF?$AAl?$AAa?$AAg@ DB 'S', 00H, 'e', 00H
	DB	't', 00H, 'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@DOELELCL@?$AAS?$AAe?$AAn?$AAd?$AAT?$AAr?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt@
CONST	SEGMENT
??_C@_1BK@DOELELCL@?$AAS?$AAe?$AAn?$AAd?$AAT?$AAr?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt@ DB 'S'
	DB	00H, 'e', 00H, 'n', 00H, 'd', 00H, 'T', 00H, 'r', 00H, 'D', 00H
	DB	'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@HILDJCJO@?$AAD?$AAe?$AAb?$AAu?$AAg?$AAT?$AAr?$AAD?$AAa?$AAt?$AAa@
CONST	SEGMENT
??_C@_1BI@HILDJCJO@?$AAD?$AAe?$AAb?$AAu?$AAg?$AAT?$AAr?$AAD?$AAa?$AAt?$AAa@ DB 'D'
	DB	00H, 'e', 00H, 'b', 00H, 'u', 00H, 'g', 00H, 'T', 00H, 'r', 00H
	DB	'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@LOMMDIOP@?$AAS?$AAe?$AAt?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAu?$AAn?$AAt?$AAF?$AAl?$AAa@
CONST	SEGMENT
??_C@_1CC@LOMMDIOP@?$AAS?$AAe?$AAt?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAu?$AAn?$AAt?$AAF?$AAl?$AAa@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'S', 00H, 'e', 00H, 'n', 00H, 'd', 00H
	DB	'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, 'F', 00H, 'l'
	DB	00H, 'a', 00H, 'g', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@CGCAKOBD@?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AAG?$AAS?$AAh?$AAa?$AAr?$AAe?$AAD?$AAa?$AAt@
CONST	SEGMENT
??_C@_1CC@CGCAKOBD@?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AAG?$AAS?$AAh?$AAa?$AAr?$AAe?$AAD?$AAa?$AAt@ DB 'N'
	DB	00H, 'o', 00H, 't', 00H, 'i', 00H, 'f', 00H, 'y', 00H, 'G', 00H
	DB	'S', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'D', 00H, 'a'
	DB	00H, 't', 00H, 'a', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@OKCOEOIM@?$AAS?$AAe?$AAt?$AAT?$AAa?$AAb?$AAS?$AAt?$AAo?$AAp@
CONST	SEGMENT
??_C@_1BG@OKCOEOIM@?$AAS?$AAe?$AAt?$AAT?$AAa?$AAb?$AAS?$AAt?$AAo?$AAp@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'T', 00H, 'a', 00H, 'b', 00H, 'S', 00H
	DB	't', 00H, 'o', 00H, 'p', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@MHKGKKII@?$AAS?$AAe?$AAt?$AAI?$AAn?$AAi?$AAt?$AAF?$AAo?$AAn?$AAt@
CONST	SEGMENT
??_C@_1BI@MHKGKKII@?$AAS?$AAe?$AAt?$AAI?$AAn?$AAi?$AAt?$AAF?$AAo?$AAn?$AAt@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H
	DB	'F', 00H, 'o', 00H, 'n', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@BHGFMEJB@?$AAG?$AAe?$AAt?$AAM?$AAa?$AAp?$AAS?$AAi?$AAz?$AAe@
CONST	SEGMENT
??_C@_1BG@BHGFMEJB@?$AAG?$AAe?$AAt?$AAM?$AAa?$AAp?$AAS?$AAi?$AAz?$AAe@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 'S', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@BNAAOKLP@?$AAR?$AAe?$AAs?$AAi?$AAz?$AAe?$AAF?$AAo?$AAn?$AAt@
CONST	SEGMENT
??_C@_1BG@BNAAOKLP@?$AAR?$AAe?$AAs?$AAi?$AAz?$AAe?$AAF?$AAo?$AAn?$AAt@ DB 'R'
	DB	00H, 'e', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'F', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@FJHGHHJA@?$AAL?$AAo?$AAa?$AAd?$AAX?$AAf?$AAm?$AAE?$AAx@
CONST	SEGMENT
??_C@_1BE@FJHGHHJA@?$AAL?$AAo?$AAa?$AAd?$AAX?$AAf?$AAm?$AAE?$AAx@ DB 'L', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 'X', 00H, 'f', 00H, 'm', 00H, 'E'
	DB	00H, 'x', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NFKNHMDM@?$AAS?$AAe?$AAt?$AAG?$AAS?$AAh?$AAa?$AAr?$AAe?$AAd?$AAN?$AAo?$AAt?$AAi?$AAf@
CONST	SEGMENT
??_C@_1CK@NFKNHMDM@?$AAS?$AAe?$AAt?$AAG?$AAS?$AAh?$AAa?$AAr?$AAe?$AAd?$AAN?$AAo?$AAt?$AAi?$AAf@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'G', 00H, 'S', 00H, 'h', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, 'd', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'i'
	DB	00H, 'f', 00H, 'y', 00H, 'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@GDAOGPPM@?$AAG?$AAe?$AAt?$AAK?$AAe?$AAy?$AAD?$AAa?$AAt?$AAa@
CONST	SEGMENT
??_C@_1BG@GDAOGPPM@?$AAG?$AAe?$AAt?$AAK?$AAe?$AAy?$AAD?$AAa?$AAt?$AAa@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'K', 00H, 'e', 00H, 'y', 00H, 'D', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@JGFILGLN@?$AAS?$AAe?$AAt?$AAK?$AAe?$AAy?$AAD?$AAa?$AAt?$AAa@
CONST	SEGMENT
??_C@_1BG@JGFILGLN@?$AAS?$AAe?$AAt?$AAK?$AAe?$AAy?$AAD?$AAa?$AAt?$AAa@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'K', 00H, 'e', 00H, 'y', 00H, 'D', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@GHIPLDDL@?$AAG?$AAo?$AAt?$AAo?$AAF?$AAo?$AAc?$AAu?$AAs@
CONST	SEGMENT
??_C@_1BE@GHIPLDDL@?$AAG?$AAo?$AAt?$AAo?$AAF?$AAo?$AAc?$AAu?$AAs@ DB 'G', 00H
	DB	'o', 00H, 't', 00H, 'o', 00H, 'F', 00H, 'o', 00H, 'c', 00H, 'u'
	DB	00H, 's', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@KGHAFHKA@?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAF?$AAo?$AAc?$AAu?$AAs@
CONST	SEGMENT
??_C@_1BI@KGHAFHKA@?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAF?$AAo?$AAc?$AAu?$AAs@ DB 'E'
	DB	00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'F', 00H
	DB	'o', 00H, 'c', 00H, 'u', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@EAFJHIHC@?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AAF?$AAr?$AAo?$AAm?$AAM?$AAa?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BO@EAFJHIHC@?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AAF?$AAr?$AAo?$AAm?$AAM?$AAa?$AAi?$AAn@ DB 'N'
	DB	00H, 'o', 00H, 't', 00H, 'i', 00H, 'f', 00H, 'y', 00H, 'F', 00H
	DB	'r', 00H, 'o', 00H, 'm', 00H, 'M', 00H, 'a', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@GMCBGANC@?$AAS?$AAe?$AAt?$AAO?$AAp?$AAe?$AAn?$AAM?$AAa?$AAp?$AAD?$AAa?$AAt?$AAa?$AA2@
CONST	SEGMENT
??_C@_1CA@GMCBGANC@?$AAS?$AAe?$AAt?$AAO?$AAp?$AAe?$AAn?$AAM?$AAa?$AAp?$AAD?$AAa?$AAt?$AAa?$AA2@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'M', 00H, 'a', 00H, 'p', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a'
	DB	00H, '2', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@JLGBBKCC@?$AAG?$AAe?$AAt?$AAO?$AAp?$AAe?$AAn?$AAM?$AAa?$AAp?$AAD?$AAa?$AAt?$AAa@
CONST	SEGMENT
??_C@_1BO@JLGBBKCC@?$AAG?$AAe?$AAt?$AAO?$AAp?$AAe?$AAn?$AAM?$AAa?$AAp?$AAD?$AAa?$AAt?$AAa@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'M', 00H, 'a', 00H, 'p', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@KFOFPKIA@?$AAC?$AAa?$AAl?$AAl?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@
CONST	SEGMENT
??_C@_1BI@KFOFPKIA@?$AAC?$AAa?$AAl?$AAl?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@ DB 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'm', 00H
	DB	'm', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@IALEMHMG@?$AAS?$AAe?$AAn?$AAd?$AAD?$AAa?$AAt?$AAa?$AAT?$AAo?$AAO?$AAp?$AAe?$AAn?$AAe@
CONST	SEGMENT
??_C@_1CC@IALEMHMG@?$AAS?$AAe?$AAn?$AAd?$AAD?$AAa?$AAt?$AAa?$AAT?$AAo?$AAO?$AAp?$AAe?$AAn?$AAe@ DB 'S'
	DB	00H, 'e', 00H, 'n', 00H, 'd', 00H, 'D', 00H, 'a', 00H, 't', 00H
	DB	'a', 00H, 'T', 00H, 'o', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n'
	DB	00H, 'e', 00H, 'r', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@BKAOKKAA@?$AAS?$AAe?$AAt?$AAO?$AAp?$AAe?$AAn?$AAM?$AAa?$AAp?$AAD?$AAa?$AAt?$AAa@
CONST	SEGMENT
??_C@_1BO@BKAOKKAA@?$AAS?$AAe?$AAt?$AAO?$AAp?$AAe?$AAn?$AAM?$AAa?$AAp?$AAD?$AAa?$AAt?$AAa@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'M', 00H, 'a', 00H, 'p', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@NICPHEAF@?$AAF?$AAo?$AAr?$AAm?$AAU?$AAn?$AAL?$AAo?$AAa?$AAd@
CONST	SEGMENT
??_C@_1BG@NICPHEAF@?$AAF?$AAo?$AAr?$AAm?$AAU?$AAn?$AAL?$AAo?$AAa?$AAd@ DB 'F'
	DB	00H, 'o', 00H, 'r', 00H, 'm', 00H, 'U', 00H, 'n', 00H, 'L', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@DKOMFBBK@?$AAS?$AAe?$AAt?$AAF?$AAo?$AAr?$AAm?$AAT?$AAr?$AAD?$AAa?$AAt?$AAa@
CONST	SEGMENT
??_C@_1BM@DKOMFBBK@?$AAS?$AAe?$AAt?$AAF?$AAo?$AAr?$AAm?$AAT?$AAr?$AAD?$AAa?$AAt?$AAa@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'T', 00H, 'r', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@CHGEHELO@?$AAG?$AAe?$AAt?$AAF?$AAo?$AAr?$AAm?$AAT?$AAr?$AAD?$AAa?$AAt?$AAa@
CONST	SEGMENT
??_C@_1BM@CHGEHELO@?$AAG?$AAe?$AAt?$AAF?$AAo?$AAr?$AAm?$AAT?$AAr?$AAD?$AAa?$AAt?$AAa@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'T', 00H, 'r', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@NDKNJEPM@?$AAG?$AAe?$AAt?$AAR?$AAo?$AAo?$AAt?$AAP?$AAa?$AAt?$AAh@
CONST	SEGMENT
??_C@_1BI@NDKNJEPM@?$AAG?$AAe?$AAt?$AAR?$AAo?$AAo?$AAt?$AAP?$AAa?$AAt?$AAh@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'R', 00H, 'o', 00H, 'o', 00H, 't', 00H
	DB	'P', 00H, 'a', 00H, 't', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@IFGEACPB@?$AAG?$AAe?$AAt?$AAD?$AAi?$AAs?$AAp?$AAF?$AAr?$AAo?$AAm?$AAN?$AAa?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CA@IFGEACPB@?$AAG?$AAe?$AAt?$AAD?$AAi?$AAs?$AAp?$AAF?$AAr?$AAo?$AAm?$AAN?$AAa?$AAm?$AAe@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'D', 00H, 'i', 00H, 's', 00H, 'p', 00H
	DB	'F', 00H, 'r', 00H, 'o', 00H, 'm', 00H, 'N', 00H, 'a', 00H, 'm'
	DB	00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@BEIIHEOD@?$AAS?$AAe?$AAt?$AAP?$AAa?$AAr?$AAe?$AAn?$AAt?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt@
CONST	SEGMENT
??_C@_1CE@BEIIHEOD@?$AAS?$AAe?$AAt?$AAP?$AAa?$AAr?$AAe?$AAn?$AAt?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 'D', 00H, 'i', 00H, 's', 00H, 'p', 00H, 'a'
	DB	00H, 't', 00H, 'c', 00H, 'h', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@HPKJAGHK@?$AAC?$AAa?$AAl?$AAl?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn@
CONST	SEGMENT
??_C@_1BK@HPKJAGHK@?$AAC?$AAa?$AAl?$AAl?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn@ DB 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, 'F', 00H, 'u', 00H, 'n', 00H
	DB	'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@CFCJLACK@?$AAG?$AAe?$AAt?$AAC?$AAt?$AAr?$AAl?$AAT?$AAy?$AAp?$AAe?$AAF?$AAr?$AAo?$AAm@
CONST	SEGMENT
??_C@_1CI@CFCJLACK@?$AAG?$AAe?$AAt?$AAC?$AAt?$AAr?$AAl?$AAT?$AAy?$AAp?$AAe?$AAF?$AAr?$AAo?$AAm@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'C', 00H, 't', 00H, 'r', 00H, 'l', 00H
	DB	'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'F', 00H, 'r', 00H, 'o'
	DB	00H, 'm', 00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@KMMLONAK@?$AAG?$AAe?$AAt?$AAC?$AAt?$AAr?$AAl?$AAT?$AAy?$AAp?$AAe?$AAF?$AAr?$AAo?$AAm@
CONST	SEGMENT
??_C@_1CI@KMMLONAK@?$AAG?$AAe?$AAt?$AAC?$AAt?$AAr?$AAl?$AAT?$AAy?$AAp?$AAe?$AAF?$AAr?$AAo?$AAm@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'C', 00H, 't', 00H, 'r', 00H, 'l', 00H
	DB	'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'F', 00H, 'r', 00H, 'o'
	DB	00H, 'm', 00H, 'H', 00H, 'w', 00H, 'n', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@LAKBAIKD@?$AAG?$AAe?$AAt?$AAC?$AAt?$AAr?$AAl?$AAN?$AAa?$AAm?$AAe?$AAF?$AAr?$AAo?$AAm@
CONST	SEGMENT
??_C@_1CI@LAKBAIKD@?$AAG?$AAe?$AAt?$AAC?$AAt?$AAr?$AAl?$AAN?$AAa?$AAm?$AAe?$AAF?$AAr?$AAo?$AAm@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'C', 00H, 't', 00H, 'r', 00H, 'l', 00H
	DB	'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 'F', 00H, 'r', 00H, 'o'
	DB	00H, 'm', 00H, 'H', 00H, 'w', 00H, 'n', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@JFNEDDFJ@?$AAG?$AAe?$AAt?$AAC?$AAt?$AAr?$AAl?$AAH?$AAw?$AAn?$AAd?$AAF?$AAr?$AAo?$AAm@
CONST	SEGMENT
??_C@_1CI@JFNEDDFJ@?$AAG?$AAe?$AAt?$AAC?$AAt?$AAr?$AAl?$AAH?$AAw?$AAn?$AAd?$AAF?$AAr?$AAo?$AAm@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'C', 00H, 't', 00H, 'r', 00H, 'l', 00H
	DB	'H', 00H, 'w', 00H, 'n', 00H, 'd', 00H, 'F', 00H, 'r', 00H, 'o'
	DB	00H, 'm', 00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@DGIFPOCN@?$AAG?$AAe?$AAt?$AAM?$AAa?$AAp?$AAI?$AAn?$AAf?$AAo@
CONST	SEGMENT
??_C@_1BG@DGIFPOCN@?$AAG?$AAe?$AAt?$AAM?$AAa?$AAp?$AAI?$AAn?$AAf?$AAo@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 'I', 00H
	DB	'n', 00H, 'f', 00H, 'o', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@IADOHFP@?$AAG?$AAe?$AAt?$AAM?$AAa?$AAp?$AAN?$AAa?$AAm?$AAe@
CONST	SEGMENT
??_C@_1BG@IADOHFP@?$AAG?$AAe?$AAt?$AAM?$AAa?$AAp?$AAN?$AAa?$AAm?$AAe@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 'N', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@PIOPHLCJ@?$AAG?$AAe?$AAt?$AAT?$AAr?$AAL?$AAi?$AAs?$AAt@
CONST	SEGMENT
??_C@_1BE@PIOPHLCJ@?$AAG?$AAe?$AAt?$AAT?$AAr?$AAL?$AAi?$AAs?$AAt@ DB 'G', 00H
	DB	'e', 00H, 't', 00H, 'T', 00H, 'r', 00H, 'L', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@HKIJKHNI@?$AAS?$AAh?$AAo?$AAw?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AAB?$AAo?$AAx@
CONST	SEGMENT
??_C@_1BO@HKIJKHNI@?$AAS?$AAh?$AAo?$AAw?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AAB?$AAo?$AAx@ DB 'S'
	DB	00H, 'h', 00H, 'o', 00H, 'w', 00H, 'M', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, 'B', 00H, 'o', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@JDHAJGKD@?$AAS?$AAh?$AAo?$AAw?$AAT?$AAr?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe@
CONST	SEGMENT
??_C@_1BM@JDHAJGKD@?$AAS?$AAh?$AAo?$AAw?$AAT?$AAr?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe@ DB 'S'
	DB	00H, 'h', 00H, 'o', 00H, 'w', 00H, 'T', 00H, 'r', 00H, 'M', 00H
	DB	'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FBDBEKAM@?$AAB?$AAl?$AAa?$AAn?$AAk@
CONST	SEGMENT
??_C@_1M@FBDBEKAM@?$AAB?$AAl?$AAa?$AAn?$AAk@ DB 'B', 00H, 'l', 00H, 'a', 00H
	DB	'n', 00H, 'k', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@GDHAKDF@?$AAU?$AAn?$AAL?$AAo?$AAa?$AAd?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt@
CONST	SEGMENT
??_C@_1BK@GDHAKDF@?$AAU?$AAn?$AAL?$AAo?$AAa?$AAd?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt@ DB 'U'
	DB	00H, 'n', 00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'S', 00H
	DB	'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JDJGOFKB@?$AAS?$AAe?$AAt?$AAS?$AAh?$AAa?$AAr?$AAe?$AAd?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf@
CONST	SEGMENT
??_C@_1CG@JDJGOFKB@?$AAS?$AAe?$AAt?$AAS?$AAh?$AAa?$AAr?$AAe?$AAd?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'S', 00H, 'h', 00H, 'a', 00H, 'r', 00H
	DB	'e', 00H, 'd', 00H, 'I', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r'
	DB	00H, 'f', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@LJJIEHNN@?$AAG?$AAe?$AAt?$AAS?$AAo?$AAc?$AAk?$AAe?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe@
CONST	SEGMENT
??_C@_1CA@LJJIEHNN@?$AAG?$AAe?$AAt?$AAS?$AAo?$AAc?$AAk?$AAe?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'S', 00H, 'o', 00H, 'c', 00H, 'k', 00H
	DB	'e', 00H, 't', 00H, 'H', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'l'
	DB	00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@NFELDDBO@?$AAS?$AAe?$AAt?$AAS?$AAo?$AAc?$AAk?$AAe?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe@
CONST	SEGMENT
??_C@_1CA@NFELDDBO@?$AAS?$AAe?$AAt?$AAS?$AAo?$AAc?$AAk?$AAe?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'S', 00H, 'o', 00H, 'c', 00H, 'k', 00H
	DB	'e', 00H, 't', 00H, 'H', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'l'
	DB	00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@NEKAOIBK@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAT?$AAR@
CONST	SEGMENT
??_C@_1BE@NEKAOIBK@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAT?$AAR@ DB 'R', 00H
	DB	'e', 00H, 'c', 00H, 'e', 00H, 'i', 00H, 'v', 00H, 'e', 00H, 'T'
	DB	00H, 'R', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@KIELGECM@?$AAS?$AAe?$AAn?$AAd?$AAT?$AAR@
CONST	SEGMENT
??_C@_1O@KIELGECM@?$AAS?$AAe?$AAn?$AAd?$AAT?$AAR@ DB 'S', 00H, 'e', 00H, 'n'
	DB	00H, 'd', 00H, 'T', 00H, 'R', 00H, 00H, 00H	; `string'
CONST	ENDS
_DATA	SEGMENT
?m_osInterfaceName@CDispDesk@@2PAPA_WA DD FLAT:??_C@_1O@KIELGECM@?$AAS?$AAe?$AAn?$AAd?$AAT?$AAR@ ; CDispDesk::m_osInterfaceName
	DD	FLAT:??_C@_1BE@NEKAOIBK@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAT?$AAR@
	DD	FLAT:??_C@_1CA@NFELDDBO@?$AAS?$AAe?$AAt?$AAS?$AAo?$AAc?$AAk?$AAe?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe@
	DD	FLAT:??_C@_1CA@LJJIEHNN@?$AAG?$AAe?$AAt?$AAS?$AAo?$AAc?$AAk?$AAe?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe@
	DD	FLAT:??_C@_1CG@JDJGOFKB@?$AAS?$AAe?$AAt?$AAS?$AAh?$AAa?$AAr?$AAe?$AAd?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf@
	DD	FLAT:??_C@_1BK@GDHAKDF@?$AAU?$AAn?$AAL?$AAo?$AAa?$AAd?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt@
	DD	FLAT:??_C@_1M@FBDBEKAM@?$AAB?$AAl?$AAa?$AAn?$AAk@
	DD	FLAT:??_C@_1BM@JDHAJGKD@?$AAS?$AAh?$AAo?$AAw?$AAT?$AAr?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe@
	DD	FLAT:??_C@_1BO@HKIJKHNI@?$AAS?$AAh?$AAo?$AAw?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AAB?$AAo?$AAx@
	DD	FLAT:??_C@_1BE@PIOPHLCJ@?$AAG?$AAe?$AAt?$AAT?$AAr?$AAL?$AAi?$AAs?$AAt@
	DD	FLAT:??_C@_1BG@IADOHFP@?$AAG?$AAe?$AAt?$AAM?$AAa?$AAp?$AAN?$AAa?$AAm?$AAe@
	DD	FLAT:??_C@_1BG@DGIFPOCN@?$AAG?$AAe?$AAt?$AAM?$AAa?$AAp?$AAI?$AAn?$AAf?$AAo@
	DD	FLAT:??_C@_1CI@JFNEDDFJ@?$AAG?$AAe?$AAt?$AAC?$AAt?$AAr?$AAl?$AAH?$AAw?$AAn?$AAd?$AAF?$AAr?$AAo?$AAm@
	DD	FLAT:??_C@_1CI@LAKBAIKD@?$AAG?$AAe?$AAt?$AAC?$AAt?$AAr?$AAl?$AAN?$AAa?$AAm?$AAe?$AAF?$AAr?$AAo?$AAm@
	DD	FLAT:??_C@_1CI@KMMLONAK@?$AAG?$AAe?$AAt?$AAC?$AAt?$AAr?$AAl?$AAT?$AAy?$AAp?$AAe?$AAF?$AAr?$AAo?$AAm@
	DD	FLAT:??_C@_1CI@CFCJLACK@?$AAG?$AAe?$AAt?$AAC?$AAt?$AAr?$AAl?$AAT?$AAy?$AAp?$AAe?$AAF?$AAr?$AAo?$AAm@
	DD	FLAT:??_C@_1BK@HPKJAGHK@?$AAC?$AAa?$AAl?$AAl?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn@
	DD	FLAT:??_C@_1CE@BEIIHEOD@?$AAS?$AAe?$AAt?$AAP?$AAa?$AAr?$AAe?$AAn?$AAt?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt@
	DD	FLAT:??_C@_1CA@IFGEACPB@?$AAG?$AAe?$AAt?$AAD?$AAi?$AAs?$AAp?$AAF?$AAr?$AAo?$AAm?$AAN?$AAa?$AAm?$AAe@
	DD	FLAT:??_C@_1BI@NDKNJEPM@?$AAG?$AAe?$AAt?$AAR?$AAo?$AAo?$AAt?$AAP?$AAa?$AAt?$AAh@
	DD	FLAT:??_C@_1BM@CHGEHELO@?$AAG?$AAe?$AAt?$AAF?$AAo?$AAr?$AAm?$AAT?$AAr?$AAD?$AAa?$AAt?$AAa@
	DD	FLAT:??_C@_1BM@DKOMFBBK@?$AAS?$AAe?$AAt?$AAF?$AAo?$AAr?$AAm?$AAT?$AAr?$AAD?$AAa?$AAt?$AAa@
	DD	FLAT:??_C@_1BG@NICPHEAF@?$AAF?$AAo?$AAr?$AAm?$AAU?$AAn?$AAL?$AAo?$AAa?$AAd@
	DD	FLAT:??_C@_1BO@BKAOKKAA@?$AAS?$AAe?$AAt?$AAO?$AAp?$AAe?$AAn?$AAM?$AAa?$AAp?$AAD?$AAa?$AAt?$AAa@
	DD	FLAT:??_C@_1CC@IALEMHMG@?$AAS?$AAe?$AAn?$AAd?$AAD?$AAa?$AAt?$AAa?$AAT?$AAo?$AAO?$AAp?$AAe?$AAn?$AAe@
	DD	FLAT:??_C@_1BI@KFOFPKIA@?$AAC?$AAa?$AAl?$AAl?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@
	DD	FLAT:??_C@_1BO@JLGBBKCC@?$AAG?$AAe?$AAt?$AAO?$AAp?$AAe?$AAn?$AAM?$AAa?$AAp?$AAD?$AAa?$AAt?$AAa@
	DD	FLAT:??_C@_1CA@GMCBGANC@?$AAS?$AAe?$AAt?$AAO?$AAp?$AAe?$AAn?$AAM?$AAa?$AAp?$AAD?$AAa?$AAt?$AAa?$AA2@
	DD	FLAT:??_C@_1BO@EAFJHIHC@?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AAF?$AAr?$AAo?$AAm?$AAM?$AAa?$AAi?$AAn@
	DD	FLAT:??_C@_1BI@KGHAFHKA@?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAF?$AAo?$AAc?$AAu?$AAs@
	DD	FLAT:??_C@_1BE@GHIPLDDL@?$AAG?$AAo?$AAt?$AAo?$AAF?$AAo?$AAc?$AAu?$AAs@
	DD	FLAT:??_C@_1BG@JGFILGLN@?$AAS?$AAe?$AAt?$AAK?$AAe?$AAy?$AAD?$AAa?$AAt?$AAa@
	DD	FLAT:??_C@_1BG@GDAOGPPM@?$AAG?$AAe?$AAt?$AAK?$AAe?$AAy?$AAD?$AAa?$AAt?$AAa@
	DD	FLAT:??_C@_1CK@NFKNHMDM@?$AAS?$AAe?$AAt?$AAG?$AAS?$AAh?$AAa?$AAr?$AAe?$AAd?$AAN?$AAo?$AAt?$AAi?$AAf@
	DD	FLAT:??_C@_1BE@FJHGHHJA@?$AAL?$AAo?$AAa?$AAd?$AAX?$AAf?$AAm?$AAE?$AAx@
	DD	FLAT:??_C@_1BG@BNAAOKLP@?$AAR?$AAe?$AAs?$AAi?$AAz?$AAe?$AAF?$AAo?$AAn?$AAt@
	DD	FLAT:??_C@_1BG@BHGFMEJB@?$AAG?$AAe?$AAt?$AAM?$AAa?$AAp?$AAS?$AAi?$AAz?$AAe@
	DD	FLAT:??_C@_1BI@MHKGKKII@?$AAS?$AAe?$AAt?$AAI?$AAn?$AAi?$AAt?$AAF?$AAo?$AAn?$AAt@
	DD	FLAT:??_C@_1BG@OKCOEOIM@?$AAS?$AAe?$AAt?$AAT?$AAa?$AAb?$AAS?$AAt?$AAo?$AAp@
	DD	FLAT:??_C@_1CC@CGCAKOBD@?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AAG?$AAS?$AAh?$AAa?$AAr?$AAe?$AAD?$AAa?$AAt@
	DD	FLAT:??_C@_1CC@LOMMDIOP@?$AAS?$AAe?$AAt?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAu?$AAn?$AAt?$AAF?$AAl?$AAa@
	DD	FLAT:??_C@_1BI@HILDJCJO@?$AAD?$AAe?$AAb?$AAu?$AAg?$AAT?$AAr?$AAD?$AAa?$AAt?$AAa@
	DD	FLAT:??_C@_1BK@DOELELCL@?$AAS?$AAe?$AAn?$AAd?$AAT?$AAr?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt@
	DD	FLAT:??_C@_1BA@KMFOECKF@?$AAS?$AAe?$AAt?$AAF?$AAl?$AAa?$AAg@
	DD	FLAT:??_C@_1BM@OENDCIID@?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AAT?$AAR?$AAI?$AAn?$AAO?$AAu?$AAt@
	DD	FLAT:??_C@_1BK@IGCGCFNE@?$AAG?$AAe?$AAt?$AAU?$AAs?$AAe?$AAr?$AAC?$AAo?$AAl?$AAo?$AAr@
	DD	FLAT:??_C@_1CI@IEJNALOK@?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAr?$AAM?$AAe?$AAs@
	DD	FLAT:??_C@_1CE@NALKHLND@?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAs?$AAg?$AAC?$AAo@
	DD	FLAT:??_C@_1CI@MEFMNOH@?$AAS?$AAe?$AAl?$AAe?$AAc?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAC?$AAo?$AAm@
	DD	FLAT:??_C@_1BE@LCNOBEJ@?$AAS?$AAe?$AAt?$AAR?$AAs?$AAc?$AAM?$AAn?$AAg@
	DD	FLAT:??_C@_1BK@GNILNMLM@?$AAM?$AAa?$AAi?$AAn?$AAK?$AAe?$AAy?$AAP?$AAr?$AAe?$AAs?$AAs@
	DD	FLAT:??_C@_1CI@KGMGLBIN@?$AAS?$AAe?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAi?$AAn?$AAg?$AAH?$AAa@
	DD	FLAT:??_C@_1CC@BJGPLKHJ@?$AAS?$AAe?$AAt?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn@
	DD	FLAT:??_C@_1CE@LJGELICL@?$AAA?$AAd?$AAd?$AAU?$AAs?$AAe?$AAr?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt?$AAI?$AAt@
	DD	FLAT:??_C@_1BG@DLIGMEDF@?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AAO?$AAu?$AAt@
	DD	FLAT:??_C@_1BK@OENEFBNG@?$AAE?$AAx?$AAc?$AAu?$AAt?$AAe?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt@
	DD	FLAT:??_C@_1BG@LEJKLDJC@?$AAG?$AAe?$AAt?$AAM?$AAa?$AAp?$AAD?$AAa?$AAt?$AAa@
	DD	FLAT:??_C@_1BM@DHCCDBJ@?$AAS?$AAe?$AAn?$AAd?$AAT?$AAR?$AAF?$AAo?$AAr?$AAC?$AAe?$AAr?$AAt@
	DD	FLAT:??_C@_1BM@IBHIPADC@?$AAR?$AAe?$AAs?$AAi?$AAz?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@
	DD	FLAT:??_C@_1BI@BDEOEOEI@?$AAM?$AAo?$AAv?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@
	DD	FLAT:??_C@_1CE@JBKJBJLC@?$AAS?$AAe?$AAt?$AAC?$AAt?$AAr?$AAl?$AAR?$AAe?$AAs?$AAi?$AAz?$AAe?$AAF?$AAl@
	DD	FLAT:??_C@_1BK@GJGINPCK@?$AAI?$AAs?$AAD?$AAe?$AAs?$AAk?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe@
_DATA	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0CDispDesk@@QAE@XZ				; CDispDesk::CDispDesk
PUBLIC	??1CDispDesk@@QAE@XZ				; CDispDesk::~CDispDesk
PUBLIC	?InitInterfaceName@CDispDesk@@QAEXPAUIDispatch@@@Z ; CDispDesk::InitInterfaceName
PUBLIC	?SendTR@CDispDesk@@QAEFPBD@Z			; CDispDesk::SendTR
PUBLIC	?ReceiveTR@CDispDesk@@QAEFPBDJF@Z		; CDispDesk::ReceiveTR
PUBLIC	?SetSocketHandle@CDispDesk@@QAEXPBDJ@Z		; CDispDesk::SetSocketHandle
PUBLIC	?GetSocketHandle@CDispDesk@@QAEJPBD@Z		; CDispDesk::GetSocketHandle
PUBLIC	?SetSharedInterface@CDispDesk@@QAEJJ@Z		; CDispDesk::SetSharedInterface
PUBLIC	?UnLoadScript@CDispDesk@@QAEXXZ			; CDispDesk::UnLoadScript
PUBLIC	?Blank@CDispDesk@@QAEXXZ			; CDispDesk::Blank
PUBLIC	?ShowTrMessage@CDispDesk@@QAEXPBD@Z		; CDispDesk::ShowTrMessage
PUBLIC	?ShowMessageBox@CDispDesk@@QAEFFPBD@Z		; CDispDesk::ShowMessageBox
PUBLIC	?GetTrList@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CDispDesk::GetTrList
PUBLIC	?GetMapName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CDispDesk::GetMapName
PUBLIC	?GetMapInfo@CDispDesk@@QAEHPBDPAUtagVARIANT@@@Z	; CDispDesk::GetMapInfo
PUBLIC	?GetCtrlHwndFromName@CDispDesk@@QAEJPBD@Z	; CDispDesk::GetCtrlHwndFromName
PUBLIC	?GetCtrlNameFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z ; CDispDesk::GetCtrlNameFromHwnd
PUBLIC	?GetCtrlTypeFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z ; CDispDesk::GetCtrlTypeFromHwnd
PUBLIC	?GetCtrlTypeFromName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CDispDesk::GetCtrlTypeFromName
PUBLIC	?CallFunction@CDispDesk@@QAEHPBD0F@Z		; CDispDesk::CallFunction
PUBLIC	?SetParentDispatch@CDispDesk@@QAEXPAUIDispatch@@@Z ; CDispDesk::SetParentDispatch
PUBLIC	?GetDispFromName@CDispDesk@@QAEPAUIDispatch@@PBD@Z ; CDispDesk::GetDispFromName
PUBLIC	?GetRootPath@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CDispDesk::GetRootPath
PUBLIC	?GetFormTrData@CDispDesk@@QAEHPBDPAPA_WPAF@Z	; CDispDesk::GetFormTrData
PUBLIC	?SetFormTrData@CDispDesk@@QAEHPBD0F@Z		; CDispDesk::SetFormTrData
PUBLIC	?FormUnLoad@CDispDesk@@QAEXXZ			; CDispDesk::FormUnLoad
PUBLIC	?SetOpenMapData@CDispDesk@@QAEXFPBD0F0@Z	; CDispDesk::SetOpenMapData
PUBLIC	?SendDataToOpener@CDispDesk@@QAEHPBDF@Z		; CDispDesk::SendDataToOpener
PUBLIC	?CallCommand@CDispDesk@@QAEXPBD@Z		; CDispDesk::CallCommand
PUBLIC	?GetOpenMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CDispDesk::GetOpenMapData
PUBLIC	?SetOpenMapData2@CDispDesk@@QAEXJ@Z		; CDispDesk::SetOpenMapData2
PUBLIC	?NotifyFromMain@CDispDesk@@QAEXPBD0@Z		; CDispDesk::NotifyFromMain
PUBLIC	?EnableFocus@CDispDesk@@QAEHPBDF@Z		; CDispDesk::EnableFocus
PUBLIC	?GotoFocus@CDispDesk@@QAEXPBD@Z			; CDispDesk::GotoFocus
PUBLIC	?SetKeyData@CDispDesk@@QAEXPBDJF@Z		; CDispDesk::SetKeyData
PUBLIC	?GetKeyData@CDispDesk@@QAEJPBDPAF@Z		; CDispDesk::GetKeyData
PUBLIC	?SetGSharedNotifyFlag@CDispDesk@@QAEXF@Z	; CDispDesk::SetGSharedNotifyFlag
PUBLIC	?LoadXfmEx@CDispDesk@@QAEHJ@Z			; CDispDesk::LoadXfmEx
PUBLIC	?ResizeFont@CDispDesk@@QAEXFFPBD@Z		; CDispDesk::ResizeFont
PUBLIC	?GetMapSize@CDispDesk@@QAEHPAUtagVARIANT@@0@Z	; CDispDesk::GetMapSize
PUBLIC	?SetInitFont@CDispDesk@@QAEXFFPBD@Z		; CDispDesk::SetInitFont
PUBLIC	?SetTabStop@CDispDesk@@QAEXF@Z			; CDispDesk::SetTabStop
PUBLIC	?NotifyGShareData@CDispDesk@@QAEXPBD0@Z		; CDispDesk::NotifyGShareData
PUBLIC	?SetSendCountFlag@CDispDesk@@QAEFF@Z		; CDispDesk::SetSendCountFlag
PUBLIC	?DebugTrData@CDispDesk@@QAEXPBD@Z		; CDispDesk::DebugTrData
PUBLIC	?SendTrDirect@CDispDesk@@QAEFPBD0F@Z		; CDispDesk::SendTrDirect
PUBLIC	?SetFlag@CDispDesk@@QAEXPBDF@Z			; CDispDesk::SetFlag
PUBLIC	?ChangeTRInOut@CDispDesk@@QAEXPBD00F@Z		; CDispDesk::ChangeTRInOut
PUBLIC	?GetUserColor@CDispDesk@@QAEKFPBDF@Z		; CDispDesk::GetUserColor
PUBLIC	?GetCurrentTrMessage@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CDispDesk::GetCurrentTrMessage
PUBLIC	?GetCurrentMsgCode@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CDispDesk::GetCurrentMsgCode
PUBLIC	?SelectPacketCommand@CDispDesk@@QAEFF@Z		; CDispDesk::SelectPacketCommand
PUBLIC	?SetRscMng@CDispDesk@@QAEXJ@Z			; CDispDesk::SetRscMng
PUBLIC	?MainKeyPress@CDispDesk@@QAEXPBD@Z		; CDispDesk::MainKeyPress
PUBLIC	?SetMonitoringHandle@CDispDesk@@QAEXJ@Z		; CDispDesk::SetMonitoringHandle
PUBLIC	?AddUserScriptItem@CDispDesk@@QAEJPBDPAUIDispatch@@@Z ; CDispDesk::AddUserScriptItem
PUBLIC	?ExcuteScript@CDispDesk@@QAEJPBD00@Z		; CDispDesk::ExcuteScript
PUBLIC	?GetMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CDispDesk::GetMapData
PUBLIC	?SetNotifyCommand@CDispDesk@@QAEJPBD@Z		; CDispDesk::SetNotifyCommand
PUBLIC	?SendTRForCert@CDispDesk@@QAEFPBD@Z		; CDispDesk::SendTRForCert
PUBLIC	?ResizeControl@CDispDesk@@QAEHPBDJJ@Z		; CDispDesk::ResizeControl
PUBLIC	?MoveControl@CDispDesk@@QAEHPBDJJ@Z		; CDispDesk::MoveControl
PUBLIC	?SetCtrlResizeFlag@CDispDesk@@QAEHPBDHHHH@Z	; CDispDesk::SetCtrlResizeFlag
PUBLIC	?IsDeskActive@CDispDesk@@QAEHXZ			; CDispDesk::IsDeskActive
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	___std_terminate:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	??0COleDispatchDriver@@QAE@XZ:PROC		; COleDispatchDriver::COleDispatchDriver
EXTRN	?ReleaseDispatch@COleDispatchDriver@@QAEXXZ:PROC ; COleDispatchDriver::ReleaseDispatch
EXTRN	?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ:PROC ; COleDispatchDriver::InvokeHelper
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_GUID_NULL:BYTE
EXTRN	___security_cookie:DWORD
;	COMDAT ?parms@?1??SetCtrlResizeFlag@CDispDesk@@QAEHPBDHHHH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetCtrlResizeFlag@CDispDesk@@QAEHPBDHHHH@Z@4PAEA DB 03H, 0eH, 0bH
	DB	0bH, 0bH, 0bH, 00H				; `CDispDesk::SetCtrlResizeFlag'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??MoveControl@CDispDesk@@QAEHPBDJJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??MoveControl@CDispDesk@@QAEHPBDJJ@Z@4PAEA DB 0eH, 03H, 03H, 00H ; `CDispDesk::MoveControl'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??ResizeControl@CDispDesk@@QAEHPBDJJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??ResizeControl@CDispDesk@@QAEHPBDJJ@Z@4PAEA DB 0eH, 03H, 03H, 00H ; `CDispDesk::ResizeControl'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SendTRForCert@CDispDesk@@QAEFPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SendTRForCert@CDispDesk@@QAEFPBD@Z@4PAEA DB 0eH, 00H ; `CDispDesk::SendTRForCert'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetNotifyCommand@CDispDesk@@QAEJPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetNotifyCommand@CDispDesk@@QAEJPBD@Z@4PAEA DB 0eH, 00H ; `CDispDesk::SetNotifyCommand'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??ExcuteScript@CDispDesk@@QAEJPBD00@Z@4PAEA
_DATA	SEGMENT
?parms@?1??ExcuteScript@CDispDesk@@QAEJPBD00@Z@4PAEA DB 0eH, 0eH, 0eH, 00H ; `CDispDesk::ExcuteScript'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??AddUserScriptItem@CDispDesk@@QAEJPBDPAUIDispatch@@@Z@4PAEA
_DATA	SEGMENT
?parms@?1??AddUserScriptItem@CDispDesk@@QAEJPBDPAUIDispatch@@@Z@4PAEA DB 0eH
	DB	09H, 00H					; `CDispDesk::AddUserScriptItem'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetMonitoringHandle@CDispDesk@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetMonitoringHandle@CDispDesk@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CDispDesk::SetMonitoringHandle'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??MainKeyPress@CDispDesk@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??MainKeyPress@CDispDesk@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CDispDesk::MainKeyPress'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetRscMng@CDispDesk@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetRscMng@CDispDesk@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CDispDesk::SetRscMng'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SelectPacketCommand@CDispDesk@@QAEFF@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SelectPacketCommand@CDispDesk@@QAEFF@Z@4PAEA DB 02H, 00H ; `CDispDesk::SelectPacketCommand'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??GetUserColor@CDispDesk@@QAEKFPBDF@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetUserColor@CDispDesk@@QAEKFPBDF@Z@4PAEA DB 02H, 0eH, 02H, 00H ; `CDispDesk::GetUserColor'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??ChangeTRInOut@CDispDesk@@QAEXPBD00F@Z@4PAEA
_DATA	SEGMENT
?parms@?1??ChangeTRInOut@CDispDesk@@QAEXPBD00F@Z@4PAEA DB 0eH, 0eH, 0eH, 02H
	DB	00H						; `CDispDesk::ChangeTRInOut'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetFlag@CDispDesk@@QAEXPBDF@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetFlag@CDispDesk@@QAEXPBDF@Z@4PAEA DB 0eH, 02H, 00H ; `CDispDesk::SetFlag'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SendTrDirect@CDispDesk@@QAEFPBD0F@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SendTrDirect@CDispDesk@@QAEFPBD0F@Z@4PAEA DB 0eH, 0eH, 02H, 00H ; `CDispDesk::SendTrDirect'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??DebugTrData@CDispDesk@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??DebugTrData@CDispDesk@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CDispDesk::DebugTrData'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetSendCountFlag@CDispDesk@@QAEFF@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetSendCountFlag@CDispDesk@@QAEFF@Z@4PAEA DB 02H, 00H ; `CDispDesk::SetSendCountFlag'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??NotifyGShareData@CDispDesk@@QAEXPBD0@Z@4PAEA
_DATA	SEGMENT
?parms@?1??NotifyGShareData@CDispDesk@@QAEXPBD0@Z@4PAEA DB 0eH, 0eH, 00H ; `CDispDesk::NotifyGShareData'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetTabStop@CDispDesk@@QAEXF@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetTabStop@CDispDesk@@QAEXF@Z@4PAEA DB 02H, 00H ; `CDispDesk::SetTabStop'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetInitFont@CDispDesk@@QAEXFFPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetInitFont@CDispDesk@@QAEXFFPBD@Z@4PAEA DB 02H, 02H, 0eH, 00H ; `CDispDesk::SetInitFont'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??GetMapSize@CDispDesk@@QAEHPAUtagVARIANT@@0@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetMapSize@CDispDesk@@QAEHPAUtagVARIANT@@0@Z@4PAEA DB 'LL', 00H ; `CDispDesk::GetMapSize'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??ResizeFont@CDispDesk@@QAEXFFPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??ResizeFont@CDispDesk@@QAEXFFPBD@Z@4PAEA DB 02H, 02H, 0eH, 00H ; `CDispDesk::ResizeFont'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??LoadXfmEx@CDispDesk@@QAEHJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??LoadXfmEx@CDispDesk@@QAEHJ@Z@4PAEA DB 03H, 00H ; `CDispDesk::LoadXfmEx'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetGSharedNotifyFlag@CDispDesk@@QAEXF@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetGSharedNotifyFlag@CDispDesk@@QAEXF@Z@4PAEA DB 02H, 00H ; `CDispDesk::SetGSharedNotifyFlag'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??GetKeyData@CDispDesk@@QAEJPBDPAF@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetKeyData@CDispDesk@@QAEJPBDPAF@Z@4PAEA DB 0eH, 'B', 00H ; `CDispDesk::GetKeyData'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetKeyData@CDispDesk@@QAEXPBDJF@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetKeyData@CDispDesk@@QAEXPBDJF@Z@4PAEA DB 0eH, 03H, 02H, 00H ; `CDispDesk::SetKeyData'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??GotoFocus@CDispDesk@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GotoFocus@CDispDesk@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CDispDesk::GotoFocus'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??EnableFocus@CDispDesk@@QAEHPBDF@Z@4PAEA
_DATA	SEGMENT
?parms@?1??EnableFocus@CDispDesk@@QAEHPBDF@Z@4PAEA DB 0eH, 02H, 00H ; `CDispDesk::EnableFocus'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??NotifyFromMain@CDispDesk@@QAEXPBD0@Z@4PAEA
_DATA	SEGMENT
?parms@?1??NotifyFromMain@CDispDesk@@QAEXPBD0@Z@4PAEA DB 0eH, 0eH, 00H ; `CDispDesk::NotifyFromMain'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetOpenMapData2@CDispDesk@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetOpenMapData2@CDispDesk@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CDispDesk::SetOpenMapData2'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??CallCommand@CDispDesk@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??CallCommand@CDispDesk@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CDispDesk::CallCommand'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SendDataToOpener@CDispDesk@@QAEHPBDF@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SendDataToOpener@CDispDesk@@QAEHPBDF@Z@4PAEA DB 0eH, 02H, 00H ; `CDispDesk::SendDataToOpener'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetOpenMapData@CDispDesk@@QAEXFPBD0F0@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetOpenMapData@CDispDesk@@QAEXFPBD0F0@Z@4PAEA DB 02H, 0eH, 0eH
	DB	02H, 0eH, 00H				; `CDispDesk::SetOpenMapData'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetFormTrData@CDispDesk@@QAEHPBD0F@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetFormTrData@CDispDesk@@QAEHPBD0F@Z@4PAEA DB 0eH, 0eH, 02H, 00H ; `CDispDesk::SetFormTrData'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??GetFormTrData@CDispDesk@@QAEHPBDPAPA_WPAF@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetFormTrData@CDispDesk@@QAEHPBDPAPA_WPAF@Z@4PAEA DB 0eH, 'HB', 00H ; `CDispDesk::GetFormTrData'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??GetRootPath@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetRootPath@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA DB 0eH
	DB	00H						; `CDispDesk::GetRootPath'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??GetDispFromName@CDispDesk@@QAEPAUIDispatch@@PBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetDispFromName@CDispDesk@@QAEPAUIDispatch@@PBD@Z@4PAEA DB 0eH
	DB	00H						; `CDispDesk::GetDispFromName'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetParentDispatch@CDispDesk@@QAEXPAUIDispatch@@@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetParentDispatch@CDispDesk@@QAEXPAUIDispatch@@@Z@4PAEA DB 09H
	DB	00H						; `CDispDesk::SetParentDispatch'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??CallFunction@CDispDesk@@QAEHPBD0F@Z@4PAEA
_DATA	SEGMENT
?parms@?1??CallFunction@CDispDesk@@QAEHPBD0F@Z@4PAEA DB 0eH, 0eH, 02H, 00H ; `CDispDesk::CallFunction'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??GetCtrlTypeFromName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetCtrlTypeFromName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA DB 0eH
	DB	00H						; `CDispDesk::GetCtrlTypeFromName'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??GetCtrlTypeFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetCtrlTypeFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z@4PAEA DB 03H
	DB	00H						; `CDispDesk::GetCtrlTypeFromHwnd'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??GetCtrlNameFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetCtrlNameFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z@4PAEA DB 03H
	DB	00H						; `CDispDesk::GetCtrlNameFromHwnd'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??GetCtrlHwndFromName@CDispDesk@@QAEJPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetCtrlHwndFromName@CDispDesk@@QAEJPBD@Z@4PAEA DB 0eH, 00H ; `CDispDesk::GetCtrlHwndFromName'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??GetMapInfo@CDispDesk@@QAEHPBDPAUtagVARIANT@@@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetMapInfo@CDispDesk@@QAEHPBDPAUtagVARIANT@@@Z@4PAEA DB 0eH, 'L'
	DB	00H						; `CDispDesk::GetMapInfo'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??ShowMessageBox@CDispDesk@@QAEFFPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??ShowMessageBox@CDispDesk@@QAEFFPBD@Z@4PAEA DB 02H, 0eH, 00H ; `CDispDesk::ShowMessageBox'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??ShowTrMessage@CDispDesk@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??ShowTrMessage@CDispDesk@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CDispDesk::ShowTrMessage'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetSharedInterface@CDispDesk@@QAEJJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetSharedInterface@CDispDesk@@QAEJJ@Z@4PAEA DB 03H, 00H ; `CDispDesk::SetSharedInterface'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??GetSocketHandle@CDispDesk@@QAEJPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetSocketHandle@CDispDesk@@QAEJPBD@Z@4PAEA DB 0eH, 00H ; `CDispDesk::GetSocketHandle'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetSocketHandle@CDispDesk@@QAEXPBDJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetSocketHandle@CDispDesk@@QAEXPBDJ@Z@4PAEA DB 0eH, 03H, 00H ; `CDispDesk::SetSocketHandle'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??ReceiveTR@CDispDesk@@QAEFPBDJF@Z@4PAEA
_DATA	SEGMENT
?parms@?1??ReceiveTR@CDispDesk@@QAEFPBDJF@Z@4PAEA DB 0eH, 03H, 02H, 00H ; `CDispDesk::ReceiveTR'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SendTR@CDispDesk@@QAEFPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SendTR@CDispDesk@@QAEFPBD@Z@4PAEA DB 0eH, 00H ; `CDispDesk::SendTR'::`2'::parms
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0
__ehfuncinfo$?GetMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCurrentMsgCode@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCurrentMsgCode@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0
__ehfuncinfo$?GetCurrentMsgCode@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCurrentMsgCode@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCurrentTrMessage@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCurrentTrMessage@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0
__ehfuncinfo$?GetCurrentTrMessage@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCurrentTrMessage@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetOpenMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetOpenMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0
__ehfuncinfo$?GetOpenMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetOpenMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetRootPath@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetRootPath@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z$0
__ehfuncinfo$?GetRootPath@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetRootPath@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCtrlTypeFromName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCtrlTypeFromName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z$0
__ehfuncinfo$?GetCtrlTypeFromName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCtrlTypeFromName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCtrlTypeFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCtrlTypeFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z$0
__ehfuncinfo$?GetCtrlTypeFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCtrlTypeFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCtrlNameFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCtrlNameFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z$0
__ehfuncinfo$?GetCtrlNameFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCtrlNameFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetMapName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetMapName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0
__ehfuncinfo$?GetMapName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetMapName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetTrList@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetTrList@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0
__ehfuncinfo$?GetTrList@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetTrList@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CDispDesk@@QAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1CDispDesk@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CDispDesk@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1COleDispatchDriver@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?IsDeskActive@CDispDesk@@QAEHXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?IsDeskActive@CDispDesk@@QAEHXZ PROC			; CDispDesk::IsDeskActive, COMDAT
; _this$ = ecx

; 628  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 629  : 	BOOL result;
; 630  : 	InvokeHelper(m_pdID[IIx_IsDeskActive], DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00009	50		 push	 eax
  0000a	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0000d	6a 0b		 push	 11			; 0000000bH
  0000f	6a 01		 push	 1
  00011	ff b0 f4 00 00
	00		 push	 DWORD PTR [eax+244]
  00017	51		 push	 ecx
  00018	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 631  : 	return result;

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]
  00020	83 c4 18	 add	 esp, 24			; 00000018H

; 632  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?IsDeskActive@CDispDesk@@QAEHXZ ENDP			; CDispDesk::IsDeskActive
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SetCtrlResizeFlag@CDispDesk@@QAEHPBDHHHH@Z
_TEXT	SEGMENT
_strCtrlName$ = 8					; size = 4
_bMove_X$ = 12						; size = 4
_bMove_Y$ = 16						; size = 4
_bResize_X$ = 20					; size = 4
_result$ = 24						; size = 4
_bResize_Y$ = 24					; size = 4
?SetCtrlResizeFlag@CDispDesk@@QAEHPBDHHHH@Z PROC	; CDispDesk::SetCtrlResizeFlag, COMDAT
; _this$ = ecx

; 618  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 619  : 	BOOL result;
; 620  : 	static BYTE parms[] =
; 621  : 		VTS_I4 VTS_BSTR VTS_BOOL VTS_BOOL VTS_BOOL VTS_BOOL;
; 622  : 	InvokeHelper(m_pdID[IIx_MoveControl], DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,

  00003	ff 75 18	 push	 DWORD PTR _bResize_Y$[ebp]
  00006	8d 45 18	 lea	 eax, DWORD PTR _result$[ebp]
  00009	ff 75 14	 push	 DWORD PTR _bResize_X$[ebp]
  0000c	ff 75 10	 push	 DWORD PTR _bMove_Y$[ebp]
  0000f	ff 75 0c	 push	 DWORD PTR _bMove_X$[ebp]
  00012	ff 75 08	 push	 DWORD PTR _strCtrlName$[ebp]
  00015	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetCtrlResizeFlag@CDispDesk@@QAEHPBDHHHH@Z@4PAEA
  0001a	50		 push	 eax
  0001b	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001e	6a 0b		 push	 11			; 0000000bH
  00020	6a 01		 push	 1
  00022	ff b0 ec 00 00
	00		 push	 DWORD PTR [eax+236]
  00028	51		 push	 ecx
  00029	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 623  : 		strCtrlName, bMove_X, bMove_Y, bResize_X, bResize_Y);
; 624  : 	return result;

  0002e	8b 45 18	 mov	 eax, DWORD PTR _result$[ebp]
  00031	83 c4 2c	 add	 esp, 44			; 0000002cH

; 625  : }

  00034	5d		 pop	 ebp
  00035	c2 14 00	 ret	 20			; 00000014H
?SetCtrlResizeFlag@CDispDesk@@QAEHPBDHHHH@Z ENDP	; CDispDesk::SetCtrlResizeFlag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?MoveControl@CDispDesk@@QAEHPBDJJ@Z
_TEXT	SEGMENT
_strCtrlName$ = 8					; size = 4
_nXDir$ = 12						; size = 4
_result$ = 16						; size = 4
_nYDir$ = 16						; size = 4
?MoveControl@CDispDesk@@QAEHPBDJJ@Z PROC		; CDispDesk::MoveControl, COMDAT
; _this$ = ecx

; 608  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 609  : 	BOOL result;
; 610  : 	static BYTE parms[] =
; 611  : 		VTS_BSTR VTS_I4 VTS_I4;
; 612  : 	InvokeHelper(m_pdID[IIx_MoveControl], DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,

  00003	ff 75 10	 push	 DWORD PTR _nYDir$[ebp]
  00006	8d 45 10	 lea	 eax, DWORD PTR _result$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR _nXDir$[ebp]
  0000c	ff 75 08	 push	 DWORD PTR _strCtrlName$[ebp]
  0000f	68 00 00 00 00	 push	 OFFSET ?parms@?1??MoveControl@CDispDesk@@QAEHPBDJJ@Z@4PAEA
  00014	50		 push	 eax
  00015	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00018	6a 0b		 push	 11			; 0000000bH
  0001a	6a 01		 push	 1
  0001c	ff b0 ec 00 00
	00		 push	 DWORD PTR [eax+236]
  00022	51		 push	 ecx
  00023	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 613  : 		strCtrlName, nXDir, nYDir);
; 614  : 	return result;

  00028	8b 45 10	 mov	 eax, DWORD PTR _result$[ebp]
  0002b	83 c4 24	 add	 esp, 36			; 00000024H

; 615  : }

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?MoveControl@CDispDesk@@QAEHPBDJJ@Z ENDP		; CDispDesk::MoveControl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?ResizeControl@CDispDesk@@QAEHPBDJJ@Z
_TEXT	SEGMENT
_strCtrlName$ = 8					; size = 4
_nLRPlusSize$ = 12					; size = 4
_result$ = 16						; size = 4
_nUDPlusSize$ = 16					; size = 4
?ResizeControl@CDispDesk@@QAEHPBDJJ@Z PROC		; CDispDesk::ResizeControl, COMDAT
; _this$ = ecx

; 598  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 599  : 	BOOL result;
; 600  : 	static BYTE parms[] =
; 601  : 		VTS_BSTR VTS_I4 VTS_I4;
; 602  : 	InvokeHelper(m_pdID[IIx_ResizeControl], DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,

  00003	ff 75 10	 push	 DWORD PTR _nUDPlusSize$[ebp]
  00006	8d 45 10	 lea	 eax, DWORD PTR _result$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR _nLRPlusSize$[ebp]
  0000c	ff 75 08	 push	 DWORD PTR _strCtrlName$[ebp]
  0000f	68 00 00 00 00	 push	 OFFSET ?parms@?1??ResizeControl@CDispDesk@@QAEHPBDJJ@Z@4PAEA
  00014	50		 push	 eax
  00015	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00018	6a 0b		 push	 11			; 0000000bH
  0001a	6a 01		 push	 1
  0001c	ff b0 e8 00 00
	00		 push	 DWORD PTR [eax+232]
  00022	51		 push	 ecx
  00023	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 603  : 		strCtrlName, nLRPlusSize, nUDPlusSize);
; 604  : 	return result;

  00028	8b 45 10	 mov	 eax, DWORD PTR _result$[ebp]
  0002b	83 c4 24	 add	 esp, 36			; 00000024H

; 605  : }

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?ResizeControl@CDispDesk@@QAEHPBDJJ@Z ENDP		; CDispDesk::ResizeControl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SendTRForCert@CDispDesk@@QAEFPBD@Z
_TEXT	SEGMENT
_result$ = 8						; size = 2
_szTrName$ = 8						; size = 4
?SendTRForCert@CDispDesk@@QAEFPBD@Z PROC		; CDispDesk::SendTRForCert, COMDAT
; _this$ = ecx

; 588  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 589  : 	short result;
; 590  : 	static BYTE parms[] =
; 591  : 		VTS_BSTR;
; 592  : 	InvokeHelper(m_pdID[IIx_SendTRForCert], DISPATCH_METHOD, VT_I2, (void*)&result, parms,

  00003	ff 75 08	 push	 DWORD PTR _szTrName$[ebp]
  00006	8d 45 08	 lea	 eax, DWORD PTR _result$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??SendTRForCert@CDispDesk@@QAEFPBD@Z@4PAEA
  0000e	50		 push	 eax
  0000f	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00012	6a 02		 push	 2
  00014	6a 01		 push	 1
  00016	ff b0 e4 00 00
	00		 push	 DWORD PTR [eax+228]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 593  : 		szTrName);
; 594  : 	return result;

  00022	66 8b 45 08	 mov	 ax, WORD PTR _result$[ebp]
  00026	83 c4 1c	 add	 esp, 28			; 0000001cH

; 595  : }

  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?SendTRForCert@CDispDesk@@QAEFPBD@Z ENDP		; CDispDesk::SendTRForCert
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SetNotifyCommand@CDispDesk@@QAEJPBD@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
_sKey$ = 8						; size = 4
?SetNotifyCommand@CDispDesk@@QAEJPBD@Z PROC		; CDispDesk::SetNotifyCommand, COMDAT
; _this$ = ecx

; 578  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 579  : 	long result;
; 580  : 	static BYTE parms[] =
; 581  : 		VTS_BSTR;
; 582  : 	InvokeHelper(m_pdID[IIx_SetNotifyCommand], DISPATCH_METHOD, VT_I4, (void*)&result, parms,

  00003	ff 75 08	 push	 DWORD PTR _sKey$[ebp]
  00006	8d 45 08	 lea	 eax, DWORD PTR _result$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetNotifyCommand@CDispDesk@@QAEJPBD@Z@4PAEA
  0000e	50		 push	 eax
  0000f	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00012	6a 03		 push	 3
  00014	6a 01		 push	 1
  00016	ff b0 d0 00 00
	00		 push	 DWORD PTR [eax+208]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 583  : 		sKey);
; 584  : 	return result;

  00022	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  00025	83 c4 1c	 add	 esp, 28			; 0000001cH

; 585  : }

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?SetNotifyCommand@CDispDesk@@QAEJPBD@Z ENDP		; CDispDesk::SetNotifyCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?GetMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC ; CDispDesk::GetMapData, COMDAT
; _this$ = ecx

; 571  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 572  : 	CString result;

  0002e	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00031	8b cf		 mov	 ecx, edi
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 573  : 	InvokeHelper(m_pdID[IIx_GetMapData], DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
; 574  : 	return result;

  00039	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0003c	6a 00		 push	 0
  0003e	57		 push	 edi
  0003f	6a 08		 push	 8
  00041	6a 01		 push	 1
  00043	ff b1 e0 00 00
	00		 push	 DWORD PTR [ecx+224]
  00049	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00050	56		 push	 esi
  00051	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T2[ebp], 1
  00058	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  0005d	83 c4 18	 add	 esp, 24			; 00000018H
  00060	8b c7		 mov	 eax, edi

; 575  : }

  00062	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00065	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006c	59		 pop	 ecx
  0006d	5f		 pop	 edi
  0006e	5e		 pop	 esi
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0d 00 00
	00		 je	 $LN4@GetMapData
  0000c	83 65 f0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00010	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00013	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN4@GetMapData:
  00019	c3		 ret	 0
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?GetMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CDispDesk::GetMapData
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?ExcuteScript@CDispDesk@@QAEJPBD00@Z
_TEXT	SEGMENT
_sVBName$ = 8						; size = 4
_sEventName$ = 12					; size = 4
_result$ = 16						; size = 4
_sParam$ = 16						; size = 4
?ExcuteScript@CDispDesk@@QAEJPBD00@Z PROC		; CDispDesk::ExcuteScript, COMDAT
; _this$ = ecx

; 561  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 562  : 	long result;
; 563  : 	static BYTE parms[] =
; 564  : 		VTS_BSTR VTS_BSTR VTS_BSTR;
; 565  : 	InvokeHelper(m_pdID[IIx_ExcuteScript], DISPATCH_METHOD, VT_I4, (void*)&result, parms,

  00003	ff 75 10	 push	 DWORD PTR _sParam$[ebp]
  00006	8d 45 10	 lea	 eax, DWORD PTR _result$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR _sEventName$[ebp]
  0000c	ff 75 08	 push	 DWORD PTR _sVBName$[ebp]
  0000f	68 00 00 00 00	 push	 OFFSET ?parms@?1??ExcuteScript@CDispDesk@@QAEJPBD00@Z@4PAEA
  00014	50		 push	 eax
  00015	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00018	6a 03		 push	 3
  0001a	6a 01		 push	 1
  0001c	ff b0 dc 00 00
	00		 push	 DWORD PTR [eax+220]
  00022	51		 push	 ecx
  00023	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 566  : 		sVBName, sEventName, sParam);
; 567  : 	return result;

  00028	8b 45 10	 mov	 eax, DWORD PTR _result$[ebp]
  0002b	83 c4 24	 add	 esp, 36			; 00000024H

; 568  : }

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?ExcuteScript@CDispDesk@@QAEJPBD00@Z ENDP		; CDispDesk::ExcuteScript
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?AddUserScriptItem@CDispDesk@@QAEJPBDPAUIDispatch@@@Z
_TEXT	SEGMENT
_pstrItemName$ = 8					; size = 4
_result$ = 12						; size = 4
_pIDispatch$ = 12					; size = 4
?AddUserScriptItem@CDispDesk@@QAEJPBDPAUIDispatch@@@Z PROC ; CDispDesk::AddUserScriptItem, COMDAT
; _this$ = ecx

; 551  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 552  : 	long result;
; 553  : 	static BYTE parms[] =
; 554  : 		VTS_BSTR VTS_DISPATCH;
; 555  : 	InvokeHelper(m_pdID[IIx_AddUserScriptItem], DISPATCH_METHOD, VT_I4, (void*)&result, parms,

  00003	ff 75 0c	 push	 DWORD PTR _pIDispatch$[ebp]
  00006	8d 45 0c	 lea	 eax, DWORD PTR _result$[ebp]
  00009	ff 75 08	 push	 DWORD PTR _pstrItemName$[ebp]
  0000c	68 00 00 00 00	 push	 OFFSET ?parms@?1??AddUserScriptItem@CDispDesk@@QAEJPBDPAUIDispatch@@@Z@4PAEA
  00011	50		 push	 eax
  00012	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00015	6a 03		 push	 3
  00017	6a 01		 push	 1
  00019	ff b0 d4 00 00
	00		 push	 DWORD PTR [eax+212]
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 556  : 		pstrItemName, pIDispatch);
; 557  : 	return result;

  00025	8b 45 0c	 mov	 eax, DWORD PTR _result$[ebp]
  00028	83 c4 20	 add	 esp, 32			; 00000020H

; 558  : }

  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
?AddUserScriptItem@CDispDesk@@QAEJPBDPAUIDispatch@@@Z ENDP ; CDispDesk::AddUserScriptItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SetMonitoringHandle@CDispDesk@@QAEXJ@Z
_TEXT	SEGMENT
_pMonitoringHandle$ = 8					; size = 4
?SetMonitoringHandle@CDispDesk@@QAEXJ@Z PROC		; CDispDesk::SetMonitoringHandle, COMDAT
; _this$ = ecx

; 543  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 544  : 	static BYTE parms[] =
; 545  : 		VTS_I4;
; 546  : 	InvokeHelper(m_pdID[IIx_SetMonitoringHandle], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _pMonitoringHandle$[ebp]
  00006	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetMonitoringHandle@CDispDesk@@QAEXJ@Z@4PAEA
  0000e	6a 00		 push	 0
  00010	6a 00		 push	 0
  00012	6a 01		 push	 1
  00014	ff b0 cc 00 00
	00		 push	 DWORD PTR [eax+204]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00020	83 c4 1c	 add	 esp, 28			; 0000001cH

; 547  : 		 pMonitoringHandle);
; 548  : }

  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?SetMonitoringHandle@CDispDesk@@QAEXJ@Z ENDP		; CDispDesk::SetMonitoringHandle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?MainKeyPress@CDispDesk@@QAEXPBD@Z
_TEXT	SEGMENT
_szKey$ = 8						; size = 4
?MainKeyPress@CDispDesk@@QAEXPBD@Z PROC			; CDispDesk::MainKeyPress, COMDAT
; _this$ = ecx

; 535  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 536  : 	static BYTE parms[] =
; 537  : 		VTS_BSTR;
; 538  : 	InvokeHelper(m_pdID[IIx_MainKeyPress], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _szKey$[ebp]
  00006	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??MainKeyPress@CDispDesk@@QAEXPBD@Z@4PAEA
  0000e	6a 00		 push	 0
  00010	6a 00		 push	 0
  00012	6a 01		 push	 1
  00014	ff b0 c8 00 00
	00		 push	 DWORD PTR [eax+200]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00020	83 c4 1c	 add	 esp, 28			; 0000001cH

; 539  : 		 szKey);
; 540  : }

  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?MainKeyPress@CDispDesk@@QAEXPBD@Z ENDP			; CDispDesk::MainKeyPress
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SetRscMng@CDispDesk@@QAEXJ@Z
_TEXT	SEGMENT
_dwKey$ = 8						; size = 4
?SetRscMng@CDispDesk@@QAEXJ@Z PROC			; CDispDesk::SetRscMng, COMDAT
; _this$ = ecx

; 527  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 528  : 	static BYTE parms[] =
; 529  : 		VTS_I4;
; 530  : 	InvokeHelper(m_pdID[IIx_SetRscMng], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _dwKey$[ebp]
  00006	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetRscMng@CDispDesk@@QAEXJ@Z@4PAEA
  0000e	6a 00		 push	 0
  00010	6a 00		 push	 0
  00012	6a 01		 push	 1
  00014	ff b0 c4 00 00
	00		 push	 DWORD PTR [eax+196]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00020	83 c4 1c	 add	 esp, 28			; 0000001cH

; 531  : 		 dwKey);
; 532  : }

  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?SetRscMng@CDispDesk@@QAEXJ@Z ENDP			; CDispDesk::SetRscMng
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SelectPacketCommand@CDispDesk@@QAEFF@Z
_TEXT	SEGMENT
_result$ = 8						; size = 2
_nNew$ = 8						; size = 2
?SelectPacketCommand@CDispDesk@@QAEFF@Z PROC		; CDispDesk::SelectPacketCommand, COMDAT
; _this$ = ecx

; 517  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 518  : 	short result;
; 519  : 	static BYTE parms[] =
; 520  : 		VTS_I2;
; 521  : 	InvokeHelper(m_pdID[IIx_SelectPacketCommand], DISPATCH_METHOD, VT_I2, (void*)&result, parms,

  00003	0f bf 45 08	 movsx	 eax, WORD PTR _nNew$[ebp]
  00007	50		 push	 eax
  00008	68 00 00 00 00	 push	 OFFSET ?parms@?1??SelectPacketCommand@CDispDesk@@QAEFF@Z@4PAEA
  0000d	8d 45 08	 lea	 eax, DWORD PTR _result$[ebp]
  00010	50		 push	 eax
  00011	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00014	6a 02		 push	 2
  00016	6a 01		 push	 1
  00018	ff b0 c0 00 00
	00		 push	 DWORD PTR [eax+192]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 522  : 		nNew);
; 523  : 	return result;

  00024	66 8b 45 08	 mov	 ax, WORD PTR _result$[ebp]
  00028	83 c4 1c	 add	 esp, 28			; 0000001cH

; 524  : }

  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
?SelectPacketCommand@CDispDesk@@QAEFF@Z ENDP		; CDispDesk::SelectPacketCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?GetCurrentMsgCode@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetCurrentMsgCode@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC ; CDispDesk::GetCurrentMsgCode, COMDAT
; _this$ = ecx

; 510  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetCurrentMsgCode@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 511  : 	CString result;

  0002e	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00031	8b cf		 mov	 ecx, edi
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 512  : 	InvokeHelper(m_pdID[IIx_GetCurrentMsgCode], DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
; 513  : 	return result;

  00039	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0003c	6a 00		 push	 0
  0003e	57		 push	 edi
  0003f	6a 08		 push	 8
  00041	6a 01		 push	 1
  00043	ff b1 bc 00 00
	00		 push	 DWORD PTR [ecx+188]
  00049	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00050	56		 push	 esi
  00051	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T2[ebp], 1
  00058	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  0005d	83 c4 18	 add	 esp, 24			; 00000018H
  00060	8b c7		 mov	 eax, edi

; 514  : }

  00062	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00065	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006c	59		 pop	 ecx
  0006d	5f		 pop	 edi
  0006e	5e		 pop	 esi
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCurrentMsgCode@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0d 00 00
	00		 je	 $LN4@GetCurrent
  0000c	83 65 f0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00010	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00013	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN4@GetCurrent:
  00019	c3		 ret	 0
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?GetCurrentMsgCode@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetCurrentMsgCode@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetCurrentMsgCode@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CDispDesk::GetCurrentMsgCode
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?GetCurrentTrMessage@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetCurrentTrMessage@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC ; CDispDesk::GetCurrentTrMessage, COMDAT
; _this$ = ecx

; 503  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetCurrentTrMessage@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 504  : 	CString result;

  0002e	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00031	8b cf		 mov	 ecx, edi
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 505  : 	InvokeHelper(m_pdID[IIx_GetCurrentTrMessage], DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
; 506  : 	return result;

  00039	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0003c	6a 00		 push	 0
  0003e	57		 push	 edi
  0003f	6a 08		 push	 8
  00041	6a 01		 push	 1
  00043	ff b1 b8 00 00
	00		 push	 DWORD PTR [ecx+184]
  00049	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00050	56		 push	 esi
  00051	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T2[ebp], 1
  00058	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  0005d	83 c4 18	 add	 esp, 24			; 00000018H
  00060	8b c7		 mov	 eax, edi

; 507  : }

  00062	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00065	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006c	59		 pop	 ecx
  0006d	5f		 pop	 edi
  0006e	5e		 pop	 esi
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCurrentTrMessage@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0d 00 00
	00		 je	 $LN4@GetCurrent
  0000c	83 65 f0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00010	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00013	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN4@GetCurrent:
  00019	c3		 ret	 0
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?GetCurrentTrMessage@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetCurrentTrMessage@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetCurrentTrMessage@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CDispDesk::GetCurrentTrMessage
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?GetUserColor@CDispDesk@@QAEKFPBDF@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 2
_szName$ = 12						; size = 4
_result$ = 16						; size = 4
_nFlag$ = 16						; size = 2
?GetUserColor@CDispDesk@@QAEKFPBDF@Z PROC		; CDispDesk::GetUserColor, COMDAT
; _this$ = ecx

; 493  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 494  : 	unsigned long result;
; 495  : 	static BYTE parms[] =
; 496  : 		VTS_I2 VTS_BSTR VTS_I2;
; 497  : 	InvokeHelper(m_pdID[IIx_GetUserColor], DISPATCH_METHOD, VT_I4, (void*)&result, parms,

  00003	0f bf 45 10	 movsx	 eax, WORD PTR _nFlag$[ebp]
  00007	50		 push	 eax
  00008	ff 75 0c	 push	 DWORD PTR _szName$[ebp]
  0000b	0f bf 45 08	 movsx	 eax, WORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	68 00 00 00 00	 push	 OFFSET ?parms@?1??GetUserColor@CDispDesk@@QAEKFPBDF@Z@4PAEA
  00015	8d 45 10	 lea	 eax, DWORD PTR _result$[ebp]
  00018	50		 push	 eax
  00019	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001c	6a 03		 push	 3
  0001e	6a 01		 push	 1
  00020	ff b0 b4 00 00
	00		 push	 DWORD PTR [eax+180]
  00026	51		 push	 ecx
  00027	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 498  : 		nIndex, szName, nFlag);
; 499  : 	return result;

  0002c	8b 45 10	 mov	 eax, DWORD PTR _result$[ebp]
  0002f	83 c4 24	 add	 esp, 36			; 00000024H

; 500  : }

  00032	5d		 pop	 ebp
  00033	c2 0c 00	 ret	 12			; 0000000cH
?GetUserColor@CDispDesk@@QAEKFPBDF@Z ENDP		; CDispDesk::GetUserColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?ChangeTRInOut@CDispDesk@@QAEXPBD00F@Z
_TEXT	SEGMENT
_szTrName$ = 8						; size = 4
_szInData$ = 12						; size = 4
_szOutData$ = 16					; size = 4
_nFlag$ = 20						; size = 2
?ChangeTRInOut@CDispDesk@@QAEXPBD00F@Z PROC		; CDispDesk::ChangeTRInOut, COMDAT
; _this$ = ecx

; 485  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 486  : 	static BYTE parms[] =
; 487  : 		VTS_BSTR VTS_BSTR VTS_BSTR VTS_I2;
; 488  : 	InvokeHelper(m_pdID[IIx_ChangeTRInOut], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	0f bf 45 14	 movsx	 eax, WORD PTR _nFlag$[ebp]
  00007	50		 push	 eax
  00008	ff 75 10	 push	 DWORD PTR _szOutData$[ebp]
  0000b	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0000e	ff 75 0c	 push	 DWORD PTR _szInData$[ebp]
  00011	ff 75 08	 push	 DWORD PTR _szTrName$[ebp]
  00014	68 00 00 00 00	 push	 OFFSET ?parms@?1??ChangeTRInOut@CDispDesk@@QAEXPBD00F@Z@4PAEA
  00019	6a 00		 push	 0
  0001b	6a 00		 push	 0
  0001d	6a 01		 push	 1
  0001f	ff b0 b0 00 00
	00		 push	 DWORD PTR [eax+176]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  0002b	83 c4 28	 add	 esp, 40			; 00000028H

; 489  : 		 szTrName, szInData, szOutData, nFlag);
; 490  : }

  0002e	5d		 pop	 ebp
  0002f	c2 10 00	 ret	 16			; 00000010H
?ChangeTRInOut@CDispDesk@@QAEXPBD00F@Z ENDP		; CDispDesk::ChangeTRInOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SetFlag@CDispDesk@@QAEXPBDF@Z
_TEXT	SEGMENT
_szKey$ = 8						; size = 4
_szValue$ = 12						; size = 2
?SetFlag@CDispDesk@@QAEXPBDF@Z PROC			; CDispDesk::SetFlag, COMDAT
; _this$ = ecx

; 477  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 478  : 	static BYTE parms[] =
; 479  : 		VTS_BSTR VTS_I2;
; 480  : 	InvokeHelper(m_pdID[IIx_SetFlag], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	0f bf 45 0c	 movsx	 eax, WORD PTR _szValue$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _szKey$[ebp]
  0000b	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0000e	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetFlag@CDispDesk@@QAEXPBDF@Z@4PAEA
  00013	6a 00		 push	 0
  00015	6a 00		 push	 0
  00017	6a 01		 push	 1
  00019	ff b0 ac 00 00
	00		 push	 DWORD PTR [eax+172]
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00025	83 c4 20	 add	 esp, 32			; 00000020H

; 481  : 		 szKey, szValue);
; 482  : }

  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
?SetFlag@CDispDesk@@QAEXPBDF@Z ENDP			; CDispDesk::SetFlag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SendTrDirect@CDispDesk@@QAEFPBD0F@Z
_TEXT	SEGMENT
_szTrName$ = 8						; size = 4
_szData$ = 12						; size = 4
_result$ = 16						; size = 2
_nDataLen$ = 16						; size = 2
?SendTrDirect@CDispDesk@@QAEFPBD0F@Z PROC		; CDispDesk::SendTrDirect, COMDAT
; _this$ = ecx

; 467  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 468  : 	short result;
; 469  : 	static BYTE parms[] =
; 470  : 		VTS_BSTR VTS_BSTR VTS_I2;
; 471  : 	InvokeHelper(m_pdID[IIx_SendTrDirect], DISPATCH_METHOD, VT_I2, (void*)&result, parms,

  00003	0f bf 45 10	 movsx	 eax, WORD PTR _nDataLen$[ebp]
  00007	50		 push	 eax
  00008	ff 75 0c	 push	 DWORD PTR _szData$[ebp]
  0000b	8d 45 10	 lea	 eax, DWORD PTR _result$[ebp]
  0000e	ff 75 08	 push	 DWORD PTR _szTrName$[ebp]
  00011	68 00 00 00 00	 push	 OFFSET ?parms@?1??SendTrDirect@CDispDesk@@QAEFPBD0F@Z@4PAEA
  00016	50		 push	 eax
  00017	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001a	6a 02		 push	 2
  0001c	6a 01		 push	 1
  0001e	ff b0 a8 00 00
	00		 push	 DWORD PTR [eax+168]
  00024	51		 push	 ecx
  00025	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 472  : 		szTrName, szData, nDataLen);
; 473  : 	return result;

  0002a	66 8b 45 10	 mov	 ax, WORD PTR _result$[ebp]
  0002e	83 c4 24	 add	 esp, 36			; 00000024H

; 474  : }

  00031	5d		 pop	 ebp
  00032	c2 0c 00	 ret	 12			; 0000000cH
?SendTrDirect@CDispDesk@@QAEFPBD0F@Z ENDP		; CDispDesk::SendTrDirect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?DebugTrData@CDispDesk@@QAEXPBD@Z
_TEXT	SEGMENT
_szFileName$ = 8					; size = 4
?DebugTrData@CDispDesk@@QAEXPBD@Z PROC			; CDispDesk::DebugTrData, COMDAT
; _this$ = ecx

; 459  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 460  : 	static BYTE parms[] =
; 461  : 		VTS_BSTR;
; 462  : 	InvokeHelper(m_pdID[IIx_DebugTrData], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _szFileName$[ebp]
  00006	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??DebugTrData@CDispDesk@@QAEXPBD@Z@4PAEA
  0000e	6a 00		 push	 0
  00010	6a 00		 push	 0
  00012	6a 01		 push	 1
  00014	ff b0 a4 00 00
	00		 push	 DWORD PTR [eax+164]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00020	83 c4 1c	 add	 esp, 28			; 0000001cH

; 463  : 		 szFileName);
; 464  : }

  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?DebugTrData@CDispDesk@@QAEXPBD@Z ENDP			; CDispDesk::DebugTrData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SetSendCountFlag@CDispDesk@@QAEFF@Z
_TEXT	SEGMENT
_result$ = 8						; size = 2
_nNew$ = 8						; size = 2
?SetSendCountFlag@CDispDesk@@QAEFF@Z PROC		; CDispDesk::SetSendCountFlag, COMDAT
; _this$ = ecx

; 449  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 450  : 	short result;
; 451  : 	static BYTE parms[] =
; 452  : 		VTS_I2;
; 453  : 	InvokeHelper(m_pdID[IIx_SetSendCountFlag], DISPATCH_METHOD, VT_I2, (void*)&result, parms,

  00003	0f bf 45 08	 movsx	 eax, WORD PTR _nNew$[ebp]
  00007	50		 push	 eax
  00008	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetSendCountFlag@CDispDesk@@QAEFF@Z@4PAEA
  0000d	8d 45 08	 lea	 eax, DWORD PTR _result$[ebp]
  00010	50		 push	 eax
  00011	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00014	6a 02		 push	 2
  00016	6a 01		 push	 1
  00018	ff b0 a0 00 00
	00		 push	 DWORD PTR [eax+160]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 454  : 		nNew);
; 455  : 	return result;

  00024	66 8b 45 08	 mov	 ax, WORD PTR _result$[ebp]
  00028	83 c4 1c	 add	 esp, 28			; 0000001cH

; 456  : }

  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
?SetSendCountFlag@CDispDesk@@QAEFF@Z ENDP		; CDispDesk::SetSendCountFlag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?NotifyGShareData@CDispDesk@@QAEXPBD0@Z
_TEXT	SEGMENT
_szKey$ = 8						; size = 4
_szValue$ = 12						; size = 4
?NotifyGShareData@CDispDesk@@QAEXPBD0@Z PROC		; CDispDesk::NotifyGShareData, COMDAT
; _this$ = ecx

; 441  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 442  : 	static BYTE parms[] =
; 443  : 		VTS_BSTR VTS_BSTR;
; 444  : 	InvokeHelper(m_pdID[IIx_NotifyGShareData], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 0c	 push	 DWORD PTR _szValue$[ebp]
  00006	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00009	ff 75 08	 push	 DWORD PTR _szKey$[ebp]
  0000c	68 00 00 00 00	 push	 OFFSET ?parms@?1??NotifyGShareData@CDispDesk@@QAEXPBD0@Z@4PAEA
  00011	6a 00		 push	 0
  00013	6a 00		 push	 0
  00015	6a 01		 push	 1
  00017	ff b0 9c 00 00
	00		 push	 DWORD PTR [eax+156]
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00023	83 c4 20	 add	 esp, 32			; 00000020H

; 445  : 		 szKey, szValue);
; 446  : }

  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?NotifyGShareData@CDispDesk@@QAEXPBD0@Z ENDP		; CDispDesk::NotifyGShareData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SetTabStop@CDispDesk@@QAEXF@Z
_TEXT	SEGMENT
_bNew$ = 8						; size = 2
?SetTabStop@CDispDesk@@QAEXF@Z PROC			; CDispDesk::SetTabStop, COMDAT
; _this$ = ecx

; 433  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 434  : 	static BYTE parms[] =
; 435  : 		VTS_I2;
; 436  : 	InvokeHelper(m_pdID[IIx_SetTabStop], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	0f bf 45 08	 movsx	 eax, WORD PTR _bNew$[ebp]
  00007	50		 push	 eax
  00008	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0000b	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetTabStop@CDispDesk@@QAEXF@Z@4PAEA
  00010	6a 00		 push	 0
  00012	6a 00		 push	 0
  00014	6a 01		 push	 1
  00016	ff b0 98 00 00
	00		 push	 DWORD PTR [eax+152]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00022	83 c4 1c	 add	 esp, 28			; 0000001cH

; 437  : 		 bNew);
; 438  : }

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?SetTabStop@CDispDesk@@QAEXF@Z ENDP			; CDispDesk::SetTabStop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SetInitFont@CDispDesk@@QAEXFFPBD@Z
_TEXT	SEGMENT
_nWidth$ = 8						; size = 2
_nHeight$ = 12						; size = 2
_szFontName$ = 16					; size = 4
?SetInitFont@CDispDesk@@QAEXFFPBD@Z PROC		; CDispDesk::SetInitFont, COMDAT
; _this$ = ecx

; 425  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 426  : 	static BYTE parms[] =
; 427  : 		VTS_I2 VTS_I2 VTS_BSTR;
; 428  : 	InvokeHelper(m_pdID[IIx_SetInitFont], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 10	 push	 DWORD PTR _szFontName$[ebp]
  00006	0f bf 45 0c	 movsx	 eax, WORD PTR _nHeight$[ebp]
  0000a	50		 push	 eax
  0000b	0f bf 45 08	 movsx	 eax, WORD PTR _nWidth$[ebp]
  0000f	50		 push	 eax
  00010	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00013	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetInitFont@CDispDesk@@QAEXFFPBD@Z@4PAEA
  00018	6a 00		 push	 0
  0001a	6a 00		 push	 0
  0001c	6a 01		 push	 1
  0001e	ff b0 94 00 00
	00		 push	 DWORD PTR [eax+148]
  00024	51		 push	 ecx
  00025	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  0002a	83 c4 24	 add	 esp, 36			; 00000024H

; 429  : 		 nWidth, nHeight, szFontName);
; 430  : }

  0002d	5d		 pop	 ebp
  0002e	c2 0c 00	 ret	 12			; 0000000cH
?SetInitFont@CDispDesk@@QAEXFFPBD@Z ENDP		; CDispDesk::SetInitFont
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?GetMapSize@CDispDesk@@QAEHPAUtagVARIANT@@0@Z
_TEXT	SEGMENT
_vrWidth$ = 8						; size = 4
_result$ = 12						; size = 4
_vrHeight$ = 12						; size = 4
?GetMapSize@CDispDesk@@QAEHPAUtagVARIANT@@0@Z PROC	; CDispDesk::GetMapSize, COMDAT
; _this$ = ecx

; 415  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 416  : 	BOOL result;
; 417  : 	static BYTE parms[] =
; 418  : 		VTS_PVARIANT VTS_PVARIANT;
; 419  : 	InvokeHelper(m_pdID[IIx_GetMapSize], DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,

  00003	ff 75 0c	 push	 DWORD PTR _vrHeight$[ebp]
  00006	8d 45 0c	 lea	 eax, DWORD PTR _result$[ebp]
  00009	ff 75 08	 push	 DWORD PTR _vrWidth$[ebp]
  0000c	68 00 00 00 00	 push	 OFFSET ?parms@?1??GetMapSize@CDispDesk@@QAEHPAUtagVARIANT@@0@Z@4PAEA
  00011	50		 push	 eax
  00012	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00015	6a 0b		 push	 11			; 0000000bH
  00017	6a 01		 push	 1
  00019	ff b0 90 00 00
	00		 push	 DWORD PTR [eax+144]
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 420  : 		vrWidth, vrHeight);
; 421  : 	return result;

  00025	8b 45 0c	 mov	 eax, DWORD PTR _result$[ebp]
  00028	83 c4 20	 add	 esp, 32			; 00000020H

; 422  : }

  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
?GetMapSize@CDispDesk@@QAEHPAUtagVARIANT@@0@Z ENDP	; CDispDesk::GetMapSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?ResizeFont@CDispDesk@@QAEXFFPBD@Z
_TEXT	SEGMENT
_nWidth$ = 8						; size = 2
_nHeight$ = 12						; size = 2
_szFontName$ = 16					; size = 4
?ResizeFont@CDispDesk@@QAEXFFPBD@Z PROC			; CDispDesk::ResizeFont, COMDAT
; _this$ = ecx

; 407  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 408  : 	static BYTE parms[] =
; 409  : 		VTS_I2 VTS_I2 VTS_BSTR;
; 410  : 	InvokeHelper(m_pdID[IIx_ResizeFont], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 10	 push	 DWORD PTR _szFontName$[ebp]
  00006	0f bf 45 0c	 movsx	 eax, WORD PTR _nHeight$[ebp]
  0000a	50		 push	 eax
  0000b	0f bf 45 08	 movsx	 eax, WORD PTR _nWidth$[ebp]
  0000f	50		 push	 eax
  00010	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00013	68 00 00 00 00	 push	 OFFSET ?parms@?1??ResizeFont@CDispDesk@@QAEXFFPBD@Z@4PAEA
  00018	6a 00		 push	 0
  0001a	6a 00		 push	 0
  0001c	6a 01		 push	 1
  0001e	ff b0 8c 00 00
	00		 push	 DWORD PTR [eax+140]
  00024	51		 push	 ecx
  00025	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  0002a	83 c4 24	 add	 esp, 36			; 00000024H

; 411  : 		 nWidth, nHeight, szFontName);
; 412  : }

  0002d	5d		 pop	 ebp
  0002e	c2 0c 00	 ret	 12			; 0000000cH
?ResizeFont@CDispDesk@@QAEXFFPBD@Z ENDP			; CDispDesk::ResizeFont
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?LoadXfmEx@CDispDesk@@QAEHJ@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
_dwLoadInfo$ = 8					; size = 4
?LoadXfmEx@CDispDesk@@QAEHJ@Z PROC			; CDispDesk::LoadXfmEx, COMDAT
; _this$ = ecx

; 397  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 398  : 	BOOL result;
; 399  : 	static BYTE parms[] =
; 400  : 		VTS_I4;
; 401  : 	InvokeHelper(m_pdID[IIx_LoadXfmEx], DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,

  00003	ff 75 08	 push	 DWORD PTR _dwLoadInfo$[ebp]
  00006	8d 45 08	 lea	 eax, DWORD PTR _result$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??LoadXfmEx@CDispDesk@@QAEHJ@Z@4PAEA
  0000e	50		 push	 eax
  0000f	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00012	6a 0b		 push	 11			; 0000000bH
  00014	6a 01		 push	 1
  00016	ff b0 88 00 00
	00		 push	 DWORD PTR [eax+136]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 402  : 		dwLoadInfo);
; 403  : 	return result;

  00022	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  00025	83 c4 1c	 add	 esp, 28			; 0000001cH

; 404  : }

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?LoadXfmEx@CDispDesk@@QAEHJ@Z ENDP			; CDispDesk::LoadXfmEx
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SetGSharedNotifyFlag@CDispDesk@@QAEXF@Z
_TEXT	SEGMENT
_bNofity$ = 8						; size = 2
?SetGSharedNotifyFlag@CDispDesk@@QAEXF@Z PROC		; CDispDesk::SetGSharedNotifyFlag, COMDAT
; _this$ = ecx

; 389  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 390  : 	static BYTE parms[] =
; 391  : 		VTS_I2;
; 392  : 	InvokeHelper(m_pdID[IIx_SetGSharedNotifyFlag], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	0f bf 45 08	 movsx	 eax, WORD PTR _bNofity$[ebp]
  00007	50		 push	 eax
  00008	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0000b	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetGSharedNotifyFlag@CDispDesk@@QAEXF@Z@4PAEA
  00010	6a 00		 push	 0
  00012	6a 00		 push	 0
  00014	6a 01		 push	 1
  00016	ff b0 84 00 00
	00		 push	 DWORD PTR [eax+132]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00022	83 c4 1c	 add	 esp, 28			; 0000001cH

; 393  : 		 bNofity);
; 394  : }

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?SetGSharedNotifyFlag@CDispDesk@@QAEXF@Z ENDP		; CDispDesk::SetGSharedNotifyFlag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?GetKeyData@CDispDesk@@QAEJPBDPAF@Z
_TEXT	SEGMENT
_szKey$ = 8						; size = 4
_result$ = 12						; size = 4
_nCount$ = 12						; size = 4
?GetKeyData@CDispDesk@@QAEJPBDPAF@Z PROC		; CDispDesk::GetKeyData, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 380  : 	long result;
; 381  : 	static BYTE parms[] =
; 382  : 		VTS_BSTR VTS_PI2;
; 383  : 	InvokeHelper(m_pdID[IIx_GetKeyData], DISPATCH_METHOD, VT_I4, (void*)&result, parms,

  00003	ff 75 0c	 push	 DWORD PTR _nCount$[ebp]
  00006	8d 45 0c	 lea	 eax, DWORD PTR _result$[ebp]
  00009	ff 75 08	 push	 DWORD PTR _szKey$[ebp]
  0000c	68 00 00 00 00	 push	 OFFSET ?parms@?1??GetKeyData@CDispDesk@@QAEJPBDPAF@Z@4PAEA
  00011	50		 push	 eax
  00012	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00015	6a 03		 push	 3
  00017	6a 01		 push	 1
  00019	ff b0 80 00 00
	00		 push	 DWORD PTR [eax+128]
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 384  : 		szKey, nCount);
; 385  : 	return result;

  00025	8b 45 0c	 mov	 eax, DWORD PTR _result$[ebp]
  00028	83 c4 20	 add	 esp, 32			; 00000020H

; 386  : }

  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
?GetKeyData@CDispDesk@@QAEJPBDPAF@Z ENDP		; CDispDesk::GetKeyData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SetKeyData@CDispDesk@@QAEXPBDJF@Z
_TEXT	SEGMENT
_szKey$ = 8						; size = 4
_dwData$ = 12						; size = 4
_nCount$ = 16						; size = 2
?SetKeyData@CDispDesk@@QAEXPBDJF@Z PROC			; CDispDesk::SetKeyData, COMDAT
; _this$ = ecx

; 371  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 372  : 	static BYTE parms[] =
; 373  : 		VTS_BSTR VTS_I4 VTS_I2;
; 374  : 	InvokeHelper(m_pdID[IIx_SetKeyData], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	0f bf 45 10	 movsx	 eax, WORD PTR _nCount$[ebp]
  00007	50		 push	 eax
  00008	ff 75 0c	 push	 DWORD PTR _dwData$[ebp]
  0000b	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0000e	ff 75 08	 push	 DWORD PTR _szKey$[ebp]
  00011	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetKeyData@CDispDesk@@QAEXPBDJF@Z@4PAEA
  00016	6a 00		 push	 0
  00018	6a 00		 push	 0
  0001a	6a 01		 push	 1
  0001c	ff 70 7c	 push	 DWORD PTR [eax+124]
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00025	83 c4 24	 add	 esp, 36			; 00000024H

; 375  : 		 szKey, dwData, nCount);
; 376  : }

  00028	5d		 pop	 ebp
  00029	c2 0c 00	 ret	 12			; 0000000cH
?SetKeyData@CDispDesk@@QAEXPBDJF@Z ENDP			; CDispDesk::SetKeyData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?GotoFocus@CDispDesk@@QAEXPBD@Z
_TEXT	SEGMENT
_szCtrlName$ = 8					; size = 4
?GotoFocus@CDispDesk@@QAEXPBD@Z PROC			; CDispDesk::GotoFocus, COMDAT
; _this$ = ecx

; 363  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 364  : 	static BYTE parms[] =
; 365  : 		VTS_BSTR;
; 366  : 	InvokeHelper(m_pdID[IIx_GotoFocus], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _szCtrlName$[ebp]
  00006	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??GotoFocus@CDispDesk@@QAEXPBD@Z@4PAEA
  0000e	6a 00		 push	 0
  00010	6a 00		 push	 0
  00012	6a 01		 push	 1
  00014	ff 70 78	 push	 DWORD PTR [eax+120]
  00017	51		 push	 ecx
  00018	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  0001d	83 c4 1c	 add	 esp, 28			; 0000001cH

; 367  : 		 szCtrlName);
; 368  : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?GotoFocus@CDispDesk@@QAEXPBD@Z ENDP			; CDispDesk::GotoFocus
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?EnableFocus@CDispDesk@@QAEHPBDF@Z
_TEXT	SEGMENT
_szCtrlName$ = 8					; size = 4
_result$ = 12						; size = 4
_bEnable$ = 12						; size = 2
?EnableFocus@CDispDesk@@QAEHPBDF@Z PROC			; CDispDesk::EnableFocus, COMDAT
; _this$ = ecx

; 353  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 354  : 	BOOL result;
; 355  : 	static BYTE parms[] =
; 356  : 		VTS_BSTR VTS_I2;
; 357  : 	InvokeHelper(m_pdID[IIx_EnableFocus], DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,

  00003	0f bf 45 0c	 movsx	 eax, WORD PTR _bEnable$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _szCtrlName$[ebp]
  0000b	8d 45 0c	 lea	 eax, DWORD PTR _result$[ebp]
  0000e	68 00 00 00 00	 push	 OFFSET ?parms@?1??EnableFocus@CDispDesk@@QAEHPBDF@Z@4PAEA
  00013	50		 push	 eax
  00014	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00017	6a 0b		 push	 11			; 0000000bH
  00019	6a 01		 push	 1
  0001b	ff 70 74	 push	 DWORD PTR [eax+116]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 358  : 		szCtrlName, bEnable);
; 359  : 	return result;

  00024	8b 45 0c	 mov	 eax, DWORD PTR _result$[ebp]
  00027	83 c4 20	 add	 esp, 32			; 00000020H

; 360  : }

  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?EnableFocus@CDispDesk@@QAEHPBDF@Z ENDP			; CDispDesk::EnableFocus
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?NotifyFromMain@CDispDesk@@QAEXPBD0@Z
_TEXT	SEGMENT
_szKey$ = 8						; size = 4
_szData$ = 12						; size = 4
?NotifyFromMain@CDispDesk@@QAEXPBD0@Z PROC		; CDispDesk::NotifyFromMain, COMDAT
; _this$ = ecx

; 345  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 346  : 	static BYTE parms[] =
; 347  : 		VTS_BSTR VTS_BSTR;
; 348  : 	InvokeHelper(m_pdID[IIx_NotifyFromMain], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 0c	 push	 DWORD PTR _szData$[ebp]
  00006	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00009	ff 75 08	 push	 DWORD PTR _szKey$[ebp]
  0000c	68 00 00 00 00	 push	 OFFSET ?parms@?1??NotifyFromMain@CDispDesk@@QAEXPBD0@Z@4PAEA
  00011	6a 00		 push	 0
  00013	6a 00		 push	 0
  00015	6a 01		 push	 1
  00017	ff 70 70	 push	 DWORD PTR [eax+112]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00020	83 c4 20	 add	 esp, 32			; 00000020H

; 349  : 		 szKey, szData);
; 350  : }

  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?NotifyFromMain@CDispDesk@@QAEXPBD0@Z ENDP		; CDispDesk::NotifyFromMain
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SetOpenMapData2@CDispDesk@@QAEXJ@Z
_TEXT	SEGMENT
_dwClipFormat$ = 8					; size = 4
?SetOpenMapData2@CDispDesk@@QAEXJ@Z PROC		; CDispDesk::SetOpenMapData2, COMDAT
; _this$ = ecx

; 337  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 338  : 	static BYTE parms[] =
; 339  : 		VTS_I4;
; 340  : 	InvokeHelper(m_pdID[IIx_SetOpenMapData2], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _dwClipFormat$[ebp]
  00006	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetOpenMapData2@CDispDesk@@QAEXJ@Z@4PAEA
  0000e	6a 00		 push	 0
  00010	6a 00		 push	 0
  00012	6a 01		 push	 1
  00014	ff 70 6c	 push	 DWORD PTR [eax+108]
  00017	51		 push	 ecx
  00018	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  0001d	83 c4 1c	 add	 esp, 28			; 0000001cH

; 341  : 		 dwClipFormat);
; 342  : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?SetOpenMapData2@CDispDesk@@QAEXJ@Z ENDP		; CDispDesk::SetOpenMapData2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?GetOpenMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetOpenMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC ; CDispDesk::GetOpenMapData, COMDAT
; _this$ = ecx

; 100  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetOpenMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 101  : 	CString result;

  0002e	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00031	8b cf		 mov	 ecx, edi
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 102  : 	InvokeHelper(m_pdID[IIx_GetOpenMapData], DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
; 103  : 	return result;

  00039	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0003c	6a 00		 push	 0
  0003e	57		 push	 edi
  0003f	6a 08		 push	 8
  00041	6a 01		 push	 1
  00043	ff 71 68	 push	 DWORD PTR [ecx+104]
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004d	56		 push	 esi
  0004e	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T2[ebp], 1
  00055	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  0005a	83 c4 18	 add	 esp, 24			; 00000018H
  0005d	8b c7		 mov	 eax, edi

; 104  : }

  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetOpenMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0d 00 00
	00		 je	 $LN4@GetOpenMap
  0000c	83 65 f0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00010	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00013	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN4@GetOpenMap:
  00019	c3		 ret	 0
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?GetOpenMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetOpenMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetOpenMapData@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CDispDesk::GetOpenMapData
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?CallCommand@CDispDesk@@QAEXPBD@Z
_TEXT	SEGMENT
_szCmd$ = 8						; size = 4
?CallCommand@CDispDesk@@QAEXPBD@Z PROC			; CDispDesk::CallCommand, COMDAT
; _this$ = ecx

; 328  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 329  : 	static BYTE parms[] =
; 330  : 		VTS_BSTR;
; 331  : 	InvokeHelper(m_pdID[IIx_CallCommand], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _szCmd$[ebp]
  00006	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??CallCommand@CDispDesk@@QAEXPBD@Z@4PAEA
  0000e	6a 00		 push	 0
  00010	6a 00		 push	 0
  00012	6a 01		 push	 1
  00014	ff 70 64	 push	 DWORD PTR [eax+100]
  00017	51		 push	 ecx
  00018	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  0001d	83 c4 1c	 add	 esp, 28			; 0000001cH

; 332  : 		 szCmd);
; 333  : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?CallCommand@CDispDesk@@QAEXPBD@Z ENDP			; CDispDesk::CallCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SendDataToOpener@CDispDesk@@QAEHPBDF@Z
_TEXT	SEGMENT
_szData$ = 8						; size = 4
_result$ = 12						; size = 4
_nDataLen$ = 12						; size = 2
?SendDataToOpener@CDispDesk@@QAEHPBDF@Z PROC		; CDispDesk::SendDataToOpener, COMDAT
; _this$ = ecx

; 318  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 319  : 	BOOL result;
; 320  : 	static BYTE parms[] =
; 321  : 		VTS_BSTR VTS_I2;
; 322  : 	InvokeHelper(m_pdID[IIx_SendDataToOpener], DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,

  00003	0f bf 45 0c	 movsx	 eax, WORD PTR _nDataLen$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _szData$[ebp]
  0000b	8d 45 0c	 lea	 eax, DWORD PTR _result$[ebp]
  0000e	68 00 00 00 00	 push	 OFFSET ?parms@?1??SendDataToOpener@CDispDesk@@QAEHPBDF@Z@4PAEA
  00013	50		 push	 eax
  00014	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00017	6a 0b		 push	 11			; 0000000bH
  00019	6a 01		 push	 1
  0001b	ff 70 60	 push	 DWORD PTR [eax+96]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 323  : 		szData, nDataLen);
; 324  : 	return result;

  00024	8b 45 0c	 mov	 eax, DWORD PTR _result$[ebp]
  00027	83 c4 20	 add	 esp, 32			; 00000020H

; 325  : }

  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?SendDataToOpener@CDispDesk@@QAEHPBDF@Z ENDP		; CDispDesk::SendDataToOpener
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SetOpenMapData@CDispDesk@@QAEXFPBD0F0@Z
_TEXT	SEGMENT
_nMapType$ = 8						; size = 2
_szMap$ = 12						; size = 4
_szOpenData$ = 16					; size = 4
_nDataLen$ = 20						; size = 2
_aOpener$ = 24						; size = 4
?SetOpenMapData@CDispDesk@@QAEXFPBD0F0@Z PROC		; CDispDesk::SetOpenMapData, COMDAT
; _this$ = ecx

; 310  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 311  : 	static BYTE parms[] =
; 312  : 		VTS_I2 VTS_BSTR VTS_BSTR VTS_I2 VTS_BSTR;
; 313  : 	InvokeHelper(m_pdID[IIx_SetOpenMapData], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 18	 push	 DWORD PTR _aOpener$[ebp]
  00006	0f bf 45 14	 movsx	 eax, WORD PTR _nDataLen$[ebp]
  0000a	50		 push	 eax
  0000b	ff 75 10	 push	 DWORD PTR _szOpenData$[ebp]
  0000e	0f bf 45 08	 movsx	 eax, WORD PTR _nMapType$[ebp]
  00012	ff 75 0c	 push	 DWORD PTR _szMap$[ebp]
  00015	50		 push	 eax
  00016	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00019	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetOpenMapData@CDispDesk@@QAEXFPBD0F0@Z@4PAEA
  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	6a 01		 push	 1
  00024	ff 70 5c	 push	 DWORD PTR [eax+92]
  00027	51		 push	 ecx
  00028	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  0002d	83 c4 2c	 add	 esp, 44			; 0000002cH

; 314  : 		 nMapType, szMap, szOpenData, nDataLen, aOpener);
; 315  : }

  00030	5d		 pop	 ebp
  00031	c2 14 00	 ret	 20			; 00000014H
?SetOpenMapData@CDispDesk@@QAEXFPBD0F0@Z ENDP		; CDispDesk::SetOpenMapData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?FormUnLoad@CDispDesk@@QAEXXZ
_TEXT	SEGMENT
?FormUnLoad@CDispDesk@@QAEXXZ PROC			; CDispDesk::FormUnLoad, COMDAT
; _this$ = ecx

; 306  : 	InvokeHelper(m_pdID[IIx_FormUnLoad], DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00003	6a 00		 push	 0
  00005	6a 00		 push	 0
  00007	6a 00		 push	 0
  00009	6a 01		 push	 1
  0000b	ff 70 58	 push	 DWORD PTR [eax+88]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00014	83 c4 18	 add	 esp, 24			; 00000018H

; 307  : }

  00017	c3		 ret	 0
?FormUnLoad@CDispDesk@@QAEXXZ ENDP			; CDispDesk::FormUnLoad
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SetFormTrData@CDispDesk@@QAEHPBD0F@Z
_TEXT	SEGMENT
__szTr$ = 8						; size = 4
__szData$ = 12						; size = 4
_result$ = 16						; size = 4
__nDataLen$ = 16					; size = 2
?SetFormTrData@CDispDesk@@QAEHPBD0F@Z PROC		; CDispDesk::SetFormTrData, COMDAT
; _this$ = ecx

; 295  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 296  : 	BOOL result;
; 297  : 	static BYTE parms[] =
; 298  : 		VTS_BSTR VTS_BSTR VTS_I2;
; 299  : 	InvokeHelper(m_pdID[IIx_SetFormTrData], DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,

  00003	0f bf 45 10	 movsx	 eax, WORD PTR __nDataLen$[ebp]
  00007	50		 push	 eax
  00008	ff 75 0c	 push	 DWORD PTR __szData$[ebp]
  0000b	8d 45 10	 lea	 eax, DWORD PTR _result$[ebp]
  0000e	ff 75 08	 push	 DWORD PTR __szTr$[ebp]
  00011	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetFormTrData@CDispDesk@@QAEHPBD0F@Z@4PAEA
  00016	50		 push	 eax
  00017	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001a	6a 0b		 push	 11			; 0000000bH
  0001c	6a 01		 push	 1
  0001e	ff 70 54	 push	 DWORD PTR [eax+84]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 300  : 		_szTr, _szData, _nDataLen);
; 301  : 	return result;

  00027	8b 45 10	 mov	 eax, DWORD PTR _result$[ebp]
  0002a	83 c4 24	 add	 esp, 36			; 00000024H

; 302  : }

  0002d	5d		 pop	 ebp
  0002e	c2 0c 00	 ret	 12			; 0000000cH
?SetFormTrData@CDispDesk@@QAEHPBD0F@Z ENDP		; CDispDesk::SetFormTrData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?GetFormTrData@CDispDesk@@QAEHPBDPAPA_WPAF@Z
_TEXT	SEGMENT
__szTr$ = 8						; size = 4
__szData$ = 12						; size = 4
_result$ = 16						; size = 4
__nDataLen$ = 16					; size = 4
?GetFormTrData@CDispDesk@@QAEHPBDPAPA_WPAF@Z PROC	; CDispDesk::GetFormTrData, COMDAT
; _this$ = ecx

; 285  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 286  : 	BOOL result;
; 287  : 	static BYTE parms[] =
; 288  : 		VTS_BSTR VTS_PBSTR VTS_PI2;
; 289  : 	InvokeHelper(m_pdID[IIx_GetFormTrData], DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,

  00003	ff 75 10	 push	 DWORD PTR __nDataLen$[ebp]
  00006	8d 45 10	 lea	 eax, DWORD PTR _result$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR __szData$[ebp]
  0000c	ff 75 08	 push	 DWORD PTR __szTr$[ebp]
  0000f	68 00 00 00 00	 push	 OFFSET ?parms@?1??GetFormTrData@CDispDesk@@QAEHPBDPAPA_WPAF@Z@4PAEA
  00014	50		 push	 eax
  00015	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00018	6a 0b		 push	 11			; 0000000bH
  0001a	6a 01		 push	 1
  0001c	ff 70 50	 push	 DWORD PTR [eax+80]
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 290  : 		_szTr, _szData, _nDataLen);
; 291  : 	return result;

  00025	8b 45 10	 mov	 eax, DWORD PTR _result$[ebp]
  00028	83 c4 24	 add	 esp, 36			; 00000024H

; 292  : }

  0002b	5d		 pop	 ebp
  0002c	c2 0c 00	 ret	 12			; 0000000cH
?GetFormTrData@CDispDesk@@QAEHPBDPAPA_WPAF@Z ENDP	; CDispDesk::GetFormTrData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?GetRootPath@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__szSubDir$ = 12					; size = 4
?GetRootPath@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z PROC ; CDispDesk::GetRootPath, COMDAT
; _this$ = ecx

; 275  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetRootPath@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 276  : 	CString result;

  0002e	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00031	8b cf		 mov	 ecx, edi
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 277  : 	static BYTE parms[] =
; 278  : 		VTS_BSTR;
; 279  : 	InvokeHelper(m_pdID[IIx_GetRootPath], DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
; 280  : 		_szSubDir);
; 281  : 	return result;

  00039	ff 75 0c	 push	 DWORD PTR __szSubDir$[ebp]
  0003c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0003f	68 00 00 00 00	 push	 OFFSET ?parms@?1??GetRootPath@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
  00044	57		 push	 edi
  00045	6a 08		 push	 8
  00047	6a 01		 push	 1
  00049	ff 71 4c	 push	 DWORD PTR [ecx+76]
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00053	56		 push	 esi
  00054	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T2[ebp], 1
  0005b	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00060	83 c4 1c	 add	 esp, 28			; 0000001cH
  00063	8b c7		 mov	 eax, edi

; 282  : }

  00065	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00068	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006f	59		 pop	 ecx
  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetRootPath@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0d 00 00
	00		 je	 $LN4@GetRootPat
  0000c	83 65 f0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00010	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00013	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN4@GetRootPat:
  00019	c3		 ret	 0
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?GetRootPath@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetRootPath@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetRootPath@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ENDP ; CDispDesk::GetRootPath
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?GetDispFromName@CDispDesk@@QAEPAUIDispatch@@PBD@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
__szCtrlName$ = 8					; size = 4
?GetDispFromName@CDispDesk@@QAEPAUIDispatch@@PBD@Z PROC	; CDispDesk::GetDispFromName, COMDAT
; _this$ = ecx

; 265  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 266  : 	LPDISPATCH result;
; 267  : 	static BYTE parms[] =
; 268  : 		VTS_BSTR;
; 269  : 	InvokeHelper(m_pdID[IIx_GetDispFromName], DISPATCH_METHOD, VT_DISPATCH, (void*)&result, parms,

  00003	ff 75 08	 push	 DWORD PTR __szCtrlName$[ebp]
  00006	8d 45 08	 lea	 eax, DWORD PTR _result$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??GetDispFromName@CDispDesk@@QAEPAUIDispatch@@PBD@Z@4PAEA
  0000e	50		 push	 eax
  0000f	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00012	6a 09		 push	 9
  00014	6a 01		 push	 1
  00016	ff 70 48	 push	 DWORD PTR [eax+72]
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 270  : 		_szCtrlName);
; 271  : 	return result;

  0001f	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  00022	83 c4 1c	 add	 esp, 28			; 0000001cH

; 272  : }

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?GetDispFromName@CDispDesk@@QAEPAUIDispatch@@PBD@Z ENDP	; CDispDesk::GetDispFromName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SetParentDispatch@CDispDesk@@QAEXPAUIDispatch@@@Z
_TEXT	SEGMENT
__pDisp$ = 8						; size = 4
?SetParentDispatch@CDispDesk@@QAEXPAUIDispatch@@@Z PROC	; CDispDesk::SetParentDispatch, COMDAT
; _this$ = ecx

; 257  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 258  : 	static BYTE parms[] =
; 259  : 		VTS_DISPATCH;
; 260  : 	InvokeHelper(m_pdID[IIx_SetParentDispatch], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR __pDisp$[ebp]
  00006	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetParentDispatch@CDispDesk@@QAEXPAUIDispatch@@@Z@4PAEA
  0000e	6a 00		 push	 0
  00010	6a 00		 push	 0
  00012	6a 01		 push	 1
  00014	ff 70 44	 push	 DWORD PTR [eax+68]
  00017	51		 push	 ecx
  00018	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  0001d	83 c4 1c	 add	 esp, 28			; 0000001cH

; 261  : 		 _pDisp);
; 262  : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?SetParentDispatch@CDispDesk@@QAEXPAUIDispatch@@@Z ENDP	; CDispDesk::SetParentDispatch
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?CallFunction@CDispDesk@@QAEHPBD0F@Z
_TEXT	SEGMENT
__szFunction$ = 8					; size = 4
__szParam$ = 12						; size = 4
_result$ = 16						; size = 4
__nParamLen$ = 16					; size = 2
?CallFunction@CDispDesk@@QAEHPBD0F@Z PROC		; CDispDesk::CallFunction, COMDAT
; _this$ = ecx

; 247  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 248  : 	BOOL result;
; 249  : 	static BYTE parms[] =
; 250  : 		VTS_BSTR VTS_BSTR VTS_I2;
; 251  : 	InvokeHelper(m_pdID[IIx_CallFunction], DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,

  00003	0f bf 45 10	 movsx	 eax, WORD PTR __nParamLen$[ebp]
  00007	50		 push	 eax
  00008	ff 75 0c	 push	 DWORD PTR __szParam$[ebp]
  0000b	8d 45 10	 lea	 eax, DWORD PTR _result$[ebp]
  0000e	ff 75 08	 push	 DWORD PTR __szFunction$[ebp]
  00011	68 00 00 00 00	 push	 OFFSET ?parms@?1??CallFunction@CDispDesk@@QAEHPBD0F@Z@4PAEA
  00016	50		 push	 eax
  00017	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001a	6a 0b		 push	 11			; 0000000bH
  0001c	6a 01		 push	 1
  0001e	ff 70 40	 push	 DWORD PTR [eax+64]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 252  : 		_szFunction, _szParam, _nParamLen);
; 253  : 	return result;

  00027	8b 45 10	 mov	 eax, DWORD PTR _result$[ebp]
  0002a	83 c4 24	 add	 esp, 36			; 00000024H

; 254  : }

  0002d	5d		 pop	 ebp
  0002e	c2 0c 00	 ret	 12			; 0000000cH
?CallFunction@CDispDesk@@QAEHPBD0F@Z ENDP		; CDispDesk::CallFunction
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?GetCtrlTypeFromName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__szCtrlName$ = 12					; size = 4
?GetCtrlTypeFromName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z PROC ; CDispDesk::GetCtrlTypeFromName, COMDAT
; _this$ = ecx

; 237  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetCtrlTypeFromName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 238  : 	CString result;

  0002e	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00031	8b cf		 mov	 ecx, edi
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 239  : 	static BYTE parms[] =
; 240  : 		VTS_BSTR;
; 241  : 	InvokeHelper(m_pdID[IIx_GetCtrlTypeFromName], DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
; 242  : 		_szCtrlName);
; 243  : 	return result;

  00039	ff 75 0c	 push	 DWORD PTR __szCtrlName$[ebp]
  0003c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0003f	68 00 00 00 00	 push	 OFFSET ?parms@?1??GetCtrlTypeFromName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
  00044	57		 push	 edi
  00045	6a 08		 push	 8
  00047	6a 01		 push	 1
  00049	ff 71 3c	 push	 DWORD PTR [ecx+60]
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00053	56		 push	 esi
  00054	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T2[ebp], 1
  0005b	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00060	83 c4 1c	 add	 esp, 28			; 0000001cH
  00063	8b c7		 mov	 eax, edi

; 244  : }

  00065	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00068	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006f	59		 pop	 ecx
  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCtrlTypeFromName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0d 00 00
	00		 je	 $LN4@GetCtrlTyp
  0000c	83 65 f0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00010	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00013	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN4@GetCtrlTyp:
  00019	c3		 ret	 0
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?GetCtrlTypeFromName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetCtrlTypeFromName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetCtrlTypeFromName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ENDP ; CDispDesk::GetCtrlTypeFromName
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?GetCtrlTypeFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__hWnd$ = 12						; size = 4
?GetCtrlTypeFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z PROC ; CDispDesk::GetCtrlTypeFromHwnd, COMDAT
; _this$ = ecx

; 227  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetCtrlTypeFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 228  : 	CString result;

  0002e	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00031	8b cf		 mov	 ecx, edi
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 229  : 	static BYTE parms[] =
; 230  : 		VTS_I4;
; 231  : 	InvokeHelper(m_pdID[IIx_GetCtrlTypeFromHwnd], DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
; 232  : 		_hWnd);
; 233  : 	return result;

  00039	ff 75 0c	 push	 DWORD PTR __hWnd$[ebp]
  0003c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0003f	68 00 00 00 00	 push	 OFFSET ?parms@?1??GetCtrlTypeFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z@4PAEA
  00044	57		 push	 edi
  00045	6a 08		 push	 8
  00047	6a 01		 push	 1
  00049	ff 71 38	 push	 DWORD PTR [ecx+56]
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00053	56		 push	 esi
  00054	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T2[ebp], 1
  0005b	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00060	83 c4 1c	 add	 esp, 28			; 0000001cH
  00063	8b c7		 mov	 eax, edi

; 234  : }

  00065	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00068	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006f	59		 pop	 ecx
  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCtrlTypeFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0d 00 00
	00		 je	 $LN4@GetCtrlTyp
  0000c	83 65 f0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00010	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00013	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN4@GetCtrlTyp:
  00019	c3		 ret	 0
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?GetCtrlTypeFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetCtrlTypeFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetCtrlTypeFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z ENDP ; CDispDesk::GetCtrlTypeFromHwnd
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?GetCtrlNameFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__hWnd$ = 12						; size = 4
?GetCtrlNameFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z PROC ; CDispDesk::GetCtrlNameFromHwnd, COMDAT
; _this$ = ecx

; 217  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetCtrlNameFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 218  : 	CString result;

  0002e	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00031	8b cf		 mov	 ecx, edi
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 219  : 	static BYTE parms[] =
; 220  : 		VTS_I4;
; 221  : 	InvokeHelper(m_pdID[IIx_GetCtrlNameFromHwnd], DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
; 222  : 		_hWnd);
; 223  : 	return result;

  00039	ff 75 0c	 push	 DWORD PTR __hWnd$[ebp]
  0003c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0003f	68 00 00 00 00	 push	 OFFSET ?parms@?1??GetCtrlNameFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z@4PAEA
  00044	57		 push	 edi
  00045	6a 08		 push	 8
  00047	6a 01		 push	 1
  00049	ff 71 34	 push	 DWORD PTR [ecx+52]
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00053	56		 push	 esi
  00054	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T2[ebp], 1
  0005b	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00060	83 c4 1c	 add	 esp, 28			; 0000001cH
  00063	8b c7		 mov	 eax, edi

; 224  : }

  00065	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00068	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006f	59		 pop	 ecx
  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCtrlNameFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0d 00 00
	00		 je	 $LN4@GetCtrlNam
  0000c	83 65 f0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00010	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00013	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN4@GetCtrlNam:
  00019	c3		 ret	 0
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?GetCtrlNameFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetCtrlNameFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetCtrlNameFromHwnd@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z ENDP ; CDispDesk::GetCtrlNameFromHwnd
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?GetCtrlHwndFromName@CDispDesk@@QAEJPBD@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
__szCtrlName$ = 8					; size = 4
?GetCtrlHwndFromName@CDispDesk@@QAEJPBD@Z PROC		; CDispDesk::GetCtrlHwndFromName, COMDAT
; _this$ = ecx

; 207  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 	long result;
; 209  : 	static BYTE parms[] =
; 210  : 		VTS_BSTR;
; 211  : 	InvokeHelper(m_pdID[IIx_GetCtrlHwndFromName], DISPATCH_METHOD, VT_I4, (void*)&result, parms,

  00003	ff 75 08	 push	 DWORD PTR __szCtrlName$[ebp]
  00006	8d 45 08	 lea	 eax, DWORD PTR _result$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??GetCtrlHwndFromName@CDispDesk@@QAEJPBD@Z@4PAEA
  0000e	50		 push	 eax
  0000f	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00012	6a 03		 push	 3
  00014	6a 01		 push	 1
  00016	ff 70 30	 push	 DWORD PTR [eax+48]
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 212  : 		_szCtrlName);
; 213  : 	return result;

  0001f	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  00022	83 c4 1c	 add	 esp, 28			; 0000001cH

; 214  : }

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?GetCtrlHwndFromName@CDispDesk@@QAEJPBD@Z ENDP		; CDispDesk::GetCtrlHwndFromName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?GetMapInfo@CDispDesk@@QAEHPBDPAUtagVARIANT@@@Z
_TEXT	SEGMENT
__szKey$ = 8						; size = 4
_result$ = 12						; size = 4
__vData$ = 12						; size = 4
?GetMapInfo@CDispDesk@@QAEHPBDPAUtagVARIANT@@@Z PROC	; CDispDesk::GetMapInfo, COMDAT
; _this$ = ecx

; 197  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  : 	BOOL result;
; 199  : 	static BYTE parms[] =
; 200  : 		VTS_BSTR VTS_PVARIANT;
; 201  : 	InvokeHelper(m_pdID[IIx_GetMapInfo], DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,

  00003	ff 75 0c	 push	 DWORD PTR __vData$[ebp]
  00006	8d 45 0c	 lea	 eax, DWORD PTR _result$[ebp]
  00009	ff 75 08	 push	 DWORD PTR __szKey$[ebp]
  0000c	68 00 00 00 00	 push	 OFFSET ?parms@?1??GetMapInfo@CDispDesk@@QAEHPBDPAUtagVARIANT@@@Z@4PAEA
  00011	50		 push	 eax
  00012	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00015	6a 0b		 push	 11			; 0000000bH
  00017	6a 01		 push	 1
  00019	ff 70 2c	 push	 DWORD PTR [eax+44]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 202  : 		_szKey, _vData);
; 203  : 	return result;

  00022	8b 45 0c	 mov	 eax, DWORD PTR _result$[ebp]
  00025	83 c4 20	 add	 esp, 32			; 00000020H

; 204  : }

  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
?GetMapInfo@CDispDesk@@QAEHPBDPAUtagVARIANT@@@Z ENDP	; CDispDesk::GetMapInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?GetMapName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetMapName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC ; CDispDesk::GetMapName, COMDAT
; _this$ = ecx

; 190  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetMapName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 191  : 	CString result;

  0002e	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00031	8b cf		 mov	 ecx, edi
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 192  : 	InvokeHelper(m_pdID[IIx_GetMapName], DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
; 193  : 	return result;

  00039	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0003c	6a 00		 push	 0
  0003e	57		 push	 edi
  0003f	6a 08		 push	 8
  00041	6a 01		 push	 1
  00043	ff 71 28	 push	 DWORD PTR [ecx+40]
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004d	56		 push	 esi
  0004e	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T2[ebp], 1
  00055	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  0005a	83 c4 18	 add	 esp, 24			; 00000018H
  0005d	8b c7		 mov	 eax, edi

; 194  : }

  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetMapName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0d 00 00
	00		 je	 $LN4@GetMapName
  0000c	83 65 f0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00010	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00013	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN4@GetMapName:
  00019	c3		 ret	 0
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?GetMapName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetMapName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetMapName@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CDispDesk::GetMapName
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?GetTrList@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetTrList@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC ; CDispDesk::GetTrList, COMDAT
; _this$ = ecx

; 183  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetTrList@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 184  : 	CString result;

  0002e	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00031	8b cf		 mov	 ecx, edi
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 185  : 	InvokeHelper(m_pdID[IIx_GetTrList], DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
; 186  : 	return result;

  00039	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0003c	6a 00		 push	 0
  0003e	57		 push	 edi
  0003f	6a 08		 push	 8
  00041	6a 01		 push	 1
  00043	ff 71 24	 push	 DWORD PTR [ecx+36]
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004d	56		 push	 esi
  0004e	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T2[ebp], 1
  00055	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  0005a	83 c4 18	 add	 esp, 24			; 00000018H
  0005d	8b c7		 mov	 eax, edi

; 187  : }

  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetTrList@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0d 00 00
	00		 je	 $LN4@GetTrList
  0000c	83 65 f0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00010	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00013	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN4@GetTrList:
  00019	c3		 ret	 0
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?GetTrList@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetTrList@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetTrList@CDispDesk@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CDispDesk::GetTrList
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?ShowMessageBox@CDispDesk@@QAEFFPBD@Z
_TEXT	SEGMENT
_result$ = 8						; size = 2
__nType$ = 8						; size = 2
__szMessage$ = 12					; size = 4
?ShowMessageBox@CDispDesk@@QAEFFPBD@Z PROC		; CDispDesk::ShowMessageBox, COMDAT
; _this$ = ecx

; 173  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 174  : 	short result;
; 175  : 	static BYTE parms[] =
; 176  : 		VTS_I2 VTS_BSTR;
; 177  : 	InvokeHelper(m_pdID[IIx_ShowMessageBox], DISPATCH_METHOD, VT_I2, (void*)&result, parms,

  00003	ff 75 0c	 push	 DWORD PTR __szMessage$[ebp]
  00006	0f bf 45 08	 movsx	 eax, WORD PTR __nType$[ebp]
  0000a	50		 push	 eax
  0000b	68 00 00 00 00	 push	 OFFSET ?parms@?1??ShowMessageBox@CDispDesk@@QAEFFPBD@Z@4PAEA
  00010	8d 45 08	 lea	 eax, DWORD PTR _result$[ebp]
  00013	50		 push	 eax
  00014	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00017	6a 02		 push	 2
  00019	6a 01		 push	 1
  0001b	ff 70 20	 push	 DWORD PTR [eax+32]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 178  : 		_nType, _szMessage);
; 179  : 	return result;

  00024	66 8b 45 08	 mov	 ax, WORD PTR _result$[ebp]
  00028	83 c4 20	 add	 esp, 32			; 00000020H

; 180  : }

  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
?ShowMessageBox@CDispDesk@@QAEFFPBD@Z ENDP		; CDispDesk::ShowMessageBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?ShowTrMessage@CDispDesk@@QAEXPBD@Z
_TEXT	SEGMENT
__szMessage$ = 8					; size = 4
?ShowTrMessage@CDispDesk@@QAEXPBD@Z PROC		; CDispDesk::ShowTrMessage, COMDAT
; _this$ = ecx

; 165  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 166  : 	static BYTE parms[] =
; 167  : 		VTS_BSTR;
; 168  : 	InvokeHelper(m_pdID[IIx_ShowTrMessage], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR __szMessage$[ebp]
  00006	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??ShowTrMessage@CDispDesk@@QAEXPBD@Z@4PAEA
  0000e	6a 00		 push	 0
  00010	6a 00		 push	 0
  00012	6a 01		 push	 1
  00014	ff 70 1c	 push	 DWORD PTR [eax+28]
  00017	51		 push	 ecx
  00018	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  0001d	83 c4 1c	 add	 esp, 28			; 0000001cH

; 169  : 		 _szMessage);
; 170  : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?ShowTrMessage@CDispDesk@@QAEXPBD@Z ENDP		; CDispDesk::ShowTrMessage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?Blank@CDispDesk@@QAEXXZ
_TEXT	SEGMENT
?Blank@CDispDesk@@QAEXXZ PROC				; CDispDesk::Blank, COMDAT
; _this$ = ecx

; 161  : 	InvokeHelper(m_pdID[IIx_Blank], DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00003	6a 00		 push	 0
  00005	6a 00		 push	 0
  00007	6a 00		 push	 0
  00009	6a 01		 push	 1
  0000b	ff 70 18	 push	 DWORD PTR [eax+24]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00014	83 c4 18	 add	 esp, 24			; 00000018H

; 162  : }

  00017	c3		 ret	 0
?Blank@CDispDesk@@QAEXXZ ENDP				; CDispDesk::Blank
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?UnLoadScript@CDispDesk@@QAEXXZ
_TEXT	SEGMENT
?UnLoadScript@CDispDesk@@QAEXXZ PROC			; CDispDesk::UnLoadScript, COMDAT
; _this$ = ecx

; 156  : 	InvokeHelper(m_pdID[IIx_UnLoadScript], DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00003	6a 00		 push	 0
  00005	6a 00		 push	 0
  00007	6a 00		 push	 0
  00009	6a 01		 push	 1
  0000b	ff 70 14	 push	 DWORD PTR [eax+20]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00014	83 c4 18	 add	 esp, 24			; 00000018H

; 157  : }

  00017	c3		 ret	 0
?UnLoadScript@CDispDesk@@QAEXXZ ENDP			; CDispDesk::UnLoadScript
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SetSharedInterface@CDispDesk@@QAEJJ@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
_dwInterface$ = 8					; size = 4
?SetSharedInterface@CDispDesk@@QAEJJ@Z PROC		; CDispDesk::SetSharedInterface, COMDAT
; _this$ = ecx

; 145  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 146  : 	long result;
; 147  : 	static BYTE parms[] =
; 148  : 		VTS_I4;
; 149  : 	InvokeHelper(m_pdID[IIx_SetSharedInterface], DISPATCH_METHOD, VT_I4, (void*)&result, parms,

  00003	ff 75 08	 push	 DWORD PTR _dwInterface$[ebp]
  00006	8d 45 08	 lea	 eax, DWORD PTR _result$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetSharedInterface@CDispDesk@@QAEJJ@Z@4PAEA
  0000e	50		 push	 eax
  0000f	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00012	6a 03		 push	 3
  00014	6a 01		 push	 1
  00016	ff 70 10	 push	 DWORD PTR [eax+16]
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 150  : 		dwInterface);
; 151  : 	return result;

  0001f	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  00022	83 c4 1c	 add	 esp, 28			; 0000001cH

; 152  : }

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?SetSharedInterface@CDispDesk@@QAEJJ@Z ENDP		; CDispDesk::SetSharedInterface
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?GetSocketHandle@CDispDesk@@QAEJPBD@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
_szSocket$ = 8						; size = 4
?GetSocketHandle@CDispDesk@@QAEJPBD@Z PROC		; CDispDesk::GetSocketHandle, COMDAT
; _this$ = ecx

; 135  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 136  : 	long result;
; 137  : 	static BYTE parms[] =
; 138  : 		VTS_BSTR;
; 139  : 	InvokeHelper(m_pdID[IIx_GetSocketHandle], DISPATCH_METHOD, VT_I4, (void*)&result, parms,

  00003	ff 75 08	 push	 DWORD PTR _szSocket$[ebp]
  00006	8d 45 08	 lea	 eax, DWORD PTR _result$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??GetSocketHandle@CDispDesk@@QAEJPBD@Z@4PAEA
  0000e	50		 push	 eax
  0000f	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00012	6a 03		 push	 3
  00014	6a 01		 push	 1
  00016	ff 70 0c	 push	 DWORD PTR [eax+12]
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 140  : 		szSocket);
; 141  : 	return result;

  0001f	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  00022	83 c4 1c	 add	 esp, 28			; 0000001cH

; 142  : }

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?GetSocketHandle@CDispDesk@@QAEJPBD@Z ENDP		; CDispDesk::GetSocketHandle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SetSocketHandle@CDispDesk@@QAEXPBDJ@Z
_TEXT	SEGMENT
_szSocket$ = 8						; size = 4
_dwHandle$ = 12						; size = 4
?SetSocketHandle@CDispDesk@@QAEXPBDJ@Z PROC		; CDispDesk::SetSocketHandle, COMDAT
; _this$ = ecx

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  : 	static BYTE parms[] =
; 129  : 		VTS_BSTR VTS_I4;
; 130  : 	InvokeHelper(m_pdID[IIx_SetSocketHandle], DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 0c	 push	 DWORD PTR _dwHandle$[ebp]
  00006	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00009	ff 75 08	 push	 DWORD PTR _szSocket$[ebp]
  0000c	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetSocketHandle@CDispDesk@@QAEXPBDJ@Z@4PAEA
  00011	6a 00		 push	 0
  00013	6a 00		 push	 0
  00015	6a 01		 push	 1
  00017	ff 70 08	 push	 DWORD PTR [eax+8]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper
  00020	83 c4 20	 add	 esp, 32			; 00000020H

; 131  : 		 szSocket, dwHandle);
; 132  : }

  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?SetSocketHandle@CDispDesk@@QAEXPBDJ@Z ENDP		; CDispDesk::SetSocketHandle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?ReceiveTR@CDispDesk@@QAEFPBDJF@Z
_TEXT	SEGMENT
_szTrName$ = 8						; size = 4
_szData$ = 12						; size = 4
_result$ = 16						; size = 2
_nDataLen$ = 16						; size = 2
?ReceiveTR@CDispDesk@@QAEFPBDJF@Z PROC			; CDispDesk::ReceiveTR, COMDAT
; _this$ = ecx

; 117  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 118  : 	short result;
; 119  : 	static BYTE parms[] =
; 120  : 		VTS_BSTR VTS_I4 VTS_I2;
; 121  : 	InvokeHelper(m_pdID[IIx_ReceiveTR], DISPATCH_METHOD, VT_I2, (void*)&result, parms,

  00003	0f bf 45 10	 movsx	 eax, WORD PTR _nDataLen$[ebp]
  00007	50		 push	 eax
  00008	ff 75 0c	 push	 DWORD PTR _szData$[ebp]
  0000b	8d 45 10	 lea	 eax, DWORD PTR _result$[ebp]
  0000e	ff 75 08	 push	 DWORD PTR _szTrName$[ebp]
  00011	68 00 00 00 00	 push	 OFFSET ?parms@?1??ReceiveTR@CDispDesk@@QAEFPBDJF@Z@4PAEA
  00016	50		 push	 eax
  00017	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001a	6a 02		 push	 2
  0001c	6a 01		 push	 1
  0001e	ff 70 04	 push	 DWORD PTR [eax+4]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 122  : 		szTrName, szData, nDataLen);
; 123  : 	return result;

  00027	66 8b 45 10	 mov	 ax, WORD PTR _result$[ebp]
  0002b	83 c4 24	 add	 esp, 36			; 00000024H

; 124  : }

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?ReceiveTR@CDispDesk@@QAEFPBDJF@Z ENDP			; CDispDesk::ReceiveTR
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?SendTR@CDispDesk@@QAEFPBD@Z
_TEXT	SEGMENT
_result$ = 8						; size = 2
_szTrName$ = 8						; size = 4
?SendTR@CDispDesk@@QAEFPBD@Z PROC			; CDispDesk::SendTR, COMDAT
; _this$ = ecx

; 107  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 108  : 	short result;
; 109  : 	static BYTE parms[] =
; 110  : 		VTS_BSTR;
; 111  : 	InvokeHelper(m_pdID[IIx_SendTR], DISPATCH_METHOD, VT_I2, (void*)&result, parms,

  00003	ff 75 08	 push	 DWORD PTR _szTrName$[ebp]
  00006	8d 45 08	 lea	 eax, DWORD PTR _result$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??SendTR@CDispDesk@@QAEFPBD@Z@4PAEA
  0000e	50		 push	 eax
  0000f	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00012	6a 02		 push	 2
  00014	6a 01		 push	 1
  00016	ff 30		 push	 DWORD PTR [eax]
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ?InvokeHelper@COleDispatchDriver@@QAAXJGGPAXPBEZZ ; COleDispatchDriver::InvokeHelper

; 112  : 		szTrName);
; 113  : 	return result;

  0001e	66 8b 45 08	 mov	 ax, WORD PTR _result$[ebp]
  00022	83 c4 1c	 add	 esp, 28			; 0000001cH

; 114  : }

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?SendTR@CDispDesk@@QAEFPBD@Z ENDP			; CDispDesk::SendTR
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?InitInterfaceName@CDispDesk@@QAEXPAUIDispatch@@@Z
_TEXT	SEGMENT
_pDisp$ = 8						; size = 4
?InitInterfaceName@CDispDesk@@QAEXPAUIDispatch@@@Z PROC	; CDispDesk::InitInterfaceName, COMDAT
; _this$ = ecx

; 88   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 89   : 	int i, nCount = sizeof( m_osInterfaceName) / sizeof( OLECHAR *);
; 90   : 	m_pdID = new DISPID[ nCount];

  00006	68 f8 00 00 00	 push	 248			; 000000f8H
  0000b	8b d9		 mov	 ebx, ecx
  0000d	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00012	8b 7d 08	 mov	 edi, DWORD PTR _pDisp$[ebp]
  00015	83 c4 04	 add	 esp, 4
  00018	89 43 0c	 mov	 DWORD PTR [ebx+12], eax
  0001b	33 f6		 xor	 esi, esi
  0001d	0f 1f 00	 npad	 3
$LL4@InitInterf:

; 91   : 	for( i = 0; i < nCount; i++)
; 92   : 		pDisp->GetIDsOfNames( IID_NULL, &m_osInterfaceName[ i], 1, LOCALE_USER_DEFAULT, m_pdID + i);

  00020	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
  00023	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00025	03 c6		 add	 eax, esi
  00027	50		 push	 eax
  00028	68 00 04 00 00	 push	 1024			; 00000400H
  0002d	6a 01		 push	 1
  0002f	8d 86 00 00 00
	00		 lea	 eax, DWORD PTR ?m_osInterfaceName@CDispDesk@@2PAPA_WA[esi]
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET _GUID_NULL
  0003b	57		 push	 edi
  0003c	ff 51 14	 call	 DWORD PTR [ecx+20]
  0003f	83 c6 04	 add	 esi, 4
  00042	81 fe f8 00 00
	00		 cmp	 esi, 248		; 000000f8H
  00048	7c d6		 jl	 SHORT $LL4@InitInterf

; 93   : }

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
?InitInterfaceName@CDispDesk@@QAEXPAUIDispatch@@@Z ENDP	; CDispDesk::InitInterfaceName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxole.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ??1CDispDesk@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CDispDesk@@QAE@XZ PROC				; CDispDesk::~CDispDesk, COMDAT
; _this$ = ecx

; 83   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CDispDesk@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 84   : 	if(m_pdID) delete m_pdID; m_pdID=NULL;

  00025	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00028	85 c0		 test	 eax, eax
  0002a	74 0b		 je	 SHORT $LN2@CDispDesk
  0002c	6a 04		 push	 4
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00034	83 c4 08	 add	 esp, 8
$LN2@CDispDesk:
  00037	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxole.inl

; 131  : 	{ ReleaseDispatch(); }

  0003e	8b ce		 mov	 ecx, esi
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00047	e8 00 00 00 00	 call	 ?ReleaseDispatch@COleDispatchDriver@@QAEXXZ ; COleDispatchDriver::ReleaseDispatch
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp

; 85   : }

  0004c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00056	59		 pop	 ecx
  00057	5e		 pop	 esi
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
  0005c	cc		 int	 3
  0005d	cc		 int	 3
  0005e	cc		 int	 3
  0005f	cc		 int	 3
  00060	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CDispDesk@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CDispDesk@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CDispDesk@@QAE@XZ ENDP				; CDispDesk::~CDispDesk
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ??0CDispDesk@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDispDesk@@QAE@XZ PROC				; CDispDesk::CDispDesk, COMDAT
; _this$ = ecx

; 77   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000a	e8 00 00 00 00	 call	 ??0COleDispatchDriver@@QAE@XZ ; COleDispatchDriver::COleDispatchDriver

; 78   : 	m_pdID = NULL;

  0000f	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 79   : 	m_pdispatch = NULL;
; 80   : }

  00016	8b c6		 mov	 eax, esi
  00018	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0001f	5e		 pop	 esi
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??0CDispDesk@@QAE@XZ ENDP				; CDispDesk::CDispDesk
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\DispDesk.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
