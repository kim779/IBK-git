; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\ChartLanguageTable\ChartLanguageTable.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	?SupportsRestartManager@CWinApp@@UBEHXZ		; CWinApp::SupportsRestartManager
PUBLIC	?SupportsApplicationRecovery@CWinApp@@UBEHXZ	; CWinApp::SupportsApplicationRecovery
PUBLIC	?SupportsAutosaveAtRestart@CWinApp@@UBEHXZ	; CWinApp::SupportsAutosaveAtRestart
PUBLIC	?SupportsAutosaveAtInterval@CWinApp@@UBEHXZ	; CWinApp::SupportsAutosaveAtInterval
PUBLIC	?ReopenPreviousFilesAtRestart@CWinApp@@UBEHXZ	; CWinApp::ReopenPreviousFilesAtRestart
PUBLIC	?RestoreAutosavedFilesAtRestart@CWinApp@@UBEHXZ	; CWinApp::RestoreAutosavedFilesAtRestart
PUBLIC	?GetApplicationRestartFlags@CWinApp@@UAEKXZ	; CWinApp::GetApplicationRestartFlags
PUBLIC	?GetApplicationRecoveryParameter@CWinApp@@UAEPAXXZ ; CWinApp::GetApplicationRecoveryParameter
PUBLIC	?GetApplicationRecoveryPingInterval@CWinApp@@UAEKXZ ; CWinApp::GetApplicationRecoveryPingInterval
PUBLIC	??0CChartLanguageTableApp@@QAE@XZ		; CChartLanguageTableApp::CChartLanguageTableApp
PUBLIC	?GetThisMessageMap@CChartLanguageTableApp@@KGPBUAFX_MSGMAP@@XZ ; CChartLanguageTableApp::GetThisMessageMap
PUBLIC	?GetMessageMap@CChartLanguageTableApp@@MBEPBUAFX_MSGMAP@@XZ ; CChartLanguageTableApp::GetMessageMap
PUBLIC	??_GCChartLanguageTableApp@@UAEPAXI@Z		; CChartLanguageTableApp::`scalar deleting destructor'
PUBLIC	_GetMetaText_
PUBLIC	?GetChartCtrlOrFirst@@YAPAVCChartCtrl@@PAUHWND__@@@Z ; GetChartCtrlOrFirst
PUBLIC	_GetMetaTable
PUBLIC	_GetIndicatorNameTable
PUBLIC	_CreateLocalLanguageTable
PUBLIC	_RemoveLocalLanguageTable
PUBLIC	_GetLocalLanguageTable
PUBLIC	_GetCurrentLanguageID
PUBLIC	_GetLanguageText_
PUBLIC	_GetLanguageTextDirectly_
PUBLIC	_GetIndicatorID
PUBLIC	_LoadResourceDLL
PUBLIC	_GetMetaTextCount
PUBLIC	_GetAllMetaTexts
PUBLIC	_UnloadAllResourceDLL
PUBLIC	_CreateLocalMetaText
PUBLIC	_SetLocalMetaText
PUBLIC	_GetMetaTextFromOther_
PUBLIC	_GetMetaTextForScript_
PUBLIC	_GetMetaTextDirectly_
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R3CCmdTarget@@8				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCmdTarget@@8				; CCmdTarget::`RTTI Base Class Array'
PUBLIC	??_7CChartLanguageTableApp@@6B@			; CChartLanguageTableApp::`vftable'
PUBLIC	?g_metaTable@@3VCMetaTable@@A			; g_metaTable
PUBLIC	?theApp@@3VCChartLanguageTableApp@@A		; theApp
PUBLIC	?g_chartCtrlMap@@3VCChartCtrlMap@@A		; g_chartCtrlMap
PUBLIC	?g_resDllManager@@3VCResourceDllManager@@A	; g_resDllManager
PUBLIC	??_R4CChartLanguageTableApp@@6B@		; CChartLanguageTableApp::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCChartLanguageTableApp@@@8		; CChartLanguageTableApp `RTTI Type Descriptor'
PUBLIC	??_R3CChartLanguageTableApp@@8			; CChartLanguageTableApp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CChartLanguageTableApp@@8			; CChartLanguageTableApp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CChartLanguageTableApp@@8		; CChartLanguageTableApp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CWinApp@@8			; CWinApp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWinApp@@@8				; CWinApp `RTTI Type Descriptor'
PUBLIC	??_R3CWinApp@@8					; CWinApp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWinApp@@8					; CWinApp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWinThread@@8			; CWinThread::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWinThread@@@8				; CWinThread `RTTI Type Descriptor'
PUBLIC	??_R3CWinThread@@8				; CWinThread::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWinThread@@8				; CWinThread::`RTTI Base Class Array'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	_atexit:PROC
EXTRN	?Lookup@CMapPtrToPtr@@QBEHPAXAAPAX@Z:PROC	; CMapPtrToPtr::Lookup
EXTRN	??ACMapPtrToPtr@@QAEAAPAXPAX@Z:PROC		; CMapPtrToPtr::operator[]
EXTRN	?RemoveKey@CMapPtrToPtr@@QAEHPAX@Z:PROC		; CMapPtrToPtr::RemoveKey
EXTRN	?GetNextAssoc@CMapPtrToPtr@@QBEXAAPAU__POSITION@@AAPAX1@Z:PROC ; CMapPtrToPtr::GetNextAssoc
EXTRN	?Lookup@CMapStringToPtr@@QBEHPBDAAPAX@Z:PROC	; CMapStringToPtr::Lookup
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:PROC ; CCmdTarget::OnCmdMsg
EXTRN	?OnFinalRelease@CCmdTarget@@UAEXXZ:PROC		; CCmdTarget::OnFinalRelease
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:PROC	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:PROC ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:PROC	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:PROC ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:PROC ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:PROC ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:PROC ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:PROC ; CCmdTarget::GetConnectionMap
EXTRN	?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ:PROC ; CCmdTarget::GetInterfaceMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:PROC ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:PROC	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:PROC ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:PROC ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:PROC ; CCmdTarget::GetConnectionHook
EXTRN	?PreTranslateMessage@CWinThread@@UAEHPAUtagMSG@@@Z:PROC ; CWinThread::PreTranslateMessage
EXTRN	?PumpMessage@CWinThread@@UAEHXZ:PROC		; CWinThread::PumpMessage
EXTRN	?IsIdleMessage@CWinThread@@UAEHPAUtagMSG@@@Z:PROC ; CWinThread::IsIdleMessage
EXTRN	?ProcessMessageFilter@CWinThread@@UAEHHPAUtagMSG@@@Z:PROC ; CWinThread::ProcessMessageFilter
EXTRN	?GetMainWnd@CWinThread@@UAEPAVCWnd@@XZ:PROC	; CWinThread::GetMainWnd
EXTRN	?Delete@CWinThread@@UAEXXZ:PROC			; CWinThread::Delete
EXTRN	?GetRuntimeClass@CWinApp@@UBEPAUCRuntimeClass@@XZ:PROC ; CWinApp::GetRuntimeClass
EXTRN	??0CWinApp@@QAE@PBD@Z:PROC			; CWinApp::CWinApp
EXTRN	?GetProfileIntA@CWinApp@@UAEIPBD0H@Z:PROC	; CWinApp::GetProfileIntA
EXTRN	?WriteProfileInt@CWinApp@@UAEHPBD0H@Z:PROC	; CWinApp::WriteProfileInt
EXTRN	?GetProfileStringA@CWinApp@@UAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD00@Z:PROC ; CWinApp::GetProfileStringA
EXTRN	?WriteProfileStringA@CWinApp@@UAEHPBD00@Z:PROC	; CWinApp::WriteProfileStringA
EXTRN	?GetProfileBinary@CWinApp@@UAEHPBD0PAPAEPAI@Z:PROC ; CWinApp::GetProfileBinary
EXTRN	?WriteProfileBinary@CWinApp@@UAEHPBD0PAEI@Z:PROC ; CWinApp::WriteProfileBinary
EXTRN	?InitLibId@CWinApp@@UAEXXZ:PROC			; CWinApp::InitLibId
EXTRN	?Register@CWinApp@@UAEHXZ:PROC			; CWinApp::Register
EXTRN	?Unregister@CWinApp@@UAEHXZ:PROC		; CWinApp::Unregister
EXTRN	?OpenDocumentFile@CWinApp@@UAEPAVCDocument@@PBD@Z:PROC ; CWinApp::OpenDocumentFile
EXTRN	?OpenDocumentFile@CWinApp@@UAEPAVCDocument@@PBDH@Z:PROC ; CWinApp::OpenDocumentFile
EXTRN	?AddToRecentFileList@CWinApp@@UAEXPBD@Z:PROC	; CWinApp::AddToRecentFileList
EXTRN	?InitApplication@CWinApp@@UAEHXZ:PROC		; CWinApp::InitApplication
EXTRN	?SaveAllModified@CWinApp@@UAEHXZ:PROC		; CWinApp::SaveAllModified
EXTRN	?DoMessageBox@CWinApp@@UAEHPBDII@Z:PROC		; CWinApp::DoMessageBox
EXTRN	?DoWaitCursor@CWinApp@@UAEXH@Z:PROC		; CWinApp::DoWaitCursor
EXTRN	?OnDDECommand@CWinApp@@UAEHPAD@Z:PROC		; CWinApp::OnDDECommand
EXTRN	?WinHelpA@CWinApp@@UAEXKI@Z:PROC		; CWinApp::WinHelpA
EXTRN	?HtmlHelpA@CWinApp@@UAEXKI@Z:PROC		; CWinApp::HtmlHelpA
EXTRN	?WinHelpInternal@CWinApp@@UAEXKI@Z:PROC		; CWinApp::WinHelpInternal
EXTRN	?RegisterWithRestartManager@CWinApp@@UAEJHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:PROC ; CWinApp::RegisterWithRestartManager
EXTRN	?RegisterWithRestartManager@CWinApp@@UAEJPB_WKP6GKPAX@Z1KK@Z:PROC ; CWinApp::RegisterWithRestartManager
EXTRN	?ApplicationRecoveryCallback@CWinApp@@UAEKPAX@Z:PROC ; CWinApp::ApplicationRecoveryCallback
EXTRN	?GetDataRecoveryHandler@CWinApp@@UAEPAVCDataRecoveryHandler@@XZ:PROC ; CWinApp::GetDataRecoveryHandler
EXTRN	?IsTaskbarInteractionEnabled@CWinApp@@UAEHXZ:PROC ; CWinApp::IsTaskbarInteractionEnabled
EXTRN	?InitInstance@CWinApp@@UAEHXZ:PROC		; CWinApp::InitInstance
EXTRN	?ExitInstance@CWinApp@@UAEHXZ:PROC		; CWinApp::ExitInstance
EXTRN	?RestartInstance@CWinApp@@UAEHXZ:PROC		; CWinApp::RestartInstance
EXTRN	?Run@CWinApp@@UAEHXZ:PROC			; CWinApp::Run
EXTRN	?OnIdle@CWinApp@@UAEHJ@Z:PROC			; CWinApp::OnIdle
EXTRN	?ProcessWndProcException@CWinApp@@UAEJPAVCException@@PBUtagMSG@@@Z:PROC ; CWinApp::ProcessWndProcException
EXTRN	?LoadAppLangResourceDLL@CWinApp@@UAEPAUHINSTANCE__@@XZ:PROC ; CWinApp::LoadAppLangResourceDLL
EXTRN	??1CWinApp@@UAE@XZ:PROC				; CWinApp::~CWinApp
EXTRN	?GetThisMessageMap@CWinApp@@KGPBUAFX_MSGMAP@@XZ:PROC ; CWinApp::GetThisMessageMap
EXTRN	?LoadSysPolicies@CWinApp@@UAEHXZ:PROC		; CWinApp::LoadSysPolicies
EXTRN	??_ECChartLanguageTableApp@@UAEPAXI@Z:PROC	; CChartLanguageTableApp::`vector deleting destructor'
EXTRN	??0CMetaTable@@QAE@XZ:PROC			; CMetaTable::CMetaTable
EXTRN	??1CMetaTable@@UAE@XZ:PROC			; CMetaTable::~CMetaTable
EXTRN	?LoadMetaTable@CMetaTable@@QAEXPBD0@Z:PROC	; CMetaTable::LoadMetaTable
EXTRN	??0CChartCtrlMap@@QAE@XZ:PROC			; CChartCtrlMap::CChartCtrlMap
EXTRN	??1CChartCtrlMap@@UAE@XZ:PROC			; CChartCtrlMap::~CChartCtrlMap
EXTRN	??0CChartCtrl@@QAE@PAUHWND__@@W4E_LANGUAGEID@IMetaTable@@@Z:PROC ; CChartCtrl::CChartCtrl
EXTRN	?CreateLocalLanguageTable@CChartCtrl@@QAEXPBDH@Z:PROC ; CChartCtrl::CreateLocalLanguageTable
EXTRN	?GetLocalLanguageTable@CChartCtrl@@QAEPBDXZ:PROC ; CChartCtrl::GetLocalLanguageTable
EXTRN	?GetLanguageText@CChartCtrl@@QAEPBDW4E_CODEPAGE@IMetaTable@@PBD@Z:PROC ; CChartCtrl::GetLanguageText
EXTRN	?CreateLocalMetaText@CChartCtrl@@QAEPBDPBD@Z:PROC ; CChartCtrl::CreateLocalMetaText
EXTRN	?SetLocalMetaText@CChartCtrl@@QAEHPBD0@Z:PROC	; CChartCtrl::SetLocalMetaText
EXTRN	?GetMetaText@CChartCtrl@@QAEPBDW4E_CODEPAGE@IMetaTable@@PBD@Z:PROC ; CChartCtrl::GetMetaText
EXTRN	?GetMetaTextForScript@CChartCtrl@@QAEPBDW4E_CODEPAGE@IMetaTable@@PBD@Z:PROC ; CChartCtrl::GetMetaTextForScript
EXTRN	??0CResourceDllManager@@QAE@XZ:PROC		; CResourceDllManager::CResourceDllManager
EXTRN	??1CResourceDllManager@@UAE@XZ:PROC		; CResourceDllManager::~CResourceDllManager
EXTRN	?LoadResourceDLL@CResourceDllManager@@QAEPAUHINSTANCE__@@PAU2@W4E_LANGUAGEID@IMetaTable@@@Z:PROC ; CResourceDllManager::LoadResourceDLL
EXTRN	?UnloadResourceDLL@CResourceDllManager@@QAEXXZ:PROC ; CResourceDllManager::UnloadResourceDLL
EXTRN	?GetLanguageText@CCodePage@@QAEPBDW4E_LANGUAGEID@IMetaTable@@PBD@Z:PROC ; CCodePage::GetLanguageText
EXTRN	?GetMetaTextCount@CCodePage@@QAEHXZ:PROC	; CCodePage::GetMetaTextCount
EXTRN	?GetAllMetaTexts@CCodePage@@QAEHPAPBD@Z:PROC	; CCodePage::GetAllMetaTexts
EXTRN	?GetMetaText@CCodePage@@QAEPBDW4E_LANGUAGEID@IMetaTable@@PBD@Z:PROC ; CCodePage::GetMetaText
EXTRN	?GetMetaTextFromOther@CCodePage@@QAEHPBDAAPBD@Z:PROC ; CCodePage::GetMetaTextFromOther
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?m_szNullString@CMetaTable@@2PBDB:DWORD		; CMetaTable::m_szNullString
EXTRN	?m_szMetaTexts@CMetaTable@@2PAPBDA:BYTE		; CMetaTable::m_szMetaTexts
_BSS	SEGMENT
?g_metaTable@@3VCMetaTable@@A DB 02e4H DUP (?)		; g_metaTable
?theApp@@3VCChartLanguageTableApp@@A DB 0ccH DUP (?)	; theApp
?g_chartCtrlMap@@3VCChartCtrlMap@@A DB 01cH DUP (?)	; g_chartCtrlMap
?g_resDllManager@@3VCResourceDllManager@@A DB 020H DUP (?) ; g_resDllManager
_BSS	ENDS
CRT$XCU	SEGMENT
?theApp$initializer$@@3P6AXXZA DD FLAT:??__EtheApp@@YAXXZ ; theApp$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R2CWinThread@@8
rdata$r	SEGMENT
??_R2CWinThread@@8 DD FLAT:??_R1A@?0A@EA@CWinThread@@8	; CWinThread::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWinThread@@8
rdata$r	SEGMENT
??_R3CWinThread@@8 DD 00H				; CWinThread::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CWinThread@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWinThread@@@8
data$rs	SEGMENT
??_R0?AVCWinThread@@@8 DD FLAT:??_7type_info@@6B@	; CWinThread `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWinThread@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CWinThread@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWinThread@@8 DD FLAT:??_R0?AVCWinThread@@@8 ; CWinThread::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWinThread@@8
rdata$r	ENDS
;	COMDAT ??_R2CWinApp@@8
rdata$r	SEGMENT
??_R2CWinApp@@8 DD FLAT:??_R1A@?0A@EA@CWinApp@@8	; CWinApp::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWinThread@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWinApp@@8
rdata$r	SEGMENT
??_R3CWinApp@@8 DD 00H					; CWinApp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CWinApp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWinApp@@@8
data$rs	SEGMENT
??_R0?AVCWinApp@@@8 DD FLAT:??_7type_info@@6B@		; CWinApp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWinApp@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CWinApp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWinApp@@8 DD FLAT:??_R0?AVCWinApp@@@8	; CWinApp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWinApp@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CChartLanguageTableApp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CChartLanguageTableApp@@8 DD FLAT:??_R0?AVCChartLanguageTableApp@@@8 ; CChartLanguageTableApp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CChartLanguageTableApp@@8
rdata$r	ENDS
;	COMDAT ??_R2CChartLanguageTableApp@@8
rdata$r	SEGMENT
??_R2CChartLanguageTableApp@@8 DD FLAT:??_R1A@?0A@EA@CChartLanguageTableApp@@8 ; CChartLanguageTableApp::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWinApp@@8
	DD	FLAT:??_R1A@?0A@EA@CWinThread@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CChartLanguageTableApp@@8
rdata$r	SEGMENT
??_R3CChartLanguageTableApp@@8 DD 00H			; CChartLanguageTableApp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CChartLanguageTableApp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCChartLanguageTableApp@@@8
data$rs	SEGMENT
??_R0?AVCChartLanguageTableApp@@@8 DD FLAT:??_7type_info@@6B@ ; CChartLanguageTableApp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCChartLanguageTableApp@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CChartLanguageTableApp@@6B@
rdata$r	SEGMENT
??_R4CChartLanguageTableApp@@6B@ DD 00H			; CChartLanguageTableApp::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCChartLanguageTableApp@@@8
	DD	FLAT:??_R3CChartLanguageTableApp@@8
rdata$r	ENDS
;	COMDAT ?messageMap@?1??GetThisMessageMap@CChartLanguageTableApp@@KGPBUAFX_MSGMAP@@XZ@4U3@B
CONST	SEGMENT
?messageMap@?1??GetThisMessageMap@CChartLanguageTableApp@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CWinApp@@KGPBUAFX_MSGMAP@@XZ ; `CChartLanguageTableApp::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CChartLanguageTableApp@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
;	COMDAT ?_messageEntries@?1??GetThisMessageMap@CChartLanguageTableApp@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@?1??GetThisMessageMap@CChartLanguageTableApp@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 00H ; `CChartLanguageTableApp::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_7CChartLanguageTableApp@@6B@
CONST	SEGMENT
??_7CChartLanguageTableApp@@6B@ DD FLAT:??_R4CChartLanguageTableApp@@6B@ ; CChartLanguageTableApp::`vftable'
	DD	FLAT:?GetRuntimeClass@CWinApp@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECChartLanguageTableApp@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CCmdTarget@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CChartLanguageTableApp@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?InitInstance@CWinApp@@UAEHXZ
	DD	FLAT:?Run@CWinApp@@UAEHXZ
	DD	FLAT:?PreTranslateMessage@CWinThread@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?PumpMessage@CWinThread@@UAEHXZ
	DD	FLAT:?OnIdle@CWinApp@@UAEHJ@Z
	DD	FLAT:?IsIdleMessage@CWinThread@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?ExitInstance@CWinApp@@UAEHXZ
	DD	FLAT:?ProcessWndProcException@CWinApp@@UAEJPAVCException@@PBUtagMSG@@@Z
	DD	FLAT:?ProcessMessageFilter@CWinThread@@UAEHHPAUtagMSG@@@Z
	DD	FLAT:?GetMainWnd@CWinThread@@UAEPAVCWnd@@XZ
	DD	FLAT:?Delete@CWinThread@@UAEXXZ
	DD	FLAT:?GetProfileIntA@CWinApp@@UAEIPBD0H@Z
	DD	FLAT:?WriteProfileInt@CWinApp@@UAEHPBD0H@Z
	DD	FLAT:?GetProfileStringA@CWinApp@@UAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD00@Z
	DD	FLAT:?WriteProfileStringA@CWinApp@@UAEHPBD00@Z
	DD	FLAT:?GetProfileBinary@CWinApp@@UAEHPBD0PAPAEPAI@Z
	DD	FLAT:?WriteProfileBinary@CWinApp@@UAEHPBD0PAEI@Z
	DD	FLAT:?InitLibId@CWinApp@@UAEXXZ
	DD	FLAT:?Register@CWinApp@@UAEHXZ
	DD	FLAT:?Unregister@CWinApp@@UAEHXZ
	DD	FLAT:?OpenDocumentFile@CWinApp@@UAEPAVCDocument@@PBDH@Z
	DD	FLAT:?OpenDocumentFile@CWinApp@@UAEPAVCDocument@@PBD@Z
	DD	FLAT:?AddToRecentFileList@CWinApp@@UAEXPBD@Z
	DD	FLAT:?InitApplication@CWinApp@@UAEHXZ
	DD	FLAT:?SaveAllModified@CWinApp@@UAEHXZ
	DD	FLAT:?DoMessageBox@CWinApp@@UAEHPBDII@Z
	DD	FLAT:?DoWaitCursor@CWinApp@@UAEXH@Z
	DD	FLAT:?OnDDECommand@CWinApp@@UAEHPAD@Z
	DD	FLAT:?WinHelpA@CWinApp@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWinApp@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWinApp@@UAEXKI@Z
	DD	FLAT:?RegisterWithRestartManager@CWinApp@@UAEJPB_WKP6GKPAX@Z1KK@Z
	DD	FLAT:?RegisterWithRestartManager@CWinApp@@UAEJHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
	DD	FLAT:?ApplicationRecoveryCallback@CWinApp@@UAEKPAX@Z
	DD	FLAT:?SupportsRestartManager@CWinApp@@UBEHXZ
	DD	FLAT:?SupportsApplicationRecovery@CWinApp@@UBEHXZ
	DD	FLAT:?SupportsAutosaveAtRestart@CWinApp@@UBEHXZ
	DD	FLAT:?SupportsAutosaveAtInterval@CWinApp@@UBEHXZ
	DD	FLAT:?ReopenPreviousFilesAtRestart@CWinApp@@UBEHXZ
	DD	FLAT:?RestoreAutosavedFilesAtRestart@CWinApp@@UBEHXZ
	DD	FLAT:?GetApplicationRestartFlags@CWinApp@@UAEKXZ
	DD	FLAT:?GetApplicationRecoveryParameter@CWinApp@@UAEPAXXZ
	DD	FLAT:?GetApplicationRecoveryPingInterval@CWinApp@@UAEKXZ
	DD	FLAT:?GetDataRecoveryHandler@CWinApp@@UAEPAVCDataRecoveryHandler@@XZ
	DD	FLAT:?IsTaskbarInteractionEnabled@CWinApp@@UAEHXZ
	DD	FLAT:?RestartInstance@CWinApp@@UAEHXZ
	DD	FLAT:?LoadAppLangResourceDLL@CWinApp@@UAEPAUHINSTANCE__@@XZ
	DD	FLAT:?LoadSysPolicies@CWinApp@@UAEHXZ
CONST	ENDS
;	COMDAT ??_R2CCmdTarget@@8
rdata$r	SEGMENT
??_R2CCmdTarget@@8 DD FLAT:??_R1A@?0A@EA@CCmdTarget@@8	; CCmdTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CCmdTarget@@8
rdata$r	SEGMENT
??_R3CCmdTarget@@8 DD 00H				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
data$rs	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$rs	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$rs	ENDS
CRT$XCU	SEGMENT
?g_metaTable$initializer$@@3P6AXXZA DD FLAT:??__Eg_metaTable@@YAXXZ ; g_metaTable$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?g_chartCtrlMap$initializer$@@3P6AXXZA DD FLAT:??__Eg_chartCtrlMap@@YAXXZ ; g_chartCtrlMap$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?g_resDllManager$initializer$@@3P6AXXZA DD FLAT:??__Eg_resDllManager@@YAXXZ ; g_resDllManager$initializer$
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\MetaTable.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT _GetMetaTextDirectly_
_TEXT	SEGMENT
_p_eCodePage$ = 8					; size = 4
_p_eLanguageID$ = 12					; size = 4
_p_szLanguageText$ = 16					; size = 4
_GetMetaTextDirectly_ PROC				; COMDAT

; 327  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 328  : 	if( !p_szLanguageText) return p_szLanguageText;

  00003	8b 45 10	 mov	 eax, DWORD PTR _p_szLanguageText$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR _p_eCodePage$[ebp]
  00009	85 c0		 test	 eax, eax
  0000b	74 20		 je	 SHORT $LN10@GetMetaTex

; 329  : 	if( !*p_szLanguageText) return p_szLanguageText;

  0000d	80 38 00	 cmp	 BYTE PTR [eax], 0
  00010	74 1d		 je	 SHORT $LN1@GetMetaTex
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\MetaTable.h

; 36   : 					{	return ( IMetaTable::PACKET_NAME <= p_eCodePage && p_eCodePage < IMetaTable::CODE_PAGE_END) ? m_pCodePage[ p_eCodePage] : NULL;	}

  00012	83 f9 08	 cmp	 ecx, 8
  00015	77 16		 ja	 SHORT $LN10@GetMetaTex
  00017	8b 0c 8d 08 00
	00 00		 mov	 ecx, DWORD PTR ?g_metaTable@@3VCMetaTable@@A[ecx*4+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 332  : 	if( !pCodePage) return NULL;

  0001e	85 c9		 test	 ecx, ecx
  00020	74 0b		 je	 SHORT $LN10@GetMetaTex

; 333  : 	return pCodePage->GetMetaText( p_eLanguageID, p_szLanguageText);

  00022	50		 push	 eax
  00023	ff 75 0c	 push	 DWORD PTR _p_eLanguageID$[ebp]
  00026	e8 00 00 00 00	 call	 ?GetMetaText@CCodePage@@QAEPBDW4E_LANGUAGEID@IMetaTable@@PBD@Z ; CCodePage::GetMetaText

; 334  : }

  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
$LN10@GetMetaTex:

; 332  : 	if( !pCodePage) return NULL;

  0002d	33 c0		 xor	 eax, eax
$LN1@GetMetaTex:

; 334  : }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_GetMetaTextDirectly_ ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT _GetMetaTextForScript_
_TEXT	SEGMENT
_p_hOcxWnd$ = 8						; size = 4
_p_eCodePage$ = 12					; size = 4
_p_szOtherMOrLText$ = 16				; size = 4
_p_bReturnNULL$ = 20					; size = 4
_GetMetaTextForScript_ PROC				; COMDAT

; 306  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 307  : 	const char *szDefaultReturn = ( p_bReturnNULL ? NULL : p_szOtherMOrLText);

  00004	33 c0		 xor	 eax, eax
  00006	39 45 14	 cmp	 DWORD PTR _p_bReturnNULL$[ebp], eax
  00009	56		 push	 esi
  0000a	8b 75 10	 mov	 esi, DWORD PTR _p_szOtherMOrLText$[ebp]
  0000d	8b de		 mov	 ebx, esi
  0000f	0f 45 d8	 cmovne	 ebx, eax
  00012	57		 push	 edi

; 308  : 	if( !p_szOtherMOrLText) return szDefaultReturn;

  00013	85 f6		 test	 esi, esi
  00015	74 44		 je	 SHORT $LN10@GetMetaTex

; 309  : 	if( !*p_szOtherMOrLText) return szDefaultReturn;

  00017	38 06		 cmp	 BYTE PTR [esi], al
  00019	74 40		 je	 SHORT $LN10@GetMetaTex

; 310  : 
; 311  : 	CChartCtrl *pChartCtrl = GetChartCtrlOrFirst( p_hOcxWnd);

  0001b	ff 75 08	 push	 DWORD PTR _p_hOcxWnd$[ebp]
  0001e	e8 00 00 00 00	 call	 ?GetChartCtrlOrFirst@@YAPAVCChartCtrl@@PAUHWND__@@@Z ; GetChartCtrlOrFirst
  00023	8b f8		 mov	 edi, eax
  00025	83 c4 04	 add	 esp, 4

; 312  : 	if( !pChartCtrl) return szDefaultReturn;

  00028	85 ff		 test	 edi, edi
  0002a	74 2f		 je	 SHORT $LN10@GetMetaTex

; 313  : 	const char *szMetaText = pChartCtrl->GetMetaTextForScript( p_eCodePage, p_szOtherMOrLText);

  0002c	56		 push	 esi
  0002d	ff 75 0c	 push	 DWORD PTR _p_eCodePage$[ebp]
  00030	8b cf		 mov	 ecx, edi
  00032	e8 00 00 00 00	 call	 ?GetMetaTextForScript@CChartCtrl@@QAEPBDW4E_CODEPAGE@IMetaTable@@PBD@Z ; CChartCtrl::GetMetaTextForScript

; 314  : 
; 315  : 	if( !szMetaText && pChartCtrl->GetOcxHwnd() == p_hOcxWnd)

  00037	85 c0		 test	 eax, eax
  00039	75 22		 jne	 SHORT $LN1@GetMetaTex
  0003b	8b 45 08	 mov	 eax, DWORD PTR _p_hOcxWnd$[ebp]
  0003e	39 47 04	 cmp	 DWORD PTR [edi+4], eax
  00041	75 18		 jne	 SHORT $LN10@GetMetaTex

; 316  : 		if( IMetaTable::PACKET_NAME == p_eCodePage || IMetaTable::GRAPH_TITLE == p_eCodePage)

  00043	8b 45 0c	 mov	 eax, DWORD PTR _p_eCodePage$[ebp]
  00046	85 c0		 test	 eax, eax
  00048	74 05		 je	 SHORT $LN7@GetMetaTex
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 0c		 jne	 SHORT $LN10@GetMetaTex
$LN7@GetMetaTex:

; 317  : 			szMetaText = pChartCtrl->CreateLocalMetaText( p_szOtherMOrLText);

  0004f	56		 push	 esi
  00050	8b cf		 mov	 ecx, edi
  00052	e8 00 00 00 00	 call	 ?CreateLocalMetaText@CChartCtrl@@QAEPBDPBD@Z ; CChartCtrl::CreateLocalMetaText

; 318  : 	
; 319  : 	if( !szMetaText) return szDefaultReturn;

  00057	85 c0		 test	 eax, eax
  00059	75 02		 jne	 SHORT $LN1@GetMetaTex
$LN10@GetMetaTex:
  0005b	8b c3		 mov	 eax, ebx
$LN1@GetMetaTex:
  0005d	5f		 pop	 edi

; 320  : 	return szMetaText;
; 321  : }

  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
_GetMetaTextForScript_ ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\MetaTable.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT _GetMetaTextFromOther_
_TEXT	SEGMENT
_p_hOcxWnd$ = 8						; size = 4
_p_eCodePage$ = 12					; size = 4
_szMetaText$ = 16					; size = 4
_p_szOtherMetaText$ = 16				; size = 4
_pChartCtrl$ = 20					; size = 4
_p_bReturnNULL$ = 20					; size = 4
_GetMetaTextFromOther_ PROC				; COMDAT

; 282  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	8b 75 0c	 mov	 esi, DWORD PTR _p_eCodePage$[ebp]

; 283  : 	const char *szDefaultReturn = ( p_bReturnNULL ? NULL : p_szOtherMetaText);

  00008	33 c0		 xor	 eax, eax
  0000a	39 45 14	 cmp	 DWORD PTR _p_bReturnNULL$[ebp], eax
  0000d	57		 push	 edi
  0000e	8b 7d 10	 mov	 edi, DWORD PTR _p_szOtherMetaText$[ebp]
  00011	8b df		 mov	 ebx, edi
  00013	0f 45 d8	 cmovne	 ebx, eax

; 284  : 	if( !p_szOtherMetaText) return szDefaultReturn;

  00016	85 ff		 test	 edi, edi
  00018	74 60		 je	 SHORT $LN18@GetMetaTex

; 285  : 	if( !*p_szOtherMetaText) return szDefaultReturn;

  0001a	38 07		 cmp	 BYTE PTR [edi], al
  0001c	74 5c		 je	 SHORT $LN18@GetMetaTex
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\MetaTable.h

; 36   : 					{	return ( IMetaTable::PACKET_NAME <= p_eCodePage && p_eCodePage < IMetaTable::CODE_PAGE_END) ? m_pCodePage[ p_eCodePage] : NULL;	}

  0001e	83 fe 08	 cmp	 esi, 8
  00021	77 57		 ja	 SHORT $LN18@GetMetaTex
  00023	8b 0c b5 08 00
	00 00		 mov	 ecx, DWORD PTR ?g_metaTable@@3VCMetaTable@@A[esi*4+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 288  : 	if( !pCodePage) return szDefaultReturn;

  0002a	85 c9		 test	 ecx, ecx
  0002c	74 4c		 je	 SHORT $LN18@GetMetaTex

; 289  : 	const char *szMetaText = NULL;

  0002e	89 45 10	 mov	 DWORD PTR _szMetaText$[ebp], eax

; 290  : 	if( pCodePage->GetMetaTextFromOther( p_szOtherMetaText, szMetaText)) return szMetaText;

  00031	8d 45 10	 lea	 eax, DWORD PTR _szMetaText$[ebp]
  00034	50		 push	 eax
  00035	57		 push	 edi
  00036	e8 00 00 00 00	 call	 ?GetMetaTextFromOther@CCodePage@@QAEHPBDAAPBD@Z ; CCodePage::GetMetaTextFromOther
  0003b	85 c0		 test	 eax, eax
  0003d	75 42		 jne	 SHORT $LN20@GetMetaTex

; 291  : 
; 292  : 	if( IMetaTable::PACKET_NAME != p_eCodePage && IMetaTable::GRAPH_TITLE != p_eCodePage)

  0003f	85 f6		 test	 esi, esi
  00041	74 05		 je	 SHORT $LN6@GetMetaTex
  00043	83 fe 01	 cmp	 esi, 1
  00046	75 32		 jne	 SHORT $LN18@GetMetaTex
$LN6@GetMetaTex:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  00048	8d 45 14	 lea	 eax, DWORD PTR _pChartCtrl$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 294  : 	CChartCtrl *pChartCtrl = NULL;

  0004b	c7 45 14 00 00
	00 00		 mov	 DWORD PTR _pChartCtrl$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  00052	50		 push	 eax
  00053	ff 75 08	 push	 DWORD PTR _p_hOcxWnd$[ebp]
  00056	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_chartCtrlMap@@3VCChartCtrlMap@@A ; g_chartCtrlMap
  0005b	e8 00 00 00 00	 call	 ?Lookup@CMapPtrToPtr@@QBEHPAXAAPAX@Z ; CMapPtrToPtr::Lookup
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 295  : 	if( g_chartCtrlMap.Lookup( p_hOcxWnd, pChartCtrl)) if( pChartCtrl)

  00060	85 c0		 test	 eax, eax
  00062	74 0f		 je	 SHORT $LN19@GetMetaTex
  00064	8b 4d 14	 mov	 ecx, DWORD PTR _pChartCtrl$[ebp]
  00067	85 c9		 test	 ecx, ecx
  00069	74 08		 je	 SHORT $LN19@GetMetaTex

; 296  : 		szMetaText = pChartCtrl->CreateLocalMetaText( p_szOtherMetaText);

  0006b	57		 push	 edi
  0006c	e8 00 00 00 00	 call	 ?CreateLocalMetaText@CChartCtrl@@QAEPBDPBD@Z ; CChartCtrl::CreateLocalMetaText
  00071	eb 03		 jmp	 SHORT $LN8@GetMetaTex
$LN19@GetMetaTex:

; 295  : 	if( g_chartCtrlMap.Lookup( p_hOcxWnd, pChartCtrl)) if( pChartCtrl)

  00073	8b 45 10	 mov	 eax, DWORD PTR _szMetaText$[ebp]
$LN8@GetMetaTex:

; 297  : 	
; 298  : 	if( !szMetaText) return szDefaultReturn;

  00076	85 c0		 test	 eax, eax
  00078	75 02		 jne	 SHORT $LN1@GetMetaTex
$LN18@GetMetaTex:
  0007a	8b c3		 mov	 eax, ebx
$LN1@GetMetaTex:
  0007c	5f		 pop	 edi

; 299  : 	return szMetaText;
; 300  : }

  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
$LN20@GetMetaTex:

; 290  : 	if( pCodePage->GetMetaTextFromOther( p_szOtherMetaText, szMetaText)) return szMetaText;

  00081	8b 45 10	 mov	 eax, DWORD PTR _szMetaText$[ebp]
  00084	5f		 pop	 edi

; 299  : 	return szMetaText;
; 300  : }

  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	5d		 pop	 ebp
  00088	c3		 ret	 0
_GetMetaTextFromOther_ ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT _SetLocalMetaText
_TEXT	SEGMENT
_pChartCtrl$ = 8					; size = 4
_p_hOcxWnd$ = 8						; size = 4
_p_szMetaText$ = 12					; size = 4
_p_szLanguageText$ = 16					; size = 4
_SetLocalMetaText PROC					; COMDAT

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 253  : 	if( !p_hOcxWnd) return FALSE;

  00003	8b 45 08	 mov	 eax, DWORD PTR _p_hOcxWnd$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 2e		 je	 SHORT $LN8@SetLocalMe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  0000a	8d 4d 08	 lea	 ecx, DWORD PTR _pChartCtrl$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 254  : 	CChartCtrl *pChartCtrl = NULL;

  0000d	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _pChartCtrl$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  00014	51		 push	 ecx
  00015	50		 push	 eax
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_chartCtrlMap@@3VCChartCtrlMap@@A ; g_chartCtrlMap
  0001b	e8 00 00 00 00	 call	 ?Lookup@CMapPtrToPtr@@QBEHPAXAAPAX@Z ; CMapPtrToPtr::Lookup
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 255  : 	if( !g_chartCtrlMap.Lookup( p_hOcxWnd, pChartCtrl)) return FALSE;

  00020	85 c0		 test	 eax, eax
  00022	74 14		 je	 SHORT $LN8@SetLocalMe

; 256  : 	if( !pChartCtrl) return FALSE;

  00024	8b 4d 08	 mov	 ecx, DWORD PTR _pChartCtrl$[ebp]
  00027	85 c9		 test	 ecx, ecx
  00029	74 0d		 je	 SHORT $LN8@SetLocalMe

; 257  : 
; 258  : 	return pChartCtrl->SetLocalMetaText( p_szMetaText, p_szLanguageText);

  0002b	ff 75 10	 push	 DWORD PTR _p_szLanguageText$[ebp]
  0002e	ff 75 0c	 push	 DWORD PTR _p_szMetaText$[ebp]
  00031	e8 00 00 00 00	 call	 ?SetLocalMetaText@CChartCtrl@@QAEHPBD0@Z ; CChartCtrl::SetLocalMetaText

; 259  : }

  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
$LN8@SetLocalMe:

; 256  : 	if( !pChartCtrl) return FALSE;

  00038	33 c0		 xor	 eax, eax

; 259  : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
_SetLocalMetaText ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT _CreateLocalMetaText
_TEXT	SEGMENT
_p_hOcxWnd$ = 8						; size = 4
_p_eCodePage$ = 12					; size = 4
_pChartCtrl$ = 16					; size = 4
_p_szLanguageText$ = 16					; size = 4
_CreateLocalMetaText PROC				; COMDAT

; 234  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 267  : 	if( !p_szLanguageText) return szDefaultReturn;

  00004	8b 75 10	 mov	 esi, DWORD PTR _p_szLanguageText$[ebp]

; 234  : {

  00007	57		 push	 edi

; 267  : 	if( !p_szLanguageText) return szDefaultReturn;

  00008	8b 7d 08	 mov	 edi, DWORD PTR _p_hOcxWnd$[ebp]
  0000b	85 f6		 test	 esi, esi
  0000d	74 21		 je	 SHORT $LN2@CreateLoca

; 268  : 	if( !*p_szLanguageText) return szDefaultReturn;

  0000f	80 3e 00	 cmp	 BYTE PTR [esi], 0
  00012	74 1c		 je	 SHORT $LN2@CreateLoca

; 269  : 
; 270  : 	CChartCtrl *pChartCtrl = GetChartCtrlOrFirst( p_hOcxWnd);

  00014	57		 push	 edi
  00015	e8 00 00 00 00	 call	 ?GetChartCtrlOrFirst@@YAPAVCChartCtrl@@PAUHWND__@@@Z ; GetChartCtrlOrFirst
  0001a	83 c4 04	 add	 esp, 4

; 271  : 	if( !pChartCtrl) return szDefaultReturn;

  0001d	85 c0		 test	 eax, eax
  0001f	74 0f		 je	 SHORT $LN2@CreateLoca

; 272  : 
; 273  : 	const char *szMetaText = pChartCtrl->GetMetaText( p_eCodePage, p_szLanguageText);

  00021	56		 push	 esi
  00022	ff 75 0c	 push	 DWORD PTR _p_eCodePage$[ebp]
  00025	8b c8		 mov	 ecx, eax
  00027	e8 00 00 00 00	 call	 ?GetMetaText@CChartCtrl@@QAEPBDW4E_CODEPAGE@IMetaTable@@PBD@Z ; CChartCtrl::GetMetaText

; 274  : 	if( !szMetaText) return szDefaultReturn;

  0002c	85 c0		 test	 eax, eax
  0002e	75 31		 jne	 SHORT $LN1@CreateLoca
$LN2@CreateLoca:

; 235  : 	const char *szMetaText = GetMetaText_( p_hOcxWnd, p_eCodePage, p_szLanguageText, TRUE);
; 236  : 	if( szMetaText) return szMetaText;
; 237  : 
; 238  : 	if( !p_hOcxWnd) return p_szLanguageText;

  00030	85 ff		 test	 edi, edi
  00032	74 2b		 je	 SHORT $LN6@CreateLoca
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  00034	8d 45 10	 lea	 eax, DWORD PTR _pChartCtrl$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 239  : 	CChartCtrl *pChartCtrl = NULL;

  00037	c7 45 10 00 00
	00 00		 mov	 DWORD PTR _pChartCtrl$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  0003e	50		 push	 eax
  0003f	57		 push	 edi
  00040	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_chartCtrlMap@@3VCChartCtrlMap@@A ; g_chartCtrlMap
  00045	e8 00 00 00 00	 call	 ?Lookup@CMapPtrToPtr@@QBEHPAXAAPAX@Z ; CMapPtrToPtr::Lookup
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 240  : 	if( !g_chartCtrlMap.Lookup( p_hOcxWnd, pChartCtrl)) return p_szLanguageText;

  0004a	85 c0		 test	 eax, eax
  0004c	74 11		 je	 SHORT $LN6@CreateLoca

; 241  : 	if( !pChartCtrl) return p_szLanguageText;

  0004e	8b 4d 10	 mov	 ecx, DWORD PTR _pChartCtrl$[ebp]
  00051	85 c9		 test	 ecx, ecx
  00053	74 0a		 je	 SHORT $LN6@CreateLoca

; 242  : 
; 243  : 	szMetaText = pChartCtrl->CreateLocalMetaText( p_szLanguageText);

  00055	56		 push	 esi
  00056	e8 00 00 00 00	 call	 ?CreateLocalMetaText@CChartCtrl@@QAEPBDPBD@Z ; CChartCtrl::CreateLocalMetaText

; 244  : 	if( szMetaText) return szMetaText;

  0005b	85 c0		 test	 eax, eax
  0005d	75 02		 jne	 SHORT $LN1@CreateLoca
$LN6@CreateLoca:

; 245  : 	return p_szLanguageText;

  0005f	8b c6		 mov	 eax, esi
$LN1@CreateLoca:
  00061	5f		 pop	 edi

; 246  : }

  00062	5e		 pop	 esi
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
_CreateLocalMetaText ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT _UnloadAllResourceDLL
_TEXT	SEGMENT
_UnloadAllResourceDLL PROC				; COMDAT

; 226  : 	g_resDllManager.UnloadResourceDLL();

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_resDllManager@@3VCResourceDllManager@@A ; g_resDllManager
  00005	e8 00 00 00 00	 call	 ?UnloadResourceDLL@CResourceDllManager@@QAEXXZ ; CResourceDllManager::UnloadResourceDLL

; 227  : 	return TRUE;

  0000a	b8 01 00 00 00	 mov	 eax, 1

; 228  : }

  0000f	c3		 ret	 0
_UnloadAllResourceDLL ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\MetaTable.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT _GetAllMetaTexts
_TEXT	SEGMENT
_p_eCodePage$ = 8					; size = 4
_p_szMetaTexts$ = 12					; size = 4
_GetAllMetaTexts PROC					; COMDAT

; 218  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\MetaTable.h

; 36   : 					{	return ( IMetaTable::PACKET_NAME <= p_eCodePage && p_eCodePage < IMetaTable::CODE_PAGE_END) ? m_pCodePage[ p_eCodePage] : NULL;	}

  00003	8b 45 08	 mov	 eax, DWORD PTR _p_eCodePage$[ebp]
  00006	83 f8 08	 cmp	 eax, 8
  00009	77 15		 ja	 SHORT $LN8@GetAllMeta
  0000b	8b 0c 85 08 00
	00 00		 mov	 ecx, DWORD PTR ?g_metaTable@@3VCMetaTable@@A[eax*4+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 220  : 	if( !pCodePage) return FALSE;

  00012	85 c9		 test	 ecx, ecx
  00014	74 0a		 je	 SHORT $LN8@GetAllMeta

; 221  : 	return pCodePage->GetAllMetaTexts( p_szMetaTexts);

  00016	ff 75 0c	 push	 DWORD PTR _p_szMetaTexts$[ebp]
  00019	e8 00 00 00 00	 call	 ?GetAllMetaTexts@CCodePage@@QAEHPAPBD@Z ; CCodePage::GetAllMetaTexts

; 222  : }

  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
$LN8@GetAllMeta:

; 220  : 	if( !pCodePage) return FALSE;

  00020	33 c0		 xor	 eax, eax

; 222  : }

  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
_GetAllMetaTexts ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\MetaTable.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT _GetMetaTextCount
_TEXT	SEGMENT
_p_eCodePage$ = 8					; size = 4
_GetMetaTextCount PROC					; COMDAT

; 211  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\MetaTable.h

; 36   : 					{	return ( IMetaTable::PACKET_NAME <= p_eCodePage && p_eCodePage < IMetaTable::CODE_PAGE_END) ? m_pCodePage[ p_eCodePage] : NULL;	}

  00003	8b 45 08	 mov	 eax, DWORD PTR _p_eCodePage$[ebp]
  00006	83 f8 08	 cmp	 eax, 8
  00009	77 11		 ja	 SHORT $LN8@GetMetaTex
  0000b	8b 0c 85 08 00
	00 00		 mov	 ecx, DWORD PTR ?g_metaTable@@3VCMetaTable@@A[eax*4+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 213  : 	if( !pCodePage) return 0;

  00012	85 c9		 test	 ecx, ecx
  00014	74 06		 je	 SHORT $LN8@GetMetaTex

; 215  : }

  00016	5d		 pop	 ebp

; 214  : 	return pCodePage->GetMetaTextCount();

  00017	e9 00 00 00 00	 jmp	 ?GetMetaTextCount@CCodePage@@QAEHXZ ; CCodePage::GetMetaTextCount
$LN8@GetMetaTex:

; 213  : 	if( !pCodePage) return 0;

  0001c	33 c0		 xor	 eax, eax

; 215  : }

  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
_GetMetaTextCount ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT _LoadResourceDLL
_TEXT	SEGMENT
_psnChart$1 = -8					; size = 4
_hOcxWnd$2 = -4						; size = 4
_p_hOcxWnd$ = 8						; size = 4
_pChartCtrl$3 = 12					; size = 4
_p_hMainModule$ = 12					; size = 4
_LoadResourceDLL PROC					; COMDAT

; 198  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 199  : 	if( !p_hMainModule) return p_hMainModule;

  00007	8b 75 0c	 mov	 esi, DWORD PTR _p_hMainModule$[ebp]
  0000a	85 f6		 test	 esi, esi
  0000c	75 07		 jne	 SHORT $LN2@LoadResour
  0000e	33 c0		 xor	 eax, eax
  00010	5e		 pop	 esi

; 208  : }

  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
$LN2@LoadResour:

; 86   : 	if( p_hOcxWnd)

  00015	8b 45 08	 mov	 eax, DWORD PTR _p_hOcxWnd$[ebp]
  00018	c7 45 0c 00 00
	00 00		 mov	 DWORD PTR _pChartCtrl$3[ebp], 0
  0001f	85 c0		 test	 eax, eax
  00021	74 16		 je	 SHORT $LN8@LoadResour
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  00023	8d 4d 0c	 lea	 ecx, DWORD PTR _pChartCtrl$3[ebp]
  00026	51		 push	 ecx
  00027	50		 push	 eax
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_chartCtrlMap@@3VCChartCtrlMap@@A ; g_chartCtrlMap
  0002d	e8 00 00 00 00	 call	 ?Lookup@CMapPtrToPtr@@QBEHPAXAAPAX@Z ; CMapPtrToPtr::Lookup
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 89   : 		if( pChartCtrl) return pChartCtrl;

  00032	8b 45 0c	 mov	 eax, DWORD PTR _pChartCtrl$3[ebp]
  00035	85 c0		 test	 eax, eax
  00037	75 3e		 jne	 SHORT $LN3@LoadResour
$LN8@LoadResour:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 599  : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00039	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ?g_chartCtrlMap@@3VCChartCtrlMap@@A+12
  0003f	8b c2		 mov	 eax, edx
  00041	f7 d8		 neg	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 92   : 	HWND hOcxWnd = NULL;

  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _hOcxWnd$2[ebp], 0

; 93   : 	pChartCtrl = NULL;

  0004a	c7 45 0c 00 00
	00 00		 mov	 DWORD PTR _pChartCtrl$3[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 599  : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00051	1b c0		 sbb	 eax, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 94   : 	POSITION psnChart = g_chartCtrlMap.GetStartPosition();

  00053	89 45 f8	 mov	 DWORD PTR _psnChart$1[ebp], eax
  00056	85 d2		 test	 edx, edx

; 95   : 	if( psnChart) g_chartCtrlMap.GetNextAssoc( psnChart, hOcxWnd, pChartCtrl);

  00058	74 36		 je	 SHORT $LN18@LoadResour
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2068 : 		{ BASE_CLASS::GetNextAssoc(rPosition, (typename BASE_CLASS::BASE_KEY&)rKey,

  0005a	8d 45 0c	 lea	 eax, DWORD PTR _pChartCtrl$3[ebp]
  0005d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_chartCtrlMap@@3VCChartCtrlMap@@A ; g_chartCtrlMap
  00062	50		 push	 eax
  00063	8d 45 fc	 lea	 eax, DWORD PTR _hOcxWnd$2[ebp]
  00066	50		 push	 eax
  00067	8d 45 f8	 lea	 eax, DWORD PTR _psnChart$1[ebp]
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ?GetNextAssoc@CMapPtrToPtr@@QBEXAAPAU__POSITION@@AAPAX1@Z ; CMapPtrToPtr::GetNextAssoc
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 202  : 	if( !pChartCtrl) return p_hMainModule;

  00070	8b 45 0c	 mov	 eax, DWORD PTR _pChartCtrl$3[ebp]
  00073	85 c0		 test	 eax, eax
  00075	74 19		 je	 SHORT $LN18@LoadResour
$LN3@LoadResour:

; 203  : 
; 204  : 	IMetaTable::E_LANGUAGEID eLanguageID = pChartCtrl->GetLanguageID();

  00077	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 205  : 	if( _DEFAULT_RESOURCE_ID == eLanguageID) return p_hMainModule;

  0007a	83 f8 01	 cmp	 eax, 1
  0007d	74 11		 je	 SHORT $LN18@LoadResour

; 206  : 
; 207  : 	return g_resDllManager.LoadResourceDLL( p_hMainModule, eLanguageID);

  0007f	50		 push	 eax
  00080	56		 push	 esi
  00081	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_resDllManager@@3VCResourceDllManager@@A ; g_resDllManager
  00086	e8 00 00 00 00	 call	 ?LoadResourceDLL@CResourceDllManager@@QAEPAUHINSTANCE__@@PAU2@W4E_LANGUAGEID@IMetaTable@@@Z ; CResourceDllManager::LoadResourceDLL
  0008b	5e		 pop	 esi

; 208  : }

  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c3		 ret	 0
$LN18@LoadResour:

; 205  : 	if( _DEFAULT_RESOURCE_ID == eLanguageID) return p_hMainModule;

  00090	8b c6		 mov	 eax, esi
  00092	5e		 pop	 esi

; 208  : }

  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
_LoadResourceDLL ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\MapStringToWord.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT _GetIndicatorID
_TEXT	SEGMENT
_pValue$1 = 8						; size = 4
_p_szIndicatorName$ = 8					; size = 4
_GetIndicatorID PROC					; COMDAT

; 189  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 190  : 	if( !p_szIndicatorName) return -1;

  00003	8b 45 08	 mov	 eax, DWORD PTR _p_szIndicatorName$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 1e		 je	 SHORT $LN8@GetIndicat

; 191  : 	if( !*p_szIndicatorName) return -1;

  0000a	80 38 00	 cmp	 BYTE PTR [eax], 0
  0000d	74 19		 je	 SHORT $LN8@GetIndicat
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\MapStringToWord.h

; 22   : 				BOOL bResult = CMapStringToPtr::Lookup( key, pValue);

  0000f	8d 4d 08	 lea	 ecx, DWORD PTR _pValue$1[ebp]
  00012	51		 push	 ecx
  00013	50		 push	 eax
  00014	b9 2c 00 00 00	 mov	 ecx, OFFSET ?g_metaTable@@3VCMetaTable@@A+44
  00019	e8 00 00 00 00	 call	 ?Lookup@CMapStringToPtr@@QBEHPBDAAPAX@Z ; CMapStringToPtr::Lookup
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 193  : 	if( !g_metaTable.m_mapIndicatorID.Lookup( p_szIndicatorName, wID)) return -1;

  0001e	85 c0		 test	 eax, eax
  00020	74 06		 je	 SHORT $LN8@GetIndicat

; 194  : 	return wID;

  00022	0f b7 45 08	 movzx	 eax, WORD PTR _pValue$1[ebp]

; 195  : }

  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
$LN8@GetIndicat:

; 193  : 	if( !g_metaTable.m_mapIndicatorID.Lookup( p_szIndicatorName, wID)) return -1;

  00028	83 c8 ff	 or	 eax, -1

; 195  : }

  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
_GetIndicatorID ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\MetaTable.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT _GetLanguageTextDirectly_
_TEXT	SEGMENT
_p_eCodePage$ = 8					; size = 4
_p_eLanguageID$ = 12					; size = 4
_p_szMetaText$ = 16					; size = 4
_GetLanguageTextDirectly_ PROC				; COMDAT

; 179  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 180  : 	if( !p_szMetaText) return p_szMetaText;

  00003	8b 45 10	 mov	 eax, DWORD PTR _p_szMetaText$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR _p_eCodePage$[ebp]
  00009	85 c0		 test	 eax, eax
  0000b	74 20		 je	 SHORT $LN10@GetLanguag

; 181  : 	if( !*p_szMetaText) return p_szMetaText;

  0000d	80 38 00	 cmp	 BYTE PTR [eax], 0
  00010	74 1d		 je	 SHORT $LN1@GetLanguag
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\MetaTable.h

; 36   : 					{	return ( IMetaTable::PACKET_NAME <= p_eCodePage && p_eCodePage < IMetaTable::CODE_PAGE_END) ? m_pCodePage[ p_eCodePage] : NULL;	}

  00012	83 f9 08	 cmp	 ecx, 8
  00015	77 16		 ja	 SHORT $LN10@GetLanguag
  00017	8b 0c 8d 08 00
	00 00		 mov	 ecx, DWORD PTR ?g_metaTable@@3VCMetaTable@@A[ecx*4+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 184  : 	if( !pCodePage) return NULL;

  0001e	85 c9		 test	 ecx, ecx
  00020	74 0b		 je	 SHORT $LN10@GetLanguag

; 185  : 	return pCodePage->GetLanguageText( p_eLanguageID, p_szMetaText);

  00022	50		 push	 eax
  00023	ff 75 0c	 push	 DWORD PTR _p_eLanguageID$[ebp]
  00026	e8 00 00 00 00	 call	 ?GetLanguageText@CCodePage@@QAEPBDW4E_LANGUAGEID@IMetaTable@@PBD@Z ; CCodePage::GetLanguageText

; 186  : }

  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
$LN10@GetLanguag:

; 184  : 	if( !pCodePage) return NULL;

  0002d	33 c0		 xor	 eax, eax
$LN1@GetLanguag:

; 186  : }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_GetLanguageTextDirectly_ ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT _GetLanguageText_
_TEXT	SEGMENT
_p_hOcxWnd$ = 8						; size = 4
_p_eCodePage$ = 12					; size = 4
_p_szMetaText$ = 16					; size = 4
_p_bReturnNULL$ = 20					; size = 4
_GetLanguageText_ PROC					; COMDAT

; 164  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 165  : 	const char *szDefaultReturn = ( p_bReturnNULL ? NULL : p_szMetaText);

  00003	33 c0		 xor	 eax, eax
  00005	39 45 14	 cmp	 DWORD PTR _p_bReturnNULL$[ebp], eax
  00008	56		 push	 esi
  00009	8b 75 10	 mov	 esi, DWORD PTR _p_szMetaText$[ebp]
  0000c	57		 push	 edi
  0000d	8b fe		 mov	 edi, esi
  0000f	0f 45 f8	 cmovne	 edi, eax

; 166  : 	if( !p_szMetaText) return szDefaultReturn;

  00012	85 f6		 test	 esi, esi
  00014	74 22		 je	 SHORT $LN7@GetLanguag

; 167  : 	if( !*p_szMetaText) return szDefaultReturn;

  00016	38 06		 cmp	 BYTE PTR [esi], al
  00018	74 1e		 je	 SHORT $LN7@GetLanguag

; 168  : 
; 169  : 	CChartCtrl *pChartCtrl = GetChartCtrlOrFirst( p_hOcxWnd);

  0001a	ff 75 08	 push	 DWORD PTR _p_hOcxWnd$[ebp]
  0001d	e8 00 00 00 00	 call	 ?GetChartCtrlOrFirst@@YAPAVCChartCtrl@@PAUHWND__@@@Z ; GetChartCtrlOrFirst
  00022	83 c4 04	 add	 esp, 4

; 170  : 	if( !pChartCtrl) return szDefaultReturn;

  00025	85 c0		 test	 eax, eax
  00027	74 0f		 je	 SHORT $LN7@GetLanguag

; 171  : 
; 172  : 	const char *szLanguageText = pChartCtrl->GetLanguageText( p_eCodePage, p_szMetaText);

  00029	56		 push	 esi
  0002a	ff 75 0c	 push	 DWORD PTR _p_eCodePage$[ebp]
  0002d	8b c8		 mov	 ecx, eax
  0002f	e8 00 00 00 00	 call	 ?GetLanguageText@CChartCtrl@@QAEPBDW4E_CODEPAGE@IMetaTable@@PBD@Z ; CChartCtrl::GetLanguageText

; 173  : 	if( !szLanguageText) return szDefaultReturn;

  00034	85 c0		 test	 eax, eax
  00036	75 02		 jne	 SHORT $LN1@GetLanguag
$LN7@GetLanguag:
  00038	8b c7		 mov	 eax, edi
$LN1@GetLanguag:
  0003a	5f		 pop	 edi

; 174  : 	return szLanguageText;
; 175  : }

  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
_GetLanguageText_ ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT _GetCurrentLanguageID
_TEXT	SEGMENT
_psnChart$1 = -8					; size = 4
_pChartCtrl$2 = -4					; size = 4
_hOcxWnd$3 = 8						; size = 4
_p_hOcxWnd$ = 8						; size = 4
_GetCurrentLanguageID PROC				; COMDAT

; 155  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 86   : 	if( p_hOcxWnd)

  00006	8b 45 08	 mov	 eax, DWORD PTR _p_hOcxWnd$[ebp]
  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pChartCtrl$2[ebp], 0
  00010	85 c0		 test	 eax, eax
  00012	74 16		 je	 SHORT $LN6@GetCurrent
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  00014	8d 4d fc	 lea	 ecx, DWORD PTR _pChartCtrl$2[ebp]
  00017	51		 push	 ecx
  00018	50		 push	 eax
  00019	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_chartCtrlMap@@3VCChartCtrlMap@@A ; g_chartCtrlMap
  0001e	e8 00 00 00 00	 call	 ?Lookup@CMapPtrToPtr@@QBEHPAXAAPAX@Z ; CMapPtrToPtr::Lookup
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 89   : 		if( pChartCtrl) return pChartCtrl;

  00023	8b 45 fc	 mov	 eax, DWORD PTR _pChartCtrl$2[ebp]
  00026	85 c0		 test	 eax, eax
  00028	75 3e		 jne	 SHORT $LN2@GetCurrent
$LN6@GetCurrent:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 599  : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  0002a	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ?g_chartCtrlMap@@3VCChartCtrlMap@@A+12
  00030	8b c2		 mov	 eax, edx
  00032	f7 d8		 neg	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 92   : 	HWND hOcxWnd = NULL;

  00034	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _hOcxWnd$3[ebp], 0

; 93   : 	pChartCtrl = NULL;

  0003b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pChartCtrl$2[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 599  : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00042	1b c0		 sbb	 eax, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 94   : 	POSITION psnChart = g_chartCtrlMap.GetStartPosition();

  00044	89 45 f8	 mov	 DWORD PTR _psnChart$1[ebp], eax
  00047	85 d2		 test	 edx, edx

; 95   : 	if( psnChart) g_chartCtrlMap.GetNextAssoc( psnChart, hOcxWnd, pChartCtrl);

  00049	74 24		 je	 SHORT $LN15@GetCurrent
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2068 : 		{ BASE_CLASS::GetNextAssoc(rPosition, (typename BASE_CLASS::BASE_KEY&)rKey,

  0004b	8d 45 fc	 lea	 eax, DWORD PTR _pChartCtrl$2[ebp]
  0004e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_chartCtrlMap@@3VCChartCtrlMap@@A ; g_chartCtrlMap
  00053	50		 push	 eax
  00054	8d 45 08	 lea	 eax, DWORD PTR _hOcxWnd$3[ebp]
  00057	50		 push	 eax
  00058	8d 45 f8	 lea	 eax, DWORD PTR _psnChart$1[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?GetNextAssoc@CMapPtrToPtr@@QBEXAAPAU__POSITION@@AAPAX1@Z ; CMapPtrToPtr::GetNextAssoc
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 157  : 	if( !pChartCtrl) return IMetaTable::ENGLISH;

  00061	8b 45 fc	 mov	 eax, DWORD PTR _pChartCtrl$2[ebp]
  00064	85 c0		 test	 eax, eax
  00066	74 07		 je	 SHORT $LN15@GetCurrent
$LN2@GetCurrent:

; 158  : 
; 159  : 	return pChartCtrl->GetLanguageID();

  00068	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 160  : }

  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
$LN15@GetCurrent:

; 157  : 	if( !pChartCtrl) return IMetaTable::ENGLISH;

  0006f	33 c0		 xor	 eax, eax

; 160  : }

  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
_GetCurrentLanguageID ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT _GetLocalLanguageTable
_TEXT	SEGMENT
_pChartCtrl$ = -4					; size = 4
_p_hOcxWnd$ = 8						; size = 4
_GetLocalLanguageTable PROC				; COMDAT

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pChartCtrl$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 147  : 	CChartCtrl *pChartCtrl = NULL;

  00007	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pChartCtrl$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  0000e	50		 push	 eax
  0000f	ff 75 08	 push	 DWORD PTR _p_hOcxWnd$[ebp]
  00012	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_chartCtrlMap@@3VCChartCtrlMap@@A ; g_chartCtrlMap
  00017	e8 00 00 00 00	 call	 ?Lookup@CMapPtrToPtr@@QBEHPAXAAPAX@Z ; CMapPtrToPtr::Lookup
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 148  : 	if( !g_chartCtrlMap.Lookup( p_hOcxWnd, pChartCtrl)) return NULL;

  0001c	85 c0		 test	 eax, eax
  0001e	75 04		 jne	 SHORT $LN2@GetLocalLa

; 151  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
$LN2@GetLocalLa:

; 149  : 
; 150  : 	return pChartCtrl->GetLocalLanguageTable();

  00024	8b 4d fc	 mov	 ecx, DWORD PTR _pChartCtrl$[ebp]
  00027	e8 00 00 00 00	 call	 ?GetLocalLanguageTable@CChartCtrl@@QAEPBDXZ ; CChartCtrl::GetLocalLanguageTable

; 151  : }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
_GetLocalLanguageTable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT _RemoveLocalLanguageTable
_TEXT	SEGMENT
_pChartCtrl$ = 8					; size = 4
_p_hOcxWnd$ = 8						; size = 4
_RemoveLocalLanguageTable PROC				; COMDAT

; 133  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 134  : 	if( !p_hOcxWnd) return FALSE;

  00004	8b 75 08	 mov	 esi, DWORD PTR _p_hOcxWnd$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 3b		 je	 SHORT $LN11@RemoveLoca
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  0000b	8d 45 08	 lea	 eax, DWORD PTR _pChartCtrl$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 136  : 	CChartCtrl *pChartCtrl = NULL;

  0000e	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _pChartCtrl$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  00015	50		 push	 eax
  00016	56		 push	 esi
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_chartCtrlMap@@3VCChartCtrlMap@@A ; g_chartCtrlMap
  0001c	e8 00 00 00 00	 call	 ?Lookup@CMapPtrToPtr@@QBEHPAXAAPAX@Z ; CMapPtrToPtr::Lookup
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 137  : 	if( !g_chartCtrlMap.Lookup( p_hOcxWnd, pChartCtrl)) return FALSE;

  00021	85 c0		 test	 eax, eax
  00023	74 21		 je	 SHORT $LN11@RemoveLoca
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2064 : 		{ return BASE_CLASS::RemoveKey(key); }

  00025	56		 push	 esi
  00026	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_chartCtrlMap@@3VCChartCtrlMap@@A ; g_chartCtrlMap
  0002b	e8 00 00 00 00	 call	 ?RemoveKey@CMapPtrToPtr@@QAEHPAX@Z ; CMapPtrToPtr::RemoveKey
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 139  : 	delete pChartCtrl;

  00030	8b 4d 08	 mov	 ecx, DWORD PTR _pChartCtrl$[ebp]
  00033	85 c9		 test	 ecx, ecx
  00035	74 07		 je	 SHORT $LN5@RemoveLoca
  00037	8b 01		 mov	 eax, DWORD PTR [ecx]
  00039	6a 01		 push	 1
  0003b	ff 50 04	 call	 DWORD PTR [eax+4]
$LN5@RemoveLoca:

; 140  : 
; 141  : 	return TRUE;

  0003e	b8 01 00 00 00	 mov	 eax, 1
  00043	5e		 pop	 esi

; 142  : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
$LN11@RemoveLoca:

; 137  : 	if( !g_chartCtrlMap.Lookup( p_hOcxWnd, pChartCtrl)) return FALSE;

  00046	33 c0		 xor	 eax, eax
  00048	5e		 pop	 esi

; 142  : }

  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
_RemoveLocalLanguageTable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT _CreateLocalLanguageTable
_TEXT	SEGMENT
_pChartCtrl$ = -4					; size = 4
_p_hOcxWnd$ = 8						; size = 4
_p_eLanguageID$ = 12					; size = 4
_p_szLocalLanguageTable$ = 16				; size = 4
_p_bDesignMode$ = 20					; size = 4
_CreateLocalLanguageTable PROC				; COMDAT

; 119  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  00005	8b 7d 08	 mov	 edi, DWORD PTR _p_hOcxWnd$[ebp]
  00008	8d 45 fc	 lea	 eax, DWORD PTR _pChartCtrl$[ebp]
  0000b	50		 push	 eax
  0000c	57		 push	 edi
  0000d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_chartCtrlMap@@3VCChartCtrlMap@@A ; g_chartCtrlMap
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 120  : 	CChartCtrl *pChartCtrl = NULL;

  00012	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pChartCtrl$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  00019	e8 00 00 00 00	 call	 ?Lookup@CMapPtrToPtr@@QBEHPAXAAPAX@Z ; CMapPtrToPtr::Lookup
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 121  : 	if( !g_chartCtrlMap.Lookup( p_hOcxWnd, pChartCtrl))

  0001e	85 c0		 test	 eax, eax
  00020	75 31		 jne	 SHORT $LN2@CreateLoca
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 116  : 	{ return ::operator new(nSize); }

  00022	56		 push	 esi
  00023	6a 1c		 push	 28			; 0000001cH
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 123  : 		pChartCtrl = new CChartCtrl( p_hOcxWnd, p_eLanguageID);

  0002d	85 c0		 test	 eax, eax
  0002f	74 0f		 je	 SHORT $LN4@CreateLoca
  00031	ff 75 0c	 push	 DWORD PTR _p_eLanguageID$[ebp]
  00034	8b c8		 mov	 ecx, eax
  00036	57		 push	 edi
  00037	e8 00 00 00 00	 call	 ??0CChartCtrl@@QAE@PAUHWND__@@W4E_LANGUAGEID@IMetaTable@@@Z ; CChartCtrl::CChartCtrl
  0003c	8b f0		 mov	 esi, eax
  0003e	eb 02		 jmp	 SHORT $LN5@CreateLoca
$LN4@CreateLoca:
  00040	33 f6		 xor	 esi, esi
$LN5@CreateLoca:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 597  : 	{ (*this)[key] = newValue; }

  00042	57		 push	 edi
  00043	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_chartCtrlMap@@3VCChartCtrlMap@@A ; g_chartCtrlMap
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 123  : 		pChartCtrl = new CChartCtrl( p_hOcxWnd, p_eLanguageID);

  00048	89 75 fc	 mov	 DWORD PTR _pChartCtrl$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 597  : 	{ (*this)[key] = newValue; }

  0004b	e8 00 00 00 00	 call	 ??ACMapPtrToPtr@@QAEAAPAXPAX@Z ; CMapPtrToPtr::operator[]
  00050	89 30		 mov	 DWORD PTR [eax], esi
  00052	5e		 pop	 esi
$LN2@CreateLoca:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 126  : 	pChartCtrl->CreateLocalLanguageTable( p_szLocalLanguageTable, p_bDesignMode);

  00053	ff 75 14	 push	 DWORD PTR _p_bDesignMode$[ebp]
  00056	8b 4d fc	 mov	 ecx, DWORD PTR _pChartCtrl$[ebp]
  00059	ff 75 10	 push	 DWORD PTR _p_szLocalLanguageTable$[ebp]
  0005c	e8 00 00 00 00	 call	 ?CreateLocalLanguageTable@CChartCtrl@@QAEXPBDH@Z ; CChartCtrl::CreateLocalLanguageTable

; 127  : 
; 128  : 	return TRUE;

  00061	b8 01 00 00 00	 mov	 eax, 1
  00066	5f		 pop	 edi

; 129  : }

  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
_CreateLocalLanguageTable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT _GetIndicatorNameTable
_TEXT	SEGMENT
_GetIndicatorNameTable PROC				; COMDAT

; 114  : 	return g_metaTable.m_szIndicatorNames;

  00000	b8 48 00 00 00	 mov	 eax, OFFSET ?g_metaTable@@3VCMetaTable@@A+72

; 115  : }

  00005	c3		 ret	 0
_GetIndicatorNameTable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT _GetMetaTable
_TEXT	SEGMENT
_p_szDataFolder$ = 8					; size = 4
_p_szLanguageTableName$ = 12				; size = 4
_GetMetaTable PROC					; COMDAT

; 101  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 102  : 	if( p_szDataFolder)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _p_szDataFolder$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 20		 je	 SHORT $LN8@GetMetaTab

; 103  : 		if( *p_szDataFolder)

  0000a	80 39 00	 cmp	 BYTE PTR [ecx], 0
  0000d	74 1b		 je	 SHORT $LN8@GetMetaTab

; 104  : 			if( CMetaTable::m_szMetaTexts[ 0] == CMetaTable::m_szNullString)

  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_szMetaTexts@CMetaTable@@2PAPBDA
  00014	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?m_szNullString@CMetaTable@@2PBDB ; CMetaTable::m_szNullString
  0001a	75 0e		 jne	 SHORT $LN8@GetMetaTab

; 105  : 				g_metaTable.LoadMetaTable( p_szLanguageTableName, p_szDataFolder);

  0001c	51		 push	 ecx
  0001d	ff 75 0c	 push	 DWORD PTR _p_szLanguageTableName$[ebp]
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_metaTable@@3VCMetaTable@@A ; g_metaTable
  00025	e8 00 00 00 00	 call	 ?LoadMetaTable@CMetaTable@@QAEXPBD0@Z ; CMetaTable::LoadMetaTable
$LN8@GetMetaTab:

; 106  : 
; 107  : 	assert( *CMetaTable::m_szMetaTexts[ 0]);
; 108  : 	return CMetaTable::m_szMetaTexts;
; 109  : }

  0002a	b8 00 00 00 00	 mov	 eax, OFFSET ?m_szMetaTexts@CMetaTable@@2PAPBDA ; CMetaTable::m_szMetaTexts
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_GetMetaTable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT ?GetChartCtrlOrFirst@@YAPAVCChartCtrl@@PAUHWND__@@@Z
_TEXT	SEGMENT
_psnChart$ = -8						; size = 4
_pChartCtrl$ = -4					; size = 4
_hOcxWnd$ = 8						; size = 4
_p_hOcxWnd$ = 8						; size = 4
?GetChartCtrlOrFirst@@YAPAVCChartCtrl@@PAUHWND__@@@Z PROC ; GetChartCtrlOrFirst, COMDAT

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 85   : 	CChartCtrl *pChartCtrl = NULL;
; 86   : 	if( p_hOcxWnd)

  00006	8b 45 08	 mov	 eax, DWORD PTR _p_hOcxWnd$[ebp]
  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pChartCtrl$[ebp], 0
  00010	85 c0		 test	 eax, eax
  00012	74 16		 je	 SHORT $LN3@GetChartCt
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  00014	8d 4d fc	 lea	 ecx, DWORD PTR _pChartCtrl$[ebp]
  00017	51		 push	 ecx
  00018	50		 push	 eax
  00019	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_chartCtrlMap@@3VCChartCtrlMap@@A ; g_chartCtrlMap
  0001e	e8 00 00 00 00	 call	 ?Lookup@CMapPtrToPtr@@QBEHPAXAAPAX@Z ; CMapPtrToPtr::Lookup
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 89   : 		if( pChartCtrl) return pChartCtrl;

  00023	8b 45 fc	 mov	 eax, DWORD PTR _pChartCtrl$[ebp]
  00026	85 c0		 test	 eax, eax
  00028	75 40		 jne	 SHORT $LN4@GetChartCt
$LN3@GetChartCt:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 599  : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  0002a	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ?g_chartCtrlMap@@3VCChartCtrlMap@@A+12
  00030	8b c2		 mov	 eax, edx
  00032	f7 d8		 neg	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 92   : 	HWND hOcxWnd = NULL;

  00034	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _hOcxWnd$[ebp], 0

; 93   : 	pChartCtrl = NULL;

  0003b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pChartCtrl$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 599  : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00042	1b c0		 sbb	 eax, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 94   : 	POSITION psnChart = g_chartCtrlMap.GetStartPosition();

  00044	89 45 f8	 mov	 DWORD PTR _psnChart$[ebp], eax
  00047	85 d2		 test	 edx, edx

; 95   : 	if( psnChart) g_chartCtrlMap.GetNextAssoc( psnChart, hOcxWnd, pChartCtrl);

  00049	74 1d		 je	 SHORT $LN12@GetChartCt
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2068 : 		{ BASE_CLASS::GetNextAssoc(rPosition, (typename BASE_CLASS::BASE_KEY&)rKey,

  0004b	8d 45 fc	 lea	 eax, DWORD PTR _pChartCtrl$[ebp]
  0004e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_chartCtrlMap@@3VCChartCtrlMap@@A ; g_chartCtrlMap
  00053	50		 push	 eax
  00054	8d 45 08	 lea	 eax, DWORD PTR _hOcxWnd$[ebp]
  00057	50		 push	 eax
  00058	8d 45 f8	 lea	 eax, DWORD PTR _psnChart$[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?GetNextAssoc@CMapPtrToPtr@@QBEXAAPAU__POSITION@@AAPAX1@Z ; CMapPtrToPtr::GetNextAssoc
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp

; 96   : 	return pChartCtrl;

  00061	8b 45 fc	 mov	 eax, DWORD PTR _pChartCtrl$[ebp]

; 97   : }

  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
$LN12@GetChartCt:

; 96   : 	return pChartCtrl;

  00068	33 c0		 xor	 eax, eax
$LN4@GetChartCt:

; 97   : }

  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
?GetChartCtrlOrFirst@@YAPAVCChartCtrl@@PAUHWND__@@@Z ENDP ; GetChartCtrlOrFirst
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT _GetMetaText_
_TEXT	SEGMENT
_p_hOcxWnd$ = 8						; size = 4
_p_eCodePage$ = 12					; size = 4
_p_szLanguageText$ = 16					; size = 4
_p_bReturnNULL$ = 20					; size = 4
_GetMetaText_ PROC					; COMDAT

; 265  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 266  : 	const char *szDefaultReturn = ( p_bReturnNULL ? NULL : p_szLanguageText);

  00003	33 c0		 xor	 eax, eax
  00005	39 45 14	 cmp	 DWORD PTR _p_bReturnNULL$[ebp], eax
  00008	56		 push	 esi
  00009	8b 75 10	 mov	 esi, DWORD PTR _p_szLanguageText$[ebp]
  0000c	57		 push	 edi
  0000d	8b fe		 mov	 edi, esi
  0000f	0f 45 f8	 cmovne	 edi, eax

; 267  : 	if( !p_szLanguageText) return szDefaultReturn;

  00012	85 f6		 test	 esi, esi
  00014	74 22		 je	 SHORT $LN7@GetMetaTex

; 268  : 	if( !*p_szLanguageText) return szDefaultReturn;

  00016	38 06		 cmp	 BYTE PTR [esi], al
  00018	74 1e		 je	 SHORT $LN7@GetMetaTex

; 269  : 
; 270  : 	CChartCtrl *pChartCtrl = GetChartCtrlOrFirst( p_hOcxWnd);

  0001a	ff 75 08	 push	 DWORD PTR _p_hOcxWnd$[ebp]
  0001d	e8 00 00 00 00	 call	 ?GetChartCtrlOrFirst@@YAPAVCChartCtrl@@PAUHWND__@@@Z ; GetChartCtrlOrFirst
  00022	83 c4 04	 add	 esp, 4

; 271  : 	if( !pChartCtrl) return szDefaultReturn;

  00025	85 c0		 test	 eax, eax
  00027	74 0f		 je	 SHORT $LN7@GetMetaTex

; 272  : 
; 273  : 	const char *szMetaText = pChartCtrl->GetMetaText( p_eCodePage, p_szLanguageText);

  00029	56		 push	 esi
  0002a	ff 75 0c	 push	 DWORD PTR _p_eCodePage$[ebp]
  0002d	8b c8		 mov	 ecx, eax
  0002f	e8 00 00 00 00	 call	 ?GetMetaText@CChartCtrl@@QAEPBDW4E_CODEPAGE@IMetaTable@@PBD@Z ; CChartCtrl::GetMetaText

; 274  : 	if( !szMetaText) return szDefaultReturn;

  00034	85 c0		 test	 eax, eax
  00036	75 02		 jne	 SHORT $LN1@GetMetaTex
$LN7@GetMetaTex:
  00038	8b c7		 mov	 eax, edi
$LN1@GetMetaTex:
  0003a	5f		 pop	 edi

; 275  : 	return szMetaText;
; 276  : }

  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
_GetMetaText_ ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fg_resDllManager@@YAXXZ
text$yd	SEGMENT
??__Fg_resDllManager@@YAXXZ PROC			; `dynamic atexit destructor for 'g_resDllManager'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_resDllManager@@3VCResourceDllManager@@A ; g_resDllManager
  00005	e9 00 00 00 00	 jmp	 ??1CResourceDllManager@@UAE@XZ ; CResourceDllManager::~CResourceDllManager
??__Fg_resDllManager@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_resDllManager''
text$yd	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT ??__Eg_resDllManager@@YAXXZ
text$di	SEGMENT
??__Eg_resDllManager@@YAXXZ PROC			; `dynamic initializer for 'g_resDllManager'', COMDAT

; 73   : CResourceDllManager	g_resDllManager;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_resDllManager@@3VCResourceDllManager@@A ; g_resDllManager
  00005	e8 00 00 00 00	 call	 ??0CResourceDllManager@@QAE@XZ ; CResourceDllManager::CResourceDllManager
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_resDllManager@@YAXXZ ; `dynamic atexit destructor for 'g_resDllManager''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_resDllManager@@YAXXZ ENDP			; `dynamic initializer for 'g_resDllManager''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fg_chartCtrlMap@@YAXXZ
text$yd	SEGMENT
??__Fg_chartCtrlMap@@YAXXZ PROC				; `dynamic atexit destructor for 'g_chartCtrlMap'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_chartCtrlMap@@3VCChartCtrlMap@@A ; g_chartCtrlMap
  00005	e9 00 00 00 00	 jmp	 ??1CChartCtrlMap@@UAE@XZ ; CChartCtrlMap::~CChartCtrlMap
??__Fg_chartCtrlMap@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_chartCtrlMap''
text$yd	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT ??__Eg_chartCtrlMap@@YAXXZ
text$di	SEGMENT
??__Eg_chartCtrlMap@@YAXXZ PROC				; `dynamic initializer for 'g_chartCtrlMap'', COMDAT

; 72   : CChartCtrlMap		g_chartCtrlMap;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_chartCtrlMap@@3VCChartCtrlMap@@A ; g_chartCtrlMap
  00005	e8 00 00 00 00	 call	 ??0CChartCtrlMap@@QAE@XZ ; CChartCtrlMap::CChartCtrlMap
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_chartCtrlMap@@YAXXZ ; `dynamic atexit destructor for 'g_chartCtrlMap''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_chartCtrlMap@@YAXXZ ENDP				; `dynamic initializer for 'g_chartCtrlMap''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fg_metaTable@@YAXXZ
text$yd	SEGMENT
??__Fg_metaTable@@YAXXZ PROC				; `dynamic atexit destructor for 'g_metaTable'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_metaTable@@3VCMetaTable@@A ; g_metaTable
  00005	e9 00 00 00 00	 jmp	 ??1CMetaTable@@UAE@XZ	; CMetaTable::~CMetaTable
??__Fg_metaTable@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_metaTable''
text$yd	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT ??__Eg_metaTable@@YAXXZ
text$di	SEGMENT
??__Eg_metaTable@@YAXXZ PROC				; `dynamic initializer for 'g_metaTable'', COMDAT

; 71   : CMetaTable			g_metaTable;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_metaTable@@3VCMetaTable@@A ; g_metaTable
  00005	e8 00 00 00 00	 call	 ??0CMetaTable@@QAE@XZ	; CMetaTable::CMetaTable
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_metaTable@@YAXXZ ; `dynamic atexit destructor for 'g_metaTable''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_metaTable@@YAXXZ ENDP				; `dynamic initializer for 'g_metaTable''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__FtheApp@@YAXXZ
text$yd	SEGMENT
??__FtheApp@@YAXXZ PROC					; `dynamic atexit destructor for 'theApp'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?theApp@@3VCChartLanguageTableApp@@A ; theApp
  00005	e9 00 00 00 00	 jmp	 ??1CWinApp@@UAE@XZ	; CWinApp::~CWinApp
??__FtheApp@@YAXXZ ENDP					; `dynamic atexit destructor for 'theApp''
text$yd	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT ??__EtheApp@@YAXXZ
text$di	SEGMENT
??__EtheApp@@YAXXZ PROC					; `dynamic initializer for 'theApp'', COMDAT

; 61   : {

  00000	6a 00		 push	 0
  00002	b9 00 00 00 00	 mov	 ecx, OFFSET ?theApp@@3VCChartLanguageTableApp@@A ; theApp
  00007	e8 00 00 00 00	 call	 ??0CWinApp@@QAE@PBD@Z	; CWinApp::CWinApp

; 69   : CChartLanguageTableApp theApp;

  0000c	68 00 00 00 00	 push	 OFFSET ??__FtheApp@@YAXXZ ; `dynamic atexit destructor for 'theApp''

; 61   : {

  00011	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?theApp@@3VCChartLanguageTableApp@@A, OFFSET ??_7CChartLanguageTableApp@@6B@

; 69   : CChartLanguageTableApp theApp;

  0001b	e8 00 00 00 00	 call	 _atexit
  00020	59		 pop	 ecx
  00021	c3		 ret	 0
??__EtheApp@@YAXXZ ENDP					; `dynamic initializer for 'theApp''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCChartLanguageTableApp@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCChartLanguageTableApp@@UAEPAXI@Z PROC		; CChartLanguageTableApp::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CWinApp@@UAE@XZ	; CWinApp::~CWinApp
  0000b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0000e	a8 01		 test	 al, 1
  00010	74 22		 je	 SHORT $LN12@scalar
  00012	a8 04		 test	 al, 4
  00014	75 10		 jne	 SHORT $LN3@scalar

; 112  : 	{ ::operator delete(p); }

  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001c	83 c4 04	 add	 esp, 4
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
$LN3@scalar:
  00026	68 cc 00 00 00	 push	 204			; 000000ccH
  0002b	56		 push	 esi
  0002c	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00031	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00034	8b c6		 mov	 eax, esi
  00036	5e		 pop	 esi
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
??_GCChartLanguageTableApp@@UAEPAXI@Z ENDP		; CChartLanguageTableApp::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT ?GetMessageMap@CChartLanguageTableApp@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetMessageMap@CChartLanguageTableApp@@MBEPBUAFX_MSGMAP@@XZ PROC ; CChartLanguageTableApp::GetMessageMap, COMDAT
; _this$ = ecx

; 50   : BEGIN_MESSAGE_MAP(CChartLanguageTableApp, CWinApp)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CChartLanguageTableApp@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  00005	c3		 ret	 0
?GetMessageMap@CChartLanguageTableApp@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CChartLanguageTableApp::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT ?GetThisMessageMap@CChartLanguageTableApp@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CChartLanguageTableApp@@KGPBUAFX_MSGMAP@@XZ PROC ; CChartLanguageTableApp::GetThisMessageMap, COMDAT

; 51   : 	//{{AFX_MSG_MAP(CChartLanguageTableApp)
; 52   : 		// NOTE - the ClassWizard will add and remove mapping macros here.
; 53   : 		//    DO NOT EDIT what you see in these blocks of generated code!
; 54   : 	//}}AFX_MSG_MAP
; 55   : END_MESSAGE_MAP()

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CChartLanguageTableApp@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  00005	c3		 ret	 0
?GetThisMessageMap@CChartLanguageTableApp@@KGPBUAFX_MSGMAP@@XZ ENDP ; CChartLanguageTableApp::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT ??0CChartLanguageTableApp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CChartLanguageTableApp@@QAE@XZ PROC			; CChartLanguageTableApp::CChartLanguageTableApp, COMDAT
; _this$ = ecx

; 61   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	6a 00		 push	 0
  00009	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000c	e8 00 00 00 00	 call	 ??0CWinApp@@QAE@PBD@Z	; CWinApp::CWinApp
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CChartLanguageTableApp@@6B@

; 62   : 	// TODO: add construction code here,
; 63   : 	// Place all significant initialization in InitInstance
; 64   : }

  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0CChartLanguageTableApp@@QAE@XZ ENDP			; CChartLanguageTableApp::CChartLanguageTableApp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin.h
;	COMDAT ?GetApplicationRecoveryPingInterval@CWinApp@@UAEKXZ
_TEXT	SEGMENT
?GetApplicationRecoveryPingInterval@CWinApp@@UAEKXZ PROC ; CWinApp::GetApplicationRecoveryPingInterval, COMDAT
; _this$ = ecx

; 5370 : 	virtual DWORD GetApplicationRecoveryPingInterval() { return RECOVERY_DEFAULT_PING_INTERVAL; }  // Ping interval for RegisterApplicationRecoveryCallback

  00000	b8 88 13 00 00	 mov	 eax, 5000		; 00001388H
  00005	c3		 ret	 0
?GetApplicationRecoveryPingInterval@CWinApp@@UAEKXZ ENDP ; CWinApp::GetApplicationRecoveryPingInterval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin.h
;	COMDAT ?GetApplicationRecoveryParameter@CWinApp@@UAEPAXXZ
_TEXT	SEGMENT
?GetApplicationRecoveryParameter@CWinApp@@UAEPAXXZ PROC	; CWinApp::GetApplicationRecoveryParameter, COMDAT
; _this$ = ecx

; 5369 : 	virtual LPVOID GetApplicationRecoveryParameter() { return NULL; }  // Parameter to be passed along to RegisterApplicationRecoveryCallback

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?GetApplicationRecoveryParameter@CWinApp@@UAEPAXXZ ENDP	; CWinApp::GetApplicationRecoveryParameter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin.h
;	COMDAT ?GetApplicationRestartFlags@CWinApp@@UAEKXZ
_TEXT	SEGMENT
?GetApplicationRestartFlags@CWinApp@@UAEKXZ PROC	; CWinApp::GetApplicationRestartFlags, COMDAT
; _this$ = ecx

; 5368 : 	virtual DWORD GetApplicationRestartFlags() { return 0; }  // Flags for RegisterApplicationRestart: default is none of RESTART_NO_CRASH/RESTART_NO_HANG/RESTART_NO_PATCH/RESTART_NO_REBOOT

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?GetApplicationRestartFlags@CWinApp@@UAEKXZ ENDP	; CWinApp::GetApplicationRestartFlags
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin.h
;	COMDAT ?RestoreAutosavedFilesAtRestart@CWinApp@@UBEHXZ
_TEXT	SEGMENT
?RestoreAutosavedFilesAtRestart@CWinApp@@UBEHXZ PROC	; CWinApp::RestoreAutosavedFilesAtRestart, COMDAT
; _this$ = ecx

; 5366 : 	virtual BOOL RestoreAutosavedFilesAtRestart() const { return m_dwRestartManagerSupportFlags & AFX_RESTART_MANAGER_RESTORE_AUTOSAVED_FILES; }

  00000	8b 81 ac 00 00
	00		 mov	 eax, DWORD PTR [ecx+172]
  00006	83 e0 20	 and	 eax, 32			; 00000020H
  00009	c3		 ret	 0
?RestoreAutosavedFilesAtRestart@CWinApp@@UBEHXZ ENDP	; CWinApp::RestoreAutosavedFilesAtRestart
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin.h
;	COMDAT ?ReopenPreviousFilesAtRestart@CWinApp@@UBEHXZ
_TEXT	SEGMENT
?ReopenPreviousFilesAtRestart@CWinApp@@UBEHXZ PROC	; CWinApp::ReopenPreviousFilesAtRestart, COMDAT
; _this$ = ecx

; 5365 : 	virtual BOOL ReopenPreviousFilesAtRestart() const { return m_dwRestartManagerSupportFlags & AFX_RESTART_MANAGER_REOPEN_PREVIOUS_FILES; }

  00000	8b 81 ac 00 00
	00		 mov	 eax, DWORD PTR [ecx+172]
  00006	83 e0 10	 and	 eax, 16			; 00000010H
  00009	c3		 ret	 0
?ReopenPreviousFilesAtRestart@CWinApp@@UBEHXZ ENDP	; CWinApp::ReopenPreviousFilesAtRestart
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin.h
;	COMDAT ?SupportsAutosaveAtInterval@CWinApp@@UBEHXZ
_TEXT	SEGMENT
?SupportsAutosaveAtInterval@CWinApp@@UBEHXZ PROC	; CWinApp::SupportsAutosaveAtInterval, COMDAT
; _this$ = ecx

; 5364 : 	virtual BOOL SupportsAutosaveAtInterval() const { return m_dwRestartManagerSupportFlags & AFX_RESTART_MANAGER_AUTOSAVE_AT_INTERVAL; }

  00000	8b 81 ac 00 00
	00		 mov	 eax, DWORD PTR [ecx+172]
  00006	83 e0 08	 and	 eax, 8
  00009	c3		 ret	 0
?SupportsAutosaveAtInterval@CWinApp@@UBEHXZ ENDP	; CWinApp::SupportsAutosaveAtInterval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin.h
;	COMDAT ?SupportsAutosaveAtRestart@CWinApp@@UBEHXZ
_TEXT	SEGMENT
?SupportsAutosaveAtRestart@CWinApp@@UBEHXZ PROC		; CWinApp::SupportsAutosaveAtRestart, COMDAT
; _this$ = ecx

; 5363 : 	virtual BOOL SupportsAutosaveAtRestart() const { return m_dwRestartManagerSupportFlags & AFX_RESTART_MANAGER_AUTOSAVE_AT_RESTART; }

  00000	8b 81 ac 00 00
	00		 mov	 eax, DWORD PTR [ecx+172]
  00006	83 e0 04	 and	 eax, 4
  00009	c3		 ret	 0
?SupportsAutosaveAtRestart@CWinApp@@UBEHXZ ENDP		; CWinApp::SupportsAutosaveAtRestart
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin.h
;	COMDAT ?SupportsApplicationRecovery@CWinApp@@UBEHXZ
_TEXT	SEGMENT
?SupportsApplicationRecovery@CWinApp@@UBEHXZ PROC	; CWinApp::SupportsApplicationRecovery, COMDAT
; _this$ = ecx

; 5362 : 	virtual BOOL SupportsApplicationRecovery() const { return m_dwRestartManagerSupportFlags & AFX_RESTART_MANAGER_SUPPORT_RECOVERY; }

  00000	8b 81 ac 00 00
	00		 mov	 eax, DWORD PTR [ecx+172]
  00006	83 e0 02	 and	 eax, 2
  00009	c3		 ret	 0
?SupportsApplicationRecovery@CWinApp@@UBEHXZ ENDP	; CWinApp::SupportsApplicationRecovery
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin.h
;	COMDAT ?SupportsRestartManager@CWinApp@@UBEHXZ
_TEXT	SEGMENT
?SupportsRestartManager@CWinApp@@UBEHXZ PROC		; CWinApp::SupportsRestartManager, COMDAT
; _this$ = ecx

; 5361 : 	virtual BOOL SupportsRestartManager() const { return m_dwRestartManagerSupportFlags & AFX_RESTART_MANAGER_SUPPORT_RESTART; }

  00000	8b 81 ac 00 00
	00		 mov	 eax, DWORD PTR [ecx+172]
  00006	83 e0 01	 and	 eax, 1
  00009	c3		 ret	 0
?SupportsRestartManager@CWinApp@@UBEHXZ ENDP		; CWinApp::SupportsRestartManager
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC		; CObject::Dump, COMDAT
; _this$ = ecx

; 122  : 	{ /* no dumping in release builds */ }

  00000	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
?AssertValid@CObject@@UBEXXZ PROC			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 120  : 	{ /* no asserts in release builds */ }

  00000	c2 00 00	 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC		; CObject::Serialize, COMDAT
; _this$ = ecx

; 106  : 	{ /* CObject does not serialize anything by default */ }

  00000	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ChartLanguageTable\ChartLanguageTable.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
