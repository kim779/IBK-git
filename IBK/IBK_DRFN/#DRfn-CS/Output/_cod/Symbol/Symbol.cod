; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\Symbol\Symbol.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	?_AfxInitManaged@@YAHXZ				; _AfxInitManaged
PUBLIC	?SupportsRestartManager@CWinApp@@UBEHXZ		; CWinApp::SupportsRestartManager
PUBLIC	?SupportsApplicationRecovery@CWinApp@@UBEHXZ	; CWinApp::SupportsApplicationRecovery
PUBLIC	?SupportsAutosaveAtRestart@CWinApp@@UBEHXZ	; CWinApp::SupportsAutosaveAtRestart
PUBLIC	?SupportsAutosaveAtInterval@CWinApp@@UBEHXZ	; CWinApp::SupportsAutosaveAtInterval
PUBLIC	?ReopenPreviousFilesAtRestart@CWinApp@@UBEHXZ	; CWinApp::ReopenPreviousFilesAtRestart
PUBLIC	?RestoreAutosavedFilesAtRestart@CWinApp@@UBEHXZ	; CWinApp::RestoreAutosavedFilesAtRestart
PUBLIC	?GetApplicationRestartFlags@CWinApp@@UAEKXZ	; CWinApp::GetApplicationRestartFlags
PUBLIC	?GetApplicationRecoveryParameter@CWinApp@@UAEPAXXZ ; CWinApp::GetApplicationRecoveryParameter
PUBLIC	?GetApplicationRecoveryPingInterval@CWinApp@@UAEKXZ ; CWinApp::GetApplicationRecoveryPingInterval
PUBLIC	??0CSymbolApp@@QAE@XZ				; CSymbolApp::CSymbolApp
PUBLIC	?GetThisMessageMap@CSymbolApp@@KGPBUAFX_MSGMAP@@XZ ; CSymbolApp::GetThisMessageMap
PUBLIC	?GetMessageMap@CSymbolApp@@MBEPBUAFX_MSGMAP@@XZ	; CSymbolApp::GetMessageMap
PUBLIC	??_GCSymbolApp@@UAEPAXI@Z			; CSymbolApp::`scalar deleting destructor'
PUBLIC	?SetMainBlock@@YGXPAUIChartManager133101@@PAVCMainSymbol@@PAUIChartOCX133101@@@Z ; SetMainBlock
PUBLIC	?Initialize_Block@@YGXPAVCDC@@PAVCWnd@@PAVCMainSymbol@@@Z ; Initialize_Block
PUBLIC	?LoadSymbolDlg@@YGXPAVCMainSymbol@@@Z		; LoadSymbolDlg
PUBLIC	?IsExistSymbolDlg@@YGHPAVCMainSymbol@@@Z	; IsExistSymbolDlg
PUBLIC	?DestroySymbolDlg@@YGXPAVCMainSymbol@@@Z	; DestroySymbolDlg
PUBLIC	?SetCurrentSymbolType@@YGXW4SYMBOLTOOL@CSymbol@@PAVCMainSymbol@@@Z ; SetCurrentSymbolType
PUBLIC	?SetSymbolCopy@@YGXPAVCMainSymbol@@@Z		; SetSymbolCopy
PUBLIC	?SetShapeDrawingToolType@@YGXABKABH1AB_NPAVCMainSymbol@@@Z ; SetShapeDrawingToolType
PUBLIC	?LButtonDown@@YG_NPAVCDC@@ABVCPoint@@PAVCMainSymbol@@@Z ; LButtonDown
PUBLIC	?LButtonDbClk@@YG_NPAVCDC@@ABVCPoint@@PAVCMainSymbol@@@Z ; LButtonDbClk
PUBLIC	?LButtonUp@@YG_NPAVCDC@@ABVCPoint@@PAVCMainSymbol@@@Z ; LButtonUp
PUBLIC	?MouseMove@@YG_NPAVCDC@@ABIABVCPoint@@PAVCMainSymbol@@@Z ; MouseMove
PUBLIC	?RButtonUp@@YG_NABVCPoint@@PAVCMainSymbol@@@Z	; RButtonUp
PUBLIC	?ReDraw@@YGXPAVCDC@@PAVCMainSymbol@@@Z		; ReDraw
PUBLIC	?InsertElementTree@@YG_NABVCBlockIndex@@PAVCMainSymbol@@@Z ; InsertElementTree
PUBLIC	?MoveElementTree@@YGXABVCBlockIndex@@0PAVCMainSymbol@@@Z ; MoveElementTree
PUBLIC	?DeleteCurrentSymbol@@YGXPAVCMainSymbol@@@Z	; DeleteCurrentSymbol
PUBLIC	?DeleteTail@@YGXPAVCMainSymbol@@@Z		; DeleteTail
PUBLIC	?DeleteElementPos@@YG_NPAVCMainSymbol@@ABJ@Z	; DeleteElementPos
PUBLIC	?DeleteAllSymbol@@YGXPAVCMainSymbol@@@Z		; DeleteAllSymbol
PUBLIC	?DeleteAllElementInBlock@@YGXABVCBlockIndex@@PAVCMainSymbol@@@Z ; DeleteAllElementInBlock
PUBLIC	?RButtonMenu@@YG_NW4ELEMENTMENU@CMenuType@@IPAVCMainSymbol@@@Z ; RButtonMenu
PUBLIC	?SetToolColor@@YGXABKPAVCMainSymbol@@@Z		; SetToolColor
PUBLIC	?GetSavedElementsData@@YG?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCMainSymbol@@@Z ; GetSavedElementsData
PUBLIC	?BuildElementsFromString@@YGXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCMainSymbol@@@Z ; BuildElementsFromString
PUBLIC	?SetDeskFilePath@@YGXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCMainSymbol@@@Z ; SetDeskFilePath
PUBLIC	?GetCurrentSymbolToolType@@YG?AW4SYMBOLTOOL@CSymbol@@PAVCMainSymbol@@@Z ; GetCurrentSymbolToolType
PUBLIC	?GetSelectToolType@@YG?AW4SYMBOLTOOL@CSymbol@@PAVCMainSymbol@@@Z ; GetSelectToolType
PUBLIC	?MakeMainSymbol@@YGPAVCMainSymbol@@XZ		; MakeMainSymbol
PUBLIC	?DeleteMainSymbol@@YGXPAVCMainSymbol@@@Z	; DeleteMainSymbol
PUBLIC	?UndoElementPos@@YG_NPAVCMainSymbol@@ABJ@Z	; UndoElementPos
PUBLIC	?RedoElementPos@@YG_NPAVCMainSymbol@@ABJ@Z	; RedoElementPos
PUBLIC	?GetGraphTotalRegion@@YG?AVCRect@@ABVCPoint@@PAVCMainSymbol@@@Z ; GetGraphTotalRegion
PUBLIC	?DrawTool@@YGXPAVCDC@@PAVCMainSymbol@@@Z	; DrawTool
PUBLIC	?ChangeAllElementsColor@@YGXABK0PAVCMainSymbol@@@Z ; ChangeAllElementsColor
PUBLIC	?RecalcElementXPoint@@YGXPBDHPAVCMainSymbol@@@Z	; RecalcElementXPoint
PUBLIC	?SetXScaleType@@YGXW4HORZSCALEDRAWERTYPE@CScaleBaseData@@PAVCMainSymbol@@@Z ; SetXScaleType
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R3CCmdTarget@@8				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCmdTarget@@8				; CCmdTarget::`RTTI Base Class Array'
PUBLIC	??_7CSymbolApp@@6B@				; CSymbolApp::`vftable'
PUBLIC	?theApp@@3VCSymbolApp@@A			; theApp
PUBLIC	??_R4CSymbolApp@@6B@				; CSymbolApp::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSymbolApp@@@8				; CSymbolApp `RTTI Type Descriptor'
PUBLIC	??_R3CSymbolApp@@8				; CSymbolApp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSymbolApp@@8				; CSymbolApp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSymbolApp@@8			; CSymbolApp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CWinApp@@8			; CWinApp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWinApp@@@8				; CWinApp `RTTI Type Descriptor'
PUBLIC	??_R3CWinApp@@8					; CWinApp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWinApp@@8					; CWinApp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWinThread@@8			; CWinThread::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWinThread@@@8				; CWinThread `RTTI Type Descriptor'
PUBLIC	??_R3CWinThread@@8				; CWinThread::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWinThread@@8				; CWinThread::`RTTI Base Class Array'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	_atexit:PROC
EXTRN	__imp__CopyRect@8:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z:PROC
EXTRN	?AfxGetStaticModuleState@@YGPAVAFX_MODULE_STATE@@XZ:PROC ; AfxGetStaticModuleState
EXTRN	??0AFX_MAINTAIN_STATE2@@QAE@PAVAFX_MODULE_STATE@@@Z:PROC ; AFX_MAINTAIN_STATE2::AFX_MAINTAIN_STATE2
EXTRN	??1AFX_MAINTAIN_STATE2@@QAE@XZ:PROC		; AFX_MAINTAIN_STATE2::~AFX_MAINTAIN_STATE2
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:PROC ; CCmdTarget::OnCmdMsg
EXTRN	?OnFinalRelease@CCmdTarget@@UAEXXZ:PROC		; CCmdTarget::OnFinalRelease
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:PROC	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:PROC ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:PROC	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:PROC ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:PROC ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:PROC ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:PROC ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:PROC ; CCmdTarget::GetConnectionMap
EXTRN	?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ:PROC ; CCmdTarget::GetInterfaceMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:PROC ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:PROC	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:PROC ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:PROC ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:PROC ; CCmdTarget::GetConnectionHook
EXTRN	?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z:PROC	; CWnd::FromHandle
EXTRN	?PreTranslateMessage@CWinThread@@UAEHPAUtagMSG@@@Z:PROC ; CWinThread::PreTranslateMessage
EXTRN	?PumpMessage@CWinThread@@UAEHXZ:PROC		; CWinThread::PumpMessage
EXTRN	?IsIdleMessage@CWinThread@@UAEHPAUtagMSG@@@Z:PROC ; CWinThread::IsIdleMessage
EXTRN	?ProcessMessageFilter@CWinThread@@UAEHHPAUtagMSG@@@Z:PROC ; CWinThread::ProcessMessageFilter
EXTRN	?GetMainWnd@CWinThread@@UAEPAVCWnd@@XZ:PROC	; CWinThread::GetMainWnd
EXTRN	?Delete@CWinThread@@UAEXXZ:PROC			; CWinThread::Delete
EXTRN	?GetRuntimeClass@CWinApp@@UBEPAUCRuntimeClass@@XZ:PROC ; CWinApp::GetRuntimeClass
EXTRN	??0CWinApp@@QAE@PBD@Z:PROC			; CWinApp::CWinApp
EXTRN	?GetProfileIntA@CWinApp@@UAEIPBD0H@Z:PROC	; CWinApp::GetProfileIntA
EXTRN	?WriteProfileInt@CWinApp@@UAEHPBD0H@Z:PROC	; CWinApp::WriteProfileInt
EXTRN	?GetProfileStringA@CWinApp@@UAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD00@Z:PROC ; CWinApp::GetProfileStringA
EXTRN	?WriteProfileStringA@CWinApp@@UAEHPBD00@Z:PROC	; CWinApp::WriteProfileStringA
EXTRN	?GetProfileBinary@CWinApp@@UAEHPBD0PAPAEPAI@Z:PROC ; CWinApp::GetProfileBinary
EXTRN	?WriteProfileBinary@CWinApp@@UAEHPBD0PAEI@Z:PROC ; CWinApp::WriteProfileBinary
EXTRN	?InitLibId@CWinApp@@UAEXXZ:PROC			; CWinApp::InitLibId
EXTRN	?Register@CWinApp@@UAEHXZ:PROC			; CWinApp::Register
EXTRN	?Unregister@CWinApp@@UAEHXZ:PROC		; CWinApp::Unregister
EXTRN	?OpenDocumentFile@CWinApp@@UAEPAVCDocument@@PBD@Z:PROC ; CWinApp::OpenDocumentFile
EXTRN	?OpenDocumentFile@CWinApp@@UAEPAVCDocument@@PBDH@Z:PROC ; CWinApp::OpenDocumentFile
EXTRN	?AddToRecentFileList@CWinApp@@UAEXPBD@Z:PROC	; CWinApp::AddToRecentFileList
EXTRN	?InitApplication@CWinApp@@UAEHXZ:PROC		; CWinApp::InitApplication
EXTRN	?SaveAllModified@CWinApp@@UAEHXZ:PROC		; CWinApp::SaveAllModified
EXTRN	?DoMessageBox@CWinApp@@UAEHPBDII@Z:PROC		; CWinApp::DoMessageBox
EXTRN	?DoWaitCursor@CWinApp@@UAEXH@Z:PROC		; CWinApp::DoWaitCursor
EXTRN	?OnDDECommand@CWinApp@@UAEHPAD@Z:PROC		; CWinApp::OnDDECommand
EXTRN	?WinHelpA@CWinApp@@UAEXKI@Z:PROC		; CWinApp::WinHelpA
EXTRN	?HtmlHelpA@CWinApp@@UAEXKI@Z:PROC		; CWinApp::HtmlHelpA
EXTRN	?WinHelpInternal@CWinApp@@UAEXKI@Z:PROC		; CWinApp::WinHelpInternal
EXTRN	?RegisterWithRestartManager@CWinApp@@UAEJHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:PROC ; CWinApp::RegisterWithRestartManager
EXTRN	?RegisterWithRestartManager@CWinApp@@UAEJPB_WKP6GKPAX@Z1KK@Z:PROC ; CWinApp::RegisterWithRestartManager
EXTRN	?ApplicationRecoveryCallback@CWinApp@@UAEKPAX@Z:PROC ; CWinApp::ApplicationRecoveryCallback
EXTRN	?GetDataRecoveryHandler@CWinApp@@UAEPAVCDataRecoveryHandler@@XZ:PROC ; CWinApp::GetDataRecoveryHandler
EXTRN	?IsTaskbarInteractionEnabled@CWinApp@@UAEHXZ:PROC ; CWinApp::IsTaskbarInteractionEnabled
EXTRN	?InitInstance@CWinApp@@UAEHXZ:PROC		; CWinApp::InitInstance
EXTRN	?ExitInstance@CWinApp@@UAEHXZ:PROC		; CWinApp::ExitInstance
EXTRN	?RestartInstance@CWinApp@@UAEHXZ:PROC		; CWinApp::RestartInstance
EXTRN	?Run@CWinApp@@UAEHXZ:PROC			; CWinApp::Run
EXTRN	?OnIdle@CWinApp@@UAEHJ@Z:PROC			; CWinApp::OnIdle
EXTRN	?ProcessWndProcException@CWinApp@@UAEJPAVCException@@PBUtagMSG@@@Z:PROC ; CWinApp::ProcessWndProcException
EXTRN	?LoadAppLangResourceDLL@CWinApp@@UAEPAUHINSTANCE__@@XZ:PROC ; CWinApp::LoadAppLangResourceDLL
EXTRN	??1CWinApp@@UAE@XZ:PROC				; CWinApp::~CWinApp
EXTRN	?GetThisMessageMap@CWinApp@@KGPBUAFX_MSGMAP@@XZ:PROC ; CWinApp::GetThisMessageMap
EXTRN	?LoadSysPolicies@CWinApp@@UAEHXZ:PROC		; CWinApp::LoadSysPolicies
EXTRN	??_ECSymbolApp@@UAEPAXI@Z:PROC			; CSymbolApp::`vector deleting destructor'
EXTRN	?GetToolType@CMainSymbol@@QAE?AW4SYMBOLTOOL@CSymbol@@XZ:PROC ; CMainSymbol::GetToolType
EXTRN	?GetSelectedToolType@CMainSymbol@@QAE?AW4SYMBOLTOOL@CSymbol@@XZ:PROC ; CMainSymbol::GetSelectedToolType
EXTRN	?InitializeBlock@CMainSymbol@@QAEXPAVCDC@@PAVCWnd@@@Z:PROC ; CMainSymbol::InitializeBlock
EXTRN	??0CMainSymbol@@QAE@XZ:PROC			; CMainSymbol::CMainSymbol
EXTRN	??1CMainSymbol@@QAE@XZ:PROC			; CMainSymbol::~CMainSymbol
EXTRN	?SetMainBlock_Object@CMainSymbol@@QAEXPAUIChartManager133101@@PAUIChartOCX133101@@@Z:PROC ; CMainSymbol::SetMainBlock_Object
EXTRN	?CreateSymbolDlg@CMainSymbol@@QAEXXZ:PROC	; CMainSymbol::CreateSymbolDlg
EXTRN	?IsExistBuletDlg@CMainSymbol@@QAEHXZ:PROC	; CMainSymbol::IsExistBuletDlg
EXTRN	?DeleteSymbolDlg@CMainSymbol@@QAEXXZ:PROC	; CMainSymbol::DeleteSymbolDlg
EXTRN	?SetCurrentSymbolTool@CMainSymbol@@QAEXW4SYMBOLTOOL@CSymbol@@@Z:PROC ; CMainSymbol::SetCurrentSymbolTool
EXTRN	?SetShapeDrawingType@CMainSymbol@@QAEXABKABH1AB_N@Z:PROC ; CMainSymbol::SetShapeDrawingType
EXTRN	?OnLButtonDown@CMainSymbol@@QAE_NPAVCDC@@ABVCPoint@@@Z:PROC ; CMainSymbol::OnLButtonDown
EXTRN	?OnLButtonUp@CMainSymbol@@QAE_NPAVCDC@@ABVCPoint@@@Z:PROC ; CMainSymbol::OnLButtonUp
EXTRN	?OnMouseMove@CMainSymbol@@QAE_NPAVCDC@@ABIABVCPoint@@@Z:PROC ; CMainSymbol::OnMouseMove
EXTRN	?OnRButtonUp@CMainSymbol@@QAE_NABVCPoint@@@Z:PROC ; CMainSymbol::OnRButtonUp
EXTRN	?OnLButtonDbClk@CMainSymbol@@QAE_NPAVCDC@@ABVCPoint@@@Z:PROC ; CMainSymbol::OnLButtonDbClk
EXTRN	?OnDraw@CMainSymbol@@QAEXPAVCDC@@@Z:PROC	; CMainSymbol::OnDraw
EXTRN	?InsertBlockIndex@CMainSymbol@@QAE_NABVCBlockIndex@@@Z:PROC ; CMainSymbol::InsertBlockIndex
EXTRN	?SetModifiedBlockIndexs@CMainSymbol@@QAEXABVCBlockIndex@@0@Z:PROC ; CMainSymbol::SetModifiedBlockIndexs
EXTRN	?DeleteCurrentSymbols@CMainSymbol@@QAEXXZ:PROC	; CMainSymbol::DeleteCurrentSymbols
EXTRN	?DeleteLastSymbol@CMainSymbol@@QAEXXZ:PROC	; CMainSymbol::DeleteLastSymbol
EXTRN	?DeleteSymbolPos@CMainSymbol@@QAE_NJ@Z:PROC	; CMainSymbol::DeleteSymbolPos
EXTRN	?DeleteAllSymbols@CMainSymbol@@QAEXXZ:PROC	; CMainSymbol::DeleteAllSymbols
EXTRN	?DeleteAllSymbolsInBlock@CMainSymbol@@QAEXABVCBlockIndex@@@Z:PROC ; CMainSymbol::DeleteAllSymbolsInBlock
EXTRN	?OnRButtonMenu@CMainSymbol@@QAE_NW4ELEMENTMENU@CMenuType@@I@Z:PROC ; CMainSymbol::OnRButtonMenu
EXTRN	?OnSetColor@CMainSymbol@@QAEXABK@Z:PROC		; CMainSymbol::OnSetColor
EXTRN	?GetSavedSymbolsData@CMainSymbol@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:PROC ; CMainSymbol::GetSavedSymbolsData
EXTRN	?BuildSymbolsFromString@CMainSymbol@@QAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:PROC ; CMainSymbol::BuildSymbolsFromString
EXTRN	?SetFilePath@CMainSymbol@@QAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:PROC ; CMainSymbol::SetFilePath
EXTRN	?SetElementCopy@CMainSymbol@@QAEXXZ:PROC	; CMainSymbol::SetElementCopy
EXTRN	?UndoElement@CMainSymbol@@QAE_NJ@Z:PROC		; CMainSymbol::UndoElement
EXTRN	?RedoElement@CMainSymbol@@QAE_NJ@Z:PROC		; CMainSymbol::RedoElement
EXTRN	?DrawSymbolTool@CMainSymbol@@QAEXPAVCDC@@@Z:PROC ; CMainSymbol::DrawSymbolTool
EXTRN	?GetDrawingTotalRegion@CMainSymbol@@QAE?AVCRect@@VCPoint@@@Z:PROC ; CMainSymbol::GetDrawingTotalRegion
EXTRN	?ChangeAllSymbolsColor@CMainSymbol@@QAEXABK0@Z:PROC ; CMainSymbol::ChangeAllSymbolsColor
EXTRN	?RecalcSymbolXPoint@CMainSymbol@@QAEXPBDH@Z:PROC ; CMainSymbol::RecalcSymbolXPoint
EXTRN	?SetXScaleDrawType@CMainSymbol@@QAEXW4HORZSCALEDRAWERTYPE@CScaleBaseData@@@Z:PROC ; CMainSymbol::SetXScaleDrawType
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?theApp@@3VCSymbolApp@@A DB 0ccH DUP (?)		; theApp
_BSS	ENDS
CRT$XCU	SEGMENT
?theApp$initializer$@@3P6AXXZA DD FLAT:??__EtheApp@@YAXXZ ; theApp$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R2CWinThread@@8
rdata$r	SEGMENT
??_R2CWinThread@@8 DD FLAT:??_R1A@?0A@EA@CWinThread@@8	; CWinThread::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWinThread@@8
rdata$r	SEGMENT
??_R3CWinThread@@8 DD 00H				; CWinThread::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CWinThread@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWinThread@@@8
data$rs	SEGMENT
??_R0?AVCWinThread@@@8 DD FLAT:??_7type_info@@6B@	; CWinThread `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWinThread@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CWinThread@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWinThread@@8 DD FLAT:??_R0?AVCWinThread@@@8 ; CWinThread::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWinThread@@8
rdata$r	ENDS
;	COMDAT ??_R2CWinApp@@8
rdata$r	SEGMENT
??_R2CWinApp@@8 DD FLAT:??_R1A@?0A@EA@CWinApp@@8	; CWinApp::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWinThread@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWinApp@@8
rdata$r	SEGMENT
??_R3CWinApp@@8 DD 00H					; CWinApp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CWinApp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWinApp@@@8
data$rs	SEGMENT
??_R0?AVCWinApp@@@8 DD FLAT:??_7type_info@@6B@		; CWinApp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWinApp@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CWinApp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWinApp@@8 DD FLAT:??_R0?AVCWinApp@@@8	; CWinApp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWinApp@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CSymbolApp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSymbolApp@@8 DD FLAT:??_R0?AVCSymbolApp@@@8 ; CSymbolApp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSymbolApp@@8
rdata$r	ENDS
;	COMDAT ??_R2CSymbolApp@@8
rdata$r	SEGMENT
??_R2CSymbolApp@@8 DD FLAT:??_R1A@?0A@EA@CSymbolApp@@8	; CSymbolApp::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWinApp@@8
	DD	FLAT:??_R1A@?0A@EA@CWinThread@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CSymbolApp@@8
rdata$r	SEGMENT
??_R3CSymbolApp@@8 DD 00H				; CSymbolApp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CSymbolApp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSymbolApp@@@8
data$rs	SEGMENT
??_R0?AVCSymbolApp@@@8 DD FLAT:??_7type_info@@6B@	; CSymbolApp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSymbolApp@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CSymbolApp@@6B@
rdata$r	SEGMENT
??_R4CSymbolApp@@6B@ DD 00H				; CSymbolApp::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSymbolApp@@@8
	DD	FLAT:??_R3CSymbolApp@@8
rdata$r	ENDS
;	COMDAT ?messageMap@?1??GetThisMessageMap@CSymbolApp@@KGPBUAFX_MSGMAP@@XZ@4U3@B
CONST	SEGMENT
?messageMap@?1??GetThisMessageMap@CSymbolApp@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CWinApp@@KGPBUAFX_MSGMAP@@XZ ; `CSymbolApp::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CSymbolApp@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
;	COMDAT ?_messageEntries@?1??GetThisMessageMap@CSymbolApp@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@?1??GetThisMessageMap@CSymbolApp@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 00H ; `CSymbolApp::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_7CSymbolApp@@6B@
CONST	SEGMENT
??_7CSymbolApp@@6B@ DD FLAT:??_R4CSymbolApp@@6B@	; CSymbolApp::`vftable'
	DD	FLAT:?GetRuntimeClass@CWinApp@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECSymbolApp@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CCmdTarget@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSymbolApp@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?InitInstance@CWinApp@@UAEHXZ
	DD	FLAT:?Run@CWinApp@@UAEHXZ
	DD	FLAT:?PreTranslateMessage@CWinThread@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?PumpMessage@CWinThread@@UAEHXZ
	DD	FLAT:?OnIdle@CWinApp@@UAEHJ@Z
	DD	FLAT:?IsIdleMessage@CWinThread@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?ExitInstance@CWinApp@@UAEHXZ
	DD	FLAT:?ProcessWndProcException@CWinApp@@UAEJPAVCException@@PBUtagMSG@@@Z
	DD	FLAT:?ProcessMessageFilter@CWinThread@@UAEHHPAUtagMSG@@@Z
	DD	FLAT:?GetMainWnd@CWinThread@@UAEPAVCWnd@@XZ
	DD	FLAT:?Delete@CWinThread@@UAEXXZ
	DD	FLAT:?GetProfileIntA@CWinApp@@UAEIPBD0H@Z
	DD	FLAT:?WriteProfileInt@CWinApp@@UAEHPBD0H@Z
	DD	FLAT:?GetProfileStringA@CWinApp@@UAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD00@Z
	DD	FLAT:?WriteProfileStringA@CWinApp@@UAEHPBD00@Z
	DD	FLAT:?GetProfileBinary@CWinApp@@UAEHPBD0PAPAEPAI@Z
	DD	FLAT:?WriteProfileBinary@CWinApp@@UAEHPBD0PAEI@Z
	DD	FLAT:?InitLibId@CWinApp@@UAEXXZ
	DD	FLAT:?Register@CWinApp@@UAEHXZ
	DD	FLAT:?Unregister@CWinApp@@UAEHXZ
	DD	FLAT:?OpenDocumentFile@CWinApp@@UAEPAVCDocument@@PBDH@Z
	DD	FLAT:?OpenDocumentFile@CWinApp@@UAEPAVCDocument@@PBD@Z
	DD	FLAT:?AddToRecentFileList@CWinApp@@UAEXPBD@Z
	DD	FLAT:?InitApplication@CWinApp@@UAEHXZ
	DD	FLAT:?SaveAllModified@CWinApp@@UAEHXZ
	DD	FLAT:?DoMessageBox@CWinApp@@UAEHPBDII@Z
	DD	FLAT:?DoWaitCursor@CWinApp@@UAEXH@Z
	DD	FLAT:?OnDDECommand@CWinApp@@UAEHPAD@Z
	DD	FLAT:?WinHelpA@CWinApp@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWinApp@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWinApp@@UAEXKI@Z
	DD	FLAT:?RegisterWithRestartManager@CWinApp@@UAEJPB_WKP6GKPAX@Z1KK@Z
	DD	FLAT:?RegisterWithRestartManager@CWinApp@@UAEJHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
	DD	FLAT:?ApplicationRecoveryCallback@CWinApp@@UAEKPAX@Z
	DD	FLAT:?SupportsRestartManager@CWinApp@@UBEHXZ
	DD	FLAT:?SupportsApplicationRecovery@CWinApp@@UBEHXZ
	DD	FLAT:?SupportsAutosaveAtRestart@CWinApp@@UBEHXZ
	DD	FLAT:?SupportsAutosaveAtInterval@CWinApp@@UBEHXZ
	DD	FLAT:?ReopenPreviousFilesAtRestart@CWinApp@@UBEHXZ
	DD	FLAT:?RestoreAutosavedFilesAtRestart@CWinApp@@UBEHXZ
	DD	FLAT:?GetApplicationRestartFlags@CWinApp@@UAEKXZ
	DD	FLAT:?GetApplicationRecoveryParameter@CWinApp@@UAEPAXXZ
	DD	FLAT:?GetApplicationRecoveryPingInterval@CWinApp@@UAEKXZ
	DD	FLAT:?GetDataRecoveryHandler@CWinApp@@UAEPAVCDataRecoveryHandler@@XZ
	DD	FLAT:?IsTaskbarInteractionEnabled@CWinApp@@UAEHXZ
	DD	FLAT:?RestartInstance@CWinApp@@UAEHXZ
	DD	FLAT:?LoadAppLangResourceDLL@CWinApp@@UAEPAUHINSTANCE__@@XZ
	DD	FLAT:?LoadSysPolicies@CWinApp@@UAEHXZ
CONST	ENDS
;	COMDAT ??_R2CCmdTarget@@8
rdata$r	SEGMENT
??_R2CCmdTarget@@8 DD FLAT:??_R1A@?0A@EA@CCmdTarget@@8	; CCmdTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CCmdTarget@@8
rdata$r	SEGMENT
??_R3CCmdTarget@@8 DD 00H				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
data$rs	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$rs	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$rs	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?MakeMainSymbol@@YGPAVCMainSymbol@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeMainSymbol@@YGPAVCMainSymbol@@XZ$0
__ehfuncinfo$?MakeMainSymbol@@YGPAVCMainSymbol@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?MakeMainSymbol@@YGPAVCMainSymbol@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DestroySymbolDlg@@YGXPAVCMainSymbol@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DestroySymbolDlg@@YGXPAVCMainSymbol@@@Z$0
__ehfuncinfo$?DestroySymbolDlg@@YGXPAVCMainSymbol@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DestroySymbolDlg@@YGXPAVCMainSymbol@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?IsExistSymbolDlg@@YGHPAVCMainSymbol@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?IsExistSymbolDlg@@YGHPAVCMainSymbol@@@Z$0
__ehfuncinfo$?IsExistSymbolDlg@@YGHPAVCMainSymbol@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?IsExistSymbolDlg@@YGHPAVCMainSymbol@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadSymbolDlg@@YGXPAVCMainSymbol@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadSymbolDlg@@YGXPAVCMainSymbol@@@Z$0
__ehfuncinfo$?LoadSymbolDlg@@YGXPAVCMainSymbol@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadSymbolDlg@@YGXPAVCMainSymbol@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Initialize_Block@@YGXPAVCDC@@PAVCWnd@@PAVCMainSymbol@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Initialize_Block@@YGXPAVCDC@@PAVCWnd@@PAVCMainSymbol@@@Z$0
__ehfuncinfo$?Initialize_Block@@YGXPAVCDC@@PAVCWnd@@PAVCMainSymbol@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Initialize_Block@@YGXPAVCDC@@PAVCWnd@@PAVCMainSymbol@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?SetXScaleType@@YGXW4HORZSCALEDRAWERTYPE@CScaleBaseData@@PAVCMainSymbol@@@Z
_TEXT	SEGMENT
_eScaleType$ = 8					; size = 4
_pMainSymbol$ = 12					; size = 4
?SetXScaleType@@YGXW4HORZSCALEDRAWERTYPE@CScaleBaseData@@PAVCMainSymbol@@@Z PROC ; SetXScaleType, COMDAT

; 373  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 374  : 	if(pMainSymbol == NULL)

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 08		 je	 SHORT $LN1@SetXScaleT

; 375  : 		return;
; 376  : 	
; 377  : 	pMainSymbol->SetXScaleDrawType(eScaleType);

  0000a	ff 75 08	 push	 DWORD PTR _eScaleType$[ebp]
  0000d	e8 00 00 00 00	 call	 ?SetXScaleDrawType@CMainSymbol@@QAEXW4HORZSCALEDRAWERTYPE@CScaleBaseData@@@Z ; CMainSymbol::SetXScaleDrawType
$LN1@SetXScaleT:

; 378  : }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?SetXScaleType@@YGXW4HORZSCALEDRAWERTYPE@CScaleBaseData@@PAVCMainSymbol@@@Z ENDP ; SetXScaleType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?RecalcElementXPoint@@YGXPBDHPAVCMainSymbol@@@Z
_TEXT	SEGMENT
_szName$ = 8						; size = 4
_nTimeDiff$ = 12					; size = 4
_pMainSymbol$ = 16					; size = 4
?RecalcElementXPoint@@YGXPBDHPAVCMainSymbol@@@Z PROC	; RecalcElementXPoint, COMDAT

; 364  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 365  : 	if(pMainSymbol == NULL)

  00003	8b 4d 10	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 0b		 je	 SHORT $LN1@RecalcElem

; 366  : 		return;
; 367  : 
; 368  : 	pMainSymbol->RecalcSymbolXPoint(szName,nTimeDiff); 

  0000a	ff 75 0c	 push	 DWORD PTR _nTimeDiff$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR _szName$[ebp]
  00010	e8 00 00 00 00	 call	 ?RecalcSymbolXPoint@CMainSymbol@@QAEXPBDH@Z ; CMainSymbol::RecalcSymbolXPoint
$LN1@RecalcElem:

; 369  : }

  00015	5d		 pop	 ebp
  00016	c2 0c 00	 ret	 12			; 0000000cH
?RecalcElementXPoint@@YGXPBDHPAVCMainSymbol@@@Z ENDP	; RecalcElementXPoint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?ChangeAllElementsColor@@YGXABK0PAVCMainSymbol@@@Z
_TEXT	SEGMENT
_crLine$ = 8						; size = 4
_crText$ = 12						; size = 4
_pMainSymbol$ = 16					; size = 4
?ChangeAllElementsColor@@YGXABK0PAVCMainSymbol@@@Z PROC	; ChangeAllElementsColor, COMDAT

; 355  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 356  : 	if(pMainSymbol == NULL)

  00003	8b 4d 10	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 0b		 je	 SHORT $LN1@ChangeAllE

; 357  : 		return;
; 358  : 
; 359  : 	pMainSymbol->ChangeAllSymbolsColor(crLine,crText); 

  0000a	ff 75 0c	 push	 DWORD PTR _crText$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR _crLine$[ebp]
  00010	e8 00 00 00 00	 call	 ?ChangeAllSymbolsColor@CMainSymbol@@QAEXABK0@Z ; CMainSymbol::ChangeAllSymbolsColor
$LN1@ChangeAllE:

; 360  : }

  00015	5d		 pop	 ebp
  00016	c2 0c 00	 ret	 12			; 0000000cH
?ChangeAllElementsColor@@YGXABK0PAVCMainSymbol@@@Z ENDP	; ChangeAllElementsColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?DrawTool@@YGXPAVCDC@@PAVCMainSymbol@@@Z
_TEXT	SEGMENT
_pDC$ = 8						; size = 4
_pMainSymbol$ = 12					; size = 4
?DrawTool@@YGXPAVCDC@@PAVCMainSymbol@@@Z PROC		; DrawTool, COMDAT

; 347  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 348  : 	if(pMainSymbol == NULL)

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 08		 je	 SHORT $LN1@DrawTool

; 349  : 		return;
; 350  : 
; 351  : 	pMainSymbol->DrawSymbolTool(pDC); 

  0000a	ff 75 08	 push	 DWORD PTR _pDC$[ebp]
  0000d	e8 00 00 00 00	 call	 ?DrawSymbolTool@CMainSymbol@@QAEXPAVCDC@@@Z ; CMainSymbol::DrawSymbolTool
$LN1@DrawTool:

; 352  : }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?DrawTool@@YGXPAVCDC@@PAVCMainSymbol@@@Z ENDP		; DrawTool
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?GetGraphTotalRegion@@YG?AVCRect@@ABVCPoint@@PAVCMainSymbol@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_point$ = 12						; size = 4
_pMainSymbol$ = 16					; size = 4
?GetGraphTotalRegion@@YG?AVCRect@@ABVCPoint@@PAVCMainSymbol@@@Z PROC ; GetGraphTotalRegion, COMDAT

; 339  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 340  : 	if(pMainSymbol == NULL)

  00003	8b 4d 10	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  0000a	85 c9		 test	 ecx, ecx
  0000c	75 0f		 jne	 SHORT $LN2@GetGraphTo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 553  : 	::CopyRect(this, lpSrcRect);

  0000e	51		 push	 ecx
  0000f	56		 push	 esi
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CopyRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp

; 344  : }

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 0c 00	 ret	 12			; 0000000cH
$LN2@GetGraphTo:

; 341  : 		return false;
; 342  : 
; 343  : 	return pMainSymbol->GetDrawingTotalRegion(point); 

  0001d	8b 45 0c	 mov	 eax, DWORD PTR _point$[ebp]
  00020	ff 70 04	 push	 DWORD PTR [eax+4]
  00023	ff 30		 push	 DWORD PTR [eax]
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 ?GetDrawingTotalRegion@CMainSymbol@@QAE?AVCRect@@VCPoint@@@Z ; CMainSymbol::GetDrawingTotalRegion

; 344  : }

  0002b	8b c6		 mov	 eax, esi
  0002d	5e		 pop	 esi
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?GetGraphTotalRegion@@YG?AVCRect@@ABVCPoint@@PAVCMainSymbol@@@Z ENDP ; GetGraphTotalRegion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?RedoElementPos@@YG_NPAVCMainSymbol@@ABJ@Z
_TEXT	SEGMENT
_pMainSymbol$ = 8					; size = 4
_lAddress$ = 12						; size = 4
?RedoElementPos@@YG_NPAVCMainSymbol@@ABJ@Z PROC		; RedoElementPos, COMDAT

; 331  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 332  : 	if(pMainSymbol == NULL)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	75 06		 jne	 SHORT $LN2@RedoElemen

; 333  : 		return false;

  0000a	32 c0		 xor	 al, al

; 336  : }

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
$LN2@RedoElemen:

; 334  : 
; 335  : 	return pMainSymbol->RedoElement(lAddress); 

  00010	8b 45 0c	 mov	 eax, DWORD PTR _lAddress$[ebp]
  00013	ff 30		 push	 DWORD PTR [eax]
  00015	e8 00 00 00 00	 call	 ?RedoElement@CMainSymbol@@QAE_NJ@Z ; CMainSymbol::RedoElement

; 336  : }

  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
?RedoElementPos@@YG_NPAVCMainSymbol@@ABJ@Z ENDP		; RedoElementPos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?UndoElementPos@@YG_NPAVCMainSymbol@@ABJ@Z
_TEXT	SEGMENT
_pMainSymbol$ = 8					; size = 4
_lAddress$ = 12						; size = 4
?UndoElementPos@@YG_NPAVCMainSymbol@@ABJ@Z PROC		; UndoElementPos, COMDAT

; 323  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 324  : 	if(pMainSymbol == NULL)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	75 06		 jne	 SHORT $LN2@UndoElemen

; 325  : 		return false;

  0000a	32 c0		 xor	 al, al

; 328  : }

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
$LN2@UndoElemen:

; 326  : 
; 327  : 	return pMainSymbol->UndoElement(lAddress); 

  00010	8b 45 0c	 mov	 eax, DWORD PTR _lAddress$[ebp]
  00013	ff 30		 push	 DWORD PTR [eax]
  00015	e8 00 00 00 00	 call	 ?UndoElement@CMainSymbol@@QAE_NJ@Z ; CMainSymbol::UndoElement

; 328  : }

  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
?UndoElementPos@@YG_NPAVCMainSymbol@@ABJ@Z ENDP		; UndoElementPos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?DeleteMainSymbol@@YGXPAVCMainSymbol@@@Z
_TEXT	SEGMENT
__ctlState$ = -8					; size = 8
_pMainSymbol$ = 8					; size = 4
?DeleteMainSymbol@@YGXPAVCMainSymbol@@@Z PROC		; DeleteMainSymbol, COMDAT

; 313  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 314  : 	AFX_MANAGE_STATE(AfxGetStaticModuleState());

  00007	e8 00 00 00 00	 call	 ?AfxGetStaticModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetStaticModuleState
  0000c	50		 push	 eax
  0000d	8d 4d f8	 lea	 ecx, DWORD PTR __ctlState$[ebp]
  00010	e8 00 00 00 00	 call	 ??0AFX_MAINTAIN_STATE2@@QAE@PAVAFX_MODULE_STATE@@@Z ; AFX_MAINTAIN_STATE2::AFX_MAINTAIN_STATE2

; 315  : 	if(pMainSymbol == NULL)

  00015	8b 75 08	 mov	 esi, DWORD PTR _pMainSymbol$[ebp]
  00018	85 f6		 test	 esi, esi
  0001a	74 12		 je	 SHORT $LN9@DeleteMain
  0001c	8b ce		 mov	 ecx, esi
  0001e	e8 00 00 00 00	 call	 ??1CMainSymbol@@QAE@XZ	; CMainSymbol::~CMainSymbol
  00023	6a 04		 push	 4
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002b	83 c4 08	 add	 esp, 8
$LN9@DeleteMain:

; 316  : 		return;
; 317  : 
; 318  : 	delete pMainSymbol;
; 319  : }

  0002e	8d 4d f8	 lea	 ecx, DWORD PTR __ctlState$[ebp]
  00031	e8 00 00 00 00	 call	 ??1AFX_MAINTAIN_STATE2@@QAE@XZ ; AFX_MAINTAIN_STATE2::~AFX_MAINTAIN_STATE2
  00036	5e		 pop	 esi
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
?DeleteMainSymbol@@YGXPAVCMainSymbol@@@Z ENDP		; DeleteMainSymbol
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?MakeMainSymbol@@YGPAVCMainSymbol@@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?MakeMainSymbol@@YGPAVCMainSymbol@@XZ PROC		; MakeMainSymbol, COMDAT

; 308  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?MakeMainSymbol@@YGPAVCMainSymbol@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 309  : 	return new CMainSymbol();

  00023	6a 04		 push	 4
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	85 c0		 test	 eax, eax
  00039	74 16		 je	 SHORT $LN3@MakeMainSy
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ??0CMainSymbol@@QAE@XZ	; CMainSymbol::CMainSymbol

; 310  : }

  00042	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00045	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004c	59		 pop	 ecx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
$LN3@MakeMainSy:

; 309  : 	return new CMainSymbol();

  00051	33 c0		 xor	 eax, eax

; 310  : }

  00053	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00056	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005d	59		 pop	 ecx
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MakeMainSymbol@@YGPAVCMainSymbol@@XZ$0:
  00000	6a 04		 push	 4
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?MakeMainSymbol@@YGPAVCMainSymbol@@XZ:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?MakeMainSymbol@@YGPAVCMainSymbol@@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?MakeMainSymbol@@YGPAVCMainSymbol@@XZ ENDP		; MakeMainSymbol
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?GetSelectToolType@@YG?AW4SYMBOLTOOL@CSymbol@@PAVCMainSymbol@@@Z
_TEXT	SEGMENT
_pMainSymbol$ = 8					; size = 4
?GetSelectToolType@@YG?AW4SYMBOLTOOL@CSymbol@@PAVCMainSymbol@@@Z PROC ; GetSelectToolType, COMDAT

; 300  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 301  : 	if(pMainSymbol == NULL)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	75 06		 jne	 SHORT $LN2@GetSelectT

; 302  : 		return (CSymbol::SYMBOLTOOL)0;

  0000a	33 c0		 xor	 eax, eax

; 305  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
$LN2@GetSelectT:

; 303  : 
; 304  : 	return pMainSymbol->GetSelectedToolType(); 

  00010	e8 00 00 00 00	 call	 ?GetSelectedToolType@CMainSymbol@@QAE?AW4SYMBOLTOOL@CSymbol@@XZ ; CMainSymbol::GetSelectedToolType

; 305  : }

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?GetSelectToolType@@YG?AW4SYMBOLTOOL@CSymbol@@PAVCMainSymbol@@@Z ENDP ; GetSelectToolType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?GetCurrentSymbolToolType@@YG?AW4SYMBOLTOOL@CSymbol@@PAVCMainSymbol@@@Z
_TEXT	SEGMENT
_pMainSymbol$ = 8					; size = 4
?GetCurrentSymbolToolType@@YG?AW4SYMBOLTOOL@CSymbol@@PAVCMainSymbol@@@Z PROC ; GetCurrentSymbolToolType, COMDAT

; 292  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 293  : 	if(pMainSymbol == NULL)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	75 06		 jne	 SHORT $LN2@GetCurrent

; 294  : 		return (CSymbol::SYMBOLTOOL)0;

  0000a	33 c0		 xor	 eax, eax

; 297  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
$LN2@GetCurrent:

; 295  : 
; 296  : 	return pMainSymbol->GetToolType(); 

  00010	e8 00 00 00 00	 call	 ?GetToolType@CMainSymbol@@QAE?AW4SYMBOLTOOL@CSymbol@@XZ ; CMainSymbol::GetToolType

; 297  : }

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?GetCurrentSymbolToolType@@YG?AW4SYMBOLTOOL@CSymbol@@PAVCMainSymbol@@@Z ENDP ; GetCurrentSymbolToolType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?SetDeskFilePath@@YGXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCMainSymbol@@@Z
_TEXT	SEGMENT
_path$ = 8						; size = 4
_pMainSymbol$ = 12					; size = 4
?SetDeskFilePath@@YGXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCMainSymbol@@@Z PROC ; SetDeskFilePath, COMDAT

; 284  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 285  : 	if(pMainSymbol == NULL)

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 08		 je	 SHORT $LN1@SetDeskFil

; 286  : 		return;
; 287  : 
; 288  : 	pMainSymbol->SetFilePath(path); 

  0000a	ff 75 08	 push	 DWORD PTR _path$[ebp]
  0000d	e8 00 00 00 00	 call	 ?SetFilePath@CMainSymbol@@QAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CMainSymbol::SetFilePath
$LN1@SetDeskFil:

; 289  : }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?SetDeskFilePath@@YGXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCMainSymbol@@@Z ENDP ; SetDeskFilePath
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?BuildElementsFromString@@YGXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCMainSymbol@@@Z
_TEXT	SEGMENT
_Data$ = 8						; size = 4
_pMainSymbol$ = 12					; size = 4
?BuildElementsFromString@@YGXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCMainSymbol@@@Z PROC ; BuildElementsFromString, COMDAT

; 276  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 277  : 	if(pMainSymbol == NULL)

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 08		 je	 SHORT $LN1@BuildEleme

; 278  : 		return;
; 279  : 
; 280  : 	pMainSymbol->BuildSymbolsFromString(Data); 

  0000a	ff 75 08	 push	 DWORD PTR _Data$[ebp]
  0000d	e8 00 00 00 00	 call	 ?BuildSymbolsFromString@CMainSymbol@@QAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CMainSymbol::BuildSymbolsFromString
$LN1@BuildEleme:

; 281  : }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?BuildElementsFromString@@YGXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCMainSymbol@@@Z ENDP ; BuildElementsFromString
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?GetSavedElementsData@@YG?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCMainSymbol@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_pMainSymbol$ = 12					; size = 4
?GetSavedElementsData@@YG?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCMainSymbol@@@Z PROC ; GetSavedElementsData, COMDAT

; 268  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 269  : 	if(pMainSymbol == NULL)

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	56		 push	 esi
  00007	85 c9		 test	 ecx, ecx
  00009	75 16		 jne	 SHORT $LN2@GetSavedEl

; 270  : 		return "";

  0000b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  00019	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	5e		 pop	 esi

; 273  : }

  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
$LN2@GetSavedEl:

; 271  : 
; 272  : 	return pMainSymbol->GetSavedSymbolsData(); 

  00021	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  00024	56		 push	 esi
  00025	e8 00 00 00 00	 call	 ?GetSavedSymbolsData@CMainSymbol@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CMainSymbol::GetSavedSymbolsData
  0002a	8b c6		 mov	 eax, esi
  0002c	5e		 pop	 esi

; 273  : }

  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
?GetSavedElementsData@@YG?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCMainSymbol@@@Z ENDP ; GetSavedElementsData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?SetToolColor@@YGXABKPAVCMainSymbol@@@Z
_TEXT	SEGMENT
_color$ = 8						; size = 4
_pMainSymbol$ = 12					; size = 4
?SetToolColor@@YGXABKPAVCMainSymbol@@@Z PROC		; SetToolColor, COMDAT

; 260  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 261  : 	if(pMainSymbol == NULL)

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 08		 je	 SHORT $LN1@SetToolCol

; 262  : 		return;
; 263  : 
; 264  : 	pMainSymbol->OnSetColor(color); 

  0000a	ff 75 08	 push	 DWORD PTR _color$[ebp]
  0000d	e8 00 00 00 00	 call	 ?OnSetColor@CMainSymbol@@QAEXABK@Z ; CMainSymbol::OnSetColor
$LN1@SetToolCol:

; 265  : }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?SetToolColor@@YGXABKPAVCMainSymbol@@@Z ENDP		; SetToolColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?RButtonMenu@@YG_NW4ELEMENTMENU@CMenuType@@IPAVCMainSymbol@@@Z
_TEXT	SEGMENT
_menuType$ = 8						; size = 4
_wParam$ = 12						; size = 4
_pMainSymbol$ = 16					; size = 4
?RButtonMenu@@YG_NW4ELEMENTMENU@CMenuType@@IPAVCMainSymbol@@@Z PROC ; RButtonMenu, COMDAT

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 253  : 	if(pMainSymbol == NULL)

  00003	8b 4d 10	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	75 06		 jne	 SHORT $LN2@RButtonMen

; 254  : 		return false;

  0000a	32 c0		 xor	 al, al

; 257  : }

  0000c	5d		 pop	 ebp
  0000d	c2 0c 00	 ret	 12			; 0000000cH
$LN2@RButtonMen:

; 255  : 
; 256  : 	return pMainSymbol->OnRButtonMenu(menuType, wParam); 

  00010	ff 75 0c	 push	 DWORD PTR _wParam$[ebp]
  00013	ff 75 08	 push	 DWORD PTR _menuType$[ebp]
  00016	e8 00 00 00 00	 call	 ?OnRButtonMenu@CMainSymbol@@QAE_NW4ELEMENTMENU@CMenuType@@I@Z ; CMainSymbol::OnRButtonMenu

; 257  : }

  0001b	5d		 pop	 ebp
  0001c	c2 0c 00	 ret	 12			; 0000000cH
?RButtonMenu@@YG_NW4ELEMENTMENU@CMenuType@@IPAVCMainSymbol@@@Z ENDP ; RButtonMenu
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?DeleteAllElementInBlock@@YGXABVCBlockIndex@@PAVCMainSymbol@@@Z
_TEXT	SEGMENT
_blockIndex$ = 8					; size = 4
_pMainSymbol$ = 12					; size = 4
?DeleteAllElementInBlock@@YGXABVCBlockIndex@@PAVCMainSymbol@@@Z PROC ; DeleteAllElementInBlock, COMDAT

; 244  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 245  : 	if(pMainSymbol == NULL)

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 08		 je	 SHORT $LN1@DeleteAllE

; 246  : 		return;
; 247  : 
; 248  : 	pMainSymbol->DeleteAllSymbolsInBlock(blockIndex); 

  0000a	ff 75 08	 push	 DWORD PTR _blockIndex$[ebp]
  0000d	e8 00 00 00 00	 call	 ?DeleteAllSymbolsInBlock@CMainSymbol@@QAEXABVCBlockIndex@@@Z ; CMainSymbol::DeleteAllSymbolsInBlock
$LN1@DeleteAllE:

; 249  : }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?DeleteAllElementInBlock@@YGXABVCBlockIndex@@PAVCMainSymbol@@@Z ENDP ; DeleteAllElementInBlock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?DeleteAllSymbol@@YGXPAVCMainSymbol@@@Z
_TEXT	SEGMENT
_pMainSymbol$ = 8					; size = 4
?DeleteAllSymbol@@YGXPAVCMainSymbol@@@Z PROC		; DeleteAllSymbol, COMDAT

; 236  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 237  : 	if(pMainSymbol == NULL)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 05		 je	 SHORT $LN1@DeleteAllS

; 238  : 		return;
; 239  : 
; 240  : 	pMainSymbol->DeleteAllSymbols(); 

  0000a	e8 00 00 00 00	 call	 ?DeleteAllSymbols@CMainSymbol@@QAEXXZ ; CMainSymbol::DeleteAllSymbols
$LN1@DeleteAllS:

; 241  : }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?DeleteAllSymbol@@YGXPAVCMainSymbol@@@Z ENDP		; DeleteAllSymbol
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?DeleteElementPos@@YG_NPAVCMainSymbol@@ABJ@Z
_TEXT	SEGMENT
_pMainSymbol$ = 8					; size = 4
_lAddress$ = 12						; size = 4
?DeleteElementPos@@YG_NPAVCMainSymbol@@ABJ@Z PROC	; DeleteElementPos, COMDAT

; 228  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  : 	if(pMainSymbol == NULL)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	75 06		 jne	 SHORT $LN2@DeleteElem

; 230  : 		return false;

  0000a	32 c0		 xor	 al, al

; 233  : }

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
$LN2@DeleteElem:

; 231  : 
; 232  : 	return pMainSymbol->DeleteSymbolPos(lAddress); 

  00010	8b 45 0c	 mov	 eax, DWORD PTR _lAddress$[ebp]
  00013	ff 30		 push	 DWORD PTR [eax]
  00015	e8 00 00 00 00	 call	 ?DeleteSymbolPos@CMainSymbol@@QAE_NJ@Z ; CMainSymbol::DeleteSymbolPos

; 233  : }

  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
?DeleteElementPos@@YG_NPAVCMainSymbol@@ABJ@Z ENDP	; DeleteElementPos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?DeleteTail@@YGXPAVCMainSymbol@@@Z
_TEXT	SEGMENT
_pMainSymbol$ = 8					; size = 4
?DeleteTail@@YGXPAVCMainSymbol@@@Z PROC			; DeleteTail, COMDAT

; 219  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 220  : 	if(pMainSymbol == NULL)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 05		 je	 SHORT $LN1@DeleteTail

; 221  : 		return;
; 222  : 
; 223  : 	pMainSymbol->DeleteLastSymbol(); 

  0000a	e8 00 00 00 00	 call	 ?DeleteLastSymbol@CMainSymbol@@QAEXXZ ; CMainSymbol::DeleteLastSymbol
$LN1@DeleteTail:

; 224  : }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?DeleteTail@@YGXPAVCMainSymbol@@@Z ENDP			; DeleteTail
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?DeleteCurrentSymbol@@YGXPAVCMainSymbol@@@Z
_TEXT	SEGMENT
_pMainSymbol$ = 8					; size = 4
?DeleteCurrentSymbol@@YGXPAVCMainSymbol@@@Z PROC	; DeleteCurrentSymbol, COMDAT

; 210  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 211  : 	if(pMainSymbol == NULL)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 05		 je	 SHORT $LN1@DeleteCurr

; 212  : 		return;
; 213  : 
; 214  : 	pMainSymbol->DeleteCurrentSymbols(); 

  0000a	e8 00 00 00 00	 call	 ?DeleteCurrentSymbols@CMainSymbol@@QAEXXZ ; CMainSymbol::DeleteCurrentSymbols
$LN1@DeleteCurr:

; 215  : }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?DeleteCurrentSymbol@@YGXPAVCMainSymbol@@@Z ENDP	; DeleteCurrentSymbol
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?MoveElementTree@@YGXABVCBlockIndex@@0PAVCMainSymbol@@@Z
_TEXT	SEGMENT
_sourceBlockIndex$ = 8					; size = 4
_TargetBlockIndex$ = 12					; size = 4
_pMainSymbol$ = 16					; size = 4
?MoveElementTree@@YGXABVCBlockIndex@@0PAVCMainSymbol@@@Z PROC ; MoveElementTree, COMDAT

; 201  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 	if(pMainSymbol == NULL)

  00003	8b 4d 10	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 0b		 je	 SHORT $LN1@MoveElemen

; 203  : 		return;
; 204  : 
; 205  : 	pMainSymbol->SetModifiedBlockIndexs(sourceBlockIndex, TargetBlockIndex);

  0000a	ff 75 0c	 push	 DWORD PTR _TargetBlockIndex$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR _sourceBlockIndex$[ebp]
  00010	e8 00 00 00 00	 call	 ?SetModifiedBlockIndexs@CMainSymbol@@QAEXABVCBlockIndex@@0@Z ; CMainSymbol::SetModifiedBlockIndexs
$LN1@MoveElemen:

; 206  : }

  00015	5d		 pop	 ebp
  00016	c2 0c 00	 ret	 12			; 0000000cH
?MoveElementTree@@YGXABVCBlockIndex@@0PAVCMainSymbol@@@Z ENDP ; MoveElementTree
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?InsertElementTree@@YG_NABVCBlockIndex@@PAVCMainSymbol@@@Z
_TEXT	SEGMENT
_insertBlockIndex$ = 8					; size = 4
_pMainSymbol$ = 12					; size = 4
?InsertElementTree@@YG_NABVCBlockIndex@@PAVCMainSymbol@@@Z PROC ; InsertElementTree, COMDAT

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 194  : 	if(pMainSymbol == NULL)

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	75 06		 jne	 SHORT $LN2@InsertElem

; 195  : 		return false;

  0000a	32 c0		 xor	 al, al

; 198  : }

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
$LN2@InsertElem:

; 196  : 
; 197  : 	return pMainSymbol->InsertBlockIndex(insertBlockIndex);	

  00010	ff 75 08	 push	 DWORD PTR _insertBlockIndex$[ebp]
  00013	e8 00 00 00 00	 call	 ?InsertBlockIndex@CMainSymbol@@QAE_NABVCBlockIndex@@@Z ; CMainSymbol::InsertBlockIndex

; 198  : }

  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
?InsertElementTree@@YG_NABVCBlockIndex@@PAVCMainSymbol@@@Z ENDP ; InsertElementTree
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?ReDraw@@YGXPAVCDC@@PAVCMainSymbol@@@Z
_TEXT	SEGMENT
_pDC$ = 8						; size = 4
_pMainSymbol$ = 12					; size = 4
?ReDraw@@YGXPAVCDC@@PAVCMainSymbol@@@Z PROC		; ReDraw, COMDAT

; 184  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 185  : 	if(pMainSymbol == NULL)

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 08		 je	 SHORT $LN1@ReDraw

; 186  : 		return;
; 187  : 
; 188  : 	pMainSymbol->OnDraw(pDC);

  0000a	ff 75 08	 push	 DWORD PTR _pDC$[ebp]
  0000d	e8 00 00 00 00	 call	 ?OnDraw@CMainSymbol@@QAEXPAVCDC@@@Z ; CMainSymbol::OnDraw
$LN1@ReDraw:

; 189  : }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?ReDraw@@YGXPAVCDC@@PAVCMainSymbol@@@Z ENDP		; ReDraw
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?RButtonUp@@YG_NABVCPoint@@PAVCMainSymbol@@@Z
_TEXT	SEGMENT
_point$ = 8						; size = 4
_pMainSymbol$ = 12					; size = 4
?RButtonUp@@YG_NABVCPoint@@PAVCMainSymbol@@@Z PROC	; RButtonUp, COMDAT

; 176  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 177  : 	if(pMainSymbol == NULL)

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	75 06		 jne	 SHORT $LN2@RButtonUp

; 178  : 		return false;

  0000a	32 c0		 xor	 al, al

; 181  : }

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
$LN2@RButtonUp:

; 179  : 
; 180  : 	return pMainSymbol->OnRButtonUp(point);

  00010	ff 75 08	 push	 DWORD PTR _point$[ebp]
  00013	e8 00 00 00 00	 call	 ?OnRButtonUp@CMainSymbol@@QAE_NABVCPoint@@@Z ; CMainSymbol::OnRButtonUp

; 181  : }

  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
?RButtonUp@@YG_NABVCPoint@@PAVCMainSymbol@@@Z ENDP	; RButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?MouseMove@@YG_NPAVCDC@@ABIABVCPoint@@PAVCMainSymbol@@@Z
_TEXT	SEGMENT
_pDC$ = 8						; size = 4
_nFlags$ = 12						; size = 4
_point$ = 16						; size = 4
_pMainSymbol$ = 20					; size = 4
?MouseMove@@YG_NPAVCDC@@ABIABVCPoint@@PAVCMainSymbol@@@Z PROC ; MouseMove, COMDAT

; 168  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 169  : 	if(pMainSymbol == NULL)

  00003	8b 4d 14	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	75 06		 jne	 SHORT $LN2@MouseMove

; 170  : 		return false;

  0000a	32 c0		 xor	 al, al

; 173  : }

  0000c	5d		 pop	 ebp
  0000d	c2 10 00	 ret	 16			; 00000010H
$LN2@MouseMove:

; 171  : 
; 172  : 	return pMainSymbol->OnMouseMove(pDC,nFlags, point);

  00010	ff 75 10	 push	 DWORD PTR _point$[ebp]
  00013	ff 75 0c	 push	 DWORD PTR _nFlags$[ebp]
  00016	ff 75 08	 push	 DWORD PTR _pDC$[ebp]
  00019	e8 00 00 00 00	 call	 ?OnMouseMove@CMainSymbol@@QAE_NPAVCDC@@ABIABVCPoint@@@Z ; CMainSymbol::OnMouseMove

; 173  : }

  0001e	5d		 pop	 ebp
  0001f	c2 10 00	 ret	 16			; 00000010H
?MouseMove@@YG_NPAVCDC@@ABIABVCPoint@@PAVCMainSymbol@@@Z ENDP ; MouseMove
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?LButtonUp@@YG_NPAVCDC@@ABVCPoint@@PAVCMainSymbol@@@Z
_TEXT	SEGMENT
_pDC$ = 8						; size = 4
_point$ = 12						; size = 4
_pMainSymbol$ = 16					; size = 4
?LButtonUp@@YG_NPAVCDC@@ABVCPoint@@PAVCMainSymbol@@@Z PROC ; LButtonUp, COMDAT

; 160  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 161  : 	if(pMainSymbol == NULL)

  00003	8b 4d 10	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	75 06		 jne	 SHORT $LN2@LButtonUp

; 162  : 		return false;

  0000a	32 c0		 xor	 al, al

; 165  : }

  0000c	5d		 pop	 ebp
  0000d	c2 0c 00	 ret	 12			; 0000000cH
$LN2@LButtonUp:

; 163  : 
; 164  : 	return pMainSymbol->OnLButtonUp(pDC, point);

  00010	ff 75 0c	 push	 DWORD PTR _point$[ebp]
  00013	ff 75 08	 push	 DWORD PTR _pDC$[ebp]
  00016	e8 00 00 00 00	 call	 ?OnLButtonUp@CMainSymbol@@QAE_NPAVCDC@@ABVCPoint@@@Z ; CMainSymbol::OnLButtonUp

; 165  : }

  0001b	5d		 pop	 ebp
  0001c	c2 0c 00	 ret	 12			; 0000000cH
?LButtonUp@@YG_NPAVCDC@@ABVCPoint@@PAVCMainSymbol@@@Z ENDP ; LButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?LButtonDbClk@@YG_NPAVCDC@@ABVCPoint@@PAVCMainSymbol@@@Z
_TEXT	SEGMENT
_pDC$ = 8						; size = 4
_point$ = 12						; size = 4
_pMainSymbol$ = 16					; size = 4
?LButtonDbClk@@YG_NPAVCDC@@ABVCPoint@@PAVCMainSymbol@@@Z PROC ; LButtonDbClk, COMDAT

; 152  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 153  : 	if(pMainSymbol == NULL)

  00003	8b 4d 10	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	75 06		 jne	 SHORT $LN2@LButtonDbC

; 154  : 		return false;

  0000a	32 c0		 xor	 al, al

; 157  : }

  0000c	5d		 pop	 ebp
  0000d	c2 0c 00	 ret	 12			; 0000000cH
$LN2@LButtonDbC:

; 155  : 
; 156  : 	return pMainSymbol->OnLButtonDbClk(pDC, point);

  00010	ff 75 0c	 push	 DWORD PTR _point$[ebp]
  00013	ff 75 08	 push	 DWORD PTR _pDC$[ebp]
  00016	e8 00 00 00 00	 call	 ?OnLButtonDbClk@CMainSymbol@@QAE_NPAVCDC@@ABVCPoint@@@Z ; CMainSymbol::OnLButtonDbClk

; 157  : }

  0001b	5d		 pop	 ebp
  0001c	c2 0c 00	 ret	 12			; 0000000cH
?LButtonDbClk@@YG_NPAVCDC@@ABVCPoint@@PAVCMainSymbol@@@Z ENDP ; LButtonDbClk
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?LButtonDown@@YG_NPAVCDC@@ABVCPoint@@PAVCMainSymbol@@@Z
_TEXT	SEGMENT
_pDC$ = 8						; size = 4
_point$ = 12						; size = 4
_pMainSymbol$ = 16					; size = 4
?LButtonDown@@YG_NPAVCDC@@ABVCPoint@@PAVCMainSymbol@@@Z PROC ; LButtonDown, COMDAT

; 144  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 145  : 	if(pMainSymbol == NULL)

  00003	8b 4d 10	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	75 06		 jne	 SHORT $LN2@LButtonDow

; 146  : 		return false;

  0000a	32 c0		 xor	 al, al

; 149  : }

  0000c	5d		 pop	 ebp
  0000d	c2 0c 00	 ret	 12			; 0000000cH
$LN2@LButtonDow:

; 147  : 
; 148  : 	return pMainSymbol->OnLButtonDown(pDC, point);

  00010	ff 75 0c	 push	 DWORD PTR _point$[ebp]
  00013	ff 75 08	 push	 DWORD PTR _pDC$[ebp]
  00016	e8 00 00 00 00	 call	 ?OnLButtonDown@CMainSymbol@@QAE_NPAVCDC@@ABVCPoint@@@Z ; CMainSymbol::OnLButtonDown

; 149  : }

  0001b	5d		 pop	 ebp
  0001c	c2 0c 00	 ret	 12			; 0000000cH
?LButtonDown@@YG_NPAVCDC@@ABVCPoint@@PAVCMainSymbol@@@Z ENDP ; LButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?SetShapeDrawingToolType@@YGXABKABH1AB_NPAVCMainSymbol@@@Z
_TEXT	SEGMENT
_crLine$ = 8						; size = 4
_nStyle$ = 12						; size = 4
_nWeight$ = 16						; size = 4
_bFill$ = 20						; size = 4
_pMainSymbol$ = 24					; size = 4
?SetShapeDrawingToolType@@YGXABKABH1AB_NPAVCMainSymbol@@@Z PROC ; SetShapeDrawingToolType, COMDAT

; 136  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 137  : 	if(pMainSymbol == NULL)

  00003	8b 4d 18	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 11		 je	 SHORT $LN1@SetShapeDr

; 138  : 		return;
; 139  : 
; 140  : 	pMainSymbol->SetShapeDrawingType(crLine,nStyle,nWeight,bFill);

  0000a	ff 75 14	 push	 DWORD PTR _bFill$[ebp]
  0000d	ff 75 10	 push	 DWORD PTR _nWeight$[ebp]
  00010	ff 75 0c	 push	 DWORD PTR _nStyle$[ebp]
  00013	ff 75 08	 push	 DWORD PTR _crLine$[ebp]
  00016	e8 00 00 00 00	 call	 ?SetShapeDrawingType@CMainSymbol@@QAEXABKABH1AB_N@Z ; CMainSymbol::SetShapeDrawingType
$LN1@SetShapeDr:

; 141  : }

  0001b	5d		 pop	 ebp
  0001c	c2 14 00	 ret	 20			; 00000014H
?SetShapeDrawingToolType@@YGXABKABH1AB_NPAVCMainSymbol@@@Z ENDP ; SetShapeDrawingToolType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?SetSymbolCopy@@YGXPAVCMainSymbol@@@Z
_TEXT	SEGMENT
_pMainSymbol$ = 8					; size = 4
?SetSymbolCopy@@YGXPAVCMainSymbol@@@Z PROC		; SetSymbolCopy, COMDAT

; 128  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 129  : 	if(pMainSymbol == NULL)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 05		 je	 SHORT $LN1@SetSymbolC

; 130  : 		return;
; 131  : 
; 132  : 	pMainSymbol->SetElementCopy();

  0000a	e8 00 00 00 00	 call	 ?SetElementCopy@CMainSymbol@@QAEXXZ ; CMainSymbol::SetElementCopy
$LN1@SetSymbolC:

; 133  : }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?SetSymbolCopy@@YGXPAVCMainSymbol@@@Z ENDP		; SetSymbolCopy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?SetCurrentSymbolType@@YGXW4SYMBOLTOOL@CSymbol@@PAVCMainSymbol@@@Z
_TEXT	SEGMENT
_symbolType$ = 8					; size = 4
_pMainSymbol$ = 12					; size = 4
?SetCurrentSymbolType@@YGXW4SYMBOLTOOL@CSymbol@@PAVCMainSymbol@@@Z PROC ; SetCurrentSymbolType, COMDAT

; 120  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 121  : 	if(pMainSymbol == NULL)

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 08		 je	 SHORT $LN1@SetCurrent

; 122  : 		return;
; 123  : 
; 124  : 	pMainSymbol->SetCurrentSymbolTool(symbolType);

  0000a	ff 75 08	 push	 DWORD PTR _symbolType$[ebp]
  0000d	e8 00 00 00 00	 call	 ?SetCurrentSymbolTool@CMainSymbol@@QAEXW4SYMBOLTOOL@CSymbol@@@Z ; CMainSymbol::SetCurrentSymbolTool
$LN1@SetCurrent:

; 125  : }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?SetCurrentSymbolType@@YGXW4SYMBOLTOOL@CSymbol@@PAVCMainSymbol@@@Z ENDP ; SetCurrentSymbolType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?DestroySymbolDlg@@YGXPAVCMainSymbol@@@Z
_TEXT	SEGMENT
__ctlState$ = -20					; size = 8
__$EHRec$ = -12						; size = 12
_pMainSymbol$ = 8					; size = 4
?DestroySymbolDlg@@YGXPAVCMainSymbol@@@Z PROC		; DestroySymbolDlg, COMDAT

; 111  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DestroySymbolDlg@@YGXPAVCMainSymbol@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 112  : 	AFX_MANAGE_STATE(AfxGetStaticModuleState());

  00025	e8 00 00 00 00	 call	 ?AfxGetStaticModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetStaticModuleState
  0002a	50		 push	 eax
  0002b	8d 4d ec	 lea	 ecx, DWORD PTR __ctlState$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0AFX_MAINTAIN_STATE2@@QAE@PAVAFX_MODULE_STATE@@@Z ; AFX_MAINTAIN_STATE2::AFX_MAINTAIN_STATE2

; 113  : 	if(pMainSymbol == NULL)

  00033	8b 4d 08	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003d	85 c9		 test	 ecx, ecx
  0003f	74 05		 je	 SHORT $LN5@DestroySym

; 114  : 		return;
; 115  : 
; 116  : 	pMainSymbol->DeleteSymbolDlg();

  00041	e8 00 00 00 00	 call	 ?DeleteSymbolDlg@CMainSymbol@@QAEXXZ ; CMainSymbol::DeleteSymbolDlg
$LN5@DestroySym:

; 117  : }

  00046	8d 4d ec	 lea	 ecx, DWORD PTR __ctlState$[ebp]
  00049	e8 00 00 00 00	 call	 ??1AFX_MAINTAIN_STATE2@@QAE@XZ ; AFX_MAINTAIN_STATE2::~AFX_MAINTAIN_STATE2
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DestroySymbolDlg@@YGXPAVCMainSymbol@@@Z$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __ctlState$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1AFX_MAINTAIN_STATE2@@QAE@XZ ; AFX_MAINTAIN_STATE2::~AFX_MAINTAIN_STATE2
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?DestroySymbolDlg@@YGXPAVCMainSymbol@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DestroySymbolDlg@@YGXPAVCMainSymbol@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DestroySymbolDlg@@YGXPAVCMainSymbol@@@Z ENDP		; DestroySymbolDlg
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?IsExistSymbolDlg@@YGHPAVCMainSymbol@@@Z
_TEXT	SEGMENT
__ctlState$ = -20					; size = 8
__$EHRec$ = -12						; size = 12
_pMainSymbol$ = 8					; size = 4
?IsExistSymbolDlg@@YGHPAVCMainSymbol@@@Z PROC		; IsExistSymbolDlg, COMDAT

; 101  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?IsExistSymbolDlg@@YGHPAVCMainSymbol@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 102  : 	AFX_MANAGE_STATE(AfxGetStaticModuleState());

  00026	e8 00 00 00 00	 call	 ?AfxGetStaticModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetStaticModuleState
  0002b	50		 push	 eax
  0002c	8d 4d ec	 lea	 ecx, DWORD PTR __ctlState$[ebp]
  0002f	e8 00 00 00 00	 call	 ??0AFX_MAINTAIN_STATE2@@QAE@PAVAFX_MODULE_STATE@@@Z ; AFX_MAINTAIN_STATE2::AFX_MAINTAIN_STATE2

; 103  : 
; 104  : 	if(pMainSymbol == NULL)

  00034	8b 4d 08	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003e	85 c9		 test	 ecx, ecx
  00040	75 04		 jne	 SHORT $LN2@IsExistSym
  00042	33 f6		 xor	 esi, esi
  00044	eb 07		 jmp	 SHORT $LN5@IsExistSym
$LN2@IsExistSym:

; 105  : 		return FALSE;
; 106  : 
; 107  : 	return pMainSymbol->IsExistBuletDlg();

  00046	e8 00 00 00 00	 call	 ?IsExistBuletDlg@CMainSymbol@@QAEHXZ ; CMainSymbol::IsExistBuletDlg
  0004b	8b f0		 mov	 esi, eax
$LN5@IsExistSym:
  0004d	8d 4d ec	 lea	 ecx, DWORD PTR __ctlState$[ebp]
  00050	e8 00 00 00 00	 call	 ??1AFX_MAINTAIN_STATE2@@QAE@XZ ; AFX_MAINTAIN_STATE2::~AFX_MAINTAIN_STATE2
  00055	8b c6		 mov	 eax, esi

; 108  : }

  00057	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00061	59		 pop	 ecx
  00062	5e		 pop	 esi
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?IsExistSymbolDlg@@YGHPAVCMainSymbol@@@Z$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __ctlState$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1AFX_MAINTAIN_STATE2@@QAE@XZ ; AFX_MAINTAIN_STATE2::~AFX_MAINTAIN_STATE2
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?IsExistSymbolDlg@@YGHPAVCMainSymbol@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?IsExistSymbolDlg@@YGHPAVCMainSymbol@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?IsExistSymbolDlg@@YGHPAVCMainSymbol@@@Z ENDP		; IsExistSymbolDlg
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?LoadSymbolDlg@@YGXPAVCMainSymbol@@@Z
_TEXT	SEGMENT
__ctlState$ = -20					; size = 8
__$EHRec$ = -12						; size = 12
_pMainSymbol$ = 8					; size = 4
?LoadSymbolDlg@@YGXPAVCMainSymbol@@@Z PROC		; LoadSymbolDlg, COMDAT

; 91   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadSymbolDlg@@YGXPAVCMainSymbol@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 92   : 	AFX_MANAGE_STATE(AfxGetStaticModuleState());

  00025	e8 00 00 00 00	 call	 ?AfxGetStaticModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetStaticModuleState
  0002a	50		 push	 eax
  0002b	8d 4d ec	 lea	 ecx, DWORD PTR __ctlState$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0AFX_MAINTAIN_STATE2@@QAE@PAVAFX_MODULE_STATE@@@Z ; AFX_MAINTAIN_STATE2::AFX_MAINTAIN_STATE2

; 93   : 
; 94   : 	if(pMainSymbol == NULL)

  00033	8b 4d 08	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003d	85 c9		 test	 ecx, ecx
  0003f	74 05		 je	 SHORT $LN5@LoadSymbol

; 95   : 		return;
; 96   : 
; 97   : 	pMainSymbol->CreateSymbolDlg();

  00041	e8 00 00 00 00	 call	 ?CreateSymbolDlg@CMainSymbol@@QAEXXZ ; CMainSymbol::CreateSymbolDlg
$LN5@LoadSymbol:

; 98   : }

  00046	8d 4d ec	 lea	 ecx, DWORD PTR __ctlState$[ebp]
  00049	e8 00 00 00 00	 call	 ??1AFX_MAINTAIN_STATE2@@QAE@XZ ; AFX_MAINTAIN_STATE2::~AFX_MAINTAIN_STATE2
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadSymbolDlg@@YGXPAVCMainSymbol@@@Z$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __ctlState$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1AFX_MAINTAIN_STATE2@@QAE@XZ ; AFX_MAINTAIN_STATE2::~AFX_MAINTAIN_STATE2
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?LoadSymbolDlg@@YGXPAVCMainSymbol@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadSymbolDlg@@YGXPAVCMainSymbol@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadSymbolDlg@@YGXPAVCMainSymbol@@@Z ENDP		; LoadSymbolDlg
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?Initialize_Block@@YGXPAVCDC@@PAVCWnd@@PAVCMainSymbol@@@Z
_TEXT	SEGMENT
__ctlState$ = -20					; size = 8
__$EHRec$ = -12						; size = 12
_pDC$ = 8						; size = 4
_pOCX$ = 12						; size = 4
_pMainSymbol$ = 16					; size = 4
?Initialize_Block@@YGXPAVCDC@@PAVCWnd@@PAVCMainSymbol@@@Z PROC ; Initialize_Block, COMDAT

; 78   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Initialize_Block@@YGXPAVCDC@@PAVCWnd@@PAVCMainSymbol@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 79   : 	if(pMainSymbol == NULL)

  00026	83 7d 10 00	 cmp	 DWORD PTR _pMainSymbol$[ebp], 0
  0002a	74 3d		 je	 SHORT $LN1@Initialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 25   : 	{ return this == NULL ? NULL : m_hWnd; }

  0002c	8b 45 0c	 mov	 eax, DWORD PTR _pOCX$[ebp]
  0002f	85 c0		 test	 eax, eax
  00031	75 04		 jne	 SHORT $LN7@Initialize
  00033	33 ff		 xor	 edi, edi
  00035	eb 03		 jmp	 SHORT $LN8@Initialize
$LN7@Initialize:
  00037	8b 78 20	 mov	 edi, DWORD PTR [eax+32]
$LN8@Initialize:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp

; 84   : 	AFX_MANAGE_STATE(AfxGetStaticModuleState());

  0003a	e8 00 00 00 00	 call	 ?AfxGetStaticModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetStaticModuleState
  0003f	50		 push	 eax
  00040	8d 4d ec	 lea	 ecx, DWORD PTR __ctlState$[ebp]
  00043	e8 00 00 00 00	 call	 ??0AFX_MAINTAIN_STATE2@@QAE@PAVAFX_MODULE_STATE@@@Z ; AFX_MAINTAIN_STATE2::AFX_MAINTAIN_STATE2

; 85   : 	CWnd *pParentWnd = CWnd::FromHandle( hOCX);

  00048	57		 push	 edi
  00049	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00050	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle

; 86   : 
; 87   : 	pMainSymbol->InitializeBlock(pDC, pParentWnd);

  00055	8b 4d 10	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00058	50		 push	 eax
  00059	ff 75 08	 push	 DWORD PTR _pDC$[ebp]
  0005c	e8 00 00 00 00	 call	 ?InitializeBlock@CMainSymbol@@QAEXPAVCDC@@PAVCWnd@@@Z ; CMainSymbol::InitializeBlock

; 88   : }

  00061	8d 4d ec	 lea	 ecx, DWORD PTR __ctlState$[ebp]
  00064	e8 00 00 00 00	 call	 ??1AFX_MAINTAIN_STATE2@@QAE@XZ ; AFX_MAINTAIN_STATE2::~AFX_MAINTAIN_STATE2
$LN1@Initialize:
  00069	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00073	59		 pop	 ecx
  00074	5f		 pop	 edi
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Initialize_Block@@YGXPAVCDC@@PAVCWnd@@PAVCMainSymbol@@@Z$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __ctlState$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1AFX_MAINTAIN_STATE2@@QAE@XZ ; AFX_MAINTAIN_STATE2::~AFX_MAINTAIN_STATE2
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?Initialize_Block@@YGXPAVCDC@@PAVCWnd@@PAVCMainSymbol@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Initialize_Block@@YGXPAVCDC@@PAVCWnd@@PAVCMainSymbol@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Initialize_Block@@YGXPAVCDC@@PAVCWnd@@PAVCMainSymbol@@@Z ENDP ; Initialize_Block
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?SetMainBlock@@YGXPAUIChartManager133101@@PAVCMainSymbol@@PAUIChartOCX133101@@@Z
_TEXT	SEGMENT
_pMainBlock$ = 8					; size = 4
_pMainSymbol$ = 12					; size = 4
_p_pIChartOCX$ = 16					; size = 4
?SetMainBlock@@YGXPAUIChartManager133101@@PAVCMainSymbol@@PAUIChartOCX133101@@@Z PROC ; SetMainBlock, COMDAT

; 70   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 71   : 	if(pMainSymbol == NULL)

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pMainSymbol$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 0b		 je	 SHORT $LN1@SetMainBlo

; 72   : 		return;
; 73   : 
; 74   : 	pMainSymbol->SetMainBlock_Object(pMainBlock,p_pIChartOCX);

  0000a	ff 75 10	 push	 DWORD PTR _p_pIChartOCX$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR _pMainBlock$[ebp]
  00010	e8 00 00 00 00	 call	 ?SetMainBlock_Object@CMainSymbol@@QAEXPAUIChartManager133101@@PAUIChartOCX133101@@@Z ; CMainSymbol::SetMainBlock_Object
$LN1@SetMainBlo:

; 75   : }

  00015	5d		 pop	 ebp
  00016	c2 0c 00	 ret	 12			; 0000000cH
?SetMainBlock@@YGXPAUIChartManager133101@@PAVCMainSymbol@@PAUIChartOCX133101@@@Z ENDP ; SetMainBlock
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__FtheApp@@YAXXZ
text$yd	SEGMENT
??__FtheApp@@YAXXZ PROC					; `dynamic atexit destructor for 'theApp'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?theApp@@3VCSymbolApp@@A ; theApp
  00005	e9 00 00 00 00	 jmp	 ??1CWinApp@@UAE@XZ	; CWinApp::~CWinApp
??__FtheApp@@YAXXZ ENDP					; `dynamic atexit destructor for 'theApp''
text$yd	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ??__EtheApp@@YAXXZ
text$di	SEGMENT
??__EtheApp@@YAXXZ PROC					; `dynamic initializer for 'theApp'', COMDAT

; 58   : {

  00000	6a 00		 push	 0
  00002	b9 00 00 00 00	 mov	 ecx, OFFSET ?theApp@@3VCSymbolApp@@A ; theApp
  00007	e8 00 00 00 00	 call	 ??0CWinApp@@QAE@PBD@Z	; CWinApp::CWinApp

; 66   : CSymbolApp theApp;

  0000c	68 00 00 00 00	 push	 OFFSET ??__FtheApp@@YAXXZ ; `dynamic atexit destructor for 'theApp''

; 58   : {

  00011	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?theApp@@3VCSymbolApp@@A, OFFSET ??_7CSymbolApp@@6B@

; 66   : CSymbolApp theApp;

  0001b	e8 00 00 00 00	 call	 _atexit
  00020	59		 pop	 ecx
  00021	c3		 ret	 0
??__EtheApp@@YAXXZ ENDP					; `dynamic initializer for 'theApp''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCSymbolApp@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSymbolApp@@UAEPAXI@Z PROC				; CSymbolApp::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CWinApp@@UAE@XZ	; CWinApp::~CWinApp
  0000b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0000e	a8 01		 test	 al, 1
  00010	74 22		 je	 SHORT $LN12@scalar
  00012	a8 04		 test	 al, 4
  00014	75 10		 jne	 SHORT $LN3@scalar

; 112  : 	{ ::operator delete(p); }

  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001c	83 c4 04	 add	 esp, 4
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
$LN3@scalar:
  00026	68 cc 00 00 00	 push	 204			; 000000ccH
  0002b	56		 push	 esi
  0002c	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00031	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00034	8b c6		 mov	 eax, esi
  00036	5e		 pop	 esi
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
??_GCSymbolApp@@UAEPAXI@Z ENDP				; CSymbolApp::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?GetMessageMap@CSymbolApp@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetMessageMap@CSymbolApp@@MBEPBUAFX_MSGMAP@@XZ PROC	; CSymbolApp::GetMessageMap, COMDAT
; _this$ = ecx

; 47   : BEGIN_MESSAGE_MAP(CSymbolApp, CWinApp)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CSymbolApp@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  00005	c3		 ret	 0
?GetMessageMap@CSymbolApp@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CSymbolApp::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?GetThisMessageMap@CSymbolApp@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CSymbolApp@@KGPBUAFX_MSGMAP@@XZ PROC	; CSymbolApp::GetThisMessageMap, COMDAT

; 48   : 	//{{AFX_MSG_MAP(CSymbolApp)
; 49   : 		// NOTE - the ClassWizard will add and remove mapping macros here.
; 50   : 		//    DO NOT EDIT what you see in these blocks of generated code!
; 51   : 	//}}AFX_MSG_MAP
; 52   : END_MESSAGE_MAP()

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CSymbolApp@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  00005	c3		 ret	 0
?GetThisMessageMap@CSymbolApp@@KGPBUAFX_MSGMAP@@XZ ENDP	; CSymbolApp::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ??0CSymbolApp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CSymbolApp@@QAE@XZ PROC				; CSymbolApp::CSymbolApp, COMDAT
; _this$ = ecx

; 58   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	6a 00		 push	 0
  00009	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000c	e8 00 00 00 00	 call	 ??0CWinApp@@QAE@PBD@Z	; CWinApp::CWinApp
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CSymbolApp@@6B@

; 59   : 	// TODO: add construction code here,
; 60   : 	// Place all significant initialization in InitInstance
; 61   : }

  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0CSymbolApp@@QAE@XZ ENDP				; CSymbolApp::CSymbolApp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin.h
;	COMDAT ?GetApplicationRecoveryPingInterval@CWinApp@@UAEKXZ
_TEXT	SEGMENT
?GetApplicationRecoveryPingInterval@CWinApp@@UAEKXZ PROC ; CWinApp::GetApplicationRecoveryPingInterval, COMDAT
; _this$ = ecx

; 5370 : 	virtual DWORD GetApplicationRecoveryPingInterval() { return RECOVERY_DEFAULT_PING_INTERVAL; }  // Ping interval for RegisterApplicationRecoveryCallback

  00000	b8 88 13 00 00	 mov	 eax, 5000		; 00001388H
  00005	c3		 ret	 0
?GetApplicationRecoveryPingInterval@CWinApp@@UAEKXZ ENDP ; CWinApp::GetApplicationRecoveryPingInterval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin.h
;	COMDAT ?GetApplicationRecoveryParameter@CWinApp@@UAEPAXXZ
_TEXT	SEGMENT
?GetApplicationRecoveryParameter@CWinApp@@UAEPAXXZ PROC	; CWinApp::GetApplicationRecoveryParameter, COMDAT
; _this$ = ecx

; 5369 : 	virtual LPVOID GetApplicationRecoveryParameter() { return NULL; }  // Parameter to be passed along to RegisterApplicationRecoveryCallback

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?GetApplicationRecoveryParameter@CWinApp@@UAEPAXXZ ENDP	; CWinApp::GetApplicationRecoveryParameter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin.h
;	COMDAT ?GetApplicationRestartFlags@CWinApp@@UAEKXZ
_TEXT	SEGMENT
?GetApplicationRestartFlags@CWinApp@@UAEKXZ PROC	; CWinApp::GetApplicationRestartFlags, COMDAT
; _this$ = ecx

; 5368 : 	virtual DWORD GetApplicationRestartFlags() { return 0; }  // Flags for RegisterApplicationRestart: default is none of RESTART_NO_CRASH/RESTART_NO_HANG/RESTART_NO_PATCH/RESTART_NO_REBOOT

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?GetApplicationRestartFlags@CWinApp@@UAEKXZ ENDP	; CWinApp::GetApplicationRestartFlags
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin.h
;	COMDAT ?RestoreAutosavedFilesAtRestart@CWinApp@@UBEHXZ
_TEXT	SEGMENT
?RestoreAutosavedFilesAtRestart@CWinApp@@UBEHXZ PROC	; CWinApp::RestoreAutosavedFilesAtRestart, COMDAT
; _this$ = ecx

; 5366 : 	virtual BOOL RestoreAutosavedFilesAtRestart() const { return m_dwRestartManagerSupportFlags & AFX_RESTART_MANAGER_RESTORE_AUTOSAVED_FILES; }

  00000	8b 81 ac 00 00
	00		 mov	 eax, DWORD PTR [ecx+172]
  00006	83 e0 20	 and	 eax, 32			; 00000020H
  00009	c3		 ret	 0
?RestoreAutosavedFilesAtRestart@CWinApp@@UBEHXZ ENDP	; CWinApp::RestoreAutosavedFilesAtRestart
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin.h
;	COMDAT ?ReopenPreviousFilesAtRestart@CWinApp@@UBEHXZ
_TEXT	SEGMENT
?ReopenPreviousFilesAtRestart@CWinApp@@UBEHXZ PROC	; CWinApp::ReopenPreviousFilesAtRestart, COMDAT
; _this$ = ecx

; 5365 : 	virtual BOOL ReopenPreviousFilesAtRestart() const { return m_dwRestartManagerSupportFlags & AFX_RESTART_MANAGER_REOPEN_PREVIOUS_FILES; }

  00000	8b 81 ac 00 00
	00		 mov	 eax, DWORD PTR [ecx+172]
  00006	83 e0 10	 and	 eax, 16			; 00000010H
  00009	c3		 ret	 0
?ReopenPreviousFilesAtRestart@CWinApp@@UBEHXZ ENDP	; CWinApp::ReopenPreviousFilesAtRestart
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin.h
;	COMDAT ?SupportsAutosaveAtInterval@CWinApp@@UBEHXZ
_TEXT	SEGMENT
?SupportsAutosaveAtInterval@CWinApp@@UBEHXZ PROC	; CWinApp::SupportsAutosaveAtInterval, COMDAT
; _this$ = ecx

; 5364 : 	virtual BOOL SupportsAutosaveAtInterval() const { return m_dwRestartManagerSupportFlags & AFX_RESTART_MANAGER_AUTOSAVE_AT_INTERVAL; }

  00000	8b 81 ac 00 00
	00		 mov	 eax, DWORD PTR [ecx+172]
  00006	83 e0 08	 and	 eax, 8
  00009	c3		 ret	 0
?SupportsAutosaveAtInterval@CWinApp@@UBEHXZ ENDP	; CWinApp::SupportsAutosaveAtInterval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin.h
;	COMDAT ?SupportsAutosaveAtRestart@CWinApp@@UBEHXZ
_TEXT	SEGMENT
?SupportsAutosaveAtRestart@CWinApp@@UBEHXZ PROC		; CWinApp::SupportsAutosaveAtRestart, COMDAT
; _this$ = ecx

; 5363 : 	virtual BOOL SupportsAutosaveAtRestart() const { return m_dwRestartManagerSupportFlags & AFX_RESTART_MANAGER_AUTOSAVE_AT_RESTART; }

  00000	8b 81 ac 00 00
	00		 mov	 eax, DWORD PTR [ecx+172]
  00006	83 e0 04	 and	 eax, 4
  00009	c3		 ret	 0
?SupportsAutosaveAtRestart@CWinApp@@UBEHXZ ENDP		; CWinApp::SupportsAutosaveAtRestart
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin.h
;	COMDAT ?SupportsApplicationRecovery@CWinApp@@UBEHXZ
_TEXT	SEGMENT
?SupportsApplicationRecovery@CWinApp@@UBEHXZ PROC	; CWinApp::SupportsApplicationRecovery, COMDAT
; _this$ = ecx

; 5362 : 	virtual BOOL SupportsApplicationRecovery() const { return m_dwRestartManagerSupportFlags & AFX_RESTART_MANAGER_SUPPORT_RECOVERY; }

  00000	8b 81 ac 00 00
	00		 mov	 eax, DWORD PTR [ecx+172]
  00006	83 e0 02	 and	 eax, 2
  00009	c3		 ret	 0
?SupportsApplicationRecovery@CWinApp@@UBEHXZ ENDP	; CWinApp::SupportsApplicationRecovery
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin.h
;	COMDAT ?SupportsRestartManager@CWinApp@@UBEHXZ
_TEXT	SEGMENT
?SupportsRestartManager@CWinApp@@UBEHXZ PROC		; CWinApp::SupportsRestartManager, COMDAT
; _this$ = ecx

; 5361 : 	virtual BOOL SupportsRestartManager() const { return m_dwRestartManagerSupportFlags & AFX_RESTART_MANAGER_SUPPORT_RESTART; }

  00000	8b 81 ac 00 00
	00		 mov	 eax, DWORD PTR [ecx+172]
  00006	83 e0 01	 and	 eax, 1
  00009	c3		 ret	 0
?SupportsRestartManager@CWinApp@@UBEHXZ ENDP		; CWinApp::SupportsRestartManager
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?_AfxInitManaged@@YAHXZ
_TEXT	SEGMENT
?_AfxInitManaged@@YAHXZ PROC				; _AfxInitManaged, COMDAT

; 87   : 	return 0;

  00000	33 c0		 xor	 eax, eax

; 88   : }

  00002	c3		 ret	 0
?_AfxInitManaged@@YAHXZ ENDP				; _AfxInitManaged
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC		; CObject::Dump, COMDAT
; _this$ = ecx

; 122  : 	{ /* no dumping in release builds */ }

  00000	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
?AssertValid@CObject@@UBEXXZ PROC			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 120  : 	{ /* no asserts in release builds */ }

  00000	c2 00 00	 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC		; CObject::Serialize, COMDAT
; _this$ = ecx

; 106  : 	{ /* CObject does not serialize anything by default */ }

  00000	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Symbol\Symbol.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
