; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\AnalysisTool\MainAutoTrendImplementation.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BC@MMPGLPDH@RMS_ANALYSIS_FUNC@		; `string'
;	COMDAT ??_C@_0BC@MMPGLPDH@RMS_ANALYSIS_FUNC@
CONST	SEGMENT
??_C@_0BC@MMPGLPDH@RMS_ANALYSIS_FUNC@ DB 'RMS_ANALYSIS_FUNC', 00H ; `string'
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1CObject@@UAE@XZ				; CObject::~CObject
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	??1ILPCSTR133101@@QAE@XZ			; ILPCSTR133101::~ILPCSTR133101
PUBLIC	?AddTail@?$CList@PAUIPacket133101@@PAU1@@@QAEPAU__POSITION@@PAUIPacket133101@@@Z ; CList<IPacket133101 *,IPacket133101 *>::AddTail
PUBLIC	?RemoveAll@?$CList@PAUIPacket133101@@PAU1@@@QAEXXZ ; CList<IPacket133101 *,IPacket133101 *>::RemoveAll
PUBLIC	?NewNode@?$CList@PAUIPacket133101@@PAU1@@@IAEPAUCNode@1@PAU21@0@Z ; CList<IPacket133101 *,IPacket133101 *>::NewNode
PUBLIC	??1?$CList@PAUIPacket133101@@PAU1@@@UAE@XZ	; CList<IPacket133101 *,IPacket133101 *>::~CList<IPacket133101 *,IPacket133101 *>
PUBLIC	?Serialize@?$CList@PAUIPacket133101@@PAU1@@@UAEXAAVCArchive@@@Z ; CList<IPacket133101 *,IPacket133101 *>::Serialize
PUBLIC	??_G?$CList@PAUIPacket133101@@PAU1@@@UAEPAXI@Z	; CList<IPacket133101 *,IPacket133101 *>::`scalar deleting destructor'
PUBLIC	??1CAutoTrendDrawingCalculatorData@@QAE@XZ	; CAutoTrendDrawingCalculatorData::~CAutoTrendDrawingCalculatorData
PUBLIC	??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@@Z ; CMainAutoTrendImplementation::CMainAutoTrendImplementation
PUBLIC	??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@PAVCWnd@@@Z ; CMainAutoTrendImplementation::CMainAutoTrendImplementation
PUBLIC	??1CMainAutoTrendImplementation@@UAE@XZ		; CMainAutoTrendImplementation::~CMainAutoTrendImplementation
PUBLIC	?SetProcessStarting@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@_N@Z ; CMainAutoTrendImplementation::SetProcessStarting
PUBLIC	?Set@CMainAutoTrendImplementation@@QAEXPAVCWnd@@PAUIChartManager133101@@PAUIPacketManager133101@@ABKH@Z ; CMainAutoTrendImplementation::Set
PUBLIC	?SetParent@CMainAutoTrendImplementation@@QAEXPAVCWnd@@@Z ; CMainAutoTrendImplementation::SetParent
PUBLIC	?SetMainBlock@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@@Z ; CMainAutoTrendImplementation::SetMainBlock
PUBLIC	?SetPacketList@CMainAutoTrendImplementation@@QAEXPAUIPacketManager133101@@@Z ; CMainAutoTrendImplementation::SetPacketList
PUBLIC	?SetPenColor@CMainAutoTrendImplementation@@QAEXABK@Z ; CMainAutoTrendImplementation::SetPenColor
PUBLIC	?SetPenThickness@CMainAutoTrendImplementation@@QAEXH@Z ; CMainAutoTrendImplementation::SetPenThickness
PUBLIC	?Calculate@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@W4CALCULATETYPE@CCalculateBaseData@@@Z ; CMainAutoTrendImplementation::Calculate
PUBLIC	?DoesProcessStarting@CMainAutoTrendImplementation@@QBE_NXZ ; CMainAutoTrendImplementation::DoesProcessStarting
PUBLIC	?OnRButtonUp@CMainAutoTrendImplementation@@QAE_NPAVCDC@@ABVCPoint@@@Z ; CMainAutoTrendImplementation::OnRButtonUp
PUBLIC	?OnMouseMove@CMainAutoTrendImplementation@@QAE_NPAVCDC@@ABVCPoint@@@Z ; CMainAutoTrendImplementation::OnMouseMove
PUBLIC	?OnDraw@CMainAutoTrendImplementation@@QAEXPAVCDC@@@Z ; CMainAutoTrendImplementation::OnDraw
PUBLIC	?Initialize@CMainAutoTrendImplementation@@AAEXPAUIChartManager133101@@_N@Z ; CMainAutoTrendImplementation::Initialize
PUBLIC	?DoesStarting@CMainAutoTrendImplementation@@ABE_NXZ ; CMainAutoTrendImplementation::DoesStarting
PUBLIC	?GetAutoTrendDrawingCalData@CMainAutoTrendImplementation@@ABE_NABVCPoint@@AAVCAutoTrendDrawingCalculatorData@@@Z ; CMainAutoTrendImplementation::GetAutoTrendDrawingCalData
PUBLIC	?EraseLastToolDrawing@CMainAutoTrendImplementation@@AAEXPAVCDC@@ABVCRect@@ABVCPoint@@@Z ; CMainAutoTrendImplementation::EraseLastToolDrawing
PUBLIC	?DrawNewToolDrawing@CMainAutoTrendImplementation@@AAEXPAVCDC@@ABVCAutoTrendDrawingCalculatorData@@ABVCPoint@@@Z ; CMainAutoTrendImplementation::DrawNewToolDrawing
PUBLIC	?SendMessageToParent@CMainAutoTrendImplementation@@AAEX_N@Z ; CMainAutoTrendImplementation::SendMessageToParent
PUBLIC	??_GCMainAutoTrendImplementation@@UAEPAXI@Z	; CMainAutoTrendImplementation::`scalar deleting destructor'
PUBLIC	??0CNonChartFormulate@@QAE@ABV0@@Z		; CNonChartFormulate::CNonChartFormulate
PUBLIC	??4CNonChartFormulate@@QAEAAV0@ABV0@@Z		; CNonChartFormulate::operator=
PUBLIC	??_GCNonChartFormulate@@UAEPAXI@Z		; CNonChartFormulate::`scalar deleting destructor'
PUBLIC	??_ECNonChartFormulate@@UAEPAXI@Z		; CNonChartFormulate::`vector deleting destructor'
PUBLIC	??$SerializeElements@PAUIPacket133101@@@@YGXAAVCArchive@@PAPAUIPacket133101@@H@Z ; SerializeElements<IPacket133101 *>
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CList@PAUIPacket133101@@PAU1@@@6B@	; CList<IPacket133101 *,IPacket133101 *>::`vftable'
PUBLIC	??_7CMainAutoTrendImplementation@@6B@		; CMainAutoTrendImplementation::`vftable'
PUBLIC	??_7CNonChartFormulate@@6B@			; CNonChartFormulate::`vftable'
PUBLIC	??_C@_09NJPAGIBN@AutoTrend@			; `string'
PUBLIC	??_C@_07MGCPDNLD@DEFAULT@			; `string'
PUBLIC	??_R4?$CList@PAUIPacket133101@@PAU1@@@6B@	; CList<IPacket133101 *,IPacket133101 *>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CList@PAUIPacket133101@@PAU1@@@@8	; CList<IPacket133101 *,IPacket133101 *> `RTTI Type Descriptor'
PUBLIC	??_R3?$CList@PAUIPacket133101@@PAU1@@@8		; CList<IPacket133101 *,IPacket133101 *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CList@PAUIPacket133101@@PAU1@@@8		; CList<IPacket133101 *,IPacket133101 *>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CList@PAUIPacket133101@@PAU1@@@8 ; CList<IPacket133101 *,IPacket133101 *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CMainAutoTrendImplementation@@6B@		; CMainAutoTrendImplementation::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMainAutoTrendImplementation@@@8	; CMainAutoTrendImplementation `RTTI Type Descriptor'
PUBLIC	??_R3CMainAutoTrendImplementation@@8		; CMainAutoTrendImplementation::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMainAutoTrendImplementation@@8		; CMainAutoTrendImplementation::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMainAutoTrendImplementation@@8	; CMainAutoTrendImplementation::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CNonChartFormulate@@6B@			; CNonChartFormulate::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCNonChartFormulate@@@8			; CNonChartFormulate `RTTI Type Descriptor'
PUBLIC	??_R3CNonChartFormulate@@8			; CNonChartFormulate::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CNonChartFormulate@@8			; CNonChartFormulate::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CNonChartFormulate@@8		; CNonChartFormulate::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	___std_terminate:PROC
EXTRN	__imp__RegisterWindowMessageA@4:PROC
EXTRN	__imp__PostMessageA@16:PROC
EXTRN	__imp__InvalidateRect@12:PROC
EXTRN	__imp__IsRectEmpty@4:PROC
EXTRN	__imp__PtInRect@12:PROC
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?AfxThrowArchiveException@@YGXHPBD@Z:PROC	; AfxThrowArchiveException
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CObject::GetRuntimeClass
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	?Read@CArchive@@QAEIPAXI@Z:PROC			; CArchive::Read
EXTRN	?Write@CArchive@@QAEXPBXI@Z:PROC		; CArchive::Write
EXTRN	?ReadCount@CArchive@@QAEKXZ:PROC		; CArchive::ReadCount
EXTRN	?WriteCount@CArchive@@QAEXK@Z:PROC		; CArchive::WriteCount
EXTRN	?Create@CPlex@@SGPAU1@AAPAU1@II@Z:PROC		; CPlex::Create
EXTRN	?FreeDataChain@CPlex@@QAEXXZ:PROC		; CPlex::FreeDataChain
EXTRN	??1CCoordinateCalculatorData@@QAE@XZ:PROC	; CCoordinateCalculatorData::~CCoordinateCalculatorData
EXTRN	?GetCoordinateCalculatorData@CCoordinateCalculatorData@@QAEXABVCPoint@@@Z:PROC ; CCoordinateCalculatorData::GetCoordinateCalculatorData
EXTRN	??0CAutoTrendDrawingCalculatorData@@QAE@PAUIChartManager133101@@@Z:PROC ; CAutoTrendDrawingCalculatorData::CAutoTrendDrawingCalculatorData
EXTRN	?Initialize@CAutoTrendDrawingCalculatorData@@QAEXPAUIChartManager133101@@@Z:PROC ; CAutoTrendDrawingCalculatorData::Initialize
EXTRN	?SetNoFrameGraphRegion@CAutoTrendDrawingCalculatorData@@QAEXABVCRect@@@Z:PROC ; CAutoTrendDrawingCalculatorData::SetNoFrameGraphRegion
EXTRN	?GetNoFrameGraphRegion@CAutoTrendDrawingCalculatorData@@QBE?AVCRect@@XZ:PROC ; CAutoTrendDrawingCalculatorData::GetNoFrameGraphRegion
EXTRN	?GetPacketList@CAutoTrendDrawingCalculatorData@@QAEAAV?$CList@PAUIPacket133101@@PAU1@@@XZ:PROC ; CAutoTrendDrawingCalculatorData::GetPacketList
EXTRN	?GetCoordinateCalculatorData@CAutoTrendDrawingCalculatorData@@QAEAAVCCoordinateCalculatorData@@XZ:PROC ; CAutoTrendDrawingCalculatorData::GetCoordinateCalculatorData
EXTRN	??_E?$CList@PAUIPacket133101@@PAU1@@@UAEPAXI@Z:PROC ; CList<IPacket133101 *,IPacket133101 *>::`vector deleting destructor'
EXTRN	??0CAutoTrendDrawer@@QAE@XZ:PROC		; CAutoTrendDrawer::CAutoTrendDrawer
EXTRN	?SetPenColor@CAutoTrendDrawer@@QAEXABK@Z:PROC	; CAutoTrendDrawer::SetPenColor
EXTRN	?SetPenThickness@CAutoTrendDrawer@@QAEXH@Z:PROC	; CAutoTrendDrawer::SetPenThickness
EXTRN	?Drawing@CAutoTrendDrawer@@QAE_NPAVCDC@@ABVCAutoTrendDrawingCalculatorData@@ABVCPoint@@H@Z:PROC ; CAutoTrendDrawer::Drawing
EXTRN	??_ECMainAutoTrendImplementation@@UAEPAXI@Z:PROC ; CMainAutoTrendImplementation::`vector deleting destructor'
EXTRN	??0CNonChartFormulate@@QAE@XZ:PROC		; CNonChartFormulate::CNonChartFormulate
EXTRN	??1CNonChartFormulate@@UAE@XZ:PROC		; CNonChartFormulate::~CNonChartFormulate
EXTRN	?GetAutoTrendData@CNonChartFormulate@@QBE_NW4CALCULATETYPE@CCalculateBaseData@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAUIPacketManager133101@@PAV?$CList@PAUIPacket133101@@PAU1@@@@Z:PROC ; CNonChartFormulate::GetAutoTrendData
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?g_iMetaTable@@3VIMetaTable@@A:BYTE		; g_iMetaTable
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?RMS_ANALYSIS_FUNC@@3IB DD 01H DUP (?)			; RMS_ANALYSIS_FUNC
_BSS	ENDS
CRT$XCU	SEGMENT
?RMS_ANALYSIS_FUNC$initializer$@@3P6AXXZA DD FLAT:??__ERMS_ANALYSIS_FUNC@@YAXXZ ; RMS_ANALYSIS_FUNC$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@CNonChartFormulate@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CNonChartFormulate@@8 DD FLAT:??_R0?AVCNonChartFormulate@@@8 ; CNonChartFormulate::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CNonChartFormulate@@8
rdata$r	ENDS
;	COMDAT ??_R2CNonChartFormulate@@8
rdata$r	SEGMENT
??_R2CNonChartFormulate@@8 DD FLAT:??_R1A@?0A@EA@CNonChartFormulate@@8 ; CNonChartFormulate::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CNonChartFormulate@@8
rdata$r	SEGMENT
??_R3CNonChartFormulate@@8 DD 00H			; CNonChartFormulate::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CNonChartFormulate@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCNonChartFormulate@@@8
data$rs	SEGMENT
??_R0?AVCNonChartFormulate@@@8 DD FLAT:??_7type_info@@6B@ ; CNonChartFormulate `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCNonChartFormulate@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CNonChartFormulate@@6B@
rdata$r	SEGMENT
??_R4CNonChartFormulate@@6B@ DD 00H			; CNonChartFormulate::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCNonChartFormulate@@@8
	DD	FLAT:??_R3CNonChartFormulate@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMainAutoTrendImplementation@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMainAutoTrendImplementation@@8 DD FLAT:??_R0?AVCMainAutoTrendImplementation@@@8 ; CMainAutoTrendImplementation::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMainAutoTrendImplementation@@8
rdata$r	ENDS
;	COMDAT ??_R2CMainAutoTrendImplementation@@8
rdata$r	SEGMENT
??_R2CMainAutoTrendImplementation@@8 DD FLAT:??_R1A@?0A@EA@CMainAutoTrendImplementation@@8 ; CMainAutoTrendImplementation::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMainAutoTrendImplementation@@8
rdata$r	SEGMENT
??_R3CMainAutoTrendImplementation@@8 DD 00H		; CMainAutoTrendImplementation::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMainAutoTrendImplementation@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMainAutoTrendImplementation@@@8
data$rs	SEGMENT
??_R0?AVCMainAutoTrendImplementation@@@8 DD FLAT:??_7type_info@@6B@ ; CMainAutoTrendImplementation `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMainAutoTrendImplementation@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CMainAutoTrendImplementation@@6B@
rdata$r	SEGMENT
??_R4CMainAutoTrendImplementation@@6B@ DD 00H		; CMainAutoTrendImplementation::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMainAutoTrendImplementation@@@8
	DD	FLAT:??_R3CMainAutoTrendImplementation@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CList@PAUIPacket133101@@PAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CList@PAUIPacket133101@@PAU1@@@8 DD FLAT:??_R0?AV?$CList@PAUIPacket133101@@PAU1@@@@8 ; CList<IPacket133101 *,IPacket133101 *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CList@PAUIPacket133101@@PAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CList@PAUIPacket133101@@PAU1@@@8
rdata$r	SEGMENT
??_R2?$CList@PAUIPacket133101@@PAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CList@PAUIPacket133101@@PAU1@@@8 ; CList<IPacket133101 *,IPacket133101 *>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CList@PAUIPacket133101@@PAU1@@@8
rdata$r	SEGMENT
??_R3?$CList@PAUIPacket133101@@PAU1@@@8 DD 00H		; CList<IPacket133101 *,IPacket133101 *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CList@PAUIPacket133101@@PAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CList@PAUIPacket133101@@PAU1@@@@8
data$rs	SEGMENT
??_R0?AV?$CList@PAUIPacket133101@@PAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CList<IPacket133101 *,IPacket133101 *> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CList@PAUIPacket133101@@PAU1@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CList@PAUIPacket133101@@PAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CList@PAUIPacket133101@@PAU1@@@6B@ DD 00H	; CList<IPacket133101 *,IPacket133101 *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CList@PAUIPacket133101@@PAU1@@@@8
	DD	FLAT:??_R3?$CList@PAUIPacket133101@@PAU1@@@8
rdata$r	ENDS
;	COMDAT ??_C@_07MGCPDNLD@DEFAULT@
CONST	SEGMENT
??_C@_07MGCPDNLD@DEFAULT@ DB 'DEFAULT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09NJPAGIBN@AutoTrend@
CONST	SEGMENT
??_C@_09NJPAGIBN@AutoTrend@ DB 'AutoTrend', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CNonChartFormulate@@6B@
CONST	SEGMENT
??_7CNonChartFormulate@@6B@ DD FLAT:??_R4CNonChartFormulate@@6B@ ; CNonChartFormulate::`vftable'
	DD	FLAT:??_ECNonChartFormulate@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CMainAutoTrendImplementation@@6B@
CONST	SEGMENT
??_7CMainAutoTrendImplementation@@6B@ DD FLAT:??_R4CMainAutoTrendImplementation@@6B@ ; CMainAutoTrendImplementation::`vftable'
	DD	FLAT:??_ECMainAutoTrendImplementation@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CList@PAUIPacket133101@@PAU1@@@6B@
CONST	SEGMENT
??_7?$CList@PAUIPacket133101@@PAU1@@@6B@ DD FLAT:??_R4?$CList@PAUIPacket133101@@PAU1@@@6B@ ; CList<IPacket133101 *,IPacket133101 *>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CList@PAUIPacket133101@@PAU1@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CList@PAUIPacket133101@@PAU1@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$rs	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$rs	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECNonChartFormulate@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GCMainAutoTrendImplementation@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
	DD	00H
	DD	FLAT:___std_terminate
__ehfuncinfo$??_GCMainAutoTrendImplementation@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_GCMainAutoTrendImplementation@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetAutoTrendDrawingCalData@CMainAutoTrendImplementation@@ABE_NABVCPoint@@AAVCAutoTrendDrawingCalculatorData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetAutoTrendDrawingCalData@CMainAutoTrendImplementation@@ABE_NABVCPoint@@AAVCAutoTrendDrawingCalculatorData@@@Z$0
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?GetAutoTrendDrawingCalData@CMainAutoTrendImplementation@@ABE_NABVCPoint@@AAVCAutoTrendDrawingCalculatorData@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetAutoTrendDrawingCalData@CMainAutoTrendImplementation@@ABE_NABVCPoint@@AAVCAutoTrendDrawingCalculatorData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?OnMouseMove@CMainAutoTrendImplementation@@QAE_NPAVCDC@@ABVCPoint@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?OnMouseMove@CMainAutoTrendImplementation@@QAE_NPAVCDC@@ABVCPoint@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?OnMouseMove@CMainAutoTrendImplementation@@QAE_NPAVCDC@@ABVCPoint@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnMouseMove@CMainAutoTrendImplementation@@QAE_NPAVCDC@@ABVCPoint@@@Z$0
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Calculate@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@W4CALCULATETYPE@CCalculateBaseData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Calculate@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@W4CALCULATETYPE@CCalculateBaseData@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Calculate@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@W4CALCULATETYPE@CCalculateBaseData@@@Z$1
__ehfuncinfo$?Calculate@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@W4CALCULATETYPE@CCalculateBaseData@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Calculate@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@W4CALCULATETYPE@CCalculateBaseData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetProcessStarting@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetProcessStarting@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SetProcessStarting@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@_N@Z$1
__ehfuncinfo$?SetProcessStarting@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetProcessStarting@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CMainAutoTrendImplementation@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1CMainAutoTrendImplementation@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CMainAutoTrendImplementation@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@PAVCWnd@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@PAVCWnd@@@Z$0
__ehfuncinfo$??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@PAVCWnd@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@PAVCWnd@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@@Z$0
__ehfuncinfo$??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CAutoTrendDrawingCalculatorData@@QAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1CAutoTrendDrawingCalculatorData@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CAutoTrendDrawingCalculatorData@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CList@PAUIPacket133101@@PAU1@@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CList@PAUIPacket133101@@PAU1@@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$CList@PAUIPacket133101@@PAU1@@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CList@PAUIPacket133101@@PAU1@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1ILPCSTR133101@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@PAUIPacket133101@@@@YGXAAVCArchive@@PAPAUIPacket133101@@H@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@PAUIPacket133101@@@@YGXAAVCArchive@@PAPAUIPacket133101@@H@Z PROC ; SerializeElements<IPacket133101 *>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b 75 10	 mov	 esi, DWORD PTR _nCount$[ebp]
  0000b	57		 push	 edi
  0000c	85 f6		 test	 esi, esi
  0000e	74 08		 je	 SHORT $LN2@SerializeE
  00010	85 c9		 test	 ecx, ecx
  00012	0f 84 89 00 00
	00		 je	 $LN34@SerializeE
$LN2@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00018	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  0001b	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0001e	f7 d0		 not	 eax
  00020	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  00022	74 3c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;
; 79   : 		pData = pElements;
; 80   : 		while( nElementsLeft > 0 )

  00024	85 f6		 test	 esi, esi
  00026	74 31		 je	 SHORT $LN8@SerializeE
  00028	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL5@SerializeE:

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00030	bb ff ff ff 1f	 mov	 ebx, 536870911		; 1fffffffH
  00035	3b f3		 cmp	 esi, ebx
  00037	0f 42 de	 cmovb	 ebx, esi

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0003a	8d 3c 9d 00 00
	00 00		 lea	 edi, DWORD PTR [ebx*4]
  00041	57		 push	 edi
  00042	51		 push	 ecx
  00043	8b ca		 mov	 ecx, edx
  00045	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;
; 87   : 			pData += nElementsToWrite;

  0004a	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00050	03 cf		 add	 ecx, edi
  00052	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  00055	2b f3		 sub	 esi, ebx
  00057	75 d7		 jne	 SHORT $LL5@SerializeE
$LN8@SerializeE:
  00059	5f		 pop	 edi

; 105  : 		}
; 106  : 	}
; 107  : }

  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	5d		 pop	 ebp
  0005d	c2 0c 00	 ret	 12			; 0000000cH
$LN10@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  00060	85 f6		 test	 esi, esi
  00062	74 f5		 je	 SHORT $LN8@SerializeE
$LL7@SerializeE:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00064	bf ff ff ff 1f	 mov	 edi, 536870911		; 1fffffffH
  00069	3b f7		 cmp	 esi, edi
  0006b	0f 42 fe	 cmovb	 edi, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0006e	8d 1c bd 00 00
	00 00		 lea	 ebx, DWORD PTR [edi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00075	53		 push	 ebx
  00076	51		 push	 ecx
  00077	8b ca		 mov	 ecx, edx
  00079	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0007e	3b c3		 cmp	 eax, ebx
  00080	75 16		 jne	 SHORT $LN23@SerializeE
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  00082	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00085	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;
; 104  : 			pData += nElementsToRead;

  00088	03 cb		 add	 ecx, ebx
  0008a	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  0008d	2b f7		 sub	 esi, edi
  0008f	75 d3		 jne	 SHORT $LL7@SerializeE

; 105  : 		}
; 106  : 	}
; 107  : }

  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	5d		 pop	 ebp
  00095	c2 0c 00	 ret	 12			; 0000000cH
$LN23@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 402  : 		AfxThrowArchiveException(CArchiveException::endOfFile);

  00098	6a 00		 push	 0
  0009a	6a 03		 push	 3
  0009c	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN34@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  000a1	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN32@SerializeE:
  000a6	cc		 int	 3
??$SerializeElements@PAUIPacket133101@@@@YGXAAVCArchive@@PAPAUIPacket133101@@H@Z ENDP ; SerializeElements<IPacket133101 *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_ECNonChartFormulate@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECNonChartFormulate@@UAEPAXI@Z PROC			; CNonChartFormulate::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECNonChartFormulate@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002a	8b d8		 mov	 ebx, eax
  0002c	83 e3 01	 and	 ebx, 1
  0002f	a8 02		 test	 al, 2
  00031	74 40		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CNonChartFormulate@@UAE@XZ ; CNonChartFormulate::~CNonChartFormulate
  00038	ff 76 fc	 push	 DWORD PTR [esi-4]
  0003b	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003e	6a 08		 push	 8
  00040	56		 push	 esi
  00041	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00046	85 db		 test	 ebx, ebx
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0004c	8d 0c cd 04 00
	00 00		 lea	 ecx, DWORD PTR [ecx*8+4]
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	e8 00 00 00 00	 call	 ??1CNonChartFormulate@@UAE@XZ ; CNonChartFormulate::~CNonChartFormulate
  00078	85 db		 test	 ebx, ebx
  0007a	74 0b		 je	 SHORT $LN4@vector
  0007c	6a 08		 push	 8
  0007e	56		 push	 esi
  0007f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00084	83 c4 08	 add	 esp, 8
$LN4@vector:
  00087	8b c6		 mov	 eax, esi
  00089	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00093	59		 pop	 ecx
  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 04 00	 ret	 4
  0009d	cc		 int	 3
  0009e	cc		 int	 3
  0009f	cc		 int	 3
  000a0	cc		 int	 3
  000a1	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECNonChartFormulate@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECNonChartFormulate@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECNonChartFormulate@@UAEPAXI@Z ENDP			; CNonChartFormulate::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??_GCNonChartFormulate@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCNonChartFormulate@@UAEPAXI@Z PROC			; CNonChartFormulate::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CNonChartFormulate@@UAE@XZ ; CNonChartFormulate::~CNonChartFormulate
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 08		 push	 8
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCNonChartFormulate@@UAEPAXI@Z ENDP			; CNonChartFormulate::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4CNonChartFormulate@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CNonChartFormulate@@QAEAAV0@ABV0@@Z PROC		; CNonChartFormulate::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00009	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0000c	8b c1		 mov	 eax, ecx
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
??4CNonChartFormulate@@QAEAAV0@ABV0@@Z ENDP		; CNonChartFormulate::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0CNonChartFormulate@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0CNonChartFormulate@@QAE@ABV0@@Z PROC			; CNonChartFormulate::CNonChartFormulate, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CNonChartFormulate@@6B@
  0000c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000f	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00012	8b c1		 mov	 eax, ecx
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0CNonChartFormulate@@QAE@ABV0@@Z ENDP			; CNonChartFormulate::CNonChartFormulate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Chart\MessageDefine.h
;	COMDAT ??__ERMS_ANALYSIS_FUNC@@YAXXZ
text$di	SEGMENT
??__ERMS_ANALYSIS_FUNC@@YAXXZ PROC			; `dynamic initializer for 'RMS_ANALYSIS_FUNC'', COMDAT

; 5    : const UINT RMS_ANALYSIS_FUNC = ::RegisterWindowMessage(_T("RMS_ANALYSIS_FUNC"));

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MMPGLPDH@RMS_ANALYSIS_FUNC@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMS_ANALYSIS_FUNC@@3IB, eax
  00010	c3		 ret	 0
??__ERMS_ANALYSIS_FUNC@@YAXXZ ENDP			; `dynamic initializer for 'RMS_ANALYSIS_FUNC''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??_GCMainAutoTrendImplementation@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GCMainAutoTrendImplementation@@UAEPAXI@Z PROC	; CMainAutoTrendImplementation::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GCMainAutoTrendImplementation@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 47   : 	if( m_pIChartManager) m_pIChartManager->Release();

  00025	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMainAutoTrendImplementation@@6B@
  00035	85 c9		 test	 ecx, ecx
  00037	74 06		 je	 SHORT $LN5@scalar
  00039	8b 01		 mov	 eax, DWORD PTR [ecx]
  0003b	51		 push	 ecx
  0003c	ff 50 08	 call	 DWORD PTR [eax+8]
$LN5@scalar:

; 48   : 	if( m_pPacketList) m_pPacketList->Release();

  0003f	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00042	85 c9		 test	 ecx, ecx
  00044	74 06		 je	 SHORT $LN6@scalar
  00046	8b 01		 mov	 eax, DWORD PTR [ecx]
  00048	51		 push	 ecx
  00049	ff 50 08	 call	 DWORD PTR [eax+8]
$LN6@scalar:

; 49   : }

  0004c	8d 4e 50	 lea	 ecx, DWORD PTR [esi+80]
  0004f	e8 00 00 00 00	 call	 ??1CCoordinateCalculatorData@@QAE@XZ ; CCoordinateCalculatorData::~CCoordinateCalculatorData
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 872  : 	m_pBlocks->FreeDataChain();

  00054	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]

; 878  : {

  00057	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0005b	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], OFFSET ??_7?$CList@PAUIPacket133101@@PAU1@@@6B@

; 870  : 	m_nCount = 0;

  00062	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0

; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  00069	c7 46 40 00 00
	00 00		 mov	 DWORD PTR [esi+64], 0
  00070	c7 46 38 00 00
	00 00		 mov	 DWORD PTR [esi+56], 0
  00077	c7 46 34 00 00
	00 00		 mov	 DWORD PTR [esi+52], 0

; 872  : 	m_pBlocks->FreeDataChain();

  0007e	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain
  00083	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1

; 873  : 	m_pBlocks = NULL;

  00087	c7 46 44 00 00
	00 00		 mov	 DWORD PTR [esi+68], 0
  0008e	74 0e		 je	 SHORT $LN25@scalar
  00090	68 d0 00 00 00	 push	 208			; 000000d0H
  00095	56		 push	 esi
  00096	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0009b	83 c4 08	 add	 esp, 8
$LN25@scalar:
  0009e	8b c6		 mov	 eax, esi
  000a0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000aa	59		 pop	 ecx
  000ab	5e		 pop	 esi
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
  000b2	cc		 int	 3
  000b3	cc		 int	 3
  000b4	cc		 int	 3
  000b5	cc		 int	 3
  000b6	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_GCMainAutoTrendImplementation@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GCMainAutoTrendImplementation@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GCMainAutoTrendImplementation@@UAEPAXI@Z ENDP	; CMainAutoTrendImplementation::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ?SendMessageToParent@CMainAutoTrendImplementation@@AAEX_N@Z
_TEXT	SEGMENT
_bIsProcessStarting$ = 8				; size = 1
?SendMessageToParent@CMainAutoTrendImplementation@@AAEX_N@Z PROC ; CMainAutoTrendImplementation::SendMessageToParent, COMDAT
; _this$ = ecx

; 229  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 230  : 	if(m_pParent == NULL)

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	85 c0		 test	 eax, eax
  00008	74 2c		 je	 SHORT $LN4@SendMessag

; 231  : 		return;
; 232  : 
; 233  : 	if(bIsProcessStarting)

  0000a	80 7d 08 00	 cmp	 BYTE PTR _bIsProcessStarting$[ebp], 0
  0000e	6a 00		 push	 0
  00010	74 14		 je	 SHORT $LN3@SendMessag
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 39   : 	{ ASSERT(::IsWindow(m_hWnd)); return ::PostMessage(m_hWnd, message, wParam, lParam); }

  00012	6a 0a		 push	 10			; 0000000aH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 237  : }

  00014	68 09 06 00 00	 push	 1545			; 00000609H
  00019	ff 70 20	 push	 DWORD PTR [eax+32]
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
$LN3@SendMessag:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 39   : 	{ ASSERT(::IsWindow(m_hWnd)); return ::PostMessage(m_hWnd, message, wParam, lParam); }

  00026	6a 00		 push	 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 237  : }

  00028	68 09 06 00 00	 push	 1545			; 00000609H
  0002d	ff 70 20	 push	 DWORD PTR [eax+32]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16
$LN4@SendMessag:
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?SendMessageToParent@CMainAutoTrendImplementation@@AAEX_N@Z ENDP ; CMainAutoTrendImplementation::SendMessageToParent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ?DrawNewToolDrawing@CMainAutoTrendImplementation@@AAEXPAVCDC@@ABVCAutoTrendDrawingCalculatorData@@ABVCPoint@@@Z
_TEXT	SEGMENT
_pDC$ = 8						; size = 4
_calData$ = 12						; size = 4
_point$ = 16						; size = 4
?DrawNewToolDrawing@CMainAutoTrendImplementation@@AAEXPAVCDC@@ABVCAutoTrendDrawingCalculatorData@@ABVCPoint@@@Z PROC ; CMainAutoTrendImplementation::DrawNewToolDrawing, COMDAT
; _this$ = ecx

; 217  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 218  : 	if(!m_bPrevPointUsed)

  00003	8b 55 08	 mov	 edx, DWORD PTR _pDC$[ebp]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _calData$[ebp]
  0000e	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  00012	75 06		 jne	 SHORT $LN2@DrawNewToo

; 219  : 		m_bPrevPointUsed = true;

  00014	c6 47 15 01	 mov	 BYTE PTR [edi+21], 1
  00018	eb 19		 jmp	 SHORT $LN3@DrawNewToo
$LN2@DrawNewToo:

; 220  : 	else
; 221  : 		m_drawer.Drawing(pDC, calData, m_prevPoint, R2_NOT);

  0001a	6a 06		 push	 6
  0001c	8d 47 18	 lea	 eax, DWORD PTR [edi+24]
  0001f	50		 push	 eax
  00020	51		 push	 ecx
  00021	52		 push	 edx
  00022	8d 8f b0 00 00
	00		 lea	 ecx, DWORD PTR [edi+176]
  00028	e8 00 00 00 00	 call	 ?Drawing@CAutoTrendDrawer@@QAE_NPAVCDC@@ABVCAutoTrendDrawingCalculatorData@@ABVCPoint@@H@Z ; CAutoTrendDrawer::Drawing
  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR _calData$[ebp]
  00030	8b 55 08	 mov	 edx, DWORD PTR _pDC$[ebp]
$LN3@DrawNewToo:

; 222  : 
; 223  : 	m_drawer.Drawing(pDC, calData, point, R2_NOT);

  00033	8b 75 10	 mov	 esi, DWORD PTR _point$[ebp]
  00036	6a 06		 push	 6
  00038	56		 push	 esi
  00039	51		 push	 ecx
  0003a	52		 push	 edx
  0003b	8d 8f b0 00 00
	00		 lea	 ecx, DWORD PTR [edi+176]
  00041	e8 00 00 00 00	 call	 ?Drawing@CAutoTrendDrawer@@QAE_NPAVCDC@@ABVCAutoTrendDrawingCalculatorData@@ABVCPoint@@H@Z ; CAutoTrendDrawer::Drawing

; 224  : 	m_prevPoint = point;

  00046	8b 06		 mov	 eax, DWORD PTR [esi]
  00048	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0004b	89 47 18	 mov	 DWORD PTR [edi+24], eax
  0004e	89 4f 1c	 mov	 DWORD PTR [edi+28], ecx
  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx

; 225  : }

  00054	5d		 pop	 ebp
  00055	c2 0c 00	 ret	 12			; 0000000cH
?DrawNewToolDrawing@CMainAutoTrendImplementation@@AAEXPAVCDC@@ABVCAutoTrendDrawingCalculatorData@@ABVCPoint@@@Z ENDP ; CMainAutoTrendImplementation::DrawNewToolDrawing
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ?EraseLastToolDrawing@CMainAutoTrendImplementation@@AAEXPAVCDC@@ABVCRect@@ABVCPoint@@@Z
_TEXT	SEGMENT
_pDC$ = 8						; size = 4
_noFrameGraphRegion$ = 12				; size = 4
_point$ = 16						; size = 4
?EraseLastToolDrawing@CMainAutoTrendImplementation@@AAEXPAVCDC@@ABVCRect@@ABVCPoint@@@Z PROC ; CMainAutoTrendImplementation::EraseLastToolDrawing, COMDAT
; _this$ = ecx

; 204  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 205  : 	if(!m_bPrevPointUsed)

  00006	80 7e 15 00	 cmp	 BYTE PTR [esi+21], 0
  0000a	74 59		 je	 SHORT $LN11@EraseLastT

; 208  : 	if(noFrameGraphRegion.PtInRect(point) && noFrameGraphRegion.PtInRect(m_prevPoint))

  0000c	8b 45 10	 mov	 eax, DWORD PTR _point$[ebp]
  0000f	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 648  : 	return ::PtInRect(this, point);

  00010	8d 7e 18	 lea	 edi, DWORD PTR [esi+24]
  00013	ff 70 04	 push	 DWORD PTR [eax+4]
  00016	ff 30		 push	 DWORD PTR [eax]
  00018	ff 75 0c	 push	 DWORD PTR _noFrameGraphRegion$[ebp]
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 208  : 	if(noFrameGraphRegion.PtInRect(point) && noFrameGraphRegion.PtInRect(m_prevPoint))

  00021	85 c0		 test	 eax, eax
  00023	74 12		 je	 SHORT $LN15@EraseLastT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 648  : 	return ::PtInRect(this, point);

  00025	ff 77 04	 push	 DWORD PTR [edi+4]
  00028	ff 37		 push	 DWORD PTR [edi]
  0002a	ff 75 0c	 push	 DWORD PTR _noFrameGraphRegion$[ebp]
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 208  : 	if(noFrameGraphRegion.PtInRect(point) && noFrameGraphRegion.PtInRect(m_prevPoint))

  00033	85 c0		 test	 eax, eax
  00035	75 2d		 jne	 SHORT $LN16@EraseLastT
$LN15@EraseLastT:

; 209  : 		return;
; 210  : 
; 211  : 	m_drawer.Drawing(pDC, m_calData, m_prevPoint, R2_NOT);

  00037	6a 06		 push	 6
  00039	57		 push	 edi
  0003a	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  0003d	50		 push	 eax
  0003e	ff 75 08	 push	 DWORD PTR _pDC$[ebp]
  00041	8d 8e b0 00 00
	00		 lea	 ecx, DWORD PTR [esi+176]
  00047	e8 00 00 00 00	 call	 ?Drawing@CAutoTrendDrawer@@QAE_NPAVCDC@@ABVCAutoTrendDrawingCalculatorData@@ABVCPoint@@H@Z ; CAutoTrendDrawer::Drawing

; 168  : 	if(m_pParent != NULL)

  0004c	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0004f	c6 46 15 00	 mov	 BYTE PTR [esi+21], 0
  00053	85 c0		 test	 eax, eax
  00055	74 0d		 je	 SHORT $LN16@EraseLastT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 114  : 	{ ASSERT(::IsWindow(m_hWnd)); ::InvalidateRect(m_hWnd, NULL, bErase); }

  00057	6a 01		 push	 1
  00059	6a 00		 push	 0
  0005b	ff 70 20	 push	 DWORD PTR [eax+32]
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InvalidateRect@12
$LN16@EraseLastT:
  00064	5f		 pop	 edi
$LN11@EraseLastT:
  00065	5e		 pop	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 213  : }

  00066	5d		 pop	 ebp
  00067	c2 0c 00	 ret	 12			; 0000000cH
?EraseLastToolDrawing@CMainAutoTrendImplementation@@AAEXPAVCDC@@ABVCRect@@ABVCPoint@@@Z ENDP ; CMainAutoTrendImplementation::EraseLastToolDrawing
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_AddIn_133101\I133101\_IString.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_AddIn_133101\I133101\_IString.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_AddIn_133101\I133101\_IString.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ?GetAutoTrendDrawingCalData@CMainAutoTrendImplementation@@ABE_NABVCPoint@@AAVCAutoTrendDrawingCalculatorData@@@Z
_TEXT	SEGMENT
_nV$ = -76						; size = 4
_nG$ = -72						; size = 4
_szGraphName$ = -68					; size = 8
_calData$GSCopy$1$ = -60				; size = 4
_nRow$ = -56						; size = 4
_nColumn$ = -52						; size = 4
_rctNoFrameAndMargin$ = -48				; size = 16
_region$ = -32						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_point$ = 8						; size = 4
_calData$ = 12						; size = 4
?GetAutoTrendDrawingCalData@CMainAutoTrendImplementation@@ABE_NABVCPoint@@AAVCAutoTrendDrawingCalculatorData@@@Z PROC ; CMainAutoTrendImplementation::GetAutoTrendDrawingCalData, COMDAT
; _this$ = ecx

; 179  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetAutoTrendDrawingCalData@CMainAutoTrendImplementation@@ABE_NABVCPoint@@AAVCAutoTrendDrawingCalculatorData@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 40	 sub	 esp, 64			; 00000040H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx

; 180  : 	if(m_pIChartManager == NULL)

  0002d	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00030	8b 45 0c	 mov	 eax, DWORD PTR _calData$[ebp]
  00033	8b 5d 08	 mov	 ebx, DWORD PTR _point$[ebp]
  00036	89 45 c4	 mov	 DWORD PTR _calData$GSCopy$1$[ebp], eax
  00039	85 c9		 test	 ecx, ecx
  0003b	75 07		 jne	 SHORT $LN2@GetAutoTre

; 181  : 		return false;

  0003d	32 c0		 xor	 al, al
  0003f	e9 0f 01 00 00	 jmp	 $LN1@GetAutoTre
$LN2@GetAutoTre:

; 184  : 	ILPCSTR szGraphName = m_pIChartManager->FindFirstIndicator( _MTEXT( C2_PRICE_CHART), nRow, nColumn, nV, nG, "DEFAULT");

  00044	8b 11		 mov	 edx, DWORD PTR [ecx]
  00046	8d 45 b8	 lea	 eax, DWORD PTR _nG$[ebp]
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_07MGCPDNLD@DEFAULT@
  0004e	50		 push	 eax
  0004f	8d 45 b4	 lea	 eax, DWORD PTR _nV$[ebp]
  00052	50		 push	 eax
  00053	8d 45 cc	 lea	 eax, DWORD PTR _nColumn$[ebp]
  00056	50		 push	 eax
  00057	8d 45 c8	 lea	 eax, DWORD PTR _nRow$[ebp]
  0005a	50		 push	 eax
  0005b	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  00060	ff b0 28 03 00
	00		 push	 DWORD PTR [eax+808]
  00066	ff 52 70	 call	 DWORD PTR [edx+112]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_AddIn_133101\I133101\_IString.h

; 39   : 		m_pIStrData = p_pIString;	// Do not AddRef(). Because It must be Return Value.

  00069	8b f0		 mov	 esi, eax
  0006b	89 75 c0	 mov	 DWORD PTR _szGraphName$[ebp+4], esi

; 40   : 		if( m_pIStrData) m_szData = m_pIStrData->GetData();

  0006e	85 f6		 test	 esi, esi
  00070	74 09		 je	 SHORT $LN13@GetAutoTre
  00072	8b 16		 mov	 edx, DWORD PTR [esi]
  00074	8b ce		 mov	 ecx, esi
  00076	ff 52 10	 call	 DWORD PTR [edx+16]
  00079	eb 02		 jmp	 SHORT $LN46@GetAutoTre
$LN13@GetAutoTre:

; 41   : 		else m_szData = NULL;

  0007b	33 c0		 xor	 eax, eax
$LN46@GetAutoTre:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 184  : 	ILPCSTR szGraphName = m_pIChartManager->FindFirstIndicator( _MTEXT( C2_PRICE_CHART), nRow, nColumn, nV, nG, "DEFAULT");

  0007d	89 45 bc	 mov	 DWORD PTR _szGraphName$[ebp], eax
  00080	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_AddIn_133101\I133101\_IString.h

; 57   : 		if( !m_szData) return TRUE;

  00087	85 c0		 test	 eax, eax
  00089	0f 84 af 00 00
	00		 je	 $LN6@GetAutoTre
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 185  : 	if( szGraphName.IsEmpty()) return false;

  0008f	80 38 00	 cmp	 BYTE PTR [eax], 0
  00092	0f 84 a6 00 00
	00		 je	 $LN6@GetAutoTre

; 186  : 	IBlock *pIBlock = m_pIChartManager->GetBlock( nRow, nColumn);

  00098	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0009b	ff 75 cc	 push	 DWORD PTR _nColumn$[ebp]
  0009e	ff 75 c8	 push	 DWORD PTR _nRow$[ebp]
  000a1	8b 01		 mov	 eax, DWORD PTR [ecx]
  000a3	ff 50 38	 call	 DWORD PTR [eax+56]
  000a6	8b f8		 mov	 edi, eax

; 187  : 	if( !pIBlock) return false;

  000a8	85 ff		 test	 edi, edi
  000aa	0f 84 8e 00 00
	00		 je	 $LN6@GetAutoTre

; 189  : 	pIBlock->GetGraphRegions( region, rctNoFrameAndMargin);

  000b0	8d 4d d0	 lea	 ecx, DWORD PTR _rctNoFrameAndMargin$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  000b3	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _region$[ebp], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 189  : 	pIBlock->GetGraphRegions( region, rctNoFrameAndMargin);

  000ba	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  000bb	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _rctNoFrameAndMargin$[ebp], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 189  : 	pIBlock->GetGraphRegions( region, rctNoFrameAndMargin);

  000c2	8d 4d e0	 lea	 ecx, DWORD PTR _region$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  000c5	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _region$[ebp+4], 0
  000cc	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _rctNoFrameAndMargin$[ebp+4], 0
  000d3	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _region$[ebp+8], 0
  000da	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _rctNoFrameAndMargin$[ebp+8], 0
  000e1	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _region$[ebp+12], 0
  000e8	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _rctNoFrameAndMargin$[ebp+12], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 189  : 	pIBlock->GetGraphRegions( region, rctNoFrameAndMargin);

  000ef	8b 07		 mov	 eax, DWORD PTR [edi]
  000f1	51		 push	 ecx
  000f2	8b cf		 mov	 ecx, edi
  000f4	ff 50 10	 call	 DWORD PTR [eax+16]

; 190  : 	pIBlock->Release();

  000f7	8b 07		 mov	 eax, DWORD PTR [edi]
  000f9	57		 push	 edi
  000fa	ff 50 08	 call	 DWORD PTR [eax+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 638  : 	return ::IsRectEmpty(this);

  000fd	8d 45 e0	 lea	 eax, DWORD PTR _region$[ebp]
  00100	50		 push	 eax
  00101	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsRectEmpty@4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 193  : 	if(region.IsRectEmpty() || !region.PtInRect(point))

  00107	85 c0		 test	 eax, eax
  00109	75 33		 jne	 SHORT $LN6@GetAutoTre
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 648  : 	return ::PtInRect(this, point);

  0010b	ff 73 04	 push	 DWORD PTR [ebx+4]
  0010e	8d 45 e0	 lea	 eax, DWORD PTR _region$[ebp]
  00111	ff 33		 push	 DWORD PTR [ebx]
  00113	50		 push	 eax
  00114	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 193  : 	if(region.IsRectEmpty() || !region.PtInRect(point))

  0011a	85 c0		 test	 eax, eax
  0011c	74 20		 je	 SHORT $LN6@GetAutoTre

; 194  : 		return false;
; 195  : 
; 196  : 	calData.SetNoFrameGraphRegion(region);

  0011e	8b 4d c4	 mov	 ecx, DWORD PTR _calData$GSCopy$1$[ebp]
  00121	8d 45 e0	 lea	 eax, DWORD PTR _region$[ebp]
  00124	50		 push	 eax
  00125	e8 00 00 00 00	 call	 ?SetNoFrameGraphRegion@CAutoTrendDrawingCalculatorData@@QAEXABVCRect@@@Z ; CAutoTrendDrawingCalculatorData::SetNoFrameGraphRegion

; 197  : 	calData.GetCoordinateCalculatorData().GetCoordinateCalculatorData( point);

  0012a	8b 4d c4	 mov	 ecx, DWORD PTR _calData$GSCopy$1$[ebp]
  0012d	53		 push	 ebx
  0012e	e8 00 00 00 00	 call	 ?GetCoordinateCalculatorData@CAutoTrendDrawingCalculatorData@@QAEAAVCCoordinateCalculatorData@@XZ ; CAutoTrendDrawingCalculatorData::GetCoordinateCalculatorData
  00133	8b c8		 mov	 ecx, eax
  00135	e8 00 00 00 00	 call	 ?GetCoordinateCalculatorData@CCoordinateCalculatorData@@QAEXABVCPoint@@@Z ; CCoordinateCalculatorData::GetCoordinateCalculatorData

; 198  : 	return true;

  0013a	b3 01		 mov	 bl, 1
  0013c	eb 02		 jmp	 SHORT $LN11@GetAutoTre
$LN6@GetAutoTre:
  0013e	32 db		 xor	 bl, bl
$LN11@GetAutoTre:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_AddIn_133101\I133101\_IString.h

; 44   : 	{

  00140	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 45   : 		if( m_pIStrData)

  00147	85 f6		 test	 esi, esi
  00149	74 06		 je	 SHORT $LN28@GetAutoTre

; 46   : 		{
; 47   : 			m_pIStrData->Release();

  0014b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0014d	56		 push	 esi
  0014e	ff 51 08	 call	 DWORD PTR [ecx+8]
$LN28@GetAutoTre:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 198  : 	return true;

  00151	8a c3		 mov	 al, bl
$LN1@GetAutoTre:

; 199  : }

  00153	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00156	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0015d	59		 pop	 ecx
  0015e	5f		 pop	 edi
  0015f	5e		 pop	 esi
  00160	5b		 pop	 ebx
  00161	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00164	33 cd		 xor	 ecx, ebp
  00166	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0016b	8b e5		 mov	 esp, ebp
  0016d	5d		 pop	 ebp
  0016e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetAutoTrendDrawingCalData@CMainAutoTrendImplementation@@ABE_NABVCPoint@@AAVCAutoTrendDrawingCalculatorData@@@Z$0:
  00000	8d 4d bc	 lea	 ecx, DWORD PTR _szGraphName$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ILPCSTR133101@@QAE@XZ ; ILPCSTR133101::~ILPCSTR133101
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?GetAutoTrendDrawingCalData@CMainAutoTrendImplementation@@ABE_NABVCPoint@@AAVCAutoTrendDrawingCalculatorData@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a b0	 mov	 ecx, DWORD PTR [edx-80]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetAutoTrendDrawingCalData@CMainAutoTrendImplementation@@ABE_NABVCPoint@@AAVCAutoTrendDrawingCalculatorData@@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetAutoTrendDrawingCalData@CMainAutoTrendImplementation@@ABE_NABVCPoint@@AAVCAutoTrendDrawingCalculatorData@@@Z ENDP ; CMainAutoTrendImplementation::GetAutoTrendDrawingCalData
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ?DoesStarting@CMainAutoTrendImplementation@@ABE_NXZ
_TEXT	SEGMENT
?DoesStarting@CMainAutoTrendImplementation@@ABE_NXZ PROC ; CMainAutoTrendImplementation::DoesStarting, COMDAT
; _this$ = ecx

; 175  : 	return (m_bProcessStarting && m_pIChartManager != NULL && m_pPacketList != NULL);

  00000	80 79 14 00	 cmp	 BYTE PTR [ecx+20], 0
  00004	74 0f		 je	 SHORT $LN3@DoesStarti
  00006	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  0000a	74 09		 je	 SHORT $LN3@DoesStarti
  0000c	83 79 10 00	 cmp	 DWORD PTR [ecx+16], 0
  00010	74 03		 je	 SHORT $LN3@DoesStarti
  00012	b0 01		 mov	 al, 1

; 176  : }

  00014	c3		 ret	 0
$LN3@DoesStarti:

; 175  : 	return (m_bProcessStarting && m_pIChartManager != NULL && m_pPacketList != NULL);

  00015	32 c0		 xor	 al, al

; 176  : }

  00017	c3		 ret	 0
?DoesStarting@CMainAutoTrendImplementation@@ABE_NXZ ENDP ; CMainAutoTrendImplementation::DoesStarting
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ?Initialize@CMainAutoTrendImplementation@@AAEXPAUIChartManager133101@@_N@Z
_TEXT	SEGMENT
_p_pIChartManager$ = 8					; size = 4
_bIsAllData$ = 12					; size = 1
?Initialize@CMainAutoTrendImplementation@@AAEXPAUIChartManager133101@@_N@Z PROC ; CMainAutoTrendImplementation::Initialize, COMDAT
; _this$ = ecx

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 164  : 	m_bPrevPointUsed = false;
; 165  : 	if(bIsAllData)

  00003	80 7d 0c 00	 cmp	 BYTE PTR _bIsAllData$[ebp], 0
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c6 46 15 00	 mov	 BYTE PTR [esi+21], 0
  0000e	74 0b		 je	 SHORT $LN2@Initialize

; 166  : 		m_calData.Initialize( p_pIChartManager);

  00010	ff 75 08	 push	 DWORD PTR _p_pIChartManager$[ebp]
  00013	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  00016	e8 00 00 00 00	 call	 ?Initialize@CAutoTrendDrawingCalculatorData@@QAEXPAUIChartManager133101@@@Z ; CAutoTrendDrawingCalculatorData::Initialize
$LN2@Initialize:

; 167  : 
; 168  : 	if(m_pParent != NULL)

  0001b	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0001e	5e		 pop	 esi
  0001f	85 c0		 test	 eax, eax
  00021	74 0d		 je	 SHORT $LN3@Initialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 114  : 	{ ASSERT(::IsWindow(m_hWnd)); ::InvalidateRect(m_hWnd, NULL, bErase); }

  00023	6a 01		 push	 1
  00025	6a 00		 push	 0
  00027	ff 70 20	 push	 DWORD PTR [eax+32]
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InvalidateRect@12
$LN3@Initialize:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 170  : }

  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
?Initialize@CMainAutoTrendImplementation@@AAEXPAUIChartManager133101@@_N@Z ENDP ; CMainAutoTrendImplementation::Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ?OnDraw@CMainAutoTrendImplementation@@QAEXPAVCDC@@@Z
_TEXT	SEGMENT
_pDC$ = 8						; size = 4
?OnDraw@CMainAutoTrendImplementation@@QAEXPAVCDC@@@Z PROC ; CMainAutoTrendImplementation::OnDraw, COMDAT
; _this$ = ecx

; 153  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 175  : 	return (m_bProcessStarting && m_pIChartManager != NULL && m_pPacketList != NULL);

  00003	80 79 14 00	 cmp	 BYTE PTR [ecx+20], 0
  00007	74 2a		 je	 SHORT $LN3@OnDraw
  00009	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  0000d	74 24		 je	 SHORT $LN3@OnDraw
  0000f	83 79 10 00	 cmp	 DWORD PTR [ecx+16], 0
  00013	74 1e		 je	 SHORT $LN3@OnDraw

; 154  : 	if(!DoesStarting() || !m_bPrevPointUsed)

  00015	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00019	74 18		 je	 SHORT $LN3@OnDraw

; 155  : 		return;
; 156  : 
; 157  : 	m_drawer.Drawing(pDC, m_calData, m_prevPoint, R2_NOT);

  0001b	6a 06		 push	 6
  0001d	8d 41 18	 lea	 eax, DWORD PTR [ecx+24]
  00020	50		 push	 eax
  00021	8d 41 20	 lea	 eax, DWORD PTR [ecx+32]
  00024	81 c1 b0 00 00
	00		 add	 ecx, 176		; 000000b0H
  0002a	50		 push	 eax
  0002b	ff 75 08	 push	 DWORD PTR _pDC$[ebp]
  0002e	e8 00 00 00 00	 call	 ?Drawing@CAutoTrendDrawer@@QAE_NPAVCDC@@ABVCAutoTrendDrawingCalculatorData@@ABVCPoint@@H@Z ; CAutoTrendDrawer::Drawing
$LN3@OnDraw:

; 158  : }

  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
?OnDraw@CMainAutoTrendImplementation@@QAEXPAVCDC@@@Z ENDP ; CMainAutoTrendImplementation::OnDraw
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_AddIn_133101\I133101\_IString.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_AddIn_133101\I133101\_IString.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_AddIn_133101\I133101\_IString.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_AddIn_133101\I133101\_IString.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_AddIn_133101\I133101\_IString.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_AddIn_133101\I133101\_IString.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ?OnMouseMove@CMainAutoTrendImplementation@@QAE_NPAVCDC@@ABVCPoint@@@Z
_TEXT	SEGMENT
_nV$2 = -92						; size = 4
_nG$3 = -88						; size = 4
_nRow$4 = -84						; size = 4
_nColumn$5 = -80					; size = 4
_point$GSCopy$1$ = -76					; size = 4
_pIBlock$1$ = -72					; size = 4
_noFrameGraphRegion$1$ = -72				; size = 4
_pDC$GSCopy$1$ = -68					; size = 4
$T6 = -64						; size = 16
_szGraphName$7 = -56					; size = 8
_rctNoFrameAndMargin$8 = -48				; size = 16
_region$9 = -32						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pDC$ = 8						; size = 4
_point$ = 12						; size = 4
?OnMouseMove@CMainAutoTrendImplementation@@QAE_NPAVCDC@@ABVCPoint@@@Z PROC ; CMainAutoTrendImplementation::OnMouseMove, COMDAT
; _this$ = ecx

; 139  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnMouseMove@CMainAutoTrendImplementation@@QAE_NPAVCDC@@ABVCPoint@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f1		 mov	 esi, ecx

; 175  : 	return (m_bProcessStarting && m_pIChartManager != NULL && m_pPacketList != NULL);

  0002d	80 7e 14 00	 cmp	 BYTE PTR [esi+20], 0

; 139  : {

  00031	8b 45 08	 mov	 eax, DWORD PTR _pDC$[ebp]
  00034	8b 5d 0c	 mov	 ebx, DWORD PTR _point$[ebp]
  00037	89 45 bc	 mov	 DWORD PTR _pDC$GSCopy$1$[ebp], eax
  0003a	89 5d b4	 mov	 DWORD PTR _point$GSCopy$1$[ebp], ebx

; 175  : 	return (m_bProcessStarting && m_pIChartManager != NULL && m_pPacketList != NULL);

  0003d	0f 84 17 02 00
	00		 je	 $LN8@OnMouseMov
  00043	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00046	85 c9		 test	 ecx, ecx
  00048	0f 84 0c 02 00
	00		 je	 $LN8@OnMouseMov
  0004e	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00052	0f 84 02 02 00
	00		 je	 $LN8@OnMouseMov

; 184  : 	ILPCSTR szGraphName = m_pIChartManager->FindFirstIndicator( _MTEXT( C2_PRICE_CHART), nRow, nColumn, nV, nG, "DEFAULT");

  00058	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005a	8d 45 a8	 lea	 eax, DWORD PTR _nG$3[ebp]
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_07MGCPDNLD@DEFAULT@
  00062	50		 push	 eax
  00063	8d 45 a4	 lea	 eax, DWORD PTR _nV$2[ebp]
  00066	50		 push	 eax
  00067	8d 45 b0	 lea	 eax, DWORD PTR _nColumn$5[ebp]
  0006a	50		 push	 eax
  0006b	8d 45 ac	 lea	 eax, DWORD PTR _nRow$4[ebp]
  0006e	50		 push	 eax
  0006f	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  00074	ff b0 28 03 00
	00		 push	 DWORD PTR [eax+808]
  0007a	ff 52 70	 call	 DWORD PTR [edx+112]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_AddIn_133101\I133101\_IString.h

; 39   : 		m_pIStrData = p_pIString;	// Do not AddRef(). Because It must be Return Value.

  0007d	8b f8		 mov	 edi, eax
  0007f	89 7d cc	 mov	 DWORD PTR _szGraphName$7[ebp+4], edi

; 40   : 		if( m_pIStrData) m_szData = m_pIStrData->GetData();

  00082	85 ff		 test	 edi, edi
  00084	74 09		 je	 SHORT $LN19@OnMouseMov
  00086	8b 17		 mov	 edx, DWORD PTR [edi]
  00088	8b cf		 mov	 ecx, edi
  0008a	ff 52 10	 call	 DWORD PTR [edx+16]
  0008d	eb 02		 jmp	 SHORT $LN86@OnMouseMov
$LN19@OnMouseMov:

; 41   : 		else m_szData = NULL;

  0008f	33 c0		 xor	 eax, eax
$LN86@OnMouseMov:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 184  : 	ILPCSTR szGraphName = m_pIChartManager->FindFirstIndicator( _MTEXT( C2_PRICE_CHART), nRow, nColumn, nV, nG, "DEFAULT");

  00091	89 45 c8	 mov	 DWORD PTR _szGraphName$7[ebp], eax
  00094	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_AddIn_133101\I133101\_IString.h

; 57   : 		if( !m_szData) return TRUE;

  0009b	85 c0		 test	 eax, eax
  0009d	0f 84 2f 01 00
	00		 je	 $LN83@OnMouseMov
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 185  : 	if( szGraphName.IsEmpty()) return false;

  000a3	80 38 00	 cmp	 BYTE PTR [eax], 0
  000a6	0f 84 26 01 00
	00		 je	 $LN83@OnMouseMov

; 186  : 	IBlock *pIBlock = m_pIChartManager->GetBlock( nRow, nColumn);

  000ac	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  000af	ff 75 b0	 push	 DWORD PTR _nColumn$5[ebp]
  000b2	ff 75 ac	 push	 DWORD PTR _nRow$4[ebp]
  000b5	8b 01		 mov	 eax, DWORD PTR [ecx]
  000b7	ff 50 38	 call	 DWORD PTR [eax+56]
  000ba	8b c8		 mov	 ecx, eax
  000bc	89 4d b8	 mov	 DWORD PTR _pIBlock$1$[ebp], ecx

; 187  : 	if( !pIBlock) return false;

  000bf	85 c9		 test	 ecx, ecx
  000c1	75 0c		 jne	 SHORT $LN13@OnMouseMov
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_AddIn_133101\I133101\_IString.h

; 44   : 	{

  000c3	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 187  : 	if( !pIBlock) return false;

  000ca	e9 0a 01 00 00	 jmp	 $LN89@OnMouseMov
$LN13@OnMouseMov:

; 189  : 	pIBlock->GetGraphRegions( region, rctNoFrameAndMargin);

  000cf	8d 55 d0	 lea	 edx, DWORD PTR _rctNoFrameAndMargin$8[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  000d2	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _region$9[ebp], 0
  000d9	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _rctNoFrameAndMargin$8[ebp], 0
  000e0	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _region$9[ebp+4], 0
  000e7	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _rctNoFrameAndMargin$8[ebp+4], 0
  000ee	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _region$9[ebp+8], 0
  000f5	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _rctNoFrameAndMargin$8[ebp+8], 0
  000fc	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _region$9[ebp+12], 0
  00103	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _rctNoFrameAndMargin$8[ebp+12], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 189  : 	pIBlock->GetGraphRegions( region, rctNoFrameAndMargin);

  0010a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0010c	52		 push	 edx
  0010d	8d 55 e0	 lea	 edx, DWORD PTR _region$9[ebp]
  00110	52		 push	 edx
  00111	ff 50 10	 call	 DWORD PTR [eax+16]

; 190  : 	pIBlock->Release();

  00114	8b 4d b8	 mov	 ecx, DWORD PTR _pIBlock$1$[ebp]
  00117	51		 push	 ecx
  00118	8b 01		 mov	 eax, DWORD PTR [ecx]
  0011a	ff 50 08	 call	 DWORD PTR [eax+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 638  : 	return ::IsRectEmpty(this);

  0011d	8d 45 e0	 lea	 eax, DWORD PTR _region$9[ebp]
  00120	50		 push	 eax
  00121	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsRectEmpty@4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 193  : 	if(region.IsRectEmpty() || !region.PtInRect(point))

  00127	85 c0		 test	 eax, eax
  00129	0f 85 9a 00 00
	00		 jne	 $LN15@OnMouseMov
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 648  : 	return ::PtInRect(this, point);

  0012f	ff 73 04	 push	 DWORD PTR [ebx+4]
  00132	8d 45 e0	 lea	 eax, DWORD PTR _region$9[ebp]
  00135	ff 33		 push	 DWORD PTR [ebx]
  00137	50		 push	 eax
  00138	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 193  : 	if(region.IsRectEmpty() || !region.PtInRect(point))

  0013e	85 c0		 test	 eax, eax
  00140	0f 84 83 00 00
	00		 je	 $LN15@OnMouseMov

; 194  : 		return false;
; 195  : 
; 196  : 	calData.SetNoFrameGraphRegion(region);

  00146	8d 45 e0	 lea	 eax, DWORD PTR _region$9[ebp]
  00149	50		 push	 eax
  0014a	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  0014d	e8 00 00 00 00	 call	 ?SetNoFrameGraphRegion@CAutoTrendDrawingCalculatorData@@QAEXABVCRect@@@Z ; CAutoTrendDrawingCalculatorData::SetNoFrameGraphRegion

; 197  : 	calData.GetCoordinateCalculatorData().GetCoordinateCalculatorData( point);

  00152	53		 push	 ebx
  00153	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  00156	e8 00 00 00 00	 call	 ?GetCoordinateCalculatorData@CAutoTrendDrawingCalculatorData@@QAEAAVCCoordinateCalculatorData@@XZ ; CAutoTrendDrawingCalculatorData::GetCoordinateCalculatorData
  0015b	8b c8		 mov	 ecx, eax
  0015d	e8 00 00 00 00	 call	 ?GetCoordinateCalculatorData@CCoordinateCalculatorData@@QAEXABVCPoint@@@Z ; CCoordinateCalculatorData::GetCoordinateCalculatorData
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_AddIn_133101\I133101\_IString.h

; 44   : 	{

  00162	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4

; 45   : 		if( m_pIStrData)

  00169	85 ff		 test	 edi, edi
  0016b	74 06		 je	 SHORT $LN46@OnMouseMov

; 46   : 		{
; 47   : 			m_pIStrData->Release();

  0016d	8b 07		 mov	 eax, DWORD PTR [edi]
  0016f	57		 push	 edi
  00170	ff 50 08	 call	 DWORD PTR [eax+8]
$LN46@OnMouseMov:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 218  : 	if(!m_bPrevPointUsed)

  00173	80 7e 15 00	 cmp	 BYTE PTR [esi+21], 0
  00177	8d 8e b0 00 00
	00		 lea	 ecx, DWORD PTR [esi+176]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_AddIn_133101\I133101\_IString.h

; 51   : 	}

  0017d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 198  : 	return true;

  00184	b3 01		 mov	 bl, 1

; 218  : 	if(!m_bPrevPointUsed)

  00186	75 05		 jne	 SHORT $LN50@OnMouseMov

; 219  : 		m_bPrevPointUsed = true;

  00188	88 5e 15	 mov	 BYTE PTR [esi+21], bl
  0018b	eb 18		 jmp	 SHORT $LN51@OnMouseMov
$LN50@OnMouseMov:

; 220  : 	else
; 221  : 		m_drawer.Drawing(pDC, calData, m_prevPoint, R2_NOT);

  0018d	6a 06		 push	 6
  0018f	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
  00192	50		 push	 eax
  00193	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  00196	50		 push	 eax
  00197	ff 75 bc	 push	 DWORD PTR _pDC$GSCopy$1$[ebp]
  0019a	e8 00 00 00 00	 call	 ?Drawing@CAutoTrendDrawer@@QAE_NPAVCDC@@ABVCAutoTrendDrawingCalculatorData@@ABVCPoint@@H@Z ; CAutoTrendDrawer::Drawing
  0019f	8d 8e b0 00 00
	00		 lea	 ecx, DWORD PTR [esi+176]
$LN51@OnMouseMov:

; 222  : 
; 223  : 	m_drawer.Drawing(pDC, calData, point, R2_NOT);

  001a5	8b 7d b4	 mov	 edi, DWORD PTR _point$GSCopy$1$[ebp]
  001a8	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  001ab	6a 06		 push	 6
  001ad	57		 push	 edi
  001ae	50		 push	 eax
  001af	ff 75 bc	 push	 DWORD PTR _pDC$GSCopy$1$[ebp]
  001b2	e8 00 00 00 00	 call	 ?Drawing@CAutoTrendDrawer@@QAE_NPAVCDC@@ABVCAutoTrendDrawingCalculatorData@@ABVCPoint@@H@Z ; CAutoTrendDrawer::Drawing

; 224  : 	m_prevPoint = point;

  001b7	8b 07		 mov	 eax, DWORD PTR [edi]
  001b9	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  001bc	89 46 18	 mov	 DWORD PTR [esi+24], eax

; 149  : 	return bResult;

  001bf	8a c3		 mov	 al, bl

; 224  : 	m_prevPoint = point;

  001c1	89 4e 1c	 mov	 DWORD PTR [esi+28], ecx

; 149  : 	return bResult;

  001c4	e9 93 00 00 00	 jmp	 $LN1@OnMouseMov
$LN15@OnMouseMov:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_AddIn_133101\I133101\_IString.h

; 44   : 	{

  001c9	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  001d0	eb 07		 jmp	 SHORT $LN89@OnMouseMov
$LN83@OnMouseMov:
  001d2	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
$LN89@OnMouseMov:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 147  : 		EraseLastToolDrawing(pDC, m_calData.GetNoFrameGraphRegion(), point);

  001d9	85 ff		 test	 edi, edi
  001db	74 06		 je	 SHORT $LN26@OnMouseMov
  001dd	8b 07		 mov	 eax, DWORD PTR [edi]
  001df	57		 push	 edi
  001e0	ff 50 08	 call	 DWORD PTR [eax+8]
$LN26@OnMouseMov:
  001e3	8d 45 c0	 lea	 eax, DWORD PTR $T6[ebp]
  001e6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001ed	50		 push	 eax
  001ee	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  001f1	32 db		 xor	 bl, bl
  001f3	e8 00 00 00 00	 call	 ?GetNoFrameGraphRegion@CAutoTrendDrawingCalculatorData@@QBE?AVCRect@@XZ ; CAutoTrendDrawingCalculatorData::GetNoFrameGraphRegion
  001f8	8b c8		 mov	 ecx, eax
  001fa	89 4d b8	 mov	 DWORD PTR _noFrameGraphRegion$1$[ebp], ecx

; 205  : 	if(!m_bPrevPointUsed)

  001fd	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  00200	74 54		 je	 SHORT $LN63@OnMouseMov
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 648  : 	return ::PtInRect(this, point);

  00202	8b 7d b4	 mov	 edi, DWORD PTR _point$GSCopy$1$[ebp]
  00205	ff 77 04	 push	 DWORD PTR [edi+4]
  00208	ff 37		 push	 DWORD PTR [edi]
  0020a	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__PtInRect@12
  00210	51		 push	 ecx
  00211	ff d7		 call	 edi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 208  : 	if(noFrameGraphRegion.PtInRect(point) && noFrameGraphRegion.PtInRect(m_prevPoint))

  00213	85 c0		 test	 eax, eax
  00215	74 0f		 je	 SHORT $LN81@OnMouseMov
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 648  : 	return ::PtInRect(this, point);

  00217	ff 76 1c	 push	 DWORD PTR [esi+28]
  0021a	ff 76 18	 push	 DWORD PTR [esi+24]
  0021d	ff 75 b8	 push	 DWORD PTR _noFrameGraphRegion$1$[ebp]
  00220	ff d7		 call	 edi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 208  : 	if(noFrameGraphRegion.PtInRect(point) && noFrameGraphRegion.PtInRect(m_prevPoint))

  00222	85 c0		 test	 eax, eax
  00224	75 30		 jne	 SHORT $LN63@OnMouseMov
$LN81@OnMouseMov:

; 209  : 		return;
; 210  : 
; 211  : 	m_drawer.Drawing(pDC, m_calData, m_prevPoint, R2_NOT);

  00226	6a 06		 push	 6
  00228	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
  0022b	50		 push	 eax
  0022c	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  0022f	50		 push	 eax
  00230	ff 75 bc	 push	 DWORD PTR _pDC$GSCopy$1$[ebp]
  00233	8d 8e b0 00 00
	00		 lea	 ecx, DWORD PTR [esi+176]
  00239	e8 00 00 00 00	 call	 ?Drawing@CAutoTrendDrawer@@QAE_NPAVCDC@@ABVCAutoTrendDrawingCalculatorData@@ABVCPoint@@H@Z ; CAutoTrendDrawer::Drawing

; 168  : 	if(m_pParent != NULL)

  0023e	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00241	c6 46 15 00	 mov	 BYTE PTR [esi+21], 0
  00245	85 c0		 test	 eax, eax
  00247	74 0d		 je	 SHORT $LN63@OnMouseMov
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 114  : 	{ ASSERT(::IsWindow(m_hWnd)); ::InvalidateRect(m_hWnd, NULL, bErase); }

  00249	6a 01		 push	 1
  0024b	6a 00		 push	 0
  0024d	ff 70 20	 push	 DWORD PTR [eax+32]
  00250	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InvalidateRect@12
$LN63@OnMouseMov:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 149  : 	return bResult;

  00256	8a c3		 mov	 al, bl
  00258	eb 02		 jmp	 SHORT $LN1@OnMouseMov
$LN8@OnMouseMov:

; 140  : 	if(!DoesStarting())
; 141  : 		return false;

  0025a	32 c0		 xor	 al, al
$LN1@OnMouseMov:

; 150  : }

  0025c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0025f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00266	59		 pop	 ecx
  00267	5f		 pop	 edi
  00268	5e		 pop	 esi
  00269	5b		 pop	 ebx
  0026a	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0026d	33 cd		 xor	 ecx, ebp
  0026f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00274	8b e5		 mov	 esp, ebp
  00276	5d		 pop	 ebp
  00277	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnMouseMove@CMainAutoTrendImplementation@@QAE_NPAVCDC@@ABVCPoint@@@Z$0:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR _szGraphName$7[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ILPCSTR133101@@QAE@XZ ; ILPCSTR133101::~ILPCSTR133101
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?OnMouseMove@CMainAutoTrendImplementation@@QAE_NPAVCDC@@ABVCPoint@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnMouseMove@CMainAutoTrendImplementation@@QAE_NPAVCDC@@ABVCPoint@@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnMouseMove@CMainAutoTrendImplementation@@QAE_NPAVCDC@@ABVCPoint@@@Z ENDP ; CMainAutoTrendImplementation::OnMouseMove
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ?OnRButtonUp@CMainAutoTrendImplementation@@QAE_NPAVCDC@@ABVCPoint@@@Z
_TEXT	SEGMENT
_pDC$ = 8						; size = 4
_point$ = 12						; size = 4
?OnRButtonUp@CMainAutoTrendImplementation@@QAE_NPAVCDC@@ABVCPoint@@@Z PROC ; CMainAutoTrendImplementation::OnRButtonUp, COMDAT
; _this$ = ecx

; 129  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 175  : 	return (m_bProcessStarting && m_pIChartManager != NULL && m_pPacketList != NULL);

  00003	80 7e 14 00	 cmp	 BYTE PTR [esi+20], 0
  00007	74 46		 je	 SHORT $LN6@OnRButtonU
  00009	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0000c	85 c0		 test	 eax, eax
  0000e	74 3f		 je	 SHORT $LN6@OnRButtonU
  00010	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00014	74 39		 je	 SHORT $LN6@OnRButtonU

; 166  : 		m_calData.Initialize( p_pIChartManager);

  00016	50		 push	 eax
  00017	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]

; 54   : 	m_bProcessStarting = bStarting;

  0001a	66 c7 46 14 00
	00		 mov	 WORD PTR [esi+20], 0

; 166  : 		m_calData.Initialize( p_pIChartManager);

  00020	e8 00 00 00 00	 call	 ?Initialize@CAutoTrendDrawingCalculatorData@@QAEXPAUIChartManager133101@@@Z ; CAutoTrendDrawingCalculatorData::Initialize

; 167  : 
; 168  : 	if(m_pParent != NULL)

  00025	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00028	85 c0		 test	 eax, eax
  0002a	74 10		 je	 SHORT $LN13@OnRButtonU
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 114  : 	{ ASSERT(::IsWindow(m_hWnd)); ::InvalidateRect(m_hWnd, NULL, bErase); }

  0002c	6a 01		 push	 1
  0002e	6a 00		 push	 0
  00030	ff 70 20	 push	 DWORD PTR [eax+32]
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InvalidateRect@12
  00039	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$LN13@OnRButtonU:
  0003c	6a 01		 push	 1
  0003e	6a 00		 push	 0
  00040	ff 70 20	 push	 DWORD PTR [eax+32]
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InvalidateRect@12
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 135  : 	return true;

  00049	b0 01		 mov	 al, 1
  0004b	5e		 pop	 esi

; 136  : }

  0004c	c2 08 00	 ret	 8
$LN6@OnRButtonU:

; 130  : 	if(!DoesStarting())
; 131  : 		return false;

  0004f	32 c0		 xor	 al, al
  00051	5e		 pop	 esi

; 136  : }

  00052	c2 08 00	 ret	 8
?OnRButtonUp@CMainAutoTrendImplementation@@QAE_NPAVCDC@@ABVCPoint@@@Z ENDP ; CMainAutoTrendImplementation::OnRButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ?DoesProcessStarting@CMainAutoTrendImplementation@@QBE_NXZ
_TEXT	SEGMENT
?DoesProcessStarting@CMainAutoTrendImplementation@@QBE_NXZ PROC ; CMainAutoTrendImplementation::DoesProcessStarting, COMDAT
; _this$ = ecx

; 124  : 	return m_bProcessStarting;

  00000	8a 41 14	 mov	 al, BYTE PTR [ecx+20]

; 125  : }

  00003	c3		 ret	 0
?DoesProcessStarting@CMainAutoTrendImplementation@@QBE_NXZ ENDP ; CMainAutoTrendImplementation::DoesProcessStarting
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ?Calculate@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@W4CALCULATETYPE@CCalculateBaseData@@@Z
_TEXT	SEGMENT
$T2 = -24						; size = 8
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p_pIChartManager$ = 8					; size = 4
_eCalType$ = 12						; size = 4
?Calculate@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@W4CALCULATETYPE@CCalculateBaseData@@@Z PROC ; CMainAutoTrendImplementation::Calculate, COMDAT
; _this$ = ecx

; 111  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Calculate@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@W4CALCULATETYPE@CCalculateBaseData@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f9		 mov	 edi, ecx

; 175  : 	return (m_bProcessStarting && m_pIChartManager != NULL && m_pPacketList != NULL);

  00029	80 7f 14 00	 cmp	 BYTE PTR [edi+20], 0
  0002d	74 78		 je	 SHORT $LN1@Calculate
  0002f	83 7f 0c 00	 cmp	 DWORD PTR [edi+12], 0
  00033	74 72		 je	 SHORT $LN1@Calculate
  00035	83 7f 10 00	 cmp	 DWORD PTR [edi+16], 0
  00039	74 6c		 je	 SHORT $LN1@Calculate

; 112  : 	if(!DoesStarting())
; 113  : 		return;
; 114  : 
; 115  : 	if(eCalType == CCalculateBaseData::TRDATA_CAL)

  0003b	83 7d 0c 00	 cmp	 DWORD PTR _eCalType$[ebp], 0
  0003f	75 18		 jne	 SHORT $LN13@Calculate

; 168  : 	if(m_pParent != NULL)

  00041	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00044	c6 47 15 00	 mov	 BYTE PTR [edi+21], 0
  00048	85 c0		 test	 eax, eax
  0004a	74 0d		 je	 SHORT $LN13@Calculate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 114  : 	{ ASSERT(::IsWindow(m_hWnd)); ::InvalidateRect(m_hWnd, NULL, bErase); }

  0004c	6a 01		 push	 1
  0004e	6a 00		 push	 0
  00050	ff 70 20	 push	 DWORD PTR [eax+32]
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InvalidateRect@12
$LN13@Calculate:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 118  : 	CNonChartFormulate().GetAutoTrendData(eCalType, "AutoTrend", m_pPacketList, &m_calData.GetPacketList());

  00059	68 00 00 00 00	 push	 OFFSET ??_C@_09NJPAGIBN@AutoTrend@
  0005e	8d 4d f0	 lea	 ecx, DWORD PTR $T3[ebp]
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  00067	8d 4d e8	 lea	 ecx, DWORD PTR $T2[ebp]
  0006a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00071	e8 00 00 00 00	 call	 ??0CNonChartFormulate@@QAE@XZ ; CNonChartFormulate::CNonChartFormulate
  00076	8b f0		 mov	 esi, eax
  00078	8d 4f 20	 lea	 ecx, DWORD PTR [edi+32]
  0007b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0007f	e8 00 00 00 00	 call	 ?GetPacketList@CAutoTrendDrawingCalculatorData@@QAEAAV?$CList@PAUIPacket133101@@PAU1@@@XZ ; CAutoTrendDrawingCalculatorData::GetPacketList
  00084	50		 push	 eax
  00085	ff 77 10	 push	 DWORD PTR [edi+16]
  00088	8d 45 f0	 lea	 eax, DWORD PTR $T3[ebp]
  0008b	8b ce		 mov	 ecx, esi
  0008d	50		 push	 eax
  0008e	ff 75 0c	 push	 DWORD PTR _eCalType$[ebp]
  00091	e8 00 00 00 00	 call	 ?GetAutoTrendData@CNonChartFormulate@@QBE_NW4CALCULATETYPE@CCalculateBaseData@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAUIPacketManager133101@@PAV?$CList@PAUIPacket133101@@PAU1@@@@Z ; CNonChartFormulate::GetAutoTrendData
  00096	8d 4d e8	 lea	 ecx, DWORD PTR $T2[ebp]
  00099	e8 00 00 00 00	 call	 ??1CNonChartFormulate@@UAE@XZ ; CNonChartFormulate::~CNonChartFormulate
  0009e	8d 4d f0	 lea	 ecx, DWORD PTR $T3[ebp]
  000a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN1@Calculate:

; 119  : }

  000a7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000aa	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b1	59		 pop	 ecx
  000b2	5f		 pop	 edi
  000b3	5e		 pop	 esi
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Calculate@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@W4CALCULATETYPE@CCalculateBaseData@@@Z$0:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?Calculate@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@W4CALCULATETYPE@CCalculateBaseData@@@Z$1:
  00009	8d 4d e8	 lea	 ecx, DWORD PTR $T2[ebp]
  0000c	e9 00 00 00 00	 jmp	 ??1CNonChartFormulate@@UAE@XZ ; CNonChartFormulate::~CNonChartFormulate
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
__ehhandler$?Calculate@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@W4CALCULATETYPE@CCalculateBaseData@@@Z:
  00016	90		 npad	 1
  00017	90		 npad	 1
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Calculate@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@W4CALCULATETYPE@CCalculateBaseData@@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Calculate@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@W4CALCULATETYPE@CCalculateBaseData@@@Z ENDP ; CMainAutoTrendImplementation::Calculate
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ?SetPenThickness@CMainAutoTrendImplementation@@QAEXH@Z
_TEXT	SEGMENT
_nThickness$ = 8					; size = 4
?SetPenThickness@CMainAutoTrendImplementation@@QAEXH@Z PROC ; CMainAutoTrendImplementation::SetPenThickness, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 106  : 	m_drawer.SetPenThickness(nThickness);

  00003	81 c1 b0 00 00
	00		 add	 ecx, 176		; 000000b0H

; 107  : }

  00009	5d		 pop	 ebp

; 106  : 	m_drawer.SetPenThickness(nThickness);

  0000a	e9 00 00 00 00	 jmp	 ?SetPenThickness@CAutoTrendDrawer@@QAEXH@Z ; CAutoTrendDrawer::SetPenThickness
?SetPenThickness@CMainAutoTrendImplementation@@QAEXH@Z ENDP ; CMainAutoTrendImplementation::SetPenThickness
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ?SetPenColor@CMainAutoTrendImplementation@@QAEXABK@Z
_TEXT	SEGMENT
_color$ = 8						; size = 4
?SetPenColor@CMainAutoTrendImplementation@@QAEXABK@Z PROC ; CMainAutoTrendImplementation::SetPenColor, COMDAT
; _this$ = ecx

; 100  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 101  : 	m_drawer.SetPenColor(color);

  00003	81 c1 b0 00 00
	00		 add	 ecx, 176		; 000000b0H

; 102  : }

  00009	5d		 pop	 ebp

; 101  : 	m_drawer.SetPenColor(color);

  0000a	e9 00 00 00 00	 jmp	 ?SetPenColor@CAutoTrendDrawer@@QAEXABK@Z ; CAutoTrendDrawer::SetPenColor
?SetPenColor@CMainAutoTrendImplementation@@QAEXABK@Z ENDP ; CMainAutoTrendImplementation::SetPenColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ?SetPacketList@CMainAutoTrendImplementation@@QAEXPAUIPacketManager133101@@@Z
_TEXT	SEGMENT
_pPacketList$ = 8					; size = 4
?SetPacketList@CMainAutoTrendImplementation@@QAEXPAUIPacketManager133101@@@Z PROC ; CMainAutoTrendImplementation::SetPacketList, COMDAT
; _this$ = ecx

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 94   : 	if( m_pPacketList) m_pPacketList->Release();

  00006	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  00009	85 d2		 test	 edx, edx
  0000b	74 06		 je	 SHORT $LN2@SetPacketL
  0000d	8b 02		 mov	 eax, DWORD PTR [edx]
  0000f	52		 push	 edx
  00010	ff 50 08	 call	 DWORD PTR [eax+8]
$LN2@SetPacketL:

; 95   : 	m_pPacketList = pPacketList;

  00013	8b 4d 08	 mov	 ecx, DWORD PTR _pPacketList$[ebp]
  00016	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
  00019	5e		 pop	 esi

; 96   : 	if( m_pPacketList) m_pPacketList->AddRef();

  0001a	85 c9		 test	 ecx, ecx
  0001c	74 09		 je	 SHORT $LN3@SetPacketL
  0001e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00020	89 4d 08	 mov	 DWORD PTR _pPacketList$[ebp], ecx

; 97   : }

  00023	5d		 pop	 ebp

; 96   : 	if( m_pPacketList) m_pPacketList->AddRef();

  00024	ff 60 04	 jmp	 DWORD PTR [eax+4]
$LN3@SetPacketL:

; 97   : }

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?SetPacketList@CMainAutoTrendImplementation@@QAEXPAUIPacketManager133101@@@Z ENDP ; CMainAutoTrendImplementation::SetPacketList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ?SetMainBlock@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@@Z
_TEXT	SEGMENT
_pMainBlock$ = 8					; size = 4
?SetMainBlock@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@@Z PROC ; CMainAutoTrendImplementation::SetMainBlock, COMDAT
; _this$ = ecx

; 86   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 87   : 	if( m_pIChartManager) m_pIChartManager->Release();

  00006	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  00009	85 d2		 test	 edx, edx
  0000b	74 06		 je	 SHORT $LN2@SetMainBlo
  0000d	8b 02		 mov	 eax, DWORD PTR [edx]
  0000f	52		 push	 edx
  00010	ff 50 08	 call	 DWORD PTR [eax+8]
$LN2@SetMainBlo:

; 88   : 	m_pIChartManager = pMainBlock;

  00013	8b 4d 08	 mov	 ecx, DWORD PTR _pMainBlock$[ebp]
  00016	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00019	5e		 pop	 esi

; 89   : 	if( m_pIChartManager) m_pIChartManager->AddRef();

  0001a	85 c9		 test	 ecx, ecx
  0001c	74 09		 je	 SHORT $LN3@SetMainBlo
  0001e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00020	89 4d 08	 mov	 DWORD PTR _pMainBlock$[ebp], ecx

; 90   : }

  00023	5d		 pop	 ebp

; 89   : 	if( m_pIChartManager) m_pIChartManager->AddRef();

  00024	ff 60 04	 jmp	 DWORD PTR [eax+4]
$LN3@SetMainBlo:

; 90   : }

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?SetMainBlock@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@@Z ENDP ; CMainAutoTrendImplementation::SetMainBlock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ?SetParent@CMainAutoTrendImplementation@@QAEXPAVCWnd@@@Z
_TEXT	SEGMENT
_pParent$ = 8						; size = 4
?SetParent@CMainAutoTrendImplementation@@QAEXPAVCWnd@@@Z PROC ; CMainAutoTrendImplementation::SetParent, COMDAT
; _this$ = ecx

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 82   : 	m_pParent = pParent;

  00003	8b 45 08	 mov	 eax, DWORD PTR _pParent$[ebp]
  00006	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 83   : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetParent@CMainAutoTrendImplementation@@QAEXPAVCWnd@@@Z ENDP ; CMainAutoTrendImplementation::SetParent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ?Set@CMainAutoTrendImplementation@@QAEXPAVCWnd@@PAUIChartManager133101@@PAUIPacketManager133101@@ABKH@Z
_TEXT	SEGMENT
_pParent$ = 8						; size = 4
_pMainBlock$ = 12					; size = 4
_pPacketList$ = 16					; size = 4
_penColor$ = 20						; size = 4
_nPenThickness$ = 24					; size = 4
?Set@CMainAutoTrendImplementation@@QAEXPAVCWnd@@PAUIChartManager133101@@PAUIPacketManager133101@@ABKH@Z PROC ; CMainAutoTrendImplementation::Set, COMDAT
; _this$ = ecx

; 65   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 66   : 	m_pParent = pParent;

  00003	8b 45 08	 mov	 eax, DWORD PTR _pParent$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 67   : 
; 68   : 	if( m_pIChartManager) m_pIChartManager->Release();

  00009	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0000c	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0000f	85 c9		 test	 ecx, ecx
  00011	74 06		 je	 SHORT $LN2@Set
  00013	8b 01		 mov	 eax, DWORD PTR [ecx]
  00015	51		 push	 ecx
  00016	ff 50 08	 call	 DWORD PTR [eax+8]
$LN2@Set:

; 69   : 	m_pIChartManager = pMainBlock;

  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _pMainBlock$[ebp]
  0001c	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 70   : 	if( m_pIChartManager) m_pIChartManager->AddRef();

  0001f	85 c9		 test	 ecx, ecx
  00021	74 06		 je	 SHORT $LN3@Set
  00023	8b 01		 mov	 eax, DWORD PTR [ecx]
  00025	51		 push	 ecx
  00026	ff 50 04	 call	 DWORD PTR [eax+4]
$LN3@Set:

; 71   : 
; 72   : 	if( m_pPacketList) m_pPacketList->Release();

  00029	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0002c	85 c9		 test	 ecx, ecx
  0002e	74 06		 je	 SHORT $LN4@Set
  00030	8b 01		 mov	 eax, DWORD PTR [ecx]
  00032	51		 push	 ecx
  00033	ff 50 08	 call	 DWORD PTR [eax+8]
$LN4@Set:

; 73   : 	m_pPacketList = pPacketList;

  00036	8b 4d 10	 mov	 ecx, DWORD PTR _pPacketList$[ebp]
  00039	89 4e 10	 mov	 DWORD PTR [esi+16], ecx

; 74   : 	if( m_pPacketList) m_pPacketList->AddRef();

  0003c	85 c9		 test	 ecx, ecx
  0003e	74 06		 je	 SHORT $LN5@Set
  00040	8b 01		 mov	 eax, DWORD PTR [ecx]
  00042	51		 push	 ecx
  00043	ff 50 04	 call	 DWORD PTR [eax+4]
$LN5@Set:

; 75   : 
; 76   : 	m_drawer.SetPenColor(penColor);

  00046	ff 75 14	 push	 DWORD PTR _penColor$[ebp]
  00049	8d 8e b0 00 00
	00		 lea	 ecx, DWORD PTR [esi+176]
  0004f	e8 00 00 00 00	 call	 ?SetPenColor@CAutoTrendDrawer@@QAEXABK@Z ; CAutoTrendDrawer::SetPenColor

; 77   : 	m_drawer.SetPenThickness(nPenThickness);

  00054	ff 75 18	 push	 DWORD PTR _nPenThickness$[ebp]
  00057	8d 8e b0 00 00
	00		 lea	 ecx, DWORD PTR [esi+176]
  0005d	e8 00 00 00 00	 call	 ?SetPenThickness@CAutoTrendDrawer@@QAEXH@Z ; CAutoTrendDrawer::SetPenThickness
  00062	5e		 pop	 esi

; 78   : }

  00063	5d		 pop	 ebp
  00064	c2 14 00	 ret	 20			; 00000014H
?Set@CMainAutoTrendImplementation@@QAEXPAVCWnd@@PAUIChartManager133101@@PAUIPacketManager133101@@ABKH@Z ENDP ; CMainAutoTrendImplementation::Set
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ?SetProcessStarting@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@_N@Z
_TEXT	SEGMENT
$T2 = -20						; size = 8
__$EHRec$ = -12						; size = 12
_p_pIChartManager$ = 8					; size = 4
$T3 = 12						; size = 4
_bStarting$ = 12					; size = 1
?SetProcessStarting@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@_N@Z PROC ; CMainAutoTrendImplementation::SetProcessStarting, COMDAT
; _this$ = ecx

; 53   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetProcessStarting@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@_N@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 54   : 	m_bProcessStarting = bStarting;

  0002a	8a 5d 0c	 mov	 bl, BYTE PTR _bStarting$[ebp]

; 166  : 		m_calData.Initialize( p_pIChartManager);

  0002d	8d 4f 20	 lea	 ecx, DWORD PTR [edi+32]
  00030	ff 75 08	 push	 DWORD PTR _p_pIChartManager$[ebp]

; 54   : 	m_bProcessStarting = bStarting;

  00033	88 5f 14	 mov	 BYTE PTR [edi+20], bl

; 164  : 	m_bPrevPointUsed = false;

  00036	c6 47 15 00	 mov	 BYTE PTR [edi+21], 0

; 165  : 	if(bIsAllData)
; 166  : 		m_calData.Initialize( p_pIChartManager);

  0003a	e8 00 00 00 00	 call	 ?Initialize@CAutoTrendDrawingCalculatorData@@QAEXPAUIChartManager133101@@@Z ; CAutoTrendDrawingCalculatorData::Initialize

; 167  : 
; 168  : 	if(m_pParent != NULL)

  0003f	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00042	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__InvalidateRect@12
  00048	85 c0		 test	 eax, eax
  0004a	74 09		 je	 SHORT $LN6@SetProcess
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 114  : 	{ ASSERT(::IsWindow(m_hWnd)); ::InvalidateRect(m_hWnd, NULL, bErase); }

  0004c	6a 01		 push	 1
  0004e	6a 00		 push	 0
  00050	ff 70 20	 push	 DWORD PTR [eax+32]
  00053	ff d6		 call	 esi
$LN6@SetProcess:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 57   : 	if(bStarting){

  00055	84 db		 test	 bl, bl
  00057	74 73		 je	 SHORT $LN10@SetProcess

; 175  : 	return (m_bProcessStarting && m_pIChartManager != NULL && m_pPacketList != NULL);

  00059	80 7f 14 00	 cmp	 BYTE PTR [edi+20], 0
  0005d	74 6d		 je	 SHORT $LN10@SetProcess
  0005f	83 7f 0c 00	 cmp	 DWORD PTR [edi+12], 0
  00063	74 67		 je	 SHORT $LN10@SetProcess
  00065	83 7f 10 00	 cmp	 DWORD PTR [edi+16], 0
  00069	74 61		 je	 SHORT $LN10@SetProcess

; 168  : 	if(m_pParent != NULL)

  0006b	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0006e	c6 47 15 00	 mov	 BYTE PTR [edi+21], 0
  00072	85 c0		 test	 eax, eax
  00074	74 09		 je	 SHORT $LN22@SetProcess
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 114  : 	{ ASSERT(::IsWindow(m_hWnd)); ::InvalidateRect(m_hWnd, NULL, bErase); }

  00076	6a 01		 push	 1
  00078	6a 00		 push	 0
  0007a	ff 70 20	 push	 DWORD PTR [eax+32]
  0007d	ff d6		 call	 esi
$LN22@SetProcess:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 118  : 	CNonChartFormulate().GetAutoTrendData(eCalType, "AutoTrend", m_pPacketList, &m_calData.GetPacketList());

  0007f	68 00 00 00 00	 push	 OFFSET ??_C@_09NJPAGIBN@AutoTrend@
  00084	8d 4d 0c	 lea	 ecx, DWORD PTR $T3[ebp]
  00087	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  0008d	8d 4d ec	 lea	 ecx, DWORD PTR $T2[ebp]
  00090	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00097	e8 00 00 00 00	 call	 ??0CNonChartFormulate@@QAE@XZ ; CNonChartFormulate::CNonChartFormulate
  0009c	8b f0		 mov	 esi, eax
  0009e	8d 4f 20	 lea	 ecx, DWORD PTR [edi+32]
  000a1	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000a5	e8 00 00 00 00	 call	 ?GetPacketList@CAutoTrendDrawingCalculatorData@@QAEAAV?$CList@PAUIPacket133101@@PAU1@@@XZ ; CAutoTrendDrawingCalculatorData::GetPacketList
  000aa	50		 push	 eax
  000ab	ff 77 10	 push	 DWORD PTR [edi+16]
  000ae	8d 45 0c	 lea	 eax, DWORD PTR $T3[ebp]
  000b1	8b ce		 mov	 ecx, esi
  000b3	50		 push	 eax
  000b4	6a 00		 push	 0
  000b6	e8 00 00 00 00	 call	 ?GetAutoTrendData@CNonChartFormulate@@QBE_NW4CALCULATETYPE@CCalculateBaseData@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAUIPacketManager133101@@PAV?$CList@PAUIPacket133101@@PAU1@@@@Z ; CNonChartFormulate::GetAutoTrendData
  000bb	8d 4d ec	 lea	 ecx, DWORD PTR $T2[ebp]
  000be	e8 00 00 00 00	 call	 ??1CNonChartFormulate@@UAE@XZ ; CNonChartFormulate::~CNonChartFormulate
  000c3	8d 4d 0c	 lea	 ecx, DWORD PTR $T3[ebp]
  000c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN10@SetProcess:

; 58   : 		Calculate( p_pIChartManager);
; 59   : 	}
; 60   : 
; 61   : 	//SendMessageToParent(bStarting);
; 62   : }

  000cc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d6	59		 pop	 ecx
  000d7	5f		 pop	 edi
  000d8	5e		 pop	 esi
  000d9	5b		 pop	 ebx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetProcessStarting@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@_N@Z$0:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?SetProcessStarting@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@_N@Z$1:
  00009	8d 4d ec	 lea	 ecx, DWORD PTR $T2[ebp]
  0000c	e9 00 00 00 00	 jmp	 ??1CNonChartFormulate@@UAE@XZ ; CNonChartFormulate::~CNonChartFormulate
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
__ehhandler$?SetProcessStarting@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@_N@Z:
  00016	90		 npad	 1
  00017	90		 npad	 1
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetProcessStarting@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@_N@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetProcessStarting@CMainAutoTrendImplementation@@QAEXPAUIChartManager133101@@_N@Z ENDP ; CMainAutoTrendImplementation::SetProcessStarting
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ??1CMainAutoTrendImplementation@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CMainAutoTrendImplementation@@UAE@XZ PROC		; CMainAutoTrendImplementation::~CMainAutoTrendImplementation, COMDAT
; _this$ = ecx

; 46   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CMainAutoTrendImplementation@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 47   : 	if( m_pIChartManager) m_pIChartManager->Release();

  00025	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00028	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMainAutoTrendImplementation@@6B@
  0002e	85 c9		 test	 ecx, ecx
  00030	74 06		 je	 SHORT $LN2@CMainAutoT
  00032	8b 01		 mov	 eax, DWORD PTR [ecx]
  00034	51		 push	 ecx
  00035	ff 50 08	 call	 DWORD PTR [eax+8]
$LN2@CMainAutoT:

; 48   : 	if( m_pPacketList) m_pPacketList->Release();

  00038	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0003b	85 c9		 test	 ecx, ecx
  0003d	74 06		 je	 SHORT $LN3@CMainAutoT
  0003f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00041	51		 push	 ecx
  00042	ff 50 08	 call	 DWORD PTR [eax+8]
$LN3@CMainAutoT:

; 49   : }

  00045	8d 4e 50	 lea	 ecx, DWORD PTR [esi+80]
  00048	e8 00 00 00 00	 call	 ??1CCoordinateCalculatorData@@QAE@XZ ; CCoordinateCalculatorData::~CCoordinateCalculatorData
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 872  : 	m_pBlocks->FreeDataChain();

  0004d	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]

; 878  : {

  00050	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00057	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], OFFSET ??_7?$CList@PAUIPacket133101@@PAU1@@@6B@

; 870  : 	m_nCount = 0;

  0005e	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0

; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  00065	c7 46 40 00 00
	00 00		 mov	 DWORD PTR [esi+64], 0
  0006c	c7 46 38 00 00
	00 00		 mov	 DWORD PTR [esi+56], 0
  00073	c7 46 34 00 00
	00 00		 mov	 DWORD PTR [esi+52], 0

; 872  : 	m_pBlocks->FreeDataChain();

  0007a	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 873  : 	m_pBlocks = NULL;

  0007f	c7 46 44 00 00
	00 00		 mov	 DWORD PTR [esi+68], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 49   : }

  00086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	5e		 pop	 esi
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c3		 ret	 0
  00096	cc		 int	 3
  00097	cc		 int	 3
  00098	cc		 int	 3
  00099	cc		 int	 3
  0009a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CMainAutoTrendImplementation@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CMainAutoTrendImplementation@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CMainAutoTrendImplementation@@UAE@XZ ENDP		; CMainAutoTrendImplementation::~CMainAutoTrendImplementation
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@PAVCWnd@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p_pIChartManager$ = 8					; size = 4
_pParent$ = 12						; size = 4
??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@PAVCWnd@@@Z PROC ; CMainAutoTrendImplementation::CMainAutoTrendImplementation, COMDAT
; _this$ = ecx

; 42   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@PAVCWnd@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 35   : 	m_pParent(pParent),

  00029	8b 45 0c	 mov	 eax, DWORD PTR _pParent$[ebp]

; 41   : 	m_calData( p_pIChartManager)

  0002c	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  0002f	ff 75 08	 push	 DWORD PTR _p_pIChartManager$[ebp]
  00032	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMainAutoTrendImplementation@@6B@
  00038	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0003b	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00042	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00049	66 c7 46 14 00
	00		 mov	 WORD PTR [esi+20], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 408  : 	x = initX;

  0004f	c7 46 18 ff ff
	ff ff		 mov	 DWORD PTR [esi+24], -1

; 409  : 	y = initY;

  00056	c7 46 1c ff ff
	ff ff		 mov	 DWORD PTR [esi+28], -1
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 41   : 	m_calData( p_pIChartManager)

  0005d	e8 00 00 00 00	 call	 ??0CAutoTrendDrawingCalculatorData@@QAE@PAUIChartManager133101@@@Z ; CAutoTrendDrawingCalculatorData::CAutoTrendDrawingCalculatorData

; 42   : {

  00062	8d 8e b0 00 00
	00		 lea	 ecx, DWORD PTR [esi+176]
  00068	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006f	e8 00 00 00 00	 call	 ??0CAutoTrendDrawer@@QAE@XZ ; CAutoTrendDrawer::CAutoTrendDrawer

; 43   : }

  00074	8b c6		 mov	 eax, esi
  00076	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00079	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00080	59		 pop	 ecx
  00081	5e		 pop	 esi
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@PAVCWnd@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 20	 add	 ecx, 32			; 00000020H
  00006	e9 00 00 00 00	 jmp	 ??1CAutoTrendDrawingCalculatorData@@QAE@XZ
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
__ehhandler$??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@PAVCWnd@@@Z:
  00010	90		 npad	 1
  00011	90		 npad	 1
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@PAVCWnd@@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@PAVCWnd@@@Z ENDP ; CMainAutoTrendImplementation::CMainAutoTrendImplementation
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p_pIChartManager$ = 8					; size = 4
??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@@Z PROC ; CMainAutoTrendImplementation::CMainAutoTrendImplementation, COMDAT
; _this$ = ecx

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 30   : 	m_calData( p_pIChartManager)

  00029	ff 75 08	 push	 DWORD PTR _p_pIChartManager$[ebp]
  0002c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMainAutoTrendImplementation@@6B@
  00032	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  00035	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0003c	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00043	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0004a	66 c7 46 14 00
	00		 mov	 WORD PTR [esi+20], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 408  : 	x = initX;

  00050	c7 46 18 ff ff
	ff ff		 mov	 DWORD PTR [esi+24], -1

; 409  : 	y = initY;

  00057	c7 46 1c ff ff
	ff ff		 mov	 DWORD PTR [esi+28], -1
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp

; 30   : 	m_calData( p_pIChartManager)

  0005e	e8 00 00 00 00	 call	 ??0CAutoTrendDrawingCalculatorData@@QAE@PAUIChartManager133101@@@Z ; CAutoTrendDrawingCalculatorData::CAutoTrendDrawingCalculatorData

; 31   : {

  00063	8d 8e b0 00 00
	00		 lea	 ecx, DWORD PTR [esi+176]
  00069	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00070	e8 00 00 00 00	 call	 ??0CAutoTrendDrawer@@QAE@XZ ; CAutoTrendDrawer::CAutoTrendDrawer

; 32   : }

  00075	8b c6		 mov	 eax, esi
  00077	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00081	59		 pop	 ecx
  00082	5e		 pop	 esi
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 20	 add	 ecx, 32			; 00000020H
  00006	e9 00 00 00 00	 jmp	 ??1CAutoTrendDrawingCalculatorData@@QAE@XZ
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
__ehhandler$??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@@Z:
  00010	90		 npad	 1
  00011	90		 npad	 1
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CMainAutoTrendImplementation@@QAE@PAUIChartManager133101@@@Z ENDP ; CMainAutoTrendImplementation::CMainAutoTrendImplementation
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??1CAutoTrendDrawingCalculatorData@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CAutoTrendDrawingCalculatorData@@QAE@XZ PROC		; CAutoTrendDrawingCalculatorData::~CAutoTrendDrawingCalculatorData, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CAutoTrendDrawingCalculatorData@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	8d 4e 30	 lea	 ecx, DWORD PTR [esi+48]
  00028	e8 00 00 00 00	 call	 ??1CCoordinateCalculatorData@@QAE@XZ ; CCoordinateCalculatorData::~CCoordinateCalculatorData

; 872  : 	m_pBlocks->FreeDataChain();

  0002d	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]

; 878  : {

  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], OFFSET ??_7?$CList@PAUIPacket133101@@PAU1@@@6B@

; 870  : 	m_nCount = 0;

  0003e	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0

; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  00045	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
  0004c	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  00053	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 872  : 	m_pBlocks->FreeDataChain();

  0005a	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 873  : 	m_pBlocks = NULL;

  0005f	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
  00066	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00069	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00070	59		 pop	 ecx
  00071	5e		 pop	 esi
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
  00076	cc		 int	 3
  00077	cc		 int	 3
  00078	cc		 int	 3
  00079	cc		 int	 3
  0007a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CAutoTrendDrawingCalculatorData@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CAutoTrendDrawingCalculatorData@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CAutoTrendDrawingCalculatorData@@QAE@XZ ENDP		; CAutoTrendDrawingCalculatorData::~CAutoTrendDrawingCalculatorData
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_G?$CList@PAUIPacket133101@@PAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CList@PAUIPacket133101@@PAU1@@@UAEPAXI@Z PROC	; CList<IPacket133101 *,IPacket133101 *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CList@PAUIPacket133101@@PAU1@@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 872  : 	m_pBlocks->FreeDataChain();

  00025	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]

; 878  : {

  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CList@PAUIPacket133101@@PAU1@@@6B@

; 870  : 	m_nCount = 0;

  00035	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  0003c	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00043	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0004a	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 872  : 	m_pBlocks->FreeDataChain();

  00051	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 873  : 	m_pBlocks = NULL;

  00056	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00059	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00060	a8 01		 test	 al, 1
  00062	74 2c		 je	 SHORT $LN22@scalar
  00064	a8 04		 test	 al, 4
  00066	75 1d		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  00068	56		 push	 esi
  00069	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006e	83 c4 04	 add	 esp, 4
  00071	8b c6		 mov	 eax, esi
  00073	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00076	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007d	59		 pop	 ecx
  0007e	5e		 pop	 esi
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
$LN3@scalar:
  00085	6a 1c		 push	 28			; 0000001cH
  00087	56		 push	 esi
  00088	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0008d	83 c4 08	 add	 esp, 8
$LN22@scalar:
  00090	8b c6		 mov	 eax, esi
  00092	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00095	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009c	59		 pop	 ecx
  0009d	5e		 pop	 esi
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 04 00	 ret	 4
  000a4	cc		 int	 3
  000a5	cc		 int	 3
  000a6	cc		 int	 3
  000a7	cc		 int	 3
  000a8	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CList@PAUIPacket133101@@PAU1@@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CList@PAUIPacket133101@@PAU1@@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CList@PAUIPacket133101@@PAU1@@@UAEPAXI@Z ENDP	; CList<IPacket133101 *,IPacket133101 *>::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CList@PAUIPacket133101@@PAU1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_nNewCount$1$ = -16					; size = 4
_newData$1 = -12					; size = 4
_pData$1$ = -8						; size = 4
_pData$1$ = -8						; size = 4
_pNode$1$ = -8						; size = 4
_nElementsLeft$1$ = -4					; size = 4
_this$1$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CList@PAUIPacket133101@@PAU1@@@UAEXAAVCArchive@@@Z PROC ; CList<IPacket133101 *,IPacket133101 *>::Serialize, COMDAT
; _this$ = ecx

; 1169 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00009	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1169 : {

  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	89 5d fc	 mov	 DWORD PTR _this$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00011	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00014	f7 d0		 not	 eax
  00016	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1174 : 	if (ar.IsStoring())

  00018	0f 84 ae 00 00
	00		 je	 $LN7@Serialize

; 1175 : 	{
; 1176 : 		ar.WriteCount(m_nCount);

  0001e	ff 73 0c	 push	 DWORD PTR [ebx+12]
  00021	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1177 : 		for (CNode* pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  00026	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00029	89 45 f8	 mov	 DWORD PTR _pNode$1$[ebp], eax
  0002c	85 c0		 test	 eax, eax
  0002e	0f 84 b9 01 00
	00		 je	 $LN86@Serialize
$LL4@Serialize:

; 1178 : 		{
; 1179 : 			ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1180 : 			TYPE* pData;
; 1181 : 			/*
; 1182 : 			 * in some cases the & operator might be overloaded, and we cannot use it to obtain
; 1183 : 			 * the address of a given object.  We then use the following trick to get the address
; 1184 : 			 */
; 1185 : 			pData = reinterpret_cast< TYPE* >( &reinterpret_cast< int& >( static_cast< TYPE& >( pNode->data ) ) );

  00034	8d 70 08	 lea	 esi, DWORD PTR [eax+8]

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00037	85 f6		 test	 esi, esi
  00039	0f 84 c0 01 00
	00		 je	 $LN76@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00042	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00045	f7 d0		 not	 eax
  00047	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  00049	74 33		 je	 SHORT $LN21@Serialize

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0004b	b8 01 00 00 00	 mov	 eax, 1
  00050	89 45 fc	 mov	 DWORD PTR _nElementsLeft$1$[ebp], eax
$LL16@Serialize:

; 80   : 		while( nElementsLeft > 0 )
; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00053	bb ff ff ff 1f	 mov	 ebx, 536870911		; 1fffffffH
  00058	3b c3		 cmp	 eax, ebx
  0005a	0f 42 d8	 cmovb	 ebx, eax

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0005d	8d 3c 9d 00 00
	00 00		 lea	 edi, DWORD PTR [ebx*4]
  00064	57		 push	 edi
  00065	56		 push	 esi
  00066	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  0006b	8b 45 fc	 mov	 eax, DWORD PTR _nElementsLeft$1$[ebp]

; 87   : 			pData += nElementsToWrite;

  0006e	03 f7		 add	 esi, edi
  00070	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00073	2b c3		 sub	 eax, ebx
  00075	89 45 fc	 mov	 DWORD PTR _nElementsLeft$1$[ebp], eax
  00078	85 c0		 test	 eax, eax
  0007a	75 d7		 jne	 SHORT $LL16@Serialize

; 88   : 		}
; 89   : 	}

  0007c	eb 35		 jmp	 SHORT $LN2@Serialize
$LN21@Serialize:

; 90   : 	else
; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  0007e	bf 01 00 00 00	 mov	 edi, 1
$LL18@Serialize:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00083	bb ff ff ff 1f	 mov	 ebx, 536870911		; 1fffffffH
  00088	3b fb		 cmp	 edi, ebx
  0008a	0f 42 df	 cmovb	 ebx, edi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0008d	8d 04 9d 00 00
	00 00		 lea	 eax, DWORD PTR [ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00094	50		 push	 eax
  00095	56		 push	 esi
  00096	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0009b	8d 0c 9d 00 00
	00 00		 lea	 ecx, DWORD PTR [ebx*4]
  000a2	3b c1		 cmp	 eax, ecx
  000a4	0f 85 4c 01 00
	00		 jne	 $LN75@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  000aa	03 f1		 add	 esi, ecx
  000ac	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;

  000af	2b fb		 sub	 edi, ebx
  000b1	75 d0		 jne	 SHORT $LL18@Serialize
$LN2@Serialize:

; 1177 : 		for (CNode* pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  000b3	8b 45 f8	 mov	 eax, DWORD PTR _pNode$1$[ebp]
  000b6	8b 00		 mov	 eax, DWORD PTR [eax]
  000b8	89 45 f8	 mov	 DWORD PTR _pNode$1$[ebp], eax
  000bb	85 c0		 test	 eax, eax
  000bd	0f 85 71 ff ff
	ff		 jne	 $LL4@Serialize

; 1197 : 		}
; 1198 : 	}
; 1199 : }

  000c3	5f		 pop	 edi
  000c4	5e		 pop	 esi
  000c5	5b		 pop	 ebx
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
$LN7@Serialize:

; 1186 : 			SerializeElements<TYPE>(ar, pData, 1);
; 1187 : 		}
; 1188 : 	}
; 1189 : 	else
; 1190 : 	{
; 1191 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000cc	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount

; 1192 : 		while (nNewCount--)

  000d1	85 c0		 test	 eax, eax
  000d3	0f 84 14 01 00
	00		 je	 $LN86@Serialize
  000d9	0f 1f 80 00 00
	00 00		 npad	 7
$LL5@Serialize:
  000e0	48		 dec	 eax
  000e1	89 45 f0	 mov	 DWORD PTR _nNewCount$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  000e4	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  000e7	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000ea	f7 d1		 not	 ecx
  000ec	f6 c1 01	 test	 cl, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  000ef	74 3d		 je	 SHORT $LN42@Serialize

; 79   : 		pData = pElements;

  000f1	8d 4d f4	 lea	 ecx, DWORD PTR _newData$1[ebp]
  000f4	bb 01 00 00 00	 mov	 ebx, 1
  000f9	89 4d f8	 mov	 DWORD PTR _pData$1$[ebp], ecx
  000fc	0f 1f 40 00	 npad	 4
$LL37@Serialize:

; 80   : 		while( nElementsLeft > 0 )
; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00100	bf ff ff ff 1f	 mov	 edi, 536870911		; 1fffffffH
  00105	3b df		 cmp	 ebx, edi
  00107	0f 42 fb	 cmovb	 edi, ebx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0010a	8d 34 bd 00 00
	00 00		 lea	 esi, DWORD PTR [edi*4]
  00111	56		 push	 esi
  00112	51		 push	 ecx
  00113	8b c8		 mov	 ecx, eax
  00115	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 87   : 			pData += nElementsToWrite;

  0011a	8b 4d f8	 mov	 ecx, DWORD PTR _pData$1$[ebp]
  0011d	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00120	03 ce		 add	 ecx, esi
  00122	89 4d f8	 mov	 DWORD PTR _pData$1$[ebp], ecx
  00125	2b df		 sub	 ebx, edi
  00127	75 d7		 jne	 SHORT $LL37@Serialize

; 88   : 		}
; 89   : 	}

  00129	8b 5d fc	 mov	 ebx, DWORD PTR _this$1$[ebp]
  0012c	eb 4a		 jmp	 SHORT $LN40@Serialize
$LN42@Serialize:

; 96   : 		pData = pElements;

  0012e	8d 55 f4	 lea	 edx, DWORD PTR _newData$1[ebp]
  00131	be 01 00 00 00	 mov	 esi, 1
  00136	89 55 f8	 mov	 DWORD PTR _pData$1$[ebp], edx
  00139	0f 1f 80 00 00
	00 00		 npad	 7
$LL39@Serialize:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00140	bf ff ff ff 1f	 mov	 edi, 536870911		; 1fffffffH
  00145	3b f7		 cmp	 esi, edi
  00147	0f 42 fe	 cmovb	 edi, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0014a	8d 0c bd 00 00
	00 00		 lea	 ecx, DWORD PTR [edi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00151	51		 push	 ecx
  00152	52		 push	 edx
  00153	8b c8		 mov	 ecx, eax
  00155	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0015a	8d 0c bd 00 00
	00 00		 lea	 ecx, DWORD PTR [edi*4]
  00161	3b c1		 cmp	 eax, ecx
  00163	0f 85 8d 00 00
	00		 jne	 $LN75@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  00169	8b 55 f8	 mov	 edx, DWORD PTR _pData$1$[ebp]
  0016c	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]

; 104  : 			pData += nElementsToRead;

  0016f	03 d1		 add	 edx, ecx
  00171	89 55 f8	 mov	 DWORD PTR _pData$1$[ebp], edx
  00174	2b f7		 sub	 esi, edi
  00176	75 c8		 jne	 SHORT $LL39@Serialize
$LN40@Serialize:

; 902  : 	if (m_pNodeFree == NULL)

  00178	83 7b 10 00	 cmp	 DWORD PTR [ebx+16], 0

; 1193 : 		{
; 1194 : 			TYPE newData[1];
; 1195 : 			SerializeElements<TYPE>(ar, newData, 1);
; 1196 : 			AddTail(newData[0]);

  0017c	8b 75 f4	 mov	 esi, DWORD PTR _newData$1[ebp]

; 968  : 	CNode* pNewNode = NewNode(m_pNodeTail, NULL);

  0017f	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 902  : 	if (m_pNodeFree == NULL)

  00182	75 32		 jne	 SHORT $LN63@Serialize

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  00184	6a 0c		 push	 12			; 0000000cH
  00186	ff 73 18	 push	 DWORD PTR [ebx+24]
  00189	8d 43 14	 lea	 eax, DWORD PTR [ebx+20]
  0018c	50		 push	 eax
  0018d	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  00192	8b 53 18	 mov	 edx, DWORD PTR [ebx+24]
  00195	83 c0 08	 add	 eax, 8
  00198	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  0019b	83 c2 ff	 add	 edx, -1
  0019e	8d 0c 49	 lea	 ecx, DWORD PTR [ecx+ecx*2]
  001a1	8d 0c 88	 lea	 ecx, DWORD PTR [eax+ecx*4]
  001a4	78 10		 js	 SHORT $LN63@Serialize
$LL60@Serialize:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  001a6	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  001a9	89 01		 mov	 DWORD PTR [ecx], eax

; 915  : 			m_pNodeFree = pNode;

  001ab	89 4b 10	 mov	 DWORD PTR [ebx+16], ecx
  001ae	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  001b1	83 ea 01	 sub	 edx, 1
  001b4	79 f0		 jns	 SHORT $LL60@Serialize
$LN63@Serialize:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  001b6	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  001b9	85 c9		 test	 ecx, ecx
  001bb	74 42		 je	 SHORT $LN76@Serialize

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  001bd	8b 01		 mov	 eax, DWORD PTR [ecx]
  001bf	89 43 10	 mov	 DWORD PTR [ebx+16], eax

; 922  : 	pNode->pPrev = pPrev;

  001c2	89 79 04	 mov	 DWORD PTR [ecx+4], edi

; 923  : 	pNode->pNext = pNext;

  001c5	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 924  : 	m_nCount++;

  001cb	ff 43 0c	 inc	 DWORD PTR [ebx+12]

; 969  : 	pNewNode->data = newElement;

  001ce	89 71 08	 mov	 DWORD PTR [ecx+8], esi

; 970  : 	if (m_pNodeTail != NULL)

  001d1	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  001d4	85 c0		 test	 eax, eax
  001d6	74 04		 je	 SHORT $LN54@Serialize

; 971  : 		m_pNodeTail->pNext = pNewNode;

  001d8	89 08		 mov	 DWORD PTR [eax], ecx
  001da	eb 03		 jmp	 SHORT $LN55@Serialize
$LN54@Serialize:

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;

  001dc	89 4b 04	 mov	 DWORD PTR [ebx+4], ecx
$LN55@Serialize:

; 1192 : 		while (nNewCount--)

  001df	8b 45 f0	 mov	 eax, DWORD PTR _nNewCount$1$[ebp]

; 974  : 	m_pNodeTail = pNewNode;

  001e2	89 4b 08	 mov	 DWORD PTR [ebx+8], ecx

; 1192 : 		while (nNewCount--)

  001e5	85 c0		 test	 eax, eax
  001e7	0f 85 f3 fe ff
	ff		 jne	 $LL5@Serialize
$LN86@Serialize:
  001ed	5f		 pop	 edi

; 1197 : 		}
; 1198 : 	}
; 1199 : }

  001ee	5e		 pop	 esi
  001ef	5b		 pop	 ebx
  001f0	8b e5		 mov	 esp, ebp
  001f2	5d		 pop	 ebp
  001f3	c2 04 00	 ret	 4
$LN75@Serialize:
  001f6	6a 00		 push	 0
  001f8	6a 03		 push	 3
  001fa	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN76@Serialize:
  001ff	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN105@Serialize:
  00204	cc		 int	 3
?Serialize@?$CList@PAUIPacket133101@@PAU1@@@UAEXAAVCArchive@@@Z ENDP ; CList<IPacket133101 *,IPacket133101 *>::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CList@PAUIPacket133101@@PAU1@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CList@PAUIPacket133101@@PAU1@@@UAE@XZ PROC		; CList<IPacket133101 *,IPacket133101 *>::~CList<IPacket133101 *,IPacket133101 *>, COMDAT
; _this$ = ecx

; 878  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CList@PAUIPacket133101@@PAU1@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 872  : 	m_pBlocks->FreeDataChain();

  00025	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]

; 878  : {

  00028	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CList@PAUIPacket133101@@PAU1@@@6B@

; 870  : 	m_nCount = 0;

  0002e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  00035	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0003c	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00043	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 872  : 	m_pBlocks->FreeDataChain();

  0004a	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 873  : 	m_pBlocks = NULL;

  0004f	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 879  : 	RemoveAll();
; 880  : 	ASSERT(m_nCount == 0);
; 881  : }

  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	5e		 pop	 esi
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
  00066	cc		 int	 3
  00067	cc		 int	 3
  00068	cc		 int	 3
  00069	cc		 int	 3
  0006a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CList@PAUIPacket133101@@PAU1@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CList@PAUIPacket133101@@PAU1@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CList@PAUIPacket133101@@PAU1@@@UAE@XZ ENDP		; CList<IPacket133101 *,IPacket133101 *>::~CList<IPacket133101 *,IPacket133101 *>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?NewNode@?$CList@PAUIPacket133101@@PAU1@@@IAEPAUCNode@1@PAU21@0@Z
_TEXT	SEGMENT
_pPrev$ = 8						; size = 4
_pNext$ = 12						; size = 4
?NewNode@?$CList@PAUIPacket133101@@PAU1@@@IAEPAUCNode@1@PAU21@0@Z PROC ; CList<IPacket133101 *,IPacket133101 *>::NewNode, COMDAT
; _this$ = ecx

; 901  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 902  : 	if (m_pNodeFree == NULL)

  00006	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0000a	75 34		 jne	 SHORT $LN7@NewNode

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  0000c	6a 0c		 push	 12			; 0000000cH
  0000e	ff 76 18	 push	 DWORD PTR [esi+24]
  00011	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  0001a	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  0001d	83 c0 08	 add	 eax, 8
  00020	8d 0c 52	 lea	 ecx, DWORD PTR [edx+edx*2]
  00023	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00026	83 c0 f4	 add	 eax, -12		; fffffff4H

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  00029	83 c2 ff	 add	 edx, -1
  0002c	78 12		 js	 SHORT $LN7@NewNode
  0002e	66 90		 npad	 2
$LL4@NewNode:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00030	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00033	89 08		 mov	 DWORD PTR [eax], ecx

; 915  : 			m_pNodeFree = pNode;

  00035	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00038	83 e8 0c	 sub	 eax, 12			; 0000000cH
  0003b	83 ea 01	 sub	 edx, 1
  0003e	79 f0		 jns	 SHORT $LL4@NewNode
$LN7@NewNode:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00040	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00043	85 c0		 test	 eax, eax
  00045	74 18		 je	 SHORT $LN17@NewNode

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  00047	8b 08		 mov	 ecx, DWORD PTR [eax]
  00049	89 4e 10	 mov	 DWORD PTR [esi+16], ecx

; 922  : 	pNode->pPrev = pPrev;

  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _pPrev$[ebp]
  0004f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 923  : 	pNode->pNext = pNext;

  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _pNext$[ebp]
  00055	89 08		 mov	 DWORD PTR [eax], ecx

; 924  : 	m_nCount++;

  00057	ff 46 0c	 inc	 DWORD PTR [esi+12]

; 925  : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 926  : 
; 927  : #pragma push_macro("new")
; 928  : #undef new
; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;
; 930  : #pragma pop_macro("new")
; 931  : 	return pNode;

  0005a	5e		 pop	 esi

; 932  : }

  0005b	5d		 pop	 ebp
  0005c	c2 08 00	 ret	 8
$LN17@NewNode:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  0005f	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN15@NewNode:
  00064	cc		 int	 3
?NewNode@?$CList@PAUIPacket133101@@PAU1@@@IAEPAUCNode@1@PAU21@0@Z ENDP ; CList<IPacket133101 *,IPacket133101 *>::NewNode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CList@PAUIPacket133101@@PAU1@@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CList@PAUIPacket133101@@PAU1@@@QAEXXZ PROC	; CList<IPacket133101 *,IPacket133101 *>::RemoveAll, COMDAT
; _this$ = ecx

; 862  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 863  : 	ASSERT_VALID(this);
; 864  : 
; 865  : 	// destroy elements
; 866  : 	CNode* pNode;
; 867  : 	for (pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)
; 868  : 		pNode->data.~TYPE();
; 869  : 
; 870  : 	m_nCount = 0;
; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;
; 872  : 	m_pBlocks->FreeDataChain();

  00003	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00006	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  0000d	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00014	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0001b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00022	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 873  : 	m_pBlocks = NULL;

  00027	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  0002e	5e		 pop	 esi

; 874  : }

  0002f	c3		 ret	 0
?RemoveAll@?$CList@PAUIPacket133101@@PAU1@@@QAEXXZ ENDP	; CList<IPacket133101 *,IPacket133101 *>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?AddTail@?$CList@PAUIPacket133101@@PAU1@@@QAEPAU__POSITION@@PAUIPacket133101@@@Z
_TEXT	SEGMENT
_newElement$ = 8					; size = 4
?AddTail@?$CList@PAUIPacket133101@@PAU1@@@QAEPAU__POSITION@@PAUIPacket133101@@@Z PROC ; CList<IPacket133101 *,IPacket133101 *>::AddTail, COMDAT
; _this$ = ecx

; 965  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi

; 902  : 	if (m_pNodeFree == NULL)

  00007	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0

; 966  : 	ASSERT_VALID(this);
; 967  : 
; 968  : 	CNode* pNewNode = NewNode(m_pNodeTail, NULL);

  0000b	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]

; 902  : 	if (m_pNodeFree == NULL)

  0000e	75 32		 jne	 SHORT $LN11@AddTail

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  00010	6a 0c		 push	 12			; 0000000cH
  00012	ff 76 18	 push	 DWORD PTR [esi+24]
  00015	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  0001e	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  00021	83 c0 08	 add	 eax, 8
  00024	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  00027	83 c2 ff	 add	 edx, -1
  0002a	8d 0c 49	 lea	 ecx, DWORD PTR [ecx+ecx*2]
  0002d	8d 0c 88	 lea	 ecx, DWORD PTR [eax+ecx*4]
  00030	78 10		 js	 SHORT $LN11@AddTail
$LL8@AddTail:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00032	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00035	89 01		 mov	 DWORD PTR [ecx], eax

; 915  : 			m_pNodeFree = pNode;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
  0003a	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  0003d	83 ea 01	 sub	 edx, 1
  00040	79 f0		 jns	 SHORT $LL8@AddTail
$LN11@AddTail:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00042	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00045	85 c9		 test	 ecx, ecx
  00047	74 39		 je	 SHORT $LN22@AddTail

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  00049	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004b	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 969  : 	pNewNode->data = newElement;

  0004e	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]

; 922  : 	pNode->pPrev = pPrev;

  00051	89 79 04	 mov	 DWORD PTR [ecx+4], edi

; 923  : 	pNode->pNext = pNext;

  00054	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 924  : 	m_nCount++;

  0005a	ff 46 0c	 inc	 DWORD PTR [esi+12]

; 969  : 	pNewNode->data = newElement;

  0005d	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 970  : 	if (m_pNodeTail != NULL)

  00060	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00063	85 c0		 test	 eax, eax
  00065	74 0d		 je	 SHORT $LN2@AddTail

; 971  : 		m_pNodeTail->pNext = pNewNode;

  00067	89 08		 mov	 DWORD PTR [eax], ecx

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;
; 974  : 	m_pNodeTail = pNewNode;
; 975  : 	return (POSITION) pNewNode;

  00069	8b c1		 mov	 eax, ecx
  0006b	5f		 pop	 edi
  0006c	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  0006f	5e		 pop	 esi

; 976  : }

  00070	5d		 pop	 ebp
  00071	c2 04 00	 ret	 4
$LN2@AddTail:

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;
; 974  : 	m_pNodeTail = pNewNode;
; 975  : 	return (POSITION) pNewNode;

  00074	5f		 pop	 edi
  00075	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  00078	8b c1		 mov	 eax, ecx
  0007a	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  0007d	5e		 pop	 esi

; 976  : }

  0007e	5d		 pop	 ebp
  0007f	c2 04 00	 ret	 4
$LN22@AddTail:

; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00082	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN20@AddTail:
  00087	cc		 int	 3
?AddTail@?$CList@PAUIPacket133101@@PAU1@@@QAEPAU__POSITION@@PAUIPacket133101@@@Z ENDP ; CList<IPacket133101 *,IPacket133101 *>::AddTail
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_AddIn_133101\I133101\_IString.h
;	COMDAT ??1ILPCSTR133101@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1ILPCSTR133101@@QAE@XZ PROC				; ILPCSTR133101::~ILPCSTR133101, COMDAT
; _this$ = ecx

; 44   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1ILPCSTR133101@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 45   : 		if( m_pIStrData)

  00025	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00028	85 c9		 test	 ecx, ecx
  0002a	74 13		 je	 SHORT $LN2@ILPCSTR133

; 46   : 		{
; 47   : 			m_pIStrData->Release();

  0002c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002e	51		 push	 ecx
  0002f	ff 50 08	 call	 DWORD PTR [eax+8]

; 48   : 			m_pIStrData = NULL;

  00032	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 49   : 			m_szData = NULL;

  00039	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN2@ILPCSTR133:

; 50   : 		}
; 51   : 	}

  0003f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00042	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00049	59		 pop	 ecx
  0004a	5e		 pop	 esi
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
  0004f	cc		 int	 3
  00050	cc		 int	 3
  00051	cc		 int	 3
  00052	cc		 int	 3
  00053	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1ILPCSTR133101@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ILPCSTR133101@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ILPCSTR133101@@QAE@XZ ENDP				; ILPCSTR133101::~ILPCSTR133101
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC		; CObject::Dump, COMDAT
; _this$ = ecx

; 122  : 	{ /* no dumping in release builds */ }

  00000	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
?AssertValid@CObject@@UBEXXZ PROC			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 120  : 	{ /* no asserts in release builds */ }

  00000	c2 00 00	 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC		; CObject::Serialize, COMDAT
; _this$ = ecx

; 106  : 	{ /* CObject does not serialize anything by default */ }

  00000	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT
??1CObject@@UAE@XZ PROC					; CObject::~CObject, COMDAT
; _this$ = ecx

; 104  : 	{ }

  00000	c2 00 00	 ret	 0
??1CObject@@UAE@XZ ENDP					; CObject::~CObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\AnalysisTool\MainAutoTrendImplementation.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
