; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\AnalysisTool\BlockRegion.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??4CGraphPartRegion@@QAEAAV0@ABV0@@Z		; CGraphPartRegion::operator=
PUBLIC	??0CGraphPartRegion@@QAE@XZ			; CGraphPartRegion::CGraphPartRegion
PUBLIC	??0CGraphPartRegion@@QAE@ABVCRect@@0@Z		; CGraphPartRegion::CGraphPartRegion
PUBLIC	??0CGraphPartRegion@@QAE@ABV0@@Z		; CGraphPartRegion::CGraphPartRegion
PUBLIC	?SetFull@CGraphPartRegion@@QAEXABVCRect@@@Z	; CGraphPartRegion::SetFull
PUBLIC	?SetUnmixed@CGraphPartRegion@@QAEXABVCRect@@@Z	; CGraphPartRegion::SetUnmixed
PUBLIC	?GetFull@CGraphPartRegion@@QBE?AVCRect@@XZ	; CGraphPartRegion::GetFull
PUBLIC	?GetUnmixed@CGraphPartRegion@@QBE?AVCRect@@XZ	; CGraphPartRegion::GetUnmixed
PUBLIC	?IsDrawing@CGraphPartRegion@@QBE_NXZ		; CGraphPartRegion::IsDrawing
PUBLIC	??4CBlockRegion@@QAEAAV0@ABV0@@Z		; CBlockRegion::operator=
PUBLIC	??0CBlockRegion@@QAE@XZ				; CBlockRegion::CBlockRegion
PUBLIC	??0CBlockRegion@@QAE@ABVCGraphPartRegion@@ABVCHorzScaleRegion@@ABVCVertScaleRegion@@@Z ; CBlockRegion::CBlockRegion
PUBLIC	??0CBlockRegion@@QAE@ABV0@@Z			; CBlockRegion::CBlockRegion
PUBLIC	?GetGraphPartRegion@CBlockRegion@@QBE?AVCGraphPartRegion@@XZ ; CBlockRegion::GetGraphPartRegion
PUBLIC	?GetHorzScaleRegion@CBlockRegion@@QBE?AVCHorzScaleRegion@@XZ ; CBlockRegion::GetHorzScaleRegion
PUBLIC	?GetVertScaleRegion@CBlockRegion@@QBE?AVCVertScaleRegion@@XZ ; CBlockRegion::GetVertScaleRegion
PUBLIC	?GetBlockRegion@CBlockRegion@@QBE?AVCRect@@XZ	; CBlockRegion::GetBlockRegion
PUBLIC	?GetFullGraphRegion@CBlockRegion@@QBE?AVCRect@@XZ ; CBlockRegion::GetFullGraphRegion
PUBLIC	?GetUnmixedGraphRegion@CBlockRegion@@QBE?AVCRect@@XZ ; CBlockRegion::GetUnmixedGraphRegion
PUBLIC	?GetFullGraphRegion_TopLeft@CBlockRegion@@QBE?AVCPoint@@XZ ; CBlockRegion::GetFullGraphRegion_TopLeft
PUBLIC	?GetFullGraphRegion_TopRight@CBlockRegion@@QBE?AVCPoint@@XZ ; CBlockRegion::GetFullGraphRegion_TopRight
PUBLIC	?GetFullGraphRegion_BottomLeft@CBlockRegion@@QBE?AVCPoint@@XZ ; CBlockRegion::GetFullGraphRegion_BottomLeft
PUBLIC	??4CBlockRegionList@@QAEAAV0@ABV0@@Z		; CBlockRegionList::operator=
PUBLIC	??0CBlockRegionList@@QAE@XZ			; CBlockRegionList::CBlockRegionList
PUBLIC	??0CBlockRegionList@@QAE@ABV0@@Z		; CBlockRegionList::CBlockRegionList
PUBLIC	?AddTail@CBlockRegionList@@QAEXABVCBlockRegion@@@Z ; CBlockRegionList::AddTail
PUBLIC	?RemoveAll@CBlockRegionList@@QAEXXZ		; CBlockRegionList::RemoveAll
PUBLIC	?SetCurrentNumber@CBlockRegionList@@QAEXH@Z	; CBlockRegionList::SetCurrentNumber
PUBLIC	?SetCurrentNumber@CBlockRegionList@@QAEXABVCPoint@@@Z ; CBlockRegionList::SetCurrentNumber
PUBLIC	?GetCount@CBlockRegionList@@QBEHXZ		; CBlockRegionList::GetCount
PUBLIC	?GetHead@CBlockRegionList@@QBE?AVCBlockRegion@@XZ ; CBlockRegionList::GetHead
PUBLIC	?GetTail@CBlockRegionList@@QBE?AVCBlockRegion@@XZ ; CBlockRegionList::GetTail
PUBLIC	?GetCurrentAt@CBlockRegionList@@QBE?AVCBlockRegion@@XZ ; CBlockRegionList::GetCurrentAt
PUBLIC	?GetAt@CBlockRegionList@@QBE?AVCBlockRegion@@H@Z ; CBlockRegionList::GetAt
PUBLIC	?GetFullGraphRegionSumInList@CBlockRegionList@@QBE?AVCRect@@XZ ; CBlockRegionList::GetFullGraphRegionSumInList
PUBLIC	?GetCurrentNumber@CBlockRegionList@@QBEHXZ	; CBlockRegionList::GetCurrentNumber
PUBLIC	?GetNumber@CBlockRegionList@@QBEHABVCPoint@@@Z	; CBlockRegionList::GetNumber
PUBLIC	??1?$CDequeList@VCBlockRegion@@@@QAE@XZ		; CDequeList<CBlockRegion>::~CDequeList<CBlockRegion>
PUBLIC	?_Xlen@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@ABEXXZ ; std::deque<CBlockRegion,std::allocator<CBlockRegion> >::_Xlen
PUBLIC	?_Growmap@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@AAEXI@Z ; std::deque<CBlockRegion,std::allocator<CBlockRegion> >::_Growmap
PUBLIC	?_Tidy@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@AAEXXZ ; std::deque<CBlockRegion,std::allocator<CBlockRegion> >::_Tidy
PUBLIC	?AddTail@?$CDequeList@VCBlockRegion@@@@QAEXABVCBlockRegion@@@Z ; CDequeList<CBlockRegion>::AddTail
PUBLIC	?GetBlockRegionList@CBlockRegionList@@QAEHABVCPoint@@PAUIChartManager133101@@@Z ; CBlockRegionList::GetBlockRegionList
PUBLIC	?GetBlockRegionList@CBlockRegionList@@QAEHHPAUIChartManager133101@@@Z ; CBlockRegionList::GetBlockRegionList
PUBLIC	??$uninitialized_copy@PAPAVCBlockRegion@@PAPAV1@@std@@YAPAPAVCBlockRegion@@QAPAV1@0PAPAV1@@Z ; std::uninitialized_copy<CBlockRegion * *,CBlockRegion * *>
PUBLIC	??$_Uninitialized_value_construct_n_unchecked1@PAPAVCBlockRegion@@I@std@@YAPAPAVCBlockRegion@@PAPAV1@I@Z ; std::_Uninitialized_value_construct_n_unchecked1<CBlockRegion * *,unsigned int>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Zero_range@PAPAVCBlockRegion@@@std@@YAPAPAVCBlockRegion@@QAPAV1@0@Z ; std::_Zero_range<CBlockRegion * *>
PUBLIC	??$_Copy_memmove@PAPAVCBlockRegion@@PAPAV1@@std@@YAPAPAVCBlockRegion@@PAPAV1@00@Z ; std::_Copy_memmove<CBlockRegion * *,CBlockRegion * *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp___invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp__IsRectEmpty@4:PROC
EXTRN	__imp__PtInRect@12:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	??0CHorzScaleRegion@@QAE@XZ:PROC		; CHorzScaleRegion::CHorzScaleRegion
EXTRN	?SetTopScaleRegion@CHorzScaleRegion@@QAEXABVCRect@@@Z:PROC ; CHorzScaleRegion::SetTopScaleRegion
EXTRN	?SetBottomScaleRegion@CHorzScaleRegion@@QAEXABVCRect@@@Z:PROC ; CHorzScaleRegion::SetBottomScaleRegion
EXTRN	?GetTopScaleRegion@CHorzScaleRegion@@QBE?AVCRect@@XZ:PROC ; CHorzScaleRegion::GetTopScaleRegion
EXTRN	?GetBottomScaleRegion@CHorzScaleRegion@@QBE?AVCRect@@XZ:PROC ; CHorzScaleRegion::GetBottomScaleRegion
EXTRN	??0CVertScaleRegion@@QAE@XZ:PROC		; CVertScaleRegion::CVertScaleRegion
EXTRN	?SetLeftScaleRegion@CVertScaleRegion@@QAEXABVCRect@@@Z:PROC ; CVertScaleRegion::SetLeftScaleRegion
EXTRN	?SetRightScaleRegion@CVertScaleRegion@@QAEXABVCRect@@@Z:PROC ; CVertScaleRegion::SetRightScaleRegion
EXTRN	?GetLeftScaleRegion@CVertScaleRegion@@QBE?AVCRect@@XZ:PROC ; CVertScaleRegion::GetLeftScaleRegion
EXTRN	?GetRightScaleRegion@CVertScaleRegion@@QBE?AVCRect@@XZ:PROC ; CVertScaleRegion::GetRightScaleRegion
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@ DB 'deque<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CBlockRegionList@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CBlockRegionList@@QAE@ABV0@@Z$0
__ehfuncinfo$??0CBlockRegionList@@QAE@ABV0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CBlockRegionList@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCBlockRegion@@PAPAV1@@std@@YAPAPAVCBlockRegion@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCBlockRegion@@PAPAV1@@std@@YAPAPAVCBlockRegion@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CBlockRegion * *,CBlockRegion * *>, COMDAT

; 4058 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4059 :     auto _FirstPtr              = _To_address(_First);
; 4060 :     auto _LastPtr               = _To_address(_Last);
; 4061 :     auto _DestPtr               = _To_address(_Dest);
; 4062 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4063 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4064 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4065 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4066 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4067 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4068 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4069 :     } else {
; 4070 :         return _Dest + (_LastPtr - _FirstPtr);
; 4071 :     }
; 4072 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCBlockRegion@@PAPAV1@@std@@YAPAPAVCBlockRegion@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CBlockRegion * *,CBlockRegion * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Zero_range@PAPAVCBlockRegion@@@std@@YAPAPAVCBlockRegion@@QAPAV1@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Zero_range@PAPAVCBlockRegion@@@std@@YAPAPAVCBlockRegion@@QAPAV1@0@Z PROC ; std::_Zero_range<CBlockRegion * *>, COMDAT

; 1789 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1790 :     char* const _First_ch = reinterpret_cast<char*>(_To_address(_First));
; 1791 :     char* const _Last_ch  = reinterpret_cast<char*>(_To_address(_Last));
; 1792 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	51		 push	 ecx
  0000c	6a 00		 push	 0
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 _memset

; 1793 :     return _Last;

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1794 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Zero_range@PAPAVCBlockRegion@@@std@@YAPAPAVCBlockRegion@@QAPAV1@0@Z ENDP ; std::_Zero_range<CBlockRegion * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 127  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 129  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 130  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 79   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 131  :         _Throw_bad_array_new_length(); // add overflow
; 132  :     }
; 133  : 
; 134  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 79   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 136  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 137  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 138  : 
; 139  : #ifdef _DEBUG
; 140  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 141  : #endif // _DEBUG
; 142  :     return _Ptr;
; 143  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp___invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n_unchecked1@PAPAVCBlockRegion@@I@std@@YAPAPAVCBlockRegion@@PAPAV1@I@Z
_TEXT	SEGMENT
__UFirst$ = 8						; size = 4
__Count$ = 12						; size = 4
??$_Uninitialized_value_construct_n_unchecked1@PAPAVCBlockRegion@@I@std@@YAPAPAVCBlockRegion@@PAPAV1@I@Z PROC ; std::_Uninitialized_value_construct_n_unchecked1<CBlockRegion * *,unsigned int>, COMDAT

; 1821 : _NoThrowFwdIt _Uninitialized_value_construct_n_unchecked1(_NoThrowFwdIt _UFirst, _Diff _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1822 :     // value-initialize all elements in [_UFirst, _UFirst + _Count_raw)
; 1823 :     _STL_INTERNAL_CHECK(_Count >= 0);
; 1824 :     if constexpr (_Use_memset_value_construct_v<_NoThrowFwdIt>) {
; 1825 :         return _Zero_range(_UFirst, _UFirst + _Count);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	56		 push	 esi

; 1792 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  00007	8b 75 08	 mov	 esi, DWORD PTR __UFirst$[ebp]

; 1821 : _NoThrowFwdIt _Uninitialized_value_construct_n_unchecked1(_NoThrowFwdIt _UFirst, _Diff _Count) {

  0000a	57		 push	 edi

; 1822 :     // value-initialize all elements in [_UFirst, _UFirst + _Count_raw)
; 1823 :     _STL_INTERNAL_CHECK(_Count >= 0);
; 1824 :     if constexpr (_Use_memset_value_construct_v<_NoThrowFwdIt>) {
; 1825 :         return _Zero_range(_UFirst, _UFirst + _Count);

  0000b	8d 3c 85 00 00
	00 00		 lea	 edi, DWORD PTR [eax*4]

; 1792 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  00012	57		 push	 edi
  00013	6a 00		 push	 0
  00015	56		 push	 esi
  00016	e8 00 00 00 00	 call	 _memset
  0001b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1822 :     // value-initialize all elements in [_UFirst, _UFirst + _Count_raw)
; 1823 :     _STL_INTERNAL_CHECK(_Count >= 0);
; 1824 :     if constexpr (_Use_memset_value_construct_v<_NoThrowFwdIt>) {
; 1825 :         return _Zero_range(_UFirst, _UFirst + _Count);

  0001e	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi

; 1826 :     } else {
; 1827 :         _Uninitialized_backout<_NoThrowFwdIt> _Backout{_UFirst};
; 1828 :         for (; 0 < _Count; --_Count) {
; 1829 :             _Backout._Emplace_back();
; 1830 :         }
; 1831 : 
; 1832 :         return _Backout._Release();
; 1833 :     }
; 1834 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_value_construct_n_unchecked1@PAPAVCBlockRegion@@I@std@@YAPAPAVCBlockRegion@@PAPAV1@I@Z ENDP ; std::_Uninitialized_value_construct_n_unchecked1<CBlockRegion * *,unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$uninitialized_copy@PAPAVCBlockRegion@@PAPAV1@@std@@YAPAPAVCBlockRegion@@QAPAV1@0PAPAV1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$uninitialized_copy@PAPAVCBlockRegion@@PAPAV1@@std@@YAPAPAVCBlockRegion@@QAPAV1@0PAPAV1@@Z PROC ; std::uninitialized_copy<CBlockRegion * *,CBlockRegion * *>, COMDAT

; 1687 : _NoThrowFwdIt uninitialized_copy(const _InIt _First, const _InIt _Last, _NoThrowFwdIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility

; 4065 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1687 : _NoThrowFwdIt uninitialized_copy(const _InIt _First, const _InIt _Last, _NoThrowFwdIt _Dest) {

  00006	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility

; 4066 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1687 : _NoThrowFwdIt uninitialized_copy(const _InIt _First, const _InIt _Last, _NoThrowFwdIt _Dest) {

  0000a	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility

; 4065 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax

; 4066 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4067 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4068 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1694 :     return _Dest;

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 1695 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$uninitialized_copy@PAPAVCBlockRegion@@PAPAV1@@std@@YAPAPAVCBlockRegion@@QAPAV1@0PAPAV1@@Z ENDP ; std::uninitialized_copy<CBlockRegion * *,CBlockRegion * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Chart\DequeList.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Chart\DequeList.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetBlockRegionList@CBlockRegionList@@QAEHHPAUIChartManager133101@@@Z
_TEXT	SEGMENT
$T1 = -244						; size = 96
_graphPartRegion$2$ = -148				; size = 16
_graphPartRegion$1$ = -132				; size = 16
_this$GSCopy$1$ = -116					; size = 4
_nRowCount$1$ = -112					; size = 4
tv296 = -108						; size = 4
_i$1$ = -104						; size = 4
_vertScaleRegion$2 = -100				; size = 32
_horzScaleRegion$3 = -68				; size = 32
_rt2$ = -36						; size = 16
_rt1$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_nColumn$ = 8						; size = 4
_pMainBlock$ = 12					; size = 4
?GetBlockRegionList@CBlockRegionList@@QAEHHPAUIChartManager133101@@@Z PROC ; CBlockRegionList::GetBlockRegionList, COMDAT
; _this$ = ecx

; 305  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f4 00 00
	00		 sub	 esp, 244		; 000000f4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR _nColumn$[ebp]
  00017	56		 push	 esi
  00018	8b 75 0c	 mov	 esi, DWORD PTR _pMainBlock$[ebp]
  0001b	57		 push	 edi
  0001c	8b f9		 mov	 edi, ecx
  0001e	89 7d 8c	 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi

; 306  : 	if( !pMainBlock) return FALSE;

  00021	85 f6		 test	 esi, esi
  00023	0f 84 68 01 00
	00		 je	 $LN32@GetBlockRe

; 307  : 	if( nColumn < 0) return FALSE;

  00029	85 db		 test	 ebx, ebx
  0002b	0f 88 60 01 00
	00		 js	 $LN32@GetBlockRe
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Chart\DequeList.h

; 128  : 	void RemoveAll(){ m_deque.clear(); };

  00031	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1332 :         _Tidy();

  00034	8b c8		 mov	 ecx, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Chart\DequeList.h

; 128  : 	void RemoveAll(){ m_deque.clear(); };

  00036	89 45 94	 mov	 DWORD PTR tv296[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1332 :         _Tidy();

  00039	e8 00 00 00 00	 call	 ?_Tidy@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@AAEXXZ ; std::deque<CBlockRegion,std::allocator<CBlockRegion> >::_Tidy
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 212  : 	m_nCurrentNumber = -1;

  0003e	c7 07 ff ff ff
	ff		 mov	 DWORD PTR [edi], -1
  00044	0f 57 c0	 xorps	 xmm0, xmm0

; 311  : 	int nRowCount = pMainBlock->GetRowCountInColumn( nColumn);

  00047	8b 06		 mov	 eax, DWORD PTR [esi]
  00049	8b ce		 mov	 ecx, esi
  0004b	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  0004c	0f 11 45 ec	 movups	 XMMWORD PTR _rt1$[ebp], xmm0
  00050	0f 11 45 dc	 movups	 XMMWORD PTR _rt2$[ebp], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 311  : 	int nRowCount = pMainBlock->GetRowCountInColumn( nColumn);

  00054	ff 50 24	 call	 DWORD PTR [eax+36]
  00057	8b c8		 mov	 ecx, eax

; 312  : 	for( int i = 0; i < nRowCount; i++)

  00059	33 c0		 xor	 eax, eax
  0005b	89 4d 90	 mov	 DWORD PTR _nRowCount$1$[ebp], ecx
  0005e	89 45 98	 mov	 DWORD PTR _i$1$[ebp], eax
  00061	85 c9		 test	 ecx, ecx
  00063	0f 8e 0d 01 00
	00		 jle	 $LN3@GetBlockRe
  00069	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@GetBlockRe:

; 313  : 	{
; 314  : 		IBlock *pIBlock = pMainBlock->GetBlock( i, nColumn);

  00070	8b 16		 mov	 edx, DWORD PTR [esi]
  00072	8b ce		 mov	 ecx, esi
  00074	53		 push	 ebx
  00075	50		 push	 eax
  00076	ff 52 38	 call	 DWORD PTR [edx+56]
  00079	8b f8		 mov	 edi, eax

; 315  : 		if( !pIBlock) return FALSE;

  0007b	85 ff		 test	 edi, edi
  0007d	0f 84 0e 01 00
	00		 je	 $LN32@GetBlockRe

; 316  : 
; 317  : 		pIBlock->GetGraphRegions( rt1,rt2);

  00083	8b 17		 mov	 edx, DWORD PTR [edi]
  00085	8d 45 dc	 lea	 eax, DWORD PTR _rt2$[ebp]
  00088	50		 push	 eax
  00089	8d 45 ec	 lea	 eax, DWORD PTR _rt1$[ebp]
  0008c	8b cf		 mov	 ecx, edi
  0008e	50		 push	 eax
  0008f	ff 52 10	 call	 DWORD PTR [edx+16]

; 37   : 	m_full(full),

  00092	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR _rt1$[ebp]

; 318  : 		CGraphPartRegion graphPartRegion( rt1, rt2);
; 319  : 
; 320  : 		pIBlock->GetHorzScaleRegion( rt1, rt2);

  00096	8b 07		 mov	 eax, DWORD PTR [edi]
  00098	8d 4d dc	 lea	 ecx, DWORD PTR _rt2$[ebp]
  0009b	51		 push	 ecx

; 37   : 	m_full(full),

  0009c	0f 11 85 7c ff
	ff ff		 movups	 XMMWORD PTR _graphPartRegion$1$[ebp], xmm0

; 318  : 		CGraphPartRegion graphPartRegion( rt1, rt2);
; 319  : 
; 320  : 		pIBlock->GetHorzScaleRegion( rt1, rt2);

  000a3	8d 4d ec	 lea	 ecx, DWORD PTR _rt1$[ebp]

; 38   : 	m_unmixed(unmixed)

  000a6	0f 10 45 dc	 movups	 xmm0, XMMWORD PTR _rt2$[ebp]

; 318  : 		CGraphPartRegion graphPartRegion( rt1, rt2);
; 319  : 
; 320  : 		pIBlock->GetHorzScaleRegion( rt1, rt2);

  000aa	51		 push	 ecx
  000ab	8b cf		 mov	 ecx, edi

; 38   : 	m_unmixed(unmixed)

  000ad	0f 11 85 6c ff
	ff ff		 movups	 XMMWORD PTR _graphPartRegion$2$[ebp], xmm0

; 318  : 		CGraphPartRegion graphPartRegion( rt1, rt2);
; 319  : 
; 320  : 		pIBlock->GetHorzScaleRegion( rt1, rt2);

  000b4	ff 50 14	 call	 DWORD PTR [eax+20]

; 321  : 		CHorzScaleRegion horzScaleRegion;

  000b7	8d 4d bc	 lea	 ecx, DWORD PTR _horzScaleRegion$3[ebp]
  000ba	e8 00 00 00 00	 call	 ??0CHorzScaleRegion@@QAE@XZ ; CHorzScaleRegion::CHorzScaleRegion

; 322  : 		horzScaleRegion.SetTopScaleRegion( rt1);

  000bf	8d 45 ec	 lea	 eax, DWORD PTR _rt1$[ebp]
  000c2	50		 push	 eax
  000c3	8d 4d bc	 lea	 ecx, DWORD PTR _horzScaleRegion$3[ebp]
  000c6	e8 00 00 00 00	 call	 ?SetTopScaleRegion@CHorzScaleRegion@@QAEXABVCRect@@@Z ; CHorzScaleRegion::SetTopScaleRegion

; 323  : 		horzScaleRegion.SetBottomScaleRegion( rt2);

  000cb	8d 45 dc	 lea	 eax, DWORD PTR _rt2$[ebp]
  000ce	50		 push	 eax
  000cf	8d 4d bc	 lea	 ecx, DWORD PTR _horzScaleRegion$3[ebp]
  000d2	e8 00 00 00 00	 call	 ?SetBottomScaleRegion@CHorzScaleRegion@@QAEXABVCRect@@@Z ; CHorzScaleRegion::SetBottomScaleRegion

; 324  : 
; 325  : 		pIBlock->GetVertScaleRegion( rt1, rt2);

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8d 4d dc	 lea	 ecx, DWORD PTR _rt2$[ebp]
  000dc	51		 push	 ecx
  000dd	8d 4d ec	 lea	 ecx, DWORD PTR _rt1$[ebp]
  000e0	51		 push	 ecx
  000e1	8b cf		 mov	 ecx, edi
  000e3	ff 50 18	 call	 DWORD PTR [eax+24]

; 326  : 		CVertScaleRegion vertScaleRegion;

  000e6	8d 4d 9c	 lea	 ecx, DWORD PTR _vertScaleRegion$2[ebp]
  000e9	e8 00 00 00 00	 call	 ??0CVertScaleRegion@@QAE@XZ ; CVertScaleRegion::CVertScaleRegion

; 327  : 		vertScaleRegion.SetLeftScaleRegion( rt1);

  000ee	8d 45 ec	 lea	 eax, DWORD PTR _rt1$[ebp]
  000f1	50		 push	 eax
  000f2	8d 4d 9c	 lea	 ecx, DWORD PTR _vertScaleRegion$2[ebp]
  000f5	e8 00 00 00 00	 call	 ?SetLeftScaleRegion@CVertScaleRegion@@QAEXABVCRect@@@Z ; CVertScaleRegion::SetLeftScaleRegion

; 328  : 		vertScaleRegion.SetRightScaleRegion( rt2);

  000fa	8d 45 dc	 lea	 eax, DWORD PTR _rt2$[ebp]
  000fd	50		 push	 eax
  000fe	8d 4d 9c	 lea	 ecx, DWORD PTR _vertScaleRegion$2[ebp]
  00101	e8 00 00 00 00	 call	 ?SetRightScaleRegion@CVertScaleRegion@@QAEXABVCRect@@@Z ; CVertScaleRegion::SetRightScaleRegion

; 62   : 	return m_full;

  00106	0f 10 85 7c ff
	ff ff		 movups	 xmm0, XMMWORD PTR _graphPartRegion$1$[ebp]

; 206  : 	m_regionList.AddTail(blockRegion);

  0010d	8b 4d 94	 mov	 ecx, DWORD PTR tv296[ebp]
  00110	8d 85 0c ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00116	50		 push	 eax

; 62   : 	return m_full;

  00117	0f 11 85 0c ff
	ff ff		 movups	 XMMWORD PTR $T1[ebp], xmm0

; 67   : 	return m_unmixed;

  0011e	0f 10 85 6c ff
	ff ff		 movups	 xmm0, XMMWORD PTR _graphPartRegion$2$[ebp]
  00125	0f 11 85 1c ff
	ff ff		 movups	 XMMWORD PTR $T1[ebp+16], xmm0

; 98   : 	m_horzScaleRegion(horzScale),

  0012c	0f 10 45 bc	 movups	 xmm0, XMMWORD PTR _horzScaleRegion$3[ebp]
  00130	0f 11 85 2c ff
	ff ff		 movups	 XMMWORD PTR $T1[ebp+32], xmm0
  00137	0f 10 45 cc	 movups	 xmm0, XMMWORD PTR _horzScaleRegion$3[ebp+16]
  0013b	0f 11 85 3c ff
	ff ff		 movups	 XMMWORD PTR $T1[ebp+48], xmm0

; 99   : 	m_vertScaleRegion(vertScale)

  00142	0f 10 45 9c	 movups	 xmm0, XMMWORD PTR _vertScaleRegion$2[ebp]
  00146	0f 11 85 4c ff
	ff ff		 movups	 XMMWORD PTR $T1[ebp+64], xmm0
  0014d	0f 10 45 ac	 movups	 xmm0, XMMWORD PTR _vertScaleRegion$2[ebp+16]
  00151	0f 11 85 5c ff
	ff ff		 movups	 XMMWORD PTR $T1[ebp+80], xmm0

; 206  : 	m_regionList.AddTail(blockRegion);

  00158	e8 00 00 00 00	 call	 ?AddTail@?$CDequeList@VCBlockRegion@@@@QAEXABVCBlockRegion@@@Z ; CDequeList<CBlockRegion>::AddTail

; 329  : 
; 330  : 		AddTail( CBlockRegion( graphPartRegion, horzScaleRegion, vertScaleRegion));
; 331  : 
; 332  : 		pIBlock->Release();

  0015d	8b 07		 mov	 eax, DWORD PTR [edi]
  0015f	57		 push	 edi
  00160	ff 50 08	 call	 DWORD PTR [eax+8]
  00163	8b 45 98	 mov	 eax, DWORD PTR _i$1$[ebp]
  00166	40		 inc	 eax
  00167	89 45 98	 mov	 DWORD PTR _i$1$[ebp], eax
  0016a	3b 45 90	 cmp	 eax, DWORD PTR _nRowCount$1$[ebp]
  0016d	0f 8c fd fe ff
	ff		 jl	 $LL4@GetBlockRe
  00173	8b 7d 8c	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
$LN3@GetBlockRe:

; 333  : 	}
; 334  : 
; 335  : 	return (GetCount() > 0);

  00176	33 c0		 xor	 eax, eax
  00178	39 47 14	 cmp	 DWORD PTR [edi+20], eax
  0017b	5f		 pop	 edi

; 336  : }

  0017c	5e		 pop	 esi
  0017d	0f 9f c0	 setg	 al
  00180	5b		 pop	 ebx
  00181	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00184	33 cd		 xor	 ecx, ebp
  00186	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0018b	8b e5		 mov	 esp, ebp
  0018d	5d		 pop	 ebp
  0018e	c2 08 00	 ret	 8
$LN32@GetBlockRe:
  00191	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00194	33 c0		 xor	 eax, eax
  00196	5f		 pop	 edi
  00197	5e		 pop	 esi
  00198	33 cd		 xor	 ecx, ebp
  0019a	5b		 pop	 ebx
  0019b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a0	8b e5		 mov	 esp, ebp
  001a2	5d		 pop	 ebp
  001a3	c2 08 00	 ret	 8
?GetBlockRegionList@CBlockRegionList@@QAEHHPAUIChartManager133101@@@Z ENDP ; CBlockRegionList::GetBlockRegionList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Chart\DequeList.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Chart\DequeList.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetBlockRegionList@CBlockRegionList@@QAEHABVCPoint@@PAUIChartManager133101@@@Z
_TEXT	SEGMENT
$T1 = -252						; size = 96
_graphPartRegion$2$ = -156				; size = 16
_graphPartRegion$1$ = -140				; size = 16
_nRow$ = -124						; size = 4
_this$GSCopy$1$ = -120					; size = 4
_nRowCount$1$ = -116					; size = 4
tv332 = -112						; size = 4
_nColumn$ = -108					; size = 4
_i$1$ = -104						; size = 4
_vertScaleRegion$2 = -100				; size = 32
_horzScaleRegion$3 = -68				; size = 32
_rt2$4 = -36						; size = 16
_rt1$5 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_point$ = 8						; size = 4
_pMainBlock$ = 12					; size = 4
?GetBlockRegionList@CBlockRegionList@@QAEHABVCPoint@@PAUIChartManager133101@@@Z PROC ; CBlockRegionList::GetBlockRegionList, COMDAT
; _this$ = ecx

; 297  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b 75 0c	 mov	 esi, DWORD PTR _pMainBlock$[ebp]
  00017	57		 push	 edi
  00018	8b f9		 mov	 edi, ecx
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR _point$[ebp]
  0001d	89 7d 88	 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi

; 298  : 	if( !pMainBlock) return FALSE;

  00020	85 f6		 test	 esi, esi
  00022	0f 84 95 01 00
	00		 je	 $LN40@GetBlockRe

; 299  : 	int nRow, nColumn;
; 300  : 	if( !pMainBlock->GetBlockIndex( point, nRow, nColumn)) return FALSE;

  00028	8b 06		 mov	 eax, DWORD PTR [esi]
  0002a	8d 55 94	 lea	 edx, DWORD PTR _nColumn$[ebp]
  0002d	52		 push	 edx
  0002e	8d 55 84	 lea	 edx, DWORD PTR _nRow$[ebp]
  00031	52		 push	 edx
  00032	ff 71 04	 push	 DWORD PTR [ecx+4]
  00035	ff 31		 push	 DWORD PTR [ecx]
  00037	8b ce		 mov	 ecx, esi
  00039	ff 90 8c 00 00
	00		 call	 DWORD PTR [eax+140]
  0003f	85 c0		 test	 eax, eax
  00041	0f 84 76 01 00
	00		 je	 $LN40@GetBlockRe

; 301  : 	return GetBlockRegionList( nColumn, pMainBlock);

  00047	53		 push	 ebx
  00048	8b 5d 94	 mov	 ebx, DWORD PTR _nColumn$[ebp]
  0004b	85 db		 test	 ebx, ebx

; 307  : 	if( nColumn < 0) return FALSE;

  0004d	79 15		 jns	 SHORT $LN10@GetBlockRe
$LN36@GetBlockRe:

; 301  : 	return GetBlockRegionList( nColumn, pMainBlock);

  0004f	5b		 pop	 ebx
  00050	5f		 pop	 edi
  00051	33 c0		 xor	 eax, eax

; 302  : }

  00053	5e		 pop	 esi
  00054	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00057	33 cd		 xor	 ecx, ebp
  00059	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c2 08 00	 ret	 8
$LN10@GetBlockRe:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Chart\DequeList.h

; 128  : 	void RemoveAll(){ m_deque.clear(); };

  00064	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1332 :         _Tidy();

  00067	8b c8		 mov	 ecx, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Chart\DequeList.h

; 128  : 	void RemoveAll(){ m_deque.clear(); };

  00069	89 45 90	 mov	 DWORD PTR tv332[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1332 :         _Tidy();

  0006c	e8 00 00 00 00	 call	 ?_Tidy@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@AAEXXZ ; std::deque<CBlockRegion,std::allocator<CBlockRegion> >::_Tidy
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 212  : 	m_nCurrentNumber = -1;

  00071	c7 07 ff ff ff
	ff		 mov	 DWORD PTR [edi], -1
  00077	0f 57 c0	 xorps	 xmm0, xmm0

; 311  : 	int nRowCount = pMainBlock->GetRowCountInColumn( nColumn);

  0007a	8b 06		 mov	 eax, DWORD PTR [esi]
  0007c	8b ce		 mov	 ecx, esi
  0007e	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  0007f	0f 11 45 ec	 movups	 XMMWORD PTR _rt1$5[ebp], xmm0
  00083	0f 11 45 dc	 movups	 XMMWORD PTR _rt2$4[ebp], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 311  : 	int nRowCount = pMainBlock->GetRowCountInColumn( nColumn);

  00087	ff 50 24	 call	 DWORD PTR [eax+36]

; 312  : 	for( int i = 0; i < nRowCount; i++)

  0008a	33 c9		 xor	 ecx, ecx
  0008c	89 45 8c	 mov	 DWORD PTR _nRowCount$1$[ebp], eax
  0008f	89 4d 98	 mov	 DWORD PTR _i$1$[ebp], ecx
  00092	85 c0		 test	 eax, eax
  00094	0f 8e 08 01 00
	00		 jle	 $LN7@GetBlockRe
  0009a	66 0f 1f 44 00
	00		 npad	 6
$LL8@GetBlockRe:

; 313  : 	{
; 314  : 		IBlock *pIBlock = pMainBlock->GetBlock( i, nColumn);

  000a0	8b 06		 mov	 eax, DWORD PTR [esi]
  000a2	53		 push	 ebx
  000a3	51		 push	 ecx
  000a4	8b ce		 mov	 ecx, esi
  000a6	ff 50 38	 call	 DWORD PTR [eax+56]
  000a9	8b f8		 mov	 edi, eax

; 315  : 		if( !pIBlock) return FALSE;

  000ab	85 ff		 test	 edi, edi
  000ad	74 a0		 je	 SHORT $LN36@GetBlockRe

; 316  : 
; 317  : 		pIBlock->GetGraphRegions( rt1,rt2);

  000af	8b 07		 mov	 eax, DWORD PTR [edi]
  000b1	8d 4d dc	 lea	 ecx, DWORD PTR _rt2$4[ebp]
  000b4	51		 push	 ecx
  000b5	8d 4d ec	 lea	 ecx, DWORD PTR _rt1$5[ebp]
  000b8	51		 push	 ecx
  000b9	8b cf		 mov	 ecx, edi
  000bb	ff 50 10	 call	 DWORD PTR [eax+16]

; 37   : 	m_full(full),

  000be	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR _rt1$5[ebp]

; 320  : 		pIBlock->GetHorzScaleRegion( rt1, rt2);

  000c2	8b 07		 mov	 eax, DWORD PTR [edi]
  000c4	8d 4d dc	 lea	 ecx, DWORD PTR _rt2$4[ebp]
  000c7	51		 push	 ecx

; 37   : 	m_full(full),

  000c8	0f 11 85 74 ff
	ff ff		 movups	 XMMWORD PTR _graphPartRegion$1$[ebp], xmm0

; 320  : 		pIBlock->GetHorzScaleRegion( rt1, rt2);

  000cf	8d 4d ec	 lea	 ecx, DWORD PTR _rt1$5[ebp]

; 38   : 	m_unmixed(unmixed)

  000d2	0f 10 45 dc	 movups	 xmm0, XMMWORD PTR _rt2$4[ebp]

; 320  : 		pIBlock->GetHorzScaleRegion( rt1, rt2);

  000d6	51		 push	 ecx
  000d7	8b cf		 mov	 ecx, edi

; 38   : 	m_unmixed(unmixed)

  000d9	0f 11 85 64 ff
	ff ff		 movups	 XMMWORD PTR _graphPartRegion$2$[ebp], xmm0

; 320  : 		pIBlock->GetHorzScaleRegion( rt1, rt2);

  000e0	ff 50 14	 call	 DWORD PTR [eax+20]

; 321  : 		CHorzScaleRegion horzScaleRegion;

  000e3	8d 4d bc	 lea	 ecx, DWORD PTR _horzScaleRegion$3[ebp]
  000e6	e8 00 00 00 00	 call	 ??0CHorzScaleRegion@@QAE@XZ ; CHorzScaleRegion::CHorzScaleRegion

; 322  : 		horzScaleRegion.SetTopScaleRegion( rt1);

  000eb	8d 45 ec	 lea	 eax, DWORD PTR _rt1$5[ebp]
  000ee	50		 push	 eax
  000ef	8d 4d bc	 lea	 ecx, DWORD PTR _horzScaleRegion$3[ebp]
  000f2	e8 00 00 00 00	 call	 ?SetTopScaleRegion@CHorzScaleRegion@@QAEXABVCRect@@@Z ; CHorzScaleRegion::SetTopScaleRegion

; 323  : 		horzScaleRegion.SetBottomScaleRegion( rt2);

  000f7	8d 45 dc	 lea	 eax, DWORD PTR _rt2$4[ebp]
  000fa	50		 push	 eax
  000fb	8d 4d bc	 lea	 ecx, DWORD PTR _horzScaleRegion$3[ebp]
  000fe	e8 00 00 00 00	 call	 ?SetBottomScaleRegion@CHorzScaleRegion@@QAEXABVCRect@@@Z ; CHorzScaleRegion::SetBottomScaleRegion

; 324  : 
; 325  : 		pIBlock->GetVertScaleRegion( rt1, rt2);

  00103	8b 07		 mov	 eax, DWORD PTR [edi]
  00105	8d 4d dc	 lea	 ecx, DWORD PTR _rt2$4[ebp]
  00108	51		 push	 ecx
  00109	8d 4d ec	 lea	 ecx, DWORD PTR _rt1$5[ebp]
  0010c	51		 push	 ecx
  0010d	8b cf		 mov	 ecx, edi
  0010f	ff 50 18	 call	 DWORD PTR [eax+24]

; 326  : 		CVertScaleRegion vertScaleRegion;

  00112	8d 4d 9c	 lea	 ecx, DWORD PTR _vertScaleRegion$2[ebp]
  00115	e8 00 00 00 00	 call	 ??0CVertScaleRegion@@QAE@XZ ; CVertScaleRegion::CVertScaleRegion

; 327  : 		vertScaleRegion.SetLeftScaleRegion( rt1);

  0011a	8d 45 ec	 lea	 eax, DWORD PTR _rt1$5[ebp]
  0011d	50		 push	 eax
  0011e	8d 4d 9c	 lea	 ecx, DWORD PTR _vertScaleRegion$2[ebp]
  00121	e8 00 00 00 00	 call	 ?SetLeftScaleRegion@CVertScaleRegion@@QAEXABVCRect@@@Z ; CVertScaleRegion::SetLeftScaleRegion

; 328  : 		vertScaleRegion.SetRightScaleRegion( rt2);

  00126	8d 45 dc	 lea	 eax, DWORD PTR _rt2$4[ebp]
  00129	50		 push	 eax
  0012a	8d 4d 9c	 lea	 ecx, DWORD PTR _vertScaleRegion$2[ebp]
  0012d	e8 00 00 00 00	 call	 ?SetRightScaleRegion@CVertScaleRegion@@QAEXABVCRect@@@Z ; CVertScaleRegion::SetRightScaleRegion

; 62   : 	return m_full;

  00132	0f 10 85 74 ff
	ff ff		 movups	 xmm0, XMMWORD PTR _graphPartRegion$1$[ebp]

; 206  : 	m_regionList.AddTail(blockRegion);

  00139	8b 4d 90	 mov	 ecx, DWORD PTR tv332[ebp]
  0013c	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00142	50		 push	 eax

; 62   : 	return m_full;

  00143	0f 11 85 04 ff
	ff ff		 movups	 XMMWORD PTR $T1[ebp], xmm0

; 67   : 	return m_unmixed;

  0014a	0f 10 85 64 ff
	ff ff		 movups	 xmm0, XMMWORD PTR _graphPartRegion$2$[ebp]
  00151	0f 11 85 14 ff
	ff ff		 movups	 XMMWORD PTR $T1[ebp+16], xmm0

; 98   : 	m_horzScaleRegion(horzScale),

  00158	0f 10 45 bc	 movups	 xmm0, XMMWORD PTR _horzScaleRegion$3[ebp]
  0015c	0f 11 85 24 ff
	ff ff		 movups	 XMMWORD PTR $T1[ebp+32], xmm0
  00163	0f 10 45 cc	 movups	 xmm0, XMMWORD PTR _horzScaleRegion$3[ebp+16]
  00167	0f 11 85 34 ff
	ff ff		 movups	 XMMWORD PTR $T1[ebp+48], xmm0

; 99   : 	m_vertScaleRegion(vertScale)

  0016e	0f 10 45 9c	 movups	 xmm0, XMMWORD PTR _vertScaleRegion$2[ebp]
  00172	0f 11 85 44 ff
	ff ff		 movups	 XMMWORD PTR $T1[ebp+64], xmm0
  00179	0f 10 45 ac	 movups	 xmm0, XMMWORD PTR _vertScaleRegion$2[ebp+16]
  0017d	0f 11 85 54 ff
	ff ff		 movups	 XMMWORD PTR $T1[ebp+80], xmm0

; 206  : 	m_regionList.AddTail(blockRegion);

  00184	e8 00 00 00 00	 call	 ?AddTail@?$CDequeList@VCBlockRegion@@@@QAEXABVCBlockRegion@@@Z ; CDequeList<CBlockRegion>::AddTail

; 332  : 		pIBlock->Release();

  00189	8b 07		 mov	 eax, DWORD PTR [edi]
  0018b	57		 push	 edi
  0018c	ff 50 08	 call	 DWORD PTR [eax+8]
  0018f	8b 4d 98	 mov	 ecx, DWORD PTR _i$1$[ebp]
  00192	41		 inc	 ecx
  00193	89 4d 98	 mov	 DWORD PTR _i$1$[ebp], ecx
  00196	3b 4d 8c	 cmp	 ecx, DWORD PTR _nRowCount$1$[ebp]
  00199	0f 8c 01 ff ff
	ff		 jl	 $LL8@GetBlockRe

; 315  : 		if( !pIBlock) return FALSE;

  0019f	8b 7d 88	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
$LN7@GetBlockRe:

; 333  : 	}
; 334  : 
; 335  : 	return (GetCount() > 0);

  001a2	33 c0		 xor	 eax, eax
  001a4	39 47 14	 cmp	 DWORD PTR [edi+20], eax

; 301  : 	return GetBlockRegionList( nColumn, pMainBlock);

  001a7	5b		 pop	 ebx
  001a8	5f		 pop	 edi

; 335  : 	return (GetCount() > 0);

  001a9	0f 9f c0	 setg	 al

; 302  : }

  001ac	5e		 pop	 esi
  001ad	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001b0	33 cd		 xor	 ecx, ebp
  001b2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001b7	8b e5		 mov	 esp, ebp
  001b9	5d		 pop	 ebp
  001ba	c2 08 00	 ret	 8
$LN40@GetBlockRe:
  001bd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001c0	33 c0		 xor	 eax, eax
  001c2	5f		 pop	 edi
  001c3	33 cd		 xor	 ecx, ebp
  001c5	5e		 pop	 esi
  001c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001cb	8b e5		 mov	 esp, ebp
  001cd	5d		 pop	 ebp
  001ce	c2 08 00	 ret	 8
?GetBlockRegionList@CBlockRegionList@@QAEHABVCPoint@@PAUIChartManager133101@@@Z ENDP ; CBlockRegionList::GetBlockRegionList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Chart\DequeList.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Chart\DequeList.h
;	COMDAT ?AddTail@?$CDequeList@VCBlockRegion@@@@QAEXABVCBlockRegion@@@Z
_TEXT	SEGMENT
_item$ = 8						; size = 4
?AddTail@?$CDequeList@VCBlockRegion@@@@QAEXABVCBlockRegion@@@Z PROC ; CDequeList<CBlockRegion>::AddTail, COMDAT
; _this$ = ecx

; 119  : 	void AddTail(const T& item){ m_deque.push_back(item); };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1106 :         if ((_Myoff() + _Mysize()) % _Block_size == 0 && _Mapsize() <= (_Mysize() + _Block_size) / _Block_size) {

  00007	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000a	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0000d	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00010	3b d0		 cmp	 edx, eax
  00012	77 0f		 ja	 SHORT $LN6@AddTail

; 1107 :             _Growmap(1);

  00014	6a 01		 push	 1
  00016	8b ce		 mov	 ecx, esi
  00018	e8 00 00 00 00	 call	 ?_Growmap@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@AAEXI@Z ; std::deque<CBlockRegion,std::allocator<CBlockRegion> >::_Growmap
  0001d	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00020	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
$LN6@AddTail:

; 1108 :         }
; 1109 :         _Myoff() &= _Mapsize() * _Block_size - 1;

  00023	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]
  00026	21 46 0c	 and	 DWORD PTR [esi+12], eax

; 559  :         return (_Off / _Block_size) & (_Mapsize - 1);

  00029	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]

; 1110 :         size_type _Newoff = _Myoff() + _Mysize();

  0002c	03 4e 0c	 add	 ecx, DWORD PTR [esi+12]

; 559  :         return (_Off / _Block_size) & (_Mapsize - 1);

  0002f	23 c8		 and	 ecx, eax

; 1112 :         if (_Map()[_Block] == nullptr) {

  00031	8d 3c 8d 00 00
	00 00		 lea	 edi, DWORD PTR [ecx*4]
  00038	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003b	83 3c 39 00	 cmp	 DWORD PTR [ecx+edi], 0
  0003f	75 13		 jne	 SHORT $LN7@AddTail
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  00041	6a 60		 push	 96			; 00000060H
  00043	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1113 :             _Map()[_Block] = _Getal().allocate(_Block_size);

  00048	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  0004b	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1113 :             _Map()[_Block] = _Getal().allocate(_Block_size);

  0004e	89 04 0f	 mov	 DWORD PTR [edi+ecx], eax
  00051	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN7@AddTail:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 62   : 	return m_full;

  00054	8b 45 08	 mov	 eax, DWORD PTR _item$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 681  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  00057	8b 0c 0f	 mov	 ecx, DWORD PTR [edi+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1119 :         ++_Mysize();

  0005a	5f		 pop	 edi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 62   : 	return m_full;

  0005b	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  0005e	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 67   : 	return m_unmixed;

  00061	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]
  00065	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0

; 119  : 	return m_horzScaleRegion;

  00069	0f 10 40 20	 movups	 xmm0, XMMWORD PTR [eax+32]
  0006d	0f 11 41 20	 movups	 XMMWORD PTR [ecx+32], xmm0
  00071	0f 10 40 30	 movups	 xmm0, XMMWORD PTR [eax+48]
  00075	0f 11 41 30	 movups	 XMMWORD PTR [ecx+48], xmm0

; 124  : 	return m_vertScaleRegion;

  00079	0f 10 40 40	 movups	 xmm0, XMMWORD PTR [eax+64]
  0007d	0f 11 41 40	 movups	 XMMWORD PTR [ecx+64], xmm0
  00081	0f 10 40 50	 movups	 xmm0, XMMWORD PTR [eax+80]
  00085	0f 11 41 50	 movups	 XMMWORD PTR [ecx+80], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1119 :         ++_Mysize();

  00089	ff 46 10	 inc	 DWORD PTR [esi+16]
  0008c	5e		 pop	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Chart\DequeList.h

; 119  : 	void AddTail(const T& item){ m_deque.push_back(item); };

  0008d	5d		 pop	 ebp
  0008e	c2 04 00	 ret	 4
?AddTail@?$CDequeList@VCBlockRegion@@@@QAEXABVCBlockRegion@@@Z ENDP ; CDequeList<CBlockRegion>::AddTail
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
;	COMDAT ?_Tidy@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@AAEXXZ PROC ; std::deque<CBlockRegion,std::allocator<CBlockRegion> >::_Tidy, COMDAT
; _this$ = ecx

; 1471 :     void _Tidy() noexcept { // free all storage

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1002 :         return _Mysize() == 0;

  00003	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00006	85 c9		 test	 ecx, ecx

; 1472 :         _Orphan_all();
; 1473 : 
; 1474 :         _Alpty _Almap(_Getal());
; 1475 :         while (!empty()) {

  00008	74 15		 je	 SHORT $LN60@Tidy
  0000a	66 0f 1f 44 00
	00		 npad	 6
$LL2@Tidy:

; 1146 :         if (--_Mysize() == 0) {

  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	89 47 10	 mov	 DWORD PTR [edi+16], eax
  00016	8b c8		 mov	 ecx, eax
  00018	85 c0		 test	 eax, eax
  0001a	75 f4		 jne	 SHORT $LL2@Tidy

; 1147 :             _Myoff() = 0;

  0001c	89 47 0c	 mov	 DWORD PTR [edi+12], eax
$LN60@Tidy:
  0001f	56		 push	 esi

; 1479 :         for (size_type _Block = _Mapsize(); 0 < _Block;) { // free storage for a block and destroy pointer

  00020	8b 77 08	 mov	 esi, DWORD PTR [edi+8]
  00023	85 f6		 test	 esi, esi
  00025	74 1a		 je	 SHORT $LN5@Tidy
$LL4@Tidy:

; 1480 :             if (_Map()[--_Block]) { // free block and destroy its pointer

  00027	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002a	4e		 dec	 esi
  0002b	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]
  0002e	85 c0		 test	 eax, eax
  00030	74 0b		 je	 SHORT $LN23@Tidy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00032	6a 60		 push	 96			; 00000060H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003a	83 c4 08	 add	 esp, 8
$LN23@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1479 :         for (size_type _Block = _Mapsize(); 0 < _Block;) { // free storage for a block and destroy pointer

  0003d	85 f6		 test	 esi, esi
  0003f	75 e6		 jne	 SHORT $LL4@Tidy
$LN5@Tidy:

; 1481 :                 _Getal().deallocate(_Map()[_Block], _Block_size);
; 1482 :                 _Destroy_in_place(_Map()[_Block]);
; 1483 :             }
; 1484 :         }
; 1485 : 
; 1486 :         if (_Map() != _Mapptr()) {

  00041	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00044	5e		 pop	 esi
  00045	85 c0		 test	 eax, eax
  00047	74 2a		 je	 SHORT $LN41@Tidy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00049	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0004c	c1 e1 02	 shl	 ecx, 2

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0004f	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00055	72 12		 jb	 SHORT $LN51@Tidy

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00057	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0005a	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0005d	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0005f	83 c0 fc	 add	 eax, -4			; fffffffcH
  00062	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00065	77 1c		 ja	 SHORT $LN48@Tidy

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00067	8b c2		 mov	 eax, edx
$LN51@Tidy:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00069	51		 push	 ecx
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00070	83 c4 08	 add	 esp, 8
$LN41@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1490 :         _Mapsize() = 0;

  00073	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1491 :         _Map()     = _Mapptr();

  0007a	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  00081	5f		 pop	 edi

; 1492 :     }

  00082	c3		 ret	 0
$LN48@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN62@Tidy:
  00089	cc		 int	 3
?_Tidy@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@AAEXXZ ENDP ; std::deque<CBlockRegion,std::allocator<CBlockRegion> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
;	COMDAT ?_Growmap@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
__Myptr$1$ = -12					; size = 4
_this$1$ = -8						; size = 4
__Myboff$1$ = -4					; size = 4
$T1 = 8							; size = 4
__Count$ = 8						; size = 4
?_Growmap@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@AAEXI@Z PROC ; std::deque<CBlockRegion,std::allocator<CBlockRegion> >::_Growmap, COMDAT
; _this$ = ecx

; 1432 :     void _Growmap(size_type _Count) { // grow map by at least _Count pointers, _Mapsize() a power of 2

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx

; 1433 :         static_assert(1 < _Minimum_map_size, "The _Xlen() test should always be performed.");
; 1434 : 
; 1435 :         _Alpty _Almap(_Getal());
; 1436 :         size_type _Newsize = 0 < _Mapsize() ? _Mapsize() : 1;

  0000a	b8 01 00 00 00	 mov	 eax, 1
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR __Count$[ebp]
  00013	89 75 f8	 mov	 DWORD PTR _this$1$[ebp], esi
  00016	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00019	85 d2		 test	 edx, edx
  0001b	0f 45 c2	 cmovne	 eax, edx
  0001e	66 90		 npad	 2
$LL2@Growmap:

; 1437 :         while (_Newsize - _Mapsize() < _Count || _Newsize < _Minimum_map_size) {

  00020	8b d8		 mov	 ebx, eax
  00022	2b da		 sub	 ebx, edx
  00024	3b df		 cmp	 ebx, edi
  00026	72 05		 jb	 SHORT $LN4@Growmap
  00028	83 f8 08	 cmp	 eax, 8
  0002b	73 13		 jae	 SHORT $LN3@Growmap
$LN4@Growmap:

; 1438 :             // scale _Newsize to 2^N >= _Mapsize() + _Count
; 1439 :             if (max_size() / _Block_size - _Newsize < _Newsize) {

  0002d	b9 aa aa aa 02	 mov	 ecx, 44739242		; 02aaaaaaH
  00032	2b c8		 sub	 ecx, eax
  00034	3b c8		 cmp	 ecx, eax
  00036	0f 82 4a 01 00
	00		 jb	 $LN138@Growmap

; 1441 :             }
; 1442 : 
; 1443 :             _Newsize *= 2;

  0003c	03 c0		 add	 eax, eax

; 1444 :         }

  0003e	eb e0		 jmp	 SHORT $LL2@Growmap
$LN3@Growmap:

; 1445 :         _Count = _Newsize - _Mapsize();
; 1446 : 
; 1447 :         size_type _Myboff = _Myoff() / _Block_size;

  00040	8b 7e 0c	 mov	 edi, DWORD PTR [esi+12]
  00043	89 7d fc	 mov	 DWORD PTR __Myboff$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00046	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  0004b	0f 87 3c 01 00
	00		 ja	 $LN142@Growmap

; 61   :             _Throw_bad_array_new_length(); // multiply overflow
; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00051	c1 e0 02	 shl	 eax, 2

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00054	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00059	72 27		 jb	 SHORT $LN19@Growmap

; 129  :     const size_t _Block_size = _Non_user_size + _Bytes;

  0005b	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 130  :     if (_Block_size <= _Bytes) {

  0005e	3b c8		 cmp	 ecx, eax
  00060	0f 86 27 01 00
	00		 jbe	 $LN142@Growmap

; 79   :         return ::operator new(_Bytes);

  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0006c	83 c4 04	 add	 esp, 4

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0006f	85 c0		 test	 eax, eax
  00071	0f 84 09 01 00
	00		 je	 $LN130@Growmap

; 136  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00077	8d 50 23	 lea	 edx, DWORD PTR [eax+35]
  0007a	83 e2 e0	 and	 edx, -32		; ffffffe0H

; 137  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  0007d	89 42 fc	 mov	 DWORD PTR [edx-4], eax

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00080	eb 13		 jmp	 SHORT $LN145@Growmap
$LN19@Growmap:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  00082	85 c0		 test	 eax, eax
  00084	74 0d		 je	 SHORT $LN20@Growmap

; 79   :         return ::operator new(_Bytes);

  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0008c	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0008f	8b d0		 mov	 edx, eax
  00091	eb 02		 jmp	 SHORT $LN145@Growmap
$LN20@Growmap:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  00093	33 d2		 xor	 edx, edx
$LN145@Growmap:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1451 :         _Myptr = _STD uninitialized_copy(_Map() + _Myboff, _Map() + _Mapsize(), _Myptr); // copy initial to end

  00095	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00098	8b 76 08	 mov	 esi, DWORD PTR [esi+8]
  0009b	c1 e7 02	 shl	 edi, 2
  0009e	c1 e6 02	 shl	 esi, 2
  000a1	89 55 08	 mov	 DWORD PTR $T1[ebp], edx
  000a4	8d 0c 38	 lea	 ecx, DWORD PTR [eax+edi]
  000a7	03 fa		 add	 edi, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility

; 4065 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  000a9	2b f1		 sub	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1451 :         _Myptr = _STD uninitialized_copy(_Map() + _Myboff, _Map() + _Mapsize(), _Myptr); // copy initial to end

  000ab	03 f0		 add	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility

; 4066 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  000ad	56		 push	 esi
  000ae	51		 push	 ecx
  000af	57		 push	 edi
  000b0	e8 00 00 00 00	 call	 _memmove
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1452 :         if (_Myboff <= _Count) { // increment greater than offset of initial block

  000b5	8b 4d fc	 mov	 ecx, DWORD PTR __Myboff$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility

; 4068 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  000b8	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1451 :         _Myptr = _STD uninitialized_copy(_Map() + _Myboff, _Map() + _Mapsize(), _Myptr); // copy initial to end

  000bb	8b 75 f8	 mov	 esi, DWORD PTR _this$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility

; 4066 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  000be	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4068 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  000c1	89 45 f4	 mov	 DWORD PTR __Myptr$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1451 :         _Myptr = _STD uninitialized_copy(_Map() + _Myboff, _Map() + _Mapsize(), _Myptr); // copy initial to end

  000c4	8b 56 04	 mov	 edx, DWORD PTR [esi+4]

; 1452 :         if (_Myboff <= _Count) { // increment greater than offset of initial block

  000c7	3b cb		 cmp	 ecx, ebx
  000c9	77 33		 ja	 SHORT $LN6@Growmap
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility

; 4066 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  000cb	8d 3c 8d 00 00
	00 00		 lea	 edi, DWORD PTR [ecx*4]
  000d2	57		 push	 edi
  000d3	52		 push	 edx
  000d4	50		 push	 eax
  000d5	e8 00 00 00 00	 call	 _memmove
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1792 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  000da	8b c3		 mov	 eax, ebx
  000dc	2b 45 fc	 sub	 eax, DWORD PTR __Myboff$1$[ebp]
  000df	c1 e0 02	 shl	 eax, 2
  000e2	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility

; 4068 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  000e3	8b 45 f4	 mov	 eax, DWORD PTR __Myptr$1$[ebp]
  000e6	03 c7		 add	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1792 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  000e8	6a 00		 push	 0
  000ea	50		 push	 eax
  000eb	e8 00 00 00 00	 call	 _memset
  000f0	57		 push	 edi
  000f1	8b 7d 08	 mov	 edi, DWORD PTR $T1[ebp]
  000f4	6a 00		 push	 0
  000f6	57		 push	 edi
  000f7	e8 00 00 00 00	 call	 _memset
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1456 :         } else { // increment not greater than offset of initial block

  000fc	eb 3f		 jmp	 SHORT $LN146@Growmap
$LN6@Growmap:

; 1457 :             _STD uninitialized_copy(_Map(), _Map() + _Count, _Myptr); // copy more old

  000fe	8d 3c 9d 00 00
	00 00		 lea	 edi, DWORD PTR [ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility

; 4066 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00105	57		 push	 edi
  00106	52		 push	 edx
  00107	50		 push	 eax
  00108	e8 00 00 00 00	 call	 _memmove
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1458 :             _Myptr = _STD uninitialized_copy(_Map() + _Count, _Map() + _Myboff, _Newmap); // copy rest of old

  0010d	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00110	8b 55 fc	 mov	 edx, DWORD PTR __Myboff$1$[ebp]
  00113	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility

; 4065 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00116	2b f0		 sub	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1458 :             _Myptr = _STD uninitialized_copy(_Map() + _Count, _Map() + _Myboff, _Newmap); // copy rest of old

  00118	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*4]
  0011f	03 f1		 add	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility

; 4066 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00121	56		 push	 esi
  00122	50		 push	 eax
  00123	ff 75 08	 push	 DWORD PTR $T1[ebp]
  00126	e8 00 00 00 00	 call	 _memmove
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1792 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  0012b	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility

; 4068 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0012c	8b 7d 08	 mov	 edi, DWORD PTR $T1[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1792 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  0012f	6a 00		 push	 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility

; 4068 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  00131	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1792 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  00134	50		 push	 eax
  00135	e8 00 00 00 00	 call	 _memset
  0013a	8b 75 f8	 mov	 esi, DWORD PTR _this$1$[ebp]
$LN146@Growmap:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1463 :         if (_Map() != _Mapptr()) {

  0013d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00140	83 c4 24	 add	 esp, 36			; 00000024H
  00143	85 c0		 test	 eax, eax
  00145	74 2a		 je	 SHORT $LN123@Growmap
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 797  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00147	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0014a	c1 e1 02	 shl	 ecx, 2

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0014d	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00153	72 12		 jb	 SHORT $LN133@Growmap

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00155	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00158	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0015b	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0015d	83 c0 fc	 add	 eax, -4			; fffffffcH
  00160	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00163	77 1b		 ja	 SHORT $LN130@Growmap

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00165	8b c2		 mov	 eax, edx
$LN133@Growmap:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00167	51		 push	 ecx
  00168	50		 push	 eax
  00169	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0016e	83 c4 08	 add	 esp, 8
$LN123@Growmap:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1468 :         _Mapsize() += _Count;

  00171	01 5e 08	 add	 DWORD PTR [esi+8], ebx
  00174	89 7e 04	 mov	 DWORD PTR [esi+4], edi
  00177	5f		 pop	 edi
  00178	5e		 pop	 esi
  00179	5b		 pop	 ebx

; 1469 :     }

  0017a	8b e5		 mov	 esp, ebp
  0017c	5d		 pop	 ebp
  0017d	c2 04 00	 ret	 4
$LN130@Growmap:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00180	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN138@Growmap:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1440 :                 _Xlen(); // result too long

  00186	8b ce		 mov	 ecx, esi
  00188	e8 00 00 00 00	 call	 ?_Xlen@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@ABEXXZ ; std::deque<CBlockRegion,std::allocator<CBlockRegion> >::_Xlen
$LN142@Growmap:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 131  :         _Throw_bad_array_new_length(); // add overflow

  0018d	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN144@Growmap:
  00192	cc		 int	 3
?_Growmap@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@AAEXI@Z ENDP ; std::deque<CBlockRegion,std::allocator<CBlockRegion> >::_Growmap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
;	COMDAT ?_Xlen@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@ABEXXZ
_TEXT	SEGMENT
?_Xlen@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@ABEXXZ PROC ; std::deque<CBlockRegion,std::allocator<CBlockRegion> >::_Xlen, COMDAT
; _this$ = ecx

; 1425 :         _Xlength_error("deque<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen:
  0000a	cc		 int	 3
?_Xlen@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@ABEXXZ ENDP ; std::deque<CBlockRegion,std::allocator<CBlockRegion> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Chart\DequeList.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Chart\DequeList.h
;	COMDAT ??1?$CDequeList@VCBlockRegion@@@@QAE@XZ
_TEXT	SEGMENT
??1?$CDequeList@VCBlockRegion@@@@QAE@XZ PROC		; CDequeList<CBlockRegion>::~CDequeList<CBlockRegion>, COMDAT
; _this$ = ecx

; 34   : 	~CDequeList() { m_deque.clear(); };

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1332 :         _Tidy();

  00003	e8 00 00 00 00	 call	 ?_Tidy@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@AAEXXZ ; std::deque<CBlockRegion,std::allocator<CBlockRegion> >::_Tidy

; 861  :         _Tidy();

  00008	8b ce		 mov	 ecx, esi
  0000a	e8 00 00 00 00	 call	 ?_Tidy@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@AAEXXZ ; std::deque<CBlockRegion,std::allocator<CBlockRegion> >::_Tidy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 602  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0000f	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00011	6a 08		 push	 8
  00013	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility

; 603  :     _Val         = static_cast<_Other&&>(_New_val);

  00014	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0001a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001f	83 c4 08	 add	 esp, 8
  00022	5e		 pop	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Chart\DequeList.h

; 34   : 	~CDequeList() { m_deque.clear(); };

  00023	c3		 ret	 0
??1?$CDequeList@VCBlockRegion@@@@QAE@XZ ENDP		; CDequeList<CBlockRegion>::~CDequeList<CBlockRegion>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetNumber@CBlockRegionList@@QBEHABVCPoint@@@Z
_TEXT	SEGMENT
$T1 = -20						; size = 16
__Tmp$2 = -12						; size = 8
__$ArrayPad$ = -4					; size = 4
_point$ = 8						; size = 4
?GetNumber@CBlockRegionList@@QBEHABVCPoint@@@Z PROC	; CBlockRegionList::GetNumber, COMDAT
; _this$ = ecx

; 286  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _point$[ebp]
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b f9		 mov	 edi, ecx

; 287  : 	for(int nIndex = 0; nIndex < GetCount(); nIndex++)

  00018	33 f6		 xor	 esi, esi
  0001a	39 77 14	 cmp	 DWORD PTR [edi+20], esi
  0001d	7e 35		 jle	 SHORT $LN3@GetNumber
  0001f	90		 npad	 1
$LL4@GetNumber:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 43   :         : _Mycont(static_cast<const _Mydeque*>(_Pdeque)), _Myoff(_Off) {}

  00020	8b 47 10	 mov	 eax, DWORD PTR [edi+16]

; 559  :         return (_Off / _Block_size) & (_Mapsize - 1);

  00023	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 648  : 	return ::PtInRect(this, point);

  00026	ff 73 04	 push	 DWORD PTR [ebx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 83   :         _Deque_unchecked_const_iterator _Tmp = *this;

  00029	89 45 f8	 mov	 DWORD PTR __Tmp$2[ebp+4], eax

; 559  :         return (_Off / _Block_size) & (_Mapsize - 1);

  0002c	49		 dec	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 648  : 	return ::PtInRect(this, point);

  0002d	ff 33		 push	 DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 78   :         _Myoff += _Off;

  0002f	03 c6		 add	 eax, esi

; 559  :         return (_Off / _Block_size) & (_Mapsize - 1);

  00031	23 c8		 and	 ecx, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 114  : 	return m_graphPartRegion;

  00033	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00036	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]

; 62   : 	return m_full;

  00039	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 648  : 	return ::PtInRect(this, point);

  0003c	8d 45 ec	 lea	 eax, DWORD PTR $T1[ebp]
  0003f	50		 push	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 62   : 	return m_full;

  00040	0f 11 45 ec	 movups	 XMMWORD PTR $T1[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 648  : 	return ::PtInRect(this, point);

  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 290  : 		if(blockRegion.GetFullGraphRegion().PtInRect(point))

  0004a	85 c0		 test	 eax, eax
  0004c	75 1c		 jne	 SHORT $LN44@GetNumber

; 287  : 	for(int nIndex = 0; nIndex < GetCount(); nIndex++)

  0004e	46		 inc	 esi
  0004f	3b 77 14	 cmp	 esi, DWORD PTR [edi+20]
  00052	7c cc		 jl	 SHORT $LL4@GetNumber
$LN3@GetNumber:
  00054	5f		 pop	 edi

; 291  : 			return nIndex;
; 292  : 	}
; 293  : 	return -1;
; 294  : }

  00055	5e		 pop	 esi
  00056	83 c8 ff	 or	 eax, -1
  00059	5b		 pop	 ebx
  0005a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005d	33 cd		 xor	 ecx, ebp
  0005f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c2 04 00	 ret	 4
$LN44@GetNumber:
  0006a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006d	8b c6		 mov	 eax, esi
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	33 cd		 xor	 ecx, ebp
  00073	5b		 pop	 ebx
  00074	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 04 00	 ret	 4
?GetNumber@CBlockRegionList@@QBEHABVCPoint@@@Z ENDP	; CBlockRegionList::GetNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetCurrentNumber@CBlockRegionList@@QBEHXZ
_TEXT	SEGMENT
?GetCurrentNumber@CBlockRegionList@@QBEHXZ PROC		; CBlockRegionList::GetCurrentNumber, COMDAT
; _this$ = ecx

; 282  : 	return m_nCurrentNumber;

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 283  : }

  00002	c3		 ret	 0
?GetCurrentNumber@CBlockRegionList@@QBEHXZ ENDP		; CBlockRegionList::GetCurrentNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetFullGraphRegionSumInList@CBlockRegionList@@QBE?AVCRect@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetFullGraphRegionSumInList@CBlockRegionList@@QBE?AVCRect@@XZ PROC ; CBlockRegionList::GetFullGraphRegionSumInList, COMDAT
; _this$ = ecx

; 267  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 268  : 	if(m_regionList.GetCount() <= 0)

  00009	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0000c	85 c0		 test	 eax, eax
  0000e	7f 25		 jg	 SHORT $LN2@GetFullGra
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 540  : 	left = l;

  00010	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00013	5e		 pop	 esi
  00014	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 541  : 	top = t;

  0001a	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 542  : 	right = r;

  00021	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 543  : 	bottom = b;

  00028	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 277  : }

  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
$LN2@GetFullGra:

; 269  : 		return CRect(0, 0, 0, 0);
; 270  : 
; 271  : 	if(m_regionList.GetCount() == 1)

  00035	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00038	49		 dec	 ecx
  00039	23 4e 10	 and	 ecx, DWORD PTR [esi+16]
  0003c	83 f8 01	 cmp	 eax, 1
  0003f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00042	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  00045	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00048	75 0d		 jne	 SHORT $LN3@GetFullGra

; 62   : 	return m_full;

  0004a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0004d	5e		 pop	 esi
  0004e	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 277  : }

  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
$LN3@GetFullGra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 917  :         return _Unchecked_const_iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  00057	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0005a	03 46 10	 add	 eax, DWORD PTR [esi+16]

; 559  :         return (_Off / _Block_size) & (_Mapsize - 1);

  0005d	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 67   :         --_Myoff;

  00060	48		 dec	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 568  : 	left = topLeft.x;

  00061	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 559  :         return (_Off / _Block_size) & (_Mapsize - 1);

  00064	49		 dec	 ecx
  00065	23 c8		 and	 ecx, eax

; 1070 :         return *_Prev_iter(_Unchecked_end());

  00067	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0006a	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 568  : 	left = topLeft.x;

  0006b	66 0f 7e 02	 movd	 DWORD PTR [edx], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1070 :         return *_Prev_iter(_Unchecked_end());

  0006f	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 569  : 	top = topLeft.y;

  00072	66 0f 73 d8 04	 psrldq	 xmm0, 4
  00077	66 0f 7e 42 04	 movd	 DWORD PTR [edx+4], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 62   : 	return m_full;

  0007c	0f 10 08	 movups	 xmm1, XMMWORD PTR [eax]

; 272  : 		return m_regionList.GetHead().GetFullGraphRegion();
; 273  : 
; 274  : 	CPoint topLeft = m_regionList.GetHead().GetFullGraphRegion().TopLeft();
; 275  : 	CPoint bottomRight = m_regionList.GetTail().GetFullGraphRegion().BottomRight();
; 276  : 	return CRect(topLeft, bottomRight);

  0007f	8b c2		 mov	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 570  : 	right = bottomRight.x;

  00081	0f 28 c1	 movaps	 xmm0, xmm1

; 571  : 	bottom = bottomRight.y;

  00084	66 0f 73 d9 0c	 psrldq	 xmm1, 12		; 0000000cH
  00089	66 0f 73 d8 08	 psrldq	 xmm0, 8
  0008e	66 0f 7e 42 08	 movd	 DWORD PTR [edx+8], xmm0
  00093	66 0f 7e 4a 0c	 movd	 DWORD PTR [edx+12], xmm1
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 277  : }

  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c2 04 00	 ret	 4
?GetFullGraphRegionSumInList@CBlockRegionList@@QBE?AVCRect@@XZ ENDP ; CBlockRegionList::GetFullGraphRegionSumInList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetAt@CBlockRegionList@@QBE?AVCBlockRegion@@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_nIndex$ = 12						; size = 4
?GetAt@CBlockRegionList@@QBE?AVCBlockRegion@@H@Z PROC	; CBlockRegionList::GetAt, COMDAT
; _this$ = ecx

; 259  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 260  : 	if(nIndex < 0 || nIndex >= GetCount())

  00003	8b 55 0c	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00006	83 ec 08	 sub	 esp, 8
  00009	56		 push	 esi
  0000a	8b f1		 mov	 esi, ecx
  0000c	85 d2		 test	 edx, edx
  0000e	78 4e		 js	 SHORT $LN3@GetAt
  00010	3b 56 14	 cmp	 edx, DWORD PTR [esi+20]
  00013	7d 49		 jge	 SHORT $LN3@GetAt
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 43   :         : _Mycont(static_cast<const _Mydeque*>(_Pdeque)), _Myoff(_Off) {}

  00015	8b 46 10	 mov	 eax, DWORD PTR [esi+16]

; 559  :         return (_Off / _Block_size) & (_Mapsize - 1);

  00018	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 78   :         _Myoff += _Off;

  0001b	03 c2		 add	 eax, edx

; 559  :         return (_Off / _Block_size) & (_Mapsize - 1);

  0001d	49		 dec	 ecx
  0001e	23 c8		 and	 ecx, eax

; 1030 :         return *(_Unchecked_begin() + static_cast<difference_type>(_Pos));

  00020	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00023	5e		 pop	 esi
  00024	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 62   : 	return m_full;

  00027	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0002a	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  0002d	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 67   : 	return m_unmixed;

  00030	0f 10 41 10	 movups	 xmm0, XMMWORD PTR [ecx+16]
  00034	0f 11 40 10	 movups	 XMMWORD PTR [eax+16], xmm0

; 119  : 	return m_horzScaleRegion;

  00038	0f 10 41 20	 movups	 xmm0, XMMWORD PTR [ecx+32]
  0003c	0f 11 40 20	 movups	 XMMWORD PTR [eax+32], xmm0
  00040	0f 10 41 30	 movups	 xmm0, XMMWORD PTR [ecx+48]
  00044	0f 11 40 30	 movups	 XMMWORD PTR [eax+48], xmm0

; 124  : 	return m_vertScaleRegion;

  00048	0f 10 41 40	 movups	 xmm0, XMMWORD PTR [ecx+64]
  0004c	0f 11 40 40	 movups	 XMMWORD PTR [eax+64], xmm0
  00050	0f 10 41 50	 movups	 xmm0, XMMWORD PTR [ecx+80]
  00054	0f 11 40 50	 movups	 XMMWORD PTR [eax+80], xmm0

; 262  : 
; 263  : 	return m_regionList.GetAt(nIndex);
; 264  : }

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
$LN3@GetAt:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 540  : 	left = l;

  0005e	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 92   : {

  00061	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 540  : 	left = l;

  00064	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 541  : 	top = t;

  0006a	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 542  : 	right = r;

  00071	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 543  : 	bottom = b;

  00078	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 540  : 	left = l;

  0007f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 541  : 	top = t;

  00086	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 542  : 	right = r;

  0008d	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0

; 543  : 	bottom = b;

  00094	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 92   : {

  0009b	e8 00 00 00 00	 call	 ??0CHorzScaleRegion@@QAE@XZ ; CHorzScaleRegion::CHorzScaleRegion
  000a0	8d 4e 40	 lea	 ecx, DWORD PTR [esi+64]
  000a3	e8 00 00 00 00	 call	 ??0CVertScaleRegion@@QAE@XZ ; CVertScaleRegion::CVertScaleRegion

; 261  : 		return CBlockRegion();

  000a8	8b c6		 mov	 eax, esi
  000aa	5e		 pop	 esi

; 262  : 
; 263  : 	return m_regionList.GetAt(nIndex);
; 264  : }

  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c2 08 00	 ret	 8
?GetAt@CBlockRegionList@@QBE?AVCBlockRegion@@H@Z ENDP	; CBlockRegionList::GetAt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetCurrentAt@CBlockRegionList@@QBE?AVCBlockRegion@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetCurrentAt@CBlockRegionList@@QBE?AVCBlockRegion@@XZ PROC ; CBlockRegionList::GetCurrentAt, COMDAT
; _this$ = ecx

; 254  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 255  : 	return GetAt(m_nCurrentNumber);

  00003	ff 31		 push	 DWORD PTR [ecx]
  00005	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  00008	e8 00 00 00 00	 call	 ?GetAt@CBlockRegionList@@QBE?AVCBlockRegion@@H@Z ; CBlockRegionList::GetAt
  0000d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 256  : }

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?GetCurrentAt@CBlockRegionList@@QBE?AVCBlockRegion@@XZ ENDP ; CBlockRegionList::GetCurrentAt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetTail@CBlockRegionList@@QBE?AVCBlockRegion@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetTail@CBlockRegionList@@QBE?AVCBlockRegion@@XZ PROC	; CBlockRegionList::GetTail, COMDAT
; _this$ = ecx

; 249  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 250  : 	return GetAt(m_regionList.GetCount() -1);

  00003	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00006	48		 dec	 eax
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetAt@CBlockRegionList@@QBE?AVCBlockRegion@@H@Z ; CBlockRegionList::GetAt
  00010	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 251  : }

  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
?GetTail@CBlockRegionList@@QBE?AVCBlockRegion@@XZ ENDP	; CBlockRegionList::GetTail
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetHead@CBlockRegionList@@QBE?AVCBlockRegion@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetHead@CBlockRegionList@@QBE?AVCBlockRegion@@XZ PROC	; CBlockRegionList::GetHead, COMDAT
; _this$ = ecx

; 244  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 245  : 	return GetAt(0);

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  00008	e8 00 00 00 00	 call	 ?GetAt@CBlockRegionList@@QBE?AVCBlockRegion@@H@Z ; CBlockRegionList::GetAt
  0000d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 246  : }

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?GetHead@CBlockRegionList@@QBE?AVCBlockRegion@@XZ ENDP	; CBlockRegionList::GetHead
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetCount@CBlockRegionList@@QBEHXZ
_TEXT	SEGMENT
?GetCount@CBlockRegionList@@QBEHXZ PROC			; CBlockRegionList::GetCount, COMDAT
; _this$ = ecx

; 240  : 	return m_regionList.GetCount();

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]

; 241  : }

  00003	c3		 ret	 0
?GetCount@CBlockRegionList@@QBEHXZ ENDP			; CBlockRegionList::GetCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?SetCurrentNumber@CBlockRegionList@@QAEXABVCPoint@@@Z
_TEXT	SEGMENT
_region$1 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_point$ = 8						; size = 4
?SetCurrentNumber@CBlockRegionList@@QAEXABVCPoint@@@Z PROC ; CBlockRegionList::SetCurrentNumber, COMDAT
; _this$ = ecx

; 222  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _point$[ebp]
  00014	57		 push	 edi
  00015	8b f9		 mov	 edi, ecx

; 223  : 	if(m_regionList.GetCount() <= 0)

  00017	83 7f 14 00	 cmp	 DWORD PTR [edi+20], 0
  0001b	7e 4a		 jle	 SHORT $LN3@SetCurrent

; 224  : 		return;
; 225  : 
; 226  : 	for(int nIndex = 0; nIndex < m_regionList.GetCount(); nIndex++)

  0001d	56		 push	 esi
  0001e	33 f6		 xor	 esi, esi
$LL4@SetCurrent:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 559  :         return (_Off / _Block_size) & (_Mapsize - 1);

  00020	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]

; 43   :         : _Mycont(static_cast<const _Mydeque*>(_Pdeque)), _Myoff(_Off) {}

  00023	8b 47 10	 mov	 eax, DWORD PTR [edi+16]

; 559  :         return (_Off / _Block_size) & (_Mapsize - 1);

  00026	49		 dec	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 648  : 	return ::PtInRect(this, point);

  00027	ff 73 04	 push	 DWORD PTR [ebx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 78   :         _Myoff += _Off;

  0002a	03 c6		 add	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 648  : 	return ::PtInRect(this, point);

  0002c	ff 33		 push	 DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 559  :         return (_Off / _Block_size) & (_Mapsize - 1);

  0002e	23 c8		 and	 ecx, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 62   : 	return m_full;

  00030	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00033	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  00036	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 648  : 	return ::PtInRect(this, point);

  00039	8d 45 ec	 lea	 eax, DWORD PTR _region$1[ebp]
  0003c	50		 push	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 62   : 	return m_full;

  0003d	0f 11 45 ec	 movups	 XMMWORD PTR _region$1[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 648  : 	return ::PtInRect(this, point);

  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 229  : 		if(region.PtInRect(point))

  00047	85 c0		 test	 eax, eax
  00049	75 19		 jne	 SHORT $LN37@SetCurrent

; 224  : 		return;
; 225  : 
; 226  : 	for(int nIndex = 0; nIndex < m_regionList.GetCount(); nIndex++)

  0004b	46		 inc	 esi
  0004c	3b 77 14	 cmp	 esi, DWORD PTR [edi+20]
  0004f	7c cf		 jl	 SHORT $LL4@SetCurrent

; 232  : 			return;
; 233  : 		}
; 234  : 	}
; 235  : }

  00051	5e		 pop	 esi
  00052	5f		 pop	 edi
  00053	5b		 pop	 ebx
  00054	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00057	33 cd		 xor	 ecx, ebp
  00059	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c2 04 00	 ret	 4
$LN37@SetCurrent:

; 230  : 		{
; 231  : 			m_nCurrentNumber = nIndex;

  00064	89 37		 mov	 DWORD PTR [edi], esi
  00066	5e		 pop	 esi
$LN3@SetCurrent:

; 232  : 			return;
; 233  : 		}
; 234  : 	}
; 235  : }

  00067	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006a	5f		 pop	 edi
  0006b	33 cd		 xor	 ecx, ebp
  0006d	5b		 pop	 ebx
  0006e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 04 00	 ret	 4
?SetCurrentNumber@CBlockRegionList@@QAEXABVCPoint@@@Z ENDP ; CBlockRegionList::SetCurrentNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?SetCurrentNumber@CBlockRegionList@@QAEXH@Z
_TEXT	SEGMENT
_nNumber$ = 8						; size = 4
?SetCurrentNumber@CBlockRegionList@@QAEXH@Z PROC	; CBlockRegionList::SetCurrentNumber, COMDAT
; _this$ = ecx

; 217  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 218  : 	m_nCurrentNumber = nNumber;

  00003	8b 45 08	 mov	 eax, DWORD PTR _nNumber$[ebp]
  00006	89 01		 mov	 DWORD PTR [ecx], eax

; 219  : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?SetCurrentNumber@CBlockRegionList@@QAEXH@Z ENDP	; CBlockRegionList::SetCurrentNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Chart\DequeList.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?RemoveAll@CBlockRegionList@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@CBlockRegionList@@QAEXXZ PROC		; CBlockRegionList::RemoveAll, COMDAT
; _this$ = ecx

; 210  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Chart\DequeList.h

; 128  : 	void RemoveAll(){ m_deque.clear(); };

  00003	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1332 :         _Tidy();

  00006	e8 00 00 00 00	 call	 ?_Tidy@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@AAEXXZ ; std::deque<CBlockRegion,std::allocator<CBlockRegion> >::_Tidy
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 212  : 	m_nCurrentNumber = -1;

  0000b	c7 06 ff ff ff
	ff		 mov	 DWORD PTR [esi], -1
  00011	5e		 pop	 esi

; 213  : }

  00012	c3		 ret	 0
?RemoveAll@CBlockRegionList@@QAEXXZ ENDP		; CBlockRegionList::RemoveAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?AddTail@CBlockRegionList@@QAEXABVCBlockRegion@@@Z
_TEXT	SEGMENT
_blockRegion$ = 8					; size = 4
?AddTail@CBlockRegionList@@QAEXABVCBlockRegion@@@Z PROC	; CBlockRegionList::AddTail, COMDAT
; _this$ = ecx

; 205  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 206  : 	m_regionList.AddTail(blockRegion);

  00003	83 c1 04	 add	 ecx, 4

; 207  : }

  00006	5d		 pop	 ebp

; 206  : 	m_regionList.AddTail(blockRegion);

  00007	e9 00 00 00 00	 jmp	 ?AddTail@?$CDequeList@VCBlockRegion@@@@QAEXABVCBlockRegion@@@Z ; CDequeList<CBlockRegion>::AddTail
?AddTail@CBlockRegionList@@QAEXABVCBlockRegion@@@Z ENDP	; CBlockRegionList::AddTail
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ??0CBlockRegionList@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$GSCopy$ = -132					; size = 4
_this$GSCopy$1$ = -128					; size = 4
_data$GSCopy$1$ = -124					; size = 4
_nIndex$1$ = -120					; size = 4
_item$1$ = -116						; size = 4
_this$ = -116						; size = 4
_this$ = -116						; size = 4
$T2 = -112						; size = 96
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_data$ = 8						; size = 4
??0CBlockRegionList@@QAE@ABV0@@Z PROC			; CBlockRegionList::CBlockRegionList, COMDAT
; _this$ = ecx

; 195  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CBlockRegionList@@QAE@ABV0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 78	 sub	 esp, 120		; 00000078H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f9		 mov	 edi, ecx
  0002c	89 7d 80	 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi
  0002f	89 7d 8c	 mov	 DWORD PTR _this$[ebp], edi
  00032	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  00035	8d 77 04	 lea	 esi, DWORD PTR [edi+4]
  00038	89 bd 7c ff ff
	ff		 mov	 DWORD PTR _this$GSCopy$[ebp], edi
  0003e	89 45 84	 mov	 DWORD PTR _data$GSCopy$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  00041	6a 08		 push	 8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 194  : 	m_nCurrentNumber(data.GetCurrentNumber())

  00043	8b 00		 mov	 eax, DWORD PTR [eax]
  00045	89 07		 mov	 DWORD PTR [edi], eax

; 195  : {

  00047	89 75 8c	 mov	 DWORD PTR _this$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1033 :     _Container_proxy* _Myproxy = nullptr;

  0004a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 555  :     _Deque_val() noexcept : _Map(), _Mapsize(0), _Myoff(0), _Mysize(0) {}

  00050	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00065	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  0006c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00071	83 c4 04	 add	 esp, 4

; 1003 :     mutable _Iterator_base12* _Myfirstiter = nullptr;

  00074	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1020 :         _Myproxy            = _New_proxy;

  0007b	89 06		 mov	 DWORD PTR [esi], eax

; 1021 :         _New_proxy->_Mycont = this;

  0007d	89 30		 mov	 DWORD PTR [eax], esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 196  : 	for(int nIndex = 0; nIndex < data.GetCount(); nIndex++)

  0007f	8b 45 84	 mov	 eax, DWORD PTR _data$GSCopy$1$[ebp]
  00082	33 c9		 xor	 ecx, ecx
  00084	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0008b	89 4d 88	 mov	 DWORD PTR _nIndex$1$[ebp], ecx
  0008e	39 48 14	 cmp	 DWORD PTR [eax+20], ecx
  00091	0f 8e ad 00 00
	00		 jle	 $LN119@CBlockRegi
$LL4@CBlockRegi:

; 198  : 		m_regionList.AddTail(data.GetAt(nIndex));

  00097	51		 push	 ecx
  00098	8d 4d 90	 lea	 ecx, DWORD PTR $T2[ebp]
  0009b	51		 push	 ecx
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ?GetAt@CBlockRegionList@@QBE?AVCBlockRegion@@H@Z ; CBlockRegionList::GetAt
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1106 :         if ((_Myoff() + _Mysize()) % _Block_size == 0 && _Mapsize() <= (_Mysize() + _Block_size) / _Block_size) {

  000a3	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  000a6	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 198  : 		m_regionList.AddTail(data.GetAt(nIndex));

  000a9	89 45 8c	 mov	 DWORD PTR _item$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1106 :         if ((_Myoff() + _Mysize()) % _Block_size == 0 && _Mapsize() <= (_Mysize() + _Block_size) / _Block_size) {

  000ac	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  000af	3b d0		 cmp	 edx, eax
  000b1	77 0f		 ja	 SHORT $LN59@CBlockRegi

; 1107 :             _Growmap(1);

  000b3	6a 01		 push	 1
  000b5	8b ce		 mov	 ecx, esi
  000b7	e8 00 00 00 00	 call	 ?_Growmap@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@AAEXI@Z ; std::deque<CBlockRegion,std::allocator<CBlockRegion> >::_Growmap
  000bc	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  000bf	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
$LN59@CBlockRegi:

; 1108 :         }
; 1109 :         _Myoff() &= _Mapsize() * _Block_size - 1;

  000c2	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]
  000c5	21 46 0c	 and	 DWORD PTR [esi+12], eax

; 559  :         return (_Off / _Block_size) & (_Mapsize - 1);

  000c8	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]

; 1110 :         size_type _Newoff = _Myoff() + _Mysize();

  000cb	03 4e 0c	 add	 ecx, DWORD PTR [esi+12]

; 559  :         return (_Off / _Block_size) & (_Mapsize - 1);

  000ce	23 c8		 and	 ecx, eax

; 1112 :         if (_Map()[_Block] == nullptr) {

  000d0	8d 3c 8d 00 00
	00 00		 lea	 edi, DWORD PTR [ecx*4]
  000d7	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000da	83 3c 39 00	 cmp	 DWORD PTR [ecx+edi], 0
  000de	75 15		 jne	 SHORT $LN118@CBlockRegi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  000e0	6a 60		 push	 96			; 00000060H
  000e2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 235  :         return _Traits::_Allocate(_Bytes);

  000e7	8b c8		 mov	 ecx, eax

; 79   :         return ::operator new(_Bytes);

  000e9	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1113 :             _Map()[_Block] = _Getal().allocate(_Block_size);

  000ec	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000ef	89 0c 07	 mov	 DWORD PTR [edi+eax], ecx
  000f2	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN118@CBlockRegi:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 62   : 	return m_full;

  000f5	8b 45 8c	 mov	 eax, DWORD PTR _item$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 681  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  000f8	8b 0c 0f	 mov	 ecx, DWORD PTR [edi+ecx]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 62   : 	return m_full;

  000fb	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  000fe	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 67   : 	return m_unmixed;

  00101	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]
  00105	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0

; 119  : 	return m_horzScaleRegion;

  00109	0f 10 40 20	 movups	 xmm0, XMMWORD PTR [eax+32]
  0010d	0f 11 41 20	 movups	 XMMWORD PTR [ecx+32], xmm0
  00111	0f 10 40 30	 movups	 xmm0, XMMWORD PTR [eax+48]
  00115	0f 11 41 30	 movups	 XMMWORD PTR [ecx+48], xmm0

; 124  : 	return m_vertScaleRegion;

  00119	0f 10 40 40	 movups	 xmm0, XMMWORD PTR [eax+64]
  0011d	0f 11 41 40	 movups	 XMMWORD PTR [ecx+64], xmm0
  00121	0f 10 40 50	 movups	 xmm0, XMMWORD PTR [eax+80]

; 196  : 	for(int nIndex = 0; nIndex < data.GetCount(); nIndex++)

  00125	8b 45 84	 mov	 eax, DWORD PTR _data$GSCopy$1$[ebp]

; 124  : 	return m_vertScaleRegion;

  00128	0f 11 41 50	 movups	 XMMWORD PTR [ecx+80], xmm0

; 196  : 	for(int nIndex = 0; nIndex < data.GetCount(); nIndex++)

  0012c	8b 4d 88	 mov	 ecx, DWORD PTR _nIndex$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1119 :         ++_Mysize();

  0012f	ff 46 10	 inc	 DWORD PTR [esi+16]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 196  : 	for(int nIndex = 0; nIndex < data.GetCount(); nIndex++)

  00132	41		 inc	 ecx
  00133	89 4d 88	 mov	 DWORD PTR _nIndex$1$[ebp], ecx
  00136	3b 48 14	 cmp	 ecx, DWORD PTR [eax+20]
  00139	0f 8c 58 ff ff
	ff		 jl	 $LL4@CBlockRegi

; 199  : 	}
; 200  : }

  0013f	8b 45 80	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00142	eb 02		 jmp	 SHORT $LN3@CBlockRegi
$LN119@CBlockRegi:
  00144	8b c7		 mov	 eax, edi
$LN3@CBlockRegi:
  00146	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00149	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00150	59		 pop	 ecx
  00151	5f		 pop	 edi
  00152	5e		 pop	 esi
  00153	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00156	33 cd		 xor	 ecx, ebp
  00158	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0015d	8b e5		 mov	 esp, ebp
  0015f	5d		 pop	 ebp
  00160	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CBlockRegionList@@QAE@ABV0@@Z$0:
  00000	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00006	83 c1 04	 add	 ecx, 4
  00009	e9 00 00 00 00	 jmp	 ??1?$CDequeList@VCBlockRegion@@@@QAE@XZ ; CDequeList<CBlockRegion>::~CDequeList<CBlockRegion>
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
__ehhandler$??0CBlockRegionList@@QAE@ABV0@@Z:
  00013	90		 npad	 1
  00014	90		 npad	 1
  00015	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00019	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001c	8b 8a 7c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-132]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002c	33 c8		 xor	 ecx, eax
  0002e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00033	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CBlockRegionList@@QAE@ABV0@@Z
  00038	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CBlockRegionList@@QAE@ABV0@@Z ENDP			; CBlockRegionList::CBlockRegionList
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ??0CBlockRegionList@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
_this$ = -4						; size = 4
??0CBlockRegionList@@QAE@XZ PROC			; CBlockRegionList::CBlockRegionList, COMDAT
; _this$ = ecx

; 190  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	8d 77 04	 lea	 esi, DWORD PTR [edi+4]
  0000b	89 7d fc	 mov	 DWORD PTR _this$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  0000e	6a 08		 push	 8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 190  : {

  00010	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  00013	c7 07 ff ff ff
	ff		 mov	 DWORD PTR [edi], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1033 :     _Container_proxy* _Myproxy = nullptr;

  00019	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 555  :     _Deque_val() noexcept : _Map(), _Mapsize(0), _Myoff(0), _Mysize(0) {}

  0001f	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00026	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0002d	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00034	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  0003b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00040	83 c4 04	 add	 esp, 4

; 1003 :     mutable _Iterator_base12* _Myfirstiter = nullptr;

  00043	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1020 :         _Myproxy            = _New_proxy;

  0004a	89 06		 mov	 DWORD PTR [esi], eax

; 1021 :         _New_proxy->_Mycont = this;

  0004c	89 30		 mov	 DWORD PTR [eax], esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 191  : }

  0004e	8b c7		 mov	 eax, edi
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??0CBlockRegionList@@QAE@XZ ENDP			; CBlockRegionList::CBlockRegionList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ??4CBlockRegionList@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$GSCopy$1$ = -112					; size = 4
_item$1$ = -108						; size = 4
_nIndex$1$ = -104					; size = 4
$T1 = -100						; size = 96
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
??4CBlockRegionList@@QAEAAV0@ABV0@@Z PROC		; CBlockRegionList::operator=, COMDAT
; _this$ = ecx

; 175  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _data$[ebp]
  00014	89 4d 90	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx

; 176  : 	if(this == &data)

  00017	3b cb		 cmp	 ecx, ebx
  00019	0f 84 d2 00 00
	00		 je	 $LN73@operator

; 177  : 		return *this;
; 178  : 
; 179  : 	m_nCurrentNumber = data.GetCurrentNumber();

  0001f	8b 03		 mov	 eax, DWORD PTR [ebx]
  00021	89 01		 mov	 DWORD PTR [ecx], eax

; 180  : 	for(int nIndex = 0; nIndex < data.GetCount(); nIndex++)

  00023	33 c0		 xor	 eax, eax
  00025	89 45 98	 mov	 DWORD PTR _nIndex$1$[ebp], eax
  00028	39 43 14	 cmp	 DWORD PTR [ebx+20], eax
  0002b	0f 8e c0 00 00
	00		 jle	 $LN73@operator
  00031	56		 push	 esi
  00032	57		 push	 edi
  00033	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
$LL4@operator:

; 182  : 		m_regionList.AddTail(data.GetAt(nIndex));

  00036	50		 push	 eax
  00037	8d 45 9c	 lea	 eax, DWORD PTR $T1[ebp]
  0003a	8b cb		 mov	 ecx, ebx
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ?GetAt@CBlockRegionList@@QBE?AVCBlockRegion@@H@Z ; CBlockRegionList::GetAt
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1106 :         if ((_Myoff() + _Mysize()) % _Block_size == 0 && _Mapsize() <= (_Mysize() + _Block_size) / _Block_size) {

  00042	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00045	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 182  : 		m_regionList.AddTail(data.GetAt(nIndex));

  00048	89 45 94	 mov	 DWORD PTR _item$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1106 :         if ((_Myoff() + _Mysize()) % _Block_size == 0 && _Mapsize() <= (_Mysize() + _Block_size) / _Block_size) {

  0004b	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  0004e	3b d0		 cmp	 edx, eax
  00050	77 0f		 ja	 SHORT $LN12@operator

; 1107 :             _Growmap(1);

  00052	6a 01		 push	 1
  00054	8b ce		 mov	 ecx, esi
  00056	e8 00 00 00 00	 call	 ?_Growmap@?$deque@VCBlockRegion@@V?$allocator@VCBlockRegion@@@std@@@std@@AAEXI@Z ; std::deque<CBlockRegion,std::allocator<CBlockRegion> >::_Growmap
  0005b	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0005e	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
$LN12@operator:

; 1108 :         }
; 1109 :         _Myoff() &= _Mapsize() * _Block_size - 1;

  00061	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]
  00064	21 46 0c	 and	 DWORD PTR [esi+12], eax

; 559  :         return (_Off / _Block_size) & (_Mapsize - 1);

  00067	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]

; 1110 :         size_type _Newoff = _Myoff() + _Mysize();

  0006a	03 4e 0c	 add	 ecx, DWORD PTR [esi+12]

; 559  :         return (_Off / _Block_size) & (_Mapsize - 1);

  0006d	23 c8		 and	 ecx, eax

; 1112 :         if (_Map()[_Block] == nullptr) {

  0006f	8d 3c 8d 00 00
	00 00		 lea	 edi, DWORD PTR [ecx*4]
  00076	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00079	83 3c 39 00	 cmp	 DWORD PTR [ecx+edi], 0
  0007d	75 15		 jne	 SHORT $LN71@operator
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 79   :         return ::operator new(_Bytes);

  0007f	6a 60		 push	 96			; 00000060H
  00081	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 235  :         return _Traits::_Allocate(_Bytes);

  00086	8b c8		 mov	 ecx, eax

; 79   :         return ::operator new(_Bytes);

  00088	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1113 :             _Map()[_Block] = _Getal().allocate(_Block_size);

  0008b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0008e	89 0c 07	 mov	 DWORD PTR [edi+eax], ecx
  00091	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN71@operator:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 62   : 	return m_full;

  00094	8b 45 94	 mov	 eax, DWORD PTR _item$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 681  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  00097	8b 0c 0f	 mov	 ecx, DWORD PTR [edi+ecx]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 62   : 	return m_full;

  0009a	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  0009d	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 67   : 	return m_unmixed;

  000a0	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]
  000a4	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0

; 119  : 	return m_horzScaleRegion;

  000a8	0f 10 40 20	 movups	 xmm0, XMMWORD PTR [eax+32]
  000ac	0f 11 41 20	 movups	 XMMWORD PTR [ecx+32], xmm0
  000b0	0f 10 40 30	 movups	 xmm0, XMMWORD PTR [eax+48]
  000b4	0f 11 41 30	 movups	 XMMWORD PTR [ecx+48], xmm0

; 124  : 	return m_vertScaleRegion;

  000b8	0f 10 40 40	 movups	 xmm0, XMMWORD PTR [eax+64]
  000bc	0f 11 41 40	 movups	 XMMWORD PTR [ecx+64], xmm0
  000c0	0f 10 40 50	 movups	 xmm0, XMMWORD PTR [eax+80]

; 180  : 	for(int nIndex = 0; nIndex < data.GetCount(); nIndex++)

  000c4	8b 45 98	 mov	 eax, DWORD PTR _nIndex$1$[ebp]
  000c7	40		 inc	 eax

; 124  : 	return m_vertScaleRegion;

  000c8	0f 11 41 50	 movups	 XMMWORD PTR [ecx+80], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque

; 1119 :         ++_Mysize();

  000cc	ff 46 10	 inc	 DWORD PTR [esi+16]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 180  : 	for(int nIndex = 0; nIndex < data.GetCount(); nIndex++)

  000cf	89 45 98	 mov	 DWORD PTR _nIndex$1$[ebp], eax
  000d2	3b 43 14	 cmp	 eax, DWORD PTR [ebx+20]
  000d5	0f 8c 5b ff ff
	ff		 jl	 $LL4@operator

; 183  : 	}
; 184  : 
; 185  : 	return *this;

  000db	8b 45 90	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx

; 186  : }

  000e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e4	33 cd		 xor	 ecx, ebp
  000e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 04 00	 ret	 4
$LN73@operator:
  000f1	8b c1		 mov	 eax, ecx
  000f3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f6	33 cd		 xor	 ecx, ebp
  000f8	5b		 pop	 ebx
  000f9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000fe	8b e5		 mov	 esp, ebp
  00100	5d		 pop	 ebp
  00101	c2 04 00	 ret	 4
??4CBlockRegionList@@QAEAAV0@ABV0@@Z ENDP		; CBlockRegionList::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetFullGraphRegion_BottomLeft@CBlockRegion@@QBE?AVCPoint@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetFullGraphRegion_BottomLeft@CBlockRegion@@QBE?AVCPoint@@XZ PROC ; CBlockRegion::GetFullGraphRegion_BottomLeft, COMDAT
; _this$ = ecx

; 165  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 408  : 	x = initX;

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 62   : 	return m_full;

  00006	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 408  : 	x = initX;

  00009	66 0f 7e 00	 movd	 DWORD PTR [eax], xmm0

; 409  : 	y = initY;

  0000d	66 0f 73 d8 0c	 psrldq	 xmm0, 12		; 0000000cH
  00012	66 0f 7e 40 04	 movd	 DWORD PTR [eax+4], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 168  : }

  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?GetFullGraphRegion_BottomLeft@CBlockRegion@@QBE?AVCPoint@@XZ ENDP ; CBlockRegion::GetFullGraphRegion_BottomLeft
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetFullGraphRegion_TopRight@CBlockRegion@@QBE?AVCPoint@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetFullGraphRegion_TopRight@CBlockRegion@@QBE?AVCPoint@@XZ PROC ; CBlockRegion::GetFullGraphRegion_TopRight, COMDAT
; _this$ = ecx

; 159  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 62   : 	return m_full;

  00003	0f 10 09	 movups	 xmm1, XMMWORD PTR [ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 408  : 	x = initX;

  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	0f 28 c1	 movaps	 xmm0, xmm1

; 409  : 	y = initY;

  0000c	66 0f 73 d9 04	 psrldq	 xmm1, 4
  00011	66 0f 73 d8 08	 psrldq	 xmm0, 8
  00016	66 0f 7e 00	 movd	 DWORD PTR [eax], xmm0
  0001a	66 0f 7e 48 04	 movd	 DWORD PTR [eax+4], xmm1
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 162  : }

  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
?GetFullGraphRegion_TopRight@CBlockRegion@@QBE?AVCPoint@@XZ ENDP ; CBlockRegion::GetFullGraphRegion_TopRight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetFullGraphRegion_TopLeft@CBlockRegion@@QBE?AVCPoint@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetFullGraphRegion_TopLeft@CBlockRegion@@QBE?AVCPoint@@XZ PROC ; CBlockRegion::GetFullGraphRegion_TopLeft, COMDAT
; _this$ = ecx

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 62   : 	return m_full;

  00003	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]

; 155  : 	return GetFullGraphRegion().TopLeft();

  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	66 0f 7e c2	 movd	 edx, xmm0
  0000d	66 0f 73 d8 04	 psrldq	 xmm0, 4
  00012	66 0f 7e 40 04	 movd	 DWORD PTR [eax+4], xmm0
  00017	89 10		 mov	 DWORD PTR [eax], edx

; 156  : }

  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?GetFullGraphRegion_TopLeft@CBlockRegion@@QBE?AVCPoint@@XZ ENDP ; CBlockRegion::GetFullGraphRegion_TopLeft
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetUnmixedGraphRegion@CBlockRegion@@QBE?AVCRect@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetUnmixedGraphRegion@CBlockRegion@@QBE?AVCRect@@XZ PROC ; CBlockRegion::GetUnmixedGraphRegion, COMDAT
; _this$ = ecx

; 149  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   : 	return m_unmixed;

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	0f 10 41 10	 movups	 xmm0, XMMWORD PTR [ecx+16]
  0000a	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 150  : 	return m_graphPartRegion.GetUnmixed();
; 151  : }

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?GetUnmixedGraphRegion@CBlockRegion@@QBE?AVCRect@@XZ ENDP ; CBlockRegion::GetUnmixedGraphRegion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetFullGraphRegion@CBlockRegion@@QBE?AVCRect@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetFullGraphRegion@CBlockRegion@@QBE?AVCRect@@XZ PROC	; CBlockRegion::GetFullGraphRegion, COMDAT
; _this$ = ecx

; 144  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 62   : 	return m_full;

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00009	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 145  : 	return m_graphPartRegion.GetFull();
; 146  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?GetFullGraphRegion@CBlockRegion@@QBE?AVCRect@@XZ ENDP	; CBlockRegion::GetFullGraphRegion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetBlockRegion@CBlockRegion@@QBE?AVCRect@@XZ
_TEXT	SEGMENT
_this$GSCopy$1$ = -24					; size = 4
$T1 = -20						; size = 16
$T2 = -20						; size = 16
$T3 = -20						; size = 16
$T4 = -20						; size = 16
$T5 = -20						; size = 16
$T6 = -20						; size = 16
$T7 = -20						; size = 16
$T8 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetBlockRegion@CBlockRegion@@QBE?AVCRect@@XZ PROC	; CBlockRegion::GetBlockRegion, COMDAT
; _this$ = ecx

; 129  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b c1		 mov	 eax, ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]

; 62   : 	return m_full;

  00017	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 129  : {

  0001a	57		 push	 edi

; 131  : 	if(!m_horzScaleRegion.GetTopScaleRegion().IsRectEmpty())

  0001b	8d 78 20	 lea	 edi, DWORD PTR [eax+32]
  0001e	89 45 e8	 mov	 DWORD PTR _this$GSCopy$1$[ebp], eax
  00021	8d 45 ec	 lea	 eax, DWORD PTR $T8[ebp]
  00024	8b cf		 mov	 ecx, edi
  00026	50		 push	 eax

; 62   : 	return m_full;

  00027	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0

; 131  : 	if(!m_horzScaleRegion.GetTopScaleRegion().IsRectEmpty())

  0002a	e8 00 00 00 00	 call	 ?GetTopScaleRegion@CHorzScaleRegion@@QBE?AVCRect@@XZ ; CHorzScaleRegion::GetTopScaleRegion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 638  : 	return ::IsRectEmpty(this);

  0002f	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__IsRectEmpty@4
  00035	50		 push	 eax
  00036	ff d3		 call	 ebx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 131  : 	if(!m_horzScaleRegion.GetTopScaleRegion().IsRectEmpty())

  00038	85 c0		 test	 eax, eax
  0003a	75 11		 jne	 SHORT $LN2@GetBlockRe

; 132  : 		region.top = m_horzScaleRegion.GetTopScaleRegion().top;

  0003c	8d 45 ec	 lea	 eax, DWORD PTR $T7[ebp]
  0003f	8b cf		 mov	 ecx, edi
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?GetTopScaleRegion@CHorzScaleRegion@@QBE?AVCRect@@XZ ; CHorzScaleRegion::GetTopScaleRegion
  00047	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004a	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN2@GetBlockRe:

; 133  : 	if(!m_horzScaleRegion.GetBottomScaleRegion().IsRectEmpty())

  0004d	8d 45 ec	 lea	 eax, DWORD PTR $T6[ebp]
  00050	8b cf		 mov	 ecx, edi
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?GetBottomScaleRegion@CHorzScaleRegion@@QBE?AVCRect@@XZ ; CHorzScaleRegion::GetBottomScaleRegion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 638  : 	return ::IsRectEmpty(this);

  00058	50		 push	 eax
  00059	ff d3		 call	 ebx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 133  : 	if(!m_horzScaleRegion.GetBottomScaleRegion().IsRectEmpty())

  0005b	85 c0		 test	 eax, eax
  0005d	75 11		 jne	 SHORT $LN3@GetBlockRe

; 134  : 		region.bottom = m_horzScaleRegion.GetBottomScaleRegion().bottom;

  0005f	8d 45 ec	 lea	 eax, DWORD PTR $T5[ebp]
  00062	8b cf		 mov	 ecx, edi
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ?GetBottomScaleRegion@CHorzScaleRegion@@QBE?AVCRect@@XZ ; CHorzScaleRegion::GetBottomScaleRegion
  0006a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0006d	89 46 0c	 mov	 DWORD PTR [esi+12], eax
$LN3@GetBlockRe:

; 135  : 	if(!m_vertScaleRegion.GetLeftScaleRegion().IsRectEmpty())

  00070	8b 7d e8	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
  00073	8d 45 ec	 lea	 eax, DWORD PTR $T4[ebp]
  00076	83 c7 40	 add	 edi, 64			; 00000040H
  00079	50		 push	 eax
  0007a	8b cf		 mov	 ecx, edi
  0007c	e8 00 00 00 00	 call	 ?GetLeftScaleRegion@CVertScaleRegion@@QBE?AVCRect@@XZ ; CVertScaleRegion::GetLeftScaleRegion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 638  : 	return ::IsRectEmpty(this);

  00081	50		 push	 eax
  00082	ff d3		 call	 ebx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 135  : 	if(!m_vertScaleRegion.GetLeftScaleRegion().IsRectEmpty())

  00084	85 c0		 test	 eax, eax
  00086	75 0f		 jne	 SHORT $LN4@GetBlockRe

; 136  : 		region.left = m_vertScaleRegion.GetLeftScaleRegion().left;

  00088	8d 45 ec	 lea	 eax, DWORD PTR $T3[ebp]
  0008b	8b cf		 mov	 ecx, edi
  0008d	50		 push	 eax
  0008e	e8 00 00 00 00	 call	 ?GetLeftScaleRegion@CVertScaleRegion@@QBE?AVCRect@@XZ ; CVertScaleRegion::GetLeftScaleRegion
  00093	8b 00		 mov	 eax, DWORD PTR [eax]
  00095	89 06		 mov	 DWORD PTR [esi], eax
$LN4@GetBlockRe:

; 137  : 	if(!m_vertScaleRegion.GetRightScaleRegion().IsRectEmpty())

  00097	8d 45 ec	 lea	 eax, DWORD PTR $T2[ebp]
  0009a	8b cf		 mov	 ecx, edi
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 ?GetRightScaleRegion@CVertScaleRegion@@QBE?AVCRect@@XZ ; CVertScaleRegion::GetRightScaleRegion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 638  : 	return ::IsRectEmpty(this);

  000a2	50		 push	 eax
  000a3	ff d3		 call	 ebx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 137  : 	if(!m_vertScaleRegion.GetRightScaleRegion().IsRectEmpty())

  000a5	85 c0		 test	 eax, eax
  000a7	75 11		 jne	 SHORT $LN17@GetBlockRe

; 138  : 		region.right = m_vertScaleRegion.GetRightScaleRegion().right;

  000a9	8d 45 ec	 lea	 eax, DWORD PTR $T1[ebp]
  000ac	8b cf		 mov	 ecx, edi
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 ?GetRightScaleRegion@CVertScaleRegion@@QBE?AVCRect@@XZ ; CVertScaleRegion::GetRightScaleRegion
  000b4	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b7	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
$LN17@GetBlockRe:

; 139  : 
; 140  : 	return region;
; 141  : }

  000ba	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000bd	8b c6		 mov	 eax, esi
  000bf	5f		 pop	 edi
  000c0	5e		 pop	 esi
  000c1	33 cd		 xor	 ecx, ebp
  000c3	5b		 pop	 ebx
  000c4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c9	8b e5		 mov	 esp, ebp
  000cb	5d		 pop	 ebp
  000cc	c2 04 00	 ret	 4
?GetBlockRegion@CBlockRegion@@QBE?AVCRect@@XZ ENDP	; CBlockRegion::GetBlockRegion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetVertScaleRegion@CBlockRegion@@QBE?AVCVertScaleRegion@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetVertScaleRegion@CBlockRegion@@QBE?AVCVertScaleRegion@@XZ PROC ; CBlockRegion::GetVertScaleRegion, COMDAT
; _this$ = ecx

; 123  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 124  : 	return m_vertScaleRegion;

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	0f 10 41 40	 movups	 xmm0, XMMWORD PTR [ecx+64]
  0000a	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  0000d	0f 10 41 50	 movups	 xmm0, XMMWORD PTR [ecx+80]
  00011	0f 11 40 10	 movups	 XMMWORD PTR [eax+16], xmm0

; 125  : }

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?GetVertScaleRegion@CBlockRegion@@QBE?AVCVertScaleRegion@@XZ ENDP ; CBlockRegion::GetVertScaleRegion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetHorzScaleRegion@CBlockRegion@@QBE?AVCHorzScaleRegion@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetHorzScaleRegion@CBlockRegion@@QBE?AVCHorzScaleRegion@@XZ PROC ; CBlockRegion::GetHorzScaleRegion, COMDAT
; _this$ = ecx

; 118  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 119  : 	return m_horzScaleRegion;

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	0f 10 41 20	 movups	 xmm0, XMMWORD PTR [ecx+32]
  0000a	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  0000d	0f 10 41 30	 movups	 xmm0, XMMWORD PTR [ecx+48]
  00011	0f 11 40 10	 movups	 XMMWORD PTR [eax+16], xmm0

; 120  : }

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?GetHorzScaleRegion@CBlockRegion@@QBE?AVCHorzScaleRegion@@XZ ENDP ; CBlockRegion::GetHorzScaleRegion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetGraphPartRegion@CBlockRegion@@QBE?AVCGraphPartRegion@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetGraphPartRegion@CBlockRegion@@QBE?AVCGraphPartRegion@@XZ PROC ; CBlockRegion::GetGraphPartRegion, COMDAT
; _this$ = ecx

; 113  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 62   : 	return m_full;

  00003	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 67   : 	return m_unmixed;

  0000c	0f 10 41 10	 movups	 xmm0, XMMWORD PTR [ecx+16]
  00010	0f 11 40 10	 movups	 XMMWORD PTR [eax+16], xmm0

; 114  : 	return m_graphPartRegion;
; 115  : }

  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
?GetGraphPartRegion@CBlockRegion@@QBE?AVCGraphPartRegion@@XZ ENDP ; CBlockRegion::GetGraphPartRegion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ??0CBlockRegion@@QAE@ABV0@@Z
_TEXT	SEGMENT
_data$ = 8						; size = 4
??0CBlockRegion@@QAE@ABV0@@Z PROC			; CBlockRegion::CBlockRegion, COMDAT
; _this$ = ecx

; 107  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 62   : 	return m_full;

  00003	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  00006	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00009	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 67   : 	return m_unmixed;

  0000c	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]
  00010	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0

; 119  : 	return m_horzScaleRegion;

  00014	0f 10 40 20	 movups	 xmm0, XMMWORD PTR [eax+32]
  00018	0f 11 41 20	 movups	 XMMWORD PTR [ecx+32], xmm0
  0001c	0f 10 40 30	 movups	 xmm0, XMMWORD PTR [eax+48]
  00020	0f 11 41 30	 movups	 XMMWORD PTR [ecx+48], xmm0

; 124  : 	return m_vertScaleRegion;

  00024	0f 10 40 40	 movups	 xmm0, XMMWORD PTR [eax+64]
  00028	0f 11 41 40	 movups	 XMMWORD PTR [ecx+64], xmm0
  0002c	0f 10 40 50	 movups	 xmm0, XMMWORD PTR [eax+80]

; 108  : }

  00030	8b c1		 mov	 eax, ecx

; 124  : 	return m_vertScaleRegion;

  00032	0f 11 41 50	 movups	 XMMWORD PTR [ecx+80], xmm0

; 108  : }

  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??0CBlockRegion@@QAE@ABV0@@Z ENDP			; CBlockRegion::CBlockRegion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ??0CBlockRegion@@QAE@ABVCGraphPartRegion@@ABVCHorzScaleRegion@@ABVCVertScaleRegion@@@Z
_TEXT	SEGMENT
_graphPartRegion$ = 8					; size = 4
_horzScale$ = 12					; size = 4
_vertScale$ = 16					; size = 4
??0CBlockRegion@@QAE@ABVCGraphPartRegion@@ABVCHorzScaleRegion@@ABVCVertScaleRegion@@@Z PROC ; CBlockRegion::CBlockRegion, COMDAT
; _this$ = ecx

; 100  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 62   : 	return m_full;

  00003	8b 45 08	 mov	 eax, DWORD PTR _graphPartRegion$[ebp]
  00006	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00009	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 67   : 	return m_unmixed;

  0000c	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]

; 68   : }
; 69   : 
; 70   : bool CGraphPartRegion::IsDrawing() const
; 71   : {
; 72   : 	return (!m_full.IsRectEmpty() && !m_unmixed.IsRectEmpty());
; 73   : }
; 74   : 
; 75   : 
; 76   : ///////////////////////////////////////////////////////////////////////////////
; 77   : // class CBlockRegion
; 78   : 
; 79   : CBlockRegion& CBlockRegion::operator=(const CBlockRegion& data)
; 80   : {
; 81   : 	if(this == &data)
; 82   : 		return *this;
; 83   : 
; 84   : 	m_graphPartRegion = data.GetGraphPartRegion();
; 85   : 	m_horzScaleRegion = data.GetHorzScaleRegion();
; 86   : 	m_vertScaleRegion = data.GetVertScaleRegion();
; 87   : 
; 88   : 	return *this;
; 89   : }
; 90   : 
; 91   : CBlockRegion::CBlockRegion()
; 92   : {
; 93   : }
; 94   : 
; 95   : CBlockRegion::CBlockRegion(const CGraphPartRegion& graphPartRegion, 
; 96   : 		   const CHorzScaleRegion& horzScale, const CVertScaleRegion& vertScale) :
; 97   : 	m_graphPartRegion(graphPartRegion),
; 98   : 	m_horzScaleRegion(horzScale),

  00010	8b 45 0c	 mov	 eax, DWORD PTR _horzScale$[ebp]

; 67   : 	return m_unmixed;

  00013	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0

; 68   : }
; 69   : 
; 70   : bool CGraphPartRegion::IsDrawing() const
; 71   : {
; 72   : 	return (!m_full.IsRectEmpty() && !m_unmixed.IsRectEmpty());
; 73   : }
; 74   : 
; 75   : 
; 76   : ///////////////////////////////////////////////////////////////////////////////
; 77   : // class CBlockRegion
; 78   : 
; 79   : CBlockRegion& CBlockRegion::operator=(const CBlockRegion& data)
; 80   : {
; 81   : 	if(this == &data)
; 82   : 		return *this;
; 83   : 
; 84   : 	m_graphPartRegion = data.GetGraphPartRegion();
; 85   : 	m_horzScaleRegion = data.GetHorzScaleRegion();
; 86   : 	m_vertScaleRegion = data.GetVertScaleRegion();
; 87   : 
; 88   : 	return *this;
; 89   : }
; 90   : 
; 91   : CBlockRegion::CBlockRegion()
; 92   : {
; 93   : }
; 94   : 
; 95   : CBlockRegion::CBlockRegion(const CGraphPartRegion& graphPartRegion, 
; 96   : 		   const CHorzScaleRegion& horzScale, const CVertScaleRegion& vertScale) :
; 97   : 	m_graphPartRegion(graphPartRegion),
; 98   : 	m_horzScaleRegion(horzScale),

  00017	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  0001a	0f 11 41 20	 movups	 XMMWORD PTR [ecx+32], xmm0
  0001e	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]

; 99   : 	m_vertScaleRegion(vertScale)

  00022	8b 45 10	 mov	 eax, DWORD PTR _vertScale$[ebp]
  00025	0f 11 41 30	 movups	 XMMWORD PTR [ecx+48], xmm0
  00029	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  0002c	0f 11 41 40	 movups	 XMMWORD PTR [ecx+64], xmm0
  00030	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]

; 101  : }

  00034	8b c1		 mov	 eax, ecx
  00036	0f 11 41 50	 movups	 XMMWORD PTR [ecx+80], xmm0
  0003a	5d		 pop	 ebp
  0003b	c2 0c 00	 ret	 12			; 0000000cH
??0CBlockRegion@@QAE@ABVCGraphPartRegion@@ABVCHorzScaleRegion@@ABVCVertScaleRegion@@@Z ENDP ; CBlockRegion::CBlockRegion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ??0CBlockRegion@@QAE@XZ
_TEXT	SEGMENT
??0CBlockRegion@@QAE@XZ PROC				; CBlockRegion::CBlockRegion, COMDAT
; _this$ = ecx

; 92   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 540  : 	left = l;

  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 541  : 	top = t;

  0000c	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 542  : 	right = r;

  00013	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 543  : 	bottom = b;

  0001a	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 540  : 	left = l;

  00021	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 541  : 	top = t;

  00028	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 542  : 	right = r;

  0002f	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0

; 543  : 	bottom = b;

  00036	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 92   : {

  0003d	e8 00 00 00 00	 call	 ??0CHorzScaleRegion@@QAE@XZ ; CHorzScaleRegion::CHorzScaleRegion
  00042	8d 4e 40	 lea	 ecx, DWORD PTR [esi+64]
  00045	e8 00 00 00 00	 call	 ??0CVertScaleRegion@@QAE@XZ ; CVertScaleRegion::CVertScaleRegion

; 93   : }

  0004a	8b c6		 mov	 eax, esi
  0004c	5e		 pop	 esi
  0004d	c3		 ret	 0
??0CBlockRegion@@QAE@XZ ENDP				; CBlockRegion::CBlockRegion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ??4CBlockRegion@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
$T1 = -32						; size = 32
_data$ = 8						; size = 4
??4CBlockRegion@@QAEAAV0@ABV0@@Z PROC			; CBlockRegion::operator=, COMDAT
; _this$ = ecx

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 81   : 	if(this == &data)

  00003	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  00006	83 ec 20	 sub	 esp, 32			; 00000020H
  00009	3b c8		 cmp	 ecx, eax
  0000b	74 35		 je	 SHORT $LN23@operator

; 62   : 	return m_full;

  0000d	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 21   : 	if(this == &data)

  00010	8d 55 e0	 lea	 edx, DWORD PTR $T1[ebp]

; 67   : 	return m_unmixed;

  00013	0f 10 48 10	 movups	 xmm1, XMMWORD PTR [eax+16]

; 21   : 	if(this == &data)

  00017	3b ca		 cmp	 ecx, edx
  00019	74 07		 je	 SHORT $LN12@operator

; 22   : 		return *this;
; 23   : 
; 24   : 	m_full = data.GetFull();

  0001b	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 25   : 	m_unmixed = data.GetUnmixed();

  0001e	0f 11 49 10	 movups	 XMMWORD PTR [ecx+16], xmm1
$LN12@operator:

; 82   : 		return *this;
; 83   : 
; 84   : 	m_graphPartRegion = data.GetGraphPartRegion();
; 85   : 	m_horzScaleRegion = data.GetHorzScaleRegion();

  00022	0f 10 40 20	 movups	 xmm0, XMMWORD PTR [eax+32]
  00026	0f 11 41 20	 movups	 XMMWORD PTR [ecx+32], xmm0
  0002a	0f 10 40 30	 movups	 xmm0, XMMWORD PTR [eax+48]
  0002e	0f 11 41 30	 movups	 XMMWORD PTR [ecx+48], xmm0

; 86   : 	m_vertScaleRegion = data.GetVertScaleRegion();

  00032	0f 10 40 40	 movups	 xmm0, XMMWORD PTR [eax+64]
  00036	0f 11 41 40	 movups	 XMMWORD PTR [ecx+64], xmm0
  0003a	0f 10 40 50	 movups	 xmm0, XMMWORD PTR [eax+80]
  0003e	0f 11 41 50	 movups	 XMMWORD PTR [ecx+80], xmm0
$LN23@operator:

; 87   : 
; 88   : 	return *this;
; 89   : }

  00042	8b c1		 mov	 eax, ecx
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
??4CBlockRegion@@QAEAAV0@ABV0@@Z ENDP			; CBlockRegion::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?IsDrawing@CGraphPartRegion@@QBE_NXZ
_TEXT	SEGMENT
?IsDrawing@CGraphPartRegion@@QBE_NXZ PROC		; CGraphPartRegion::IsDrawing, COMDAT
; _this$ = ecx

; 71   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 638  : 	return ::IsRectEmpty(this);

  00003	56		 push	 esi
  00004	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsRectEmpty@4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 72   : 	return (!m_full.IsRectEmpty() && !m_unmixed.IsRectEmpty());

  0000a	85 c0		 test	 eax, eax
  0000c	75 12		 jne	 SHORT $LN3@IsDrawing
  0000e	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 638  : 	return ::IsRectEmpty(this);

  00011	50		 push	 eax
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsRectEmpty@4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 72   : 	return (!m_full.IsRectEmpty() && !m_unmixed.IsRectEmpty());

  00018	85 c0		 test	 eax, eax
  0001a	75 04		 jne	 SHORT $LN3@IsDrawing
  0001c	b0 01		 mov	 al, 1
  0001e	5e		 pop	 esi

; 73   : }

  0001f	c3		 ret	 0
$LN3@IsDrawing:

; 72   : 	return (!m_full.IsRectEmpty() && !m_unmixed.IsRectEmpty());

  00020	32 c0		 xor	 al, al
  00022	5e		 pop	 esi

; 73   : }

  00023	c3		 ret	 0
?IsDrawing@CGraphPartRegion@@QBE_NXZ ENDP		; CGraphPartRegion::IsDrawing
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetUnmixed@CGraphPartRegion@@QBE?AVCRect@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetUnmixed@CGraphPartRegion@@QBE?AVCRect@@XZ PROC	; CGraphPartRegion::GetUnmixed, COMDAT
; _this$ = ecx

; 66   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   : 	return m_unmixed;

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	0f 10 41 10	 movups	 xmm0, XMMWORD PTR [ecx+16]
  0000a	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 68   : }

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?GetUnmixed@CGraphPartRegion@@QBE?AVCRect@@XZ ENDP	; CGraphPartRegion::GetUnmixed
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?GetFull@CGraphPartRegion@@QBE?AVCRect@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetFull@CGraphPartRegion@@QBE?AVCRect@@XZ PROC		; CGraphPartRegion::GetFull, COMDAT
; _this$ = ecx

; 61   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 62   : 	return m_full;

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00009	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 63   : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?GetFull@CGraphPartRegion@@QBE?AVCRect@@XZ ENDP		; CGraphPartRegion::GetFull
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?SetUnmixed@CGraphPartRegion@@QAEXABVCRect@@@Z
_TEXT	SEGMENT
_region$ = 8						; size = 4
?SetUnmixed@CGraphPartRegion@@QAEXABVCRect@@@Z PROC	; CGraphPartRegion::SetUnmixed, COMDAT
; _this$ = ecx

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 57   : 	m_unmixed = region;

  00003	8b 45 08	 mov	 eax, DWORD PTR _region$[ebp]
  00006	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00009	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0

; 58   : }

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?SetUnmixed@CGraphPartRegion@@QAEXABVCRect@@@Z ENDP	; CGraphPartRegion::SetUnmixed
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?SetFull@CGraphPartRegion@@QAEXABVCRect@@@Z
_TEXT	SEGMENT
_region$ = 8						; size = 4
?SetFull@CGraphPartRegion@@QAEXABVCRect@@@Z PROC	; CGraphPartRegion::SetFull, COMDAT
; _this$ = ecx

; 51   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 52   : 	m_full = region;

  00003	8b 45 08	 mov	 eax, DWORD PTR _region$[ebp]
  00006	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00009	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 53   : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetFull@CGraphPartRegion@@QAEXABVCRect@@@Z ENDP	; CGraphPartRegion::SetFull
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ??0CGraphPartRegion@@QAE@ABV0@@Z
_TEXT	SEGMENT
_data$ = 8						; size = 4
??0CGraphPartRegion@@QAE@ABV0@@Z PROC			; CGraphPartRegion::CGraphPartRegion, COMDAT
; _this$ = ecx

; 45   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 62   : 	return m_full;

  00003	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  00006	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00009	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 67   : 	return m_unmixed;

  0000c	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]

; 46   : }

  00010	8b c1		 mov	 eax, ecx

; 67   : 	return m_unmixed;

  00012	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0

; 46   : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??0CGraphPartRegion@@QAE@ABV0@@Z ENDP			; CGraphPartRegion::CGraphPartRegion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ??0CGraphPartRegion@@QAE@ABVCRect@@0@Z
_TEXT	SEGMENT
_full$ = 8						; size = 4
_unmixed$ = 12						; size = 4
??0CGraphPartRegion@@QAE@ABVCRect@@0@Z PROC		; CGraphPartRegion::CGraphPartRegion, COMDAT
; _this$ = ecx

; 39   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 37   : 	m_full(full),

  00003	8b 45 08	 mov	 eax, DWORD PTR _full$[ebp]
  00006	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 38   : 	m_unmixed(unmixed)

  00009	8b 45 0c	 mov	 eax, DWORD PTR _unmixed$[ebp]
  0000c	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  0000f	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 40   : }

  00012	8b c1		 mov	 eax, ecx
  00014	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0
  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
??0CGraphPartRegion@@QAE@ABVCRect@@0@Z ENDP		; CGraphPartRegion::CGraphPartRegion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ??0CGraphPartRegion@@QAE@XZ
_TEXT	SEGMENT
??0CGraphPartRegion@@QAE@XZ PROC			; CGraphPartRegion::CGraphPartRegion, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 540  : 	left = l;

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 34   : }

  00006	8b c1		 mov	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 541  : 	top = t;

  00008	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 542  : 	right = r;

  0000f	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 543  : 	bottom = b;

  00016	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0

; 540  : 	left = l;

  0001d	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 541  : 	top = t;

  00024	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 542  : 	right = r;

  0002b	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0

; 543  : 	bottom = b;

  00032	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp

; 34   : }

  00039	c3		 ret	 0
??0CGraphPartRegion@@QAE@XZ ENDP			; CGraphPartRegion::CGraphPartRegion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ??4CGraphPartRegion@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_data$ = 8						; size = 4
??4CGraphPartRegion@@QAEAAV0@ABV0@@Z PROC		; CGraphPartRegion::operator=, COMDAT
; _this$ = ecx

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 21   : 	if(this == &data)

  00003	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  00006	3b c8		 cmp	 ecx, eax
  00008	74 0e		 je	 SHORT $LN8@operator

; 62   : 	return m_full;

  0000a	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 22   : 		return *this;
; 23   : 
; 24   : 	m_full = data.GetFull();

  0000d	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 25   : 	m_unmixed = data.GetUnmixed();

  00010	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]
  00014	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0
$LN8@operator:

; 26   : 
; 27   : 	return *this;
; 28   : }

  00018	8b c1		 mov	 eax, ecx
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
??4CGraphPartRegion@@QAEAAV0@ABV0@@Z ENDP		; CGraphPartRegion::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 315  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 316  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartAnalysisToolAddIn\Include_Analysis\BlockRegion.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
