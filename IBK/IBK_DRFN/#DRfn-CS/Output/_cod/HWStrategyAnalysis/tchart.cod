; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\HWStrategyAnalysis\tchart.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
PUBLIC	?_GetBaseClass@CTChart@@KGPAUCRuntimeClass@@XZ	; CTChart::_GetBaseClass
PUBLIC	?GetThisClass@CTChart@@SGPAUCRuntimeClass@@XZ	; CTChart::GetThisClass
PUBLIC	?GetRuntimeClass@CTChart@@UBEPAUCRuntimeClass@@XZ ; CTChart::GetRuntimeClass
PUBLIC	?CreateObject@CTChart@@SGPAVCObject@@XZ		; CTChart::CreateObject
PUBLIC	?Create@CTChart@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z ; CTChart::Create
PUBLIC	?GetAxis@CTChart@@QAE?AVCAxes@@XZ		; CTChart::GetAxis
PUBLIC	?GetClipPoints@CTChart@@QAEHXZ			; CTChart::GetClipPoints
PUBLIC	?SetClipPoints@CTChart@@QAEXH@Z			; CTChart::SetClipPoints
PUBLIC	?GetCursor@CTChart@@QAEFXZ			; CTChart::GetCursor
PUBLIC	?SetCursor@CTChart@@QAEXF@Z			; CTChart::SetCursor
PUBLIC	?GetDragCursor@CTChart@@QAEFXZ			; CTChart::GetDragCursor
PUBLIC	?SetDragCursor@CTChart@@QAEXF@Z			; CTChart::SetDragCursor
PUBLIC	?GetDragMode@CTChart@@QAEJXZ			; CTChart::GetDragMode
PUBLIC	?SetDragMode@CTChart@@QAEXJ@Z			; CTChart::SetDragMode
PUBLIC	?GetEnabled@CTChart@@QAEHXZ			; CTChart::GetEnabled
PUBLIC	?SetEnabled@CTChart@@QAEXH@Z			; CTChart::SetEnabled
PUBLIC	?GetHeight@CTChart@@QAEJXZ			; CTChart::GetHeight
PUBLIC	?SetHeight@CTChart@@QAEXJ@Z			; CTChart::SetHeight
PUBLIC	?GetLeft@CTChart@@QAEJXZ			; CTChart::GetLeft
PUBLIC	?SetLeft@CTChart@@QAEXJ@Z			; CTChart::SetLeft
PUBLIC	?GetSeriesCount@CTChart@@QAEJXZ			; CTChart::GetSeriesCount
PUBLIC	?GetTop@CTChart@@QAEJXZ				; CTChart::GetTop
PUBLIC	?SetTop@CTChart@@QAEXJ@Z			; CTChart::SetTop
PUBLIC	?GetVisible@CTChart@@QAEHXZ			; CTChart::GetVisible
PUBLIC	?SetVisible@CTChart@@QAEXH@Z			; CTChart::SetVisible
PUBLIC	?GetWidth@CTChart@@QAEJXZ			; CTChart::GetWidth
PUBLIC	?SetWidth@CTChart@@QAEXJ@Z			; CTChart::SetWidth
PUBLIC	?AboutBox@CTChart@@QAEXXZ			; CTChart::AboutBox
PUBLIC	?AddSeries@CTChart@@QAEJJ@Z			; CTChart::AddSeries
PUBLIC	?ChangeSeriesType@CTChart@@QAEXJJ@Z		; CTChart::ChangeSeriesType
PUBLIC	?CloneSeries@CTChart@@QAEJJ@Z			; CTChart::CloneSeries
PUBLIC	?Draw@CTChart@@QAEXJJJJJ@Z			; CTChart::Draw
PUBLIC	?ExchangeSeries@CTChart@@QAEXJJ@Z		; CTChart::ExchangeSeries
PUBLIC	?GetDateTimeStep@CTChart@@QAENJ@Z		; CTChart::GetDateTimeStep
PUBLIC	?GetFreeSeriesColor@CTChart@@QAEKH@Z		; CTChart::GetFreeSeriesColor
PUBLIC	?GetLabelsSeries@CTChart@@QAE?AVCSeries@@J@Z	; CTChart::GetLabelsSeries
PUBLIC	?IsFreeSeriesColor@CTChart@@QAEHKH@Z		; CTChart::IsFreeSeriesColor
PUBLIC	?RemoveAllSeries@CTChart@@QAEXXZ		; CTChart::RemoveAllSeries
PUBLIC	?RemoveSeries@CTChart@@QAEXJ@Z			; CTChart::RemoveSeries
PUBLIC	?Repaint@CTChart@@QAEXXZ			; CTChart::Repaint
PUBLIC	?SeriesTitleLegend@CTChart@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z ; CTChart::SeriesTitleLegend
PUBLIC	?ShowEditor@CTChart@@QAEXJ@Z			; CTChart::ShowEditor
PUBLIC	?StopMouse@CTChart@@QAEXXZ			; CTChart::StopMouse
PUBLIC	?GetTimerEnabled@CTChart@@QAEHXZ		; CTChart::GetTimerEnabled
PUBLIC	?SetTimerEnabled@CTChart@@QAEXH@Z		; CTChart::SetTimerEnabled
PUBLIC	?GetTimerInterval@CTChart@@QAEJXZ		; CTChart::GetTimerInterval
PUBLIC	?SetTimerInterval@CTChart@@QAEXJ@Z		; CTChart::SetTimerInterval
PUBLIC	?GetAutoRepaint@CTChart@@QAEHXZ			; CTChart::GetAutoRepaint
PUBLIC	?SetAutoRepaint@CTChart@@QAEXH@Z		; CTChart::SetAutoRepaint
PUBLIC	?EditOneSeries@CTChart@@QAEXJ@Z			; CTChart::EditOneSeries
PUBLIC	?GetChartLink@CTChart@@QAEJXZ			; CTChart::GetChartLink
PUBLIC	?ChartRect@CTChart@@QAEXJJJJ@Z			; CTChart::ChartRect
PUBLIC	?ClearChart@CTChart@@QAEXXZ			; CTChart::ClearChart
PUBLIC	?RefreshData@CTChart@@QAEXXZ			; CTChart::RefreshData
PUBLIC	?Series@CTChart@@QAE?AVCSeries@@J@Z		; CTChart::Series
PUBLIC	?ShowThemesEditor@CTChart@@QAEXXZ		; CTChart::ShowThemesEditor
PUBLIC	?SetTheme@CTChart@@QAEXJJ@Z			; CTChart::SetTheme
PUBLIC	?ApplyPalette@CTChart@@QAEXJ@Z			; CTChart::ApplyPalette
PUBLIC	?ApplyCustomPalette@CTChart@@QAEXABUtagVARIANT@@@Z ; CTChart::ApplyCustomPalette
PUBLIC	??_GCTChart@@UAEPAXI@Z				; CTChart::`scalar deleting destructor'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R3CWnd@@8					; CWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWnd@@8					; CWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R3CCmdTarget@@8				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCmdTarget@@8				; CCmdTarget::`RTTI Base Class Array'
PUBLIC	?classCTChart@CTChart@@2UCRuntimeClass@@B	; CTChart::classCTChart
PUBLIC	??_7CTChart@@6B@				; CTChart::`vftable'
PUBLIC	?clsid@?1??GetClsid@CTChart@@QAEABU_GUID@@XZ@4U3@B ; `CTChart::GetClsid'::`2'::clsid
PUBLIC	??_C@_07FFGHPMNI@CTChart@			; `string'
PUBLIC	??_R4CTChart@@6B@				; CTChart::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTChart@@@8				; CTChart `RTTI Type Descriptor'
PUBLIC	??_R3CTChart@@8					; CTChart::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTChart@@8					; CTChart::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTChart@@8			; CTChart::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	___std_terminate:PROC
EXTRN	__imp__EnableWindow@8:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:PROC ; CCmdTarget::OnCmdMsg
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:PROC	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:PROC ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:PROC	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:PROC ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:PROC ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:PROC ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:PROC ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:PROC ; CCmdTarget::GetConnectionMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:PROC ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:PROC	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:PROC ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:PROC ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:PROC ; CCmdTarget::GetConnectionHook
EXTRN	?GetThisClass@CWnd@@SGPAUCRuntimeClass@@XZ:PROC	; CWnd::GetThisClass
EXTRN	??0CWnd@@QAE@XZ:PROC				; CWnd::CWnd
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:PROC		; CWnd::PreSubclassWindow
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:PROC ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:PROC ; CWnd::CreateEx
EXTRN	?CreateControl@CWnd@@QAEHABU_GUID@@PBDKABUtagRECT@@PAV1@IPAVCFile@@HPA_W@Z:PROC ; CWnd::CreateControl
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:PROC		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:PROC ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:PROC	; CWnd::CalcWindowRect
EXTRN	?GetMenu@CWnd@@UBEPAVCMenu@@XZ:PROC		; CWnd::GetMenu
EXTRN	?SetMenu@CWnd@@UAEHPAVCMenu@@@Z:PROC		; CWnd::SetMenu
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:PROC ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:PROC ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:PROC		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:PROC		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:PROC		; CWnd::EndModalLoop
EXTRN	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ:PROC	; CWnd::InvokeHelper
EXTRN	?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z:PROC ; CWnd::OnDrawIconicThumbnailOrLivePreview
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:PROC ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:PROC			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:PROC ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:PROC		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:PROC ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDescription
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:PROC ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDefaultAction
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:PROC	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:PROC ; CWnd::accLocation
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:PROC	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:PROC ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:PROC ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:PROC	; CWnd::CreateAccessibleProxy
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:PROC			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:PROC		; CWnd::OnNotify
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:PROC ; CWnd::GetSuperWndProcAddr
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:PROC ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:PROC ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:PROC		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:PROC		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:PROC		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnChildNotify
EXTRN	?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInputs
EXTRN	?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInput
EXTRN	?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z:PROC	; CWnd::GetGestureStatus
EXTRN	?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z:PROC	; CWnd::OnGestureZoom
EXTRN	?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z:PROC	; CWnd::OnGesturePan
EXTRN	?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z:PROC	; CWnd::OnGestureRotate
EXTRN	?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z:PROC ; CWnd::OnGestureTwoFingerTap
EXTRN	?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z:PROC ; CWnd::OnGesturePressAndTap
EXTRN	?ResizeDynamicLayout@CWnd@@MAEXXZ:PROC		; CWnd::ResizeDynamicLayout
EXTRN	??1CWnd@@UAE@XZ:PROC				; CWnd::~CWnd
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:PROC		; CWnd::CheckAutoCenter
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:PROC			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:PROC		; CWnd::OnFinalRelease
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:PROC ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:PROC ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:PROC ; CWnd::SetOccDialogInfo
EXTRN	?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ:PROC ; CWnd::GetOccDialogInfo
EXTRN	?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ:PROC	; CWnd::GetMessageMap
EXTRN	??0COleDispatchDriver@@QAE@PAUIDispatch@@H@Z:PROC ; COleDispatchDriver::COleDispatchDriver
EXTRN	?ReleaseDispatch@COleDispatchDriver@@QAEXXZ:PROC ; COleDispatchDriver::ReleaseDispatch
EXTRN	??_ECTChart@@UAEPAXI@Z:PROC			; CTChart::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ??_R1A@?0A@EA@CTChart@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTChart@@8 DD FLAT:??_R0?AVCTChart@@@8	; CTChart::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTChart@@8
rdata$r	ENDS
;	COMDAT ??_R2CTChart@@8
rdata$r	SEGMENT
??_R2CTChart@@8 DD FLAT:??_R1A@?0A@EA@CTChart@@8	; CTChart::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CTChart@@8
rdata$r	SEGMENT
??_R3CTChart@@8 DD 00H					; CTChart::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CTChart@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTChart@@@8
data$rs	SEGMENT
??_R0?AVCTChart@@@8 DD FLAT:??_7type_info@@6B@		; CTChart `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTChart@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CTChart@@6B@
rdata$r	SEGMENT
??_R4CTChart@@6B@ DD 00H				; CTChart::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTChart@@@8
	DD	FLAT:??_R3CTChart@@8
rdata$r	ENDS
;	COMDAT ?parms@?1??ApplyCustomPalette@CTChart@@QAEXABUtagVARIANT@@@Z@4PAEA
_DATA	SEGMENT
?parms@?1??ApplyCustomPalette@CTChart@@QAEXABUtagVARIANT@@@Z@4PAEA DB 0cH
	DB	00H						; `CTChart::ApplyCustomPalette'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??ApplyPalette@CTChart@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??ApplyPalette@CTChart@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CTChart::ApplyPalette'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetTheme@CTChart@@QAEXJJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetTheme@CTChart@@QAEXJJ@Z@4PAEA DB 03H, 03H, 00H ; `CTChart::SetTheme'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??Series@CTChart@@QAE?AVCSeries@@J@Z@4PAEA
_DATA	SEGMENT
?parms@?1??Series@CTChart@@QAE?AVCSeries@@J@Z@4PAEA DB 03H, 00H ; `CTChart::Series'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??ChartRect@CTChart@@QAEXJJJJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??ChartRect@CTChart@@QAEXJJJJ@Z@4PAEA DB 03H, 03H, 03H, 03H, 00H ; `CTChart::ChartRect'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??EditOneSeries@CTChart@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??EditOneSeries@CTChart@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CTChart::EditOneSeries'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetAutoRepaint@CTChart@@QAEXH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetAutoRepaint@CTChart@@QAEXH@Z@4PAEA DB 0bH, 00H ; `CTChart::SetAutoRepaint'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetTimerInterval@CTChart@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetTimerInterval@CTChart@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CTChart::SetTimerInterval'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetTimerEnabled@CTChart@@QAEXH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetTimerEnabled@CTChart@@QAEXH@Z@4PAEA DB 0bH, 00H ; `CTChart::SetTimerEnabled'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??ShowEditor@CTChart@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??ShowEditor@CTChart@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CTChart::ShowEditor'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SeriesTitleLegend@CTChart@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SeriesTitleLegend@CTChart@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z@4PAEA DB 03H
	DB	00H						; `CTChart::SeriesTitleLegend'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??RemoveSeries@CTChart@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??RemoveSeries@CTChart@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CTChart::RemoveSeries'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??IsFreeSeriesColor@CTChart@@QAEHKH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??IsFreeSeriesColor@CTChart@@QAEHKH@Z@4PAEA DB 03H, 0bH, 00H ; `CTChart::IsFreeSeriesColor'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??GetLabelsSeries@CTChart@@QAE?AVCSeries@@J@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetLabelsSeries@CTChart@@QAE?AVCSeries@@J@Z@4PAEA DB 03H, 00H ; `CTChart::GetLabelsSeries'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??GetFreeSeriesColor@CTChart@@QAEKH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetFreeSeriesColor@CTChart@@QAEKH@Z@4PAEA DB 0bH, 00H ; `CTChart::GetFreeSeriesColor'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??GetDateTimeStep@CTChart@@QAENJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetDateTimeStep@CTChart@@QAENJ@Z@4PAEA DB 03H, 00H ; `CTChart::GetDateTimeStep'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??ExchangeSeries@CTChart@@QAEXJJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??ExchangeSeries@CTChart@@QAEXJJ@Z@4PAEA DB 03H, 03H, 00H ; `CTChart::ExchangeSeries'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??Draw@CTChart@@QAEXJJJJJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??Draw@CTChart@@QAEXJJJJJ@Z@4PAEA DB 03H, 03H, 03H, 03H, 03H, 00H ; `CTChart::Draw'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??CloneSeries@CTChart@@QAEJJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??CloneSeries@CTChart@@QAEJJ@Z@4PAEA DB 03H, 00H ; `CTChart::CloneSeries'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??ChangeSeriesType@CTChart@@QAEXJJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??ChangeSeriesType@CTChart@@QAEXJJ@Z@4PAEA DB 03H, 03H, 00H ; `CTChart::ChangeSeriesType'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??AddSeries@CTChart@@QAEJJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??AddSeries@CTChart@@QAEJJ@Z@4PAEA DB 03H, 00H	; `CTChart::AddSeries'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetWidth@CTChart@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetWidth@CTChart@@QAEXJ@Z@4PAEA DB 03H, 00H	; `CTChart::SetWidth'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetVisible@CTChart@@QAEXH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetVisible@CTChart@@QAEXH@Z@4PAEA DB 0bH, 00H ; `CTChart::SetVisible'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetTop@CTChart@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetTop@CTChart@@QAEXJ@Z@4PAEA DB 03H, 00H	; `CTChart::SetTop'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetLeft@CTChart@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetLeft@CTChart@@QAEXJ@Z@4PAEA DB 03H, 00H	; `CTChart::SetLeft'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetHeight@CTChart@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetHeight@CTChart@@QAEXJ@Z@4PAEA DB 03H, 00H	; `CTChart::SetHeight'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetEnabled@CTChart@@QAEXH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetEnabled@CTChart@@QAEXH@Z@4PAEA DB 0bH, 00H ; `CTChart::SetEnabled'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetDragMode@CTChart@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetDragMode@CTChart@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CTChart::SetDragMode'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetDragCursor@CTChart@@QAEXF@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetDragCursor@CTChart@@QAEXF@Z@4PAEA DB 02H, 00H ; `CTChart::SetDragCursor'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetCursor@CTChart@@QAEXF@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetCursor@CTChart@@QAEXF@Z@4PAEA DB 02H, 00H	; `CTChart::SetCursor'::`2'::parms
_DATA	ENDS
;	COMDAT ?parms@?1??SetClipPoints@CTChart@@QAEXH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetClipPoints@CTChart@@QAEXH@Z@4PAEA DB 0bH, 00H ; `CTChart::SetClipPoints'::`2'::parms
_DATA	ENDS
;	COMDAT ??_C@_07FFGHPMNI@CTChart@
CONST	SEGMENT
??_C@_07FFGHPMNI@CTChart@ DB 'CTChart', 00H		; `string'
CONST	ENDS
;	COMDAT ?clsid@?1??GetClsid@CTChart@@QAEABU_GUID@@XZ@4U3@B
CONST	SEGMENT
?clsid@?1??GetClsid@CTChart@@QAEABU_GUID@@XZ@4U3@B DD 0fab9b41cH ; `CTChart::GetClsid'::`2'::clsid
	DW	087d6H
	DW	0474dH
	DB	0abH
	DB	07eH
	DB	0f0H
	DB	07dH
	DB	078H
	DB	0f2H
	DB	042H
	DB	02eH
CONST	ENDS
;	COMDAT ??_7CTChart@@6B@
CONST	SEGMENT
??_7CTChart@@6B@ DD FLAT:??_R4CTChart@@6B@		; CTChart::`vftable'
	DD	FLAT:?GetRuntimeClass@CTChart@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECTChart@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CTChart@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
CONST	ENDS
;	COMDAT ?classCTChart@CTChart@@2UCRuntimeClass@@B
CONST	SEGMENT
?classCTChart@CTChart@@2UCRuntimeClass@@B DD FLAT:??_C@_07FFGHPMNI@CTChart@ ; CTChart::classCTChart
	DD	080H
	DD	0ffffH
	DD	FLAT:?CreateObject@CTChart@@SGPAVCObject@@XZ
	DD	FLAT:?_GetBaseClass@CTChart@@KGPAUCRuntimeClass@@XZ
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_R2CCmdTarget@@8
rdata$r	SEGMENT
??_R2CCmdTarget@@8 DD FLAT:??_R1A@?0A@EA@CCmdTarget@@8	; CCmdTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CCmdTarget@@8
rdata$r	SEGMENT
??_R3CCmdTarget@@8 DD 00H				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
data$rs	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R2CWnd@@8
rdata$r	SEGMENT
??_R2CWnd@@8 DD	FLAT:??_R1A@?0A@EA@CWnd@@8		; CWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWnd@@8
rdata$r	SEGMENT
??_R3CWnd@@8 DD	00H					; CWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
data$rs	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$rs	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$rs	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SeriesTitleLegend@CTChart@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SeriesTitleLegend@CTChart@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z$0
__ehfuncinfo$?SeriesTitleLegend@CTChart@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SeriesTitleLegend@CTChart@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateObject@CTChart@@SGPAVCObject@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateObject@CTChart@@SGPAVCObject@@XZ$0
__ehfuncinfo$?CreateObject@CTChart@@SGPAVCObject@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateObject@CTChart@@SGPAVCObject@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CAxes@@QAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1CAxes@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CAxes@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CSeries@@QAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1CSeries@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CSeries@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1COleDispatchDriver@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCTChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTChart@@UAEPAXI@Z PROC				; CTChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
  0000b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0000e	a8 01		 test	 al, 1
  00010	74 22		 je	 SHORT $LN12@scalar
  00012	a8 04		 test	 al, 4
  00014	75 10		 jne	 SHORT $LN3@scalar

; 112  : 	{ ::operator delete(p); }

  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001c	83 c4 04	 add	 esp, 4
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
$LN3@scalar:
  00026	68 80 00 00 00	 push	 128			; 00000080H
  0002b	56		 push	 esi
  0002c	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00031	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00034	8b c6		 mov	 eax, esi
  00036	5e		 pop	 esi
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
??_GCTChart@@UAEPAXI@Z ENDP				; CTChart::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?ApplyCustomPalette@CTChart@@QAEXABUtagVARIANT@@@Z
_TEXT	SEGMENT
_colorArray$ = 8					; size = 4
?ApplyCustomPalette@CTChart@@QAEXABUtagVARIANT@@@Z PROC	; CTChart::ApplyCustomPalette, COMDAT
; _this$ = ecx

; 579  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 580  : 	static BYTE parms[] =
; 581  : 		VTS_VARIANT;
; 582  : 	InvokeHelper(0xcc, DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _colorArray$[ebp]
  00006	68 00 00 00 00	 push	 OFFSET ?parms@?1??ApplyCustomPalette@CTChart@@QAEXABUtagVARIANT@@@Z@4PAEA
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 01		 push	 1
  00011	68 cc 00 00 00	 push	 204			; 000000ccH
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0001c	83 c4 1c	 add	 esp, 28			; 0000001cH

; 583  : 		 &colorArray);
; 584  : }

  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
?ApplyCustomPalette@CTChart@@QAEXABUtagVARIANT@@@Z ENDP	; CTChart::ApplyCustomPalette
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?ApplyPalette@CTChart@@QAEXJ@Z
_TEXT	SEGMENT
_paletteIndex$ = 8					; size = 4
?ApplyPalette@CTChart@@QAEXJ@Z PROC			; CTChart::ApplyPalette, COMDAT
; _this$ = ecx

; 571  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 572  : 	static BYTE parms[] =
; 573  : 		VTS_I4;
; 574  : 	InvokeHelper(0xcb, DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _paletteIndex$[ebp]
  00006	68 00 00 00 00	 push	 OFFSET ?parms@?1??ApplyPalette@CTChart@@QAEXJ@Z@4PAEA
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 01		 push	 1
  00011	68 cb 00 00 00	 push	 203			; 000000cbH
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0001c	83 c4 1c	 add	 esp, 28			; 0000001cH

; 575  : 		 paletteIndex);
; 576  : }

  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
?ApplyPalette@CTChart@@QAEXJ@Z ENDP			; CTChart::ApplyPalette
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?SetTheme@CTChart@@QAEXJJ@Z
_TEXT	SEGMENT
_aTheme$ = 8						; size = 4
_aPalette$ = 12						; size = 4
?SetTheme@CTChart@@QAEXJJ@Z PROC			; CTChart::SetTheme, COMDAT
; _this$ = ecx

; 563  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 564  : 	static BYTE parms[] =
; 565  : 		VTS_I4 VTS_I4;
; 566  : 	InvokeHelper(0xca, DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 0c	 push	 DWORD PTR _aPalette$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _aTheme$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetTheme@CTChart@@QAEXJJ@Z@4PAEA
  0000e	6a 00		 push	 0
  00010	6a 00		 push	 0
  00012	6a 01		 push	 1
  00014	68 ca 00 00 00	 push	 202			; 000000caH
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0001f	83 c4 20	 add	 esp, 32			; 00000020H

; 567  : 		 aTheme, aPalette);
; 568  : }

  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
?SetTheme@CTChart@@QAEXJJ@Z ENDP			; CTChart::SetTheme
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?ShowThemesEditor@CTChart@@QAEXXZ
_TEXT	SEGMENT
?ShowThemesEditor@CTChart@@QAEXXZ PROC			; CTChart::ShowThemesEditor, COMDAT
; _this$ = ecx

; 559  : 	InvokeHelper(0xc9, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  00000	6a 00		 push	 0
  00002	6a 00		 push	 0
  00004	6a 00		 push	 0
  00006	6a 01		 push	 1
  00008	68 c9 00 00 00	 push	 201			; 000000c9H
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00013	83 c4 18	 add	 esp, 24			; 00000018H

; 560  : }

  00016	c3		 ret	 0
?ShowThemesEditor@CTChart@@QAEXXZ ENDP			; CTChart::ShowThemesEditor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\series.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\series.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?Series@CTChart@@QAE?AVCSeries@@J@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_pDispatch$ = 12					; size = 4
_SeriesIndex$ = 12					; size = 4
?Series@CTChart@@QAE?AVCSeries@@J@Z PROC		; CTChart::Series, COMDAT
; _this$ = ecx

; 548  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 552  : 	InvokeHelper(0x38, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,

  00003	ff 75 0c	 push	 DWORD PTR _SeriesIndex$[ebp]
  00006	8d 45 0c	 lea	 eax, DWORD PTR _pDispatch$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??Series@CTChart@@QAE?AVCSeries@@J@Z@4PAEA
  0000e	50		 push	 eax
  0000f	6a 09		 push	 9
  00011	6a 01		 push	 1
  00013	6a 38		 push	 56			; 00000038H
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\series.h

; 22   : 	CSeries(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}

  0001b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp

; 552  : 	InvokeHelper(0x38, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,

  0001e	83 c4 1c	 add	 esp, 28			; 0000001cH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\series.h

; 22   : 	CSeries(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}

  00021	6a 01		 push	 1
  00023	ff 75 0c	 push	 DWORD PTR _pDispatch$[ebp]
  00026	e8 00 00 00 00	 call	 ??0COleDispatchDriver@@QAE@PAUIDispatch@@H@Z ; COleDispatchDriver::COleDispatchDriver
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp

; 554  : 	return CSeries(pDispatch);

  0002b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 555  : }

  0002e	5d		 pop	 ebp
  0002f	c2 08 00	 ret	 8
?Series@CTChart@@QAE?AVCSeries@@J@Z ENDP		; CTChart::Series
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?RefreshData@CTChart@@QAEXXZ
_TEXT	SEGMENT
?RefreshData@CTChart@@QAEXXZ PROC			; CTChart::RefreshData, COMDAT
; _this$ = ecx

; 544  : 	InvokeHelper(0x36, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  00000	6a 00		 push	 0
  00002	6a 00		 push	 0
  00004	6a 00		 push	 0
  00006	6a 01		 push	 1
  00008	6a 36		 push	 54			; 00000036H
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00010	83 c4 18	 add	 esp, 24			; 00000018H

; 545  : }

  00013	c3		 ret	 0
?RefreshData@CTChart@@QAEXXZ ENDP			; CTChart::RefreshData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?ClearChart@CTChart@@QAEXXZ
_TEXT	SEGMENT
?ClearChart@CTChart@@QAEXXZ PROC			; CTChart::ClearChart, COMDAT
; _this$ = ecx

; 539  : 	InvokeHelper(0x37, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  00000	6a 00		 push	 0
  00002	6a 00		 push	 0
  00004	6a 00		 push	 0
  00006	6a 01		 push	 1
  00008	6a 37		 push	 55			; 00000037H
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00010	83 c4 18	 add	 esp, 24			; 00000018H

; 540  : }

  00013	c3		 ret	 0
?ClearChart@CTChart@@QAEXXZ ENDP			; CTChart::ClearChart
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?ChartRect@CTChart@@QAEXJJJJ@Z
_TEXT	SEGMENT
_Left$ = 8						; size = 4
_Top$ = 12						; size = 4
_Right$ = 16						; size = 4
_Bottom$ = 20						; size = 4
?ChartRect@CTChart@@QAEXJJJJ@Z PROC			; CTChart::ChartRect, COMDAT
; _this$ = ecx

; 509  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 510  : 	static BYTE parms[] =
; 511  : 		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
; 512  : 	InvokeHelper(0x32, DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 14	 push	 DWORD PTR _Bottom$[ebp]
  00006	ff 75 10	 push	 DWORD PTR _Right$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR _Top$[ebp]
  0000c	ff 75 08	 push	 DWORD PTR _Left$[ebp]
  0000f	68 00 00 00 00	 push	 OFFSET ?parms@?1??ChartRect@CTChart@@QAEXJJJJ@Z@4PAEA
  00014	6a 00		 push	 0
  00016	6a 00		 push	 0
  00018	6a 01		 push	 1
  0001a	6a 32		 push	 50			; 00000032H
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00022	83 c4 28	 add	 esp, 40			; 00000028H

; 513  : 		 Left, Top, Right, Bottom);
; 514  : }

  00025	5d		 pop	 ebp
  00026	c2 10 00	 ret	 16			; 00000010H
?ChartRect@CTChart@@QAEXJJJJ@Z ENDP			; CTChart::ChartRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetChartLink@CTChart@@QAEJXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?GetChartLink@CTChart@@QAEJXZ PROC			; CTChart::GetChartLink, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 496  : 	long result;
; 497  : 	InvokeHelper(0x30, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00009	50		 push	 eax
  0000a	6a 03		 push	 3
  0000c	6a 02		 push	 2
  0000e	6a 30		 push	 48			; 00000030H
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper

; 498  : 	return result;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]
  00019	83 c4 18	 add	 esp, 24			; 00000018H

; 499  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?GetChartLink@CTChart@@QAEJXZ ENDP			; CTChart::GetChartLink
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?EditOneSeries@CTChart@@QAEXJ@Z
_TEXT	SEGMENT
_SeriesIndex$ = 8					; size = 4
?EditOneSeries@CTChart@@QAEXJ@Z PROC			; CTChart::EditOneSeries, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	static BYTE parms[] =
; 482  : 		VTS_I4;
; 483  : 	InvokeHelper(0x2e, DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _SeriesIndex$[ebp]
  00006	68 00 00 00 00	 push	 OFFSET ?parms@?1??EditOneSeries@CTChart@@QAEXJ@Z@4PAEA
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 01		 push	 1
  00011	6a 2e		 push	 46			; 0000002eH
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00019	83 c4 1c	 add	 esp, 28			; 0000001cH

; 484  : 		 SeriesIndex);
; 485  : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?EditOneSeries@CTChart@@QAEXJ@Z ENDP			; CTChart::EditOneSeries
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?SetAutoRepaint@CTChart@@QAEXH@Z
_TEXT	SEGMENT
_bNewValue$ = 8						; size = 4
?SetAutoRepaint@CTChart@@QAEXH@Z PROC			; CTChart::SetAutoRepaint, COMDAT
; _this$ = ecx

; 472  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 473  : 	static BYTE parms[] =
; 474  : 		VTS_BOOL;
; 475  : 	InvokeHelper(0x2d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _bNewValue$[ebp]
  00006	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetAutoRepaint@CTChart@@QAEXH@Z@4PAEA
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 04		 push	 4
  00011	6a 2d		 push	 45			; 0000002dH
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00019	83 c4 1c	 add	 esp, 28			; 0000001cH

; 476  : 		 bNewValue);
; 477  : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetAutoRepaint@CTChart@@QAEXH@Z ENDP			; CTChart::SetAutoRepaint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetAutoRepaint@CTChart@@QAEHXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?GetAutoRepaint@CTChart@@QAEHXZ PROC			; CTChart::GetAutoRepaint, COMDAT
; _this$ = ecx

; 465  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 466  : 	BOOL result;
; 467  : 	InvokeHelper(0x2d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00009	50		 push	 eax
  0000a	6a 0b		 push	 11			; 0000000bH
  0000c	6a 02		 push	 2
  0000e	6a 2d		 push	 45			; 0000002dH
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper

; 468  : 	return result;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]
  00019	83 c4 18	 add	 esp, 24			; 00000018H

; 469  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?GetAutoRepaint@CTChart@@QAEHXZ ENDP			; CTChart::GetAutoRepaint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?SetTimerInterval@CTChart@@QAEXJ@Z
_TEXT	SEGMENT
_nNewValue$ = 8						; size = 4
?SetTimerInterval@CTChart@@QAEXJ@Z PROC			; CTChart::SetTimerInterval, COMDAT
; _this$ = ecx

; 457  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 458  : 	static BYTE parms[] =
; 459  : 		VTS_I4;
; 460  : 	InvokeHelper(0x2c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _nNewValue$[ebp]
  00006	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetTimerInterval@CTChart@@QAEXJ@Z@4PAEA
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 04		 push	 4
  00011	6a 2c		 push	 44			; 0000002cH
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00019	83 c4 1c	 add	 esp, 28			; 0000001cH

; 461  : 		 nNewValue);
; 462  : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetTimerInterval@CTChart@@QAEXJ@Z ENDP			; CTChart::SetTimerInterval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetTimerInterval@CTChart@@QAEJXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?GetTimerInterval@CTChart@@QAEJXZ PROC			; CTChart::GetTimerInterval, COMDAT
; _this$ = ecx

; 450  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 451  : 	long result;
; 452  : 	InvokeHelper(0x2c, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00009	50		 push	 eax
  0000a	6a 03		 push	 3
  0000c	6a 02		 push	 2
  0000e	6a 2c		 push	 44			; 0000002cH
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper

; 453  : 	return result;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]
  00019	83 c4 18	 add	 esp, 24			; 00000018H

; 454  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?GetTimerInterval@CTChart@@QAEJXZ ENDP			; CTChart::GetTimerInterval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?SetTimerEnabled@CTChart@@QAEXH@Z
_TEXT	SEGMENT
_bNewValue$ = 8						; size = 4
?SetTimerEnabled@CTChart@@QAEXH@Z PROC			; CTChart::SetTimerEnabled, COMDAT
; _this$ = ecx

; 442  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 443  : 	static BYTE parms[] =
; 444  : 		VTS_BOOL;
; 445  : 	InvokeHelper(0x2b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _bNewValue$[ebp]
  00006	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetTimerEnabled@CTChart@@QAEXH@Z@4PAEA
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 04		 push	 4
  00011	6a 2b		 push	 43			; 0000002bH
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00019	83 c4 1c	 add	 esp, 28			; 0000001cH

; 446  : 		 bNewValue);
; 447  : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetTimerEnabled@CTChart@@QAEXH@Z ENDP			; CTChart::SetTimerEnabled
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetTimerEnabled@CTChart@@QAEHXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?GetTimerEnabled@CTChart@@QAEHXZ PROC			; CTChart::GetTimerEnabled, COMDAT
; _this$ = ecx

; 435  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 436  : 	BOOL result;
; 437  : 	InvokeHelper(0x2b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00009	50		 push	 eax
  0000a	6a 0b		 push	 11			; 0000000bH
  0000c	6a 02		 push	 2
  0000e	6a 2b		 push	 43			; 0000002bH
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper

; 438  : 	return result;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]
  00019	83 c4 18	 add	 esp, 24			; 00000018H

; 439  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?GetTimerEnabled@CTChart@@QAEHXZ ENDP			; CTChart::GetTimerEnabled
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?StopMouse@CTChart@@QAEXXZ
_TEXT	SEGMENT
?StopMouse@CTChart@@QAEXXZ PROC				; CTChart::StopMouse, COMDAT
; _this$ = ecx

; 431  : 	InvokeHelper(0x2a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  00000	6a 00		 push	 0
  00002	6a 00		 push	 0
  00004	6a 00		 push	 0
  00006	6a 01		 push	 1
  00008	6a 2a		 push	 42			; 0000002aH
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00010	83 c4 18	 add	 esp, 24			; 00000018H

; 432  : }

  00013	c3		 ret	 0
?StopMouse@CTChart@@QAEXXZ ENDP				; CTChart::StopMouse
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?ShowEditor@CTChart@@QAEXJ@Z
_TEXT	SEGMENT
_SeriesIndex$ = 8					; size = 4
?ShowEditor@CTChart@@QAEXJ@Z PROC			; CTChart::ShowEditor, COMDAT
; _this$ = ecx

; 422  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 423  : 	static BYTE parms[] =
; 424  : 		VTS_I4;
; 425  : 	InvokeHelper(0x29, DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _SeriesIndex$[ebp]
  00006	68 00 00 00 00	 push	 OFFSET ?parms@?1??ShowEditor@CTChart@@QAEXJ@Z@4PAEA
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 01		 push	 1
  00011	6a 29		 push	 41			; 00000029H
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00019	83 c4 1c	 add	 esp, 28			; 0000001cH

; 426  : 		 SeriesIndex);
; 427  : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?ShowEditor@CTChart@@QAEXJ@Z ENDP			; CTChart::ShowEditor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?SeriesTitleLegend@CTChart@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_ASeriesIndex$ = 12					; size = 4
?SeriesTitleLegend@CTChart@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z PROC ; CTChart::SeriesTitleLegend, COMDAT
; _this$ = ecx

; 412  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SeriesTitleLegend@CTChart@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 413  : 	CString result;

  0002e	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00031	8b cf		 mov	 ecx, edi
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 414  : 	static BYTE parms[] =
; 415  : 		VTS_I4;
; 416  : 	InvokeHelper(0x28, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
; 417  : 		ASeriesIndex);
; 418  : 	return result;

  00039	ff 75 0c	 push	 DWORD PTR _ASeriesIndex$[ebp]
  0003c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00043	68 00 00 00 00	 push	 OFFSET ?parms@?1??SeriesTitleLegend@CTChart@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z@4PAEA
  00048	57		 push	 edi
  00049	6a 08		 push	 8
  0004b	6a 01		 push	 1
  0004d	6a 28		 push	 40			; 00000028H
  0004f	56		 push	 esi
  00050	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T2[ebp], 1
  00057	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0005c	83 c4 1c	 add	 esp, 28			; 0000001cH
  0005f	8b c7		 mov	 eax, edi

; 419  : }

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SeriesTitleLegend@CTChart@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0d 00 00
	00		 je	 $LN4@SeriesTitl
  0000c	83 65 f0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00010	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00013	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN4@SeriesTitl:
  00019	c3		 ret	 0
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?SeriesTitleLegend@CTChart@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SeriesTitleLegend@CTChart@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SeriesTitleLegend@CTChart@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@J@Z ENDP ; CTChart::SeriesTitleLegend
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?Repaint@CTChart@@QAEXXZ
_TEXT	SEGMENT
?Repaint@CTChart@@QAEXXZ PROC				; CTChart::Repaint, COMDAT
; _this$ = ecx

; 408  : 	InvokeHelper(0x27, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  00000	6a 00		 push	 0
  00002	6a 00		 push	 0
  00004	6a 00		 push	 0
  00006	6a 01		 push	 1
  00008	6a 27		 push	 39			; 00000027H
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00010	83 c4 18	 add	 esp, 24			; 00000018H

; 409  : }

  00013	c3		 ret	 0
?Repaint@CTChart@@QAEXXZ ENDP				; CTChart::Repaint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?RemoveSeries@CTChart@@QAEXJ@Z
_TEXT	SEGMENT
_SeriesIndex$ = 8					; size = 4
?RemoveSeries@CTChart@@QAEXJ@Z PROC			; CTChart::RemoveSeries, COMDAT
; _this$ = ecx

; 399  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 400  : 	static BYTE parms[] =
; 401  : 		VTS_I4;
; 402  : 	InvokeHelper(0x26, DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _SeriesIndex$[ebp]
  00006	68 00 00 00 00	 push	 OFFSET ?parms@?1??RemoveSeries@CTChart@@QAEXJ@Z@4PAEA
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 01		 push	 1
  00011	6a 26		 push	 38			; 00000026H
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00019	83 c4 1c	 add	 esp, 28			; 0000001cH

; 403  : 		 SeriesIndex);
; 404  : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?RemoveSeries@CTChart@@QAEXJ@Z ENDP			; CTChart::RemoveSeries
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?RemoveAllSeries@CTChart@@QAEXXZ
_TEXT	SEGMENT
?RemoveAllSeries@CTChart@@QAEXXZ PROC			; CTChart::RemoveAllSeries, COMDAT
; _this$ = ecx

; 395  : 	InvokeHelper(0x25, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  00000	6a 00		 push	 0
  00002	6a 00		 push	 0
  00004	6a 00		 push	 0
  00006	6a 01		 push	 1
  00008	6a 25		 push	 37			; 00000025H
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00010	83 c4 18	 add	 esp, 24			; 00000018H

; 396  : }

  00013	c3		 ret	 0
?RemoveAllSeries@CTChart@@QAEXXZ ENDP			; CTChart::RemoveAllSeries
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?IsFreeSeriesColor@CTChart@@QAEHKH@Z
_TEXT	SEGMENT
_AColor$ = 8						; size = 4
_result$ = 12						; size = 4
_CheckBackgroundColor$ = 12				; size = 4
?IsFreeSeriesColor@CTChart@@QAEHKH@Z PROC		; CTChart::IsFreeSeriesColor, COMDAT
; _this$ = ecx

; 384  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 385  : 	BOOL result;
; 386  : 	static BYTE parms[] =
; 387  : 		VTS_I4 VTS_BOOL;
; 388  : 	InvokeHelper(0x24, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,

  00003	ff 75 0c	 push	 DWORD PTR _CheckBackgroundColor$[ebp]
  00006	8d 45 0c	 lea	 eax, DWORD PTR _result$[ebp]
  00009	ff 75 08	 push	 DWORD PTR _AColor$[ebp]
  0000c	68 00 00 00 00	 push	 OFFSET ?parms@?1??IsFreeSeriesColor@CTChart@@QAEHKH@Z@4PAEA
  00011	50		 push	 eax
  00012	6a 0b		 push	 11			; 0000000bH
  00014	6a 01		 push	 1
  00016	6a 24		 push	 36			; 00000024H
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper

; 389  : 		AColor, CheckBackgroundColor);
; 390  : 	return result;

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _result$[ebp]
  00021	83 c4 20	 add	 esp, 32			; 00000020H

; 391  : }

  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
?IsFreeSeriesColor@CTChart@@QAEHKH@Z ENDP		; CTChart::IsFreeSeriesColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\series.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\series.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetLabelsSeries@CTChart@@QAE?AVCSeries@@J@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_pDispatch$ = 12					; size = 4
_DestAxis$ = 12						; size = 4
?GetLabelsSeries@CTChart@@QAE?AVCSeries@@J@Z PROC	; CTChart::GetLabelsSeries, COMDAT
; _this$ = ecx

; 374  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 378  : 	InvokeHelper(0x23, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,

  00003	ff 75 0c	 push	 DWORD PTR _DestAxis$[ebp]
  00006	8d 45 0c	 lea	 eax, DWORD PTR _pDispatch$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??GetLabelsSeries@CTChart@@QAE?AVCSeries@@J@Z@4PAEA
  0000e	50		 push	 eax
  0000f	6a 09		 push	 9
  00011	6a 01		 push	 1
  00013	6a 23		 push	 35			; 00000023H
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\series.h

; 22   : 	CSeries(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}

  0001b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp

; 378  : 	InvokeHelper(0x23, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,

  0001e	83 c4 1c	 add	 esp, 28			; 0000001cH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\series.h

; 22   : 	CSeries(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}

  00021	6a 01		 push	 1
  00023	ff 75 0c	 push	 DWORD PTR _pDispatch$[ebp]
  00026	e8 00 00 00 00	 call	 ??0COleDispatchDriver@@QAE@PAUIDispatch@@H@Z ; COleDispatchDriver::COleDispatchDriver
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp

; 380  : 	return CSeries(pDispatch);

  0002b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 381  : }

  0002e	5d		 pop	 ebp
  0002f	c2 08 00	 ret	 8
?GetLabelsSeries@CTChart@@QAE?AVCSeries@@J@Z ENDP	; CTChart::GetLabelsSeries
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetFreeSeriesColor@CTChart@@QAEKH@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
_CheckBackgroundColor$ = 8				; size = 4
?GetFreeSeriesColor@CTChart@@QAEKH@Z PROC		; CTChart::GetFreeSeriesColor, COMDAT
; _this$ = ecx

; 364  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 365  : 	unsigned long result;
; 366  : 	static BYTE parms[] =
; 367  : 		VTS_BOOL;
; 368  : 	InvokeHelper(0x22, DISPATCH_METHOD, VT_I4, (void*)&result, parms,

  00003	ff 75 08	 push	 DWORD PTR _CheckBackgroundColor$[ebp]
  00006	8d 45 08	 lea	 eax, DWORD PTR _result$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??GetFreeSeriesColor@CTChart@@QAEKH@Z@4PAEA
  0000e	50		 push	 eax
  0000f	6a 03		 push	 3
  00011	6a 01		 push	 1
  00013	6a 22		 push	 34			; 00000022H
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper

; 369  : 		CheckBackgroundColor);
; 370  : 	return result;

  0001b	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  0001e	83 c4 1c	 add	 esp, 28			; 0000001cH

; 371  : }

  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?GetFreeSeriesColor@CTChart@@QAEKH@Z ENDP		; CTChart::GetFreeSeriesColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetDateTimeStep@CTChart@@QAENJ@Z
_TEXT	SEGMENT
_result$ = -8						; size = 8
_DateTimeStep$ = 8					; size = 4
?GetDateTimeStep@CTChart@@QAENJ@Z PROC			; CTChart::GetDateTimeStep, COMDAT
; _this$ = ecx

; 354  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 355  : 	double result;
; 356  : 	static BYTE parms[] =
; 357  : 		VTS_I4;
; 358  : 	InvokeHelper(0x21, DISPATCH_METHOD, VT_R8, (void*)&result, parms,

  00006	ff 75 08	 push	 DWORD PTR _DateTimeStep$[ebp]
  00009	8d 45 f8	 lea	 eax, DWORD PTR _result$[ebp]
  0000c	68 00 00 00 00	 push	 OFFSET ?parms@?1??GetDateTimeStep@CTChart@@QAENJ@Z@4PAEA
  00011	50		 push	 eax
  00012	6a 05		 push	 5
  00014	6a 01		 push	 1
  00016	6a 21		 push	 33			; 00000021H
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper

; 359  : 		DateTimeStep);
; 360  : 	return result;

  0001e	dd 45 f8	 fld	 QWORD PTR _result$[ebp]
  00021	83 c4 1c	 add	 esp, 28			; 0000001cH

; 361  : }

  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?GetDateTimeStep@CTChart@@QAENJ@Z ENDP			; CTChart::GetDateTimeStep
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?ExchangeSeries@CTChart@@QAEXJJ@Z
_TEXT	SEGMENT
_Series1$ = 8						; size = 4
_Series2$ = 12						; size = 4
?ExchangeSeries@CTChart@@QAEXJJ@Z PROC			; CTChart::ExchangeSeries, COMDAT
; _this$ = ecx

; 346  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 347  : 	static BYTE parms[] =
; 348  : 		VTS_I4 VTS_I4;
; 349  : 	InvokeHelper(0x20, DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 0c	 push	 DWORD PTR _Series2$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _Series1$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??ExchangeSeries@CTChart@@QAEXJJ@Z@4PAEA
  0000e	6a 00		 push	 0
  00010	6a 00		 push	 0
  00012	6a 01		 push	 1
  00014	6a 20		 push	 32			; 00000020H
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0001c	83 c4 20	 add	 esp, 32			; 00000020H

; 350  : 		 Series1, Series2);
; 351  : }

  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
?ExchangeSeries@CTChart@@QAEXJJ@Z ENDP			; CTChart::ExchangeSeries
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?Draw@CTChart@@QAEXJJJJJ@Z
_TEXT	SEGMENT
_DC$ = 8						; size = 4
_Left$ = 12						; size = 4
_Top$ = 16						; size = 4
_Right$ = 20						; size = 4
_Bottom$ = 24						; size = 4
?Draw@CTChart@@QAEXJJJJJ@Z PROC				; CTChart::Draw, COMDAT
; _this$ = ecx

; 338  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 339  : 	static BYTE parms[] =
; 340  : 		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
; 341  : 	InvokeHelper(0x1f, DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 18	 push	 DWORD PTR _Bottom$[ebp]
  00006	ff 75 14	 push	 DWORD PTR _Right$[ebp]
  00009	ff 75 10	 push	 DWORD PTR _Top$[ebp]
  0000c	ff 75 0c	 push	 DWORD PTR _Left$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR _DC$[ebp]
  00012	68 00 00 00 00	 push	 OFFSET ?parms@?1??Draw@CTChart@@QAEXJJJJJ@Z@4PAEA
  00017	6a 00		 push	 0
  00019	6a 00		 push	 0
  0001b	6a 01		 push	 1
  0001d	6a 1f		 push	 31			; 0000001fH
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00025	83 c4 2c	 add	 esp, 44			; 0000002cH

; 342  : 		 DC, Left, Top, Right, Bottom);
; 343  : }

  00028	5d		 pop	 ebp
  00029	c2 14 00	 ret	 20			; 00000014H
?Draw@CTChart@@QAEXJJJJJ@Z ENDP				; CTChart::Draw
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?CloneSeries@CTChart@@QAEJJ@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
_SourceSeriesIndex$ = 8					; size = 4
?CloneSeries@CTChart@@QAEJJ@Z PROC			; CTChart::CloneSeries, COMDAT
; _this$ = ecx

; 328  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 329  : 	long result;
; 330  : 	static BYTE parms[] =
; 331  : 		VTS_I4;
; 332  : 	InvokeHelper(0x1e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,

  00003	ff 75 08	 push	 DWORD PTR _SourceSeriesIndex$[ebp]
  00006	8d 45 08	 lea	 eax, DWORD PTR _result$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??CloneSeries@CTChart@@QAEJJ@Z@4PAEA
  0000e	50		 push	 eax
  0000f	6a 03		 push	 3
  00011	6a 01		 push	 1
  00013	6a 1e		 push	 30			; 0000001eH
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper

; 333  : 		SourceSeriesIndex);
; 334  : 	return result;

  0001b	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  0001e	83 c4 1c	 add	 esp, 28			; 0000001cH

; 335  : }

  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?CloneSeries@CTChart@@QAEJJ@Z ENDP			; CTChart::CloneSeries
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?ChangeSeriesType@CTChart@@QAEXJJ@Z
_TEXT	SEGMENT
_SeriesIndex$ = 8					; size = 4
_NewSeriesType$ = 12					; size = 4
?ChangeSeriesType@CTChart@@QAEXJJ@Z PROC		; CTChart::ChangeSeriesType, COMDAT
; _this$ = ecx

; 320  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 321  : 	static BYTE parms[] =
; 322  : 		VTS_I4 VTS_I4;
; 323  : 	InvokeHelper(0x1d, DISPATCH_METHOD, VT_EMPTY, NULL, parms,

  00003	ff 75 0c	 push	 DWORD PTR _NewSeriesType$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _SeriesIndex$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??ChangeSeriesType@CTChart@@QAEXJJ@Z@4PAEA
  0000e	6a 00		 push	 0
  00010	6a 00		 push	 0
  00012	6a 01		 push	 1
  00014	6a 1d		 push	 29			; 0000001dH
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0001c	83 c4 20	 add	 esp, 32			; 00000020H

; 324  : 		 SeriesIndex, NewSeriesType);
; 325  : }

  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
?ChangeSeriesType@CTChart@@QAEXJJ@Z ENDP		; CTChart::ChangeSeriesType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?AddSeries@CTChart@@QAEJJ@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
_SeriesClass$ = 8					; size = 4
?AddSeries@CTChart@@QAEJJ@Z PROC			; CTChart::AddSeries, COMDAT
; _this$ = ecx

; 310  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 311  : 	long result;
; 312  : 	static BYTE parms[] =
; 313  : 		VTS_I4;
; 314  : 	InvokeHelper(0x1c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,

  00003	ff 75 08	 push	 DWORD PTR _SeriesClass$[ebp]
  00006	8d 45 08	 lea	 eax, DWORD PTR _result$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ?parms@?1??AddSeries@CTChart@@QAEJJ@Z@4PAEA
  0000e	50		 push	 eax
  0000f	6a 03		 push	 3
  00011	6a 01		 push	 1
  00013	6a 1c		 push	 28			; 0000001cH
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper

; 315  : 		SeriesClass);
; 316  : 	return result;

  0001b	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  0001e	83 c4 1c	 add	 esp, 28			; 0000001cH

; 317  : }

  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?AddSeries@CTChart@@QAEJJ@Z ENDP			; CTChart::AddSeries
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?AboutBox@CTChart@@QAEXXZ
_TEXT	SEGMENT
?AboutBox@CTChart@@QAEXXZ PROC				; CTChart::AboutBox, COMDAT
; _this$ = ecx

; 306  : 	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  00000	6a 00		 push	 0
  00002	6a 00		 push	 0
  00004	6a 00		 push	 0
  00006	6a 01		 push	 1
  00008	68 d8 fd ff ff	 push	 -552			; fffffdd8H
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00013	83 c4 18	 add	 esp, 24			; 00000018H

; 307  : }

  00016	c3		 ret	 0
?AboutBox@CTChart@@QAEXXZ ENDP				; CTChart::AboutBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?SetWidth@CTChart@@QAEXJ@Z
_TEXT	SEGMENT
_nNewValue$ = 8						; size = 4
?SetWidth@CTChart@@QAEXJ@Z PROC				; CTChart::SetWidth, COMDAT
; _this$ = ecx

; 290  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 291  : 	static BYTE parms[] =
; 292  : 		VTS_I4;
; 293  : 	InvokeHelper(0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _nNewValue$[ebp]
  00006	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetWidth@CTChart@@QAEXJ@Z@4PAEA
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 04		 push	 4
  00011	6a 1a		 push	 26			; 0000001aH
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00019	83 c4 1c	 add	 esp, 28			; 0000001cH

; 294  : 		 nNewValue);
; 295  : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetWidth@CTChart@@QAEXJ@Z ENDP				; CTChart::SetWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetWidth@CTChart@@QAEJXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?GetWidth@CTChart@@QAEJXZ PROC				; CTChart::GetWidth, COMDAT
; _this$ = ecx

; 283  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 284  : 	long result;
; 285  : 	InvokeHelper(0x1a, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00009	50		 push	 eax
  0000a	6a 03		 push	 3
  0000c	6a 02		 push	 2
  0000e	6a 1a		 push	 26			; 0000001aH
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper

; 286  : 	return result;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]
  00019	83 c4 18	 add	 esp, 24			; 00000018H

; 287  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?GetWidth@CTChart@@QAEJXZ ENDP				; CTChart::GetWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?SetVisible@CTChart@@QAEXH@Z
_TEXT	SEGMENT
_bNewValue$ = 8						; size = 4
?SetVisible@CTChart@@QAEXH@Z PROC			; CTChart::SetVisible, COMDAT
; _this$ = ecx

; 268  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 269  : 	static BYTE parms[] =
; 270  : 		VTS_BOOL;
; 271  : 	InvokeHelper(0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _bNewValue$[ebp]
  00006	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetVisible@CTChart@@QAEXH@Z@4PAEA
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 04		 push	 4
  00011	6a 18		 push	 24			; 00000018H
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00019	83 c4 1c	 add	 esp, 28			; 0000001cH

; 272  : 		 bNewValue);
; 273  : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetVisible@CTChart@@QAEXH@Z ENDP			; CTChart::SetVisible
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetVisible@CTChart@@QAEHXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?GetVisible@CTChart@@QAEHXZ PROC			; CTChart::GetVisible, COMDAT
; _this$ = ecx

; 261  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 262  : 	BOOL result;
; 263  : 	InvokeHelper(0x18, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00009	50		 push	 eax
  0000a	6a 0b		 push	 11			; 0000000bH
  0000c	6a 02		 push	 2
  0000e	6a 18		 push	 24			; 00000018H
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper

; 264  : 	return result;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]
  00019	83 c4 18	 add	 esp, 24			; 00000018H

; 265  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?GetVisible@CTChart@@QAEHXZ ENDP			; CTChart::GetVisible
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?SetTop@CTChart@@QAEXJ@Z
_TEXT	SEGMENT
_nNewValue$ = 8						; size = 4
?SetTop@CTChart@@QAEXJ@Z PROC				; CTChart::SetTop, COMDAT
; _this$ = ecx

; 253  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 254  : 	static BYTE parms[] =
; 255  : 		VTS_I4;
; 256  : 	InvokeHelper(0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _nNewValue$[ebp]
  00006	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetTop@CTChart@@QAEXJ@Z@4PAEA
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 04		 push	 4
  00011	6a 17		 push	 23			; 00000017H
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00019	83 c4 1c	 add	 esp, 28			; 0000001cH

; 257  : 		 nNewValue);
; 258  : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetTop@CTChart@@QAEXJ@Z ENDP				; CTChart::SetTop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetTop@CTChart@@QAEJXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?GetTop@CTChart@@QAEJXZ PROC				; CTChart::GetTop, COMDAT
; _this$ = ecx

; 246  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 247  : 	long result;
; 248  : 	InvokeHelper(0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00009	50		 push	 eax
  0000a	6a 03		 push	 3
  0000c	6a 02		 push	 2
  0000e	6a 17		 push	 23			; 00000017H
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper

; 249  : 	return result;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]
  00019	83 c4 18	 add	 esp, 24			; 00000018H

; 250  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?GetTop@CTChart@@QAEJXZ ENDP				; CTChart::GetTop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetSeriesCount@CTChart@@QAEJXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?GetSeriesCount@CTChart@@QAEJXZ PROC			; CTChart::GetSeriesCount, COMDAT
; _this$ = ecx

; 239  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 240  : 	long result;
; 241  : 	InvokeHelper(0x15, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00009	50		 push	 eax
  0000a	6a 03		 push	 3
  0000c	6a 02		 push	 2
  0000e	6a 15		 push	 21			; 00000015H
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper

; 242  : 	return result;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]
  00019	83 c4 18	 add	 esp, 24			; 00000018H

; 243  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?GetSeriesCount@CTChart@@QAEJXZ ENDP			; CTChart::GetSeriesCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?SetLeft@CTChart@@QAEXJ@Z
_TEXT	SEGMENT
_nNewValue$ = 8						; size = 4
?SetLeft@CTChart@@QAEXJ@Z PROC				; CTChart::SetLeft, COMDAT
; _this$ = ecx

; 196  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 	static BYTE parms[] =
; 198  : 		VTS_I4;
; 199  : 	InvokeHelper(0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _nNewValue$[ebp]
  00006	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetLeft@CTChart@@QAEXJ@Z@4PAEA
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 04		 push	 4
  00011	6a 0e		 push	 14			; 0000000eH
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00019	83 c4 1c	 add	 esp, 28			; 0000001cH

; 200  : 		 nNewValue);
; 201  : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetLeft@CTChart@@QAEXJ@Z ENDP				; CTChart::SetLeft
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetLeft@CTChart@@QAEJXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?GetLeft@CTChart@@QAEJXZ PROC				; CTChart::GetLeft, COMDAT
; _this$ = ecx

; 189  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 190  : 	long result;
; 191  : 	InvokeHelper(0xe, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00009	50		 push	 eax
  0000a	6a 03		 push	 3
  0000c	6a 02		 push	 2
  0000e	6a 0e		 push	 14			; 0000000eH
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper

; 192  : 	return result;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]
  00019	83 c4 18	 add	 esp, 24			; 00000018H

; 193  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?GetLeft@CTChart@@QAEJXZ ENDP				; CTChart::GetLeft
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?SetHeight@CTChart@@QAEXJ@Z
_TEXT	SEGMENT
_nNewValue$ = 8						; size = 4
?SetHeight@CTChart@@QAEXJ@Z PROC			; CTChart::SetHeight, COMDAT
; _this$ = ecx

; 174  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 175  : 	static BYTE parms[] =
; 176  : 		VTS_I4;
; 177  : 	InvokeHelper(0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _nNewValue$[ebp]
  00006	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetHeight@CTChart@@QAEXJ@Z@4PAEA
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 04		 push	 4
  00011	6a 0c		 push	 12			; 0000000cH
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00019	83 c4 1c	 add	 esp, 28			; 0000001cH

; 178  : 		 nNewValue);
; 179  : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetHeight@CTChart@@QAEXJ@Z ENDP			; CTChart::SetHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetHeight@CTChart@@QAEJXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?GetHeight@CTChart@@QAEJXZ PROC				; CTChart::GetHeight, COMDAT
; _this$ = ecx

; 167  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 168  : 	long result;
; 169  : 	InvokeHelper(0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00009	50		 push	 eax
  0000a	6a 03		 push	 3
  0000c	6a 02		 push	 2
  0000e	6a 0c		 push	 12			; 0000000cH
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper

; 170  : 	return result;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]
  00019	83 c4 18	 add	 esp, 24			; 00000018H

; 171  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?GetHeight@CTChart@@QAEJXZ ENDP				; CTChart::GetHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?SetEnabled@CTChart@@QAEXH@Z
_TEXT	SEGMENT
_bNewValue$ = 8						; size = 4
?SetEnabled@CTChart@@QAEXH@Z PROC			; CTChart::SetEnabled, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 132  : 	static BYTE parms[] =
; 133  : 		VTS_BOOL;
; 134  : 	InvokeHelper(0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _bNewValue$[ebp]
  00006	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetEnabled@CTChart@@QAEXH@Z@4PAEA
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 04		 push	 4
  00011	6a 08		 push	 8
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00019	83 c4 1c	 add	 esp, 28			; 0000001cH

; 135  : 		 bNewValue);
; 136  : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetEnabled@CTChart@@QAEXH@Z ENDP			; CTChart::SetEnabled
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetEnabled@CTChart@@QAEHXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?GetEnabled@CTChart@@QAEHXZ PROC			; CTChart::GetEnabled, COMDAT
; _this$ = ecx

; 124  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 125  : 	BOOL result;
; 126  : 	InvokeHelper(0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00009	50		 push	 eax
  0000a	6a 0b		 push	 11			; 0000000bH
  0000c	6a 02		 push	 2
  0000e	6a 08		 push	 8
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper

; 127  : 	return result;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]
  00019	83 c4 18	 add	 esp, 24			; 00000018H

; 128  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?GetEnabled@CTChart@@QAEHXZ ENDP			; CTChart::GetEnabled
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?SetDragMode@CTChart@@QAEXJ@Z
_TEXT	SEGMENT
_nNewValue$ = 8						; size = 4
?SetDragMode@CTChart@@QAEXJ@Z PROC			; CTChart::SetDragMode, COMDAT
; _this$ = ecx

; 116  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 117  : 	static BYTE parms[] =
; 118  : 		VTS_I4;
; 119  : 	InvokeHelper(0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _nNewValue$[ebp]
  00006	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetDragMode@CTChart@@QAEXJ@Z@4PAEA
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 04		 push	 4
  00011	6a 07		 push	 7
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00019	83 c4 1c	 add	 esp, 28			; 0000001cH

; 120  : 		 nNewValue);
; 121  : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetDragMode@CTChart@@QAEXJ@Z ENDP			; CTChart::SetDragMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetDragMode@CTChart@@QAEJXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?GetDragMode@CTChart@@QAEJXZ PROC			; CTChart::GetDragMode, COMDAT
; _this$ = ecx

; 109  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 110  : 	long result;
; 111  : 	InvokeHelper(0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00009	50		 push	 eax
  0000a	6a 03		 push	 3
  0000c	6a 02		 push	 2
  0000e	6a 07		 push	 7
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper

; 112  : 	return result;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]
  00019	83 c4 18	 add	 esp, 24			; 00000018H

; 113  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?GetDragMode@CTChart@@QAEJXZ ENDP			; CTChart::GetDragMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?SetDragCursor@CTChart@@QAEXF@Z
_TEXT	SEGMENT
_nNewValue$ = 8						; size = 2
?SetDragCursor@CTChart@@QAEXF@Z PROC			; CTChart::SetDragCursor, COMDAT
; _this$ = ecx

; 101  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 102  : 	static BYTE parms[] =
; 103  : 		VTS_I2;
; 104  : 	InvokeHelper(0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,

  00003	0f bf 45 08	 movsx	 eax, WORD PTR _nNewValue$[ebp]
  00007	50		 push	 eax
  00008	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetDragCursor@CTChart@@QAEXF@Z@4PAEA
  0000d	6a 00		 push	 0
  0000f	6a 00		 push	 0
  00011	6a 04		 push	 4
  00013	6a 06		 push	 6
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0001b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 105  : 		 nNewValue);
; 106  : }

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
?SetDragCursor@CTChart@@QAEXF@Z ENDP			; CTChart::SetDragCursor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetDragCursor@CTChart@@QAEFXZ
_TEXT	SEGMENT
_result$ = -4						; size = 2
?GetDragCursor@CTChart@@QAEFXZ PROC			; CTChart::GetDragCursor, COMDAT
; _this$ = ecx

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 95   : 	short result;
; 96   : 	InvokeHelper(0x6, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00009	50		 push	 eax
  0000a	6a 02		 push	 2
  0000c	6a 02		 push	 2
  0000e	6a 06		 push	 6
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper

; 97   : 	return result;

  00016	66 8b 45 fc	 mov	 ax, WORD PTR _result$[ebp]
  0001a	83 c4 18	 add	 esp, 24			; 00000018H

; 98   : }

  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?GetDragCursor@CTChart@@QAEFXZ ENDP			; CTChart::GetDragCursor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?SetCursor@CTChart@@QAEXF@Z
_TEXT	SEGMENT
_nNewValue$ = 8						; size = 2
?SetCursor@CTChart@@QAEXF@Z PROC			; CTChart::SetCursor, COMDAT
; _this$ = ecx

; 86   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	static BYTE parms[] =
; 88   : 		VTS_I2;
; 89   : 	InvokeHelper(0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,

  00003	0f bf 45 08	 movsx	 eax, WORD PTR _nNewValue$[ebp]
  00007	50		 push	 eax
  00008	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetCursor@CTChart@@QAEXF@Z@4PAEA
  0000d	6a 00		 push	 0
  0000f	6a 00		 push	 0
  00011	6a 04		 push	 4
  00013	6a 05		 push	 5
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0001b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 90   : 		 nNewValue);
; 91   : }

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
?SetCursor@CTChart@@QAEXF@Z ENDP			; CTChart::SetCursor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetCursor@CTChart@@QAEFXZ
_TEXT	SEGMENT
_result$ = -4						; size = 2
?GetCursor@CTChart@@QAEFXZ PROC				; CTChart::GetCursor, COMDAT
; _this$ = ecx

; 79   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 80   : 	short result;
; 81   : 	InvokeHelper(0x5, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00009	50		 push	 eax
  0000a	6a 02		 push	 2
  0000c	6a 02		 push	 2
  0000e	6a 05		 push	 5
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper

; 82   : 	return result;

  00016	66 8b 45 fc	 mov	 ax, WORD PTR _result$[ebp]
  0001a	83 c4 18	 add	 esp, 24			; 00000018H

; 83   : }

  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?GetCursor@CTChart@@QAEFXZ ENDP				; CTChart::GetCursor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?SetClipPoints@CTChart@@QAEXH@Z
_TEXT	SEGMENT
_bNewValue$ = 8						; size = 4
?SetClipPoints@CTChart@@QAEXH@Z PROC			; CTChart::SetClipPoints, COMDAT
; _this$ = ecx

; 71   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   : 	static BYTE parms[] =
; 73   : 		VTS_BOOL;
; 74   : 	InvokeHelper(0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,

  00003	ff 75 08	 push	 DWORD PTR _bNewValue$[ebp]
  00006	68 00 00 00 00	 push	 OFFSET ?parms@?1??SetClipPoints@CTChart@@QAEXH@Z@4PAEA
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 04		 push	 4
  00011	6a 04		 push	 4
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00019	83 c4 1c	 add	 esp, 28			; 0000001cH

; 75   : 		 bNewValue);
; 76   : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetClipPoints@CTChart@@QAEXH@Z ENDP			; CTChart::SetClipPoints
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetClipPoints@CTChart@@QAEHXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?GetClipPoints@CTChart@@QAEHXZ PROC			; CTChart::GetClipPoints, COMDAT
; _this$ = ecx

; 64   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 65   : 	BOOL result;
; 66   : 	InvokeHelper(0x4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00009	50		 push	 eax
  0000a	6a 0b		 push	 11			; 0000000bH
  0000c	6a 02		 push	 2
  0000e	6a 04		 push	 4
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper

; 67   : 	return result;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]
  00019	83 c4 18	 add	 esp, 24			; 00000018H

; 68   : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?GetClipPoints@CTChart@@QAEHXZ ENDP			; CTChart::GetClipPoints
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\axes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\axes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetAxis@CTChart@@QAE?AVCAxes@@XZ
_TEXT	SEGMENT
_pDispatch$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetAxis@CTChart@@QAE?AVCAxes@@XZ PROC			; CTChart::GetAxis, COMDAT
; _this$ = ecx

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 52   : 	InvokeHelper(0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _pDispatch$[ebp]
  00009	50		 push	 eax
  0000a	6a 09		 push	 9
  0000c	6a 02		 push	 2
  0000e	6a 02		 push	 2
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\axes.h

; 23   : 	CAxes(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}

  00016	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp

; 52   : 	InvokeHelper(0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);

  00019	83 c4 18	 add	 esp, 24			; 00000018H
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\axes.h

; 23   : 	CAxes(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}

  0001c	6a 01		 push	 1
  0001e	ff 75 fc	 push	 DWORD PTR _pDispatch$[ebp]
  00021	e8 00 00 00 00	 call	 ??0COleDispatchDriver@@QAE@PAUIDispatch@@H@Z ; COleDispatchDriver::COleDispatchDriver
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp

; 53   : 	return CAxes(pDispatch);

  00026	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 54   : }

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
?GetAxis@CTChart@@QAE?AVCAxes@@XZ ENDP			; CTChart::GetAxis
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.h
;	COMDAT ?Create@CTChart@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z
_TEXT	SEGMENT
_lpszClassName$ = 8					; size = 4
_lpszWindowName$ = 12					; size = 4
_dwStyle$ = 16						; size = 4
_rect$ = 20						; size = 4
_pParentWnd$ = 24					; size = 4
_nID$ = 28						; size = 4
_pContext$ = 32						; size = 4
?Create@CTChart@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z PROC ; CTChart::Create, COMDAT
; _this$ = ecx

; 56   : 	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a 00		 push	 0
  00005	6a 00		 push	 0
  00007	6a 00		 push	 0
  00009	ff 75 1c	 push	 DWORD PTR _nID$[ebp]
  0000c	ff 75 18	 push	 DWORD PTR _pParentWnd$[ebp]
  0000f	ff 75 14	 push	 DWORD PTR _rect$[ebp]
  00012	ff 75 10	 push	 DWORD PTR _dwStyle$[ebp]
  00015	ff 75 0c	 push	 DWORD PTR _lpszWindowName$[ebp]
  00018	68 00 00 00 00	 push	 OFFSET ?clsid@?1??GetClsid@CTChart@@QAEABU_GUID@@XZ@4U3@B ; `CTChart::GetClsid'::`2'::clsid
  0001d	e8 00 00 00 00	 call	 ?CreateControl@CWnd@@QAEHABU_GUID@@PBDKABUtagRECT@@PAV1@IPAVCFile@@HPA_W@Z ; CWnd::CreateControl
  00022	5d		 pop	 ebp
  00023	c2 1c 00	 ret	 28			; 0000001cH
?Create@CTChart@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z ENDP ; CTChart::Create
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?CreateObject@CTChart@@SGPAVCObject@@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateObject@CTChart@@SGPAVCObject@@XZ PROC		; CTChart::CreateObject, COMDAT

; 34   : IMPLEMENT_DYNCREATE(CTChart, CWnd)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateObject@CTChart@@SGPAVCObject@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 116  : 	{ return ::operator new(nSize); }

  00024	68 80 00 00 00	 push	 128			; 00000080H
  00029	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp

; 34   : IMPLEMENT_DYNCREATE(CTChart, CWnd)

  0002e	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 116  : 	{ return ::operator new(nSize); }

  00030	83 c4 04	 add	 esp, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp

; 34   : IMPLEMENT_DYNCREATE(CTChart, CWnd)

  00033	89 75 f0	 mov	 DWORD PTR $T2[ebp], esi
  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003d	85 f6		 test	 esi, esi
  0003f	74 1f		 je	 SHORT $LN3@CreateObje
  00041	8b ce		 mov	 ecx, esi
  00043	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd
  00048	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CTChart@@6B@
  0004e	8b c6		 mov	 eax, esi
  00050	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00053	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005a	59		 pop	 ecx
  0005b	5e		 pop	 esi
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
$LN3@CreateObje:
  00060	33 c0		 xor	 eax, eax
  00062	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00065	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006c	59		 pop	 ecx
  0006d	5e		 pop	 esi
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateObject@CTChart@@SGPAVCObject@@XZ$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00009	c3		 ret	 0
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
__ehhandler$?CreateObject@CTChart@@SGPAVCObject@@XZ:
  0000f	90		 npad	 1
  00010	90		 npad	 1
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateObject@CTChart@@SGPAVCObject@@XZ
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateObject@CTChart@@SGPAVCObject@@XZ ENDP		; CTChart::CreateObject
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetRuntimeClass@CTChart@@UBEPAUCRuntimeClass@@XZ
_TEXT	SEGMENT
?GetRuntimeClass@CTChart@@UBEPAUCRuntimeClass@@XZ PROC	; CTChart::GetRuntimeClass, COMDAT
; _this$ = ecx

; 34   : IMPLEMENT_DYNCREATE(CTChart, CWnd)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?classCTChart@CTChart@@2UCRuntimeClass@@B ; CTChart::classCTChart
  00005	c3		 ret	 0
?GetRuntimeClass@CTChart@@UBEPAUCRuntimeClass@@XZ ENDP	; CTChart::GetRuntimeClass
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?GetThisClass@CTChart@@SGPAUCRuntimeClass@@XZ
_TEXT	SEGMENT
?GetThisClass@CTChart@@SGPAUCRuntimeClass@@XZ PROC	; CTChart::GetThisClass, COMDAT

; 34   : IMPLEMENT_DYNCREATE(CTChart, CWnd)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?classCTChart@CTChart@@2UCRuntimeClass@@B ; CTChart::classCTChart
  00005	c3		 ret	 0
?GetThisClass@CTChart@@SGPAUCRuntimeClass@@XZ ENDP	; CTChart::GetThisClass
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?_GetBaseClass@CTChart@@KGPAUCRuntimeClass@@XZ
_TEXT	SEGMENT
?_GetBaseClass@CTChart@@KGPAUCRuntimeClass@@XZ PROC	; CTChart::_GetBaseClass, COMDAT

; 34   : IMPLEMENT_DYNCREATE(CTChart, CWnd)

  00000	e9 00 00 00 00	 jmp	 ?GetThisClass@CWnd@@SGPAUCRuntimeClass@@XZ ; CWnd::GetThisClass
?_GetBaseClass@CTChart@@KGPAUCRuntimeClass@@XZ ENDP	; CTChart::_GetBaseClass
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
?EndModalState@CWnd@@UAEXXZ PROC			; CWnd::EndModalState, COMDAT
; _this$ = ecx

; 567  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	6a 01		 push	 1
  00002	ff 71 20	 push	 DWORD PTR [ecx+32]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  0000b	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
?BeginModalState@CWnd@@UAEXXZ PROC			; CWnd::BeginModalState, COMDAT
; _this$ = ecx

; 565  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	6a 00		 push	 0
  00002	ff 71 20	 push	 DWORD PTR [ecx+32]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  0000b	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC	; CWnd::DoDataExchange, COMDAT
; _this$ = ecx

; 561  : 	{ } // default does nothing

  00000	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC		; CObject::Dump, COMDAT
; _this$ = ecx

; 122  : 	{ /* no dumping in release builds */ }

  00000	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
?AssertValid@CObject@@UBEXXZ PROC			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 120  : 	{ /* no asserts in release builds */ }

  00000	c2 00 00	 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC		; CObject::Serialize, COMDAT
; _this$ = ecx

; 106  : 	{ /* CObject does not serialize anything by default */ }

  00000	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CObject@@SGXPAX@Z PROC				; CObject::operator delete, COMDAT

; 112  : 	{ ::operator delete(p); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 08	 push	 DWORD PTR _p$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	83 c4 04	 add	 esp, 4
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\Common_TeeChart\tchart.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
