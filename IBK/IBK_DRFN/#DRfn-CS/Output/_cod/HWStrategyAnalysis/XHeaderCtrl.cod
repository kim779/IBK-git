; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\HWStrategyAnalysis\XHeaderCtrl.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1CObject@@UAE@XZ				; CObject::~CObject
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	??1CGdiObject@@UAE@XZ				; CGdiObject::~CGdiObject
PUBLIC	??_GCGdiObject@@UAEPAXI@Z			; CGdiObject::`scalar deleting destructor'
PUBLIC	??1CPen@@UAE@XZ					; CPen::~CPen
PUBLIC	??_GCPen@@UAEPAXI@Z				; CPen::`scalar deleting destructor'
PUBLIC	??1CBitmap@@UAE@XZ				; CBitmap::~CBitmap
PUBLIC	??_GCBitmap@@UAEPAXI@Z				; CBitmap::`scalar deleting destructor'
PUBLIC	?PtVisible@CDC@@UBEHHH@Z			; CDC::PtVisible
PUBLIC	?RectVisible@CDC@@UBEHPBUtagRECT@@@Z		; CDC::RectVisible
PUBLIC	?TextOutA@CDC@@UAEHHHPBDH@Z			; CDC::TextOutA
PUBLIC	?ExtTextOutA@CDC@@UAEHHHIPBUtagRECT@@PBDIPAH@Z	; CDC::ExtTextOutA
PUBLIC	?TabbedTextOutA@CDC@@UAE?AVCSize@@HHPBDHHPAHH@Z	; CDC::TabbedTextOutA
PUBLIC	?DrawTextA@CDC@@UAEHPBDHPAUtagRECT@@I@Z		; CDC::DrawTextA
PUBLIC	?DrawTextExA@CDC@@UAEHPADHPAUtagRECT@@IPAUtagDRAWTEXTPARAMS@@@Z ; CDC::DrawTextExA
PUBLIC	?GrayStringA@CDC@@UAEHPAVCBrush@@P6GHPAUHDC__@@JH@ZJHHHHH@Z ; CDC::GrayStringA
PUBLIC	?Escape@CDC@@UAEHHHPBDPAX@Z			; CDC::Escape
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
PUBLIC	??_GCHeaderCtrl@@UAEPAXI@Z			; CHeaderCtrl::`scalar deleting destructor'
PUBLIC	??1CMemDC@@UAE@XZ				; CMemDC::~CMemDC
PUBLIC	??_GCMemDC@@UAEPAXI@Z				; CMemDC::`scalar deleting destructor'
PUBLIC	?_GetBaseClass@CXHeaderCtrl@@KGPAUCRuntimeClass@@XZ ; CXHeaderCtrl::_GetBaseClass
PUBLIC	?GetThisClass@CXHeaderCtrl@@SGPAUCRuntimeClass@@XZ ; CXHeaderCtrl::GetThisClass
PUBLIC	?GetRuntimeClass@CXHeaderCtrl@@UBEPAUCRuntimeClass@@XZ ; CXHeaderCtrl::GetRuntimeClass
PUBLIC	?CreateObject@CXHeaderCtrl@@SGPAVCObject@@XZ	; CXHeaderCtrl::CreateObject
PUBLIC	??0CXHeaderCtrl@@QAE@XZ				; CXHeaderCtrl::CXHeaderCtrl
PUBLIC	??1CXHeaderCtrl@@UAE@XZ				; CXHeaderCtrl::~CXHeaderCtrl
PUBLIC	?ModifyProperty@CXHeaderCtrl@@QAEHIJ@Z		; CXHeaderCtrl::ModifyProperty
PUBLIC	?SetSortImage@CXHeaderCtrl@@QAEXHH@Z		; CXHeaderCtrl::SetSortImage
PUBLIC	?DrawItem@CXHeaderCtrl@@UAEXPAUtagDRAWITEMSTRUCT@@@Z ; CXHeaderCtrl::DrawItem
PUBLIC	?DrawItem@CXHeaderCtrl@@UAEXPAVCDC@@VCRect@@PAU_HD_ITEMA@@@Z ; CXHeaderCtrl::DrawItem
PUBLIC	?DrawCtrl@CXHeaderCtrl@@IAEXPAVCDC@@@Z		; CXHeaderCtrl::DrawCtrl
PUBLIC	?DrawImage@CXHeaderCtrl@@IAEHPAVCDC@@VCRect@@PAU_HD_ITEMA@@H@Z ; CXHeaderCtrl::DrawImage
PUBLIC	?DrawBitmap@CXHeaderCtrl@@IAEHPAVCDC@@VCRect@@PAU_HD_ITEMA@@PAVCBitmap@@PAUtagBITMAP@@H@Z ; CXHeaderCtrl::DrawBitmap
PUBLIC	?DrawTextA@CXHeaderCtrl@@IAEHPAVCDC@@VCRect@@PAU_HD_ITEMA@@@Z ; CXHeaderCtrl::DrawTextA
PUBLIC	?OnDeleteItem@CXHeaderCtrl@@IAEJIJ@Z		; CXHeaderCtrl::OnDeleteItem
PUBLIC	?OnInsertItem@CXHeaderCtrl@@IAEJIJ@Z		; CXHeaderCtrl::OnInsertItem
PUBLIC	?OnLayout@CXHeaderCtrl@@IAEJIJ@Z		; CXHeaderCtrl::OnLayout
PUBLIC	?OnSetImageList@CXHeaderCtrl@@IAEJIJ@Z		; CXHeaderCtrl::OnSetImageList
PUBLIC	?OnEraseBkgnd@CXHeaderCtrl@@IAEHPAVCDC@@@Z	; CXHeaderCtrl::OnEraseBkgnd
PUBLIC	?OnPaint@CXHeaderCtrl@@IAEXXZ			; CXHeaderCtrl::OnPaint
PUBLIC	?OnSysColorChange@CXHeaderCtrl@@IAEXXZ		; CXHeaderCtrl::OnSysColorChange
PUBLIC	?GetThisMessageMap@CXHeaderCtrl@@KGPBUAFX_MSGMAP@@XZ ; CXHeaderCtrl::GetThisMessageMap
PUBLIC	?GetMessageMap@CXHeaderCtrl@@MBEPBUAFX_MSGMAP@@XZ ; CXHeaderCtrl::GetMessageMap
PUBLIC	??_GCXHeaderCtrl@@UAEPAXI@Z			; CXHeaderCtrl::`scalar deleting destructor'
PUBLIC	??_R0PAVCException@@@8				; CException * `RTTI Type Descriptor'
PUBLIC	??_7CGdiObject@@6B@				; CGdiObject::`vftable'
PUBLIC	??_7CPen@@6B@					; CPen::`vftable'
PUBLIC	??_7CBitmap@@6B@				; CBitmap::`vftable'
PUBLIC	??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@ ; `string'
PUBLIC	??_C@_0BB@HBOOMJBF@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ?6?$CFTs@ ; `string'
PUBLIC	??_C@_0N@OMEMOKLE@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ@ ; `string'
PUBLIC	??_7CHeaderCtrl@@6B@				; CHeaderCtrl::`vftable'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CGdiObject@@6B@				; CGdiObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGdiObject@@@8				; CGdiObject `RTTI Type Descriptor'
PUBLIC	??_R3CGdiObject@@8				; CGdiObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGdiObject@@8				; CGdiObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGdiObject@@8			; CGdiObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CPen@@6B@					; CPen::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCPen@@@8				; CPen `RTTI Type Descriptor'
PUBLIC	??_R3CPen@@8					; CPen::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CPen@@8					; CPen::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CPen@@8				; CPen::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CBitmap@@6B@				; CBitmap::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBitmap@@@8				; CBitmap `RTTI Type Descriptor'
PUBLIC	??_R3CBitmap@@8					; CBitmap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBitmap@@8					; CBitmap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBitmap@@8			; CBitmap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R3CWnd@@8					; CWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWnd@@8					; CWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R3CCmdTarget@@8				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCmdTarget@@8				; CCmdTarget::`RTTI Base Class Array'
PUBLIC	??_R4CHeaderCtrl@@6B@				; CHeaderCtrl::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCHeaderCtrl@@@8				; CHeaderCtrl `RTTI Type Descriptor'
PUBLIC	??_R3CHeaderCtrl@@8				; CHeaderCtrl::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CHeaderCtrl@@8				; CHeaderCtrl::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CHeaderCtrl@@8			; CHeaderCtrl::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7CMemDC@@6B@					; CMemDC::`vftable'
PUBLIC	?classCXHeaderCtrl@CXHeaderCtrl@@2UCRuntimeClass@@B ; CXHeaderCtrl::classCXHeaderCtrl
PUBLIC	??_7CXHeaderCtrl@@6B@				; CXHeaderCtrl::`vftable'
PUBLIC	??_C@_0N@HEBACGJN@CXHeaderCtrl@			; `string'
PUBLIC	??_R4CMemDC@@6B@				; CMemDC::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMemDC@@@8				; CMemDC `RTTI Type Descriptor'
PUBLIC	??_R3CMemDC@@8					; CMemDC::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMemDC@@8					; CMemDC::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMemDC@@8				; CMemDC::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CDC@@8				; CDC::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCDC@@@8					; CDC `RTTI Type Descriptor'
PUBLIC	??_R3CDC@@8					; CDC::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDC@@8					; CDC::`RTTI Base Class Array'
PUBLIC	??_R4CXHeaderCtrl@@6B@				; CXHeaderCtrl::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCXHeaderCtrl@@@8			; CXHeaderCtrl `RTTI Type Descriptor'
PUBLIC	??_R3CXHeaderCtrl@@8				; CXHeaderCtrl::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CXHeaderCtrl@@8				; CXHeaderCtrl::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CXHeaderCtrl@@8			; CXHeaderCtrl::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	__imp__BitBlt@36:PROC
EXTRN	__imp__CreateCompatibleBitmap@12:PROC
EXTRN	__imp__CreateCompatibleDC@4:PROC
EXTRN	__imp__Escape@20:PROC
EXTRN	__imp__GetBkColor@4:PROC
EXTRN	__imp__GetCurrentObject@8:PROC
EXTRN	__imp__GetTextExtentPoint32A@16:PROC
EXTRN	__imp__PtVisible@12:PROC
EXTRN	__imp__RectVisible@8:PROC
EXTRN	__imp__GetObjectA@12:PROC
EXTRN	__imp__TextOutA@20:PROC
EXTRN	__imp__ExtTextOutA@32:PROC
EXTRN	__imp__SendMessageA@16:PROC
EXTRN	__imp__EnableWindow@8:PROC
EXTRN	__imp__GetSystemMetrics@4:PROC
EXTRN	__imp__DrawTextA@20:PROC
EXTRN	__imp__DrawTextExA@24:PROC
EXTRN	__imp__GrayStringA@36:PROC
EXTRN	__imp__TabbedTextOutA@32:PROC
EXTRN	__imp__InvalidateRect@12:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__GetSysColor@4:PROC
EXTRN	__imp__InflateRect@12:PROC
EXTRN	__imp__ImageList_SetBkColor@8:PROC
EXTRN	__imp__ImageList_GetBkColor@4:PROC
EXTRN	__imp__ImageList_GetImageInfo@12:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ:PROC
EXTRN	?GetRuntimeClass@CGdiObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CGdiObject::GetRuntimeClass
EXTRN	?FromHandle@CGdiObject@@SGPAV1@PAX@Z:PROC	; CGdiObject::FromHandle
EXTRN	?Attach@CGdiObject@@QAEHPAX@Z:PROC		; CGdiObject::Attach
EXTRN	?DeleteObject@CGdiObject@@QAEHXZ:PROC		; CGdiObject::DeleteObject
EXTRN	??_ECGdiObject@@UAEPAXI@Z:PROC			; CGdiObject::`vector deleting destructor'
EXTRN	?GetRuntimeClass@CPen@@UBEPAUCRuntimeClass@@XZ:PROC ; CPen::GetRuntimeClass
EXTRN	??0CPen@@QAE@HHK@Z:PROC				; CPen::CPen
EXTRN	??_ECPen@@UAEPAXI@Z:PROC			; CPen::`vector deleting destructor'
EXTRN	?GetRuntimeClass@CBitmap@@UBEPAUCRuntimeClass@@XZ:PROC ; CBitmap::GetRuntimeClass
EXTRN	??_ECBitmap@@UAEPAXI@Z:PROC			; CBitmap::`vector deleting destructor'
EXTRN	?GetRuntimeClass@CDC@@UBEPAUCRuntimeClass@@XZ:PROC ; CDC::GetRuntimeClass
EXTRN	?Attach@CDC@@QAEHPAUHDC__@@@Z:PROC		; CDC::Attach
EXTRN	?SetAttribDC@CDC@@UAEXPAUHDC__@@@Z:PROC		; CDC::SetAttribDC
EXTRN	?SetOutputDC@CDC@@UAEXPAUHDC__@@@Z:PROC		; CDC::SetOutputDC
EXTRN	?ReleaseAttribDC@CDC@@UAEXXZ:PROC		; CDC::ReleaseAttribDC
EXTRN	?ReleaseOutputDC@CDC@@UAEXXZ:PROC		; CDC::ReleaseOutputDC
EXTRN	??0CDC@@QAE@XZ:PROC				; CDC::CDC
EXTRN	?SaveDC@CDC@@UAEHXZ:PROC			; CDC::SaveDC
EXTRN	?RestoreDC@CDC@@UAEHH@Z:PROC			; CDC::RestoreDC
EXTRN	?SelectStockObject@CDC@@UAEPAVCGdiObject@@H@Z:PROC ; CDC::SelectStockObject
EXTRN	?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z:PROC	; CDC::SelectObject
EXTRN	?SelectObject@CDC@@UAEPAVCFont@@PAV2@@Z:PROC	; CDC::SelectObject
EXTRN	?SetBkColor@CDC@@UAEKK@Z:PROC			; CDC::SetBkColor
EXTRN	?SetTextColor@CDC@@UAEKK@Z:PROC			; CDC::SetTextColor
EXTRN	?SetMapMode@CDC@@UAEHH@Z:PROC			; CDC::SetMapMode
EXTRN	?SetViewportOrg@CDC@@UAE?AVCPoint@@HH@Z:PROC	; CDC::SetViewportOrg
EXTRN	?OffsetViewportOrg@CDC@@UAE?AVCPoint@@HH@Z:PROC	; CDC::OffsetViewportOrg
EXTRN	?SetViewportExt@CDC@@UAE?AVCSize@@HH@Z:PROC	; CDC::SetViewportExt
EXTRN	?ScaleViewportExt@CDC@@UAE?AVCSize@@HHHH@Z:PROC	; CDC::ScaleViewportExt
EXTRN	?SetWindowOrg@CDC@@QAE?AVCPoint@@HH@Z:PROC	; CDC::SetWindowOrg
EXTRN	?SetWindowExt@CDC@@UAE?AVCSize@@HH@Z:PROC	; CDC::SetWindowExt
EXTRN	?ScaleWindowExt@CDC@@UAE?AVCSize@@HHHH@Z:PROC	; CDC::ScaleWindowExt
EXTRN	?GetClipBox@CDC@@UBEHPAUtagRECT@@@Z:PROC	; CDC::GetClipBox
EXTRN	?MoveTo@CDC@@QAE?AVCPoint@@HH@Z:PROC		; CDC::MoveTo
EXTRN	?LineTo@CDC@@QAEHHH@Z:PROC			; CDC::LineTo
EXTRN	?FillSolidRect@CDC@@QAEXPBUtagRECT@@K@Z:PROC	; CDC::FillSolidRect
EXTRN	?Draw3dRect@CDC@@QAEXPBUtagRECT@@KK@Z:PROC	; CDC::Draw3dRect
EXTRN	??1CDC@@UAE@XZ:PROC				; CDC::~CDC
EXTRN	?SelectGdiObject@CDC@@KGPAVCGdiObject@@PAUHDC__@@PAX@Z:PROC ; CDC::SelectGdiObject
EXTRN	??0CPaintDC@@QAE@PAVCWnd@@@Z:PROC		; CPaintDC::CPaintDC
EXTRN	??1CPaintDC@@UAE@XZ:PROC			; CPaintDC::~CPaintDC
EXTRN	?FromHandle@CImageList@@SGPAV1@PAU_IMAGELIST@@@Z:PROC ; CImageList::FromHandle
EXTRN	?DrawIndirect@CImageList@@QAEHPAVCDC@@HUtagPOINT@@UtagSIZE@@1IKKKKKK@Z:PROC ; CImageList::DrawIndirect
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:PROC ; CCmdTarget::OnCmdMsg
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:PROC	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:PROC ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:PROC	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:PROC ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:PROC ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:PROC ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:PROC ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:PROC ; CCmdTarget::GetConnectionMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:PROC ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:PROC	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:PROC ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:PROC ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:PROC ; CCmdTarget::GetConnectionHook
EXTRN	??0CWnd@@QAE@XZ:PROC				; CWnd::CWnd
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:PROC		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:PROC ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:PROC ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:PROC ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:PROC		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:PROC ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:PROC	; CWnd::CalcWindowRect
EXTRN	?GetDlgCtrlID@CWnd@@QBEHXZ:PROC			; CWnd::GetDlgCtrlID
EXTRN	?GetMenu@CWnd@@UBEPAVCMenu@@XZ:PROC		; CWnd::GetMenu
EXTRN	?SetMenu@CWnd@@UAEHPAVCMenu@@@Z:PROC		; CWnd::SetMenu
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:PROC ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:PROC ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:PROC		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:PROC		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:PROC		; CWnd::EndModalLoop
EXTRN	?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z:PROC ; CWnd::OnDrawIconicThumbnailOrLivePreview
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:PROC ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:PROC			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:PROC ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:PROC		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:PROC ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDescription
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:PROC ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDefaultAction
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:PROC	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:PROC ; CWnd::accLocation
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:PROC	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:PROC ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:PROC ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:PROC	; CWnd::CreateAccessibleProxy
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:PROC			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:PROC		; CWnd::OnNotify
EXTRN	?OnSysColorChange@CWnd@@IAEXXZ:PROC		; CWnd::OnSysColorChange
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:PROC ; CWnd::GetSuperWndProcAddr
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:PROC ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:PROC ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:PROC		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnWndMsg
EXTRN	?Default@CWnd@@IAEJXZ:PROC			; CWnd::Default
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:PROC		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:PROC		; CWnd::PostNcDestroy
EXTRN	?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInputs
EXTRN	?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInput
EXTRN	?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z:PROC	; CWnd::GetGestureStatus
EXTRN	?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z:PROC	; CWnd::OnGestureZoom
EXTRN	?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z:PROC	; CWnd::OnGesturePan
EXTRN	?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z:PROC	; CWnd::OnGestureRotate
EXTRN	?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z:PROC ; CWnd::OnGestureTwoFingerTap
EXTRN	?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z:PROC ; CWnd::OnGesturePressAndTap
EXTRN	?ResizeDynamicLayout@CWnd@@MAEXXZ:PROC		; CWnd::ResizeDynamicLayout
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:PROC		; CWnd::CheckAutoCenter
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:PROC			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:PROC		; CWnd::OnFinalRelease
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:PROC ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:PROC ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:PROC ; CWnd::SetOccDialogInfo
EXTRN	?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ:PROC ; CWnd::GetOccDialogInfo
EXTRN	?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ:PROC ; CWnd::GetThisMessageMap
EXTRN	?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ:PROC	; CWnd::GetMessageMap
EXTRN	?AfxMessageBox@@YGHPBDII@Z:PROC			; AfxMessageBox
EXTRN	?GetThisClass@CHeaderCtrl@@SGPAUCRuntimeClass@@XZ:PROC ; CHeaderCtrl::GetThisClass
EXTRN	?GetRuntimeClass@CHeaderCtrl@@UBEPAUCRuntimeClass@@XZ:PROC ; CHeaderCtrl::GetRuntimeClass
EXTRN	?Create@CHeaderCtrl@@UAEHKABUtagRECT@@PAVCWnd@@I@Z:PROC ; CHeaderCtrl::Create
EXTRN	?CreateEx@CHeaderCtrl@@UAEHKKABUtagRECT@@PAVCWnd@@I@Z:PROC ; CHeaderCtrl::CreateEx
EXTRN	?DrawItem@CHeaderCtrl@@UAEXPAUtagDRAWITEMSTRUCT@@@Z:PROC ; CHeaderCtrl::DrawItem
EXTRN	??1CHeaderCtrl@@UAE@XZ:PROC			; CHeaderCtrl::~CHeaderCtrl
EXTRN	?OnChildNotify@CHeaderCtrl@@MAEHIIJPAJ@Z:PROC	; CHeaderCtrl::OnChildNotify
EXTRN	??_ECHeaderCtrl@@UAEPAXI@Z:PROC			; CHeaderCtrl::`vector deleting destructor'
EXTRN	??_ECMemDC@@UAEPAXI@Z:PROC			; CMemDC::`vector deleting destructor'
EXTRN	??_ECXHeaderCtrl@@UAEPAXI@Z:PROC		; CXHeaderCtrl::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@CXHeaderCtrl@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CXHeaderCtrl@@8 DD FLAT:??_R0?AVCXHeaderCtrl@@@8 ; CXHeaderCtrl::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CXHeaderCtrl@@8
rdata$r	ENDS
;	COMDAT ??_R2CXHeaderCtrl@@8
rdata$r	SEGMENT
??_R2CXHeaderCtrl@@8 DD FLAT:??_R1A@?0A@EA@CXHeaderCtrl@@8 ; CXHeaderCtrl::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CHeaderCtrl@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CXHeaderCtrl@@8
rdata$r	SEGMENT
??_R3CXHeaderCtrl@@8 DD 00H				; CXHeaderCtrl::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CXHeaderCtrl@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCXHeaderCtrl@@@8
data$rs	SEGMENT
??_R0?AVCXHeaderCtrl@@@8 DD FLAT:??_7type_info@@6B@	; CXHeaderCtrl `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCXHeaderCtrl@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CXHeaderCtrl@@6B@
rdata$r	SEGMENT
??_R4CXHeaderCtrl@@6B@ DD 00H				; CXHeaderCtrl::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCXHeaderCtrl@@@8
	DD	FLAT:??_R3CXHeaderCtrl@@8
rdata$r	ENDS
;	COMDAT ??_R2CDC@@8
rdata$r	SEGMENT
??_R2CDC@@8 DD	FLAT:??_R1A@?0A@EA@CDC@@8		; CDC::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDC@@8
rdata$r	SEGMENT
??_R3CDC@@8 DD	00H					; CDC::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CDC@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDC@@@8
data$rs	SEGMENT
??_R0?AVCDC@@@8 DD FLAT:??_7type_info@@6B@		; CDC `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDC@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CDC@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDC@@8 DD FLAT:??_R0?AVCDC@@@8		; CDC::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDC@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMemDC@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMemDC@@8 DD FLAT:??_R0?AVCMemDC@@@8	; CMemDC::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMemDC@@8
rdata$r	ENDS
;	COMDAT ??_R2CMemDC@@8
rdata$r	SEGMENT
??_R2CMemDC@@8 DD FLAT:??_R1A@?0A@EA@CMemDC@@8		; CMemDC::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDC@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CMemDC@@8
rdata$r	SEGMENT
??_R3CMemDC@@8 DD 00H					; CMemDC::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CMemDC@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMemDC@@@8
data$rs	SEGMENT
??_R0?AVCMemDC@@@8 DD FLAT:??_7type_info@@6B@		; CMemDC `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMemDC@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CMemDC@@6B@
rdata$r	SEGMENT
??_R4CMemDC@@6B@ DD 00H					; CMemDC::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMemDC@@@8
	DD	FLAT:??_R3CMemDC@@8
rdata$r	ENDS
;	COMDAT ?messageMap@?1??GetThisMessageMap@CXHeaderCtrl@@KGPBUAFX_MSGMAP@@XZ@4U3@B
CONST	SEGMENT
?messageMap@?1??GetThisMessageMap@CXHeaderCtrl@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ ; `CXHeaderCtrl::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CXHeaderCtrl@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
;	COMDAT ?_messageEntries@?1??GetThisMessageMap@CXHeaderCtrl@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@?1??GetThisMessageMap@CXHeaderCtrl@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 01201H ; `CXHeaderCtrl::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	0eH
	DD	FLAT:?OnInsertItem@CXHeaderCtrl@@IAEJIJ@Z
	DD	0120aH
	DD	00H
	DD	00H
	DD	00H
	DD	0eH
	DD	FLAT:?OnInsertItem@CXHeaderCtrl@@IAEJIJ@Z
	DD	01202H
	DD	00H
	DD	00H
	DD	00H
	DD	0eH
	DD	FLAT:?OnDeleteItem@CXHeaderCtrl@@IAEJIJ@Z
	DD	01208H
	DD	00H
	DD	00H
	DD	00H
	DD	0eH
	DD	FLAT:?OnSetImageList@CXHeaderCtrl@@IAEJIJ@Z
	DD	01205H
	DD	00H
	DD	00H
	DD	00H
	DD	0eH
	DD	FLAT:?OnLayout@CXHeaderCtrl@@IAEJIJ@Z
	DD	0fH
	DD	00H
	DD	00H
	DD	00H
	DD	013H
	DD	FLAT:?OnPaint@CXHeaderCtrl@@IAEXXZ
	DD	015H
	DD	00H
	DD	00H
	DD	00H
	DD	013H
	DD	FLAT:?OnSysColorChange@CXHeaderCtrl@@IAEXXZ
	DD	014H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:?OnEraseBkgnd@CXHeaderCtrl@@IAEHPAVCDC@@@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_C@_0N@HEBACGJN@CXHeaderCtrl@
CONST	SEGMENT
??_C@_0N@HEBACGJN@CXHeaderCtrl@ DB 'CXHeaderCtrl', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CXHeaderCtrl@@6B@
CONST	SEGMENT
??_7CXHeaderCtrl@@6B@ DD FLAT:??_R4CXHeaderCtrl@@6B@	; CXHeaderCtrl::`vftable'
	DD	FLAT:?GetRuntimeClass@CXHeaderCtrl@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECXHeaderCtrl@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CXHeaderCtrl@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CHeaderCtrl@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CHeaderCtrl@@UAEHKABUtagRECT@@PAVCWnd@@I@Z
	DD	FLAT:?CreateEx@CHeaderCtrl@@UAEHKKABUtagRECT@@PAVCWnd@@I@Z
	DD	FLAT:?DrawItem@CXHeaderCtrl@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
	DD	FLAT:?DrawItem@CXHeaderCtrl@@UAEXPAVCDC@@VCRect@@PAU_HD_ITEMA@@@Z
CONST	ENDS
;	COMDAT ?classCXHeaderCtrl@CXHeaderCtrl@@2UCRuntimeClass@@B
CONST	SEGMENT
?classCXHeaderCtrl@CXHeaderCtrl@@2UCRuntimeClass@@B DD FLAT:??_C@_0N@HEBACGJN@CXHeaderCtrl@ ; CXHeaderCtrl::classCXHeaderCtrl
	DD	0c8H
	DD	0ffffH
	DD	FLAT:?CreateObject@CXHeaderCtrl@@SGPAVCObject@@XZ
	DD	FLAT:?_GetBaseClass@CXHeaderCtrl@@KGPAUCRuntimeClass@@XZ
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_7CMemDC@@6B@
CONST	SEGMENT
??_7CMemDC@@6B@ DD FLAT:??_R4CMemDC@@6B@		; CMemDC::`vftable'
	DD	FLAT:?GetRuntimeClass@CDC@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECMemDC@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?SetAttribDC@CDC@@UAEXPAUHDC__@@@Z
	DD	FLAT:?SetOutputDC@CDC@@UAEXPAUHDC__@@@Z
	DD	FLAT:?ReleaseAttribDC@CDC@@UAEXXZ
	DD	FLAT:?ReleaseOutputDC@CDC@@UAEXXZ
	DD	FLAT:?SaveDC@CDC@@UAEHXZ
	DD	FLAT:?RestoreDC@CDC@@UAEHH@Z
	DD	FLAT:?SelectStockObject@CDC@@UAEPAVCGdiObject@@H@Z
	DD	FLAT:?SelectObject@CDC@@UAEPAVCFont@@PAV2@@Z
	DD	FLAT:?SetBkColor@CDC@@UAEKK@Z
	DD	FLAT:?SetTextColor@CDC@@UAEKK@Z
	DD	FLAT:?SetMapMode@CDC@@UAEHH@Z
	DD	FLAT:?SetViewportOrg@CDC@@UAE?AVCPoint@@HH@Z
	DD	FLAT:?OffsetViewportOrg@CDC@@UAE?AVCPoint@@HH@Z
	DD	FLAT:?SetViewportExt@CDC@@UAE?AVCSize@@HH@Z
	DD	FLAT:?ScaleViewportExt@CDC@@UAE?AVCSize@@HHHH@Z
	DD	FLAT:?SetWindowExt@CDC@@UAE?AVCSize@@HH@Z
	DD	FLAT:?ScaleWindowExt@CDC@@UAE?AVCSize@@HHHH@Z
	DD	FLAT:?GetClipBox@CDC@@UBEHPAUtagRECT@@@Z
	DD	FLAT:?PtVisible@CDC@@UBEHHH@Z
	DD	FLAT:?RectVisible@CDC@@UBEHPBUtagRECT@@@Z
	DD	FLAT:?TextOutA@CDC@@UAEHHHPBDH@Z
	DD	FLAT:?ExtTextOutA@CDC@@UAEHHHIPBUtagRECT@@PBDIPAH@Z
	DD	FLAT:?TabbedTextOutA@CDC@@UAE?AVCSize@@HHPBDHHPAHH@Z
	DD	FLAT:?DrawTextA@CDC@@UAEHPBDHPAUtagRECT@@I@Z
	DD	FLAT:?DrawTextExA@CDC@@UAEHPADHPAUtagRECT@@IPAUtagDRAWTEXTPARAMS@@@Z
	DD	FLAT:?GrayStringA@CDC@@UAEHPAVCBrush@@P6GHPAUHDC__@@JH@ZJHHHHH@Z
	DD	FLAT:?Escape@CDC@@UAEHHHPBDPAX@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CHeaderCtrl@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CHeaderCtrl@@8 DD FLAT:??_R0?AVCHeaderCtrl@@@8 ; CHeaderCtrl::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CHeaderCtrl@@8
rdata$r	ENDS
;	COMDAT ??_R2CHeaderCtrl@@8
rdata$r	SEGMENT
??_R2CHeaderCtrl@@8 DD FLAT:??_R1A@?0A@EA@CHeaderCtrl@@8 ; CHeaderCtrl::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CHeaderCtrl@@8
rdata$r	SEGMENT
??_R3CHeaderCtrl@@8 DD 00H				; CHeaderCtrl::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CHeaderCtrl@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCHeaderCtrl@@@8
data$rs	SEGMENT
??_R0?AVCHeaderCtrl@@@8 DD FLAT:??_7type_info@@6B@	; CHeaderCtrl `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCHeaderCtrl@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CHeaderCtrl@@6B@
rdata$r	SEGMENT
??_R4CHeaderCtrl@@6B@ DD 00H				; CHeaderCtrl::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCHeaderCtrl@@@8
	DD	FLAT:??_R3CHeaderCtrl@@8
rdata$r	ENDS
;	COMDAT ??_R2CCmdTarget@@8
rdata$r	SEGMENT
??_R2CCmdTarget@@8 DD FLAT:??_R1A@?0A@EA@CCmdTarget@@8	; CCmdTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CCmdTarget@@8
rdata$r	SEGMENT
??_R3CCmdTarget@@8 DD 00H				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
data$rs	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R2CWnd@@8
rdata$r	SEGMENT
??_R2CWnd@@8 DD	FLAT:??_R1A@?0A@EA@CWnd@@8		; CWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWnd@@8
rdata$r	SEGMENT
??_R3CWnd@@8 DD	00H					; CWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
data$rs	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBitmap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBitmap@@8 DD FLAT:??_R0?AVCBitmap@@@8	; CBitmap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBitmap@@8
rdata$r	ENDS
;	COMDAT ??_R2CBitmap@@8
rdata$r	SEGMENT
??_R2CBitmap@@8 DD FLAT:??_R1A@?0A@EA@CBitmap@@8	; CBitmap::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGdiObject@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CBitmap@@8
rdata$r	SEGMENT
??_R3CBitmap@@8 DD 00H					; CBitmap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CBitmap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBitmap@@@8
data$rs	SEGMENT
??_R0?AVCBitmap@@@8 DD FLAT:??_7type_info@@6B@		; CBitmap `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBitmap@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CBitmap@@6B@
rdata$r	SEGMENT
??_R4CBitmap@@6B@ DD 00H				; CBitmap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBitmap@@@8
	DD	FLAT:??_R3CBitmap@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CPen@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CPen@@8 DD FLAT:??_R0?AVCPen@@@8		; CPen::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CPen@@8
rdata$r	ENDS
;	COMDAT ??_R2CPen@@8
rdata$r	SEGMENT
??_R2CPen@@8 DD	FLAT:??_R1A@?0A@EA@CPen@@8		; CPen::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGdiObject@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CPen@@8
rdata$r	SEGMENT
??_R3CPen@@8 DD	00H					; CPen::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CPen@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCPen@@@8
data$rs	SEGMENT
??_R0?AVCPen@@@8 DD FLAT:??_7type_info@@6B@		; CPen `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCPen@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CPen@@6B@
rdata$r	SEGMENT
??_R4CPen@@6B@ DD 00H					; CPen::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCPen@@@8
	DD	FLAT:??_R3CPen@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGdiObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGdiObject@@8 DD FLAT:??_R0?AVCGdiObject@@@8 ; CGdiObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGdiObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CGdiObject@@8
rdata$r	SEGMENT
??_R2CGdiObject@@8 DD FLAT:??_R1A@?0A@EA@CGdiObject@@8	; CGdiObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CGdiObject@@8
rdata$r	SEGMENT
??_R3CGdiObject@@8 DD 00H				; CGdiObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGdiObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGdiObject@@@8
data$rs	SEGMENT
??_R0?AVCGdiObject@@@8 DD FLAT:??_7type_info@@6B@	; CGdiObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGdiObject@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CGdiObject@@6B@
rdata$r	SEGMENT
??_R4CGdiObject@@6B@ DD 00H				; CGdiObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGdiObject@@@8
	DD	FLAT:??_R3CGdiObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$rs	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$rs	ENDS
;	COMDAT ??_7CHeaderCtrl@@6B@
CONST	SEGMENT
??_7CHeaderCtrl@@6B@ DD FLAT:??_R4CHeaderCtrl@@6B@	; CHeaderCtrl::`vftable'
	DD	FLAT:?GetRuntimeClass@CHeaderCtrl@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECHeaderCtrl@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CHeaderCtrl@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CHeaderCtrl@@UAEHKABUtagRECT@@PAVCWnd@@I@Z
	DD	FLAT:?CreateEx@CHeaderCtrl@@UAEHKKABUtagRECT@@PAVCWnd@@I@Z
	DD	FLAT:?DrawItem@CHeaderCtrl@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
CONST	ENDS
;	COMDAT ??_C@_0N@OMEMOKLE@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ@
CONST	SEGMENT
??_C@_0N@OMEMOKLE@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ@ DB '%Ts (%Ts:%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HBOOMJBF@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ?6?$CFTs@
CONST	SEGMENT
??_C@_0BB@HBOOMJBF@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ?6?$CFTs@ DB '%Ts (%Ts:%d'
	DB	')', 0aH, '%Ts', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@
CONST	SEGMENT
??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@ DB 'Exception throw'
	DB	'n in destructor', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.29.30133\atlmfc\include\afxwin1.inl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT
??_7CBitmap@@6B@ DD FLAT:??_R4CBitmap@@6B@		; CBitmap::`vftable'
	DD	FLAT:?GetRuntimeClass@CBitmap@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECBitmap@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CPen@@6B@
CONST	SEGMENT
??_7CPen@@6B@ DD FLAT:??_R4CPen@@6B@			; CPen::`vftable'
	DD	FLAT:?GetRuntimeClass@CPen@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECPen@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT
??_7CGdiObject@@6B@ DD FLAT:??_R4CGdiObject@@6B@	; CGdiObject::`vftable'
	DD	FLAT:?GetRuntimeClass@CGdiObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECGdiObject@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_R0PAVCException@@@8
data$r	SEGMENT
??_R0PAVCException@@@8 DD FLAT:??_7type_info@@6B@	; CException * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAVCException@@', 00H
data$r	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnPaint@CXHeaderCtrl@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnPaint@CXHeaderCtrl@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnPaint@CXHeaderCtrl@@IAEXXZ$2
	DD	01H
	DD	FLAT:__unwindfunclet$?OnPaint@CXHeaderCtrl@@IAEXXZ$3
	DD	00H
	DD	FLAT:__unwindfunclet$?OnPaint@CXHeaderCtrl@@IAEXXZ$1
__ehfuncinfo$?OnPaint@CXHeaderCtrl@@IAEXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?OnPaint@CXHeaderCtrl@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DrawBitmap@CXHeaderCtrl@@IAEHPAVCDC@@VCRect@@PAU_HD_ITEMA@@PAVCBitmap@@PAUtagBITMAP@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DrawBitmap@CXHeaderCtrl@@IAEHPAVCDC@@VCRect@@PAU_HD_ITEMA@@PAVCBitmap@@PAUtagBITMAP@@H@Z$0
__ehfuncinfo$?DrawBitmap@CXHeaderCtrl@@IAEHPAVCDC@@VCRect@@PAU_HD_ITEMA@@PAVCBitmap@@PAUtagBITMAP@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DrawBitmap@CXHeaderCtrl@@IAEHPAVCDC@@VCRect@@PAU_HD_ITEMA@@PAVCBitmap@@PAUtagBITMAP@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DrawCtrl@CXHeaderCtrl@@IAEXPAVCDC@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DrawCtrl@CXHeaderCtrl@@IAEXPAVCDC@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DrawCtrl@CXHeaderCtrl@@IAEXPAVCDC@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DrawCtrl@CXHeaderCtrl@@IAEXPAVCDC@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?DrawCtrl@CXHeaderCtrl@@IAEXPAVCDC@@@Z$3
__ehfuncinfo$?DrawCtrl@CXHeaderCtrl@@IAEXPAVCDC@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?DrawCtrl@CXHeaderCtrl@@IAEXPAVCDC@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DrawItem@CXHeaderCtrl@@UAEXPAVCDC@@VCRect@@PAU_HD_ITEMA@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DrawItem@CXHeaderCtrl@@UAEXPAVCDC@@VCRect@@PAU_HD_ITEMA@@@Z$0
__ehfuncinfo$?DrawItem@CXHeaderCtrl@@UAEXPAVCDC@@VCRect@@PAU_HD_ITEMA@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DrawItem@CXHeaderCtrl@@UAEXPAVCDC@@VCRect@@PAU_HD_ITEMA@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateObject@CXHeaderCtrl@@SGPAVCObject@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateObject@CXHeaderCtrl@@SGPAVCObject@@XZ$0
__ehfuncinfo$?CreateObject@CXHeaderCtrl@@SGPAVCObject@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateObject@CXHeaderCtrl@@SGPAVCObject@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CMemDC@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CMemDC@@QAE@PAVCDC@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CMemDC@@QAE@PAVCDC@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CMemDC@@QAE@PAVCDC@@@Z$1
__ehfuncinfo$??0CMemDC@@QAE@PAVCDC@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CMemDC@@QAE@PAVCDC@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??1CGdiObject@@UAE@XZ$3 DD 00H
	DD	FLAT:??_R0PAVCException@@@8
	DD	0fffffde4H
	DD	FLAT:__catch$??1CGdiObject@@UAE@XZ$0
__tryblocktable$??1CGdiObject@@UAE@XZ DD 00H
	DD	00H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??1CGdiObject@@UAE@XZ$3
__unwindtable$??1CGdiObject@@UAE@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$??1CGdiObject@@UAE@XZ$2
__ehfuncinfo$??1CGdiObject@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1CGdiObject@@UAE@XZ
	DD	01H
	DD	FLAT:__tryblocktable$??1CGdiObject@@UAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCXHeaderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCXHeaderCtrl@@UAEPAXI@Z PROC			; CXHeaderCtrl::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 77   : {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CXHeaderCtrl@@6B@

; 78   : }

  0000c	e8 00 00 00 00	 call	 ??1CHeaderCtrl@@UAE@XZ	; CHeaderCtrl::~CHeaderCtrl
  00011	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00014	a8 01		 test	 al, 1
  00016	74 22		 je	 SHORT $LN12@scalar
  00018	a8 04		 test	 al, 4
  0001a	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
$LN3@scalar:
  0002c	68 c8 00 00 00	 push	 200			; 000000c8H
  00031	56		 push	 esi
  00032	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00037	83 c4 08	 add	 esp, 8
$LN12@scalar:
  0003a	8b c6		 mov	 eax, esi
  0003c	5e		 pop	 esi
  0003d	5d		 pop	 ebp
  0003e	c2 04 00	 ret	 4
??_GCXHeaderCtrl@@UAEPAXI@Z ENDP			; CXHeaderCtrl::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?GetMessageMap@CXHeaderCtrl@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetMessageMap@CXHeaderCtrl@@MBEPBUAFX_MSGMAP@@XZ PROC	; CXHeaderCtrl::GetMessageMap, COMDAT
; _this$ = ecx

; 34   : BEGIN_MESSAGE_MAP(CXHeaderCtrl, CHeaderCtrl)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CXHeaderCtrl@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  00005	c3		 ret	 0
?GetMessageMap@CXHeaderCtrl@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CXHeaderCtrl::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?GetThisMessageMap@CXHeaderCtrl@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CXHeaderCtrl@@KGPBUAFX_MSGMAP@@XZ PROC ; CXHeaderCtrl::GetThisMessageMap, COMDAT

; 35   : 	//{{AFX_MSG_MAP(CXHeaderCtrl)
; 36   : 	ON_MESSAGE(HDM_INSERTITEMA, OnInsertItem)
; 37   : 	ON_MESSAGE(HDM_INSERTITEMW, OnInsertItem)
; 38   : 	ON_MESSAGE(HDM_DELETEITEM, OnDeleteItem)
; 39   : 	ON_MESSAGE(HDM_SETIMAGELIST, OnSetImageList)
; 40   : 	ON_MESSAGE(HDM_LAYOUT, OnLayout)
; 41   : 	ON_WM_PAINT()
; 42   : 	ON_WM_SYSCOLORCHANGE()
; 43   : 	ON_WM_ERASEBKGND()
; 44   : 	//}}AFX_MSG_MAP
; 45   : END_MESSAGE_MAP()

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CXHeaderCtrl@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  00005	c3		 ret	 0
?GetThisMessageMap@CXHeaderCtrl@@KGPBUAFX_MSGMAP@@XZ ENDP ; CXHeaderCtrl::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?OnSysColorChange@CXHeaderCtrl@@IAEXXZ
_TEXT	SEGMENT
?OnSysColorChange@CXHeaderCtrl@@IAEXXZ PROC		; CXHeaderCtrl::OnSysColorChange, COMDAT
; _this$ = ecx

; 448  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 449  : 	TRACE(_T("in CXHeaderCtrl::OnSysColorChange\n"));
; 450  : 
; 451  : 	CHeaderCtrl::OnSysColorChange();

  00003	e8 00 00 00 00	 call	 ?OnSysColorChange@CWnd@@IAEXXZ ; CWnd::OnSysColorChange

; 452  : 	
; 453  : //	m_cr3DHighLight = ::GetSysColor(COLOR_3DHIGHLIGHT);
; 454  : 	m_cr3DHighLight = RGB(175,194,221);

  00008	c7 86 b0 00 00
	00 af c2 dd 00	 mov	 DWORD PTR [esi+176], 14533295 ; 00ddc2afH

; 455  : //	m_cr3DShadow    = ::GetSysColor(COLOR_3DSHADOW);
; 456  : 	m_cr3DShadow = RGB(103,119,138);

  00012	c7 86 b4 00 00
	00 67 77 8a 00	 mov	 DWORD PTR [esi+180], 9074535 ; 008a7767H

; 457  : //	m_cr3DFace      = ::GetSysColor(COLOR_3DFACE);
; 458  : 	m_cr3DFace		= RGB(175,194,221);

  0001c	c7 86 b8 00 00
	00 af c2 dd 00	 mov	 DWORD PTR [esi+184], 14533295 ; 00ddc2afH

; 459  : //	m_crBtnText     = ::GetSysColor(COLOR_BTNTEXT);
; 460  : 	m_crBtnText		= RGB(0,0,0);

  00026	c7 86 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+188], 0
  00030	5e		 pop	 esi

; 461  : }

  00031	c3		 ret	 0
?OnSysColorChange@CXHeaderCtrl@@IAEXXZ ENDP		; CXHeaderCtrl::OnSysColorChange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\MemDC.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\MemDC.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\MemDC.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\MemDC.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?OnPaint@CXHeaderCtrl@@IAEXXZ
_TEXT	SEGMENT
$T2 = -160						; size = 8
_dc$ = -152						; size = 84
_MemDC$3 = -68						; size = 52
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?OnPaint@CXHeaderCtrl@@IAEXXZ PROC			; CXHeaderCtrl::OnPaint, COMDAT
; _this$ = ecx

; 474  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnPaint@CXHeaderCtrl@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 94 00 00
	00		 sub	 esp, 148		; 00000094H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	50		 push	 eax
  00023	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00026	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002c	8b f1		 mov	 esi, ecx

; 475  :     CPaintDC dc(this);

  0002e	56		 push	 esi
  0002f	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _dc$[ebp]
  00035	e8 00 00 00 00	 call	 ??0CPaintDC@@QAE@PAVCWnd@@@Z ; CPaintDC::CPaintDC

; 476  : 
; 477  :     if (m_bDoubleBuffer)

  0003a	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00048	0f 84 ea 00 00
	00		 je	 $LN2@OnPaint
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\MemDC.h

; 28   :     CMemDC(CDC* pDC) : CDC()

  0004e	8d 4d bc	 lea	 ecx, DWORD PTR _MemDC$3[ebp]
  00051	e8 00 00 00 00	 call	 ??0CDC@@QAE@XZ		; CDC::CDC

; 29   :     {

  00056	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _MemDC$3[ebp], OFFSET ??_7CMemDC@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 70   : 	{ m_hObject = NULL; }

  0005d	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _MemDC$3[ebp+20], 0

; 177  : 	{ }

  00064	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _MemDC$3[ebp+16], OFFSET ??_7CBitmap@@6B@
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\MemDC.h

; 34   :         m_bMemDC = !pDC->IsPrinting();

  0006b	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _dc$[ebp+12]
  00071	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _dc$[ebp]
  00077	89 45 d8	 mov	 DWORD PTR _MemDC$3[ebp+28], eax
  0007a	0f 57 c0	 xorps	 xmm0, xmm0
  0007d	33 c0		 xor	 eax, eax
  0007f	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00083	85 c9		 test	 ecx, ecx
  00085	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _MemDC$3[ebp+24], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  0008c	0f 11 45 dc	 movups	 XMMWORD PTR _MemDC$3[ebp+32], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\MemDC.h

; 34   :         m_bMemDC = !pDC->IsPrinting();

  00090	0f 94 c0	 sete	 al
  00093	89 45 ec	 mov	 DWORD PTR _MemDC$3[ebp+48], eax
  00096	85 c9		 test	 ecx, ecx

; 35   :               
; 36   :         if (m_bMemDC)    // Create a Memory DC

  00098	75 70		 jne	 SHORT $LN8@OnPaint

; 37   :         {
; 38   :             pDC->GetClipBox(&m_rect);

  0009a	8d 45 dc	 lea	 eax, DWORD PTR _MemDC$3[ebp+32]
  0009d	50		 push	 eax
  0009e	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _dc$[ebp]
  000a4	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _dc$[ebp]
  000aa	ff 50 58	 call	 DWORD PTR [eax+88]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 330  : 	{ return Attach(::CreateCompatibleDC(pDC->GetSafeHdc())); }

  000ad	ff b5 6c ff ff
	ff		 push	 DWORD PTR _dc$[ebp+4]
  000b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateCompatibleDC@4
  000b9	50		 push	 eax
  000ba	8d 4d bc	 lea	 ecx, DWORD PTR _MemDC$3[ebp]
  000bd	e8 00 00 00 00	 call	 ?Attach@CDC@@QAEHPAUHDC__@@@Z ; CDC::Attach
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 581  : 	return bottom - top;

  000c2	8b 4d e8	 mov	 ecx, DWORD PTR _MemDC$3[ebp+44]
  000c5	2b 4d e0	 sub	 ecx, DWORD PTR _MemDC$3[ebp+36]

; 576  : 	return right - left;

  000c8	8b 45 e4	 mov	 eax, DWORD PTR _MemDC$3[ebp+40]
  000cb	2b 45 dc	 sub	 eax, DWORD PTR _MemDC$3[ebp+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 217  : 	{ return Attach(::CreateCompatibleBitmap(pDC->m_hDC, nWidth, nHeight)); }

  000ce	51		 push	 ecx
  000cf	50		 push	 eax
  000d0	ff b5 6c ff ff
	ff		 push	 DWORD PTR _dc$[ebp+4]
  000d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateCompatibleBitmap@12
  000dc	50		 push	 eax
  000dd	8d 4d cc	 lea	 ecx, DWORD PTR _MemDC$3[ebp+16]
  000e0	e8 00 00 00 00	 call	 ?Attach@CGdiObject@@QAEHPAX@Z ; CGdiObject::Attach

; 361  : 	{ ASSERT(m_hDC != NULL); return (CBitmap*) SelectGdiObject(m_hDC, pBitmap->GetSafeHandle()); }

  000e5	ff 75 d0	 push	 DWORD PTR _MemDC$3[ebp+20]
  000e8	ff 75 c0	 push	 DWORD PTR _MemDC$3[ebp+4]
  000eb	e8 00 00 00 00	 call	 ?SelectGdiObject@CDC@@KGPAVCGdiObject@@PAUHDC__@@PAX@Z ; CDC::SelectGdiObject
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\MemDC.h

; 42   :             SetWindowOrg(m_rect.left, m_rect.top);

  000f0	ff 75 e0	 push	 DWORD PTR _MemDC$3[ebp+36]
  000f3	89 45 d4	 mov	 DWORD PTR _MemDC$3[ebp+24], eax
  000f6	8d 4d bc	 lea	 ecx, DWORD PTR _MemDC$3[ebp]
  000f9	ff 75 dc	 push	 DWORD PTR _MemDC$3[ebp+32]
  000fc	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00102	50		 push	 eax
  00103	e8 00 00 00 00	 call	 ?SetWindowOrg@CDC@@QAE?AVCPoint@@HH@Z ; CDC::SetWindowOrg

; 43   :         }

  00108	eb 15		 jmp	 SHORT $LN9@OnPaint
$LN8@OnPaint:

; 44   :         else        // Make a copy of the relevent parts of the current DC for printing
; 45   :         {
; 46   :             m_bPrinting = pDC->m_bPrinting;
; 47   :             m_hDC       = pDC->m_hDC;

  0010a	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR _dc$[ebp+4]
  00110	89 45 c0	 mov	 DWORD PTR _MemDC$3[ebp+4], eax

; 48   :             m_hAttribDC = pDC->m_hAttribDC;

  00113	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _dc$[ebp+8]
  00119	89 4d c8	 mov	 DWORD PTR _MemDC$3[ebp+12], ecx
  0011c	89 45 c4	 mov	 DWORD PTR _MemDC$3[ebp+8], eax
$LN9@OnPaint:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 480  :         DrawCtrl(&MemDC);

  0011f	8d 45 bc	 lea	 eax, DWORD PTR _MemDC$3[ebp]
  00122	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00126	50		 push	 eax
  00127	8b ce		 mov	 ecx, esi
  00129	e8 00 00 00 00	 call	 ?DrawCtrl@CXHeaderCtrl@@IAEXPAVCDC@@@Z ; CXHeaderCtrl::DrawCtrl

; 481  :     }

  0012e	8d 4d bc	 lea	 ecx, DWORD PTR _MemDC$3[ebp]
  00131	e8 00 00 00 00	 call	 ??1CMemDC@@UAE@XZ	; CMemDC::~CMemDC
  00136	eb 0e		 jmp	 SHORT $LN3@OnPaint
$LN2@OnPaint:

; 482  :     else
; 483  :         DrawCtrl(&dc);

  00138	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _dc$[ebp]
  0013e	8b ce		 mov	 ecx, esi
  00140	50		 push	 eax
  00141	e8 00 00 00 00	 call	 ?DrawCtrl@CXHeaderCtrl@@IAEXPAVCDC@@@Z ; CXHeaderCtrl::DrawCtrl
$LN3@OnPaint:

; 484  : }

  00146	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _dc$[ebp]
  0014c	e8 00 00 00 00	 call	 ??1CPaintDC@@UAE@XZ	; CPaintDC::~CPaintDC
  00151	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00154	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0015b	59		 pop	 ecx
  0015c	5e		 pop	 esi
  0015d	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00160	33 cd		 xor	 ecx, ebp
  00162	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00167	8b e5		 mov	 esp, ebp
  00169	5d		 pop	 ebp
  0016a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnPaint@CXHeaderCtrl@@IAEXXZ$0:
  00000	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _dc$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CPaintDC@@UAE@XZ	; CPaintDC::~CPaintDC
__unwindfunclet$?OnPaint@CXHeaderCtrl@@IAEXXZ$2:
  0000b	8d 4d bc	 lea	 ecx, DWORD PTR _MemDC$3[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1CDC@@UAE@XZ		; CDC::~CDC
__unwindfunclet$?OnPaint@CXHeaderCtrl@@IAEXXZ$3:
  00013	8d 4d cc	 lea	 ecx, DWORD PTR _MemDC$3[ebp+16]
  00016	e9 00 00 00 00	 jmp	 ??1CBitmap@@UAE@XZ	; CBitmap::~CBitmap
__unwindfunclet$?OnPaint@CXHeaderCtrl@@IAEXXZ$1:
  0001b	8d 4d bc	 lea	 ecx, DWORD PTR _MemDC$3[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1CMemDC@@UAE@XZ	; CMemDC::~CMemDC
  00023	cc		 int	 3
  00024	cc		 int	 3
  00025	cc		 int	 3
  00026	cc		 int	 3
  00027	cc		 int	 3
__ehhandler$?OnPaint@CXHeaderCtrl@@IAEXXZ:
  00028	90		 npad	 1
  00029	90		 npad	 1
  0002a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00031	8b 8a 64 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-156]
  00037	33 c8		 xor	 ecx, eax
  00039	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003e	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00041	33 c8		 xor	 ecx, eax
  00043	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00048	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnPaint@CXHeaderCtrl@@IAEXXZ
  0004d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnPaint@CXHeaderCtrl@@IAEXXZ ENDP			; CXHeaderCtrl::OnPaint
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?OnEraseBkgnd@CXHeaderCtrl@@IAEHPAVCDC@@@Z
_TEXT	SEGMENT
_pDC$ = 8						; size = 4
?OnEraseBkgnd@CXHeaderCtrl@@IAEHPAVCDC@@@Z PROC		; CXHeaderCtrl::OnEraseBkgnd, COMDAT
; _this$ = ecx

; 467  : 	UNUSED_ALWAYS(pDC);
; 468  : 	return TRUE;

  00000	b8 01 00 00 00	 mov	 eax, 1

; 469  : }

  00005	c2 04 00	 ret	 4
?OnEraseBkgnd@CXHeaderCtrl@@IAEHPAVCDC@@@Z ENDP		; CXHeaderCtrl::OnEraseBkgnd
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?OnSetImageList@CXHeaderCtrl@@IAEJIJ@Z
_TEXT	SEGMENT
_info$ = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_lParam$ = 12						; size = 4
?OnSetImageList@CXHeaderCtrl@@IAEJIJ@Z PROC		; CXHeaderCtrl::OnSetImageList, COMDAT
; _this$ = ecx

; 419  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _lParam$[ebp]
  00013	56		 push	 esi

; 420  : 	CImageList* pImageList;
; 421  : 	pImageList = CImageList::FromHandle((HIMAGELIST)lParam);

  00014	50		 push	 eax
  00015	8b f1		 mov	 esi, ecx
  00017	e8 00 00 00 00	 call	 ?FromHandle@CImageList@@SGPAV1@PAU_IMAGELIST@@@Z ; CImageList::FromHandle
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 881  : 	{ ASSERT(m_hImageList != NULL); return ImageList_GetImageInfo(m_hImageList, nImage, pImageInfo); }

  0001c	8d 4d dc	 lea	 ecx, DWORD PTR _info$[ebp]
  0001f	51		 push	 ecx
  00020	6a 00		 push	 0
  00022	ff 70 04	 push	 DWORD PTR [eax+4]
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ImageList_GetImageInfo@12
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 424  : 	if (pImageList->GetImageInfo(0, &info))

  0002b	85 c0		 test	 eax, eax
  0002d	74 18		 je	 SHORT $LN2@OnSetImage

; 425  : 	{
; 426  : 		m_sizeImage.cx = info.rcImage.right - info.rcImage.left;

  0002f	8b 45 f4	 mov	 eax, DWORD PTR _info$[ebp+24]
  00032	2b 45 ec	 sub	 eax, DWORD PTR _info$[ebp+16]
  00035	89 86 88 00 00
	00		 mov	 DWORD PTR [esi+136], eax

; 427  : 		m_sizeImage.cy = info.rcImage.bottom - info.rcImage.top;

  0003b	8b 45 f8	 mov	 eax, DWORD PTR _info$[ebp+28]
  0003e	2b 45 f0	 sub	 eax, DWORD PTR _info$[ebp+20]
  00041	89 86 8c 00 00
	00		 mov	 DWORD PTR [esi+140], eax
$LN2@OnSetImage:

; 428  : 	}
; 429  : 
; 430  : 	return Default();

  00047	8b ce		 mov	 ecx, esi
  00049	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default

; 431  : }

  0004e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00051	33 cd		 xor	 ecx, ebp
  00053	5e		 pop	 esi
  00054	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 08 00	 ret	 8
?OnSetImageList@CXHeaderCtrl@@IAEJIJ@Z ENDP		; CXHeaderCtrl::OnSetImageList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?OnLayout@CXHeaderCtrl@@IAEJIJ@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_lParam$ = 12						; size = 4
?OnLayout@CXHeaderCtrl@@IAEJIJ@Z PROC			; CXHeaderCtrl::OnLayout, COMDAT
; _this$ = ecx

; 436  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi

; 437  : 	LPHDLAYOUT lphdlayout = (LPHDLAYOUT)lParam;
; 438  : 
; 439  : 	if (m_bStaticBorder)

  00007	8b 7d 0c	 mov	 edi, DWORD PTR _lParam$[ebp]
  0000a	83 be 98 00 00
	00 00		 cmp	 DWORD PTR [esi+152], 0
  00011	74 0f		 je	 SHORT $LN2@OnLayout

; 440  : 		lphdlayout->prc->right += GetSystemMetrics(SM_CXBORDER)*2;

  00013	6a 05		 push	 5
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  0001b	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0001d	03 c0		 add	 eax, eax
  0001f	01 41 08	 add	 DWORD PTR [ecx+8], eax
$LN2@OnLayout:

; 441  : 
; 442  : 	return CHeaderCtrl::DefWindowProc(HDM_LAYOUT, 0, lParam);

  00022	57		 push	 edi
  00023	6a 00		 push	 0
  00025	68 05 12 00 00	 push	 4613			; 00001205H
  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?DefWindowProcA@CWnd@@MAEJIIJ@Z ; CWnd::DefWindowProcA
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi

; 443  : }

  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
?OnLayout@CXHeaderCtrl@@IAEJIJ@Z ENDP			; CXHeaderCtrl::OnLayout
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?OnInsertItem@CXHeaderCtrl@@IAEJIJ@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?OnInsertItem@CXHeaderCtrl@@IAEJIJ@Z PROC		; CXHeaderCtrl::OnInsertItem, COMDAT
; _this$ = ecx

; 406  : 	return Default();

  00000	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default

; 407  : }

  00005	c2 08 00	 ret	 8
?OnInsertItem@CXHeaderCtrl@@IAEJIJ@Z ENDP		; CXHeaderCtrl::OnInsertItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?OnDeleteItem@CXHeaderCtrl@@IAEJIJ@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?OnDeleteItem@CXHeaderCtrl@@IAEJIJ@Z PROC		; CXHeaderCtrl::OnDeleteItem, COMDAT
; _this$ = ecx

; 413  : 	return Default();

  00000	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default

; 414  : }

  00005	c2 08 00	 ret	 8
?OnDeleteItem@CXHeaderCtrl@@IAEJIJ@Z ENDP		; CXHeaderCtrl::OnDeleteItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?DrawTextA@CXHeaderCtrl@@IAEHPAVCDC@@VCRect@@PAU_HD_ITEMA@@@Z
_TEXT	SEGMENT
_size$1 = -12						; size = 8
$T2 = -4						; size = 4
_pDC$ = 8						; size = 4
_rect$ = 12						; size = 16
_lphdi$ = 28						; size = 4
?DrawTextA@CXHeaderCtrl@@IAEHPAVCDC@@VCRect@@PAU_HD_ITEMA@@@Z PROC ; CXHeaderCtrl::DrawTextA, COMDAT
; _this$ = ecx

; 383  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	8b 5d 08	 mov	 ebx, DWORD PTR _pDC$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 386  : 	pDC->SetTextColor(m_crBtnText);//header text

  0000c	ff b1 bc 00 00
	00		 push	 DWORD PTR [ecx+188]
  00012	8b 03		 mov	 eax, DWORD PTR [ebx]
  00014	8b cb		 mov	 ecx, ebx
  00016	8b 7d 1c	 mov	 edi, DWORD PTR _lphdi$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 304  : 	cx = 0;

  00019	33 f6		 xor	 esi, esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 386  : 	pDC->SetTextColor(m_crBtnText);//header text

  0001b	ff 50 38	 call	 DWORD PTR [eax+56]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  0001e	8b 4d 14	 mov	 ecx, DWORD PTR _rect$[ebp+8]
  00021	8b c1		 mov	 eax, ecx
  00023	8b 55 0c	 mov	 edx, DWORD PTR _rect$[ebp]
  00026	2b c2		 sub	 eax, edx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 388  : 	if (rect.Width() > 0 && lphdi->mask & HDI_TEXT && lphdi->fmt & HDF_STRING)

  00028	85 c0		 test	 eax, eax
  0002a	7e 55		 jle	 SHORT $LN2@DrawTextA
  0002c	f6 07 02	 test	 BYTE PTR [edi], 2
  0002f	74 50		 je	 SHORT $LN2@DrawTextA
  00031	f7 47 14 00 40
	00 00		 test	 DWORD PTR [edi+20], 16384 ; 00004000H
  00038	74 47		 je	 SHORT $LN2@DrawTextA

; 390  : 		size = pDC->GetTextExtent(lphdi->pszText);

  0003a	ff 77 08	 push	 DWORD PTR [edi+8]
  0003d	8d 4d fc	 lea	 ecx, DWORD PTR $T2[ebp]
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 639  : 		VERIFY(::GetTextExtentPoint32(m_hAttribDC, str, (int)str.GetLength(), &size));

  00046	8d 45 f4	 lea	 eax, DWORD PTR _size$1[ebp]
  00049	50		 push	 eax
  0004a	8b 45 fc	 mov	 eax, DWORD PTR $T2[ebp]
  0004d	ff 70 f4	 push	 DWORD PTR [eax-12]
  00050	50		 push	 eax
  00051	ff 73 08	 push	 DWORD PTR [ebx+8]
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTextExtentPoint32A@16
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 390  : 		size = pDC->GetTextExtent(lphdi->pszText);

  0005a	8b 75 f4	 mov	 esi, DWORD PTR _size$1[ebp]
  0005d	8d 4d fc	 lea	 ecx, DWORD PTR $T2[ebp]
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 391  : 
; 392  : 		// always center column headers
; 393  : 		pDC->DrawText(lphdi->pszText, -1, rect, 

  00066	8b 03		 mov	 eax, DWORD PTR [ebx]
  00068	8d 4d 0c	 lea	 ecx, DWORD PTR _rect$[ebp]
  0006b	68 25 80 00 00	 push	 32805			; 00008025H
  00070	51		 push	 ecx
  00071	6a ff		 push	 -1
  00073	ff 77 08	 push	 DWORD PTR [edi+8]
  00076	8b cb		 mov	 ecx, ebx
  00078	ff 50 70	 call	 DWORD PTR [eax+112]
  0007b	8b 4d 14	 mov	 ecx, DWORD PTR _rect$[ebp+8]
  0007e	8b 55 0c	 mov	 edx, DWORD PTR _rect$[ebp]
$LN2@DrawTextA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  00081	2b ca		 sub	 ecx, edx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 398  : 	size.cx = rect.Width()>size.cx ? size.cx:rect.Width();

  00083	3b ce		 cmp	 ecx, esi

; 399  : 	return size.cx>0 ? size.cx:0;

  00085	5f		 pop	 edi
  00086	0f 4e f1	 cmovle	 esi, ecx
  00089	33 c0		 xor	 eax, eax
  0008b	85 f6		 test	 esi, esi
  0008d	0f 4f c6	 cmovg	 eax, esi
  00090	5e		 pop	 esi
  00091	5b		 pop	 ebx

; 400  : }

  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 18 00	 ret	 24			; 00000018H
?DrawTextA@CXHeaderCtrl@@IAEHPAVCDC@@VCRect@@PAU_HD_ITEMA@@@Z ENDP ; CXHeaderCtrl::DrawTextA
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?DrawBitmap@CXHeaderCtrl@@IAEHPAVCDC@@VCRect@@PAU_HD_ITEMA@@PAVCBitmap@@PAUtagBITMAP@@H@Z
_TEXT	SEGMENT
_dc$3 = -44						; size = 16
_point$1$sroa$206$1$ = -28				; size = 4
_pBitmap$GSCopy$1$ = -24				; size = 4
_iWidth$1$ = -20					; size = 4
_point$1$sroa$205$1$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
_pDC$ = 8						; size = 4
_rect$ = 12						; size = 16
_lphdi$ = 28						; size = 4
_pBitmap$ = 32						; size = 4
_pBitmapInfo$ = 36					; size = 4
_bRight$ = 40						; size = 4
?DrawBitmap@CXHeaderCtrl@@IAEHPAVCDC@@VCRect@@PAU_HD_ITEMA@@PAVCBitmap@@PAUtagBITMAP@@H@Z PROC ; CXHeaderCtrl::DrawBitmap, COMDAT
; _this$ = ecx

; 339  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DrawBitmap@CXHeaderCtrl@@IAEHPAVCDC@@VCRect@@PAU_HD_ITEMA@@PAVCBitmap@@PAUtagBITMAP@@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b 45 20	 mov	 eax, DWORD PTR _pBitmap$[ebp]
  0002b	8b 5d 08	 mov	 ebx, DWORD PTR _pDC$[ebp]
  0002e	8b 75 24	 mov	 esi, DWORD PTR _pBitmapInfo$[ebp]
  00031	89 45 e8	 mov	 DWORD PTR _pBitmap$GSCopy$1$[ebp], eax

; 340  : 	UNUSED_ALWAYS(lphdi);
; 341  : 
; 342  : 	int iWidth = 0;
; 343  : 
; 344  : 	if (pBitmap)

  00034	85 c0		 test	 eax, eax
  00036	0f 84 eb 00 00
	00		 je	 $LN37@DrawBitmap
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  0003c	8b 7d 14	 mov	 edi, DWORD PTR _rect$[ebp+8]
  0003f	8b c7		 mov	 eax, edi
  00041	8b 4d 0c	 mov	 ecx, DWORD PTR _rect$[ebp]
  00044	2b c1		 sub	 eax, ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 346  : 		iWidth = pBitmapInfo->bmWidth;

  00046	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00049	89 55 ec	 mov	 DWORD PTR _iWidth$1$[ebp], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  0004c	89 4d f0	 mov	 DWORD PTR _point$1$sroa$205$1$[ebp], ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 347  : 		if (iWidth <= rect.Width() && rect.Width() > 0)

  0004f	3b d0		 cmp	 edx, eax
  00051	0f 8f d0 00 00
	00		 jg	 $LN37@DrawBitmap
  00057	85 c0		 test	 eax, eax
  00059	0f 8e c8 00 00
	00		 jle	 $LN37@DrawBitmap
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 611  : 	return CPoint((left+right)/2, (top+bottom)/2);

  0005f	8b 45 18	 mov	 eax, DWORD PTR _rect$[ebp+12]
  00062	03 45 10	 add	 eax, DWORD PTR _rect$[ebp+4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 351  : 			point.y = rect.CenterPoint().y - (pBitmapInfo->bmHeight >> 1);

  00065	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 354  : 				point.x = rect.right - iWidth;

  00068	2b 7d ec	 sub	 edi, DWORD PTR _iWidth$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 611  : 	return CPoint((left+right)/2, (top+bottom)/2);

  0006b	99		 cdq
  0006c	2b c2		 sub	 eax, edx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 351  : 			point.y = rect.CenterPoint().y - (pBitmapInfo->bmHeight >> 1);

  0006e	d1 f9		 sar	 ecx, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 611  : 	return CPoint((left+right)/2, (top+bottom)/2);

  00070	d1 f8		 sar	 eax, 1
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 351  : 			point.y = rect.CenterPoint().y - (pBitmapInfo->bmHeight >> 1);

  00072	2b c1		 sub	 eax, ecx

; 352  : 
; 353  : 			if (bRight)

  00074	83 7d 28 00	 cmp	 DWORD PTR _bRight$[ebp], 0
  00078	89 45 e4	 mov	 DWORD PTR _point$1$sroa$206$1$[ebp], eax

; 355  : 			else
; 356  : 				point.x = rect.left;
; 357  : 
; 358  : 			CDC dc;

  0007b	8d 4d d4	 lea	 ecx, DWORD PTR _dc$3[ebp]
  0007e	8b 45 f0	 mov	 eax, DWORD PTR _point$1$sroa$205$1$[ebp]
  00081	0f 45 c7	 cmovne	 eax, edi
  00084	89 45 f0	 mov	 DWORD PTR _point$1$sroa$205$1$[ebp], eax
  00087	e8 00 00 00 00	 call	 ??0CDC@@QAE@XZ		; CDC::CDC
  0008c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 316  : 	{ return this == NULL ? NULL : m_hDC; }

  00093	85 db		 test	 ebx, ebx
  00095	75 04		 jne	 SHORT $LN23@DrawBitmap
  00097	33 c0		 xor	 eax, eax
  00099	eb 03		 jmp	 SHORT $LN24@DrawBitmap
$LN23@DrawBitmap:
  0009b	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
$LN24@DrawBitmap:

; 330  : 	{ return Attach(::CreateCompatibleDC(pDC->GetSafeHdc())); }

  0009e	50		 push	 eax
  0009f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateCompatibleDC@4
  000a5	50		 push	 eax
  000a6	8d 4d d4	 lea	 ecx, DWORD PTR _dc$3[ebp]
  000a9	e8 00 00 00 00	 call	 ?Attach@CDC@@QAEHPAUHDC__@@@Z ; CDC::Attach
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 359  : 			if (dc.CreateCompatibleDC(pDC) == TRUE) 

  000ae	83 f8 01	 cmp	 eax, 1
  000b1	75 54		 jne	 SHORT $LN7@DrawBitmap
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 361  : 	{ ASSERT(m_hDC != NULL); return (CBitmap*) SelectGdiObject(m_hDC, pBitmap->GetSafeHandle()); }

  000b3	8b 45 e8	 mov	 eax, DWORD PTR _pBitmap$GSCopy$1$[ebp]
  000b6	ff 70 04	 push	 DWORD PTR [eax+4]
  000b9	ff 75 d8	 push	 DWORD PTR _dc$3[ebp+4]
  000bc	e8 00 00 00 00	 call	 ?SelectGdiObject@CDC@@KGPAVCGdiObject@@PAUHDC__@@PAX@Z ; CDC::SelectGdiObject

; 552  : 	{ ASSERT(m_hDC != NULL); return ::BitBlt(m_hDC, x, y, nWidth, nHeight,

  000c1	68 20 00 cc 00	 push	 13369376		; 00cc0020H
  000c6	6a 00		 push	 0
  000c8	6a 00		 push	 0
  000ca	ff 75 d8	 push	 DWORD PTR _dc$3[ebp+4]
  000cd	ff 76 08	 push	 DWORD PTR [esi+8]
  000d0	ff 76 04	 push	 DWORD PTR [esi+4]
  000d3	ff 75 e4	 push	 DWORD PTR _point$1$sroa$206$1$[ebp]
  000d6	ff 75 f0	 push	 DWORD PTR _point$1$sroa$205$1$[ebp]
  000d9	ff 73 04	 push	 DWORD PTR [ebx+4]
  000dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__BitBlt@36
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 362  : 				iWidth = pDC->BitBlt(

  000e2	f7 d8		 neg	 eax

; 363  : 					point.x, point.y, 
; 364  : 					pBitmapInfo->bmWidth, pBitmapInfo->bmHeight, 
; 365  : 					&dc, 
; 366  : 					0, 0, 
; 367  : 					SRCCOPY
; 368  : 				) ? iWidth:0;
; 369  : 			}
; 370  : 			else 
; 371  : 				iWidth = 0;
; 372  : 		}

  000e4	8d 4d d4	 lea	 ecx, DWORD PTR _dc$3[ebp]
  000e7	1b f6		 sbb	 esi, esi
  000e9	23 75 ec	 and	 esi, DWORD PTR _iWidth$1$[ebp]
  000ec	e8 00 00 00 00	 call	 ??1CDC@@UAE@XZ		; CDC::~CDC

; 373  : 		else
; 374  : 			iWidth = 0;
; 375  : 	}
; 376  : 
; 377  : 	return iWidth;

  000f1	8b c6		 mov	 eax, esi

; 378  : }

  000f3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fd	59		 pop	 ecx
  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	5b		 pop	 ebx
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 24 00	 ret	 36			; 00000024H
$LN7@DrawBitmap:

; 363  : 					point.x, point.y, 
; 364  : 					pBitmapInfo->bmWidth, pBitmapInfo->bmHeight, 
; 365  : 					&dc, 
; 366  : 					0, 0, 
; 367  : 					SRCCOPY
; 368  : 				) ? iWidth:0;
; 369  : 			}
; 370  : 			else 
; 371  : 				iWidth = 0;
; 372  : 		}

  00107	8d 4d d4	 lea	 ecx, DWORD PTR _dc$3[ebp]
  0010a	33 f6		 xor	 esi, esi
  0010c	e8 00 00 00 00	 call	 ??1CDC@@UAE@XZ		; CDC::~CDC

; 373  : 		else
; 374  : 			iWidth = 0;
; 375  : 	}
; 376  : 
; 377  : 	return iWidth;

  00111	8b c6		 mov	 eax, esi

; 378  : }

  00113	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00116	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011d	59		 pop	 ecx
  0011e	5f		 pop	 edi
  0011f	5e		 pop	 esi
  00120	5b		 pop	 ebx
  00121	8b e5		 mov	 esp, ebp
  00123	5d		 pop	 ebp
  00124	c2 24 00	 ret	 36			; 00000024H
$LN37@DrawBitmap:
  00127	33 c0		 xor	 eax, eax
  00129	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0012c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00133	59		 pop	 ecx
  00134	5f		 pop	 edi
  00135	5e		 pop	 esi
  00136	5b		 pop	 ebx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 24 00	 ret	 36			; 00000024H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DrawBitmap@CXHeaderCtrl@@IAEHPAVCDC@@VCRect@@PAU_HD_ITEMA@@PAVCBitmap@@PAUtagBITMAP@@H@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _dc$3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDC@@UAE@XZ		; CDC::~CDC
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?DrawBitmap@CXHeaderCtrl@@IAEHPAVCDC@@VCRect@@PAU_HD_ITEMA@@PAVCBitmap@@PAUtagBITMAP@@H@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DrawBitmap@CXHeaderCtrl@@IAEHPAVCDC@@VCRect@@PAU_HD_ITEMA@@PAVCBitmap@@PAUtagBITMAP@@H@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DrawBitmap@CXHeaderCtrl@@IAEHPAVCDC@@VCRect@@PAU_HD_ITEMA@@PAVCBitmap@@PAUtagBITMAP@@H@Z ENDP ; CXHeaderCtrl::DrawBitmap
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?DrawImage@CXHeaderCtrl@@IAEHPAVCDC@@VCRect@@PAU_HD_ITEMA@@H@Z
_TEXT	SEGMENT
_this$GSCopy$1$ = -28					; size = 4
_lphdi$GSCopy$1$ = -24					; size = 4
_point$1$ = -20						; size = 4
_size$1$ = -16						; size = 4
_pImageList$1$ = -12					; size = 4
_pDC$GSCopy$1$ = -8					; size = 4
_size$2$ = -4						; size = 4
_pDC$ = 8						; size = 4
_rect$ = 12						; size = 16
_lphdi$ = 28						; size = 4
_bRight$ = 32						; size = 4
?DrawImage@CXHeaderCtrl@@IAEHPAVCDC@@VCRect@@PAU_HD_ITEMA@@H@Z PROC ; CXHeaderCtrl::DrawImage, COMDAT
; _this$ = ecx

; 292  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	8b 45 08	 mov	 eax, DWORD PTR _pDC$[ebp]
  00009	53		 push	 ebx
  0000a	8b 5d 1c	 mov	 ebx, DWORD PTR _lphdi$[ebp]
  0000d	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn2.inl

; 162  : 	{ ASSERT(::IsWindow(m_hWnd)); return CImageList::FromHandle((HIMAGELIST) ::SendMessage(m_hWnd, HDM_GETIMAGELIST, nImageList, 0L)); }

  0000e	6a 00		 push	 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 292  : {

  00010	8b f1		 mov	 esi, ecx
  00012	89 45 f8	 mov	 DWORD PTR _pDC$GSCopy$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn2.inl

; 162  : 	{ ASSERT(::IsWindow(m_hWnd)); return CImageList::FromHandle((HIMAGELIST) ::SendMessage(m_hWnd, HDM_GETIMAGELIST, nImageList, 0L)); }

  00015	6a 00		 push	 0
  00017	68 09 12 00 00	 push	 4617			; 00001209H
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 292  : {

  0001c	89 75 e4	 mov	 DWORD PTR _this$GSCopy$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn2.inl

; 162  : 	{ ASSERT(::IsWindow(m_hWnd)); return CImageList::FromHandle((HIMAGELIST) ::SendMessage(m_hWnd, HDM_GETIMAGELIST, nImageList, 0L)); }

  0001f	ff 76 20	 push	 DWORD PTR [esi+32]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 292  : {

  00022	89 5d e8	 mov	 DWORD PTR _lphdi$GSCopy$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn2.inl

; 162  : 	{ ASSERT(::IsWindow(m_hWnd)); return CImageList::FromHandle((HIMAGELIST) ::SendMessage(m_hWnd, HDM_GETIMAGELIST, nImageList, 0L)); }

  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ?FromHandle@CImageList@@SGPAV1@PAU_IMAGELIST@@@Z ; CImageList::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 296  : 	if (lphdi->iImage != XHEADERCTRL_NO_IMAGE)

  00031	83 7b 1c 00	 cmp	 DWORD PTR [ebx+28], 0
  00035	89 45 f4	 mov	 DWORD PTR _pImageList$1$[ebp], eax
  00038	0f 84 d6 00 00
	00		 je	 $LN33@DrawImage

; 297  : 	{
; 298  : 		if (pImageList)

  0003e	85 c0		 test	 eax, eax
  00040	0f 84 ce 00 00
	00		 je	 $LN33@DrawImage
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  00046	8b 5d 14	 mov	 ebx, DWORD PTR _rect$[ebp+8]
  00049	57		 push	 edi
  0004a	8b fb		 mov	 edi, ebx
  0004c	2b 7d 0c	 sub	 edi, DWORD PTR _rect$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 300  : 			if (rect.Width() > 0)

  0004f	85 ff		 test	 edi, edi
  00051	0f 8e b2 00 00
	00		 jle	 $LN32@DrawImage

; 304  : 				point.y = rect.CenterPoint().y - (m_sizeImage.cy >> 1);

  00057	8b 86 8c 00 00
	00		 mov	 eax, DWORD PTR [esi+140]
  0005d	89 45 fc	 mov	 DWORD PTR _size$2$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 611  : 	return CPoint((left+right)/2, (top+bottom)/2);

  00060	8b 45 10	 mov	 eax, DWORD PTR _rect$[ebp+4]
  00063	03 45 18	 add	 eax, DWORD PTR _rect$[ebp+12]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 304  : 				point.y = rect.CenterPoint().y - (m_sizeImage.cy >> 1);

  00066	8b 4d fc	 mov	 ecx, DWORD PTR _size$2$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 611  : 	return CPoint((left+right)/2, (top+bottom)/2);

  00069	99		 cdq
  0006a	2b c2		 sub	 eax, edx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 304  : 				point.y = rect.CenterPoint().y - (m_sizeImage.cy >> 1);

  0006c	d1 f9		 sar	 ecx, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 611  : 	return CPoint((left+right)/2, (top+bottom)/2);

  0006e	d1 f8		 sar	 eax, 1
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 304  : 				point.y = rect.CenterPoint().y - (m_sizeImage.cy >> 1);

  00070	2b c1		 sub	 eax, ecx

; 305  : 
; 306  : 				if (bRight)

  00072	83 7d 20 00	 cmp	 DWORD PTR _bRight$[ebp], 0
  00076	89 45 ec	 mov	 DWORD PTR _point$1$[ebp], eax
  00079	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  0007f	74 04		 je	 SHORT $LN5@DrawImage

; 307  : 					point.x = rect.right - m_sizeImage.cx;

  00081	2b d8		 sub	 ebx, eax
  00083	eb 03		 jmp	 SHORT $LN6@DrawImage
$LN5@DrawImage:

; 308  : 				else
; 309  : 					point.x = rect.left;

  00085	8b 5d 0c	 mov	 ebx, DWORD PTR _rect$[ebp]
$LN6@DrawImage:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 877  : 	{ ASSERT(m_hImageList != NULL); return ImageList_GetBkColor(m_hImageList); }

  00088	8b 75 f4	 mov	 esi, DWORD PTR _pImageList$1$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 312  : 				size.cx = rect.Width()<m_sizeImage.cx ? rect.Width():m_sizeImage.cx;

  0008b	3b f8		 cmp	 edi, eax
  0008d	0f 4c c7	 cmovl	 eax, edi
  00090	89 45 f0	 mov	 DWORD PTR _size$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 877  : 	{ ASSERT(m_hImageList != NULL); return ImageList_GetBkColor(m_hImageList); }

  00093	ff 76 04	 push	 DWORD PTR [esi+4]
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ImageList_GetBkColor@4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 316  : 				COLORREF rgb = pImageList->GetBkColor();

  0009c	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 374  : 	{ ASSERT(m_hAttribDC != NULL); return ::GetBkColor(m_hAttribDC); }

  0009e	8b 45 f8	 mov	 eax, DWORD PTR _pDC$GSCopy$1$[ebp]
  000a1	ff 70 08	 push	 DWORD PTR [eax+8]
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetBkColor@4

; 875  : 	{ ASSERT(m_hImageList != NULL); return ImageList_SetBkColor(m_hImageList, cr); }

  000aa	50		 push	 eax
  000ab	ff 76 04	 push	 DWORD PTR [esi+4]
  000ae	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__ImageList_SetBkColor@8
  000b4	ff d6		 call	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 320  : 				pImageList->DrawIndirect(pDC, lphdi->iImage, point, size, CPoint(0, 0));

  000b6	68 00 00 00 ff	 push	 -16777216		; ff000000H
  000bb	6a 00		 push	 0
  000bd	8b 45 e8	 mov	 eax, DWORD PTR _lphdi$GSCopy$1$[ebp]
  000c0	6a 00		 push	 0
  000c2	68 00 00 00 ff	 push	 -16777216		; ff000000H
  000c7	68 00 00 00 ff	 push	 -16777216		; ff000000H
  000cc	68 20 00 cc 00	 push	 13369376		; 00cc0020H
  000d1	6a 00		 push	 0
  000d3	6a 00		 push	 0
  000d5	6a 00		 push	 0
  000d7	ff 75 fc	 push	 DWORD PTR _size$2$[ebp]
  000da	ff 75 f0	 push	 DWORD PTR _size$1$[ebp]
  000dd	ff 75 ec	 push	 DWORD PTR _point$1$[ebp]
  000e0	53		 push	 ebx
  000e1	ff 70 1c	 push	 DWORD PTR [eax+28]
  000e4	8b 5d f4	 mov	 ebx, DWORD PTR _pImageList$1$[ebp]
  000e7	8b cb		 mov	 ecx, ebx
  000e9	ff 75 f8	 push	 DWORD PTR _pDC$GSCopy$1$[ebp]
  000ec	e8 00 00 00 00	 call	 ?DrawIndirect@CImageList@@QAEHPAVCDC@@HUtagPOINT@@UtagSIZE@@1IKKKKKK@Z ; CImageList::DrawIndirect
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 875  : 	{ ASSERT(m_hImageList != NULL); return ImageList_SetBkColor(m_hImageList, cr); }

  000f1	57		 push	 edi
  000f2	ff 73 04	 push	 DWORD PTR [ebx+4]
  000f5	ff d6		 call	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 328  : 	return iWidth;

  000f7	8b 45 e4	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  000fa	5f		 pop	 edi
  000fb	5e		 pop	 esi

; 329  : }

  000fc	5b		 pop	 ebx
  000fd	8b 80 88 00 00
	00		 mov	 eax, DWORD PTR [eax+136]
  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c2 1c 00	 ret	 28			; 0000001cH
$LN32@DrawImage:
  00109	5f		 pop	 edi
  0010a	5e		 pop	 esi

; 328  : 	return iWidth;

  0010b	33 c0		 xor	 eax, eax

; 329  : }

  0010d	5b		 pop	 ebx
  0010e	8b e5		 mov	 esp, ebp
  00110	5d		 pop	 ebp
  00111	c2 1c 00	 ret	 28			; 0000001cH
$LN33@DrawImage:
  00114	5e		 pop	 esi
  00115	33 c0		 xor	 eax, eax
  00117	5b		 pop	 ebx
  00118	8b e5		 mov	 esp, ebp
  0011a	5d		 pop	 ebp
  0011b	c2 1c 00	 ret	 28			; 0000001cH
?DrawImage@CXHeaderCtrl@@IAEHPAVCDC@@VCRect@@PAU_HD_ITEMA@@H@Z ENDP ; CXHeaderCtrl::DrawImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?DrawCtrl@CXHeaderCtrl@@IAEXPAVCDC@@@Z
_TEXT	SEGMENT
$T2 = -364						; size = 8
$T3 = -356						; size = 8
$T4 = -348						; size = 8
$T5 = -340						; size = 8
$T6 = -332						; size = 8
$T7 = -324						; size = 8
_hditem$8 = -316					; size = 48
_penLight$9 = -268					; size = 8
_pPen$1$ = -260						; size = 4
_pFont$1$ = -256					; size = 4
_this$GSCopy$1$ = -252					; size = 4
_rcIcon$10 = -248					; size = 16
_penHighLight$ = -232					; size = 8
_penShadow$ = -224					; size = 8
_penShadow$11 = -216					; size = 8
_iWidth$1$ = -208					; size = 4
_iItems$1$ = -204					; size = 4
_i$1$ = -200						; size = 4
_pOldPen$1$ = -196					; size = 4
_iItem$1$ = -196					; size = 4
_disItem$12 = -192					; size = 48
_rectClient$ = -144					; size = 16
_rectClip$ = -128					; size = 16
_rectItem$ = -112					; size = 16
_szText$13 = -96					; size = 80
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pDC$ = 8						; size = 4
?DrawCtrl@CXHeaderCtrl@@IAEXPAVCDC@@@Z PROC		; CXHeaderCtrl::DrawCtrl, COMDAT
; _this$ = ecx

; 114  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DrawCtrl@CXHeaderCtrl@@IAEXPAVCDC@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 60 01 00
	00		 sub	 esp, 352		; 00000160H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	8b f9		 mov	 edi, ecx
  0002f	89 bd 04 ff ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi
  00035	8b 75 08	 mov	 esi, DWORD PTR _pDC$[ebp]

; 116  : 	if (pDC->GetClipBox(&rectClip) == ERROR)

  00038	8d 4d 80	 lea	 ecx, DWORD PTR _rectClip$[ebp]
  0003b	0f 57 c0	 xorps	 xmm0, xmm0
  0003e	51		 push	 ecx
  0003f	8b ce		 mov	 ecx, esi
  00041	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00043	0f 11 45 80	 movups	 XMMWORD PTR _rectClip$[ebp], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 116  : 	if (pDC->GetClipBox(&rectClip) == ERROR)

  00047	8b 40 58	 mov	 eax, DWORD PTR [eax+88]
  0004a	ff d0		 call	 eax
  0004c	85 c0		 test	 eax, eax
  0004e	0f 84 f5 04 00
	00		 je	 $LN58@DrawCtrl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 86   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetClientRect(m_hWnd, lpRect); }

  00054	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _rectClient$[ebp]
  0005a	0f 57 c0	 xorps	 xmm0, xmm0
  0005d	50		 push	 eax
  0005e	ff 77 20	 push	 DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00061	0f 11 85 70 ff
	ff ff		 movups	 XMMWORD PTR _rectClient$[ebp], xmm0
  00068	0f 11 45 90	 movups	 XMMWORD PTR _rectItem$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 86   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetClientRect(m_hWnd, lpRect); }

  0006c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 122  :     pDC->FillSolidRect(rectClip, m_cr3DFace);

  00072	ff b7 b8 00 00
	00		 push	 DWORD PTR [edi+184]
  00078	8d 45 80	 lea	 eax, DWORD PTR _rectClip$[ebp]
  0007b	8b ce		 mov	 ecx, esi
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ?FillSolidRect@CDC@@QAEXPBUtagRECT@@K@Z ; CDC::FillSolidRect
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl

; 541  : 	{ ASSERT(::IsWindow(m_hWnd)); return (int) ::SendMessage(m_hWnd, HDM_GETITEMCOUNT, 0, 0L); }

  00083	6a 00		 push	 0
  00085	6a 00		 push	 0
  00087	68 00 12 00 00	 push	 4608			; 00001200H
  0008c	ff 77 20	 push	 DWORD PTR [edi+32]
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 127  : 	CPen penHighLight(PS_SOLID, 1, m_cr3DHighLight);

  00095	ff b7 b0 00 00
	00		 push	 DWORD PTR [edi+176]
  0009b	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR _penHighLight$[ebp]
  000a1	89 85 34 ff ff
	ff		 mov	 DWORD PTR _iItems$1$[ebp], eax
  000a7	6a 01		 push	 1
  000a9	6a 00		 push	 0
  000ab	e8 00 00 00 00	 call	 ??0CPen@@QAE@HHK@Z	; CPen::CPen

; 128  : 	CPen penShadow(PS_SOLID, 1, m_cr3DShadow);

  000b0	ff b7 b4 00 00
	00		 push	 DWORD PTR [edi+180]
  000b6	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _penShadow$[ebp]
  000bc	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000c3	6a 01		 push	 1
  000c5	6a 00		 push	 0
  000c7	e8 00 00 00 00	 call	 ??0CPen@@QAE@HHK@Z	; CPen::CPen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 790  : 	{ ASSERT(m_hAttribDC != NULL); return CPen::FromHandle((HPEN)::GetCurrentObject(m_hAttribDC, OBJ_PEN)); }

  000cc	6a 01		 push	 1
  000ce	ff 76 08	 push	 DWORD PTR [esi+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 128  : 	CPen penShadow(PS_SOLID, 1, m_cr3DShadow);

  000d1	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 790  : 	{ ASSERT(m_hAttribDC != NULL); return CPen::FromHandle((HPEN)::GetCurrentObject(m_hAttribDC, OBJ_PEN)); }

  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentObject@8

; 102  : 	{ return (CPen*) CGdiObject::FromHandle(hPen); }

  000db	50		 push	 eax
  000dc	e8 00 00 00 00	 call	 ?FromHandle@CGdiObject@@SGPAV1@PAX@Z ; CGdiObject::FromHandle
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 45   : 	{ ASSERT(::IsWindow(m_hWnd)); return CFont::FromHandle(

  000e1	6a 00		 push	 0
  000e3	6a 00		 push	 0
  000e5	6a 31		 push	 49			; 00000031H
  000e7	ff 77 20	 push	 DWORD PTR [edi+32]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 129  : 	CPen* pPen = pDC->GetCurrentPen();

  000ea	89 85 fc fe ff
	ff		 mov	 DWORD PTR _pPen$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 45   : 	{ ASSERT(::IsWindow(m_hWnd)); return CFont::FromHandle(

  000f0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 151  : 	{ return (CFont*) CGdiObject::FromHandle(hFont); }

  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 ?FromHandle@CGdiObject@@SGPAV1@PAX@Z ; CGdiObject::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 131  : 	CFont* pFont = pDC->SelectObject(GetFont());

  000fc	8b 16		 mov	 edx, DWORD PTR [esi]
  000fe	8b ce		 mov	 ecx, esi
  00100	50		 push	 eax
  00101	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  00104	ff d0		 call	 eax

; 132  : 
; 133  : 	pDC->SetBkColor(m_cr3DFace);

  00106	8b 16		 mov	 edx, DWORD PTR [esi]
  00108	8b ce		 mov	 ecx, esi
  0010a	ff b7 b8 00 00
	00		 push	 DWORD PTR [edi+184]
  00110	89 85 00 ff ff
	ff		 mov	 DWORD PTR _pFont$1$[ebp], eax
  00116	ff 52 34	 call	 DWORD PTR [edx+52]

; 134  : 	pDC->SetTextColor(m_crBtnText);

  00119	8b 16		 mov	 edx, DWORD PTR [esi]
  0011b	8b ce		 mov	 ecx, esi
  0011d	ff b7 bc 00 00
	00		 push	 DWORD PTR [edi+188]
  00123	ff 52 38	 call	 DWORD PTR [edx+56]

; 135  : 
; 136  : 	int iWidth = 0;
; 137  : 
; 138  : 	for (int i = 0; i < iItems; i++)

  00126	33 c0		 xor	 eax, eax
  00128	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _iWidth$1$[ebp], 0
  00132	89 85 38 ff ff
	ff		 mov	 DWORD PTR _i$1$[ebp], eax
  00138	39 85 34 ff ff
	ff		 cmp	 DWORD PTR _iItems$1$[ebp], eax
  0013e	0f 8e ab 03 00
	00		 jle	 $LN14@DrawCtrl
$LL4@DrawCtrl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn2.inl

; 156  : 	{ ASSERT(::IsWindow(m_hWnd)); return (int)::SendMessage(m_hWnd, HDM_ORDERTOINDEX, nOrder, 0); }

  00144	6a 00		 push	 0
  00146	50		 push	 eax
  00147	68 0f 12 00 00	 push	 4623			; 0000120fH
  0014c	ff 77 20	 push	 DWORD PTR [edi+32]
  0014f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 146  : 		hditem.pszText = szText;

  00155	8d 4d a0	 lea	 ecx, DWORD PTR _szText$13[ebp]
  00158	89 85 3c ff ff
	ff		 mov	 DWORD PTR _iItem$1$[ebp], eax
  0015e	89 8d cc fe ff
	ff		 mov	 DWORD PTR _hditem$8[ebp+8], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl

; 547  : 	{ ASSERT(::IsWindow(m_hWnd)); return (BOOL)::SendMessage(m_hWnd, HDM_GETITEM, nPos, (LPARAM)pHeaderItem); }

  00164	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _hditem$8[ebp]
  0016a	51		 push	 ecx
  0016b	50		 push	 eax
  0016c	68 03 12 00 00	 push	 4611			; 00001203H
  00171	ff 77 20	 push	 DWORD PTR [edi+32]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 145  : 		hditem.mask = HDI_WIDTH|HDI_FORMAT|HDI_TEXT|HDI_IMAGE|HDI_BITMAP;

  00174	c7 85 c4 fe ff
	ff 37 00 00 00	 mov	 DWORD PTR _hditem$8[ebp], 55 ; 00000037H

; 147  : 		hditem.cchTextMax = sizeof(szText);

  0017e	c7 85 d4 fe ff
	ff 50 00 00 00	 mov	 DWORD PTR _hditem$8[ebp+16], 80 ; 00000050H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl

; 547  : 	{ ASSERT(::IsWindow(m_hWnd)); return (BOOL)::SendMessage(m_hWnd, HDM_GETITEM, nPos, (LPARAM)pHeaderItem); }

  00188	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn2.inl

; 154  : 	{ ASSERT(::IsWindow(m_hWnd)); ASSERT(lpRect != NULL); return (BOOL)::SendMessage(m_hWnd, HDM_GETITEMRECT, nIndex, (LPARAM)lpRect); }

  0018e	8d 45 90	 lea	 eax, DWORD PTR _rectItem$[ebp]
  00191	50		 push	 eax
  00192	ff b5 3c ff ff
	ff		 push	 DWORD PTR _iItem$1$[ebp]
  00198	68 07 12 00 00	 push	 4615			; 00001207H
  0019d	ff 77 20	 push	 DWORD PTR [edi+32]
  001a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 152  : 		if (rectItem.right >= rectClip.left || rectItem.left <= rectClip.right)

  001a6	8b 45 98	 mov	 eax, DWORD PTR _rectItem$[ebp+8]
  001a9	3b 45 80	 cmp	 eax, DWORD PTR _rectClip$[ebp]
  001ac	7d 0c		 jge	 SHORT $LN7@DrawCtrl
  001ae	8b 45 90	 mov	 eax, DWORD PTR _rectItem$[ebp]
  001b1	3b 45 88	 cmp	 eax, DWORD PTR _rectClip$[ebp+8]
  001b4	0f 8f de 02 00
	00		 jg	 $LN13@DrawCtrl
$LN7@DrawCtrl:

; 153  : 		{
; 154  : 			if (hditem.fmt & HDF_OWNERDRAW)

  001ba	f7 85 d8 fe ff
	ff 00 80 00 00	 test	 DWORD PTR _hditem$8[ebp+20], 32768 ; 00008000H
  001c4	74 74		 je	 SHORT $LN8@DrawCtrl

; 155  : 			{
; 156  : 				DRAWITEMSTRUCT disItem;
; 157  : 				disItem.CtlType = ODT_BUTTON;
; 158  : 				disItem.CtlID = GetDlgCtrlID();

  001c6	8b cf		 mov	 ecx, edi
  001c8	c7 85 40 ff ff
	ff 04 00 00 00	 mov	 DWORD PTR _disItem$12[ebp], 4
  001d2	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID

; 159  : 				disItem.itemID = iItem;
; 160  : 				disItem.itemAction = ODA_DRAWENTIRE;
; 161  : 				disItem.itemState = 0;
; 162  : 				disItem.hwndItem = m_hWnd;
; 163  : 				disItem.hDC = pDC->m_hDC;
; 164  : 				disItem.rcItem = rectItem;

  001d7	0f 10 45 90	 movups	 xmm0, XMMWORD PTR _rectItem$[ebp]
  001db	89 85 44 ff ff
	ff		 mov	 DWORD PTR _disItem$12[ebp+4], eax

; 165  : 				disItem.itemData = 0;
; 166  : 
; 167  : 				DrawItem(&disItem);

  001e1	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _disItem$12[ebp]
  001e7	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _iItem$1$[ebp]
  001ed	89 85 48 ff ff
	ff		 mov	 DWORD PTR _disItem$12[ebp+8], eax
  001f3	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  001f6	89 85 54 ff ff
	ff		 mov	 DWORD PTR _disItem$12[ebp+20], eax
  001fc	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001ff	89 85 58 ff ff
	ff		 mov	 DWORD PTR _disItem$12[ebp+24], eax
  00205	8b 07		 mov	 eax, DWORD PTR [edi]
  00207	51		 push	 ecx
  00208	8b cf		 mov	 ecx, edi
  0020a	c7 85 4c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _disItem$12[ebp+12], 1
  00214	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _disItem$12[ebp+16], 0
  0021e	0f 11 85 5c ff
	ff ff		 movups	 XMMWORD PTR _disItem$12[ebp+28], xmm0
  00225	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _disItem$12[ebp+44], 0
  0022f	ff 90 74 01 00
	00		 call	 DWORD PTR [eax+372]

; 168  : 			}

  00235	e9 dd 01 00 00	 jmp	 $LN9@DrawCtrl
$LN8@DrawCtrl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 698  : 	::InflateRect(this, -x, -y);

  0023a	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]
  00240	6a 00		 push	 0
  00242	f7 d8		 neg	 eax
  00244	50		 push	 eax
  00245	8d 45 90	 lea	 eax, DWORD PTR _rectItem$[ebp]
  00248	50		 push	 eax
  00249	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InflateRect@12
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 172  : 				DrawItem(pDC, rectItem, &hditem);

  0024f	0f 10 45 90	 movups	 xmm0, XMMWORD PTR _rectItem$[ebp]
  00253	8b 17		 mov	 edx, DWORD PTR [edi]
  00255	8d 85 c4 fe ff
	ff		 lea	 eax, DWORD PTR _hditem$8[ebp]
  0025b	50		 push	 eax
  0025c	83 ec 10	 sub	 esp, 16			; 00000010H
  0025f	8b cf		 mov	 ecx, edi
  00261	8b c4		 mov	 eax, esp
  00263	56		 push	 esi
  00264	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00267	ff 92 78 01 00
	00		 call	 DWORD PTR [edx+376]

; 173  : 				
; 174  : 
; 175  : 				//int offset = pDC->GetTextExtent(_T(" "), 1 ).cx*2/2;
; 176  : 				int offset = 8;
; 177  : 				int offsetY = 4;
; 178  : 				int nShiftX = 16;
; 179  : 				// Draw the Sort arrow
; 180  : 				if( iItem == m_nSortCol )

  0026d	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _iItem$1$[ebp]
  00273	3b 87 c0 00 00
	00		 cmp	 eax, DWORD PTR [edi+192]
  00279	0f 85 86 01 00
	00		 jne	 $LN50@DrawCtrl

; 181  : 				{
; 182  : 					CRect rcIcon(rectItem);

  0027f	0f 10 45 90	 movups	 xmm0, XMMWORD PTR _rectItem$[ebp]

; 183  : 
; 184  : 					// Set up pens to use for drawing the triangle
; 185  : 					CPen penLight(PS_SOLID, 1, GetSysColor(COLOR_3DHILIGHT));

  00283	6a 14		 push	 20			; 00000014H
  00285	0f 11 85 08 ff
	ff ff		 movups	 XMMWORD PTR _rcIcon$10[ebp], xmm0
  0028c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSysColor@4
  00292	50		 push	 eax
  00293	6a 01		 push	 1
  00295	6a 00		 push	 0
  00297	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR _penLight$9[ebp]
  0029d	e8 00 00 00 00	 call	 ??0CPen@@QAE@HHK@Z	; CPen::CPen

; 186  : 					CPen penShadow(PS_SOLID, 1, GetSysColor(COLOR_3DSHADOW));

  002a2	6a 10		 push	 16			; 00000010H
  002a4	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  002a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSysColor@4
  002ae	50		 push	 eax
  002af	6a 01		 push	 1
  002b1	6a 00		 push	 0
  002b3	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR _penShadow$11[ebp]
  002b9	e8 00 00 00 00	 call	 ??0CPen@@QAE@HHK@Z	; CPen::CPen

; 187  : 					CPen *pOldPen = pDC->SelectObject( &penLight );

  002be	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _penLight$9[ebp]
  002c4	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  002c8	50		 push	 eax
  002c9	8b ce		 mov	 ecx, esi
  002cb	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z ; CDC::SelectObject

; 188  : 
; 189  : 					if(m_bSortAsc)

  002d0	83 bf c4 00 00
	00 00		 cmp	 DWORD PTR [edi+196], 0
  002d7	8b ce		 mov	 ecx, esi
  002d9	89 85 3c ff ff
	ff		 mov	 DWORD PTR _pOldPen$1$[ebp], eax
  002df	6a 03		 push	 3
  002e1	74 6e		 je	 SHORT $LN11@DrawCtrl

; 190  : 					{
; 191  : 						// Draw triangle pointing upwards
; 192  : 						pDC->MoveTo( rcIcon.right - 2*offset + offset*2, offsetY-1);

  002e3	ff b5 10 ff ff
	ff		 push	 DWORD PTR _rcIcon$10[ebp+8]
  002e9	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR $T7[ebp]
  002ef	50		 push	 eax
  002f0	e8 00 00 00 00	 call	 ?MoveTo@CDC@@QAE?AVCPoint@@HH@Z ; CDC::MoveTo

; 193  : 						pDC->LineTo( rcIcon.right - 3*offset/2 + offset*2, rcIcon.bottom - offsetY );

  002f5	8b bd 14 ff ff
	ff		 mov	 edi, DWORD PTR _rcIcon$10[ebp+12]
  002fb	8b ce		 mov	 ecx, esi
  002fd	8b 85 10 ff ff
	ff		 mov	 eax, DWORD PTR _rcIcon$10[ebp+8]
  00303	83 c7 fc	 add	 edi, -4			; fffffffcH
  00306	57		 push	 edi
  00307	83 c0 04	 add	 eax, 4
  0030a	50		 push	 eax
  0030b	e8 00 00 00 00	 call	 ?LineTo@CDC@@QAEHHH@Z	; CDC::LineTo

; 194  : 						pDC->LineTo( rcIcon.right - 5*offset/2-2 + offset*2, rcIcon.bottom - offsetY );

  00310	8b 85 10 ff ff
	ff		 mov	 eax, DWORD PTR _rcIcon$10[ebp+8]
  00316	8b ce		 mov	 ecx, esi
  00318	57		 push	 edi
  00319	83 c0 fa	 add	 eax, -6			; fffffffaH
  0031c	50		 push	 eax
  0031d	e8 00 00 00 00	 call	 ?LineTo@CDC@@QAEHHH@Z	; CDC::LineTo

; 195  : 						pDC->MoveTo( rcIcon.right - 5*offset/2-1 + offset*2, rcIcon.bottom - offsetY-1 );

  00322	8d 47 ff	 lea	 eax, DWORD PTR [edi-1]
  00325	8b ce		 mov	 ecx, esi
  00327	8b bd 10 ff ff
	ff		 mov	 edi, DWORD PTR _rcIcon$10[ebp+8]
  0032d	50		 push	 eax
  0032e	8d 47 fb	 lea	 eax, DWORD PTR [edi-5]
  00331	50		 push	 eax
  00332	8d 85 b4 fe ff
	ff		 lea	 eax, DWORD PTR $T6[ebp]
  00338	50		 push	 eax
  00339	e8 00 00 00 00	 call	 ?MoveTo@CDC@@QAE?AVCPoint@@HH@Z ; CDC::MoveTo

; 196  : 
; 197  : 						pDC->SelectObject( &penShadow );

  0033e	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _penShadow$11[ebp]
  00344	8b ce		 mov	 ecx, esi
  00346	50		 push	 eax
  00347	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z ; CDC::SelectObject

; 198  : 						pDC->LineTo( rcIcon.right - 2*offset + offset*2, offsetY-2);

  0034c	6a 02		 push	 2
  0034e	57		 push	 edi

; 199  : 					}

  0034f	eb 6c		 jmp	 SHORT $LN65@DrawCtrl
$LN11@DrawCtrl:

; 200  : 					else
; 201  : 					{
; 202  : 						// Draw triangle pointing downwords
; 203  : 						pDC->MoveTo( rcIcon.right - 3*offset/2 + offset*2, offsetY-1);

  00351	8b 85 10 ff ff
	ff		 mov	 eax, DWORD PTR _rcIcon$10[ebp+8]
  00357	83 c0 04	 add	 eax, 4
  0035a	50		 push	 eax
  0035b	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]
  00361	50		 push	 eax
  00362	e8 00 00 00 00	 call	 ?MoveTo@CDC@@QAE?AVCPoint@@HH@Z ; CDC::MoveTo

; 204  : 						pDC->LineTo( rcIcon.right - 2*offset-1 + offset*2, rcIcon.bottom - offsetY + 1 );

  00367	8b bd 14 ff ff
	ff		 mov	 edi, DWORD PTR _rcIcon$10[ebp+12]
  0036d	8b 8d 10 ff ff
	ff		 mov	 ecx, DWORD PTR _rcIcon$10[ebp+8]
  00373	83 c7 fc	 add	 edi, -4			; fffffffcH
  00376	49		 dec	 ecx
  00377	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  0037a	50		 push	 eax
  0037b	51		 push	 ecx
  0037c	8b ce		 mov	 ecx, esi
  0037e	e8 00 00 00 00	 call	 ?LineTo@CDC@@QAEHHH@Z	; CDC::LineTo

; 205  : 						pDC->MoveTo( rcIcon.right - 2*offset-1 + offset*2, rcIcon.bottom - offsetY );

  00383	57		 push	 edi
  00384	8b bd 10 ff ff
	ff		 mov	 edi, DWORD PTR _rcIcon$10[ebp+8]
  0038a	8b ce		 mov	 ecx, esi
  0038c	8d 47 ff	 lea	 eax, DWORD PTR [edi-1]
  0038f	50		 push	 eax
  00390	8d 85 a4 fe ff
	ff		 lea	 eax, DWORD PTR $T4[ebp]
  00396	50		 push	 eax
  00397	e8 00 00 00 00	 call	 ?MoveTo@CDC@@QAE?AVCPoint@@HH@Z ; CDC::MoveTo

; 206  : 
; 207  : 						pDC->SelectObject( &penShadow );

  0039c	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _penShadow$11[ebp]
  003a2	8b ce		 mov	 ecx, esi
  003a4	50		 push	 eax
  003a5	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z ; CDC::SelectObject

; 208  : 						pDC->LineTo( rcIcon.right - 5*offset/2-1 + offset*2, offsetY -1 );

  003aa	6a 03		 push	 3
  003ac	8d 47 fb	 lea	 eax, DWORD PTR [edi-5]
  003af	8b ce		 mov	 ecx, esi
  003b1	50		 push	 eax
  003b2	e8 00 00 00 00	 call	 ?LineTo@CDC@@QAEHHH@Z	; CDC::LineTo

; 209  : 						pDC->LineTo( rcIcon.right - 3*offset/2 + offset*2, offsetY -1);

  003b7	6a 03		 push	 3
  003b9	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  003bc	50		 push	 eax
$LN65@DrawCtrl:

; 210  : 					}
; 211  : 
; 212  : 					// Restore the pen
; 213  : 					pDC->SelectObject( pOldPen );

  003bd	8b ce		 mov	 ecx, esi
  003bf	e8 00 00 00 00	 call	 ?LineTo@CDC@@QAEHHH@Z	; CDC::LineTo
  003c4	ff b5 3c ff ff
	ff		 push	 DWORD PTR _pOldPen$1$[ebp]
  003ca	8b ce		 mov	 ecx, esi
  003cc	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z ; CDC::SelectObject
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 106  : 	{ }

  003d1	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR _penShadow$11[ebp]
  003d7	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _penShadow$11[ebp], OFFSET ??_7CPen@@6B@
  003e1	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  003e6	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR _penLight$9[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 214  : 				}

  003ec	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 106  : 	{ }

  003f0	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _penLight$9[ebp], OFFSET ??_7CPen@@6B@
  003fa	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  003ff	8b bd 04 ff ff
	ff		 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
$LN50@DrawCtrl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 686  : 	::InflateRect(this, x, y);

  00405	6a 00		 push	 0
  00407	ff b7 84 00 00
	00		 push	 DWORD PTR [edi+132]
  0040d	8d 45 90	 lea	 eax, DWORD PTR _rectItem$[ebp]
  00410	50		 push	 eax
  00411	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InflateRect@12
$LN9@DrawCtrl:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 225  : 			if (i < iItems-1)

  00417	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR _iItems$1$[ebp]
  0041d	48		 dec	 eax
  0041e	39 85 38 ff ff
	ff		 cmp	 DWORD PTR _i$1$[ebp], eax
  00424	7d 72		 jge	 SHORT $LN13@DrawCtrl

; 226  : 			{
; 227  : 				pDC->SelectObject(&penShadow);

  00426	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _penShadow$[ebp]
  0042c	8b ce		 mov	 ecx, esi
  0042e	50		 push	 eax
  0042f	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z ; CDC::SelectObject

; 228  : 				pDC->MoveTo(rectItem.right-1, rectItem.top+2);

  00434	8b 45 94	 mov	 eax, DWORD PTR _rectItem$[ebp+4]
  00437	8b ce		 mov	 ecx, esi
  00439	83 c0 02	 add	 eax, 2
  0043c	50		 push	 eax
  0043d	8b 45 98	 mov	 eax, DWORD PTR _rectItem$[ebp+8]
  00440	48		 dec	 eax
  00441	50		 push	 eax
  00442	8d 85 9c fe ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  00448	50		 push	 eax
  00449	e8 00 00 00 00	 call	 ?MoveTo@CDC@@QAE?AVCPoint@@HH@Z ; CDC::MoveTo

; 229  : 				pDC->LineTo(rectItem.right-1, rectItem.bottom-2);

  0044e	8b 45 9c	 mov	 eax, DWORD PTR _rectItem$[ebp+12]
  00451	8b ce		 mov	 ecx, esi
  00453	83 c0 fe	 add	 eax, -2			; fffffffeH
  00456	50		 push	 eax
  00457	8b 45 98	 mov	 eax, DWORD PTR _rectItem$[ebp+8]
  0045a	48		 dec	 eax
  0045b	50		 push	 eax
  0045c	e8 00 00 00 00	 call	 ?LineTo@CDC@@QAEHHH@Z	; CDC::LineTo

; 230  : 
; 231  : 				pDC->SelectObject(&penHighLight);

  00461	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _penHighLight$[ebp]
  00467	8b ce		 mov	 ecx, esi
  00469	50		 push	 eax
  0046a	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z ; CDC::SelectObject

; 232  : 				pDC->MoveTo(rectItem.right, rectItem.top+2);

  0046f	8b 45 94	 mov	 eax, DWORD PTR _rectItem$[ebp+4]
  00472	8b ce		 mov	 ecx, esi
  00474	83 c0 02	 add	 eax, 2
  00477	50		 push	 eax
  00478	ff 75 98	 push	 DWORD PTR _rectItem$[ebp+8]
  0047b	8d 85 94 fe ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00481	50		 push	 eax
  00482	e8 00 00 00 00	 call	 ?MoveTo@CDC@@QAE?AVCPoint@@HH@Z ; CDC::MoveTo

; 233  : 				pDC->LineTo(rectItem.right, rectItem.bottom-2);

  00487	8b 45 9c	 mov	 eax, DWORD PTR _rectItem$[ebp+12]
  0048a	8b ce		 mov	 ecx, esi
  0048c	83 c0 fe	 add	 eax, -2			; fffffffeH
  0048f	50		 push	 eax
  00490	ff 75 98	 push	 DWORD PTR _rectItem$[ebp+8]
  00493	e8 00 00 00 00	 call	 ?LineTo@CDC@@QAEHHH@Z	; CDC::LineTo
$LN13@DrawCtrl:

; 234  : 			}
; 235  : 		}
; 236  : 
; 237  : 		iWidth += hditem.cxy;

  00498	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _i$1$[ebp]
  0049e	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _iWidth$1$[ebp]
  004a4	40		 inc	 eax
  004a5	03 8d c8 fe ff
	ff		 add	 ecx, DWORD PTR _hditem$8[ebp+4]
  004ab	89 8d 30 ff ff
	ff		 mov	 DWORD PTR _iWidth$1$[ebp], ecx
  004b1	89 85 38 ff ff
	ff		 mov	 DWORD PTR _i$1$[ebp], eax
  004b7	3b 85 34 ff ff
	ff		 cmp	 eax, DWORD PTR _iItems$1$[ebp]
  004bd	0f 8c 81 fc ff
	ff		 jl	 $LL4@DrawCtrl

; 238  : 	}
; 239  : 
; 240  : 	if (iWidth > 0)

  004c3	85 c9		 test	 ecx, ecx
  004c5	7e 28		 jle	 SHORT $LN14@DrawCtrl

; 241  : 	{
; 242  : 		rectClient.right = rectClient.left + iWidth;

  004c7	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _rectClient$[ebp]

; 243  : 		pDC->Draw3dRect(rectClient, m_cr3DHighLight, m_cr3DShadow);

  004cd	ff b7 b4 00 00
	00		 push	 DWORD PTR [edi+180]
  004d3	03 c1		 add	 eax, ecx
  004d5	8b ce		 mov	 ecx, esi
  004d7	ff b7 b0 00 00
	00		 push	 DWORD PTR [edi+176]
  004dd	89 85 78 ff ff
	ff		 mov	 DWORD PTR _rectClient$[ebp+8], eax
  004e3	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _rectClient$[ebp]
  004e9	50		 push	 eax
  004ea	e8 00 00 00 00	 call	 ?Draw3dRect@CDC@@QAEXPBUtagRECT@@KK@Z ; CDC::Draw3dRect
$LN14@DrawCtrl:

; 244  : 	}
; 245  : 
; 246  : 	pDC->SelectObject(pFont);

  004ef	8b 06		 mov	 eax, DWORD PTR [esi]
  004f1	8b ce		 mov	 ecx, esi
  004f3	ff b5 00 ff ff
	ff		 push	 DWORD PTR _pFont$1$[ebp]
  004f9	ff 50 30	 call	 DWORD PTR [eax+48]

; 247  : 	pDC->SelectObject(pPen);

  004fc	ff b5 fc fe ff
	ff		 push	 DWORD PTR _pPen$1$[ebp]
  00502	8b ce		 mov	 ecx, esi
  00504	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z ; CDC::SelectObject

; 248  : 
; 249  : 	penHighLight.DeleteObject();

  00509	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR _penHighLight$[ebp]
  0050f	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject

; 250  : 	penShadow.DeleteObject();

  00514	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _penShadow$[ebp]
  0051a	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 106  : 	{ }

  0051f	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _penShadow$[ebp]
  00525	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _penShadow$[ebp], OFFSET ??_7CPen@@6B@
  0052f	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  00534	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR _penHighLight$[ebp]
  0053a	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _penHighLight$[ebp], OFFSET ??_7CPen@@6B@
  00544	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
$LN58@DrawCtrl:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 251  : }

  00549	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0054c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00553	59		 pop	 ecx
  00554	5f		 pop	 edi
  00555	5e		 pop	 esi
  00556	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00559	33 cd		 xor	 ecx, ebp
  0055b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00560	8b e5		 mov	 esp, ebp
  00562	5d		 pop	 ebp
  00563	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DrawCtrl@CXHeaderCtrl@@IAEXPAVCDC@@@Z$0:
  00000	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR _penHighLight$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CPen@@UAE@XZ		; CPen::~CPen
__unwindfunclet$?DrawCtrl@CXHeaderCtrl@@IAEXPAVCDC@@@Z$1:
  0000b	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _penShadow$[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1CPen@@UAE@XZ		; CPen::~CPen
__unwindfunclet$?DrawCtrl@CXHeaderCtrl@@IAEXPAVCDC@@@Z$2:
  00016	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR _penLight$9[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1CPen@@UAE@XZ		; CPen::~CPen
__unwindfunclet$?DrawCtrl@CXHeaderCtrl@@IAEXPAVCDC@@@Z$3:
  00021	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR _penShadow$11[ebp]
  00027	e9 00 00 00 00	 jmp	 ??1CPen@@UAE@XZ		; CPen::~CPen
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
  00030	cc		 int	 3
__ehhandler$?DrawCtrl@CXHeaderCtrl@@IAEXPAVCDC@@@Z:
  00031	90		 npad	 1
  00032	90		 npad	 1
  00033	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00037	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003a	8b 8a 94 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-364]
  00040	33 c8		 xor	 ecx, eax
  00042	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00047	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0004a	33 c8		 xor	 ecx, eax
  0004c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00051	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DrawCtrl@CXHeaderCtrl@@IAEXPAVCDC@@@Z
  00056	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DrawCtrl@CXHeaderCtrl@@IAEXPAVCDC@@@Z ENDP		; CXHeaderCtrl::DrawCtrl
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?DrawItem@CXHeaderCtrl@@UAEXPAVCDC@@VCRect@@PAU_HD_ITEMA@@@Z
_TEXT	SEGMENT
_BitmapInfo$ = -120					; size = 24
_dc$3 = -96						; size = 16
_size$4 = -80						; size = 8
_pDC$GSCopy$1$ = -76					; size = 4
_point$1$sroa$571$1$ = -72				; size = 4
_point$1$ = -72						; size = 4
_iWidth$1$ = -68					; size = 4
_size$2$ = -68						; size = 4
tv716 = -64						; size = 4
_size$1$ = -64						; size = 4
_pBitmap$1$ = -60					; size = 4
_pImageList$1$ = -56					; size = 4
_lphdi$GSCopy$1$ = -52					; size = 4
$T5 = -52						; size = 4
_this$GSCopy$1$ = -48					; size = 4
_rect$ = -44						; size = 16
_rect$ = -28						; size = 16
__$EHRec$ = -12						; size = 12
_pDC$ = 8						; size = 4
_rect$ = 12						; size = 16
_lphdi$ = 28						; size = 4
?DrawItem@CXHeaderCtrl@@UAEXPAVCDC@@VCRect@@PAU_HD_ITEMA@@@Z PROC ; CXHeaderCtrl::DrawItem, COMDAT
; _this$ = ecx

; 263  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DrawItem@CXHeaderCtrl@@UAEXPAVCDC@@VCRect@@PAU_HD_ITEMA@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	89 4d d0	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
  0002a	8b 7d 1c	 mov	 edi, DWORD PTR _lphdi$[ebp]
  0002d	8b 75 08	 mov	 esi, DWORD PTR _pDC$[ebp]
  00030	89 75 b4	 mov	 DWORD PTR _pDC$GSCopy$1$[ebp], esi
  00033	89 7d cc	 mov	 DWORD PTR _lphdi$GSCopy$1$[ebp], edi

; 264  : 	ASSERT(lphdi->mask & HDI_FORMAT);
; 265  : 
; 266  : 	int iWidth = 0;
; 267  : 
; 268  : 	CBitmap* pBitmap = NULL;
; 269  : 	BITMAP BitmapInfo;
; 270  : 
; 271  : 	if (lphdi->fmt & HDF_BITMAP)

  00036	f7 47 14 00 20
	00 00		 test	 DWORD PTR [edi+20], 8192 ; 00002000H
  0003d	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _pBitmap$1$[ebp], 0
  00044	74 1e		 je	 SHORT $LN3@DrawItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 175  : 	{ return (CBitmap*) CGdiObject::FromHandle(hBitmap); }

  00046	ff 77 0c	 push	 DWORD PTR [edi+12]
  00049	e8 00 00 00 00	 call	 ?FromHandle@CGdiObject@@SGPAV1@PAX@Z ; CGdiObject::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 276  : 		pBitmap = CBitmap::FromHandle(lphdi->hbm);

  0004e	89 45 c4	 mov	 DWORD PTR _pBitmap$1$[ebp], eax

; 277  : 		if (pBitmap)

  00051	85 c0		 test	 eax, eax
  00053	74 0f		 je	 SHORT $LN3@DrawItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 81   : 	{ ASSERT(m_hObject != NULL); return ::GetObject(m_hObject, nCount, lpObject); }

  00055	8d 4d 88	 lea	 ecx, DWORD PTR _BitmapInfo$[ebp]
  00058	51		 push	 ecx
  00059	6a 18		 push	 24			; 00000018H
  0005b	ff 70 04	 push	 DWORD PTR [eax+4]
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetObjectA@12
$LN3@DrawItem:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn2.inl

; 162  : 	{ ASSERT(::IsWindow(m_hWnd)); return CImageList::FromHandle((HIMAGELIST) ::SendMessage(m_hWnd, HDM_GETIMAGELIST, nImageList, 0L)); }

  00064	8b 45 d0	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 281  : 	rect.left += ((iWidth = DrawImage(pDC, rect, lphdi, FALSE)) != 0) ? iWidth + m_iSpacing : 0;

  00067	0f 10 45 0c	 movups	 xmm0, XMMWORD PTR _rect$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn2.inl

; 162  : 	{ ASSERT(::IsWindow(m_hWnd)); return CImageList::FromHandle((HIMAGELIST) ::SendMessage(m_hWnd, HDM_GETIMAGELIST, nImageList, 0L)); }

  0006b	6a 00		 push	 0
  0006d	6a 00		 push	 0
  0006f	68 09 12 00 00	 push	 4617			; 00001209H
  00074	ff 70 20	 push	 DWORD PTR [eax+32]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 281  : 	rect.left += ((iWidth = DrawImage(pDC, rect, lphdi, FALSE)) != 0) ? iWidth + m_iSpacing : 0;

  00077	0f 11 45 e4	 movups	 XMMWORD PTR _rect$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn2.inl

; 162  : 	{ ASSERT(::IsWindow(m_hWnd)); return CImageList::FromHandle((HIMAGELIST) ::SendMessage(m_hWnd, HDM_GETIMAGELIST, nImageList, 0L)); }

  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?FromHandle@CImageList@@SGPAV1@PAU_IMAGELIST@@@Z ; CImageList::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 296  : 	if (lphdi->iImage != XHEADERCTRL_NO_IMAGE)

  00087	83 7f 1c 00	 cmp	 DWORD PTR [edi+28], 0
  0008b	89 45 c8	 mov	 DWORD PTR _pImageList$1$[ebp], eax
  0008e	0f 84 cc 00 00
	00		 je	 $LN5@DrawItem

; 297  : 	{
; 298  : 		if (pImageList)

  00094	85 c0		 test	 eax, eax
  00096	0f 84 c4 00 00
	00		 je	 $LN5@DrawItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  0009c	8b 45 ec	 mov	 eax, DWORD PTR _rect$[ebp+8]
  0009f	2b 45 e4	 sub	 eax, DWORD PTR _rect$[ebp]
  000a2	89 45 c0	 mov	 DWORD PTR tv716[ebp], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 300  : 			if (rect.Width() > 0)

  000a5	85 c0		 test	 eax, eax
  000a7	0f 8e b3 00 00
	00		 jle	 $LN5@DrawItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 611  : 	return CPoint((left+right)/2, (top+bottom)/2);

  000ad	8b 45 f0	 mov	 eax, DWORD PTR _rect$[ebp+12]
  000b0	03 45 e8	 add	 eax, DWORD PTR _rect$[ebp+4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 304  : 				point.y = rect.CenterPoint().y - (m_sizeImage.cy >> 1);

  000b3	8b 7d d0	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 611  : 	return CPoint((left+right)/2, (top+bottom)/2);

  000b6	99		 cdq
  000b7	2b c2		 sub	 eax, edx
  000b9	8b d0		 mov	 edx, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 304  : 				point.y = rect.CenterPoint().y - (m_sizeImage.cy >> 1);

  000bb	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]
  000c1	8b c8		 mov	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 611  : 	return CPoint((left+right)/2, (top+bottom)/2);

  000c3	d1 fa		 sar	 edx, 1
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 304  : 				point.y = rect.CenterPoint().y - (m_sizeImage.cy >> 1);

  000c5	89 45 bc	 mov	 DWORD PTR _size$2$[ebp], eax

; 305  : 
; 306  : 				if (bRight)
; 307  : 					point.x = rect.right - m_sizeImage.cx;
; 308  : 				else
; 309  : 					point.x = rect.left;
; 310  : 
; 311  : 				SIZE size;
; 312  : 				size.cx = rect.Width()<m_sizeImage.cx ? rect.Width():m_sizeImage.cx;

  000c8	8b 87 88 00 00
	00		 mov	 eax, DWORD PTR [edi+136]
  000ce	d1 f9		 sar	 ecx, 1
  000d0	2b d1		 sub	 edx, ecx
  000d2	39 45 c0	 cmp	 DWORD PTR tv716[ebp], eax
  000d5	89 55 b8	 mov	 DWORD PTR _point$1$[ebp], edx
  000d8	0f 4c 45 c0	 cmovl	 eax, DWORD PTR tv716[ebp]
  000dc	89 45 c0	 mov	 DWORD PTR _size$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 877  : 	{ ASSERT(m_hImageList != NULL); return ImageList_GetBkColor(m_hImageList); }

  000df	8b 45 c8	 mov	 eax, DWORD PTR _pImageList$1$[ebp]
  000e2	ff 70 04	 push	 DWORD PTR [eax+4]
  000e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ImageList_GetBkColor@4

; 374  : 	{ ASSERT(m_hAttribDC != NULL); return ::GetBkColor(m_hAttribDC); }

  000eb	ff 76 08	 push	 DWORD PTR [esi+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 316  : 				COLORREF rgb = pImageList->GetBkColor();

  000ee	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 374  : 	{ ASSERT(m_hAttribDC != NULL); return ::GetBkColor(m_hAttribDC); }

  000f0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetBkColor@4

; 875  : 	{ ASSERT(m_hImageList != NULL); return ImageList_SetBkColor(m_hImageList, cr); }

  000f6	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__ImageList_SetBkColor@8
  000fc	50		 push	 eax
  000fd	8b 45 c8	 mov	 eax, DWORD PTR _pImageList$1$[ebp]
  00100	ff 70 04	 push	 DWORD PTR [eax+4]
  00103	ff d6		 call	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 320  : 				pImageList->DrawIndirect(pDC, lphdi->iImage, point, size, CPoint(0, 0));

  00105	68 00 00 00 ff	 push	 -16777216		; ff000000H
  0010a	6a 00		 push	 0
  0010c	6a 00		 push	 0
  0010e	8b 45 cc	 mov	 eax, DWORD PTR _lphdi$GSCopy$1$[ebp]
  00111	68 00 00 00 ff	 push	 -16777216		; ff000000H
  00116	68 00 00 00 ff	 push	 -16777216		; ff000000H
  0011b	68 20 00 cc 00	 push	 13369376		; 00cc0020H
  00120	8b 4d c8	 mov	 ecx, DWORD PTR _pImageList$1$[ebp]
  00123	6a 00		 push	 0
  00125	6a 00		 push	 0
  00127	6a 00		 push	 0
  00129	ff 75 bc	 push	 DWORD PTR _size$2$[ebp]
  0012c	ff 75 c0	 push	 DWORD PTR _size$1$[ebp]
  0012f	ff 75 b8	 push	 DWORD PTR _point$1$[ebp]
  00132	ff 75 e4	 push	 DWORD PTR _rect$[ebp]
  00135	ff 70 1c	 push	 DWORD PTR [eax+28]
  00138	ff 75 b4	 push	 DWORD PTR _pDC$GSCopy$1$[ebp]
  0013b	e8 00 00 00 00	 call	 ?DrawIndirect@CImageList@@QAEHPAVCDC@@HUtagPOINT@@UtagSIZE@@1IKKKKKK@Z ; CImageList::DrawIndirect
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 875  : 	{ ASSERT(m_hImageList != NULL); return ImageList_SetBkColor(m_hImageList, cr); }

  00140	8b 45 c8	 mov	 eax, DWORD PTR _pImageList$1$[ebp]
  00143	57		 push	 edi
  00144	ff 70 04	 push	 DWORD PTR [eax+4]
  00147	ff d6		 call	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 323  : 				iWidth = m_sizeImage.cx;

  00149	8b 45 d0	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  0014c	8b 90 88 00 00
	00		 mov	 edx, DWORD PTR [eax+136]

; 281  : 	rect.left += ((iWidth = DrawImage(pDC, rect, lphdi, FALSE)) != 0) ? iWidth + m_iSpacing : 0;

  00152	85 d2		 test	 edx, edx
  00154	74 0a		 je	 SHORT $LN5@DrawItem
  00156	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0015c	03 ca		 add	 ecx, edx
  0015e	eb 02		 jmp	 SHORT $LN6@DrawItem
$LN5@DrawItem:
  00160	33 c9		 xor	 ecx, ecx
$LN6@DrawItem:
  00162	03 4d 0c	 add	 ecx, DWORD PTR _rect$[ebp]

; 344  : 	if (pBitmap)

  00165	83 7d c4 00	 cmp	 DWORD PTR _pBitmap$1$[ebp], 0

; 281  : 	rect.left += ((iWidth = DrawImage(pDC, rect, lphdi, FALSE)) != 0) ? iWidth + m_iSpacing : 0;

  00169	89 4d 0c	 mov	 DWORD PTR _rect$[ebp], ecx

; 344  : 	if (pBitmap)

  0016c	0f 84 c1 00 00
	00		 je	 $LN104@DrawItem

; 345  : 	{
; 346  : 		iWidth = pBitmapInfo->bmWidth;

  00172	8b 75 14	 mov	 esi, DWORD PTR _rect$[ebp+8]
  00175	8b c6		 mov	 eax, esi
  00177	8b 7d 8c	 mov	 edi, DWORD PTR _BitmapInfo$[ebp+4]
  0017a	2b c1		 sub	 eax, ecx
  0017c	89 7d bc	 mov	 DWORD PTR _iWidth$1$[ebp], edi
  0017f	3b f8		 cmp	 edi, eax

; 347  : 		if (iWidth <= rect.Width() && rect.Width() > 0)

  00181	0f 8f af 00 00
	00		 jg	 $LN7@DrawItem
  00187	85 c0		 test	 eax, eax
  00189	0f 8e a7 00 00
	00		 jle	 $LN7@DrawItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 611  : 	return CPoint((left+right)/2, (top+bottom)/2);

  0018f	8b 45 18	 mov	 eax, DWORD PTR _rect$[ebp+12]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 351  : 			point.y = rect.CenterPoint().y - (pBitmapInfo->bmHeight >> 1);

  00192	2b f7		 sub	 esi, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 611  : 	return CPoint((left+right)/2, (top+bottom)/2);

  00194	03 45 10	 add	 eax, DWORD PTR _rect$[ebp+4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 351  : 			point.y = rect.CenterPoint().y - (pBitmapInfo->bmHeight >> 1);

  00197	8b 4d 90	 mov	 ecx, DWORD PTR _BitmapInfo$[ebp+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 611  : 	return CPoint((left+right)/2, (top+bottom)/2);

  0019a	99		 cdq
  0019b	2b c2		 sub	 eax, edx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 351  : 			point.y = rect.CenterPoint().y - (pBitmapInfo->bmHeight >> 1);

  0019d	d1 f9		 sar	 ecx, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 611  : 	return CPoint((left+right)/2, (top+bottom)/2);

  0019f	d1 f8		 sar	 eax, 1
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 351  : 			point.y = rect.CenterPoint().y - (pBitmapInfo->bmHeight >> 1);

  001a1	2b c1		 sub	 eax, ecx

; 358  : 			CDC dc;

  001a3	8d 4d a0	 lea	 ecx, DWORD PTR _dc$3[ebp]
  001a6	89 45 b8	 mov	 DWORD PTR _point$1$sroa$571$1$[ebp], eax
  001a9	e8 00 00 00 00	 call	 ??0CDC@@QAE@XZ		; CDC::CDC
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 316  : 	{ return this == NULL ? NULL : m_hDC; }

  001ae	8b 7d b4	 mov	 edi, DWORD PTR _pDC$GSCopy$1$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 358  : 			CDC dc;

  001b1	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 316  : 	{ return this == NULL ? NULL : m_hDC; }

  001b8	85 ff		 test	 edi, edi
  001ba	75 04		 jne	 SHORT $LN66@DrawItem
  001bc	33 c0		 xor	 eax, eax
  001be	eb 03		 jmp	 SHORT $LN67@DrawItem
$LN66@DrawItem:
  001c0	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
$LN67@DrawItem:

; 330  : 	{ return Attach(::CreateCompatibleDC(pDC->GetSafeHdc())); }

  001c3	50		 push	 eax
  001c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateCompatibleDC@4
  001ca	50		 push	 eax
  001cb	8d 4d a0	 lea	 ecx, DWORD PTR _dc$3[ebp]
  001ce	e8 00 00 00 00	 call	 ?Attach@CDC@@QAEHPAUHDC__@@@Z ; CDC::Attach
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 359  : 			if (dc.CreateCompatibleDC(pDC) == TRUE) 

  001d3	83 f8 01	 cmp	 eax, 1
  001d6	75 36		 jne	 SHORT $LN50@DrawItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 361  : 	{ ASSERT(m_hDC != NULL); return (CBitmap*) SelectGdiObject(m_hDC, pBitmap->GetSafeHandle()); }

  001d8	8b 45 c4	 mov	 eax, DWORD PTR _pBitmap$1$[ebp]
  001db	ff 70 04	 push	 DWORD PTR [eax+4]
  001de	ff 75 a4	 push	 DWORD PTR _dc$3[ebp+4]
  001e1	e8 00 00 00 00	 call	 ?SelectGdiObject@CDC@@KGPAVCGdiObject@@PAUHDC__@@PAX@Z ; CDC::SelectGdiObject

; 552  : 	{ ASSERT(m_hDC != NULL); return ::BitBlt(m_hDC, x, y, nWidth, nHeight,

  001e6	68 20 00 cc 00	 push	 13369376		; 00cc0020H
  001eb	6a 00		 push	 0
  001ed	6a 00		 push	 0
  001ef	ff 75 a4	 push	 DWORD PTR _dc$3[ebp+4]
  001f2	ff 75 90	 push	 DWORD PTR _BitmapInfo$[ebp+8]
  001f5	ff 75 8c	 push	 DWORD PTR _BitmapInfo$[ebp+4]
  001f8	ff 75 b8	 push	 DWORD PTR _point$1$sroa$571$1$[ebp]
  001fb	56		 push	 esi
  001fc	ff 77 04	 push	 DWORD PTR [edi+4]
  001ff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__BitBlt@36
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 362  : 				iWidth = pDC->BitBlt(

  00205	f7 d8		 neg	 eax
  00207	1b f6		 sbb	 esi, esi
  00209	23 75 bc	 and	 esi, DWORD PTR _iWidth$1$[ebp]

; 363  : 					point.x, point.y, 
; 364  : 					pBitmapInfo->bmWidth, pBitmapInfo->bmHeight, 
; 365  : 					&dc, 
; 366  : 					0, 0, 
; 367  : 					SRCCOPY
; 368  : 				) ? iWidth:0;
; 369  : 			}

  0020c	eb 02		 jmp	 SHORT $LN51@DrawItem
$LN50@DrawItem:

; 370  : 			else 
; 371  : 				iWidth = 0;

  0020e	33 f6		 xor	 esi, esi
$LN51@DrawItem:

; 372  : 		}

  00210	8d 4d a0	 lea	 ecx, DWORD PTR _dc$3[ebp]
  00213	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0021a	e8 00 00 00 00	 call	 ??1CDC@@UAE@XZ		; CDC::~CDC

; 282  : 	rect.right -= ((iWidth = DrawBitmap(pDC, rect, lphdi, pBitmap, &BitmapInfo, TRUE)) != 0) ? 

  0021f	85 f6		 test	 esi, esi
  00221	74 10		 je	 SHORT $LN104@DrawItem
  00223	8b 45 d0	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00226	8b 80 84 00 00
	00		 mov	 eax, DWORD PTR [eax+132]
  0022c	03 c6		 add	 eax, esi
  0022e	8b 75 14	 mov	 esi, DWORD PTR _rect$[ebp+8]
  00231	eb 08		 jmp	 SHORT $LN8@DrawItem
$LN104@DrawItem:
  00233	8b 75 14	 mov	 esi, DWORD PTR _rect$[ebp+8]
$LN7@DrawItem:
  00236	8b 7d b4	 mov	 edi, DWORD PTR _pDC$GSCopy$1$[ebp]
  00239	33 c0		 xor	 eax, eax
$LN8@DrawItem:

; 386  : 	pDC->SetTextColor(m_crBtnText);//header text

  0023b	8b 4d d0	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]

; 282  : 	rect.right -= ((iWidth = DrawBitmap(pDC, rect, lphdi, pBitmap, &BitmapInfo, TRUE)) != 0) ? 

  0023e	2b f0		 sub	 esi, eax

; 386  : 	pDC->SetTextColor(m_crBtnText);//header text

  00240	8b 07		 mov	 eax, DWORD PTR [edi]

; 282  : 	rect.right -= ((iWidth = DrawBitmap(pDC, rect, lphdi, pBitmap, &BitmapInfo, TRUE)) != 0) ? 

  00242	89 75 14	 mov	 DWORD PTR _rect$[ebp+8], esi

; 283  : 		iWidth + m_iSpacing : 0;
; 284  : 	
; 285  : 	DrawText(pDC, rect, lphdi);

  00245	0f 10 45 0c	 movups	 xmm0, XMMWORD PTR _rect$[ebp]

; 386  : 	pDC->SetTextColor(m_crBtnText);//header text

  00249	ff b1 bc 00 00
	00		 push	 DWORD PTR [ecx+188]
  0024f	8b cf		 mov	 ecx, edi

; 283  : 		iWidth + m_iSpacing : 0;
; 284  : 	
; 285  : 	DrawText(pDC, rect, lphdi);

  00251	0f 11 45 d4	 movups	 XMMWORD PTR _rect$[ebp], xmm0

; 386  : 	pDC->SetTextColor(m_crBtnText);//header text

  00255	ff 50 38	 call	 DWORD PTR [eax+56]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  00258	8b 45 dc	 mov	 eax, DWORD PTR _rect$[ebp+8]
  0025b	2b 45 d4	 sub	 eax, DWORD PTR _rect$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 388  : 	if (rect.Width() > 0 && lphdi->mask & HDI_TEXT && lphdi->fmt & HDF_STRING)

  0025e	85 c0		 test	 eax, eax
  00260	7e 4f		 jle	 SHORT $LN81@DrawItem
  00262	8b 75 cc	 mov	 esi, DWORD PTR _lphdi$GSCopy$1$[ebp]
  00265	f6 06 02	 test	 BYTE PTR [esi], 2
  00268	74 47		 je	 SHORT $LN81@DrawItem
  0026a	f7 46 14 00 40
	00 00		 test	 DWORD PTR [esi+20], 16384 ; 00004000H
  00271	74 3e		 je	 SHORT $LN81@DrawItem

; 390  : 		size = pDC->GetTextExtent(lphdi->pszText);

  00273	ff 76 08	 push	 DWORD PTR [esi+8]
  00276	8d 4d cc	 lea	 ecx, DWORD PTR $T5[ebp]
  00279	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 639  : 		VERIFY(::GetTextExtentPoint32(m_hAttribDC, str, (int)str.GetLength(), &size));

  0027f	8d 45 b0	 lea	 eax, DWORD PTR _size$4[ebp]
  00282	50		 push	 eax
  00283	8b 45 cc	 mov	 eax, DWORD PTR $T5[ebp]
  00286	ff 70 f4	 push	 DWORD PTR [eax-12]
  00289	50		 push	 eax
  0028a	ff 77 08	 push	 DWORD PTR [edi+8]
  0028d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTextExtentPoint32A@16
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 390  : 		size = pDC->GetTextExtent(lphdi->pszText);

  00293	8d 4d cc	 lea	 ecx, DWORD PTR $T5[ebp]
  00296	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 391  : 
; 392  : 		// always center column headers
; 393  : 		pDC->DrawText(lphdi->pszText, -1, rect, 

  0029c	8b 07		 mov	 eax, DWORD PTR [edi]
  0029e	8d 4d d4	 lea	 ecx, DWORD PTR _rect$[ebp]
  002a1	68 25 80 00 00	 push	 32805			; 00008025H
  002a6	51		 push	 ecx
  002a7	6a ff		 push	 -1
  002a9	ff 76 08	 push	 DWORD PTR [esi+8]
  002ac	8b cf		 mov	 ecx, edi
  002ae	ff 50 70	 call	 DWORD PTR [eax+112]
$LN81@DrawItem:

; 286  : 	
; 287  : }

  002b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  002bb	59		 pop	 ecx
  002bc	5f		 pop	 edi
  002bd	5e		 pop	 esi
  002be	8b e5		 mov	 esp, ebp
  002c0	5d		 pop	 ebp
  002c1	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DrawItem@CXHeaderCtrl@@UAEXPAVCDC@@VCRect@@PAU_HD_ITEMA@@@Z$0:
  00000	8d 4d a0	 lea	 ecx, DWORD PTR _dc$3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDC@@UAE@XZ		; CDC::~CDC
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?DrawItem@CXHeaderCtrl@@UAEXPAVCDC@@VCRect@@PAU_HD_ITEMA@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a 88	 mov	 ecx, DWORD PTR [edx-120]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DrawItem@CXHeaderCtrl@@UAEXPAVCDC@@VCRect@@PAU_HD_ITEMA@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DrawItem@CXHeaderCtrl@@UAEXPAVCDC@@VCRect@@PAU_HD_ITEMA@@@Z ENDP ; CXHeaderCtrl::DrawItem
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?DrawItem@CXHeaderCtrl@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?DrawItem@CXHeaderCtrl@@UAEXPAUtagDRAWITEMSTRUCT@@@Z PROC ; CXHeaderCtrl::DrawItem, COMDAT
; _this$ = ecx

; 257  : 	ASSERT(FALSE);  // must override for self draw header controls
; 258  : }

  00000	c2 04 00	 ret	 4
?DrawItem@CXHeaderCtrl@@UAEXPAUtagDRAWITEMSTRUCT@@@Z ENDP ; CXHeaderCtrl::DrawItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?SetSortImage@CXHeaderCtrl@@QAEXHH@Z
_TEXT	SEGMENT
_nCol$ = 8						; size = 4
_bAscending$ = 12					; size = 4
?SetSortImage@CXHeaderCtrl@@QAEXHH@Z PROC		; CXHeaderCtrl::SetSortImage, COMDAT
; _this$ = ecx

; 487  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 488  : 	m_nSortCol = nCol;

  00003	8b 45 08	 mov	 eax, DWORD PTR _nCol$[ebp]
  00006	89 81 c0 00 00
	00		 mov	 DWORD PTR [ecx+192], eax

; 489  : 	m_bSortAsc = bAscending;

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _bAscending$[ebp]
  0000f	89 81 c4 00 00
	00		 mov	 DWORD PTR [ecx+196], eax

; 490  : }

  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?SetSortImage@CXHeaderCtrl@@QAEXHH@Z ENDP		; CXHeaderCtrl::SetSortImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?ModifyProperty@CXHeaderCtrl@@QAEHIJ@Z
_TEXT	SEGMENT
_wParam$ = 8						; size = 4
_lParam$ = 12						; size = 4
?ModifyProperty@CXHeaderCtrl@@QAEHIJ@Z PROC		; CXHeaderCtrl::ModifyProperty, COMDAT
; _this$ = ecx

; 83   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 84   : 	switch(wParam)

  00003	8b 45 08	 mov	 eax, DWORD PTR _wParam$[ebp]
  00006	8b d1		 mov	 edx, ecx
  00008	48		 dec	 eax
  00009	83 f8 03	 cmp	 eax, 3
  0000c	77 53		 ja	 SHORT $LN8@ModifyProp
  0000e	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN12@ModifyProp[eax*4]
$LN4@ModifyProp:

; 85   : 	{
; 86   : 		case FH_PROPERTY_SPACING:
; 87   : 			m_iSpacing = (int)lParam;

  00015	8b 45 0c	 mov	 eax, DWORD PTR _lParam$[ebp]
  00018	89 82 84 00 00
	00		 mov	 DWORD PTR [edx+132], eax

; 88   : 			break;

  0001e	eb 2b		 jmp	 SHORT $LN2@ModifyProp
$LN5@ModifyProp:

; 89   : 
; 90   : 		case FH_PROPERTY_ARROW:
; 91   : 			m_sizeArrow.cx = LOWORD(lParam);

  00020	8b 4d 0c	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00023	0f b7 c1	 movzx	 eax, cx

; 92   : 			m_sizeArrow.cy = HIWORD(lParam);

  00026	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00029	89 82 90 00 00
	00		 mov	 DWORD PTR [edx+144], eax
  0002f	89 8a 94 00 00
	00		 mov	 DWORD PTR [edx+148], ecx

; 93   : 			break;

  00035	eb 14		 jmp	 SHORT $LN2@ModifyProp
$LN6@ModifyProp:

; 94   : 
; 95   : 		case FH_PROPERTY_STATICBORDER:
; 96   : 			m_bStaticBorder = (BOOL)lParam;

  00037	8b 45 0c	 mov	 eax, DWORD PTR _lParam$[ebp]
  0003a	89 82 98 00 00
	00		 mov	 DWORD PTR [edx+152], eax

; 97   : 			break;

  00040	eb 09		 jmp	 SHORT $LN2@ModifyProp
$LN7@ModifyProp:

; 98   : 
; 99   : 		case FH_PROPERTY_DONTDROPCURSOR:
; 100  : 			m_nDontDropCursor = (UINT)lParam;

  00042	8b 45 0c	 mov	 eax, DWORD PTR _lParam$[ebp]
  00045	89 82 9c 00 00
	00		 mov	 DWORD PTR [edx+156], eax
$LN2@ModifyProp:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 114  : 	{ ASSERT(::IsWindow(m_hWnd)); ::InvalidateRect(m_hWnd, NULL, bErase); }

  0004b	6a 01		 push	 1
  0004d	6a 00		 push	 0
  0004f	ff 72 20	 push	 DWORD PTR [edx+32]
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InvalidateRect@12
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 108  : 	return TRUE;

  00058	b8 01 00 00 00	 mov	 eax, 1

; 109  : }

  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
$LN8@ModifyProp:

; 101  : 			break;
; 102  : 
; 103  : 		default:
; 104  : 			return FALSE;

  00061	33 c0		 xor	 eax, eax

; 109  : }

  00063	5d		 pop	 ebp
  00064	c2 08 00	 ret	 8
  00067	90		 npad	 1
$LN12@ModifyProp:
  00068	00 00 00 00	 DD	 $LN4@ModifyProp
  0006c	00 00 00 00	 DD	 $LN5@ModifyProp
  00070	00 00 00 00	 DD	 $LN6@ModifyProp
  00074	00 00 00 00	 DD	 $LN7@ModifyProp
?ModifyProperty@CXHeaderCtrl@@QAEHIJ@Z ENDP		; CXHeaderCtrl::ModifyProperty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ??1CXHeaderCtrl@@UAE@XZ
_TEXT	SEGMENT
??1CXHeaderCtrl@@UAE@XZ PROC				; CXHeaderCtrl::~CXHeaderCtrl, COMDAT
; _this$ = ecx

; 77   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CXHeaderCtrl@@6B@

; 78   : }

  00006	e9 00 00 00 00	 jmp	 ??1CHeaderCtrl@@UAE@XZ	; CHeaderCtrl::~CHeaderCtrl
??1CXHeaderCtrl@@UAE@XZ ENDP				; CXHeaderCtrl::~CXHeaderCtrl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ??0CXHeaderCtrl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CXHeaderCtrl@@QAE@XZ PROC				; CXHeaderCtrl::CXHeaderCtrl, COMDAT
; _this$ = ecx

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl

; 539  : 	{ }

  0000a	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 50   : {

  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CXHeaderCtrl@@6B@

; 72   : }

  00015	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 400  : 	x = 0;

  00017	c7 86 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+168], 0

; 401  : 	y = 0;

  00021	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 51   : 	m_bDoubleBuffer = TRUE;

  0002b	c7 86 80 00 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+128], 1

; 52   : 	m_iSpacing = 6;

  00035	c7 86 84 00 00
	00 06 00 00 00	 mov	 DWORD PTR [esi+132], 6

; 53   : 	m_sizeArrow.cx = 8;

  0003f	c7 86 90 00 00
	00 08 00 00 00	 mov	 DWORD PTR [esi+144], 8

; 54   : 	m_sizeArrow.cy = 8;

  00049	c7 86 94 00 00
	00 08 00 00 00	 mov	 DWORD PTR [esi+148], 8

; 55   : 	m_sizeImage.cx = 0;

  00053	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0

; 56   : 	m_sizeImage.cy = 0;

  0005d	c7 86 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+140], 0

; 57   : 	m_bStaticBorder = FALSE;

  00067	c7 86 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+152], 0

; 58   : 	m_nDontDropCursor = 0;

  00071	c7 86 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+156], 0

; 59   : 	m_bResizing = FALSE;

  0007b	c7 86 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+160], 0

; 60   : 	m_nClickFlags = 0;

  00085	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0

; 61   : 
; 62   : //	m_cr3DHighLight = ::GetSysColor(COLOR_3DHIGHLIGHT);
; 63   : 	m_cr3DHighLight = RGB(175,194,221);

  0008f	c7 86 b0 00 00
	00 af c2 dd 00	 mov	 DWORD PTR [esi+176], 14533295 ; 00ddc2afH

; 64   : //	m_cr3DShadow    = ::GetSysColor(COLOR_3DSHADOW);
; 65   : 	m_cr3DShadow = RGB(103,119,138);

  00099	c7 86 b4 00 00
	00 67 77 8a 00	 mov	 DWORD PTR [esi+180], 9074535 ; 008a7767H

; 66   : //	m_cr3DFace      = ::GetSysColor(COLOR_3DFACE);
; 67   : 	m_cr3DFace		= RGB(175,194,221);

  000a3	c7 86 b8 00 00
	00 af c2 dd 00	 mov	 DWORD PTR [esi+184], 14533295 ; 00ddc2afH

; 68   : //	m_crBtnText     = ::GetSysColor(COLOR_BTNTEXT);
; 69   : 	m_crBtnText		= RGB(0,0,0);

  000ad	c7 86 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+188], 0

; 70   : 
; 71   : 	m_nSortCol = -1;

  000b7	c7 86 c0 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+192], -1

; 72   : }

  000c1	5e		 pop	 esi
  000c2	8b e5		 mov	 esp, ebp
  000c4	5d		 pop	 ebp
  000c5	c3		 ret	 0
??0CXHeaderCtrl@@QAE@XZ ENDP				; CXHeaderCtrl::CXHeaderCtrl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?CreateObject@CXHeaderCtrl@@SGPAVCObject@@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateObject@CXHeaderCtrl@@SGPAVCObject@@XZ PROC	; CXHeaderCtrl::CreateObject, COMDAT

; 32   : IMPLEMENT_DYNCREATE(CXHeaderCtrl, CHeaderCtrl)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateObject@CXHeaderCtrl@@SGPAVCObject@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 116  : 	{ return ::operator new(nSize); }

  00024	68 c8 00 00 00	 push	 200			; 000000c8H
  00029	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 32   : IMPLEMENT_DYNCREATE(CXHeaderCtrl, CHeaderCtrl)

  0002e	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 116  : 	{ return ::operator new(nSize); }

  00030	83 c4 04	 add	 esp, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 32   : IMPLEMENT_DYNCREATE(CXHeaderCtrl, CHeaderCtrl)

  00033	89 75 f0	 mov	 DWORD PTR $T2[ebp], esi
  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003d	85 f6		 test	 esi, esi
  0003f	0f 84 c9 00 00
	00		 je	 $LN3@CreateObje
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl

; 539  : 	{ }

  00045	8b ce		 mov	 ecx, esi
  00047	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 50   : {

  0004c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CXHeaderCtrl@@6B@

; 32   : IMPLEMENT_DYNCREATE(CXHeaderCtrl, CHeaderCtrl)

  00052	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 400  : 	x = 0;

  00054	c7 86 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+168], 0

; 401  : 	y = 0;

  0005e	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp

; 51   : 	m_bDoubleBuffer = TRUE;

  00068	c7 86 80 00 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+128], 1

; 52   : 	m_iSpacing = 6;

  00072	c7 86 84 00 00
	00 06 00 00 00	 mov	 DWORD PTR [esi+132], 6

; 53   : 	m_sizeArrow.cx = 8;

  0007c	c7 86 90 00 00
	00 08 00 00 00	 mov	 DWORD PTR [esi+144], 8

; 54   : 	m_sizeArrow.cy = 8;

  00086	c7 86 94 00 00
	00 08 00 00 00	 mov	 DWORD PTR [esi+148], 8

; 55   : 	m_sizeImage.cx = 0;

  00090	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0

; 56   : 	m_sizeImage.cy = 0;

  0009a	c7 86 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+140], 0

; 57   : 	m_bStaticBorder = FALSE;

  000a4	c7 86 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+152], 0

; 58   : 	m_nDontDropCursor = 0;

  000ae	c7 86 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+156], 0

; 59   : 	m_bResizing = FALSE;

  000b8	c7 86 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+160], 0

; 60   : 	m_nClickFlags = 0;

  000c2	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0

; 61   : 
; 62   : //	m_cr3DHighLight = ::GetSysColor(COLOR_3DHIGHLIGHT);
; 63   : 	m_cr3DHighLight = RGB(175,194,221);

  000cc	c7 86 b0 00 00
	00 af c2 dd 00	 mov	 DWORD PTR [esi+176], 14533295 ; 00ddc2afH

; 64   : //	m_cr3DShadow    = ::GetSysColor(COLOR_3DSHADOW);
; 65   : 	m_cr3DShadow = RGB(103,119,138);

  000d6	c7 86 b4 00 00
	00 67 77 8a 00	 mov	 DWORD PTR [esi+180], 9074535 ; 008a7767H

; 66   : //	m_cr3DFace      = ::GetSysColor(COLOR_3DFACE);
; 67   : 	m_cr3DFace		= RGB(175,194,221);

  000e0	c7 86 b8 00 00
	00 af c2 dd 00	 mov	 DWORD PTR [esi+184], 14533295 ; 00ddc2afH

; 68   : //	m_crBtnText     = ::GetSysColor(COLOR_BTNTEXT);
; 69   : 	m_crBtnText		= RGB(0,0,0);

  000ea	c7 86 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+188], 0

; 70   : 
; 71   : 	m_nSortCol = -1;

  000f4	c7 86 c0 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+192], -1

; 32   : IMPLEMENT_DYNCREATE(CXHeaderCtrl, CHeaderCtrl)

  000fe	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00101	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00108	59		 pop	 ecx
  00109	5e		 pop	 esi
  0010a	8b e5		 mov	 esp, ebp
  0010c	5d		 pop	 ebp
  0010d	c3		 ret	 0
$LN3@CreateObje:
  0010e	33 c0		 xor	 eax, eax
  00110	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00113	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011a	59		 pop	 ecx
  0011b	5e		 pop	 esi
  0011c	8b e5		 mov	 esp, ebp
  0011e	5d		 pop	 ebp
  0011f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateObject@CXHeaderCtrl@@SGPAVCObject@@XZ$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00009	c3		 ret	 0
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
__ehhandler$?CreateObject@CXHeaderCtrl@@SGPAVCObject@@XZ:
  0000f	90		 npad	 1
  00010	90		 npad	 1
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateObject@CXHeaderCtrl@@SGPAVCObject@@XZ
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateObject@CXHeaderCtrl@@SGPAVCObject@@XZ ENDP	; CXHeaderCtrl::CreateObject
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?GetRuntimeClass@CXHeaderCtrl@@UBEPAUCRuntimeClass@@XZ
_TEXT	SEGMENT
?GetRuntimeClass@CXHeaderCtrl@@UBEPAUCRuntimeClass@@XZ PROC ; CXHeaderCtrl::GetRuntimeClass, COMDAT
; _this$ = ecx

; 32   : IMPLEMENT_DYNCREATE(CXHeaderCtrl, CHeaderCtrl)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?classCXHeaderCtrl@CXHeaderCtrl@@2UCRuntimeClass@@B ; CXHeaderCtrl::classCXHeaderCtrl
  00005	c3		 ret	 0
?GetRuntimeClass@CXHeaderCtrl@@UBEPAUCRuntimeClass@@XZ ENDP ; CXHeaderCtrl::GetRuntimeClass
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?GetThisClass@CXHeaderCtrl@@SGPAUCRuntimeClass@@XZ
_TEXT	SEGMENT
?GetThisClass@CXHeaderCtrl@@SGPAUCRuntimeClass@@XZ PROC	; CXHeaderCtrl::GetThisClass, COMDAT

; 32   : IMPLEMENT_DYNCREATE(CXHeaderCtrl, CHeaderCtrl)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?classCXHeaderCtrl@CXHeaderCtrl@@2UCRuntimeClass@@B ; CXHeaderCtrl::classCXHeaderCtrl
  00005	c3		 ret	 0
?GetThisClass@CXHeaderCtrl@@SGPAUCRuntimeClass@@XZ ENDP	; CXHeaderCtrl::GetThisClass
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?_GetBaseClass@CXHeaderCtrl@@KGPAUCRuntimeClass@@XZ
_TEXT	SEGMENT
?_GetBaseClass@CXHeaderCtrl@@KGPAUCRuntimeClass@@XZ PROC ; CXHeaderCtrl::_GetBaseClass, COMDAT

; 32   : IMPLEMENT_DYNCREATE(CXHeaderCtrl, CHeaderCtrl)

  00000	e9 00 00 00 00	 jmp	 ?GetThisClass@CHeaderCtrl@@SGPAUCRuntimeClass@@XZ ; CHeaderCtrl::GetThisClass
?_GetBaseClass@CXHeaderCtrl@@KGPAUCRuntimeClass@@XZ ENDP ; CXHeaderCtrl::_GetBaseClass
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCMemDC@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCMemDC@@UAEPAXI@Z PROC				; CMemDC::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CMemDC@@UAE@XZ	; CMemDC::~CMemDC
  0000b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0000e	a8 01		 test	 al, 1
  00010	74 1f		 je	 SHORT $LN9@scalar
  00012	a8 04		 test	 al, 4
  00014	75 10		 jne	 SHORT $LN3@scalar

; 112  : 	{ ::operator delete(p); }

  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001c	83 c4 04	 add	 esp, 4
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
$LN3@scalar:
  00026	6a 34		 push	 52			; 00000034H
  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002e	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00031	8b c6		 mov	 eax, esi
  00033	5e		 pop	 esi
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
??_GCMemDC@@UAEPAXI@Z ENDP				; CMemDC::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\MemDC.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\MemDC.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\MemDC.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\MemDC.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\MemDC.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\MemDC.h
;	COMDAT ??1CMemDC@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CMemDC@@UAE@XZ PROC					; CMemDC::~CMemDC, COMDAT
; _this$ = ecx

; 54   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CMemDC@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b d9		 mov	 ebx, ecx

; 55   :         if (m_bMemDC) 

  00027	83 7b 30 00	 cmp	 DWORD PTR [ebx+48], 0
  0002b	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CMemDC@@6B@
  00031	74 4a		 je	 SHORT $LN2@CMemDC

; 58   :             m_pDC->BitBlt(m_rect.left, m_rect.top, m_rect.Width(), m_rect.Height(),

  00033	8b 7b 24	 mov	 edi, DWORD PTR [ebx+36]
  00036	8b 73 20	 mov	 esi, DWORD PTR [ebx+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 581  : 	return bottom - top;

  00039	8b 53 2c	 mov	 edx, DWORD PTR [ebx+44]

; 576  : 	return right - left;

  0003c	8b 4b 28	 mov	 ecx, DWORD PTR [ebx+40]

; 581  : 	return bottom - top;

  0003f	2b d7		 sub	 edx, edi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\MemDC.h

; 58   :             m_pDC->BitBlt(m_rect.left, m_rect.top, m_rect.Width(), m_rect.Height(),

  00041	8b 43 1c	 mov	 eax, DWORD PTR [ebx+28]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  00044	2b ce		 sub	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 552  : 	{ ASSERT(m_hDC != NULL); return ::BitBlt(m_hDC, x, y, nWidth, nHeight,

  00046	68 20 00 cc 00	 push	 13369376		; 00cc0020H
  0004b	57		 push	 edi
  0004c	56		 push	 esi
  0004d	ff 73 04	 push	 DWORD PTR [ebx+4]
  00050	52		 push	 edx
  00051	51		 push	 ecx
  00052	57		 push	 edi
  00053	56		 push	 esi
  00054	ff 70 04	 push	 DWORD PTR [eax+4]
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__BitBlt@36
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\MemDC.h

; 62   :             SelectObject(m_pOldBitmap);

  0005d	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 68   : 	{ return this == NULL ? NULL : m_hObject; }

  00060	85 c0		 test	 eax, eax
  00062	75 0b		 jne	 SHORT $LN19@CMemDC

; 361  : 	{ ASSERT(m_hDC != NULL); return (CBitmap*) SelectGdiObject(m_hDC, pBitmap->GetSafeHandle()); }

  00064	50		 push	 eax
  00065	ff 73 04	 push	 DWORD PTR [ebx+4]
  00068	e8 00 00 00 00	 call	 ?SelectGdiObject@CDC@@KGPAVCGdiObject@@PAUHDC__@@PAX@Z ; CDC::SelectGdiObject
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\MemDC.h

; 63   :         } else {

  0006d	eb 1c		 jmp	 SHORT $LN3@CMemDC
$LN19@CMemDC:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 68   : 	{ return this == NULL ? NULL : m_hObject; }

  0006f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 361  : 	{ ASSERT(m_hDC != NULL); return (CBitmap*) SelectGdiObject(m_hDC, pBitmap->GetSafeHandle()); }

  00072	50		 push	 eax
  00073	ff 73 04	 push	 DWORD PTR [ebx+4]
  00076	e8 00 00 00 00	 call	 ?SelectGdiObject@CDC@@KGPAVCGdiObject@@PAUHDC__@@PAX@Z ; CDC::SelectGdiObject
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\MemDC.h

; 63   :         } else {

  0007b	eb 0e		 jmp	 SHORT $LN3@CMemDC
$LN2@CMemDC:

; 64   :             // All we need to do is replace the DC with an illegal value,
; 65   :             // this keeps us from accidently deleting the handles associated with
; 66   :             // the CDC that was passed to the constructor.
; 67   :             m_hDC = m_hAttribDC = NULL;

  0007d	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
  00084	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0
$LN3@CMemDC:

; 69   :     }

  0008b	8d 4b 10	 lea	 ecx, DWORD PTR [ebx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 179  : 	{ }

  0008e	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBitmap@@6B@
  00094	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\MemDC.h

; 69   :     }

  00099	8b cb		 mov	 ecx, ebx
  0009b	e8 00 00 00 00	 call	 ??1CDC@@UAE@XZ		; CDC::~CDC
  000a0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000aa	59		 pop	 ecx
  000ab	5f		 pop	 edi
  000ac	5e		 pop	 esi
  000ad	5b		 pop	 ebx
  000ae	8b e5		 mov	 esp, ebp
  000b0	5d		 pop	 ebp
  000b1	c3		 ret	 0
  000b2	cc		 int	 3
  000b3	cc		 int	 3
  000b4	cc		 int	 3
  000b5	cc		 int	 3
  000b6	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CMemDC@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CMemDC@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CMemDC@@UAE@XZ ENDP					; CMemDC::~CMemDC
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCHeaderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCHeaderCtrl@@UAEPAXI@Z PROC				; CHeaderCtrl::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CHeaderCtrl@@UAE@XZ	; CHeaderCtrl::~CHeaderCtrl
  0000b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0000e	a8 01		 test	 al, 1
  00010	74 22		 je	 SHORT $LN9@scalar
  00012	a8 04		 test	 al, 4
  00014	75 10		 jne	 SHORT $LN3@scalar

; 112  : 	{ ::operator delete(p); }

  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001c	83 c4 04	 add	 esp, 4
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
$LN3@scalar:
  00026	68 80 00 00 00	 push	 128			; 00000080H
  0002b	56		 push	 esi
  0002c	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00031	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00034	8b c6		 mov	 eax, esi
  00036	5e		 pop	 esi
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
??_GCHeaderCtrl@@UAEPAXI@Z ENDP				; CHeaderCtrl::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
?EndModalState@CWnd@@UAEXXZ PROC			; CWnd::EndModalState, COMDAT
; _this$ = ecx

; 567  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	6a 01		 push	 1
  00002	ff 71 20	 push	 DWORD PTR [ecx+32]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  0000b	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
?BeginModalState@CWnd@@UAEXXZ PROC			; CWnd::BeginModalState, COMDAT
; _this$ = ecx

; 565  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	6a 00		 push	 0
  00002	ff 71 20	 push	 DWORD PTR [ecx+32]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  0000b	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC	; CWnd::DoDataExchange, COMDAT
; _this$ = ecx

; 561  : 	{ } // default does nothing

  00000	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ?Escape@CDC@@UAEHHHPBDPAX@Z
_TEXT	SEGMENT
_nEscape$ = 8						; size = 4
_nCount$ = 12						; size = 4
_lpszInData$ = 16					; size = 4
_lpOutData$ = 20					; size = 4
?Escape@CDC@@UAEHHHPBDPAX@Z PROC			; CDC::Escape, COMDAT
; _this$ = ecx

; 727  : 	{ ASSERT(m_hDC != NULL); return ::Escape(m_hDC, nEscape, nCount, lpszInData, lpOutData);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 14	 push	 DWORD PTR _lpOutData$[ebp]
  00006	ff 75 10	 push	 DWORD PTR _lpszInData$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR _nCount$[ebp]
  0000c	ff 75 08	 push	 DWORD PTR _nEscape$[ebp]
  0000f	ff 71 04	 push	 DWORD PTR [ecx+4]
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Escape@20
  00018	5d		 pop	 ebp
  00019	c2 10 00	 ret	 16			; 00000010H
?Escape@CDC@@UAEHHHPBDPAX@Z ENDP			; CDC::Escape
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ?GrayStringA@CDC@@UAEHPAVCBrush@@P6GHPAUHDC__@@JH@ZJHHHHH@Z
_TEXT	SEGMENT
_pBrush$ = 8						; size = 4
_lpfnOutput$ = 12					; size = 4
_lpData$ = 16						; size = 4
_nCount$ = 20						; size = 4
_x$ = 24						; size = 4
_y$ = 28						; size = 4
_nWidth$ = 32						; size = 4
_nHeight$ = 36						; size = 4
?GrayStringA@CDC@@UAEHPAVCBrush@@P6GHPAUHDC__@@JH@ZJHHHHH@Z PROC ; CDC::GrayStringA, COMDAT
; _this$ = ecx

; 678  : 	{ ASSERT(m_hDC != NULL); return ::GrayString(m_hDC, (HBRUSH)pBrush->GetSafeHandle(),

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 	{ return this == NULL ? NULL : m_hObject; }

  00003	8b 45 08	 mov	 eax, DWORD PTR _pBrush$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 03		 je	 SHORT $LN6@GrayString
$LN5@GrayString:
  0000a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
$LN6@GrayString:

; 678  : 	{ ASSERT(m_hDC != NULL); return ::GrayString(m_hDC, (HBRUSH)pBrush->GetSafeHandle(),

  0000d	ff 75 24	 push	 DWORD PTR _nHeight$[ebp]
  00010	ff 75 20	 push	 DWORD PTR _nWidth$[ebp]
  00013	ff 75 1c	 push	 DWORD PTR _y$[ebp]
  00016	ff 75 18	 push	 DWORD PTR _x$[ebp]
  00019	ff 75 14	 push	 DWORD PTR _nCount$[ebp]
  0001c	ff 75 10	 push	 DWORD PTR _lpData$[ebp]
  0001f	ff 75 0c	 push	 DWORD PTR _lpfnOutput$[ebp]
  00022	50		 push	 eax
  00023	ff 71 04	 push	 DWORD PTR [ecx+4]
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrayStringA@36

; 679  : 		(GRAYSTRINGPROC)lpfnOutput, lpData, nCount, x, y, nWidth, nHeight); }

  0002c	5d		 pop	 ebp
  0002d	c2 20 00	 ret	 32			; 00000020H
?GrayStringA@CDC@@UAEHPAVCBrush@@P6GHPAUHDC__@@JH@ZJHHHHH@Z ENDP ; CDC::GrayStringA
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ?DrawTextExA@CDC@@UAEHPADHPAUtagRECT@@IPAUtagDRAWTEXTPARAMS@@@Z
_TEXT	SEGMENT
_lpszString$ = 8					; size = 4
_nCount$ = 12						; size = 4
_lpRect$ = 16						; size = 4
_nFormat$ = 20						; size = 4
_lpDTParams$ = 24					; size = 4
?DrawTextExA@CDC@@UAEHPADHPAUtagRECT@@IPAUtagDRAWTEXTPARAMS@@@Z PROC ; CDC::DrawTextExA, COMDAT
; _this$ = ecx

; 604  : 	{ ASSERT(m_hDC != NULL);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 605  : 		return ::DrawTextEx(m_hDC, lpszString, nCount, lpRect, nFormat, lpDTParams); }

  00003	ff 75 18	 push	 DWORD PTR _lpDTParams$[ebp]
  00006	ff 75 14	 push	 DWORD PTR _nFormat$[ebp]
  00009	ff 75 10	 push	 DWORD PTR _lpRect$[ebp]
  0000c	ff 75 0c	 push	 DWORD PTR _nCount$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR _lpszString$[ebp]
  00012	ff 71 04	 push	 DWORD PTR [ecx+4]
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DrawTextExA@24
  0001b	5d		 pop	 ebp
  0001c	c2 14 00	 ret	 20			; 00000014H
?DrawTextExA@CDC@@UAEHPADHPAUtagRECT@@IPAUtagDRAWTEXTPARAMS@@@Z ENDP ; CDC::DrawTextExA
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ?DrawTextA@CDC@@UAEHPBDHPAUtagRECT@@I@Z
_TEXT	SEGMENT
_lpszString$ = 8					; size = 4
_nCount$ = 12						; size = 4
_lpRect$ = 16						; size = 4
_nFormat$ = 20						; size = 4
?DrawTextA@CDC@@UAEHPBDHPAUtagRECT@@I@Z PROC		; CDC::DrawTextA, COMDAT
; _this$ = ecx

; 593  : 	{ ASSERT(m_hDC != NULL);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 594  : 		return ::DrawText(m_hDC, lpszString, nCount, lpRect, nFormat); }

  00003	ff 75 14	 push	 DWORD PTR _nFormat$[ebp]
  00006	ff 75 10	 push	 DWORD PTR _lpRect$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR _nCount$[ebp]
  0000c	ff 75 08	 push	 DWORD PTR _lpszString$[ebp]
  0000f	ff 71 04	 push	 DWORD PTR [ecx+4]
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DrawTextA@20
  00018	5d		 pop	 ebp
  00019	c2 10 00	 ret	 16			; 00000010H
?DrawTextA@CDC@@UAEHPBDHPAUtagRECT@@I@Z ENDP		; CDC::DrawTextA
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ?TabbedTextOutA@CDC@@UAE?AVCSize@@HHPBDHHPAHH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_lpszString$ = 20					; size = 4
_nCount$ = 24						; size = 4
_nTabPositions$ = 28					; size = 4
_lpnTabStopPositions$ = 32				; size = 4
_nTabOrigin$ = 36					; size = 4
?TabbedTextOutA@CDC@@UAE?AVCSize@@HHPBDHHPAHH@Z PROC	; CDC::TabbedTextOutA, COMDAT
; _this$ = ecx

; 585  : 	{ ASSERT(m_hDC != NULL); return ::TabbedTextOut(m_hDC, x, y, lpszString, nCount,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 24	 push	 DWORD PTR _nTabOrigin$[ebp]
  00006	ff 75 20	 push	 DWORD PTR _lpnTabStopPositions$[ebp]
  00009	ff 75 1c	 push	 DWORD PTR _nTabPositions$[ebp]
  0000c	ff 75 18	 push	 DWORD PTR _nCount$[ebp]
  0000f	ff 75 14	 push	 DWORD PTR _lpszString$[ebp]
  00012	ff 75 10	 push	 DWORD PTR _y$[ebp]
  00015	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  00018	ff 71 04	 push	 DWORD PTR [ecx+4]
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TabbedTextOutA@32
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 328  : 		cx = (short)LOWORD(dwSize);

  00021	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00024	0f bf c8	 movsx	 ecx, ax

; 329  : 		cy = (short)HIWORD(dwSize);

  00027	c1 e8 10	 shr	 eax, 16			; 00000010H
  0002a	89 0a		 mov	 DWORD PTR [edx], ecx
  0002c	0f bf c8	 movsx	 ecx, ax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 585  : 	{ ASSERT(m_hDC != NULL); return ::TabbedTextOut(m_hDC, x, y, lpszString, nCount,

  0002f	8b c2		 mov	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 329  : 		cy = (short)HIWORD(dwSize);

  00031	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 586  : 		nTabPositions, lpnTabStopPositions, nTabOrigin); }

  00034	5d		 pop	 ebp
  00035	c2 20 00	 ret	 32			; 00000020H
?TabbedTextOutA@CDC@@UAE?AVCSize@@HHPBDHHPAHH@Z ENDP	; CDC::TabbedTextOutA
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ?ExtTextOutA@CDC@@UAEHHHIPBUtagRECT@@PBDIPAH@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_nOptions$ = 16						; size = 4
_lpRect$ = 20						; size = 4
_lpszString$ = 24					; size = 4
_nCount$ = 28						; size = 4
_lpDxWidths$ = 32					; size = 4
?ExtTextOutA@CDC@@UAEHHHIPBUtagRECT@@PBDIPAH@Z PROC	; CDC::ExtTextOutA, COMDAT
; _this$ = ecx

; 577  : 	{ ASSERT(m_hDC != NULL); return ::ExtTextOut(m_hDC, x, y, nOptions, lpRect,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 20	 push	 DWORD PTR _lpDxWidths$[ebp]
  00006	ff 75 1c	 push	 DWORD PTR _nCount$[ebp]
  00009	ff 75 18	 push	 DWORD PTR _lpszString$[ebp]
  0000c	ff 75 14	 push	 DWORD PTR _lpRect$[ebp]
  0000f	ff 75 10	 push	 DWORD PTR _nOptions$[ebp]
  00012	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  00015	ff 75 08	 push	 DWORD PTR _x$[ebp]
  00018	ff 71 04	 push	 DWORD PTR [ecx+4]
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ExtTextOutA@32

; 578  : 		lpszString, nCount, lpDxWidths); }

  00021	5d		 pop	 ebp
  00022	c2 1c 00	 ret	 28			; 0000001cH
?ExtTextOutA@CDC@@UAEHHHIPBUtagRECT@@PBDIPAH@Z ENDP	; CDC::ExtTextOutA
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ?TextOutA@CDC@@UAEHHHPBDH@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_lpszString$ = 16					; size = 4
_nCount$ = 20						; size = 4
?TextOutA@CDC@@UAEHHHPBDH@Z PROC			; CDC::TextOutA, COMDAT
; _this$ = ecx

; 572  : 	{ ASSERT(m_hDC != NULL); return ::TextOut(m_hDC, x, y, lpszString, nCount); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 14	 push	 DWORD PTR _nCount$[ebp]
  00006	ff 75 10	 push	 DWORD PTR _lpszString$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  0000c	ff 75 08	 push	 DWORD PTR _x$[ebp]
  0000f	ff 71 04	 push	 DWORD PTR [ecx+4]
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20
  00018	5d		 pop	 ebp
  00019	c2 10 00	 ret	 16			; 00000010H
?TextOutA@CDC@@UAEHHHPBDH@Z ENDP			; CDC::TextOutA
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ?RectVisible@CDC@@UBEHPBUtagRECT@@@Z
_TEXT	SEGMENT
_lpRect$ = 8						; size = 4
?RectVisible@CDC@@UBEHPBUtagRECT@@@Z PROC		; CDC::RectVisible, COMDAT
; _this$ = ecx

; 454  : 	{ ASSERT(m_hDC != NULL); return ::RectVisible(m_hDC, lpRect); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 08	 push	 DWORD PTR _lpRect$[ebp]
  00006	ff 71 04	 push	 DWORD PTR [ecx+4]
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RectVisible@8
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?RectVisible@CDC@@UBEHPBUtagRECT@@@Z ENDP		; CDC::RectVisible
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ?PtVisible@CDC@@UBEHHH@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?PtVisible@CDC@@UBEHHH@Z PROC				; CDC::PtVisible, COMDAT
; _this$ = ecx

; 450  : 	{ ASSERT(m_hDC != NULL); return ::PtVisible(m_hDC, x, y); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _x$[ebp]
  00009	ff 71 04	 push	 DWORD PTR [ecx+4]
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtVisible@12
  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?PtVisible@CDC@@UBEHHH@Z ENDP				; CDC::PtVisible
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBitmap@@UAEPAXI@Z PROC				; CBitmap::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 179  : 	{ }

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBitmap@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  00011	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00014	a8 01		 test	 al, 1
  00016	74 1f		 je	 SHORT $LN12@scalar
  00018	a8 04		 test	 al, 4
  0001a	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
$LN3@scalar:
  0002c	6a 08		 push	 8
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00034	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00037	8b c6		 mov	 eax, esi
  00039	5e		 pop	 esi
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
??_GCBitmap@@UAEPAXI@Z ENDP				; CBitmap::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT
??1CBitmap@@UAE@XZ PROC					; CBitmap::~CBitmap, COMDAT
; _this$ = ecx

; 179  : 	{ }

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBitmap@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
??1CBitmap@@UAE@XZ ENDP					; CBitmap::~CBitmap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCPen@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCPen@@UAEPAXI@Z PROC				; CPen::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 106  : 	{ }

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CPen@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  00011	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00014	a8 01		 test	 al, 1
  00016	74 1f		 je	 SHORT $LN12@scalar
  00018	a8 04		 test	 al, 4
  0001a	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
$LN3@scalar:
  0002c	6a 08		 push	 8
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00034	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00037	8b c6		 mov	 eax, esi
  00039	5e		 pop	 esi
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
??_GCPen@@UAEPAXI@Z ENDP				; CPen::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ??1CPen@@UAE@XZ
_TEXT	SEGMENT
??1CPen@@UAE@XZ PROC					; CPen::~CPen, COMDAT
; _this$ = ecx

; 106  : 	{ }

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CPen@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
??1CPen@@UAE@XZ ENDP					; CPen::~CPen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGdiObject@@UAEPAXI@Z PROC				; CGdiObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  0000b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0000e	a8 01		 test	 al, 1
  00010	74 1f		 je	 SHORT $LN9@scalar
  00012	a8 04		 test	 al, 4
  00014	75 10		 jne	 SHORT $LN3@scalar

; 112  : 	{ ::operator delete(p); }

  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001c	83 c4 04	 add	 esp, 4
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
$LN3@scalar:
  00026	6a 08		 push	 8
  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002e	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00031	8b c6		 mov	 eax, esi
  00033	5e		 pop	 esi
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
??_GCGdiObject@@UAEPAXI@Z ENDP				; CGdiObject::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT
_pException$2 = -540					; size = 4
_strMsg$3 = -536					; size = 4
_szErrorMessage$4 = -532				; size = 512
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
??1CGdiObject@@UAE@XZ PROC				; CGdiObject::~CGdiObject, COMDAT
; _this$ = ecx

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGdiObject@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 10 02 00
	00		 sub	 esp, 528		; 00000210H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00031	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CGdiObject@@6B@

; 75   : 	AFX_BEGIN_DESTRUCTOR

  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 76   : 	DeleteObject();

  0003e	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject
$LN18@CGdiObject:

; 78   : }

  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00054	33 cd		 xor	 ecx, ebp
  00056	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
__catch$??1CGdiObject@@UAE@XZ$0:

; 77   : 	AFX_END_DESTRUCTOR

  0005f	8d 8d e8 fd ff
	ff		 lea	 ecx, DWORD PTR _strMsg$3[ebp]
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0006b	8b b5 e4 fd ff
	ff		 mov	 esi, DWORD PTR _pException$2[ebp]
  00071	8d 8d ec fd ff
	ff		 lea	 ecx, DWORD PTR _szErrorMessage$4[ebp]
  00077	6a 00		 push	 0
  00079	68 00 02 00 00	 push	 512			; 00000200H
  0007e	51		 push	 ecx
  0007f	8b 06		 mov	 eax, DWORD PTR [esi]
  00081	8b ce		 mov	 ecx, esi
  00083	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00087	ff 50 14	 call	 DWORD PTR [eax+20]
  0008a	85 c0		 test	 eax, eax
  0008c	74 2a		 je	 SHORT $LN9@CGdiObject
  0008e	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _szErrorMessage$4[ebp]
  00094	50		 push	 eax
  00095	6a 4d		 push	 77			; 0000004dH
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@
  000a1	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _strMsg$3[ebp]
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HBOOMJBF@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ?6?$CFTs@
  000ac	50		 push	 eax
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  000b3	83 c4 18	 add	 esp, 24			; 00000018H
  000b6	eb 21		 jmp	 SHORT $LN10@CGdiObject
$LN9@CGdiObject:
  000b8	6a 4d		 push	 77			; 0000004dH
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@
  000c4	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _strMsg$3[ebp]
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OMEMOKLE@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ@
  000cf	50		 push	 eax
  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  000d6	83 c4 14	 add	 esp, 20			; 00000014H
$LN10@CGdiObject:
  000d9	6a 00		 push	 0
  000db	6a 00		 push	 0
  000dd	ff b5 e8 fd ff
	ff		 push	 DWORD PTR _strMsg$3[ebp]
  000e3	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox
  000e8	8d 8d e8 fd ff
	ff		 lea	 ecx, DWORD PTR _strMsg$3[ebp]
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000f4	8b 06		 mov	 eax, DWORD PTR [esi]
  000f6	8b ce		 mov	 ecx, esi
  000f8	6a 01		 push	 1
  000fa	ff 50 04	 call	 DWORD PTR [eax+4]
  000fd	b8 00 00 00 00	 mov	 eax, $LN18@CGdiObject
  00102	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CGdiObject@@UAE@XZ$2:
  00000	8d 8d e8 fd ff
	ff		 lea	 ecx, DWORD PTR _strMsg$3[ebp]
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$??1CGdiObject@@UAE@XZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 8a e0 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-544]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGdiObject@@UAE@XZ
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGdiObject@@UAE@XZ ENDP				; CGdiObject::~CGdiObject
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC		; CObject::Dump, COMDAT
; _this$ = ecx

; 122  : 	{ /* no dumping in release builds */ }

  00000	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
?AssertValid@CObject@@UBEXXZ PROC			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 120  : 	{ /* no asserts in release builds */ }

  00000	c2 00 00	 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC		; CObject::Serialize, COMDAT
; _this$ = ecx

; 106  : 	{ /* CObject does not serialize anything by default */ }

  00000	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CObject@@SGXPAX@Z PROC				; CObject::operator delete, COMDAT

; 112  : 	{ ::operator delete(p); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 08	 push	 DWORD PTR _p$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	83 c4 04	 add	 esp, 4
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT
??1CObject@@UAE@XZ PROC					; CObject::~CObject, COMDAT
; _this$ = ecx

; 104  : 	{ }

  00000	c2 00 00	 ret	 0
??1CObject@@UAE@XZ ENDP					; CObject::~CObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYANALYSIS\Control\XHeaderCtrl.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
