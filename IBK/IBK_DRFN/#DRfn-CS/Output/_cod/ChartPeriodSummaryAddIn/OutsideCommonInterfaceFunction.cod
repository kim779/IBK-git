; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\ChartPeriodSummaryAddIn\OutsideCommonInterfaceFunction.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0COutsideCommonInterfaceFunction@@QAE@XZ	; COutsideCommonInterfaceFunction::COutsideCommonInterfaceFunction
PUBLIC	??1COutsideCommonInterfaceFunction@@UAE@XZ	; COutsideCommonInterfaceFunction::~COutsideCommonInterfaceFunction
PUBLIC	?SetOutsideCommonInterface@COutsideCommonInterfaceFunction@@QAEXPAVCOutsideCommonInterface@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; COutsideCommonInterfaceFunction::SetOutsideCommonInterface
PUBLIC	?GetOutsideCommonInterface@COutsideCommonInterfaceFunction@@QAEPAVCOutsideCommonInterface@@XZ ; COutsideCommonInterfaceFunction::GetOutsideCommonInterface
PUBLIC	?Outside_SetRealInfo@COutsideCommonInterfaceFunction@@QAEXPAXPAUHWND__@@IPAD22@Z ; COutsideCommonInterfaceFunction::Outside_SetRealInfo
PUBLIC	?Outside_UnSetRealInfo@COutsideCommonInterfaceFunction@@QAEXPAXPAUHWND__@@IPAD22@Z ; COutsideCommonInterfaceFunction::Outside_UnSetRealInfo
PUBLIC	?Outside_GetMainPath@COutsideCommonInterfaceFunction@@QAEPBDXZ ; COutsideCommonInterfaceFunction::Outside_GetMainPath
PUBLIC	?Outside_GetUserID@COutsideCommonInterfaceFunction@@QAEPBDXZ ; COutsideCommonInterfaceFunction::Outside_GetUserID
PUBLIC	?Outside_RequestTRPacket@COutsideCommonInterfaceFunction@@QAEXFQBDF_N@Z ; COutsideCommonInterfaceFunction::Outside_RequestTRPacket
PUBLIC	?Outside_IsLoad_MarketChart@COutsideCommonInterfaceFunction@@QBE_NXZ ; COutsideCommonInterfaceFunction::Outside_IsLoad_MarketChart
PUBLIC	?InitMChartInterface@COutsideCommonInterfaceFunction@@QAEHXZ ; COutsideCommonInterfaceFunction::InitMChartInterface
PUBLIC	?MChart_IsActiveDataWindow@COutsideCommonInterfaceFunction@@QAE_NXZ ; COutsideCommonInterfaceFunction::MChart_IsActiveDataWindow
PUBLIC	?MChart_SetDataWindowData@COutsideCommonInterfaceFunction@@QAEXPAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@@@@Z ; COutsideCommonInterfaceFunction::MChart_SetDataWindowData
PUBLIC	?MChart_SetImaginaryCandleAndGapRevisionToOutside@COutsideCommonInterfaceFunction@@QAE_N_N0@Z ; COutsideCommonInterfaceFunction::MChart_SetImaginaryCandleAndGapRevisionToOutside
PUBLIC	?MChart_SetYScalePositionToOutside@COutsideCommonInterfaceFunction@@QAE_NH@Z ; COutsideCommonInterfaceFunction::MChart_SetYScalePositionToOutside
PUBLIC	?MChart_SetRightMarginToOutside@COutsideCommonInterfaceFunction@@QAE_NH@Z ; COutsideCommonInterfaceFunction::MChart_SetRightMarginToOutside
PUBLIC	?MChart_SetShowIndicatorVariableToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ; COutsideCommonInterfaceFunction::MChart_SetShowIndicatorVariableToOutside
PUBLIC	?MChart_SetShowIndicatorValueToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ; COutsideCommonInterfaceFunction::MChart_SetShowIndicatorValueToOutside
PUBLIC	?MChart_SetShowHighLowBoundToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ; COutsideCommonInterfaceFunction::MChart_SetShowHighLowBoundToOutside
PUBLIC	?MChart_SetShowExRightDividendToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ; COutsideCommonInterfaceFunction::MChart_SetShowExRightDividendToOutside
PUBLIC	?MChart_SetShowCurrentPriceToOutside@COutsideCommonInterfaceFunction@@QAE_NH@Z ; COutsideCommonInterfaceFunction::MChart_SetShowCurrentPriceToOutside
PUBLIC	?MChart_SetTrendLineColorToOutside@COutsideCommonInterfaceFunction@@QAE_NK@Z ; COutsideCommonInterfaceFunction::MChart_SetTrendLineColorToOutside
PUBLIC	?MChart_SetShowTrendLineValueToOutside@COutsideCommonInterfaceFunction@@QAE_NH@Z ; COutsideCommonInterfaceFunction::MChart_SetShowTrendLineValueToOutside
PUBLIC	?MChart_SetTimeLinkageToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ; COutsideCommonInterfaceFunction::MChart_SetTimeLinkageToOutside
PUBLIC	?MChart_SetAutoSaveToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ; COutsideCommonInterfaceFunction::MChart_SetAutoSaveToOutside
PUBLIC	?MChart_SetShowTrendLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ; COutsideCommonInterfaceFunction::MChart_SetShowTrendLineTextToOutside
PUBLIC	?MChart_SetShowTimeLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ; COutsideCommonInterfaceFunction::MChart_SetShowTimeLineTextToOutside
PUBLIC	?MChart_SetShowPriceLineLeftTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ; COutsideCommonInterfaceFunction::MChart_SetShowPriceLineLeftTextToOutside
PUBLIC	?MChart_SetShowPriceLineRightTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ; COutsideCommonInterfaceFunction::MChart_SetShowPriceLineRightTextToOutside
PUBLIC	?MChart_SetShowTrisectionLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ; COutsideCommonInterfaceFunction::MChart_SetShowTrisectionLineTextToOutside
PUBLIC	?MChart_SetShowQuadrisectionLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ; COutsideCommonInterfaceFunction::MChart_SetShowQuadrisectionLineTextToOutside
PUBLIC	?MChart_SetShowControlLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ; COutsideCommonInterfaceFunction::MChart_SetShowControlLineTextToOutside
PUBLIC	?MChart_GetImaginaryCandleToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ; COutsideCommonInterfaceFunction::MChart_GetImaginaryCandleToOutside
PUBLIC	?MChart_GetYScalePositionToOutside@COutsideCommonInterfaceFunction@@QAE_NAAH@Z ; COutsideCommonInterfaceFunction::MChart_GetYScalePositionToOutside
PUBLIC	?MChart_GetRightMarginToOutside@COutsideCommonInterfaceFunction@@QAE_NAAH@Z ; COutsideCommonInterfaceFunction::MChart_GetRightMarginToOutside
PUBLIC	?MChart_GetShowIndicatorVariableToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ; COutsideCommonInterfaceFunction::MChart_GetShowIndicatorVariableToOutside
PUBLIC	?MChart_GetShowIndicatorValueToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ; COutsideCommonInterfaceFunction::MChart_GetShowIndicatorValueToOutside
PUBLIC	?MChart_GetShowHighLowBoundToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ; COutsideCommonInterfaceFunction::MChart_GetShowHighLowBoundToOutside
PUBLIC	?MChart_GetShowExRightDividendToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ; COutsideCommonInterfaceFunction::MChart_GetShowExRightDividendToOutside
PUBLIC	?MChart_GetShowCurrentPriceToOutside@COutsideCommonInterfaceFunction@@QAE_NAAH@Z ; COutsideCommonInterfaceFunction::MChart_GetShowCurrentPriceToOutside
PUBLIC	?MChart_GetTrendLineColorToOutside@COutsideCommonInterfaceFunction@@QAE_NAAK@Z ; COutsideCommonInterfaceFunction::MChart_GetTrendLineColorToOutside
PUBLIC	?MChart_GetShowTrendLineValueToOutside@COutsideCommonInterfaceFunction@@QAE_NAAH@Z ; COutsideCommonInterfaceFunction::MChart_GetShowTrendLineValueToOutside
PUBLIC	?MChart_GetTimeLinkageToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ; COutsideCommonInterfaceFunction::MChart_GetTimeLinkageToOutside
PUBLIC	?MChart_GetAutoSaveToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ; COutsideCommonInterfaceFunction::MChart_GetAutoSaveToOutside
PUBLIC	?MChart_GetShowTrendLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ; COutsideCommonInterfaceFunction::MChart_GetShowTrendLineTextToOutside
PUBLIC	?MChart_GetShowTimeLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ; COutsideCommonInterfaceFunction::MChart_GetShowTimeLineTextToOutside
PUBLIC	?MChart_GetShowPriceLineLeftTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ; COutsideCommonInterfaceFunction::MChart_GetShowPriceLineLeftTextToOutside
PUBLIC	?MChart_GetShowPriceLineRightTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ; COutsideCommonInterfaceFunction::MChart_GetShowPriceLineRightTextToOutside
PUBLIC	?MChart_GetShowTrisectionLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ; COutsideCommonInterfaceFunction::MChart_GetShowTrisectionLineTextToOutside
PUBLIC	?MChart_GetShowQuadrisectionLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ; COutsideCommonInterfaceFunction::MChart_GetShowQuadrisectionLineTextToOutside
PUBLIC	?MChart_GetShowControlLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ; COutsideCommonInterfaceFunction::MChart_GetShowControlLineTextToOutside
PUBLIC	?MChart_SetPriceLog@COutsideCommonInterfaceFunction@@QAE_N_N@Z ; COutsideCommonInterfaceFunction::MChart_SetPriceLog
PUBLIC	?MChart_OnChartEnvSetupOk@COutsideCommonInterfaceFunction@@QAE_NXZ ; COutsideCommonInterfaceFunction::MChart_OnChartEnvSetupOk
PUBLIC	?InitMChartInterface061115@COutsideCommonInterfaceFunction@@QAEHXZ ; COutsideCommonInterfaceFunction::InitMChartInterface061115
PUBLIC	?GetRevisedPriceFlag@COutsideCommonInterfaceFunction@@QAEHXZ ; COutsideCommonInterfaceFunction::GetRevisedPriceFlag
PUBLIC	?SetRevisedPriceFlag@COutsideCommonInterfaceFunction@@QAEHH@Z ; COutsideCommonInterfaceFunction::SetRevisedPriceFlag
PUBLIC	?OnIndicatorAddOrRemoved@COutsideCommonInterfaceFunction@@QAEHPBD0H@Z ; COutsideCommonInterfaceFunction::OnIndicatorAddOrRemoved
PUBLIC	?OnUserZoomChanged@COutsideCommonInterfaceFunction@@QAEHH@Z ; COutsideCommonInterfaceFunction::OnUserZoomChanged
PUBLIC	?OnToolStateChanged@COutsideCommonInterfaceFunction@@QAEHW4TOOLOPTION@CToolOptionInfo@@H@Z ; COutsideCommonInterfaceFunction::OnToolStateChanged
PUBLIC	?OnOrderInfomationChanged@COutsideCommonInterfaceFunction@@QAEHNHHPBD000@Z ; COutsideCommonInterfaceFunction::OnOrderInfomationChanged
PUBLIC	??_GCOutsideCommonInterfaceFunction@@UAEPAXI@Z	; COutsideCommonInterfaceFunction::`scalar deleting destructor'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_7COutsideCommonInterfaceFunction@@6B@	; COutsideCommonInterfaceFunction::`vftable'
PUBLIC	??_C@_0BD@PNOKNCJO@ChartMetaTable?4dat@		; `string'
PUBLIC	??_C@_0L@HIOFCMKH@MChartMode@			; `string'
PUBLIC	??_C@_0O@GDACOMFO@Chart?5Version@		; `string'
PUBLIC	??_C@_02GMLAAMD@FX@				; `string'
PUBLIC	??_C@_03HKDINIMK@HTS@				; `string'
PUBLIC	??_R4COutsideCommonInterfaceFunction@@6B@	; COutsideCommonInterfaceFunction::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCOutsideCommonInterfaceFunction@@@8	; COutsideCommonInterfaceFunction `RTTI Type Descriptor'
PUBLIC	??_R3COutsideCommonInterfaceFunction@@8		; COutsideCommonInterfaceFunction::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2COutsideCommonInterfaceFunction@@8		; COutsideCommonInterfaceFunction::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@COutsideCommonInterfaceFunction@@8 ; COutsideCommonInterfaceFunction::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp__GetPrivateProfileStringA@24:PROC
EXTRN	__imp_?Concatenate@?$CSimpleStringT@D$00@ATL@@KAXAAV12@PBDH1H@Z:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_?GetManager@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEPAUIAtlStringMgr@2@XZ:PROC
EXTRN	__imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z:PROC
EXTRN	??_ECOutsideCommonInterfaceFunction@@UAEPAXI@Z:PROC ; COutsideCommonInterfaceFunction::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ??_R1A@?0A@EA@COutsideCommonInterfaceFunction@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@COutsideCommonInterfaceFunction@@8 DD FLAT:??_R0?AVCOutsideCommonInterfaceFunction@@@8 ; COutsideCommonInterfaceFunction::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3COutsideCommonInterfaceFunction@@8
rdata$r	ENDS
;	COMDAT ??_R2COutsideCommonInterfaceFunction@@8
rdata$r	SEGMENT
??_R2COutsideCommonInterfaceFunction@@8 DD FLAT:??_R1A@?0A@EA@COutsideCommonInterfaceFunction@@8 ; COutsideCommonInterfaceFunction::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3COutsideCommonInterfaceFunction@@8
rdata$r	SEGMENT
??_R3COutsideCommonInterfaceFunction@@8 DD 00H		; COutsideCommonInterfaceFunction::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2COutsideCommonInterfaceFunction@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCOutsideCommonInterfaceFunction@@@8
data$rs	SEGMENT
??_R0?AVCOutsideCommonInterfaceFunction@@@8 DD FLAT:??_7type_info@@6B@ ; COutsideCommonInterfaceFunction `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCOutsideCommonInterfaceFunction@@', 00H
data$rs	ENDS
;	COMDAT ??_R4COutsideCommonInterfaceFunction@@6B@
rdata$r	SEGMENT
??_R4COutsideCommonInterfaceFunction@@6B@ DD 00H	; COutsideCommonInterfaceFunction::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCOutsideCommonInterfaceFunction@@@8
	DD	FLAT:??_R3COutsideCommonInterfaceFunction@@8
rdata$r	ENDS
;	COMDAT ??_C@_03HKDINIMK@HTS@
CONST	SEGMENT
??_C@_03HKDINIMK@HTS@ DB 'HTS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMLAAMD@FX@
CONST	SEGMENT
??_C@_02GMLAAMD@FX@ DB 'FX', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GDACOMFO@Chart?5Version@
CONST	SEGMENT
??_C@_0O@GDACOMFO@Chart?5Version@ DB 'Chart Version', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HIOFCMKH@MChartMode@
CONST	SEGMENT
??_C@_0L@HIOFCMKH@MChartMode@ DB 'MChartMode', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PNOKNCJO@ChartMetaTable?4dat@
CONST	SEGMENT
??_C@_0BD@PNOKNCJO@ChartMetaTable?4dat@ DB 'ChartMetaTable.dat', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7COutsideCommonInterfaceFunction@@6B@
CONST	SEGMENT
??_7COutsideCommonInterfaceFunction@@6B@ DD FLAT:??_R4COutsideCommonInterfaceFunction@@6B@ ; COutsideCommonInterfaceFunction::`vftable'
	DD	FLAT:??_ECOutsideCommonInterfaceFunction@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetOutsideCommonInterface@COutsideCommonInterfaceFunction@@QAEXPAVCOutsideCommonInterface@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetOutsideCommonInterface@COutsideCommonInterfaceFunction@@QAEXPAVCOutsideCommonInterface@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SetOutsideCommonInterface@COutsideCommonInterfaceFunction@@QAEXPAVCOutsideCommonInterface@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?SetOutsideCommonInterface@COutsideCommonInterfaceFunction@@QAEXPAVCOutsideCommonInterface@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$2
__ehfuncinfo$?SetOutsideCommonInterface@COutsideCommonInterfaceFunction@@QAEXPAVCOutsideCommonInterface@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?SetOutsideCommonInterface@COutsideCommonInterfaceFunction@@QAEXPAVCOutsideCommonInterface@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z$0
__ehfuncinfo$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCOutsideCommonInterfaceFunction@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCOutsideCommonInterfaceFunction@@UAEPAXI@Z PROC	; COutsideCommonInterfaceFunction::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7COutsideCommonInterfaceFunction@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 24		 push	 36			; 00000024H
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GCOutsideCommonInterfaceFunction@@UAEPAXI@Z ENDP	; COutsideCommonInterfaceFunction::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?OnOrderInfomationChanged@COutsideCommonInterfaceFunction@@QAEHNHHPBD000@Z
_TEXT	SEGMENT
_dPirce$ = 8						; size = 8
_Qty$ = 16						; size = 4
_nOrderType$ = 20					; size = 4
_szOrgOrderID$ = 24					; size = 4
_strCustItem1$ = 28					; size = 4
_strCustItem2$ = 32					; size = 4
_strCustItem3$ = 36					; size = 4
?OnOrderInfomationChanged@COutsideCommonInterfaceFunction@@QAEHNHHPBD000@Z PROC ; COutsideCommonInterfaceFunction::OnOrderInfomationChanged, COMDAT
; _this$ = ecx

; 584  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 510  : 	if( m_bMChartInterfaceInited061115) return ( m_pMChartInterface061115 != NULL);

  00006	83 7e 14 00	 cmp	 DWORD PTR [esi+20], 0
  0000a	74 0e		 je	 SHORT $LN7@OnOrderInf
  0000c	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]

; 585  : 	if( InitMChartInterface061115())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@OnOrderInf
$LN4@OnOrderInf:

; 589  : 	}
; 590  : 	return FALSE;

  00013	33 c0		 xor	 eax, eax
  00015	5e		 pop	 esi

; 591  : }

  00016	5d		 pop	 ebp
  00017	c2 20 00	 ret	 32			; 00000020H
$LN7@OnOrderInf:

; 513  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 14 01 00
	00 00		 mov	 DWORD PTR [esi+20], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@OnOrderInf

; 514  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 515  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 516  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 517  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_061115) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 02	 cmp	 eax, 2
  0002f	7c e2		 jl	 SHORT $LN4@OnOrderInf

; 518  : 	m_pMChartInterface061115 = ( CMChartInterface061115 *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 18	 mov	 DWORD PTR [esi+24], ecx

; 519  : 	m_pOldMChartInterface061115 = ( COldMChartInterface061115 *)m_pOutsideCommonInterface;

  00037	89 4e 1c	 mov	 DWORD PTR [esi+28], ecx
$LN11@OnOrderInf:

; 586  : 	{
; 587  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface061115->OnOrderInfomationChanged(dPirce, Qty, nOrderType, szOrgOrderID, strCustItem1, strCustItem2, strCustItem3);

  0003a	ff 75 24	 push	 DWORD PTR _strCustItem3$[ebp]
  0003d	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _dPirce$[ebp]
  00042	ff 75 20	 push	 DWORD PTR _strCustItem2$[ebp]
  00045	ff 75 1c	 push	 DWORD PTR _strCustItem1$[ebp]
  00048	ff 75 18	 push	 DWORD PTR _szOrgOrderID$[ebp]
  0004b	ff 75 14	 push	 DWORD PTR _nOrderType$[ebp]
  0004e	ff 75 10	 push	 DWORD PTR _Qty$[ebp]
  00051	83 ec 08	 sub	 esp, 8
  00054	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  00058	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0005d	74 10		 je	 SHORT $LN3@OnOrderInf
  0005f	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00062	8b 01		 mov	 eax, DWORD PTR [ecx]
  00064	ff 90 f0 00 00
	00		 call	 DWORD PTR [eax+240]
  0006a	5e		 pop	 esi

; 591  : }

  0006b	5d		 pop	 ebp
  0006c	c2 20 00	 ret	 32			; 00000020H
$LN3@OnOrderInf:

; 588  : 		else				return m_pMChartInterface061115->OnOrderInfomationChanged(dPirce, Qty, nOrderType, szOrgOrderID, strCustItem1, strCustItem2, strCustItem3);

  0006f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00071	ff 90 f4 00 00
	00		 call	 DWORD PTR [eax+244]
  00077	5e		 pop	 esi

; 591  : }

  00078	5d		 pop	 ebp
  00079	c2 20 00	 ret	 32			; 00000020H
?OnOrderInfomationChanged@COutsideCommonInterfaceFunction@@QAEHNHHPBD000@Z ENDP ; COutsideCommonInterfaceFunction::OnOrderInfomationChanged
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?OnToolStateChanged@COutsideCommonInterfaceFunction@@QAEHW4TOOLOPTION@CToolOptionInfo@@H@Z
_TEXT	SEGMENT
_p_eToolID$ = 8						; size = 4
_p_bTurnOn$ = 12					; size = 4
?OnToolStateChanged@COutsideCommonInterfaceFunction@@QAEHW4TOOLOPTION@CToolOptionInfo@@H@Z PROC ; COutsideCommonInterfaceFunction::OnToolStateChanged, COMDAT
; _this$ = ecx

; 573  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 510  : 	if( m_bMChartInterfaceInited061115) return ( m_pMChartInterface061115 != NULL);

  00006	83 7e 14 00	 cmp	 DWORD PTR [esi+20], 0
  0000a	74 0e		 je	 SHORT $LN7@OnToolStat
  0000c	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]

; 574  : 	if( InitMChartInterface061115())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@OnToolStat
$LN4@OnToolStat:

; 578  : 	}
; 579  : 	return FALSE;

  00013	33 c0		 xor	 eax, eax
  00015	5e		 pop	 esi

; 580  : }

  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
$LN7@OnToolStat:

; 513  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 14 01 00
	00 00		 mov	 DWORD PTR [esi+20], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@OnToolStat

; 514  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 515  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 516  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 517  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_061115) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 02	 cmp	 eax, 2
  0002f	7c e2		 jl	 SHORT $LN4@OnToolStat

; 518  : 	m_pMChartInterface061115 = ( CMChartInterface061115 *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 18	 mov	 DWORD PTR [esi+24], ecx

; 519  : 	m_pOldMChartInterface061115 = ( COldMChartInterface061115 *)m_pOutsideCommonInterface;

  00037	89 4e 1c	 mov	 DWORD PTR [esi+28], ecx
$LN11@OnToolStat:

; 575  : 	{
; 576  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface061115->OnToolStateChanged( p_eToolID, p_bTurnOn);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0d		 je	 SHORT $LN3@OnToolStat
  00040	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]

; 580  : }

  00046	5d		 pop	 ebp

; 575  : 	{
; 576  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface061115->OnToolStateChanged( p_eToolID, p_bTurnOn);

  00047	ff a0 ec 00 00
	00		 jmp	 DWORD PTR [eax+236]
$LN3@OnToolStat:

; 577  : 		else				return m_pMChartInterface061115->OnToolStateChanged( p_eToolID, p_bTurnOn);

  0004d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004f	5e		 pop	 esi

; 580  : }

  00050	5d		 pop	 ebp

; 577  : 		else				return m_pMChartInterface061115->OnToolStateChanged( p_eToolID, p_bTurnOn);

  00051	ff a0 f0 00 00
	00		 jmp	 DWORD PTR [eax+240]
?OnToolStateChanged@COutsideCommonInterfaceFunction@@QAEHW4TOOLOPTION@CToolOptionInfo@@H@Z ENDP ; COutsideCommonInterfaceFunction::OnToolStateChanged
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?OnUserZoomChanged@COutsideCommonInterfaceFunction@@QAEHH@Z
_TEXT	SEGMENT
_p_nDataCountInView$ = 8				; size = 4
?OnUserZoomChanged@COutsideCommonInterfaceFunction@@QAEHH@Z PROC ; COutsideCommonInterfaceFunction::OnUserZoomChanged, COMDAT
; _this$ = ecx

; 558  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 510  : 	if( m_bMChartInterfaceInited061115) return ( m_pMChartInterface061115 != NULL);

  00006	83 7e 14 00	 cmp	 DWORD PTR [esi+20], 0
  0000a	74 0e		 je	 SHORT $LN7@OnUserZoom
  0000c	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]

; 559  : #ifdef _DEBUG
; 560  : 	CString strMsg;
; 561  : 	strMsg.Format( "User Zoom Changed (for MChart) : %d\r\n", p_nDataCountInView);
; 562  : 	TRACE( strMsg);
; 563  : #endif
; 564  : 	if( InitMChartInterface061115())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@OnUserZoom
$LN4@OnUserZoom:

; 568  : 	}
; 569  : 	return FALSE;

  00013	33 c0		 xor	 eax, eax
  00015	5e		 pop	 esi

; 570  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@OnUserZoom:

; 513  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 14 01 00
	00 00		 mov	 DWORD PTR [esi+20], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@OnUserZoom

; 514  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 515  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 516  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 517  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_061115) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 02	 cmp	 eax, 2
  0002f	7c e2		 jl	 SHORT $LN4@OnUserZoom

; 518  : 	m_pMChartInterface061115 = ( CMChartInterface061115 *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 18	 mov	 DWORD PTR [esi+24], ecx

; 519  : 	m_pOldMChartInterface061115 = ( COldMChartInterface061115 *)m_pOutsideCommonInterface;

  00037	89 4e 1c	 mov	 DWORD PTR [esi+28], ecx
$LN11@OnUserZoom:

; 565  : 	{
; 566  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface061115->OnUserZoomChanged( p_nDataCountInView);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0d		 je	 SHORT $LN3@OnUserZoom
  00040	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]

; 570  : }

  00046	5d		 pop	 ebp

; 565  : 	{
; 566  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface061115->OnUserZoomChanged( p_nDataCountInView);

  00047	ff a0 e8 00 00
	00		 jmp	 DWORD PTR [eax+232]
$LN3@OnUserZoom:

; 567  : 		else				return m_pMChartInterface061115->OnUserZoomChanged( p_nDataCountInView);

  0004d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004f	5e		 pop	 esi

; 570  : }

  00050	5d		 pop	 ebp

; 567  : 		else				return m_pMChartInterface061115->OnUserZoomChanged( p_nDataCountInView);

  00051	ff a0 ec 00 00
	00		 jmp	 DWORD PTR [eax+236]
?OnUserZoomChanged@COutsideCommonInterfaceFunction@@QAEHH@Z ENDP ; COutsideCommonInterfaceFunction::OnUserZoomChanged
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?OnIndicatorAddOrRemoved@COutsideCommonInterfaceFunction@@QAEHPBD0H@Z
_TEXT	SEGMENT
_p_szGraphName$ = 8					; size = 4
_p_szIndicatorName$ = 12				; size = 4
_p_bAdded$ = 16						; size = 4
?OnIndicatorAddOrRemoved@COutsideCommonInterfaceFunction@@QAEHPBD0H@Z PROC ; COutsideCommonInterfaceFunction::OnIndicatorAddOrRemoved, COMDAT
; _this$ = ecx

; 543  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 510  : 	if( m_bMChartInterfaceInited061115) return ( m_pMChartInterface061115 != NULL);

  00006	83 7e 14 00	 cmp	 DWORD PTR [esi+20], 0
  0000a	74 0e		 je	 SHORT $LN7@OnIndicato
  0000c	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]

; 544  : #ifdef _DEBUG
; 545  : 	CString strMsg;
; 546  : 	strMsg.Format( "Graph %s (for MChart) : %s[%s]\r\n", ( p_bAdded ? "Added" : "Deleted"), p_szIndicatorName, p_szGraphName);
; 547  : 	TRACE( strMsg);
; 548  : #endif
; 549  : 	if( InitMChartInterface061115())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@OnIndicato
$LN4@OnIndicato:

; 553  : 	}
; 554  : 	return FALSE;

  00013	33 c0		 xor	 eax, eax
  00015	5e		 pop	 esi

; 555  : }

  00016	5d		 pop	 ebp
  00017	c2 0c 00	 ret	 12			; 0000000cH
$LN7@OnIndicato:

; 513  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 14 01 00
	00 00		 mov	 DWORD PTR [esi+20], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@OnIndicato

; 514  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 515  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 516  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 517  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_061115) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 02	 cmp	 eax, 2
  0002f	7c e2		 jl	 SHORT $LN4@OnIndicato

; 518  : 	m_pMChartInterface061115 = ( CMChartInterface061115 *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 18	 mov	 DWORD PTR [esi+24], ecx

; 519  : 	m_pOldMChartInterface061115 = ( COldMChartInterface061115 *)m_pOutsideCommonInterface;

  00037	89 4e 1c	 mov	 DWORD PTR [esi+28], ecx
$LN11@OnIndicato:

; 550  : 	{
; 551  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface061115->OnIndicatorAddOrRemoved( p_szIndicatorName, p_bAdded);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	ff 75 10	 push	 DWORD PTR _p_bAdded$[ebp]
  00041	ff 75 0c	 push	 DWORD PTR _p_szIndicatorName$[ebp]
  00044	74 10		 je	 SHORT $LN3@OnIndicato
  00046	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00049	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004b	ff 90 e4 00 00
	00		 call	 DWORD PTR [eax+228]
  00051	5e		 pop	 esi

; 555  : }

  00052	5d		 pop	 ebp
  00053	c2 0c 00	 ret	 12			; 0000000cH
$LN3@OnIndicato:

; 552  : 		else				return m_pMChartInterface061115->OnIndicatorAddOrRemoved( p_szIndicatorName, p_bAdded);

  00056	8b 01		 mov	 eax, DWORD PTR [ecx]
  00058	ff 90 e8 00 00
	00		 call	 DWORD PTR [eax+232]
  0005e	5e		 pop	 esi

; 555  : }

  0005f	5d		 pop	 ebp
  00060	c2 0c 00	 ret	 12			; 0000000cH
?OnIndicatorAddOrRemoved@COutsideCommonInterfaceFunction@@QAEHPBD0H@Z ENDP ; COutsideCommonInterfaceFunction::OnIndicatorAddOrRemoved
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?SetRevisedPriceFlag@COutsideCommonInterfaceFunction@@QAEHH@Z
_TEXT	SEGMENT
_p_bRevisedFlag$ = 8					; size = 4
?SetRevisedPriceFlag@COutsideCommonInterfaceFunction@@QAEHH@Z PROC ; COutsideCommonInterfaceFunction::SetRevisedPriceFlag, COMDAT
; _this$ = ecx

; 533  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 510  : 	if( m_bMChartInterfaceInited061115) return ( m_pMChartInterface061115 != NULL);

  00006	83 7e 14 00	 cmp	 DWORD PTR [esi+20], 0
  0000a	74 0e		 je	 SHORT $LN7@SetRevised
  0000c	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]

; 534  : 	if( InitMChartInterface061115())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@SetRevised
$LN4@SetRevised:

; 538  : 	}
; 539  : 	return FALSE;

  00013	33 c0		 xor	 eax, eax
  00015	5e		 pop	 esi

; 540  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@SetRevised:

; 513  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 14 01 00
	00 00		 mov	 DWORD PTR [esi+20], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@SetRevised

; 514  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 515  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 516  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 517  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_061115) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 02	 cmp	 eax, 2
  0002f	7c e2		 jl	 SHORT $LN4@SetRevised

; 518  : 	m_pMChartInterface061115 = ( CMChartInterface061115 *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 18	 mov	 DWORD PTR [esi+24], ecx

; 519  : 	m_pOldMChartInterface061115 = ( COldMChartInterface061115 *)m_pOutsideCommonInterface;

  00037	89 4e 1c	 mov	 DWORD PTR [esi+28], ecx
$LN11@SetRevised:

; 535  : 	{
; 536  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface061115->SetRevisedPriceFlag( p_bRevisedFlag);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0d		 je	 SHORT $LN3@SetRevised
  00040	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]

; 540  : }

  00046	5d		 pop	 ebp

; 535  : 	{
; 536  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface061115->SetRevisedPriceFlag( p_bRevisedFlag);

  00047	ff a0 e0 00 00
	00		 jmp	 DWORD PTR [eax+224]
$LN3@SetRevised:

; 537  : 		else				return m_pMChartInterface061115->SetRevisedPriceFlag( p_bRevisedFlag);

  0004d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004f	5e		 pop	 esi

; 540  : }

  00050	5d		 pop	 ebp

; 537  : 		else				return m_pMChartInterface061115->SetRevisedPriceFlag( p_bRevisedFlag);

  00051	ff a0 e4 00 00
	00		 jmp	 DWORD PTR [eax+228]
?SetRevisedPriceFlag@COutsideCommonInterfaceFunction@@QAEHH@Z ENDP ; COutsideCommonInterfaceFunction::SetRevisedPriceFlag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?GetRevisedPriceFlag@COutsideCommonInterfaceFunction@@QAEHXZ
_TEXT	SEGMENT
?GetRevisedPriceFlag@COutsideCommonInterfaceFunction@@QAEHXZ PROC ; COutsideCommonInterfaceFunction::GetRevisedPriceFlag, COMDAT
; _this$ = ecx

; 524  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 510  : 	if( m_bMChartInterfaceInited061115) return ( m_pMChartInterface061115 != NULL);

  00003	83 7e 14 00	 cmp	 DWORD PTR [esi+20], 0
  00007	74 0b		 je	 SHORT $LN7@GetRevised
  00009	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]

; 525  : 	if( InitMChartInterface061115())

  0000c	85 c9		 test	 ecx, ecx
  0000e	75 24		 jne	 SHORT $LN11@GetRevised
$LN4@GetRevised:

; 529  : 	}
; 530  : 	return FALSE;

  00010	33 c0		 xor	 eax, eax
  00012	5e		 pop	 esi

; 531  : }

  00013	c3		 ret	 0
$LN7@GetRevised:

; 513  : 	if( !m_pOutsideCommonInterface) return FALSE;

  00014	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00017	c7 46 14 01 00
	00 00		 mov	 DWORD PTR [esi+20], 1
  0001e	85 c9		 test	 ecx, ecx
  00020	74 ee		 je	 SHORT $LN4@GetRevised

; 514  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 515  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 516  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 517  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_061115) return FALSE;

  00022	8b 01		 mov	 eax, DWORD PTR [ecx]
  00024	ff 10		 call	 DWORD PTR [eax]
  00026	83 f8 02	 cmp	 eax, 2
  00029	7c e5		 jl	 SHORT $LN4@GetRevised

; 518  : 	m_pMChartInterface061115 = ( CMChartInterface061115 *)m_pOutsideCommonInterface;

  0002b	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0002e	89 4e 18	 mov	 DWORD PTR [esi+24], ecx

; 519  : 	m_pOldMChartInterface061115 = ( COldMChartInterface061115 *)m_pOutsideCommonInterface;

  00031	89 4e 1c	 mov	 DWORD PTR [esi+28], ecx
$LN11@GetRevised:

; 526  : 	{
; 527  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface061115->GetRevisedPriceFlag();

  00034	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  00038	74 0c		 je	 SHORT $LN3@GetRevised
  0003a	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  0003d	5e		 pop	 esi
  0003e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00040	ff a0 dc 00 00
	00		 jmp	 DWORD PTR [eax+220]
$LN3@GetRevised:

; 528  : 		else				return m_pMChartInterface061115->GetRevisedPriceFlag();

  00046	8b 01		 mov	 eax, DWORD PTR [ecx]
  00048	5e		 pop	 esi
  00049	ff a0 e0 00 00
	00		 jmp	 DWORD PTR [eax+224]
?GetRevisedPriceFlag@COutsideCommonInterfaceFunction@@QAEHXZ ENDP ; COutsideCommonInterfaceFunction::GetRevisedPriceFlag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?InitMChartInterface061115@COutsideCommonInterfaceFunction@@QAEHXZ
_TEXT	SEGMENT
?InitMChartInterface061115@COutsideCommonInterfaceFunction@@QAEHXZ PROC ; COutsideCommonInterfaceFunction::InitMChartInterface061115, COMDAT
; _this$ = ecx

; 509  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 510  : 	if( m_bMChartInterfaceInited061115) return ( m_pMChartInterface061115 != NULL);

  00003	83 7e 14 00	 cmp	 DWORD PTR [esi+20], 0
  00007	74 0a		 je	 SHORT $LN2@InitMChart
  00009	33 c0		 xor	 eax, eax
  0000b	39 46 18	 cmp	 DWORD PTR [esi+24], eax
  0000e	5e		 pop	 esi
  0000f	0f 95 c0	 setne	 al

; 521  : }

  00012	c3		 ret	 0
$LN2@InitMChart:

; 511  : 	m_bMChartInterfaceInited061115 = TRUE;
; 512  : 
; 513  : 	if( !m_pOutsideCommonInterface) return FALSE;

  00013	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00016	c7 46 14 01 00
	00 00		 mov	 DWORD PTR [esi+20], 1
  0001d	85 c9		 test	 ecx, ecx
  0001f	74 19		 je	 SHORT $LN6@InitMChart

; 514  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 515  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 516  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 517  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_061115) return FALSE;

  00021	8b 01		 mov	 eax, DWORD PTR [ecx]
  00023	ff 10		 call	 DWORD PTR [eax]
  00025	83 f8 02	 cmp	 eax, 2
  00028	7c 10		 jl	 SHORT $LN6@InitMChart

; 518  : 	m_pMChartInterface061115 = ( CMChartInterface061115 *)m_pOutsideCommonInterface;

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	89 46 18	 mov	 DWORD PTR [esi+24], eax

; 519  : 	m_pOldMChartInterface061115 = ( COldMChartInterface061115 *)m_pOutsideCommonInterface;

  00030	89 46 1c	 mov	 DWORD PTR [esi+28], eax

; 520  : 	return TRUE;

  00033	b8 01 00 00 00	 mov	 eax, 1
  00038	5e		 pop	 esi

; 521  : }

  00039	c3		 ret	 0
$LN6@InitMChart:

; 514  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 515  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 516  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 517  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_061115) return FALSE;

  0003a	33 c0		 xor	 eax, eax
  0003c	5e		 pop	 esi

; 521  : }

  0003d	c3		 ret	 0
?InitMChartInterface061115@COutsideCommonInterfaceFunction@@QAEHXZ ENDP ; COutsideCommonInterfaceFunction::InitMChartInterface061115
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_OnChartEnvSetupOk@COutsideCommonInterfaceFunction@@QAE_NXZ
_TEXT	SEGMENT
?MChart_OnChartEnvSetupOk@COutsideCommonInterfaceFunction@@QAE_NXZ PROC ; COutsideCommonInterfaceFunction::MChart_OnChartEnvSetupOk, COMDAT
; _this$ = ecx

; 496  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00003	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  00007	74 0b		 je	 SHORT $LN7@MChart_OnC
  00009	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 497  : 	if( InitMChartInterface())

  0000c	85 c9		 test	 ecx, ecx
  0000e	75 24		 jne	 SHORT $LN11@MChart_OnC
$LN4@MChart_OnC:

; 501  : 	}
; 502  : 	return false;

  00010	32 c0		 xor	 al, al
  00012	5e		 pop	 esi

; 503  : }

  00013	c3		 ret	 0
$LN7@MChart_OnC:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  00014	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00017	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  0001e	85 c9		 test	 ecx, ecx
  00020	74 ee		 je	 SHORT $LN4@MChart_OnC

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00022	8b 01		 mov	 eax, DWORD PTR [ecx]
  00024	ff 10		 call	 DWORD PTR [eax]
  00026	83 f8 01	 cmp	 eax, 1
  00029	7c e5		 jl	 SHORT $LN4@MChart_OnC

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  0002b	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0002e	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00031	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_OnC:

; 498  : 	{
; 499  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->OnChartEnvSetupOk();

  00034	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  00038	74 0e		 je	 SHORT $LN3@MChart_OnC
  0003a	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0003d	5e		 pop	 esi
  0003e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00040	8b 80 d4 00 00
	00		 mov	 eax, DWORD PTR [eax+212]
  00046	ff e0		 jmp	 eax
$LN3@MChart_OnC:

; 500  : 		else				return m_pMChartInterface->OnChartEnvSetupOk();

  00048	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004a	5e		 pop	 esi
  0004b	8b 80 d8 00 00
	00		 mov	 eax, DWORD PTR [eax+216]
  00051	ff e0		 jmp	 eax
?MChart_OnChartEnvSetupOk@COutsideCommonInterfaceFunction@@QAE_NXZ ENDP ; COutsideCommonInterfaceFunction::MChart_OnChartEnvSetupOk
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetPriceLog@COutsideCommonInterfaceFunction@@QAE_N_N@Z
_TEXT	SEGMENT
_bLog$ = 8						; size = 1
?MChart_SetPriceLog@COutsideCommonInterfaceFunction@@QAE_N_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetPriceLog, COMDAT
; _this$ = ecx

; 487  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 488  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:

; 492  : 	}
; 493  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 494  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 489  : 	{
; 490  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetPriceLog(bLog);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0f		 je	 SHORT $LN3@MChart_Set
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 80 d8 00 00
	00		 mov	 eax, DWORD PTR [eax+216]

; 494  : }

  0004c	5d		 pop	 ebp

; 489  : 	{
; 490  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetPriceLog(bLog);

  0004d	ff e0		 jmp	 eax
$LN3@MChart_Set:

; 491  : 		else				return m_pMChartInterface->SetPriceLog(bLog);

  0004f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00051	5e		 pop	 esi
  00052	8b 80 dc 00 00
	00		 mov	 eax, DWORD PTR [eax+220]

; 494  : }

  00058	5d		 pop	 ebp

; 491  : 		else				return m_pMChartInterface->SetPriceLog(bLog);

  00059	ff e0		 jmp	 eax
?MChart_SetPriceLog@COutsideCommonInterfaceFunction@@QAE_N_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetPriceLog
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_GetShowControlLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 4
?MChart_GetShowControlLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_GetShowControlLineTextToOutside, COMDAT
; _this$ = ecx

; 478  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Get
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 479  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Get
$LN4@MChart_Get:

; 483  : 	}
; 484  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 485  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Get:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Get

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Get

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Get:

; 480  : 	{
; 481  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowControlLineTextToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0f		 je	 SHORT $LN3@MChart_Get
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 80 cc 00 00
	00		 mov	 eax, DWORD PTR [eax+204]

; 485  : }

  0004c	5d		 pop	 ebp

; 480  : 	{
; 481  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowControlLineTextToOutside(bShow);

  0004d	ff e0		 jmp	 eax
$LN3@MChart_Get:

; 482  : 		else				return m_pMChartInterface->GetShowControlLineTextToOutside(bShow);

  0004f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00051	5e		 pop	 esi
  00052	8b 80 d0 00 00
	00		 mov	 eax, DWORD PTR [eax+208]

; 485  : }

  00058	5d		 pop	 ebp

; 482  : 		else				return m_pMChartInterface->GetShowControlLineTextToOutside(bShow);

  00059	ff e0		 jmp	 eax
?MChart_GetShowControlLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_GetShowControlLineTextToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_GetShowQuadrisectionLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 4
?MChart_GetShowQuadrisectionLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_GetShowQuadrisectionLineTextToOutside, COMDAT
; _this$ = ecx

; 469  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Get
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 470  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Get
$LN4@MChart_Get:

; 474  : 	}
; 475  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 476  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Get:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Get

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Get

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Get:

; 471  : 	{
; 472  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowQuadrisectionLineTextToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0f		 je	 SHORT $LN3@MChart_Get
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 80 c8 00 00
	00		 mov	 eax, DWORD PTR [eax+200]

; 476  : }

  0004c	5d		 pop	 ebp

; 471  : 	{
; 472  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowQuadrisectionLineTextToOutside(bShow);

  0004d	ff e0		 jmp	 eax
$LN3@MChart_Get:

; 473  : 		else				return m_pMChartInterface->GetShowQuadrisectionLineTextToOutside(bShow);

  0004f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00051	5e		 pop	 esi
  00052	8b 80 cc 00 00
	00		 mov	 eax, DWORD PTR [eax+204]

; 476  : }

  00058	5d		 pop	 ebp

; 473  : 		else				return m_pMChartInterface->GetShowQuadrisectionLineTextToOutside(bShow);

  00059	ff e0		 jmp	 eax
?MChart_GetShowQuadrisectionLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_GetShowQuadrisectionLineTextToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_GetShowTrisectionLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 4
?MChart_GetShowTrisectionLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_GetShowTrisectionLineTextToOutside, COMDAT
; _this$ = ecx

; 460  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Get
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 461  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Get
$LN4@MChart_Get:

; 465  : 	}
; 466  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 467  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Get:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Get

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Get

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Get:

; 462  : 	{
; 463  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowTrisectionLineTextToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0f		 je	 SHORT $LN3@MChart_Get
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 80 c4 00 00
	00		 mov	 eax, DWORD PTR [eax+196]

; 467  : }

  0004c	5d		 pop	 ebp

; 462  : 	{
; 463  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowTrisectionLineTextToOutside(bShow);

  0004d	ff e0		 jmp	 eax
$LN3@MChart_Get:

; 464  : 		else				return m_pMChartInterface->GetShowTrisectionLineTextToOutside(bShow);

  0004f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00051	5e		 pop	 esi
  00052	8b 80 c8 00 00
	00		 mov	 eax, DWORD PTR [eax+200]

; 467  : }

  00058	5d		 pop	 ebp

; 464  : 		else				return m_pMChartInterface->GetShowTrisectionLineTextToOutside(bShow);

  00059	ff e0		 jmp	 eax
?MChart_GetShowTrisectionLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_GetShowTrisectionLineTextToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_GetShowPriceLineRightTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 4
?MChart_GetShowPriceLineRightTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_GetShowPriceLineRightTextToOutside, COMDAT
; _this$ = ecx

; 451  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Get
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 452  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Get
$LN4@MChart_Get:

; 456  : 	}
; 457  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 458  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Get:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Get

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Get

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Get:

; 453  : 	{
; 454  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowPriceLineRightTextToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0f		 je	 SHORT $LN3@MChart_Get
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 80 c0 00 00
	00		 mov	 eax, DWORD PTR [eax+192]

; 458  : }

  0004c	5d		 pop	 ebp

; 453  : 	{
; 454  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowPriceLineRightTextToOutside(bShow);

  0004d	ff e0		 jmp	 eax
$LN3@MChart_Get:

; 455  : 		else				return m_pMChartInterface->GetShowPriceLineRightTextToOutside(bShow);

  0004f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00051	5e		 pop	 esi
  00052	8b 80 c4 00 00
	00		 mov	 eax, DWORD PTR [eax+196]

; 458  : }

  00058	5d		 pop	 ebp

; 455  : 		else				return m_pMChartInterface->GetShowPriceLineRightTextToOutside(bShow);

  00059	ff e0		 jmp	 eax
?MChart_GetShowPriceLineRightTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_GetShowPriceLineRightTextToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_GetShowPriceLineLeftTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 4
?MChart_GetShowPriceLineLeftTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_GetShowPriceLineLeftTextToOutside, COMDAT
; _this$ = ecx

; 442  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Get
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 443  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Get
$LN4@MChart_Get:

; 447  : 	}
; 448  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 449  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Get:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Get

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Get

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Get:

; 444  : 	{
; 445  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowPriceLineLeftTextToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0f		 je	 SHORT $LN3@MChart_Get
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 80 bc 00 00
	00		 mov	 eax, DWORD PTR [eax+188]

; 449  : }

  0004c	5d		 pop	 ebp

; 444  : 	{
; 445  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowPriceLineLeftTextToOutside(bShow);

  0004d	ff e0		 jmp	 eax
$LN3@MChart_Get:

; 446  : 		else				return m_pMChartInterface->GetShowPriceLineLeftTextToOutside(bShow);

  0004f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00051	5e		 pop	 esi
  00052	8b 80 c0 00 00
	00		 mov	 eax, DWORD PTR [eax+192]

; 449  : }

  00058	5d		 pop	 ebp

; 446  : 		else				return m_pMChartInterface->GetShowPriceLineLeftTextToOutside(bShow);

  00059	ff e0		 jmp	 eax
?MChart_GetShowPriceLineLeftTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_GetShowPriceLineLeftTextToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_GetShowTimeLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 4
?MChart_GetShowTimeLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_GetShowTimeLineTextToOutside, COMDAT
; _this$ = ecx

; 433  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Get
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 434  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Get
$LN4@MChart_Get:

; 438  : 	}
; 439  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 440  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Get:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Get

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Get

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Get:

; 435  : 	{
; 436  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowTimeLineTextToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0f		 je	 SHORT $LN3@MChart_Get
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 80 b8 00 00
	00		 mov	 eax, DWORD PTR [eax+184]

; 440  : }

  0004c	5d		 pop	 ebp

; 435  : 	{
; 436  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowTimeLineTextToOutside(bShow);

  0004d	ff e0		 jmp	 eax
$LN3@MChart_Get:

; 437  : 		else				return m_pMChartInterface->GetShowTimeLineTextToOutside(bShow);

  0004f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00051	5e		 pop	 esi
  00052	8b 80 bc 00 00
	00		 mov	 eax, DWORD PTR [eax+188]

; 440  : }

  00058	5d		 pop	 ebp

; 437  : 		else				return m_pMChartInterface->GetShowTimeLineTextToOutside(bShow);

  00059	ff e0		 jmp	 eax
?MChart_GetShowTimeLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_GetShowTimeLineTextToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_GetShowTrendLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 4
?MChart_GetShowTrendLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_GetShowTrendLineTextToOutside, COMDAT
; _this$ = ecx

; 424  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Get
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 425  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Get
$LN4@MChart_Get:

; 429  : 	}
; 430  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 431  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Get:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Get

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Get

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Get:

; 426  : 	{
; 427  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowTrendLineTextToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0f		 je	 SHORT $LN3@MChart_Get
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 80 b4 00 00
	00		 mov	 eax, DWORD PTR [eax+180]

; 431  : }

  0004c	5d		 pop	 ebp

; 426  : 	{
; 427  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowTrendLineTextToOutside(bShow);

  0004d	ff e0		 jmp	 eax
$LN3@MChart_Get:

; 428  : 		else				return m_pMChartInterface->GetShowTrendLineTextToOutside(bShow);

  0004f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00051	5e		 pop	 esi
  00052	8b 80 b8 00 00
	00		 mov	 eax, DWORD PTR [eax+184]

; 431  : }

  00058	5d		 pop	 ebp

; 428  : 		else				return m_pMChartInterface->GetShowTrendLineTextToOutside(bShow);

  00059	ff e0		 jmp	 eax
?MChart_GetShowTrendLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_GetShowTrendLineTextToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_GetAutoSaveToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z
_TEXT	SEGMENT
_bAutoSave$ = 8						; size = 4
?MChart_GetAutoSaveToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_GetAutoSaveToOutside, COMDAT
; _this$ = ecx

; 415  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Get
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 416  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Get
$LN4@MChart_Get:

; 420  : 	}
; 421  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 422  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Get:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Get

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Get

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Get:

; 417  : 	{
; 418  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetAutoSaveToOutside(bAutoSave);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0f		 je	 SHORT $LN3@MChart_Get
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 80 b0 00 00
	00		 mov	 eax, DWORD PTR [eax+176]

; 422  : }

  0004c	5d		 pop	 ebp

; 417  : 	{
; 418  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetAutoSaveToOutside(bAutoSave);

  0004d	ff e0		 jmp	 eax
$LN3@MChart_Get:

; 419  : 		else				return m_pMChartInterface->GetAutoSaveToOutside(bAutoSave);

  0004f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00051	5e		 pop	 esi
  00052	8b 80 b4 00 00
	00		 mov	 eax, DWORD PTR [eax+180]

; 422  : }

  00058	5d		 pop	 ebp

; 419  : 		else				return m_pMChartInterface->GetAutoSaveToOutside(bAutoSave);

  00059	ff e0		 jmp	 eax
?MChart_GetAutoSaveToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_GetAutoSaveToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_GetTimeLinkageToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z
_TEXT	SEGMENT
_bTimeLinkage$ = 8					; size = 4
?MChart_GetTimeLinkageToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_GetTimeLinkageToOutside, COMDAT
; _this$ = ecx

; 406  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Get
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 407  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Get
$LN4@MChart_Get:

; 411  : 	}
; 412  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 413  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Get:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Get

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Get

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Get:

; 408  : 	{
; 409  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetTimeLinkageToOutside(bTimeLinkage);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0f		 je	 SHORT $LN3@MChart_Get
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 80 ac 00 00
	00		 mov	 eax, DWORD PTR [eax+172]

; 413  : }

  0004c	5d		 pop	 ebp

; 408  : 	{
; 409  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetTimeLinkageToOutside(bTimeLinkage);

  0004d	ff e0		 jmp	 eax
$LN3@MChart_Get:

; 410  : 		else				return m_pMChartInterface->GetTimeLinkageToOutside(bTimeLinkage);

  0004f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00051	5e		 pop	 esi
  00052	8b 80 b0 00 00
	00		 mov	 eax, DWORD PTR [eax+176]

; 413  : }

  00058	5d		 pop	 ebp

; 410  : 		else				return m_pMChartInterface->GetTimeLinkageToOutside(bTimeLinkage);

  00059	ff e0		 jmp	 eax
?MChart_GetTimeLinkageToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_GetTimeLinkageToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_GetShowTrendLineValueToOutside@COutsideCommonInterfaceFunction@@QAE_NAAH@Z
_TEXT	SEGMENT
_nPosition$ = 8						; size = 4
?MChart_GetShowTrendLineValueToOutside@COutsideCommonInterfaceFunction@@QAE_NAAH@Z PROC ; COutsideCommonInterfaceFunction::MChart_GetShowTrendLineValueToOutside, COMDAT
; _this$ = ecx

; 397  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Get
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 398  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Get
$LN4@MChart_Get:

; 402  : 	}
; 403  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 404  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Get:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Get

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Get

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Get:

; 399  : 	{
; 400  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowTrendLineValueToOutside(nPosition);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0f		 je	 SHORT $LN3@MChart_Get
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 80 a8 00 00
	00		 mov	 eax, DWORD PTR [eax+168]

; 404  : }

  0004c	5d		 pop	 ebp

; 399  : 	{
; 400  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowTrendLineValueToOutside(nPosition);

  0004d	ff e0		 jmp	 eax
$LN3@MChart_Get:

; 401  : 		else				return m_pMChartInterface->GetShowTrendLineValueToOutside(nPosition);

  0004f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00051	5e		 pop	 esi
  00052	8b 80 ac 00 00
	00		 mov	 eax, DWORD PTR [eax+172]

; 404  : }

  00058	5d		 pop	 ebp

; 401  : 		else				return m_pMChartInterface->GetShowTrendLineValueToOutside(nPosition);

  00059	ff e0		 jmp	 eax
?MChart_GetShowTrendLineValueToOutside@COutsideCommonInterfaceFunction@@QAE_NAAH@Z ENDP ; COutsideCommonInterfaceFunction::MChart_GetShowTrendLineValueToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_GetTrendLineColorToOutside@COutsideCommonInterfaceFunction@@QAE_NAAK@Z
_TEXT	SEGMENT
_clrLineColor$ = 8					; size = 4
?MChart_GetTrendLineColorToOutside@COutsideCommonInterfaceFunction@@QAE_NAAK@Z PROC ; COutsideCommonInterfaceFunction::MChart_GetTrendLineColorToOutside, COMDAT
; _this$ = ecx

; 388  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Get
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 389  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Get
$LN4@MChart_Get:

; 393  : 	}
; 394  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 395  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Get:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Get

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Get

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Get:

; 390  : 	{
; 391  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetTrendLineColorToOutside(clrLineColor);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0f		 je	 SHORT $LN3@MChart_Get
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 80 a4 00 00
	00		 mov	 eax, DWORD PTR [eax+164]

; 395  : }

  0004c	5d		 pop	 ebp

; 390  : 	{
; 391  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetTrendLineColorToOutside(clrLineColor);

  0004d	ff e0		 jmp	 eax
$LN3@MChart_Get:

; 392  : 		else				return m_pMChartInterface->GetTrendLineColorToOutside(clrLineColor);

  0004f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00051	5e		 pop	 esi
  00052	8b 80 a8 00 00
	00		 mov	 eax, DWORD PTR [eax+168]

; 395  : }

  00058	5d		 pop	 ebp

; 392  : 		else				return m_pMChartInterface->GetTrendLineColorToOutside(clrLineColor);

  00059	ff e0		 jmp	 eax
?MChart_GetTrendLineColorToOutside@COutsideCommonInterfaceFunction@@QAE_NAAK@Z ENDP ; COutsideCommonInterfaceFunction::MChart_GetTrendLineColorToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_GetShowCurrentPriceToOutside@COutsideCommonInterfaceFunction@@QAE_NAAH@Z
_TEXT	SEGMENT
_nShowType$ = 8						; size = 4
?MChart_GetShowCurrentPriceToOutside@COutsideCommonInterfaceFunction@@QAE_NAAH@Z PROC ; COutsideCommonInterfaceFunction::MChart_GetShowCurrentPriceToOutside, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Get
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 380  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Get
$LN4@MChart_Get:

; 384  : 	}
; 385  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 386  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Get:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Get

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Get

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Get:

; 381  : 	{
; 382  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowCurrentPriceToOutside(nShowType);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0f		 je	 SHORT $LN3@MChart_Get
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 80 a0 00 00
	00		 mov	 eax, DWORD PTR [eax+160]

; 386  : }

  0004c	5d		 pop	 ebp

; 381  : 	{
; 382  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowCurrentPriceToOutside(nShowType);

  0004d	ff e0		 jmp	 eax
$LN3@MChart_Get:

; 383  : 		else				return m_pMChartInterface->GetShowCurrentPriceToOutside(nShowType);

  0004f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00051	5e		 pop	 esi
  00052	8b 80 a4 00 00
	00		 mov	 eax, DWORD PTR [eax+164]

; 386  : }

  00058	5d		 pop	 ebp

; 383  : 		else				return m_pMChartInterface->GetShowCurrentPriceToOutside(nShowType);

  00059	ff e0		 jmp	 eax
?MChart_GetShowCurrentPriceToOutside@COutsideCommonInterfaceFunction@@QAE_NAAH@Z ENDP ; COutsideCommonInterfaceFunction::MChart_GetShowCurrentPriceToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_GetShowExRightDividendToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 4
?MChart_GetShowExRightDividendToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_GetShowExRightDividendToOutside, COMDAT
; _this$ = ecx

; 370  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Get
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 371  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Get
$LN4@MChart_Get:

; 375  : 	}
; 376  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 377  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Get:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Get

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Get

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Get:

; 372  : 	{
; 373  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowExRightDividendToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0f		 je	 SHORT $LN3@MChart_Get
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 80 9c 00 00
	00		 mov	 eax, DWORD PTR [eax+156]

; 377  : }

  0004c	5d		 pop	 ebp

; 372  : 	{
; 373  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowExRightDividendToOutside(bShow);

  0004d	ff e0		 jmp	 eax
$LN3@MChart_Get:

; 374  : 		else				return m_pMChartInterface->GetShowExRightDividendToOutside(bShow);

  0004f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00051	5e		 pop	 esi
  00052	8b 80 a0 00 00
	00		 mov	 eax, DWORD PTR [eax+160]

; 377  : }

  00058	5d		 pop	 ebp

; 374  : 		else				return m_pMChartInterface->GetShowExRightDividendToOutside(bShow);

  00059	ff e0		 jmp	 eax
?MChart_GetShowExRightDividendToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_GetShowExRightDividendToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_GetShowHighLowBoundToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 4
?MChart_GetShowHighLowBoundToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_GetShowHighLowBoundToOutside, COMDAT
; _this$ = ecx

; 361  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Get
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 362  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Get
$LN4@MChart_Get:

; 366  : 	}
; 367  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 368  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Get:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Get

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Get

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Get:

; 363  : 	{
; 364  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowHighLowBoundToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0f		 je	 SHORT $LN3@MChart_Get
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 80 98 00 00
	00		 mov	 eax, DWORD PTR [eax+152]

; 368  : }

  0004c	5d		 pop	 ebp

; 363  : 	{
; 364  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowHighLowBoundToOutside(bShow);

  0004d	ff e0		 jmp	 eax
$LN3@MChart_Get:

; 365  : 		else				return m_pMChartInterface->GetShowHighLowBoundToOutside(bShow);

  0004f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00051	5e		 pop	 esi
  00052	8b 80 9c 00 00
	00		 mov	 eax, DWORD PTR [eax+156]

; 368  : }

  00058	5d		 pop	 ebp

; 365  : 		else				return m_pMChartInterface->GetShowHighLowBoundToOutside(bShow);

  00059	ff e0		 jmp	 eax
?MChart_GetShowHighLowBoundToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_GetShowHighLowBoundToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_GetShowIndicatorValueToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 4
?MChart_GetShowIndicatorValueToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_GetShowIndicatorValueToOutside, COMDAT
; _this$ = ecx

; 352  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Get
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 353  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Get
$LN4@MChart_Get:

; 357  : 	}
; 358  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 359  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Get:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Get

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Get

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Get:

; 354  : 	{
; 355  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowIndicatorValueToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0f		 je	 SHORT $LN3@MChart_Get
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 80 94 00 00
	00		 mov	 eax, DWORD PTR [eax+148]

; 359  : }

  0004c	5d		 pop	 ebp

; 354  : 	{
; 355  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowIndicatorValueToOutside(bShow);

  0004d	ff e0		 jmp	 eax
$LN3@MChart_Get:

; 356  : 		else				return m_pMChartInterface->GetShowIndicatorValueToOutside(bShow);

  0004f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00051	5e		 pop	 esi
  00052	8b 80 98 00 00
	00		 mov	 eax, DWORD PTR [eax+152]

; 359  : }

  00058	5d		 pop	 ebp

; 356  : 		else				return m_pMChartInterface->GetShowIndicatorValueToOutside(bShow);

  00059	ff e0		 jmp	 eax
?MChart_GetShowIndicatorValueToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_GetShowIndicatorValueToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_GetShowIndicatorVariableToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 4
?MChart_GetShowIndicatorVariableToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_GetShowIndicatorVariableToOutside, COMDAT
; _this$ = ecx

; 343  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Get
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 344  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Get
$LN4@MChart_Get:

; 348  : 	}
; 349  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 350  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Get:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Get

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Get

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Get:

; 345  : 	{
; 346  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowIndicatorVariableToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0f		 je	 SHORT $LN3@MChart_Get
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 80 90 00 00
	00		 mov	 eax, DWORD PTR [eax+144]

; 350  : }

  0004c	5d		 pop	 ebp

; 345  : 	{
; 346  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetShowIndicatorVariableToOutside(bShow);

  0004d	ff e0		 jmp	 eax
$LN3@MChart_Get:

; 347  : 		else				return m_pMChartInterface->GetShowIndicatorVariableToOutside(bShow);

  0004f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00051	5e		 pop	 esi
  00052	8b 80 94 00 00
	00		 mov	 eax, DWORD PTR [eax+148]

; 350  : }

  00058	5d		 pop	 ebp

; 347  : 		else				return m_pMChartInterface->GetShowIndicatorVariableToOutside(bShow);

  00059	ff e0		 jmp	 eax
?MChart_GetShowIndicatorVariableToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_GetShowIndicatorVariableToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_GetRightMarginToOutside@COutsideCommonInterfaceFunction@@QAE_NAAH@Z
_TEXT	SEGMENT
_nRightMargin$ = 8					; size = 4
?MChart_GetRightMarginToOutside@COutsideCommonInterfaceFunction@@QAE_NAAH@Z PROC ; COutsideCommonInterfaceFunction::MChart_GetRightMarginToOutside, COMDAT
; _this$ = ecx

; 334  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Get
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 335  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Get
$LN4@MChart_Get:

; 339  : 	}
; 340  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 341  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Get:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Get

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Get

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Get:

; 336  : 	{
; 337  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetRightMarginToOutside(nRightMargin);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0f		 je	 SHORT $LN3@MChart_Get
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 80 8c 00 00
	00		 mov	 eax, DWORD PTR [eax+140]

; 341  : }

  0004c	5d		 pop	 ebp

; 336  : 	{
; 337  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetRightMarginToOutside(nRightMargin);

  0004d	ff e0		 jmp	 eax
$LN3@MChart_Get:

; 338  : 		else				return m_pMChartInterface->GetRightMarginToOutside(nRightMargin);

  0004f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00051	5e		 pop	 esi
  00052	8b 80 90 00 00
	00		 mov	 eax, DWORD PTR [eax+144]

; 341  : }

  00058	5d		 pop	 ebp

; 338  : 		else				return m_pMChartInterface->GetRightMarginToOutside(nRightMargin);

  00059	ff e0		 jmp	 eax
?MChart_GetRightMarginToOutside@COutsideCommonInterfaceFunction@@QAE_NAAH@Z ENDP ; COutsideCommonInterfaceFunction::MChart_GetRightMarginToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_GetYScalePositionToOutside@COutsideCommonInterfaceFunction@@QAE_NAAH@Z
_TEXT	SEGMENT
_nPosition$ = 8						; size = 4
?MChart_GetYScalePositionToOutside@COutsideCommonInterfaceFunction@@QAE_NAAH@Z PROC ; COutsideCommonInterfaceFunction::MChart_GetYScalePositionToOutside, COMDAT
; _this$ = ecx

; 325  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Get
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 326  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Get
$LN4@MChart_Get:

; 330  : 	}
; 331  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 332  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Get:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Get

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Get

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Get:

; 327  : 	{
; 328  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetYScalePositionToOutside(nPosition);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0f		 je	 SHORT $LN3@MChart_Get
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 80 88 00 00
	00		 mov	 eax, DWORD PTR [eax+136]

; 332  : }

  0004c	5d		 pop	 ebp

; 327  : 	{
; 328  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetYScalePositionToOutside(nPosition);

  0004d	ff e0		 jmp	 eax
$LN3@MChart_Get:

; 329  : 		else				return m_pMChartInterface->GetYScalePositionToOutside(nPosition);

  0004f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00051	5e		 pop	 esi
  00052	8b 80 8c 00 00
	00		 mov	 eax, DWORD PTR [eax+140]

; 332  : }

  00058	5d		 pop	 ebp

; 329  : 		else				return m_pMChartInterface->GetYScalePositionToOutside(nPosition);

  00059	ff e0		 jmp	 eax
?MChart_GetYScalePositionToOutside@COutsideCommonInterfaceFunction@@QAE_NAAH@Z ENDP ; COutsideCommonInterfaceFunction::MChart_GetYScalePositionToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_GetImaginaryCandleToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z
_TEXT	SEGMENT
_bImaginaryCandle$ = 8					; size = 4
?MChart_GetImaginaryCandleToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_GetImaginaryCandleToOutside, COMDAT
; _this$ = ecx

; 316  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Get
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 317  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Get
$LN4@MChart_Get:

; 321  : 	}
; 322  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 323  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Get:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Get

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Get

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Get:

; 318  : 	{
; 319  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetImaginaryCandleToOutside(bImaginaryCandle);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0c		 je	 SHORT $LN3@MChart_Get
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 40 7c	 mov	 eax, DWORD PTR [eax+124]

; 323  : }

  00049	5d		 pop	 ebp

; 318  : 	{
; 319  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->GetImaginaryCandleToOutside(bImaginaryCandle);

  0004a	ff e0		 jmp	 eax
$LN3@MChart_Get:

; 320  : 		else				return m_pMChartInterface->GetImaginaryCandleToOutside(bImaginaryCandle);

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	5e		 pop	 esi
  0004f	8b 40 7c	 mov	 eax, DWORD PTR [eax+124]

; 323  : }

  00052	5d		 pop	 ebp

; 320  : 		else				return m_pMChartInterface->GetImaginaryCandleToOutside(bImaginaryCandle);

  00053	ff e0		 jmp	 eax
?MChart_GetImaginaryCandleToOutside@COutsideCommonInterfaceFunction@@QAE_NAA_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_GetImaginaryCandleToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetShowControlLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 1
?MChart_SetShowControlLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetShowControlLineTextToOutside, COMDAT
; _this$ = ecx

; 307  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 308  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:

; 312  : 	}
; 313  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 314  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 309  : 	{
; 310  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowControlLineTextToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0c		 je	 SHORT $LN3@MChart_Set
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 40 74	 mov	 eax, DWORD PTR [eax+116]

; 314  : }

  00049	5d		 pop	 ebp

; 309  : 	{
; 310  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowControlLineTextToOutside(bShow);

  0004a	ff e0		 jmp	 eax
$LN3@MChart_Set:

; 311  : 		else				return m_pMChartInterface->SetShowControlLineTextToOutside(bShow);

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	5e		 pop	 esi
  0004f	8b 40 74	 mov	 eax, DWORD PTR [eax+116]

; 314  : }

  00052	5d		 pop	 ebp

; 311  : 		else				return m_pMChartInterface->SetShowControlLineTextToOutside(bShow);

  00053	ff e0		 jmp	 eax
?MChart_SetShowControlLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetShowControlLineTextToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetShowQuadrisectionLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 1
?MChart_SetShowQuadrisectionLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetShowQuadrisectionLineTextToOutside, COMDAT
; _this$ = ecx

; 298  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 299  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:

; 303  : 	}
; 304  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 305  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 300  : 	{
; 301  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowQuadrisectionLineTextToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0c		 je	 SHORT $LN3@MChart_Set
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 40 70	 mov	 eax, DWORD PTR [eax+112]

; 305  : }

  00049	5d		 pop	 ebp

; 300  : 	{
; 301  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowQuadrisectionLineTextToOutside(bShow);

  0004a	ff e0		 jmp	 eax
$LN3@MChart_Set:

; 302  : 		else				return m_pMChartInterface->SetShowQuadrisectionLineTextToOutside(bShow);

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	5e		 pop	 esi
  0004f	8b 40 70	 mov	 eax, DWORD PTR [eax+112]

; 305  : }

  00052	5d		 pop	 ebp

; 302  : 		else				return m_pMChartInterface->SetShowQuadrisectionLineTextToOutside(bShow);

  00053	ff e0		 jmp	 eax
?MChart_SetShowQuadrisectionLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetShowQuadrisectionLineTextToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetShowTrisectionLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 1
?MChart_SetShowTrisectionLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetShowTrisectionLineTextToOutside, COMDAT
; _this$ = ecx

; 289  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 290  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:

; 294  : 	}
; 295  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 296  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 291  : 	{
; 292  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowTrisectionLineTextToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0c		 je	 SHORT $LN3@MChart_Set
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 40 6c	 mov	 eax, DWORD PTR [eax+108]

; 296  : }

  00049	5d		 pop	 ebp

; 291  : 	{
; 292  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowTrisectionLineTextToOutside(bShow);

  0004a	ff e0		 jmp	 eax
$LN3@MChart_Set:

; 293  : 		else				return m_pMChartInterface->SetShowTrisectionLineTextToOutside(bShow);

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	5e		 pop	 esi
  0004f	8b 40 6c	 mov	 eax, DWORD PTR [eax+108]

; 296  : }

  00052	5d		 pop	 ebp

; 293  : 		else				return m_pMChartInterface->SetShowTrisectionLineTextToOutside(bShow);

  00053	ff e0		 jmp	 eax
?MChart_SetShowTrisectionLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetShowTrisectionLineTextToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetShowPriceLineRightTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 1
?MChart_SetShowPriceLineRightTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetShowPriceLineRightTextToOutside, COMDAT
; _this$ = ecx

; 280  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 281  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:

; 285  : 	}
; 286  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 287  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 282  : 	{
; 283  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowPriceLineRightTextToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0c		 je	 SHORT $LN3@MChart_Set
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 40 68	 mov	 eax, DWORD PTR [eax+104]

; 287  : }

  00049	5d		 pop	 ebp

; 282  : 	{
; 283  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowPriceLineRightTextToOutside(bShow);

  0004a	ff e0		 jmp	 eax
$LN3@MChart_Set:

; 284  : 		else				return m_pMChartInterface->SetShowPriceLineRightTextToOutside(bShow);

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	5e		 pop	 esi
  0004f	8b 40 68	 mov	 eax, DWORD PTR [eax+104]

; 287  : }

  00052	5d		 pop	 ebp

; 284  : 		else				return m_pMChartInterface->SetShowPriceLineRightTextToOutside(bShow);

  00053	ff e0		 jmp	 eax
?MChart_SetShowPriceLineRightTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetShowPriceLineRightTextToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetShowPriceLineLeftTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 1
?MChart_SetShowPriceLineLeftTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetShowPriceLineLeftTextToOutside, COMDAT
; _this$ = ecx

; 271  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 272  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:

; 276  : 	}
; 277  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 278  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 273  : 	{
; 274  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowPriceLineLeftTextToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0c		 je	 SHORT $LN3@MChart_Set
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 40 64	 mov	 eax, DWORD PTR [eax+100]

; 278  : }

  00049	5d		 pop	 ebp

; 273  : 	{
; 274  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowPriceLineLeftTextToOutside(bShow);

  0004a	ff e0		 jmp	 eax
$LN3@MChart_Set:

; 275  : 		else				return m_pMChartInterface->SetShowPriceLineLeftTextToOutside(bShow);

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	5e		 pop	 esi
  0004f	8b 40 64	 mov	 eax, DWORD PTR [eax+100]

; 278  : }

  00052	5d		 pop	 ebp

; 275  : 		else				return m_pMChartInterface->SetShowPriceLineLeftTextToOutside(bShow);

  00053	ff e0		 jmp	 eax
?MChart_SetShowPriceLineLeftTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetShowPriceLineLeftTextToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetShowTimeLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 1
?MChart_SetShowTimeLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetShowTimeLineTextToOutside, COMDAT
; _this$ = ecx

; 262  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 263  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:

; 267  : 	}
; 268  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 269  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 264  : 	{
; 265  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowTimeLineTextToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0c		 je	 SHORT $LN3@MChart_Set
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 40 60	 mov	 eax, DWORD PTR [eax+96]

; 269  : }

  00049	5d		 pop	 ebp

; 264  : 	{
; 265  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowTimeLineTextToOutside(bShow);

  0004a	ff e0		 jmp	 eax
$LN3@MChart_Set:

; 266  : 		else				return m_pMChartInterface->SetShowTimeLineTextToOutside(bShow);

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	5e		 pop	 esi
  0004f	8b 40 60	 mov	 eax, DWORD PTR [eax+96]

; 269  : }

  00052	5d		 pop	 ebp

; 266  : 		else				return m_pMChartInterface->SetShowTimeLineTextToOutside(bShow);

  00053	ff e0		 jmp	 eax
?MChart_SetShowTimeLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetShowTimeLineTextToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetShowTrendLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 1
?MChart_SetShowTrendLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetShowTrendLineTextToOutside, COMDAT
; _this$ = ecx

; 253  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 254  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:

; 258  : 	}
; 259  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 260  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 255  : 	{
; 256  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowTrendLineTextToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0c		 je	 SHORT $LN3@MChart_Set
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 40 5c	 mov	 eax, DWORD PTR [eax+92]

; 260  : }

  00049	5d		 pop	 ebp

; 255  : 	{
; 256  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowTrendLineTextToOutside(bShow);

  0004a	ff e0		 jmp	 eax
$LN3@MChart_Set:

; 257  : 		else				return m_pMChartInterface->SetShowTrendLineTextToOutside(bShow);

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	5e		 pop	 esi
  0004f	8b 40 5c	 mov	 eax, DWORD PTR [eax+92]

; 260  : }

  00052	5d		 pop	 ebp

; 257  : 		else				return m_pMChartInterface->SetShowTrendLineTextToOutside(bShow);

  00053	ff e0		 jmp	 eax
?MChart_SetShowTrendLineTextToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetShowTrendLineTextToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetAutoSaveToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z
_TEXT	SEGMENT
_bAutoSave$ = 8						; size = 1
?MChart_SetAutoSaveToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetAutoSaveToOutside, COMDAT
; _this$ = ecx

; 244  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 245  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:

; 249  : 	}
; 250  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 251  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 246  : 	{
; 247  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetAutoSaveToOutside(bAutoSave);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0c		 je	 SHORT $LN3@MChart_Set
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 40 58	 mov	 eax, DWORD PTR [eax+88]

; 251  : }

  00049	5d		 pop	 ebp

; 246  : 	{
; 247  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetAutoSaveToOutside(bAutoSave);

  0004a	ff e0		 jmp	 eax
$LN3@MChart_Set:

; 248  : 		else				return m_pMChartInterface->SetAutoSaveToOutside(bAutoSave);

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	5e		 pop	 esi
  0004f	8b 40 58	 mov	 eax, DWORD PTR [eax+88]

; 251  : }

  00052	5d		 pop	 ebp

; 248  : 		else				return m_pMChartInterface->SetAutoSaveToOutside(bAutoSave);

  00053	ff e0		 jmp	 eax
?MChart_SetAutoSaveToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetAutoSaveToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetTimeLinkageToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z
_TEXT	SEGMENT
_bTimeLinkage$ = 8					; size = 1
?MChart_SetTimeLinkageToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetTimeLinkageToOutside, COMDAT
; _this$ = ecx

; 235  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 236  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:

; 240  : 	}
; 241  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 242  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 237  : 	{
; 238  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetTimeLinkageToOutside(bTimeLinkage);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0c		 je	 SHORT $LN3@MChart_Set
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 40 54	 mov	 eax, DWORD PTR [eax+84]

; 242  : }

  00049	5d		 pop	 ebp

; 237  : 	{
; 238  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetTimeLinkageToOutside(bTimeLinkage);

  0004a	ff e0		 jmp	 eax
$LN3@MChart_Set:

; 239  : 		else				return m_pMChartInterface->SetTimeLinkageToOutside(bTimeLinkage);

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	5e		 pop	 esi
  0004f	8b 40 54	 mov	 eax, DWORD PTR [eax+84]

; 242  : }

  00052	5d		 pop	 ebp

; 239  : 		else				return m_pMChartInterface->SetTimeLinkageToOutside(bTimeLinkage);

  00053	ff e0		 jmp	 eax
?MChart_SetTimeLinkageToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetTimeLinkageToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetShowTrendLineValueToOutside@COutsideCommonInterfaceFunction@@QAE_NH@Z
_TEXT	SEGMENT
_nPosition$ = 8						; size = 4
?MChart_SetShowTrendLineValueToOutside@COutsideCommonInterfaceFunction@@QAE_NH@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetShowTrendLineValueToOutside, COMDAT
; _this$ = ecx

; 226  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 227  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:

; 231  : 	}
; 232  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 233  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 228  : 	{
; 229  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowTrendLineValueToOutside(nPosition);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0c		 je	 SHORT $LN3@MChart_Set
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 40 50	 mov	 eax, DWORD PTR [eax+80]

; 233  : }

  00049	5d		 pop	 ebp

; 228  : 	{
; 229  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowTrendLineValueToOutside(nPosition);

  0004a	ff e0		 jmp	 eax
$LN3@MChart_Set:

; 230  : 		else				return m_pMChartInterface->SetShowTrendLineValueToOutside(nPosition);

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	5e		 pop	 esi
  0004f	8b 40 50	 mov	 eax, DWORD PTR [eax+80]

; 233  : }

  00052	5d		 pop	 ebp

; 230  : 		else				return m_pMChartInterface->SetShowTrendLineValueToOutside(nPosition);

  00053	ff e0		 jmp	 eax
?MChart_SetShowTrendLineValueToOutside@COutsideCommonInterfaceFunction@@QAE_NH@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetShowTrendLineValueToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetTrendLineColorToOutside@COutsideCommonInterfaceFunction@@QAE_NK@Z
_TEXT	SEGMENT
_clrLineColor$ = 8					; size = 4
?MChart_SetTrendLineColorToOutside@COutsideCommonInterfaceFunction@@QAE_NK@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetTrendLineColorToOutside, COMDAT
; _this$ = ecx

; 217  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 218  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:

; 222  : 	}
; 223  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 224  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 219  : 	{
; 220  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetTrendLineColorToOutside(clrLineColor);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0c		 je	 SHORT $LN3@MChart_Set
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 40 4c	 mov	 eax, DWORD PTR [eax+76]

; 224  : }

  00049	5d		 pop	 ebp

; 219  : 	{
; 220  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetTrendLineColorToOutside(clrLineColor);

  0004a	ff e0		 jmp	 eax
$LN3@MChart_Set:

; 221  : 		else				return m_pMChartInterface->SetTrendLineColorToOutside(clrLineColor);

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	5e		 pop	 esi
  0004f	8b 40 4c	 mov	 eax, DWORD PTR [eax+76]

; 224  : }

  00052	5d		 pop	 ebp

; 221  : 		else				return m_pMChartInterface->SetTrendLineColorToOutside(clrLineColor);

  00053	ff e0		 jmp	 eax
?MChart_SetTrendLineColorToOutside@COutsideCommonInterfaceFunction@@QAE_NK@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetTrendLineColorToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetShowCurrentPriceToOutside@COutsideCommonInterfaceFunction@@QAE_NH@Z
_TEXT	SEGMENT
_nShowType$ = 8						; size = 4
?MChart_SetShowCurrentPriceToOutside@COutsideCommonInterfaceFunction@@QAE_NH@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetShowCurrentPriceToOutside, COMDAT
; _this$ = ecx

; 208  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 209  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:

; 213  : 	}
; 214  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 215  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 210  : 	{
; 211  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowCurrentPriceToOutside(nShowType);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0c		 je	 SHORT $LN3@MChart_Set
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 40 48	 mov	 eax, DWORD PTR [eax+72]

; 215  : }

  00049	5d		 pop	 ebp

; 210  : 	{
; 211  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowCurrentPriceToOutside(nShowType);

  0004a	ff e0		 jmp	 eax
$LN3@MChart_Set:

; 212  : 		else				return m_pMChartInterface->SetShowCurrentPriceToOutside(nShowType);

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	5e		 pop	 esi
  0004f	8b 40 48	 mov	 eax, DWORD PTR [eax+72]

; 215  : }

  00052	5d		 pop	 ebp

; 212  : 		else				return m_pMChartInterface->SetShowCurrentPriceToOutside(nShowType);

  00053	ff e0		 jmp	 eax
?MChart_SetShowCurrentPriceToOutside@COutsideCommonInterfaceFunction@@QAE_NH@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetShowCurrentPriceToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetShowExRightDividendToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 1
?MChart_SetShowExRightDividendToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetShowExRightDividendToOutside, COMDAT
; _this$ = ecx

; 199  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 200  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:

; 204  : 	}
; 205  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 206  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 201  : 	{
; 202  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowExRightDividendToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0c		 je	 SHORT $LN3@MChart_Set
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 40 44	 mov	 eax, DWORD PTR [eax+68]

; 206  : }

  00049	5d		 pop	 ebp

; 201  : 	{
; 202  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowExRightDividendToOutside(bShow);

  0004a	ff e0		 jmp	 eax
$LN3@MChart_Set:

; 203  : 		else				return m_pMChartInterface->SetShowExRightDividendToOutside(bShow);

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	5e		 pop	 esi
  0004f	8b 40 44	 mov	 eax, DWORD PTR [eax+68]

; 206  : }

  00052	5d		 pop	 ebp

; 203  : 		else				return m_pMChartInterface->SetShowExRightDividendToOutside(bShow);

  00053	ff e0		 jmp	 eax
?MChart_SetShowExRightDividendToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetShowExRightDividendToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetShowHighLowBoundToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 1
?MChart_SetShowHighLowBoundToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetShowHighLowBoundToOutside, COMDAT
; _this$ = ecx

; 190  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 191  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:

; 195  : 	}
; 196  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 197  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 192  : 	{
; 193  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowHighLowBoundToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0c		 je	 SHORT $LN3@MChart_Set
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 40 40	 mov	 eax, DWORD PTR [eax+64]

; 197  : }

  00049	5d		 pop	 ebp

; 192  : 	{
; 193  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowHighLowBoundToOutside(bShow);

  0004a	ff e0		 jmp	 eax
$LN3@MChart_Set:

; 194  : 		else				return m_pMChartInterface->SetShowHighLowBoundToOutside(bShow);

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	5e		 pop	 esi
  0004f	8b 40 40	 mov	 eax, DWORD PTR [eax+64]

; 197  : }

  00052	5d		 pop	 ebp

; 194  : 		else				return m_pMChartInterface->SetShowHighLowBoundToOutside(bShow);

  00053	ff e0		 jmp	 eax
?MChart_SetShowHighLowBoundToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetShowHighLowBoundToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetShowIndicatorValueToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 1
?MChart_SetShowIndicatorValueToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetShowIndicatorValueToOutside, COMDAT
; _this$ = ecx

; 181  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 182  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:

; 186  : 	}
; 187  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 188  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 183  : 	{
; 184  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowIndicatorValueToOutside(bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0c		 je	 SHORT $LN3@MChart_Set
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]

; 188  : }

  00049	5d		 pop	 ebp

; 183  : 	{
; 184  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowIndicatorValueToOutside(bShow);

  0004a	ff e0		 jmp	 eax
$LN3@MChart_Set:

; 185  : 		else				return m_pMChartInterface->SetShowIndicatorValueToOutside(bShow);

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	5e		 pop	 esi
  0004f	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]

; 188  : }

  00052	5d		 pop	 ebp

; 185  : 		else				return m_pMChartInterface->SetShowIndicatorValueToOutside(bShow);

  00053	ff e0		 jmp	 eax
?MChart_SetShowIndicatorValueToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetShowIndicatorValueToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetShowIndicatorVariableToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z
_TEXT	SEGMENT
_bShow$ = 8						; size = 1
?MChart_SetShowIndicatorVariableToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetShowIndicatorVariableToOutside, COMDAT
; _this$ = ecx

; 172  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 173  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:

; 177  : 	}
; 178  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 179  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 174  : 	{
; 175  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowIndicatorVariableToOutside( bShow);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0c		 je	 SHORT $LN3@MChart_Set
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 40 38	 mov	 eax, DWORD PTR [eax+56]

; 179  : }

  00049	5d		 pop	 ebp

; 174  : 	{
; 175  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetShowIndicatorVariableToOutside( bShow);

  0004a	ff e0		 jmp	 eax
$LN3@MChart_Set:

; 176  : 		else				return m_pMChartInterface->SetShowIndicatorVariableToOutside( bShow);

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	5e		 pop	 esi
  0004f	8b 40 38	 mov	 eax, DWORD PTR [eax+56]

; 179  : }

  00052	5d		 pop	 ebp

; 176  : 		else				return m_pMChartInterface->SetShowIndicatorVariableToOutside( bShow);

  00053	ff e0		 jmp	 eax
?MChart_SetShowIndicatorVariableToOutside@COutsideCommonInterfaceFunction@@QAE_N_N@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetShowIndicatorVariableToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetRightMarginToOutside@COutsideCommonInterfaceFunction@@QAE_NH@Z
_TEXT	SEGMENT
_nRightMargin$ = 8					; size = 4
?MChart_SetRightMarginToOutside@COutsideCommonInterfaceFunction@@QAE_NH@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetRightMarginToOutside, COMDAT
; _this$ = ecx

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 164  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:

; 168  : 	}
; 169  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 170  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 165  : 	{
; 166  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetRightMarginToOutside(nRightMargin);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0c		 je	 SHORT $LN3@MChart_Set
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 40 34	 mov	 eax, DWORD PTR [eax+52]

; 170  : }

  00049	5d		 pop	 ebp

; 165  : 	{
; 166  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetRightMarginToOutside(nRightMargin);

  0004a	ff e0		 jmp	 eax
$LN3@MChart_Set:

; 167  : 		else				return m_pMChartInterface->SetRightMarginToOutside(nRightMargin);

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	5e		 pop	 esi
  0004f	8b 40 34	 mov	 eax, DWORD PTR [eax+52]

; 170  : }

  00052	5d		 pop	 ebp

; 167  : 		else				return m_pMChartInterface->SetRightMarginToOutside(nRightMargin);

  00053	ff e0		 jmp	 eax
?MChart_SetRightMarginToOutside@COutsideCommonInterfaceFunction@@QAE_NH@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetRightMarginToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetYScalePositionToOutside@COutsideCommonInterfaceFunction@@QAE_NH@Z
_TEXT	SEGMENT
_nPosition$ = 8						; size = 4
?MChart_SetYScalePositionToOutside@COutsideCommonInterfaceFunction@@QAE_NH@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetYScalePositionToOutside, COMDAT
; _this$ = ecx

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 155  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:

; 159  : 	}
; 160  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 161  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 156  : 	{
; 157  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetYScalePositionToOutside(nPosition);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 0c		 je	 SHORT $LN3@MChart_Set
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	5e		 pop	 esi
  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	8b 40 30	 mov	 eax, DWORD PTR [eax+48]

; 161  : }

  00049	5d		 pop	 ebp

; 156  : 	{
; 157  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetYScalePositionToOutside(nPosition);

  0004a	ff e0		 jmp	 eax
$LN3@MChart_Set:

; 158  : 		else				return m_pMChartInterface->SetYScalePositionToOutside(nPosition);

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	5e		 pop	 esi
  0004f	8b 40 30	 mov	 eax, DWORD PTR [eax+48]

; 161  : }

  00052	5d		 pop	 ebp

; 158  : 		else				return m_pMChartInterface->SetYScalePositionToOutside(nPosition);

  00053	ff e0		 jmp	 eax
?MChart_SetYScalePositionToOutside@COutsideCommonInterfaceFunction@@QAE_NH@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetYScalePositionToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetImaginaryCandleAndGapRevisionToOutside@COutsideCommonInterfaceFunction@@QAE_N_N0@Z
_TEXT	SEGMENT
_bImaginaryCandle$ = 8					; size = 1
_bUseGapRevision$ = 12					; size = 1
?MChart_SetImaginaryCandleAndGapRevisionToOutside@COutsideCommonInterfaceFunction@@QAE_N_N0@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetImaginaryCandleAndGapRevisionToOutside, COMDAT
; _this$ = ecx

; 144  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0e		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 145  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 27		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:

; 149  : 	}
; 150  : 
; 151  : 	return false;

  00013	32 c0		 xor	 al, al
  00015	5e		 pop	 esi

; 152  : }

  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 eb		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 10		 call	 DWORD PTR [eax]
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	7c e2		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 146  : 	{
; 147  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->SetImaginaryCandleToOutside( bImaginaryCandle);

  0003a	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003e	74 12		 je	 SHORT $LN3@MChart_Set
  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	ff 75 08	 push	 DWORD PTR _bImaginaryCandle$[ebp]
  00046	8b 01		 mov	 eax, DWORD PTR [ecx]
  00048	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  0004b	ff d0		 call	 eax
  0004d	5e		 pop	 esi

; 152  : }

  0004e	5d		 pop	 ebp
  0004f	c2 08 00	 ret	 8
$LN3@MChart_Set:

; 148  : 		else				return m_pMChartInterface->SetImaginaryCandleAndGapRevisionToOutside( bImaginaryCandle, bUseGapRevision);

  00052	8b 01		 mov	 eax, DWORD PTR [ecx]
  00054	5e		 pop	 esi
  00055	8b 40 24	 mov	 eax, DWORD PTR [eax+36]

; 152  : }

  00058	5d		 pop	 ebp

; 148  : 		else				return m_pMChartInterface->SetImaginaryCandleAndGapRevisionToOutside( bImaginaryCandle, bUseGapRevision);

  00059	ff e0		 jmp	 eax
?MChart_SetImaginaryCandleAndGapRevisionToOutside@COutsideCommonInterfaceFunction@@QAE_N_N0@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetImaginaryCandleAndGapRevisionToOutside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_SetDataWindowData@COutsideCommonInterfaceFunction@@QAEXPAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@@@@Z
_TEXT	SEGMENT
_pListData$ = 8						; size = 4
?MChart_SetDataWindowData@COutsideCommonInterfaceFunction@@QAEXPAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@@@@Z PROC ; COutsideCommonInterfaceFunction::MChart_SetDataWindowData, COMDAT
; _this$ = ecx

; 136  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00006	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0000a	74 0c		 je	 SHORT $LN7@MChart_Set
  0000c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 137  : 	if( InitMChartInterface())

  0000f	85 c9		 test	 ecx, ecx
  00011	75 25		 jne	 SHORT $LN11@MChart_Set
$LN4@MChart_Set:
  00013	5e		 pop	 esi

; 141  : 	}
; 142  : }

  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
$LN7@MChart_Set:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  00018	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001b	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00022	85 c9		 test	 ecx, ecx
  00024	74 ed		 je	 SHORT $LN4@MChart_Set

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00026	8b 01		 mov	 eax, DWORD PTR [ecx]
  00028	ff 10		 call	 DWORD PTR [eax]
  0002a	83 f8 01	 cmp	 eax, 1
  0002d	7c e4		 jl	 SHORT $LN4@MChart_Set

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  0002f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00032	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00035	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_Set:

; 138  : 	{
; 139  : 		if( m_bIsOldInterface)	m_pOldMChartInterface->SetDataWindowData(pListData);

  00038	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0003c	74 0a		 je	 SHORT $LN3@MChart_Set
  0003e	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00041	5e		 pop	 esi
  00042	8b 01		 mov	 eax, DWORD PTR [ecx]

; 141  : 	}
; 142  : }

  00044	5d		 pop	 ebp

; 138  : 	{
; 139  : 		if( m_bIsOldInterface)	m_pOldMChartInterface->SetDataWindowData(pListData);

  00045	ff 60 20	 jmp	 DWORD PTR [eax+32]
$LN3@MChart_Set:

; 140  : 		else				m_pMChartInterface->SetDataWindowData(pListData);

  00048	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004a	5e		 pop	 esi

; 141  : 	}
; 142  : }

  0004b	5d		 pop	 ebp

; 140  : 		else				m_pMChartInterface->SetDataWindowData(pListData);

  0004c	ff 60 20	 jmp	 DWORD PTR [eax+32]
?MChart_SetDataWindowData@COutsideCommonInterfaceFunction@@QAEXPAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@@@@Z ENDP ; COutsideCommonInterfaceFunction::MChart_SetDataWindowData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?MChart_IsActiveDataWindow@COutsideCommonInterfaceFunction@@QAE_NXZ
_TEXT	SEGMENT
?MChart_IsActiveDataWindow@COutsideCommonInterfaceFunction@@QAE_NXZ PROC ; COutsideCommonInterfaceFunction::MChart_IsActiveDataWindow, COMDAT
; _this$ = ecx

; 127  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00003	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  00007	74 0b		 je	 SHORT $LN7@MChart_IsA
  00009	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 128  : 	if( InitMChartInterface())

  0000c	85 c9		 test	 ecx, ecx
  0000e	75 24		 jne	 SHORT $LN11@MChart_IsA
$LN4@MChart_IsA:

; 132  : 	}
; 133  : 	return false;

  00010	32 c0		 xor	 al, al
  00012	5e		 pop	 esi

; 134  : }

  00013	c3		 ret	 0
$LN7@MChart_IsA:

; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  00014	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00017	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  0001e	85 c9		 test	 ecx, ecx
  00020	74 ee		 je	 SHORT $LN4@MChart_IsA

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00022	8b 01		 mov	 eax, DWORD PTR [ecx]
  00024	ff 10		 call	 DWORD PTR [eax]
  00026	83 f8 01	 cmp	 eax, 1
  00029	7c e5		 jl	 SHORT $LN4@MChart_IsA

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  0002b	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0002e	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00031	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
$LN11@MChart_IsA:

; 129  : 	{
; 130  : 		if( m_bIsOldInterface)	return m_pOldMChartInterface->IsActiveDataWindow();

  00034	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  00038	74 0b		 je	 SHORT $LN3@MChart_IsA
  0003a	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0003d	5e		 pop	 esi
  0003e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00040	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  00043	ff e0		 jmp	 eax
$LN3@MChart_IsA:

; 131  : 		else				return m_pMChartInterface->IsActiveDataWindow();

  00045	8b 01		 mov	 eax, DWORD PTR [ecx]
  00047	5e		 pop	 esi
  00048	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  0004b	ff e0		 jmp	 eax
?MChart_IsActiveDataWindow@COutsideCommonInterfaceFunction@@QAE_NXZ ENDP ; COutsideCommonInterfaceFunction::MChart_IsActiveDataWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?InitMChartInterface@COutsideCommonInterfaceFunction@@QAEHXZ
_TEXT	SEGMENT
?InitMChartInterface@COutsideCommonInterfaceFunction@@QAEHXZ PROC ; COutsideCommonInterfaceFunction::InitMChartInterface, COMDAT
; _this$ = ecx

; 111  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 112  : 	if( m_bMChartInterfaceInited) return ( m_pMChartInterface != NULL);

  00003	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  00007	74 0a		 je	 SHORT $LN2@InitMChart
  00009	33 c0		 xor	 eax, eax
  0000b	39 46 0c	 cmp	 DWORD PTR [esi+12], eax
  0000e	5e		 pop	 esi
  0000f	0f 95 c0	 setne	 al

; 124  : }

  00012	c3		 ret	 0
$LN2@InitMChart:

; 113  : 	m_bMChartInterfaceInited = TRUE;
; 114  : 
; 115  : 	if( !m_pOutsideCommonInterface) return FALSE;

  00013	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00016	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  0001d	85 c9		 test	 ecx, ecx
  0001f	74 19		 je	 SHORT $LN6@InitMChart

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  00021	8b 01		 mov	 eax, DWORD PTR [ecx]
  00023	ff 10		 call	 DWORD PTR [eax]
  00025	83 f8 01	 cmp	 eax, 1
  00028	7c 10		 jl	 SHORT $LN6@InitMChart

; 121  : 	m_pMChartInterface = ( CMChartInterface *)m_pOutsideCommonInterface;

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	89 46 0c	 mov	 DWORD PTR [esi+12], eax

; 122  : 	m_pOldMChartInterface = ( COldMChartInterface *)m_pOutsideCommonInterface;

  00030	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 123  : 	return TRUE;

  00033	b8 01 00 00 00	 mov	 eax, 1
  00038	5e		 pop	 esi

; 124  : }

  00039	c3		 ret	 0
$LN6@InitMChart:

; 116  : 
; 117  : 	// (2006/11/18 - Seung-Won, Bae) Caution!
; 118  : 	//		The Next Version Interface must support the Previous Version Interface Correctly.
; 119  : 	//		Because, Old Version Supported Interface Checking is processed with Version Nember by '<=' (Greater than or Equal to)
; 120  : 	if( m_pOutsideCommonInterface->IsOutsideInterfaceType() < COutsideCommonInterface::MC_TYPE_ORG) return FALSE;

  0003a	33 c0		 xor	 eax, eax
  0003c	5e		 pop	 esi

; 124  : }

  0003d	c3		 ret	 0
?InitMChartInterface@COutsideCommonInterfaceFunction@@QAEHXZ ENDP ; COutsideCommonInterfaceFunction::InitMChartInterface
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?Outside_IsLoad_MarketChart@COutsideCommonInterfaceFunction@@QBE_NXZ
_TEXT	SEGMENT
?Outside_IsLoad_MarketChart@COutsideCommonInterfaceFunction@@QBE_NXZ PROC ; COutsideCommonInterfaceFunction::Outside_IsLoad_MarketChart, COMDAT
; _this$ = ecx

; 102  : 	if(m_pOutsideCommonInterface == NULL) return false;

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	85 c9		 test	 ecx, ecx
  00005	75 03		 jne	 SHORT $LN2@Outside_Is
  00007	32 c0		 xor	 al, al

; 104  : }

  00009	c3		 ret	 0
$LN2@Outside_Is:

; 103  : 	return m_pOutsideCommonInterface->IsLoad_MarketChart();

  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  0000f	ff e0		 jmp	 eax
?Outside_IsLoad_MarketChart@COutsideCommonInterfaceFunction@@QBE_NXZ ENDP ; COutsideCommonInterfaceFunction::Outside_IsLoad_MarketChart
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?Outside_RequestTRPacket@COutsideCommonInterfaceFunction@@QAEXFQBDF_N@Z
_TEXT	SEGMENT
_nID$ = 8						; size = 2
_pcszPacketNames$ = 12					; size = 4
_nCount$ = 16						; size = 2
_bIsNew$ = 20						; size = 1
?Outside_RequestTRPacket@COutsideCommonInterfaceFunction@@QAEXFQBDF_N@Z PROC ; COutsideCommonInterfaceFunction::Outside_RequestTRPacket, COMDAT
; _this$ = ecx

; 89   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 90   : #ifdef _DEBUG
; 91   : 	CString strMsg;
; 92   : 	strMsg.Format( "MarketIndicator TR Requested (for MChart) : %s\r\n", pcszPacketNames);
; 93   : 	TRACE( strMsg);
; 94   : #endif
; 95   : 	if(m_pOutsideCommonInterface == NULL) return;

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN1@Outside_Re

; 96   : 	m_pOutsideCommonInterface->RequestTRPacket(nID, pcszPacketNames, nCount, bIsNew);

  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]

; 97   : }

  0000c	5d		 pop	 ebp

; 96   : 	m_pOutsideCommonInterface->RequestTRPacket(nID, pcszPacketNames, nCount, bIsNew);

  0000d	ff 60 14	 jmp	 DWORD PTR [eax+20]
$LN1@Outside_Re:

; 97   : }

  00010	5d		 pop	 ebp
  00011	c2 10 00	 ret	 16			; 00000010H
?Outside_RequestTRPacket@COutsideCommonInterfaceFunction@@QAEXFQBDF_N@Z ENDP ; COutsideCommonInterfaceFunction::Outside_RequestTRPacket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?Outside_GetUserID@COutsideCommonInterfaceFunction@@QAEPBDXZ
_TEXT	SEGMENT
?Outside_GetUserID@COutsideCommonInterfaceFunction@@QAEPBDXZ PROC ; COutsideCommonInterfaceFunction::Outside_GetUserID, COMDAT
; _this$ = ecx

; 83   : 	if(m_pOutsideCommonInterface == NULL) return _T("");

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	85 c9		 test	 ecx, ecx
  00005	75 06		 jne	 SHORT $LN2@Outside_Ge
  00007	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_00CNPNBAHC@@

; 85   : }

  0000c	c3		 ret	 0
$LN2@Outside_Ge:

; 84   : 	return m_pOutsideCommonInterface->GetUserID();

  0000d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000f	ff 60 10	 jmp	 DWORD PTR [eax+16]
?Outside_GetUserID@COutsideCommonInterfaceFunction@@QAEPBDXZ ENDP ; COutsideCommonInterfaceFunction::Outside_GetUserID
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?Outside_GetMainPath@COutsideCommonInterfaceFunction@@QAEPBDXZ
_TEXT	SEGMENT
?Outside_GetMainPath@COutsideCommonInterfaceFunction@@QAEPBDXZ PROC ; COutsideCommonInterfaceFunction::Outside_GetMainPath, COMDAT
; _this$ = ecx

; 77   : 	if(m_pOutsideCommonInterface == NULL) return _T("");

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	85 c9		 test	 ecx, ecx
  00005	75 06		 jne	 SHORT $LN2@Outside_Ge
  00007	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_00CNPNBAHC@@

; 79   : }

  0000c	c3		 ret	 0
$LN2@Outside_Ge:

; 78   : 	return m_pOutsideCommonInterface->GetMainPath();

  0000d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000f	ff 60 0c	 jmp	 DWORD PTR [eax+12]
?Outside_GetMainPath@COutsideCommonInterfaceFunction@@QAEPBDXZ ENDP ; COutsideCommonInterfaceFunction::Outside_GetMainPath
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?Outside_UnSetRealInfo@COutsideCommonInterfaceFunction@@QAEXPAXPAUHWND__@@IPAD22@Z
_TEXT	SEGMENT
_pDrds$ = 8						; size = 4
_hWnd$ = 12						; size = 4
_id$ = 16						; size = 4
_DataName$ = 20						; size = 4
_FieldName$ = 24					; size = 4
_KeyName$ = 28						; size = 4
?Outside_UnSetRealInfo@COutsideCommonInterfaceFunction@@QAEXPAXPAUHWND__@@IPAD22@Z PROC ; COutsideCommonInterfaceFunction::Outside_UnSetRealInfo, COMDAT
; _this$ = ecx

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 69   : 	if(m_pOutsideCommonInterface == NULL) return;

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN1@Outside_Un

; 70   : 
; 71   : 	m_pOutsideCommonInterface->UnSetRealInfo(pDrds, hWnd, id, DataName, FieldName, KeyName);

  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]

; 72   : }

  0000c	5d		 pop	 ebp

; 70   : 
; 71   : 	m_pOutsideCommonInterface->UnSetRealInfo(pDrds, hWnd, id, DataName, FieldName, KeyName);

  0000d	ff 60 08	 jmp	 DWORD PTR [eax+8]
$LN1@Outside_Un:

; 72   : }

  00010	5d		 pop	 ebp
  00011	c2 18 00	 ret	 24			; 00000018H
?Outside_UnSetRealInfo@COutsideCommonInterfaceFunction@@QAEXPAXPAUHWND__@@IPAD22@Z ENDP ; COutsideCommonInterfaceFunction::Outside_UnSetRealInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?Outside_SetRealInfo@COutsideCommonInterfaceFunction@@QAEXPAXPAUHWND__@@IPAD22@Z
_TEXT	SEGMENT
_pDrds$ = 8						; size = 4
_hWnd$ = 12						; size = 4
_id$ = 16						; size = 4
_DataName$ = 20						; size = 4
_FieldName$ = 24					; size = 4
_KeyName$ = 28						; size = 4
?Outside_SetRealInfo@COutsideCommonInterfaceFunction@@QAEXPAXPAUHWND__@@IPAD22@Z PROC ; COutsideCommonInterfaceFunction::Outside_SetRealInfo, COMDAT
; _this$ = ecx

; 61   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 62   : 	if(m_pOutsideCommonInterface == NULL) return;

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN1@Outside_Se

; 63   : 
; 64   : 	m_pOutsideCommonInterface->SetRealInfo(pDrds, hWnd, id, DataName, FieldName, KeyName);

  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]

; 65   : }

  0000c	5d		 pop	 ebp

; 63   : 
; 64   : 	m_pOutsideCommonInterface->SetRealInfo(pDrds, hWnd, id, DataName, FieldName, KeyName);

  0000d	ff 60 04	 jmp	 DWORD PTR [eax+4]
$LN1@Outside_Se:

; 65   : }

  00010	5d		 pop	 ebp
  00011	c2 18 00	 ret	 24			; 00000018H
?Outside_SetRealInfo@COutsideCommonInterfaceFunction@@QAEXPAXPAUHWND__@@IPAD22@Z ENDP ; COutsideCommonInterfaceFunction::Outside_SetRealInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?GetOutsideCommonInterface@COutsideCommonInterfaceFunction@@QAEPAVCOutsideCommonInterface@@XZ
_TEXT	SEGMENT
?GetOutsideCommonInterface@COutsideCommonInterfaceFunction@@QAEPAVCOutsideCommonInterface@@XZ PROC ; COutsideCommonInterfaceFunction::GetOutsideCommonInterface, COMDAT
; _this$ = ecx

; 55   : 	return m_pOutsideCommonInterface;

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 56   : }

  00003	c3		 ret	 0
?GetOutsideCommonInterface@COutsideCommonInterfaceFunction@@QAEPAVCOutsideCommonInterface@@XZ ENDP ; COutsideCommonInterfaceFunction::GetOutsideCommonInterface
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?SetOutsideCommonInterface@COutsideCommonInterfaceFunction@@QAEXPAVCOutsideCommonInterface@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
$T2 = -284						; size = 4
_strChartMode$3 = -280					; size = 4
$T4 = -276						; size = 4
_szMChartMode$5 = -272					; size = 256
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pOutsideCommonInterface$ = 8				; size = 4
_p_strDataPath$ = 12					; size = 4
?SetOutsideCommonInterface@COutsideCommonInterfaceFunction@@QAEXPAVCOutsideCommonInterface@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC ; COutsideCommonInterfaceFunction::SetOutsideCommonInterface, COMDAT
; _this$ = ecx

; 43   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetOutsideCommonInterface@COutsideCommonInterfaceFunction@@QAEXPAVCOutsideCommonInterface@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 10 01 00
	00		 sub	 esp, 272		; 00000110H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	50		 push	 eax
  00023	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00026	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002c	8b f1		 mov	 esi, ecx
  0002e	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0

; 44   : 	m_pOutsideCommonInterface = pOutsideCommonInterface;

  00038	8b 45 08	 mov	 eax, DWORD PTR _pOutsideCommonInterface$[ebp]
  0003b	89 46 04	 mov	 DWORD PTR [esi+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

  0003e	8b 45 0c	 mov	 eax, DWORD PTR _p_strDataPath$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp

; 43   : {

  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 533  : 		return( GetLength() == 0 );

  00048	83 78 f4 00	 cmp	 DWORD PTR [eax-12], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp

; 45   : 	if( !p_strDataPath.IsEmpty())

  0004c	0f 84 d2 00 00
	00		 je	 $LN2@SetOutside
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h

; 2401 : 		CStringT strResult( str1.GetManager() );

  00052	8d 4d 0c	 lea	 ecx, DWORD PTR _p_strDataPath$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp

; 48   : 		DWORD dwError = GetPrivateProfileString( "Chart Version", "MChartMode", "", szMChartMode, 255, p_strDataPath + "ChartMetaTable.dat");

  00055	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h

; 2401 : 		CStringT strResult( str1.GetManager() );

  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetManager@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEPAUIAtlStringMgr@2@XZ
  0005f	50		 push	 eax
  00060	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

  0006c	8b 45 0c	 mov	 eax, DWORD PTR _p_strDataPath$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h

; 2403 : 		CThisSimpleString::Concatenate( strResult, str1, str1.GetLength(), psz2, CThisSimpleString::StringLength( psz2 ) );

  0006f	6a 12		 push	 18			; 00000012H
  00071	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@PNOKNCJO@ChartMetaTable?4dat@

; 2404 : 
; 2405 : 		return( strResult );

  00076	c7 85 e4 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR $T2[ebp], 1
  00080	ff 70 f4	 push	 DWORD PTR [eax-12]
  00083	50		 push	 eax
  00084	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR $T4[ebp]
  0008a	50		 push	 eax
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Concatenate@?$CSimpleStringT@D$00@ATL@@KAXAAV12@PBDH1H@Z
  00091	83 c4 14	 add	 esp, 20			; 00000014H
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp

; 48   : 		DWORD dwError = GetPrivateProfileString( "Chart Version", "MChartMode", "", szMChartMode, 255, p_strDataPath + "ChartMetaTable.dat");

  00094	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szMChartMode$5[ebp]
  0009a	ff b5 ec fe ff
	ff		 push	 DWORD PTR $T4[ebp]
  000a0	68 ff 00 00 00	 push	 255			; 000000ffH
  000a5	50		 push	 eax
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  000ab	68 00 00 00 00	 push	 OFFSET ??_C@_0L@HIOFCMKH@MChartMode@
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GDACOMFO@Chart?5Version@
  000b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileStringA@24
  000bb	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  000c1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000c5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 49   : 		CString strChartMode( szMChartMode);

  000cb	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szMChartMode$5[ebp]
  000d1	50		 push	 eax
  000d2	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _strChartMode$3[ebp]
  000d8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h

; 2486 : 		return(str1.Compare(psz2) == 0);

  000de	68 00 00 00 00	 push	 OFFSET ??_C@_02GMLAAMD@FX@
  000e3	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _strChartMode$3[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp

; 49   : 		CString strChartMode( szMChartMode);

  000e9	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h

; 2486 : 		return(str1.Compare(psz2) == 0);

  000ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
  000f3	85 c0		 test	 eax, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp

; 50   : 		m_bIsOldInterface =  ( ( strChartMode == "FX") || ( strChartMode == "HTS"));

  000f5	74 19		 je	 SHORT $LN4@SetOutside
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h

; 2486 : 		return(str1.Compare(psz2) == 0);

  000f7	68 00 00 00 00	 push	 OFFSET ??_C@_03HKDINIMK@HTS@
  000fc	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _strChartMode$3[ebp]
  00102	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
  00108	85 c0		 test	 eax, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp

; 50   : 		m_bIsOldInterface =  ( ( strChartMode == "FX") || ( strChartMode == "HTS"));

  0010a	74 04		 je	 SHORT $LN4@SetOutside
  0010c	33 c0		 xor	 eax, eax
  0010e	eb 05		 jmp	 SHORT $LN5@SetOutside
$LN4@SetOutside:
  00110	b8 01 00 00 00	 mov	 eax, 1
$LN5@SetOutside:

; 51   : 	}

  00115	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _strChartMode$3[ebp]
  0011b	89 46 20	 mov	 DWORD PTR [esi+32], eax
  0011e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN2@SetOutside:

; 52   : }

  00124	8d 4d 0c	 lea	 ecx, DWORD PTR _p_strDataPath$[ebp]
  00127	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0012d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00130	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00137	59		 pop	 ecx
  00138	5e		 pop	 esi
  00139	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0013c	33 cd		 xor	 ecx, ebp
  0013e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetOutsideCommonInterface@COutsideCommonInterfaceFunction@@QAEXPAVCOutsideCommonInterface@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$0:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _p_strDataPath$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?SetOutsideCommonInterface@COutsideCommonInterfaceFunction@@QAEXPAVCOutsideCommonInterface@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$3:
  00009	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  0000f	83 e0 01	 and	 eax, 1
  00012	0f 84 13 00 00
	00		 je	 $LN18@SetOutside
  00018	83 a5 e4 fe ff
	ff fe		 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  0001f	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00025	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN18@SetOutside:
  0002b	c3		 ret	 0
__unwindfunclet$?SetOutsideCommonInterface@COutsideCommonInterfaceFunction@@QAEXPAVCOutsideCommonInterface@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$2:
  0002c	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _strChartMode$3[ebp]
  00032	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00038	cc		 int	 3
  00039	cc		 int	 3
  0003a	cc		 int	 3
  0003b	cc		 int	 3
  0003c	cc		 int	 3
__ehhandler$?SetOutsideCommonInterface@COutsideCommonInterfaceFunction@@QAEXPAVCOutsideCommonInterface@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:
  0003d	90		 npad	 1
  0003e	90		 npad	 1
  0003f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00043	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00046	8b 8a e8 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-280]
  0004c	33 c8		 xor	 ecx, eax
  0004e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00053	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00056	33 c8		 xor	 ecx, eax
  00058	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetOutsideCommonInterface@COutsideCommonInterfaceFunction@@QAEXPAVCOutsideCommonInterface@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
  00062	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetOutsideCommonInterface@COutsideCommonInterfaceFunction@@QAEXPAVCOutsideCommonInterface@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; COutsideCommonInterfaceFunction::SetOutsideCommonInterface
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ??1COutsideCommonInterfaceFunction@@UAE@XZ
_TEXT	SEGMENT
??1COutsideCommonInterfaceFunction@@UAE@XZ PROC		; COutsideCommonInterfaceFunction::~COutsideCommonInterfaceFunction, COMDAT
; _this$ = ecx

; 38   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7COutsideCommonInterfaceFunction@@6B@

; 39   : }

  00006	c3		 ret	 0
??1COutsideCommonInterfaceFunction@@UAE@XZ ENDP		; COutsideCommonInterfaceFunction::~COutsideCommonInterfaceFunction
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ??0COutsideCommonInterfaceFunction@@QAE@XZ
_TEXT	SEGMENT
??0COutsideCommonInterfaceFunction@@QAE@XZ PROC		; COutsideCommonInterfaceFunction::COutsideCommonInterfaceFunction, COMDAT
; _this$ = ecx

; 20   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7COutsideCommonInterfaceFunction@@6B@

; 21   : 	m_pOutsideCommonInterface = NULL;
; 22   : 
; 23   : 	// (2006/11/15 - Seung-Won, Bae) for Interface in CMChartInterface
; 24   : 	m_bMChartInterfaceInited	= FALSE;
; 25   : 	m_pMChartInterface			= NULL;
; 26   : 	m_pOldMChartInterface	= NULL;		// (2009/9/3 - Seung-Won, Bae) for WorldOn MChartInterface
; 27   : 
; 28   : 	// (2006/11/15 - Seung-Won, Bae) for New Interface in 06/11/15
; 29   : 	m_bMChartInterfaceInited061115	= FALSE;
; 30   : 	m_pMChartInterface061115		= NULL;
; 31   : 	m_pOldMChartInterface061115		= NULL;	// (2009/9/3 - Seung-Won, Bae) for WorldOn MChartInterface
; 32   : 
; 33   : 	// (2009/9/3 - Seung-Won, Bae) for WorldOn MChartInterface
; 34   : 	m_bIsOldInterface = FALSE;
; 35   : }

  00006	8b c1		 mov	 eax, ecx
  00008	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0000f	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00016	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  0001d	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00024	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
  0002b	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0
  00032	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
  00039	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0
  00040	c3		 ret	 0
??0COutsideCommonInterfaceFunction@@QAE@XZ ENDP		; COutsideCommonInterfaceFunction::COutsideCommonInterfaceFunction
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\OutsideCommonInterfaceFunction.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
