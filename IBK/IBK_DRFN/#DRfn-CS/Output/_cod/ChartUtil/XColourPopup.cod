; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\ChartUtil\XColourPopup.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A ; CXColourPopup::m_crColors
PUBLIC	??_C@_0N@DDHHKGIM@Light?5Maroon@		; `string'
PUBLIC	??_C@_08HAEFGIKB@Dark?5Red@			; `string'
PUBLIC	??_C@_03PADCEAKC@Red@				; `string'
PUBLIC	??_C@_09FEGCKMHO@Deep?5Pink@			; `string'
PUBLIC	??_C@_07LFEAGNHO@Magenta@			; `string'
PUBLIC	??_C@_04IDKACLOG@Pink@				; `string'
PUBLIC	??_C@_0L@PLCCGPOI@Light?5Pink@			; `string'
PUBLIC	??_C@_0BA@LIDOBFMF@Very?5Light?5Pink@		; `string'
PUBLIC	??_C@_0M@CNPJOBLN@Dark?5Orange@			; `string'
PUBLIC	??_C@_06LMIDBFFB@Orange@			; `string'
PUBLIC	??_C@_0N@HBEPKAHH@Light?5Salmon@		; `string'
PUBLIC	??_C@_0N@FDLBMFNE@Light?5Orange@		; `string'
PUBLIC	??_C@_04PABHPHAJ@Gold@				; `string'
PUBLIC	??_C@_06ICCAKDNH@Yellow@			; `string'
PUBLIC	??_C@_0O@FBOMNIJN@Desert?5Yellow@		; `string'
PUBLIC	??_C@_0M@ONOBOLHB@Pale?5Yellow@			; `string'
PUBLIC	??_C@_0L@HIHAOELK@Dark?5Green@			; `string'
PUBLIC	??_C@_0N@GBJGFCHE@Medium?5Green@		; `string'
PUBLIC	??_C@_05GGOIJPPE@Green@				; `string'
PUBLIC	??_C@_09OBGCMFPG@Dark?5Teal@			; `string'
PUBLIC	??_C@_05OCCJEPCA@Olive@				; `string'
PUBLIC	??_C@_04HIOLODGE@Teal@				; `string'
PUBLIC	??_C@_09PKEKPHNP@Turquoise@			; `string'
PUBLIC	??_C@_0BE@LMIPCNJB@Medium?5Spring?5Green@	; `string'
PUBLIC	??_C@_0L@PPIFAICJ@Mint?5Green@			; `string'
PUBLIC	??_C@_04LKHFMCLC@Lime@				; `string'
PUBLIC	??_C@_0N@ECNKKMBO@Spring?5Green@		; `string'
PUBLIC	??_C@_0L@BHNHNICC@Pale?5Green@			; `string'
PUBLIC	??_C@_0L@IKHGMDBB@Aquamarine@			; `string'
PUBLIC	??_C@_0BA@FEMLKCAP@Very?5Pale?5Green@		; `string'
PUBLIC	??_C@_0M@GBIHCKIC@Deep?5Purple@			; `string'
PUBLIC	??_C@_06KLMDOLNB@Purple@			; `string'
PUBLIC	??_C@_0M@KIPEHOND@Deep?5Violet@			; `string'
PUBLIC	??_C@_0O@GIJBMEHB@Midnight?5Blue@		; `string'
PUBLIC	??_C@_09LJCHFILL@Dark?5Blue@			; `string'
PUBLIC	??_C@_04PDAFKIPB@Navy@				; `string'
PUBLIC	??_C@_06GCLALPIA@Violet@			; `string'
PUBLIC	??_C@_04CAKOHOCJ@Blue@				; `string'
PUBLIC	??_C@_0M@DDKHOHCN@Medium?5Blue@			; `string'
PUBLIC	??_C@_0P@HIKAJNOC@Light?5Sky?5Blue@		; `string'
PUBLIC	??_C@_0BA@CJPMPBAM@Cornflower?5Blue@		; `string'
PUBLIC	??_C@_08LIIHMMAK@Sky?5Blue@			; `string'
PUBLIC	??_C@_09BLFLAEMB@Dark?5Cyan@			; `string'
PUBLIC	??_C@_0BC@DOEDFOCO@Medium?5Slate?5Blue@		; `string'
PUBLIC	??_C@_0L@FICMDKCH@Light?5Blue@			; `string'
PUBLIC	??_C@_04ICNCCCFD@Cyan@				; `string'
PUBLIC	??_C@_0M@JDEEFDAL@Powder?5Blue@			; `string'
PUBLIC	??_C@_0L@PKFAGGFN@Light?5Cyan@			; `string'
PUBLIC	??_C@_05BPGNDIAE@Black@				; `string'
PUBLIC	??_C@_04KFNAIHAE@Gray@				; `string'
PUBLIC	??_C@_08DOIMHNKP@Gray?540?$CF@			; `string'
PUBLIC	??_C@_06BONGPKIK@Silver@			; `string'
PUBLIC	??_C@_0L@NNFCMDAK@Light?5Gray@			; `string'
PUBLIC	??_C@_05EOEDPHMI@Beige@				; `string'
PUBLIC	??_C@_0N@EHFPBLHC@Floral?5White@		; `string'
PUBLIC	??_C@_05PLKILNHI@White@				; `string'
PUBLIC	??_C@_06BKKJGDHO@Window@			; `string'
PUBLIC	??_C@_0L@JDAMLHCM@WindowText@			; `string'
PUBLIC	??_C@_06BNOPAHL@InfoBk@				; `string'
PUBLIC	??_C@_08GPLIMDPE@InfoText@			; `string'
PUBLIC	??_C@_0O@NDMFLOAB@ActiveCaption@		; `string'
PUBLIC	??_C@_0M@FJPFAALP@CaptionText@			; `string'
PUBLIC	??_C@_0BA@HPOJFBPJ@InactiveCaption@		; `string'
PUBLIC	??_C@_0BE@JMMNCIC@InactiveCaptionText@		; `string'
PUBLIC	??_C@_07NNIOKIAA@BtnFace@			; `string'
PUBLIC	??_C@_07LGGJEDE@BtnText@			; `string'
PUBLIC	??_C@_09CLGNEDNM@BtnShadow@			; `string'
PUBLIC	??_C@_0N@FHBMHCGO@BtnHighlight@			; `string'
PUBLIC	??_C@_09EDNNHPMP@Highlight@			; `string'
PUBLIC	??_C@_0O@HKBKJBGF@HighlightText@		; `string'
PUBLIC	??_C@_07GGAFBDJJ@3DLight@			; `string'
PUBLIC	??_C@_07FDJHENA@Desktop@			; `string'
PUBLIC	??_C@_01HIHLOKLC@1@				; `string'
PUBLIC	??_C@_01FDFGLJHB@2@				; `string'
PUBLIC	??_C@_01EKENIIDA@3@				; `string'
PUBLIC	??_C@_01FAMBOPH@4@				; `string'
PUBLIC	??_C@_01BMBHCPLG@5@				; `string'
PUBLIC	??_C@_01DHDKHMHF@6@				; `string'
PUBLIC	??_C@_01COCBENDE@7@				; `string'
PUBLIC	??_C@_01KJLJFBPL@8@				; `string'
PUBLIC	??_C@_01LAKCGALK@9@				; `string'
PUBLIC	??_C@_02PKFBJPLJ@10@				; `string'
PUBLIC	??_C@_02ODEKKOPI@11@				; `string'
PUBLIC	??_C@_02MIGHPNDL@12@				; `string'
PUBLIC	??_C@_02NBHMMMHK@13@				; `string'
PUBLIC	??_C@_02JODNFKLN@14@				; `string'
PUBLIC	??_C@_02IHCGGLPM@15@				; `string'
PUBLIC	??_C@_02KMALDIDP@16@				; `string'
PUBLIC	??_C@_0P@KADIGIME@Custom?5color?51@		; `string'
PUBLIC	??_C@_0P@ILBFDLAH@Custom?5color?52@		; `string'
PUBLIC	??_C@_0P@JCAOAKEG@Custom?5color?53@		; `string'
PUBLIC	??_C@_0P@NNEPJMIB@Custom?5color?54@		; `string'
PUBLIC	??_C@_0P@MEFEKNMA@Custom?5color?55@		; `string'
PUBLIC	??_C@_0P@OPHJPOAD@Custom?5color?56@		; `string'
PUBLIC	??_C@_0P@PGGCMPEC@Custom?5color?57@		; `string'
PUBLIC	??_C@_0P@HBPKNDIN@Custom?5color?58@		; `string'
PUBLIC	??_C@_0P@GIOBOCMM@Custom?5color?59@		; `string'
PUBLIC	??_C@_0BA@EDOPAIDC@Custom?5color?510@		; `string'
PUBLIC	??_C@_0BA@FKPEDJHD@Custom?5color?511@		; `string'
PUBLIC	??_C@_0BA@HBNJGKLA@Custom?5color?512@		; `string'
PUBLIC	??_C@_0BA@GIMCFLPB@Custom?5color?513@		; `string'
PUBLIC	??_C@_0BA@CHIDMNDG@Custom?5color?514@		; `string'
PUBLIC	??_C@_0BA@DOJIPMHH@Custom?5color?515@		; `string'
PUBLIC	??_C@_0BA@BFLFKPLE@Custom?5color?516@		; `string'
;	COMDAT ??_C@_0BA@BFLFKPLE@Custom?5color?516@
CONST	SEGMENT
??_C@_0BA@BFLFKPLE@Custom?5color?516@ DB 'Custom color 16', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DOJIPMHH@Custom?5color?515@
CONST	SEGMENT
??_C@_0BA@DOJIPMHH@Custom?5color?515@ DB 'Custom color 15', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CHIDMNDG@Custom?5color?514@
CONST	SEGMENT
??_C@_0BA@CHIDMNDG@Custom?5color?514@ DB 'Custom color 14', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GIMCFLPB@Custom?5color?513@
CONST	SEGMENT
??_C@_0BA@GIMCFLPB@Custom?5color?513@ DB 'Custom color 13', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HBNJGKLA@Custom?5color?512@
CONST	SEGMENT
??_C@_0BA@HBNJGKLA@Custom?5color?512@ DB 'Custom color 12', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FKPEDJHD@Custom?5color?511@
CONST	SEGMENT
??_C@_0BA@FKPEDJHD@Custom?5color?511@ DB 'Custom color 11', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EDOPAIDC@Custom?5color?510@
CONST	SEGMENT
??_C@_0BA@EDOPAIDC@Custom?5color?510@ DB 'Custom color 10', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GIOBOCMM@Custom?5color?59@
CONST	SEGMENT
??_C@_0P@GIOBOCMM@Custom?5color?59@ DB 'Custom color 9', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HBPKNDIN@Custom?5color?58@
CONST	SEGMENT
??_C@_0P@HBPKNDIN@Custom?5color?58@ DB 'Custom color 8', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PGGCMPEC@Custom?5color?57@
CONST	SEGMENT
??_C@_0P@PGGCMPEC@Custom?5color?57@ DB 'Custom color 7', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OPHJPOAD@Custom?5color?56@
CONST	SEGMENT
??_C@_0P@OPHJPOAD@Custom?5color?56@ DB 'Custom color 6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MEFEKNMA@Custom?5color?55@
CONST	SEGMENT
??_C@_0P@MEFEKNMA@Custom?5color?55@ DB 'Custom color 5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NNEPJMIB@Custom?5color?54@
CONST	SEGMENT
??_C@_0P@NNEPJMIB@Custom?5color?54@ DB 'Custom color 4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JCAOAKEG@Custom?5color?53@
CONST	SEGMENT
??_C@_0P@JCAOAKEG@Custom?5color?53@ DB 'Custom color 3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ILBFDLAH@Custom?5color?52@
CONST	SEGMENT
??_C@_0P@ILBFDLAH@Custom?5color?52@ DB 'Custom color 2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KADIGIME@Custom?5color?51@
CONST	SEGMENT
??_C@_0P@KADIGIME@Custom?5color?51@ DB 'Custom color 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02KMALDIDP@16@
CONST	SEGMENT
??_C@_02KMALDIDP@16@ DB '16', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02IHCGGLPM@15@
CONST	SEGMENT
??_C@_02IHCGGLPM@15@ DB '15', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JODNFKLN@14@
CONST	SEGMENT
??_C@_02JODNFKLN@14@ DB '14', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02NBHMMMHK@13@
CONST	SEGMENT
??_C@_02NBHMMMHK@13@ DB '13', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MIGHPNDL@12@
CONST	SEGMENT
??_C@_02MIGHPNDL@12@ DB '12', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02ODEKKOPI@11@
CONST	SEGMENT
??_C@_02ODEKKOPI@11@ DB '11', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02PKFBJPLJ@10@
CONST	SEGMENT
??_C@_02PKFBJPLJ@10@ DB '10', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01LAKCGALK@9@
CONST	SEGMENT
??_C@_01LAKCGALK@9@ DB '9', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01KJLJFBPL@8@
CONST	SEGMENT
??_C@_01KJLJFBPL@8@ DB '8', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01COCBENDE@7@
CONST	SEGMENT
??_C@_01COCBENDE@7@ DB '7', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01DHDKHMHF@6@
CONST	SEGMENT
??_C@_01DHDKHMHF@6@ DB '6', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01BMBHCPLG@5@
CONST	SEGMENT
??_C@_01BMBHCPLG@5@ DB '5', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01FAMBOPH@4@
CONST	SEGMENT
??_C@_01FAMBOPH@4@ DB '4', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01EKENIIDA@3@
CONST	SEGMENT
??_C@_01EKENIIDA@3@ DB '3', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01FDFGLJHB@2@
CONST	SEGMENT
??_C@_01FDFGLJHB@2@ DB '2', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01HIHLOKLC@1@
CONST	SEGMENT
??_C@_01HIHLOKLC@1@ DB '1', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07FDJHENA@Desktop@
CONST	SEGMENT
??_C@_07FDJHENA@Desktop@ DB 'Desktop', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GGAFBDJJ@3DLight@
CONST	SEGMENT
??_C@_07GGAFBDJJ@3DLight@ DB '3DLight', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HKBKJBGF@HighlightText@
CONST	SEGMENT
??_C@_0O@HKBKJBGF@HighlightText@ DB 'HighlightText', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09EDNNHPMP@Highlight@
CONST	SEGMENT
??_C@_09EDNNHPMP@Highlight@ DB 'Highlight', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FHBMHCGO@BtnHighlight@
CONST	SEGMENT
??_C@_0N@FHBMHCGO@BtnHighlight@ DB 'BtnHighlight', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09CLGNEDNM@BtnShadow@
CONST	SEGMENT
??_C@_09CLGNEDNM@BtnShadow@ DB 'BtnShadow', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LGGJEDE@BtnText@
CONST	SEGMENT
??_C@_07LGGJEDE@BtnText@ DB 'BtnText', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07NNIOKIAA@BtnFace@
CONST	SEGMENT
??_C@_07NNIOKIAA@BtnFace@ DB 'BtnFace', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JMMNCIC@InactiveCaptionText@
CONST	SEGMENT
??_C@_0BE@JMMNCIC@InactiveCaptionText@ DB 'InactiveCaptionText', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HPOJFBPJ@InactiveCaption@
CONST	SEGMENT
??_C@_0BA@HPOJFBPJ@InactiveCaption@ DB 'InactiveCaption', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FJPFAALP@CaptionText@
CONST	SEGMENT
??_C@_0M@FJPFAALP@CaptionText@ DB 'CaptionText', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NDMFLOAB@ActiveCaption@
CONST	SEGMENT
??_C@_0O@NDMFLOAB@ActiveCaption@ DB 'ActiveCaption', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08GPLIMDPE@InfoText@
CONST	SEGMENT
??_C@_08GPLIMDPE@InfoText@ DB 'InfoText', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06BNOPAHL@InfoBk@
CONST	SEGMENT
??_C@_06BNOPAHL@InfoBk@ DB 'InfoBk', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JDAMLHCM@WindowText@
CONST	SEGMENT
??_C@_0L@JDAMLHCM@WindowText@ DB 'WindowText', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06BKKJGDHO@Window@
CONST	SEGMENT
??_C@_06BKKJGDHO@Window@ DB 'Window', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PLKILNHI@White@
CONST	SEGMENT
??_C@_05PLKILNHI@White@ DB 'White', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EHFPBLHC@Floral?5White@
CONST	SEGMENT
??_C@_0N@EHFPBLHC@Floral?5White@ DB 'Floral White', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05EOEDPHMI@Beige@
CONST	SEGMENT
??_C@_05EOEDPHMI@Beige@ DB 'Beige', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NNFCMDAK@Light?5Gray@
CONST	SEGMENT
??_C@_0L@NNFCMDAK@Light?5Gray@ DB 'Light Gray', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06BONGPKIK@Silver@
CONST	SEGMENT
??_C@_06BONGPKIK@Silver@ DB 'Silver', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DOIMHNKP@Gray?540?$CF@
CONST	SEGMENT
??_C@_08DOIMHNKP@Gray?540?$CF@ DB 'Gray 40%', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04KFNAIHAE@Gray@
CONST	SEGMENT
??_C@_04KFNAIHAE@Gray@ DB 'Gray', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05BPGNDIAE@Black@
CONST	SEGMENT
??_C@_05BPGNDIAE@Black@ DB 'Black', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PKFAGGFN@Light?5Cyan@
CONST	SEGMENT
??_C@_0L@PKFAGGFN@Light?5Cyan@ DB 'Light Cyan', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JDEEFDAL@Powder?5Blue@
CONST	SEGMENT
??_C@_0M@JDEEFDAL@Powder?5Blue@ DB 'Powder Blue', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04ICNCCCFD@Cyan@
CONST	SEGMENT
??_C@_04ICNCCCFD@Cyan@ DB 'Cyan', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FICMDKCH@Light?5Blue@
CONST	SEGMENT
??_C@_0L@FICMDKCH@Light?5Blue@ DB 'Light Blue', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DOEDFOCO@Medium?5Slate?5Blue@
CONST	SEGMENT
??_C@_0BC@DOEDFOCO@Medium?5Slate?5Blue@ DB 'Medium Slate Blue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BLFLAEMB@Dark?5Cyan@
CONST	SEGMENT
??_C@_09BLFLAEMB@Dark?5Cyan@ DB 'Dark Cyan', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LIIHMMAK@Sky?5Blue@
CONST	SEGMENT
??_C@_08LIIHMMAK@Sky?5Blue@ DB 'Sky Blue', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CJPMPBAM@Cornflower?5Blue@
CONST	SEGMENT
??_C@_0BA@CJPMPBAM@Cornflower?5Blue@ DB 'Cornflower Blue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HIKAJNOC@Light?5Sky?5Blue@
CONST	SEGMENT
??_C@_0P@HIKAJNOC@Light?5Sky?5Blue@ DB 'Light Sky Blue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DDKHOHCN@Medium?5Blue@
CONST	SEGMENT
??_C@_0M@DDKHOHCN@Medium?5Blue@ DB 'Medium Blue', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04CAKOHOCJ@Blue@
CONST	SEGMENT
??_C@_04CAKOHOCJ@Blue@ DB 'Blue', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06GCLALPIA@Violet@
CONST	SEGMENT
??_C@_06GCLALPIA@Violet@ DB 'Violet', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PDAFKIPB@Navy@
CONST	SEGMENT
??_C@_04PDAFKIPB@Navy@ DB 'Navy', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09LJCHFILL@Dark?5Blue@
CONST	SEGMENT
??_C@_09LJCHFILL@Dark?5Blue@ DB 'Dark Blue', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GIJBMEHB@Midnight?5Blue@
CONST	SEGMENT
??_C@_0O@GIJBMEHB@Midnight?5Blue@ DB 'Midnight Blue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KIPEHOND@Deep?5Violet@
CONST	SEGMENT
??_C@_0M@KIPEHOND@Deep?5Violet@ DB 'Deep Violet', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06KLMDOLNB@Purple@
CONST	SEGMENT
??_C@_06KLMDOLNB@Purple@ DB 'Purple', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GBIHCKIC@Deep?5Purple@
CONST	SEGMENT
??_C@_0M@GBIHCKIC@Deep?5Purple@ DB 'Deep Purple', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FEMLKCAP@Very?5Pale?5Green@
CONST	SEGMENT
??_C@_0BA@FEMLKCAP@Very?5Pale?5Green@ DB 'Very Pale Green', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IKHGMDBB@Aquamarine@
CONST	SEGMENT
??_C@_0L@IKHGMDBB@Aquamarine@ DB 'Aquamarine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BHNHNICC@Pale?5Green@
CONST	SEGMENT
??_C@_0L@BHNHNICC@Pale?5Green@ DB 'Pale Green', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ECNKKMBO@Spring?5Green@
CONST	SEGMENT
??_C@_0N@ECNKKMBO@Spring?5Green@ DB 'Spring Green', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04LKHFMCLC@Lime@
CONST	SEGMENT
??_C@_04LKHFMCLC@Lime@ DB 'Lime', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PPIFAICJ@Mint?5Green@
CONST	SEGMENT
??_C@_0L@PPIFAICJ@Mint?5Green@ DB 'Mint Green', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LMIPCNJB@Medium?5Spring?5Green@
CONST	SEGMENT
??_C@_0BE@LMIPCNJB@Medium?5Spring?5Green@ DB 'Medium Spring Green', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PKEKPHNP@Turquoise@
CONST	SEGMENT
??_C@_09PKEKPHNP@Turquoise@ DB 'Turquoise', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HIOLODGE@Teal@
CONST	SEGMENT
??_C@_04HIOLODGE@Teal@ DB 'Teal', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05OCCJEPCA@Olive@
CONST	SEGMENT
??_C@_05OCCJEPCA@Olive@ DB 'Olive', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09OBGCMFPG@Dark?5Teal@
CONST	SEGMENT
??_C@_09OBGCMFPG@Dark?5Teal@ DB 'Dark Teal', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05GGOIJPPE@Green@
CONST	SEGMENT
??_C@_05GGOIJPPE@Green@ DB 'Green', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GBJGFCHE@Medium?5Green@
CONST	SEGMENT
??_C@_0N@GBJGFCHE@Medium?5Green@ DB 'Medium Green', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HIHAOELK@Dark?5Green@
CONST	SEGMENT
??_C@_0L@HIHAOELK@Dark?5Green@ DB 'Dark Green', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ONOBOLHB@Pale?5Yellow@
CONST	SEGMENT
??_C@_0M@ONOBOLHB@Pale?5Yellow@ DB 'Pale Yellow', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FBOMNIJN@Desert?5Yellow@
CONST	SEGMENT
??_C@_0O@FBOMNIJN@Desert?5Yellow@ DB 'Desert Yellow', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06ICCAKDNH@Yellow@
CONST	SEGMENT
??_C@_06ICCAKDNH@Yellow@ DB 'Yellow', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PABHPHAJ@Gold@
CONST	SEGMENT
??_C@_04PABHPHAJ@Gold@ DB 'Gold', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FDLBMFNE@Light?5Orange@
CONST	SEGMENT
??_C@_0N@FDLBMFNE@Light?5Orange@ DB 'Light Orange', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HBEPKAHH@Light?5Salmon@
CONST	SEGMENT
??_C@_0N@HBEPKAHH@Light?5Salmon@ DB 'Light Salmon', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06LMIDBFFB@Orange@
CONST	SEGMENT
??_C@_06LMIDBFFB@Orange@ DB 'Orange', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CNPJOBLN@Dark?5Orange@
CONST	SEGMENT
??_C@_0M@CNPJOBLN@Dark?5Orange@ DB 'Dark Orange', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LIDOBFMF@Very?5Light?5Pink@
CONST	SEGMENT
??_C@_0BA@LIDOBFMF@Very?5Light?5Pink@ DB 'Very Light Pink', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PLCCGPOI@Light?5Pink@
CONST	SEGMENT
??_C@_0L@PLCCGPOI@Light?5Pink@ DB 'Light Pink', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04IDKACLOG@Pink@
CONST	SEGMENT
??_C@_04IDKACLOG@Pink@ DB 'Pink', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07LFEAGNHO@Magenta@
CONST	SEGMENT
??_C@_07LFEAGNHO@Magenta@ DB 'Magenta', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09FEGCKMHO@Deep?5Pink@
CONST	SEGMENT
??_C@_09FEGCKMHO@Deep?5Pink@ DB 'Deep Pink', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03PADCEAKC@Red@
CONST	SEGMENT
??_C@_03PADCEAKC@Red@ DB 'Red', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08HAEFGIKB@Dark?5Red@
CONST	SEGMENT
??_C@_08HAEFGIKB@Dark?5Red@ DB 'Dark Red', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DDHHKGIM@Light?5Maroon@
CONST	SEGMENT
??_C@_0N@DDHHKGIM@Light?5Maroon@ DB 'Light Maroon', 00H	; `string'
CONST	ENDS
_DATA	SEGMENT
?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A DD 0400080H ; CXColourPopup::m_crColors
	DD	FLAT:??_C@_0N@DDHHKGIM@Light?5Maroon@
	DD	0ffffffffH
	DD	08bH
	DD	FLAT:??_C@_08HAEFGIKB@Dark?5Red@
	DD	0ffffffffH
	DD	0ffH
	DD	FLAT:??_C@_03PADCEAKC@Red@
	DD	0ffffffffH
	DD	08000ffH
	DD	FLAT:??_C@_09FEGCKMHO@Deep?5Pink@
	DD	0ffffffffH
	DD	0ff00ffH
	DD	FLAT:??_C@_07LFEAGNHO@Magenta@
	DD	0ffffffffH
	DD	0c080ffH
	DD	FLAT:??_C@_04IDKACLOG@Pink@
	DD	0ffffffffH
	DD	0ff80ffH
	DD	FLAT:??_C@_0L@PLCCGPOI@Light?5Pink@
	DD	0ffffffffH
	DD	0e8d0ffH
	DD	FLAT:??_C@_0BA@LIDOBFMF@Very?5Light?5Pink@
	DD	0ffffffffH
	DD	08cffH
	DD	FLAT:??_C@_0M@CNPJOBLN@Dark?5Orange@
	DD	0ffffffffH
	DD	0a5ffH
	DD	FLAT:??_C@_06LMIDBFFB@Orange@
	DD	0ffffffffH
	DD	08080ffH
	DD	FLAT:??_C@_0N@HBEPKAHH@Light?5Salmon@
	DD	0ffffffffH
	DD	0a0e0ffH
	DD	FLAT:??_C@_0N@FDLBMFNE@Light?5Orange@
	DD	0ffffffffH
	DD	0d7ffH
	DD	FLAT:??_C@_04PABHPHAJ@Gold@
	DD	0ffffffffH
	DD	0ffffH
	DD	FLAT:??_C@_06ICCAKDNH@Yellow@
	DD	0ffffffffH
	DD	080ffffH
	DD	FLAT:??_C@_0O@FBOMNIJN@Desert?5Yellow@
	DD	0ffffffffH
	DD	0b8ffffH
	DD	FLAT:??_C@_0M@ONOBOLHB@Pale?5Yellow@
	DD	0ffffffffH
	DD	04000H
	DD	FLAT:??_C@_0L@HIHAOELK@Dark?5Green@
	DD	0ffffffffH
	DD	0404000H
	DD	FLAT:??_C@_0N@GBJGFCHE@Medium?5Green@
	DD	0ffffffffH
	DD	08000H
	DD	FLAT:??_C@_05GGOIJPPE@Green@
	DD	0ffffffffH
	DD	0408000H
	DD	FLAT:??_C@_09OBGCMFPG@Dark?5Teal@
	DD	0ffffffffH
	DD	08080H
	DD	FLAT:??_C@_05OCCJEPCA@Olive@
	DD	0ffffffffH
	DD	0808000H
	DD	FLAT:??_C@_04HIOLODGE@Teal@
	DD	0ffffffffH
	DD	0808040H
	DD	FLAT:??_C@_09PKEKPHNP@Turquoise@
	DD	0ffffffffH
	DD	040ff00H
	DD	FLAT:??_C@_0BE@LMIPCNJB@Medium?5Spring?5Green@
	DD	0ffffffffH
	DD	0ff80H
	DD	FLAT:??_C@_0L@PPIFAICJ@Mint?5Green@
	DD	0ffffffffH
	DD	0ff00H
	DD	FLAT:??_C@_04LKHFMCLC@Lime@
	DD	0ffffffffH
	DD	080ff00H
	DD	FLAT:??_C@_0N@ECNKKMBO@Spring?5Green@
	DD	0ffffffffH
	DD	098fb98H
	DD	FLAT:??_C@_0L@BHNHNICC@Pale?5Green@
	DD	0ffffffffH
	DD	0d4ff7fH
	DD	FLAT:??_C@_0L@IKHGMDBB@Aquamarine@
	DD	0ffffffffH
	DD	0c0dcc0H
	DD	FLAT:??_C@_0BA@FEMLKCAP@Very?5Pale?5Green@
	DD	0ffffffffH
	DD	0400040H
	DD	FLAT:??_C@_0M@GBIHCKIC@Deep?5Purple@
	DD	0ffffffffH
	DD	0800080H
	DD	FLAT:??_C@_06KLMDOLNB@Purple@
	DD	0ffffffffH
	DD	0800040H
	DD	FLAT:??_C@_0M@KIPEHOND@Deep?5Violet@
	DD	0ffffffffH
	DD	0400000H
	DD	FLAT:??_C@_0O@GIJBMEHB@Midnight?5Blue@
	DD	0ffffffffH
	DD	0a00000H
	DD	FLAT:??_C@_09LJCHFILL@Dark?5Blue@
	DD	0ffffffffH
	DD	0800000H
	DD	FLAT:??_C@_04PDAFKIPB@Navy@
	DD	0ffffffffH
	DD	0ff0080H
	DD	FLAT:??_C@_06GCLALPIA@Violet@
	DD	0ffffffffH
	DD	0ff0000H
	DD	FLAT:??_C@_04CAKOHOCJ@Blue@
	DD	0ffffffffH
	DD	0804000H
	DD	FLAT:??_C@_0M@DDKHOHCN@Medium?5Blue@
	DD	0ffffffffH
	DD	0ff8000H
	DD	FLAT:??_C@_0P@HIKAJNOC@Light?5Sky?5Blue@
	DD	0ffffffffH
	DD	0ed9564H
	DD	FLAT:??_C@_0BA@CJPMPBAM@Cornflower?5Blue@
	DD	0ffffffffH
	DD	0c08080H
	DD	FLAT:??_C@_08LIIHMMAK@Sky?5Blue@
	DD	0ffffffffH
	DD	0c08000H
	DD	FLAT:??_C@_09BLFLAEMB@Dark?5Cyan@
	DD	0ffffffffH
	DD	0ff8080H
	DD	FLAT:??_C@_0BC@DOEDFOCO@Medium?5Slate?5Blue@
	DD	0ffffffffH
	DD	0ffff80H
	DD	FLAT:??_C@_0L@FICMDKCH@Light?5Blue@
	DD	0ffffffffH
	DD	0ffff00H
	DD	FLAT:??_C@_04ICNCCCFD@Cyan@
	DD	0ffffffffH
	DD	0e6e0b0H
	DD	FLAT:??_C@_0M@JDEEFDAL@Powder?5Blue@
	DD	0ffffffffH
	DD	0ffffe0H
	DD	FLAT:??_C@_0L@PKFAGGFN@Light?5Cyan@
	DD	0ffffffffH
	DD	00H
	DD	FLAT:??_C@_05BPGNDIAE@Black@
	DD	0ffffffffH
	DD	0808080H
	DD	FLAT:??_C@_04KFNAIHAE@Gray@
	DD	0ffffffffH
	DD	0989898H
	DD	FLAT:??_C@_08DOIMHNKP@Gray?540?$CF@
	DD	0ffffffffH
	DD	0c0c0c0H
	DD	FLAT:??_C@_06BONGPKIK@Silver@
	DD	0ffffffffH
	DD	0d3d3d3H
	DD	FLAT:??_C@_0L@NNFCMDAK@Light?5Gray@
	DD	0ffffffffH
	DD	0dcf5f5H
	DD	FLAT:??_C@_05EOEDPHMI@Beige@
	DD	0ffffffffH
	DD	0f0fbffH
	DD	FLAT:??_C@_0N@EHFPBLHC@Floral?5White@
	DD	0ffffffffH
	DD	0ffffffH
	DD	FLAT:??_C@_05PLKILNHI@White@
	DD	0ffffffffH
	DD	00H
	DD	FLAT:??_C@_06BKKJGDHO@Window@
	DD	05H
	DD	00H
	DD	FLAT:??_C@_0L@JDAMLHCM@WindowText@
	DD	08H
	DD	00H
	DD	FLAT:??_C@_06BNOPAHL@InfoBk@
	DD	018H
	DD	00H
	DD	FLAT:??_C@_08GPLIMDPE@InfoText@
	DD	017H
	DD	00H
	DD	FLAT:??_C@_0O@NDMFLOAB@ActiveCaption@
	DD	02H
	DD	00H
	DD	FLAT:??_C@_0M@FJPFAALP@CaptionText@
	DD	09H
	DD	00H
	DD	FLAT:??_C@_0BA@HPOJFBPJ@InactiveCaption@
	DD	03H
	DD	00H
	DD	FLAT:??_C@_0BE@JMMNCIC@InactiveCaptionText@
	DD	013H
	DD	00H
	DD	FLAT:??_C@_07NNIOKIAA@BtnFace@
	DD	0fH
	DD	00H
	DD	FLAT:??_C@_07LGGJEDE@BtnText@
	DD	012H
	DD	00H
	DD	FLAT:??_C@_09CLGNEDNM@BtnShadow@
	DD	010H
	DD	00H
	DD	FLAT:??_C@_0N@FHBMHCGO@BtnHighlight@
	DD	014H
	DD	00H
	DD	FLAT:??_C@_09EDNNHPMP@Highlight@
	DD	0dH
	DD	00H
	DD	FLAT:??_C@_0O@HKBKJBGF@HighlightText@
	DD	0eH
	DD	00H
	DD	FLAT:??_C@_07GGAFBDJJ@3DLight@
	DD	016H
	DD	00H
	DD	FLAT:??_C@_07FDJHENA@Desktop@
	DD	01H
	DD	0c0c0c0H
	DD	FLAT:??_C@_01HIHLOKLC@1@
	DD	0ffffffffH
	DD	0c0c0c0H
	DD	FLAT:??_C@_01FDFGLJHB@2@
	DD	0ffffffffH
	DD	0c0c0c0H
	DD	FLAT:??_C@_01EKENIIDA@3@
	DD	0ffffffffH
	DD	0c0c0c0H
	DD	FLAT:??_C@_01FAMBOPH@4@
	DD	0ffffffffH
	DD	0c0c0c0H
	DD	FLAT:??_C@_01BMBHCPLG@5@
	DD	0ffffffffH
	DD	0c0c0c0H
	DD	FLAT:??_C@_01DHDKHMHF@6@
	DD	0ffffffffH
	DD	0c0c0c0H
	DD	FLAT:??_C@_01COCBENDE@7@
	DD	0ffffffffH
	DD	0c0c0c0H
	DD	FLAT:??_C@_01KJLJFBPL@8@
	DD	0ffffffffH
	DD	0c0c0c0H
	DD	FLAT:??_C@_01LAKCGALK@9@
	DD	0ffffffffH
	DD	0c0c0c0H
	DD	FLAT:??_C@_02PKFBJPLJ@10@
	DD	0ffffffffH
	DD	0c0c0c0H
	DD	FLAT:??_C@_02ODEKKOPI@11@
	DD	0ffffffffH
	DD	0c0c0c0H
	DD	FLAT:??_C@_02MIGHPNDL@12@
	DD	0ffffffffH
	DD	0c0c0c0H
	DD	FLAT:??_C@_02NBHMMMHK@13@
	DD	0ffffffffH
	DD	0c0c0c0H
	DD	FLAT:??_C@_02JODNFKLN@14@
	DD	0ffffffffH
	DD	0c0c0c0H
	DD	FLAT:??_C@_02IHCGGLPM@15@
	DD	0ffffffffH
	DD	0c0c0c0H
	DD	FLAT:??_C@_02KMALDIDP@16@
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:??_C@_0P@KADIGIME@Custom?5color?51@
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:??_C@_0P@ILBFDLAH@Custom?5color?52@
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:??_C@_0P@JCAOAKEG@Custom?5color?53@
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:??_C@_0P@NNEPJMIB@Custom?5color?54@
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:??_C@_0P@MEFEKNMA@Custom?5color?55@
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:??_C@_0P@OPHJPOAD@Custom?5color?56@
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:??_C@_0P@PGGCMPEC@Custom?5color?57@
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:??_C@_0P@HBPKNDIN@Custom?5color?58@
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:??_C@_0P@GIOBOCMM@Custom?5color?59@
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:??_C@_0BA@EDOPAIDC@Custom?5color?510@
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:??_C@_0BA@FKPEDJHD@Custom?5color?511@
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:??_C@_0BA@HBNJGKLA@Custom?5color?512@
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:??_C@_0BA@GIMCFLPB@Custom?5color?513@
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:??_C@_0BA@CHIDMNDG@Custom?5color?514@
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:??_C@_0BA@DOJIPMHH@Custom?5color?515@
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:??_C@_0BA@BFLFKPLE@Custom?5color?516@
	DD	0ffffffffH
_DATA	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1CObject@@UAE@XZ				; CObject::~CObject
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	??1CGdiObject@@UAE@XZ				; CGdiObject::~CGdiObject
PUBLIC	??_GCGdiObject@@UAEPAXI@Z			; CGdiObject::`scalar deleting destructor'
PUBLIC	??1CPen@@UAE@XZ					; CPen::~CPen
PUBLIC	??_GCPen@@UAEPAXI@Z				; CPen::`scalar deleting destructor'
PUBLIC	??1CBrush@@UAE@XZ				; CBrush::~CBrush
PUBLIC	??_GCBrush@@UAEPAXI@Z				; CBrush::`scalar deleting destructor'
PUBLIC	??1CFont@@UAE@XZ				; CFont::~CFont
PUBLIC	??_GCFont@@UAEPAXI@Z				; CFont::`scalar deleting destructor'
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
PUBLIC	?Create@CDialog@@UAEHIPAVCWnd@@@Z		; CDialog::Create
PUBLIC	??1CCommonDialog@@UAE@XZ			; CCommonDialog::~CCommonDialog
PUBLIC	??_GCCommonDialog@@UAEPAXI@Z			; CCommonDialog::`scalar deleting destructor'
PUBLIC	??1CColorDialog@@UAE@XZ				; CColorDialog::~CColorDialog
PUBLIC	??0CXColourPopup@@QAE@XZ			; CXColourPopup::CXColourPopup
PUBLIC	??0CXColourPopup@@QAE@PAVCWnd@@VCPoint@@KPAKHHPBD@Z ; CXColourPopup::CXColourPopup
PUBLIC	??1CXColourPopup@@UAE@XZ			; CXColourPopup::~CXColourPopup
PUBLIC	?Create@CXColourPopup@@QAEHVCPoint@@KPAVCWnd@@PBD@Z ; CXColourPopup::Create
PUBLIC	?PreTranslateMessage@CXColourPopup@@UAEHPAUtagMSG@@@Z ; CXColourPopup::PreTranslateMessage
PUBLIC	?Init@CXColourPopup@@IAEXXZ			; CXColourPopup::Init
PUBLIC	?GetCellRect@CXColourPopup@@IAEHHHABQAUtagRECT@@@Z ; CXColourPopup::GetCellRect
PUBLIC	?SetWindowSize@CXColourPopup@@IAEXXZ		; CXColourPopup::SetWindowSize
PUBLIC	?CreateToolTips@CXColourPopup@@IAEXXZ		; CXColourPopup::CreateToolTips
PUBLIC	?ChangeSelection@CXColourPopup@@IAEXHH@Z	; CXColourPopup::ChangeSelection
PUBLIC	?EndSelection@CXColourPopup@@IAEXH@Z		; CXColourPopup::EndSelection
PUBLIC	?DrawCell@CXColourPopup@@IAEXPAVCDC@@HH@Z	; CXColourPopup::DrawCell
PUBLIC	?OnNcDestroy@CXColourPopup@@IAEXXZ		; CXColourPopup::OnNcDestroy
PUBLIC	?OnLButtonUp@CXColourPopup@@IAEXIVCPoint@@@Z	; CXColourPopup::OnLButtonUp
PUBLIC	?OnPaint@CXColourPopup@@IAEXXZ			; CXColourPopup::OnPaint
PUBLIC	?OnMouseMove@CXColourPopup@@IAEXIVCPoint@@@Z	; CXColourPopup::OnMouseMove
PUBLIC	?OnKeyDown@CXColourPopup@@IAEXIII@Z		; CXColourPopup::OnKeyDown
PUBLIC	?GetThisMessageMap@CXColourPopup@@KGPBUAFX_MSGMAP@@XZ ; CXColourPopup::GetThisMessageMap
PUBLIC	?GetMessageMap@CXColourPopup@@MBEPBUAFX_MSGMAP@@XZ ; CXColourPopup::GetMessageMap
PUBLIC	??_GCXColourPopup@@UAEPAXI@Z			; CXColourPopup::`scalar deleting destructor'
PUBLIC	??_R0PAVCException@@@8				; CException * `RTTI Type Descriptor'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_7CGdiObject@@6B@				; CGdiObject::`vftable'
PUBLIC	??_7CPen@@6B@					; CPen::`vftable'
PUBLIC	??_7CBrush@@6B@					; CBrush::`vftable'
PUBLIC	??_7CFont@@6B@					; CFont::`vftable'
PUBLIC	??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@ ; `string'
PUBLIC	??_C@_0BB@HBOOMJBF@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ?6?$CFTs@ ; `string'
PUBLIC	??_C@_0N@OMEMOKLE@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ@ ; `string'
PUBLIC	??_7CCommonDialog@@6B@				; CCommonDialog::`vftable'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CGdiObject@@6B@				; CGdiObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGdiObject@@@8				; CGdiObject `RTTI Type Descriptor'
PUBLIC	??_R3CGdiObject@@8				; CGdiObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGdiObject@@8				; CGdiObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGdiObject@@8			; CGdiObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CPen@@6B@					; CPen::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCPen@@@8				; CPen `RTTI Type Descriptor'
PUBLIC	??_R3CPen@@8					; CPen::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CPen@@8					; CPen::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CPen@@8				; CPen::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CBrush@@6B@				; CBrush::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBrush@@@8				; CBrush `RTTI Type Descriptor'
PUBLIC	??_R3CBrush@@8					; CBrush::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBrush@@8					; CBrush::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBrush@@8				; CBrush::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CFont@@6B@					; CFont::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCFont@@@8				; CFont `RTTI Type Descriptor'
PUBLIC	??_R3CFont@@8					; CFont::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CFont@@8					; CFont::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CFont@@8				; CFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R3CWnd@@8					; CWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWnd@@8					; CWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R3CCmdTarget@@8				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCmdTarget@@8				; CCmdTarget::`RTTI Base Class Array'
PUBLIC	??_R4CCommonDialog@@6B@				; CCommonDialog::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCommonDialog@@@8			; CCommonDialog `RTTI Type Descriptor'
PUBLIC	??_R3CCommonDialog@@8				; CCommonDialog::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCommonDialog@@8				; CCommonDialog::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCommonDialog@@8			; CCommonDialog::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CDialog@@8			; CDialog::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCDialog@@@8				; CDialog `RTTI Type Descriptor'
PUBLIC	??_R3CDialog@@8					; CDialog::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDialog@@8					; CDialog::`RTTI Base Class Array'
PUBLIC	??_7CXColourPopup@@6B@				; CXColourPopup::`vftable'
PUBLIC	??_C@_09IANHLED@Custom?4?4?4@			; `string'
PUBLIC	??_C@_0BH@JABHPIAH@Selects?5a?5custom?5color@	; `string'
PUBLIC	??_R4CXColourPopup@@6B@				; CXColourPopup::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCXColourPopup@@@8			; CXColourPopup `RTTI Type Descriptor'
PUBLIC	??_R3CXColourPopup@@8				; CXColourPopup::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CXColourPopup@@8				; CXColourPopup::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CXColourPopup@@8			; CXColourPopup::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	___std_terminate:PROC
EXTRN	__imp__CreateFontIndirectA@4:PROC
EXTRN	__imp__CreatePen@12:PROC
EXTRN	__imp__GetStockObject@4:PROC
EXTRN	__imp__GetTextExtentPoint32A@16:PROC
EXTRN	__imp__Rectangle@20:PROC
EXTRN	__imp__DrawEdge@16:PROC
EXTRN	__imp__GetMessagePos@0:PROC
EXTRN	__imp__SendMessageA@16:PROC
EXTRN	__imp__SetCapture@4:PROC
EXTRN	__imp__ReleaseCapture@0:PROC
EXTRN	__imp__EnableWindow@8:PROC
EXTRN	__imp__GetSystemMetrics@4:PROC
EXTRN	__imp__InvalidateRect@12:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__GetWindowRect@8:PROC
EXTRN	__imp__GetSysColor@4:PROC
EXTRN	__imp__SetRect@20:PROC
EXTRN	__imp__InflateRect@12:PROC
EXTRN	__imp__PtInRect@12:PROC
EXTRN	__imp__SystemParametersInfoA@16:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z:PROC
EXTRN	__imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ:PROC
EXTRN	?GetRuntimeClass@CGdiObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CGdiObject::GetRuntimeClass
EXTRN	?Attach@CGdiObject@@QAEHPAX@Z:PROC		; CGdiObject::Attach
EXTRN	?DeleteObject@CGdiObject@@QAEHXZ:PROC		; CGdiObject::DeleteObject
EXTRN	??_ECGdiObject@@UAEPAXI@Z:PROC			; CGdiObject::`vector deleting destructor'
EXTRN	?GetRuntimeClass@CPen@@UBEPAUCRuntimeClass@@XZ:PROC ; CPen::GetRuntimeClass
EXTRN	??_ECPen@@UAEPAXI@Z:PROC			; CPen::`vector deleting destructor'
EXTRN	?GetRuntimeClass@CBrush@@UBEPAUCRuntimeClass@@XZ:PROC ; CBrush::GetRuntimeClass
EXTRN	??0CBrush@@QAE@K@Z:PROC				; CBrush::CBrush
EXTRN	??_ECBrush@@UAEPAXI@Z:PROC			; CBrush::`vector deleting destructor'
EXTRN	?GetRuntimeClass@CFont@@UBEPAUCRuntimeClass@@XZ:PROC ; CFont::GetRuntimeClass
EXTRN	??_ECFont@@UAEPAXI@Z:PROC			; CFont::`vector deleting destructor'
EXTRN	?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z:PROC	; CDC::SelectObject
EXTRN	?SelectObject@CDC@@QAEPAVCBrush@@PAV2@@Z:PROC	; CDC::SelectObject
EXTRN	?SelectObject@CDC@@UAEPAVCFont@@PAV2@@Z:PROC	; CDC::SelectObject
EXTRN	?FillSolidRect@CDC@@QAEXPBUtagRECT@@K@Z:PROC	; CDC::FillSolidRect
EXTRN	??0CPaintDC@@QAE@PAVCWnd@@@Z:PROC		; CPaintDC::CPaintDC
EXTRN	??1CPaintDC@@UAE@XZ:PROC			; CPaintDC::~CPaintDC
EXTRN	??0CClientDC@@QAE@PAVCWnd@@@Z:PROC		; CClientDC::CClientDC
EXTRN	??1CClientDC@@UAE@XZ:PROC			; CClientDC::~CClientDC
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:PROC ; CCmdTarget::OnCmdMsg
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:PROC	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:PROC ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:PROC	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:PROC ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:PROC ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:PROC ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:PROC ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:PROC ; CCmdTarget::GetConnectionMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:PROC ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:PROC	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:PROC ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:PROC ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:PROC ; CCmdTarget::GetConnectionHook
EXTRN	?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ:PROC ; CWnd::GetRuntimeClass
EXTRN	??0CWnd@@QAE@XZ:PROC				; CWnd::CWnd
EXTRN	?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z:PROC	; CWnd::FromHandle
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:PROC		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:PROC ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:PROC ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:PROC ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:PROC		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:PROC ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:PROC	; CWnd::CalcWindowRect
EXTRN	?GetMenu@CWnd@@UBEPAVCMenu@@XZ:PROC		; CWnd::GetMenu
EXTRN	?SetMenu@CWnd@@UAEHPAVCMenu@@@Z:PROC		; CWnd::SetMenu
EXTRN	?MoveWindow@CWnd@@QAEXHHHHH@Z:PROC		; CWnd::MoveWindow
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:PROC ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:PROC ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:PROC		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:PROC		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:PROC		; CWnd::EndModalLoop
EXTRN	?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z:PROC ; CWnd::OnDrawIconicThumbnailOrLivePreview
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:PROC ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:PROC			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:PROC ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:PROC		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:PROC ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDescription
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:PROC ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDefaultAction
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:PROC	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:PROC ; CWnd::accLocation
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:PROC	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:PROC ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:PROC ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:PROC	; CWnd::CreateAccessibleProxy
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:PROC			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:PROC		; CWnd::OnNotify
EXTRN	?OnNcDestroy@CWnd@@IAEXXZ:PROC			; CWnd::OnNcDestroy
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:PROC ; CWnd::GetSuperWndProcAddr
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:PROC ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:PROC ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:PROC		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnWndMsg
EXTRN	?Default@CWnd@@IAEJXZ:PROC			; CWnd::Default
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:PROC		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:PROC		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnChildNotify
EXTRN	?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInputs
EXTRN	?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInput
EXTRN	?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z:PROC	; CWnd::GetGestureStatus
EXTRN	?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z:PROC	; CWnd::OnGestureZoom
EXTRN	?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z:PROC	; CWnd::OnGesturePan
EXTRN	?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z:PROC	; CWnd::OnGestureRotate
EXTRN	?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z:PROC ; CWnd::OnGestureTwoFingerTap
EXTRN	?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z:PROC ; CWnd::OnGesturePressAndTap
EXTRN	?ResizeDynamicLayout@CWnd@@MAEXXZ:PROC		; CWnd::ResizeDynamicLayout
EXTRN	??1CWnd@@UAE@XZ:PROC				; CWnd::~CWnd
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:PROC		; CWnd::CheckAutoCenter
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:PROC			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:PROC		; CWnd::OnFinalRelease
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:PROC ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:PROC ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:PROC ; CWnd::SetOccDialogInfo
EXTRN	?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ:PROC ; CWnd::GetOccDialogInfo
EXTRN	?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ:PROC ; CWnd::GetThisMessageMap
EXTRN	?AfxRegisterWndClass@@YGPBDIPAUHICON__@@PAUHBRUSH__@@0@Z:PROC ; AfxRegisterWndClass
EXTRN	?Create@CDialog@@UAEHPBDPAVCWnd@@@Z:PROC	; CDialog::Create
EXTRN	?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z:PROC ; CDialog::CreateIndirect
EXTRN	?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z:PROC ; CDialog::CreateIndirect
EXTRN	?DoModal@CDialog@@UAEHXZ:PROC			; CDialog::DoModal
EXTRN	?OnInitDialog@CDialog@@UAEHXZ:PROC		; CDialog::OnInitDialog
EXTRN	?OnSetFont@CDialog@@UAEXPAVCFont@@@Z:PROC	; CDialog::OnSetFont
EXTRN	??1CDialog@@UAE@XZ:PROC				; CDialog::~CDialog
EXTRN	?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z:PROC ; CDialog::PreTranslateMessage
EXTRN	?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:PROC ; CDialog::OnCmdMsg
EXTRN	?CheckAutoCenter@CDialog@@UAEHXZ:PROC		; CDialog::CheckAutoCenter
EXTRN	?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:PROC ; CDialog::SetOccDialogInfo
EXTRN	?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ:PROC ; CDialog::GetOccDialogInfo
EXTRN	?PreInitDialog@CDialog@@MAEXXZ:PROC		; CDialog::PreInitDialog
EXTRN	?AfxMessageBox@@YGHPBDII@Z:PROC			; AfxMessageBox
EXTRN	?GetRuntimeClass@CCommonDialog@@UBEPAUCRuntimeClass@@XZ:PROC ; CCommonDialog::GetRuntimeClass
EXTRN	?OnOK@CCommonDialog@@MAEXXZ:PROC		; CCommonDialog::OnOK
EXTRN	?OnCancel@CCommonDialog@@MAEXXZ:PROC		; CCommonDialog::OnCancel
EXTRN	?GetMessageMap@CCommonDialog@@MBEPBUAFX_MSGMAP@@XZ:PROC ; CCommonDialog::GetMessageMap
EXTRN	??_ECCommonDialog@@UAEPAXI@Z:PROC		; CCommonDialog::`vector deleting destructor'
EXTRN	??0CColorDialog@@QAE@KKPAVCWnd@@@Z:PROC		; CColorDialog::CColorDialog
EXTRN	?DoModal@CColorDialog@@UAEHXZ:PROC		; CColorDialog::DoModal
EXTRN	??0CToolTipCtrl@@QAE@XZ:PROC			; CToolTipCtrl::CToolTipCtrl
EXTRN	?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z:PROC ; CToolTipCtrl::AddTool
EXTRN	??1CToolTipCtrl@@UAE@XZ:PROC			; CToolTipCtrl::~CToolTipCtrl
EXTRN	??_ECXColourPopup@@UAEPAXI@Z:PROC		; CXColourPopup::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@CXColourPopup@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CXColourPopup@@8 DD FLAT:??_R0?AVCXColourPopup@@@8 ; CXColourPopup::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CXColourPopup@@8
rdata$r	ENDS
;	COMDAT ??_R2CXColourPopup@@8
rdata$r	SEGMENT
??_R2CXColourPopup@@8 DD FLAT:??_R1A@?0A@EA@CXColourPopup@@8 ; CXColourPopup::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CXColourPopup@@8
rdata$r	SEGMENT
??_R3CXColourPopup@@8 DD 00H				; CXColourPopup::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CXColourPopup@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCXColourPopup@@@8
data$rs	SEGMENT
??_R0?AVCXColourPopup@@@8 DD FLAT:??_7type_info@@6B@	; CXColourPopup `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCXColourPopup@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CXColourPopup@@6B@
rdata$r	SEGMENT
??_R4CXColourPopup@@6B@ DD 00H				; CXColourPopup::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCXColourPopup@@@8
	DD	FLAT:??_R3CXColourPopup@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BH@JABHPIAH@Selects?5a?5custom?5color@
CONST	SEGMENT
??_C@_0BH@JABHPIAH@Selects?5a?5custom?5color@ DB 'Selects a custom color', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09IANHLED@Custom?4?4?4@
CONST	SEGMENT
??_C@_09IANHLED@Custom?4?4?4@ DB 'Custom...', 00H	; `string'
CONST	ENDS
;	COMDAT ?messageMap@?1??GetThisMessageMap@CXColourPopup@@KGPBUAFX_MSGMAP@@XZ@4U3@B
CONST	SEGMENT
?messageMap@?1??GetThisMessageMap@CXColourPopup@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ ; `CXColourPopup::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CXColourPopup@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
;	COMDAT ?_messageEntries@?1??GetThisMessageMap@CXColourPopup@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@?1??GetThisMessageMap@CXColourPopup@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 082H ; `CXColourPopup::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	013H
	DD	FLAT:?OnNcDestroy@CXColourPopup@@IAEXXZ
	DD	0202H
	DD	00H
	DD	00H
	DD	00H
	DD	036H
	DD	FLAT:?OnLButtonUp@CXColourPopup@@IAEXIVCPoint@@@Z
	DD	0fH
	DD	00H
	DD	00H
	DD	00H
	DD	013H
	DD	FLAT:?OnPaint@CXColourPopup@@IAEXXZ
	DD	0200H
	DD	00H
	DD	00H
	DD	00H
	DD	036H
	DD	FLAT:?OnMouseMove@CXColourPopup@@IAEXIVCPoint@@@Z
	DD	0100H
	DD	00H
	DD	00H
	DD	00H
	DD	019H
	DD	FLAT:?OnKeyDown@CXColourPopup@@IAEXIII@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_7CXColourPopup@@6B@
CONST	SEGMENT
??_7CXColourPopup@@6B@ DD FLAT:??_R4CXColourPopup@@6B@	; CXColourPopup::`vftable'
	DD	FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECXColourPopup@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CXColourPopup@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CXColourPopup@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
CONST	ENDS
;	COMDAT ??_R2CDialog@@8
rdata$r	SEGMENT
??_R2CDialog@@8 DD FLAT:??_R1A@?0A@EA@CDialog@@8	; CDialog::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDialog@@8
rdata$r	SEGMENT
??_R3CDialog@@8 DD 00H					; CDialog::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CDialog@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDialog@@@8
data$rs	SEGMENT
??_R0?AVCDialog@@@8 DD FLAT:??_7type_info@@6B@		; CDialog `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDialog@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CDialog@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDialog@@8 DD FLAT:??_R0?AVCDialog@@@8	; CDialog::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDialog@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCommonDialog@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCommonDialog@@8 DD FLAT:??_R0?AVCCommonDialog@@@8 ; CCommonDialog::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCommonDialog@@8
rdata$r	ENDS
;	COMDAT ??_R2CCommonDialog@@8
rdata$r	SEGMENT
??_R2CCommonDialog@@8 DD FLAT:??_R1A@?0A@EA@CCommonDialog@@8 ; CCommonDialog::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CCommonDialog@@8
rdata$r	SEGMENT
??_R3CCommonDialog@@8 DD 00H				; CCommonDialog::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CCommonDialog@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCommonDialog@@@8
data$rs	SEGMENT
??_R0?AVCCommonDialog@@@8 DD FLAT:??_7type_info@@6B@	; CCommonDialog `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCommonDialog@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CCommonDialog@@6B@
rdata$r	SEGMENT
??_R4CCommonDialog@@6B@ DD 00H				; CCommonDialog::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCommonDialog@@@8
	DD	FLAT:??_R3CCommonDialog@@8
rdata$r	ENDS
;	COMDAT ??_R2CCmdTarget@@8
rdata$r	SEGMENT
??_R2CCmdTarget@@8 DD FLAT:??_R1A@?0A@EA@CCmdTarget@@8	; CCmdTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CCmdTarget@@8
rdata$r	SEGMENT
??_R3CCmdTarget@@8 DD 00H				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
data$rs	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R2CWnd@@8
rdata$r	SEGMENT
??_R2CWnd@@8 DD	FLAT:??_R1A@?0A@EA@CWnd@@8		; CWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWnd@@8
rdata$r	SEGMENT
??_R3CWnd@@8 DD	00H					; CWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
data$rs	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CFont@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CFont@@8 DD FLAT:??_R0?AVCFont@@@8	; CFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CFont@@8
rdata$r	ENDS
;	COMDAT ??_R2CFont@@8
rdata$r	SEGMENT
??_R2CFont@@8 DD FLAT:??_R1A@?0A@EA@CFont@@8		; CFont::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGdiObject@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CFont@@8
rdata$r	SEGMENT
??_R3CFont@@8 DD 00H					; CFont::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CFont@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCFont@@@8
data$rs	SEGMENT
??_R0?AVCFont@@@8 DD FLAT:??_7type_info@@6B@		; CFont `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCFont@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CFont@@6B@
rdata$r	SEGMENT
??_R4CFont@@6B@ DD 00H					; CFont::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCFont@@@8
	DD	FLAT:??_R3CFont@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBrush@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBrush@@8 DD FLAT:??_R0?AVCBrush@@@8	; CBrush::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBrush@@8
rdata$r	ENDS
;	COMDAT ??_R2CBrush@@8
rdata$r	SEGMENT
??_R2CBrush@@8 DD FLAT:??_R1A@?0A@EA@CBrush@@8		; CBrush::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGdiObject@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CBrush@@8
rdata$r	SEGMENT
??_R3CBrush@@8 DD 00H					; CBrush::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CBrush@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBrush@@@8
data$rs	SEGMENT
??_R0?AVCBrush@@@8 DD FLAT:??_7type_info@@6B@		; CBrush `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBrush@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CBrush@@6B@
rdata$r	SEGMENT
??_R4CBrush@@6B@ DD 00H					; CBrush::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBrush@@@8
	DD	FLAT:??_R3CBrush@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CPen@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CPen@@8 DD FLAT:??_R0?AVCPen@@@8		; CPen::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CPen@@8
rdata$r	ENDS
;	COMDAT ??_R2CPen@@8
rdata$r	SEGMENT
??_R2CPen@@8 DD	FLAT:??_R1A@?0A@EA@CPen@@8		; CPen::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGdiObject@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CPen@@8
rdata$r	SEGMENT
??_R3CPen@@8 DD	00H					; CPen::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CPen@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCPen@@@8
data$rs	SEGMENT
??_R0?AVCPen@@@8 DD FLAT:??_7type_info@@6B@		; CPen `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCPen@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CPen@@6B@
rdata$r	SEGMENT
??_R4CPen@@6B@ DD 00H					; CPen::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCPen@@@8
	DD	FLAT:??_R3CPen@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGdiObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGdiObject@@8 DD FLAT:??_R0?AVCGdiObject@@@8 ; CGdiObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGdiObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CGdiObject@@8
rdata$r	SEGMENT
??_R2CGdiObject@@8 DD FLAT:??_R1A@?0A@EA@CGdiObject@@8	; CGdiObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CGdiObject@@8
rdata$r	SEGMENT
??_R3CGdiObject@@8 DD 00H				; CGdiObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGdiObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGdiObject@@@8
data$rs	SEGMENT
??_R0?AVCGdiObject@@@8 DD FLAT:??_7type_info@@6B@	; CGdiObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGdiObject@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CGdiObject@@6B@
rdata$r	SEGMENT
??_R4CGdiObject@@6B@ DD 00H				; CGdiObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGdiObject@@@8
	DD	FLAT:??_R3CGdiObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$rs	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$rs	ENDS
;	COMDAT ??_7CCommonDialog@@6B@
CONST	SEGMENT
??_7CCommonDialog@@6B@ DD FLAT:??_R4CCommonDialog@@6B@	; CCommonDialog::`vftable'
	DD	FLAT:?GetRuntimeClass@CCommonDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECCommonDialog@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CCommonDialog@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDialog@@UAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CCommonDialog@@MAEXXZ
	DD	FLAT:?OnCancel@CCommonDialog@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
CONST	ENDS
;	COMDAT ??_C@_0N@OMEMOKLE@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ@
CONST	SEGMENT
??_C@_0N@OMEMOKLE@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ@ DB '%Ts (%Ts:%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HBOOMJBF@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ?6?$CFTs@
CONST	SEGMENT
??_C@_0BB@HBOOMJBF@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ?6?$CFTs@ DB '%Ts (%Ts:%d'
	DB	')', 0aH, '%Ts', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@
CONST	SEGMENT
??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@ DB 'Exception throw'
	DB	'n in destructor', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.29.30133\atlmfc\include\afxwin1.inl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CFont@@6B@
CONST	SEGMENT
??_7CFont@@6B@ DD FLAT:??_R4CFont@@6B@			; CFont::`vftable'
	DD	FLAT:?GetRuntimeClass@CFont@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECFont@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CBrush@@6B@
CONST	SEGMENT
??_7CBrush@@6B@ DD FLAT:??_R4CBrush@@6B@		; CBrush::`vftable'
	DD	FLAT:?GetRuntimeClass@CBrush@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECBrush@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CPen@@6B@
CONST	SEGMENT
??_7CPen@@6B@ DD FLAT:??_R4CPen@@6B@			; CPen::`vftable'
	DD	FLAT:?GetRuntimeClass@CPen@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECPen@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT
??_7CGdiObject@@6B@ DD FLAT:??_R4CGdiObject@@6B@	; CGdiObject::`vftable'
	DD	FLAT:?GetRuntimeClass@CGdiObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECGdiObject@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_R0PAVCException@@@8
data$r	SEGMENT
??_R0PAVCException@@@8 DD FLAT:??_7type_info@@6B@	; CException * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAVCException@@', 00H
data$r	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GCXColourPopup@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_GCXColourPopup@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_GCXColourPopup@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnMouseMove@CXColourPopup@@IAEXIVCPoint@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnMouseMove@CXColourPopup@@IAEXIVCPoint@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?OnMouseMove@CXColourPopup@@IAEXIVCPoint@@@Z$1
__ehfuncinfo$?OnMouseMove@CXColourPopup@@IAEXIVCPoint@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?OnMouseMove@CXColourPopup@@IAEXIVCPoint@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnPaint@CXColourPopup@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnPaint@CXColourPopup@@IAEXXZ$0
__ehfuncinfo$?OnPaint@CXColourPopup@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnPaint@CXColourPopup@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DrawCell@CXColourPopup@@IAEXPAVCDC@@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DrawCell@CXColourPopup@@IAEXPAVCDC@@HH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DrawCell@CXColourPopup@@IAEXPAVCDC@@HH@Z$1
__ehfuncinfo$?DrawCell@CXColourPopup@@IAEXPAVCDC@@HH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?DrawCell@CXColourPopup@@IAEXPAVCDC@@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?EndSelection@CXColourPopup@@IAEXH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EndSelection@CXColourPopup@@IAEXH@Z$0
__ehfuncinfo$?EndSelection@CXColourPopup@@IAEXH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?EndSelection@CXColourPopup@@IAEXH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ChangeSelection@CXColourPopup@@IAEXHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChangeSelection@CXColourPopup@@IAEXHH@Z$0
__ehfuncinfo$?ChangeSelection@CXColourPopup@@IAEXHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ChangeSelection@CXColourPopup@@IAEXHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetWindowSize@CXColourPopup@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetWindowSize@CXColourPopup@@IAEXXZ$0
__ehfuncinfo$?SetWindowSize@CXColourPopup@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetWindowSize@CXColourPopup@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Create@CXColourPopup@@QAEHVCPoint@@KPAVCWnd@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Create@CXColourPopup@@QAEHVCPoint@@KPAVCWnd@@PBD@Z$0
__ehfuncinfo$?Create@CXColourPopup@@QAEHVCPoint@@KPAVCWnd@@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Create@CXColourPopup@@QAEHVCPoint@@KPAVCWnd@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CXColourPopup@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CXColourPopup@@QAE@PAVCWnd@@VCPoint@@KPAKHHPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CXColourPopup@@QAE@PAVCWnd@@VCPoint@@KPAKHHPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CXColourPopup@@QAE@PAVCWnd@@VCPoint@@KPAKHHPBD@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CXColourPopup@@QAE@PAVCWnd@@VCPoint@@KPAKHHPBD@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CXColourPopup@@QAE@PAVCWnd@@VCPoint@@KPAKHHPBD@Z$3
__ehfuncinfo$??0CXColourPopup@@QAE@PAVCWnd@@VCPoint@@KPAKHHPBD@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CXColourPopup@@QAE@PAVCWnd@@VCPoint@@KPAKHHPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CXColourPopup@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CXColourPopup@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CXColourPopup@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CXColourPopup@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CXColourPopup@@QAE@XZ$3
__ehfuncinfo$??0CXColourPopup@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CXColourPopup@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??1CGdiObject@@UAE@XZ$3 DD 00H
	DD	FLAT:??_R0PAVCException@@@8
	DD	0fffffde4H
	DD	FLAT:__catch$??1CGdiObject@@UAE@XZ$0
__tryblocktable$??1CGdiObject@@UAE@XZ DD 00H
	DD	00H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??1CGdiObject@@UAE@XZ$3
__unwindtable$??1CGdiObject@@UAE@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$??1CGdiObject@@UAE@XZ$2
__ehfuncinfo$??1CGdiObject@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1CGdiObject@@UAE@XZ
	DD	01H
	DD	FLAT:__tryblocktable$??1CGdiObject@@UAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCXColourPopup@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GCXColourPopup@@UAEPAXI@Z PROC			; CXColourPopup::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GCXColourPopup@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 284  : 	if (m_Font.GetSafeHandle())

  00026	8d be e0 00 00
	00		 lea	 edi, DWORD PTR [esi+224]
  0002c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00033	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CXColourPopup@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 68   : 	{ return this == NULL ? NULL : m_hObject; }

  00039	85 ff		 test	 edi, edi
  0003b	74 0d		 je	 SHORT $LN8@scalar
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 284  : 	if (m_Font.GetSafeHandle())

  0003d	83 7f 04 00	 cmp	 DWORD PTR [edi+4], 0
  00041	74 07		 je	 SHORT $LN8@scalar

; 285  : 		m_Font.DeleteObject();

  00043	8b cf		 mov	 ecx, edi
  00045	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject
$LN8@scalar:

; 286  : }

  0004a	8d 8e f0 00 00
	00		 lea	 ecx, DWORD PTR [esi+240]
  00050	e8 00 00 00 00	 call	 ??1CToolTipCtrl@@UAE@XZ	; CToolTipCtrl::~CToolTipCtrl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 155  : 	{ }

  00055	8b cf		 mov	 ecx, edi
  00057	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CFont@@6B@
  0005d	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 286  : }

  00062	8d 8e ac 00 00
	00		 lea	 ecx, DWORD PTR [esi+172]
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0006e	8b ce		 mov	 ecx, esi
  00070	e8 00 00 00 00	 call	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
  00075	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00078	a8 01		 test	 al, 1
  0007a	74 1d		 je	 SHORT $LN20@scalar
  0007c	a8 04		 test	 al, 4
  0007e	75 0b		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  00080	56		 push	 esi
  00081	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00086	83 c4 04	 add	 esp, 4
  00089	eb 0e		 jmp	 SHORT $LN20@scalar
$LN3@scalar:
  0008b	68 98 01 00 00	 push	 408			; 00000198H
  00090	56		 push	 esi
  00091	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00096	83 c4 08	 add	 esp, 8
$LN20@scalar:
  00099	8b c6		 mov	 eax, esi
  0009b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a5	59		 pop	 ecx
  000a6	5f		 pop	 edi
  000a7	5e		 pop	 esi
  000a8	8b e5		 mov	 esp, ebp
  000aa	5d		 pop	 ebp
  000ab	c2 04 00	 ret	 4
  000ae	cc		 int	 3
  000af	cc		 int	 3
  000b0	cc		 int	 3
  000b1	cc		 int	 3
  000b2	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_GCXColourPopup@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GCXColourPopup@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GCXColourPopup@@UAEPAXI@Z ENDP			; CXColourPopup::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ?GetMessageMap@CXColourPopup@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetMessageMap@CXColourPopup@@MBEPBUAFX_MSGMAP@@XZ PROC	; CXColourPopup::GetMessageMap, COMDAT
; _this$ = ecx

; 196  : BEGIN_MESSAGE_MAP(CXColourPopup, CWnd)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CXColourPopup@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  00005	c3		 ret	 0
?GetMessageMap@CXColourPopup@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CXColourPopup::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ?GetThisMessageMap@CXColourPopup@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CXColourPopup@@KGPBUAFX_MSGMAP@@XZ PROC ; CXColourPopup::GetThisMessageMap, COMDAT

; 197  : 	//{{AFX_MSG_MAP(CXColourPopup)
; 198  : 	ON_WM_NCDESTROY()
; 199  : 	ON_WM_LBUTTONUP()
; 200  : 	ON_WM_PAINT()
; 201  : 	ON_WM_MOUSEMOVE()
; 202  : 	ON_WM_KEYDOWN()
; 203  : 	//}}AFX_MSG_MAP
; 204  : END_MESSAGE_MAP()

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CXColourPopup@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  00005	c3		 ret	 0
?GetThisMessageMap@CXColourPopup@@KGPBUAFX_MSGMAP@@XZ ENDP ; CXColourPopup::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ?OnKeyDown@CXColourPopup@@IAEXIII@Z
_TEXT	SEGMENT
_nChar$ = 8						; size = 4
_nRepCnt$ = 12						; size = 4
_nFlags$ = 16						; size = 4
?OnKeyDown@CXColourPopup@@IAEXIII@Z PROC		; CXColourPopup::OnKeyDown, COMDAT
; _this$ = ecx

; 339  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 340  : 	int row = m_nCurrentRow;

  00006	8b 96 98 00 00
	00		 mov	 edx, DWORD PTR [esi+152]

; 341  : 	int col = m_nCurrentCol;

  0000c	8b 8e 9c 00 00
	00		 mov	 ecx, DWORD PTR [esi+156]

; 342  : 
; 343  : 	if (row == -1 || col == -1)

  00012	83 fa ff	 cmp	 edx, -1
  00015	74 05		 je	 SHORT $LN3@OnKeyDown
  00017	83 f9 ff	 cmp	 ecx, -1
  0001a	75 0c		 jne	 SHORT $LN2@OnKeyDown
$LN3@OnKeyDown:

; 344  : 	{
; 345  : 		row = m_nSelectedRow;

  0001c	8b 96 a0 00 00
	00		 mov	 edx, DWORD PTR [esi+160]

; 346  : 		col = m_nSelectedCol;

  00022	8b 8e a4 00 00
	00		 mov	 ecx, DWORD PTR [esi+164]
$LN2@OnKeyDown:

; 347  : 	}
; 348  : 
; 349  : 	if (nChar == VK_DOWN)

  00028	8b 45 08	 mov	 eax, DWORD PTR _nChar$[ebp]
  0002b	83 f8 28	 cmp	 eax, 40			; 00000028H
  0002e	75 37		 jne	 SHORT $LN4@OnKeyDown

; 350  : 	{
; 351  : 		row++;

  00030	83 c2 01	 add	 edx, 1

; 352  : 		if (row < 0)

  00033	79 19		 jns	 SHORT $LN5@OnKeyDown
$LN32@OnKeyDown:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 424  : 	{ Default(); }

  00035	33 d2		 xor	 edx, edx
$LN17@OnKeyDown:
  00037	33 c9		 xor	 ecx, ecx
$LN13@OnKeyDown:
  00039	51		 push	 ecx
  0003a	52		 push	 edx
  0003b	8b ce		 mov	 ecx, esi
  0003d	e8 00 00 00 00	 call	 ?ChangeSelection@CXColourPopup@@IAEXHH@Z ; CXColourPopup::ChangeSelection
$LN25@OnKeyDown:
  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  00049	5e		 pop	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 432  : }

  0004a	5d		 pop	 ebp
  0004b	c2 0c 00	 ret	 12			; 0000000cH
$LN5@OnKeyDown:

; 353  : 		{
; 354  : 			row = 0;
; 355  : 			col = 0;
; 356  : 		}
; 357  : 		else if (row == DIVIDER_LINE_ROW)

  0004e	83 fa 09	 cmp	 edx, 9
  00051	75 07		 jne	 SHORT $LN7@OnKeyDown

; 358  : 		{
; 359  : 			row++;

  00053	ba 0a 00 00 00	 mov	 edx, 10			; 0000000aH

; 360  : 		}

  00058	eb df		 jmp	 SHORT $LN13@OnKeyDown
$LN7@OnKeyDown:

; 361  : 		else if (row >= m_nNumRows)

  0005a	33 c0		 xor	 eax, eax
  0005c	3b 96 8c 00 00
	00		 cmp	 edx, DWORD PTR [esi+140]
  00062	0f 4d d0	 cmovge	 edx, eax

; 362  : 		{
; 363  : 			row = 0;
; 364  : 		}
; 365  : 		ChangeSelection(row, col);
; 366  : 	}
; 367  : 
; 368  : 	if (nChar == VK_UP)

  00065	eb d2		 jmp	 SHORT $LN13@OnKeyDown
$LN4@OnKeyDown:
  00067	83 f8 26	 cmp	 eax, 38			; 00000026H
  0006a	75 1b		 jne	 SHORT $LN10@OnKeyDown

; 369  : 	{
; 370  : 		row--;

  0006c	83 ea 01	 sub	 edx, 1

; 371  : 		if (row < 0)

  0006f	79 09		 jns	 SHORT $LN11@OnKeyDown

; 372  : 		{
; 373  : 			row = m_nNumRows - 1;

  00071	8b 96 8c 00 00
	00		 mov	 edx, DWORD PTR [esi+140]
  00077	4a		 dec	 edx

; 374  : 		}

  00078	eb bf		 jmp	 SHORT $LN13@OnKeyDown
$LN11@OnKeyDown:

; 375  : 		else if (row == DIVIDER_LINE_ROW)

  0007a	83 fa 09	 cmp	 edx, 9
  0007d	b8 08 00 00 00	 mov	 eax, 8
  00082	0f 44 d0	 cmove	 edx, eax

; 376  : 		{
; 377  : 			row--;
; 378  : 		}
; 379  : 		ChangeSelection(row, col);
; 380  : 	}
; 381  : 
; 382  : 	if (nChar == VK_RIGHT)

  00085	eb b2		 jmp	 SHORT $LN13@OnKeyDown
$LN10@OnKeyDown:
  00087	83 f8 27	 cmp	 eax, 39			; 00000027H
  0008a	75 12		 jne	 SHORT $LN14@OnKeyDown

; 383  : 	{
; 384  : 		if (col < 0)

  0008c	85 c9		 test	 ecx, ecx
  0008e	78 a5		 js	 SHORT $LN32@OnKeyDown

; 385  : 		{
; 386  : 			row = 0;
; 387  : 			col = 0;
; 388  : 		}
; 389  : 		else if (col < m_nNumColumns - 1)

  00090	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  00096	48		 dec	 eax
  00097	3b c8		 cmp	 ecx, eax
  00099	7d 9c		 jge	 SHORT $LN17@OnKeyDown

; 390  : 		{
; 391  : 			col++;

  0009b	41		 inc	 ecx

; 392  : 		}

  0009c	eb 9b		 jmp	 SHORT $LN13@OnKeyDown
$LN14@OnKeyDown:

; 393  : 		else
; 394  : 		{
; 395  : 			col = 0;
; 396  : 		}
; 397  : 		ChangeSelection(row, col);
; 398  : 	}
; 399  : 
; 400  : 	if (nChar == VK_LEFT)

  0009e	83 f8 25	 cmp	 eax, 37			; 00000025H
  000a1	75 49		 jne	 SHORT $LN19@OnKeyDown

; 401  : 	{
; 402  : 		if (col < 0)

  000a3	85 c9		 test	 ecx, ecx
  000a5	79 25		 jns	 SHORT $LN29@OnKeyDown

; 415  : 		ChangeSelection(row, col);

  000a7	8b 8e 88 00 00
	00		 mov	 ecx, DWORD PTR [esi+136]
  000ad	8b 96 8c 00 00
	00		 mov	 edx, DWORD PTR [esi+140]
  000b3	4a		 dec	 edx
  000b4	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 424  : 	{ Default(); }

  000b7	8b ce		 mov	 ecx, esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 415  : 		ChangeSelection(row, col);

  000b9	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 424  : 	{ Default(); }

  000ba	52		 push	 edx
  000bb	e8 00 00 00 00	 call	 ?ChangeSelection@CXColourPopup@@IAEXHH@Z ; CXColourPopup::ChangeSelection
  000c0	8b ce		 mov	 ecx, esi
  000c2	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  000c7	5e		 pop	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 432  : }

  000c8	5d		 pop	 ebp
  000c9	c2 0c 00	 ret	 12			; 0000000cH
$LN29@OnKeyDown:

; 403  : 		{
; 404  : 			row = m_nNumRows - 1;
; 405  : 			col = m_nNumColumns - 1;
; 406  : 		}
; 407  : 		else if (col > 0)

  000cc	7f 06		 jg	 SHORT $LN23@OnKeyDown

; 415  : 		ChangeSelection(row, col);

  000ce	8b 8e 88 00 00
	00		 mov	 ecx, DWORD PTR [esi+136]
$LN23@OnKeyDown:
  000d4	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 424  : 	{ Default(); }

  000d7	8b ce		 mov	 ecx, esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 415  : 		ChangeSelection(row, col);

  000d9	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 424  : 	{ Default(); }

  000da	52		 push	 edx
  000db	e8 00 00 00 00	 call	 ?ChangeSelection@CXColourPopup@@IAEXHH@Z ; CXColourPopup::ChangeSelection
  000e0	8b ce		 mov	 ecx, esi
  000e2	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  000e7	5e		 pop	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 432  : }

  000e8	5d		 pop	 ebp
  000e9	c2 0c 00	 ret	 12			; 0000000cH
$LN19@OnKeyDown:

; 416  : 	}
; 417  : 
; 418  : 	if (nChar == VK_ESCAPE)

  000ec	83 f8 1b	 cmp	 eax, 27			; 0000001bH
  000ef	75 1d		 jne	 SHORT $LN24@OnKeyDown

; 419  : 	{
; 420  : 		m_crColor = m_crInitialColor;

  000f1	8b 86 e8 00 00
	00		 mov	 eax, DWORD PTR [esi+232]

; 421  : 		EndSelection(CPN_SELENDCANCEL);

  000f7	8b ce		 mov	 ecx, esi
  000f9	68 ed 07 00 00	 push	 2029			; 000007edH
  000fe	89 86 ec 00 00
	00		 mov	 DWORD PTR [esi+236], eax
  00104	e8 00 00 00 00	 call	 ?EndSelection@CXColourPopup@@IAEXH@Z ; CXColourPopup::EndSelection
  00109	5e		 pop	 esi

; 432  : }

  0010a	5d		 pop	 ebp
  0010b	c2 0c 00	 ret	 12			; 0000000cH
$LN24@OnKeyDown:

; 422  : 		return;
; 423  : 	}
; 424  : 
; 425  : 	if (nChar == VK_RETURN)

  0010e	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  00111	0f 85 2b ff ff
	ff		 jne	 $LN25@OnKeyDown

; 426  : 	{
; 427  : 		EndSelection(CPN_SELENDOK);

  00117	68 ec 07 00 00	 push	 2028			; 000007ecH
  0011c	8b ce		 mov	 ecx, esi
  0011e	e8 00 00 00 00	 call	 ?EndSelection@CXColourPopup@@IAEXH@Z ; CXColourPopup::EndSelection
  00123	5e		 pop	 esi

; 432  : }

  00124	5d		 pop	 ebp
  00125	c2 0c 00	 ret	 12			; 0000000cH
?OnKeyDown@CXColourPopup@@IAEXIII@Z ENDP		; CXColourPopup::OnKeyDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ?OnMouseMove@CXColourPopup@@IAEXIVCPoint@@@Z
_TEXT	SEGMENT
_dc$2 = -52						; size = 20
_dc$3 = -32						; size = 20
__$EHRec$ = -12						; size = 12
_nFlags$ = 8						; size = 4
_point$ = 12						; size = 8
?OnMouseMove@CXColourPopup@@IAEXIVCPoint@@@Z PROC	; CXColourPopup::OnMouseMove, COMDAT
; _this$ = ecx

; 463  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnMouseMove@CXColourPopup@@IAEXIVCPoint@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx

; 464  : 	int row, col;
; 465  : 
; 466  : 	if (point.x < 0 || point.y < 0)

  0002a	8b 7d 0c	 mov	 edi, DWORD PTR _point$[ebp]
  0002d	85 ff		 test	 edi, edi
  0002f	0f 88 2a 01 00
	00		 js	 $LN3@OnMouseMov
  00035	8b 55 10	 mov	 edx, DWORD PTR _point$[ebp+4]
  00038	85 d2		 test	 edx, edx
  0003a	0f 88 1f 01 00
	00		 js	 $LN3@OnMouseMov

; 467  : 	{
; 468  : 		ChangeSelection(-1, -1);
; 469  : 		CWnd::OnMouseMove(nFlags, point);
; 470  : 		return;
; 471  : 	}
; 472  : 
; 473  : 	// Translate points to be relative raised window edge
; 474  : 	point.x -= m_nMargin;

  00040	8b 86 94 00 00
	00		 mov	 eax, DWORD PTR [esi+148]
  00046	2b f8		 sub	 edi, eax

; 478  : 	if (m_bShowCustom && m_TextRect.PtInRect(point))

  00048	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__PtInRect@12
  0004e	2b d0		 sub	 edx, eax
  00050	83 be a8 00 00
	00 00		 cmp	 DWORD PTR [esi+168], 0
  00057	89 7d 0c	 mov	 DWORD PTR _point$[ebp], edi
  0005a	89 55 10	 mov	 DWORD PTR _point$[ebp+4], edx
  0005d	74 45		 je	 SHORT $LN6@OnMouseMov
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 648  : 	return ::PtInRect(this, point);

  0005f	52		 push	 edx
  00060	57		 push	 edi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 478  : 	if (m_bShowCustom && m_TextRect.PtInRect(point))

  00061	8d 86 b0 00 00
	00		 lea	 eax, DWORD PTR [esi+176]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 648  : 	return ::PtInRect(this, point);

  00067	50		 push	 eax
  00068	ff d3		 call	 ebx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 478  : 	if (m_bShowCustom && m_TextRect.PtInRect(point))

  0006a	85 c0		 test	 eax, eax
  0006c	74 09		 je	 SHORT $LN59@OnMouseMov

; 479  : 	{
; 480  : 		row = CUSTOM_BUTTON_ROW;        // Special value meaning Custom button (hack!)

  0006e	bb 0a 00 00 00	 mov	 ebx, 10			; 0000000aH

; 481  : 		col = 0;

  00073	33 c0		 xor	 eax, eax

; 482  : 	}

  00075	eb 5c		 jmp	 SHORT $LN8@OnMouseMov
$LN59@OnMouseMov:

; 483  : 	else if (m_bShowCustom && m_DividerRect.PtInRect(point))

  00077	83 be a8 00 00
	00 00		 cmp	 DWORD PTR [esi+168], 0
  0007e	8b 55 10	 mov	 edx, DWORD PTR _point$[ebp+4]
  00081	8b 7d 0c	 mov	 edi, DWORD PTR _point$[ebp]
  00084	74 1e		 je	 SHORT $LN6@OnMouseMov
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 648  : 	return ::PtInRect(this, point);

  00086	52		 push	 edx
  00087	57		 push	 edi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 483  : 	else if (m_bShowCustom && m_DividerRect.PtInRect(point))

  00088	8d 86 d0 00 00
	00		 lea	 eax, DWORD PTR [esi+208]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 648  : 	return ::PtInRect(this, point);

  0008e	50		 push	 eax
  0008f	ff d3		 call	 ebx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 483  : 	else if (m_bShowCustom && m_DividerRect.PtInRect(point))

  00091	85 c0		 test	 eax, eax
  00093	74 09		 je	 SHORT $LN60@OnMouseMov

; 484  : 	{
; 485  : 		row = DIVIDER_LINE_ROW;        // Special value meaning divider line

  00095	bb 09 00 00 00	 mov	 ebx, 9

; 486  : 		col = 0;

  0009a	33 c0		 xor	 eax, eax

; 487  : 	}

  0009c	eb 35		 jmp	 SHORT $LN8@OnMouseMov
$LN60@OnMouseMov:

; 483  : 	else if (m_bShowCustom && m_DividerRect.PtInRect(point))

  0009e	8b 55 10	 mov	 edx, DWORD PTR _point$[ebp+4]
  000a1	8b 7d 0c	 mov	 edi, DWORD PTR _point$[ebp]
$LN6@OnMouseMov:

; 488  : 	else
; 489  : 	{
; 490  : 		// Get the row and column
; 491  : 		row = point.y / m_nBoxSize,

  000a4	8b 8e 90 00 00
	00		 mov	 ecx, DWORD PTR [esi+144]
  000aa	8b c2		 mov	 eax, edx
  000ac	99		 cdq
  000ad	f7 f9		 idiv	 ecx
  000af	8b d8		 mov	 ebx, eax
  000b1	8b c7		 mov	 eax, edi
  000b3	99		 cdq
  000b4	f7 f9		 idiv	 ecx

; 492  : 		col = point.x / m_nBoxSize;
; 493  : 
; 494  : 		// In range? If not, default and exit
; 495  : 		if (row < 0 || row >= m_nNumRows || row == DIVIDER_LINE_ROW ||
; 496  : 				col < 0 || col >= m_nNumColumns)

  000b6	85 db		 test	 ebx, ebx
  000b8	78 3b		 js	 SHORT $LN9@OnMouseMov
  000ba	3b 9e 8c 00 00
	00		 cmp	 ebx, DWORD PTR [esi+140]
  000c0	7d 33		 jge	 SHORT $LN9@OnMouseMov
  000c2	83 fb 09	 cmp	 ebx, 9
  000c5	74 2e		 je	 SHORT $LN9@OnMouseMov
  000c7	85 c0		 test	 eax, eax
  000c9	78 2a		 js	 SHORT $LN9@OnMouseMov
  000cb	3b 86 88 00 00
	00		 cmp	 eax, DWORD PTR [esi+136]
  000d1	7d 22		 jge	 SHORT $LN9@OnMouseMov
$LN8@OnMouseMov:

; 501  : 		}
; 502  : 	}
; 503  : 
; 504  : 	// OK - we have the row and column of the current selection (may be TEXT_BOX_VALUE)
; 505  : 	// Has the row/col selection changed? If yes, then redraw old and new cells.
; 506  : 	if (row != m_nCurrentRow || col != m_nCurrentCol)

  000d3	3b 9e 98 00 00
	00		 cmp	 ebx, DWORD PTR [esi+152]
  000d9	75 0c		 jne	 SHORT $LN11@OnMouseMov
  000db	3b 86 9c 00 00
	00		 cmp	 eax, DWORD PTR [esi+156]
  000e1	0f 84 ec 00 00
	00		 je	 $LN1@OnMouseMov
$LN11@OnMouseMov:

; 507  : 	{
; 508  : 		ChangeSelection(row, col);

  000e7	50		 push	 eax
  000e8	53		 push	 ebx
  000e9	8b ce		 mov	 ecx, esi
  000eb	e8 00 00 00 00	 call	 ?ChangeSelection@CXColourPopup@@IAEXHH@Z ; CXColourPopup::ChangeSelection
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 454  : 	{ Default(); }

  000f0	e9 de 00 00 00	 jmp	 $LN1@OnMouseMov
$LN9@OnMouseMov:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 649  : 	CClientDC dc(this);        // device context for drawing

  000f5	56		 push	 esi
  000f6	8d 4d e0	 lea	 ecx, DWORD PTR _dc$3[ebp]
  000f9	e8 00 00 00 00	 call	 ??0CClientDC@@QAE@PAVCWnd@@@Z ; CClientDC::CClientDC

; 650  : 
; 651  : 	//int row = (row1 < 5) ? row1 : row1 + 1;
; 652  : 
; 653  : 	if ((m_nCurrentRow >= 0 && m_nCurrentRow < m_nNumRows &&
; 654  : 			m_nCurrentCol >= 0 && m_nCurrentCol < m_nNumColumns) ||
; 655  : 		(m_nCurrentRow == CUSTOM_BUTTON_ROW) ||

  000fe	8b 8e 98 00 00
	00		 mov	 ecx, DWORD PTR [esi+152]
  00104	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  0010b	85 c9		 test	 ecx, ecx
  0010d	78 1a		 js	 SHORT $LN39@OnMouseMov
  0010f	3b 8e 8c 00 00
	00		 cmp	 ecx, DWORD PTR [esi+140]
  00115	7d 12		 jge	 SHORT $LN39@OnMouseMov
  00117	8b 86 9c 00 00
	00		 mov	 eax, DWORD PTR [esi+156]
  0011d	85 c0		 test	 eax, eax
  0011f	78 08		 js	 SHORT $LN39@OnMouseMov
  00121	3b 86 88 00 00
	00		 cmp	 eax, DWORD PTR [esi+136]
  00127	7c 0a		 jl	 SHORT $LN38@OnMouseMov
$LN39@OnMouseMov:
  00129	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  0012c	74 05		 je	 SHORT $LN38@OnMouseMov
  0012e	83 f9 09	 cmp	 ecx, 9
  00131	75 27		 jne	 SHORT $LN37@OnMouseMov
$LN38@OnMouseMov:

; 656  : 		(m_nCurrentRow == DIVIDER_LINE_ROW))
; 657  : 	{
; 658  : 		// Set Current selection as invalid and redraw old selection (this way
; 659  : 		// the old selection will be drawn unselected)
; 660  : 		int OldRow = m_nCurrentRow;
; 661  : 		int OldCol = m_nCurrentCol;

  00133	8b 86 9c 00 00
	00		 mov	 eax, DWORD PTR [esi+156]

; 662  : 		m_nCurrentRow = m_nCurrentCol = -1;
; 663  : 		DrawCell(&dc, OldRow, OldCol);

  00139	50		 push	 eax
  0013a	51		 push	 ecx
  0013b	8d 45 e0	 lea	 eax, DWORD PTR _dc$3[ebp]
  0013e	c7 86 9c 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+156], -1
  00148	50		 push	 eax
  00149	8b ce		 mov	 ecx, esi
  0014b	c7 86 98 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+152], -1
  00155	e8 00 00 00 00	 call	 ?DrawCell@CXColourPopup@@IAEXPAVCDC@@HH@Z ; CXColourPopup::DrawCell
$LN37@OnMouseMov:

; 664  : 	}
; 665  : 
; 666  : 	if (row == -1 || col == -1)
; 667  : 		return;

  0015a	8d 4d e0	 lea	 ecx, DWORD PTR _dc$3[ebp]

; 497  : 		{
; 498  : 			ChangeSelection(-1, -1);
; 499  : 			CWnd::OnMouseMove(nFlags, point);
; 500  : 			return;

  0015d	eb 68		 jmp	 SHORT $LN63@OnMouseMov
$LN3@OnMouseMov:

; 649  : 	CClientDC dc(this);        // device context for drawing

  0015f	56		 push	 esi
  00160	8d 4d cc	 lea	 ecx, DWORD PTR _dc$2[ebp]
  00163	e8 00 00 00 00	 call	 ??0CClientDC@@QAE@PAVCWnd@@@Z ; CClientDC::CClientDC

; 650  : 
; 651  : 	//int row = (row1 < 5) ? row1 : row1 + 1;
; 652  : 
; 653  : 	if ((m_nCurrentRow >= 0 && m_nCurrentRow < m_nNumRows &&
; 654  : 			m_nCurrentCol >= 0 && m_nCurrentCol < m_nNumColumns) ||
; 655  : 		(m_nCurrentRow == CUSTOM_BUTTON_ROW) ||

  00168	8b 8e 98 00 00
	00		 mov	 ecx, DWORD PTR [esi+152]
  0016e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00175	85 c9		 test	 ecx, ecx
  00177	78 1a		 js	 SHORT $LN16@OnMouseMov
  00179	3b 8e 8c 00 00
	00		 cmp	 ecx, DWORD PTR [esi+140]
  0017f	7d 12		 jge	 SHORT $LN16@OnMouseMov
  00181	8b 86 9c 00 00
	00		 mov	 eax, DWORD PTR [esi+156]
  00187	85 c0		 test	 eax, eax
  00189	78 08		 js	 SHORT $LN16@OnMouseMov
  0018b	3b 86 88 00 00
	00		 cmp	 eax, DWORD PTR [esi+136]
  00191	7c 0a		 jl	 SHORT $LN15@OnMouseMov
$LN16@OnMouseMov:
  00193	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  00196	74 05		 je	 SHORT $LN15@OnMouseMov
  00198	83 f9 09	 cmp	 ecx, 9
  0019b	75 27		 jne	 SHORT $LN14@OnMouseMov
$LN15@OnMouseMov:

; 656  : 		(m_nCurrentRow == DIVIDER_LINE_ROW))
; 657  : 	{
; 658  : 		// Set Current selection as invalid and redraw old selection (this way
; 659  : 		// the old selection will be drawn unselected)
; 660  : 		int OldRow = m_nCurrentRow;
; 661  : 		int OldCol = m_nCurrentCol;

  0019d	8b 86 9c 00 00
	00		 mov	 eax, DWORD PTR [esi+156]

; 662  : 		m_nCurrentRow = m_nCurrentCol = -1;
; 663  : 		DrawCell(&dc, OldRow, OldCol);

  001a3	50		 push	 eax
  001a4	51		 push	 ecx
  001a5	8d 45 cc	 lea	 eax, DWORD PTR _dc$2[ebp]
  001a8	c7 86 9c 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+156], -1
  001b2	50		 push	 eax
  001b3	8b ce		 mov	 ecx, esi
  001b5	c7 86 98 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+152], -1
  001bf	e8 00 00 00 00	 call	 ?DrawCell@CXColourPopup@@IAEXPAVCDC@@HH@Z ; CXColourPopup::DrawCell
$LN14@OnMouseMov:

; 664  : 	}
; 665  : 
; 666  : 	if (row == -1 || col == -1)
; 667  : 		return;

  001c4	8d 4d cc	 lea	 ecx, DWORD PTR _dc$2[ebp]
$LN63@OnMouseMov:

; 509  : 	}
; 510  : 
; 511  : 	CWnd::OnMouseMove(nFlags, point);
; 512  : }

  001c7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001ce	e8 00 00 00 00	 call	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC
$LN1@OnMouseMov:
  001d3	8b ce		 mov	 ecx, esi
  001d5	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  001da	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001dd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001e4	59		 pop	 ecx
  001e5	5f		 pop	 edi
  001e6	5e		 pop	 esi
  001e7	5b		 pop	 ebx
  001e8	8b e5		 mov	 esp, ebp
  001ea	5d		 pop	 ebp
  001eb	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnMouseMove@CXColourPopup@@IAEXIVCPoint@@@Z$1:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _dc$3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC
__unwindfunclet$?OnMouseMove@CXColourPopup@@IAEXIVCPoint@@@Z$0:
  00008	8d 4d cc	 lea	 ecx, DWORD PTR _dc$2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?OnMouseMove@CXColourPopup@@IAEXIVCPoint@@@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnMouseMove@CXColourPopup@@IAEXIVCPoint@@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnMouseMove@CXColourPopup@@IAEXIVCPoint@@@Z ENDP	; CXColourPopup::OnMouseMove
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ?OnPaint@CXColourPopup@@IAEXXZ
_TEXT	SEGMENT
_dc$ = -116						; size = 84
_rect$ = -32						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?OnPaint@CXColourPopup@@IAEXXZ PROC			; CXColourPopup::OnPaint, COMDAT
; _this$ = ecx

; 445  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnPaint@CXColourPopup@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 68	 sub	 esp, 104		; 00000068H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx

; 446  : 	CPaintDC dc(this); // device context for painting

  0002d	57		 push	 edi
  0002e	8d 4d 8c	 lea	 ecx, DWORD PTR _dc$[ebp]
  00031	e8 00 00 00 00	 call	 ??0CPaintDC@@QAE@PAVCWnd@@@Z ; CPaintDC::CPaintDC

; 447  : 
; 448  : 	// Draw color cells
; 449  : 	for (int row = 0; row < m_nNumRows; row++)

  00036	33 db		 xor	 ebx, ebx
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003f	39 9f 8c 00 00
	00		 cmp	 DWORD PTR [edi+140], ebx
  00045	7e 30		 jle	 SHORT $LN3@OnPaint
  00047	8b 87 88 00 00
	00		 mov	 eax, DWORD PTR [edi+136]
  0004d	0f 1f 00	 npad	 3
$LL4@OnPaint:

; 450  : 		for (int col = 0; col < m_nNumColumns; col++)

  00050	33 f6		 xor	 esi, esi
  00052	85 c0		 test	 eax, eax
  00054	7e 18		 jle	 SHORT $LN2@OnPaint
$LL7@OnPaint:

; 451  : 			DrawCell(&dc, row, col);

  00056	56		 push	 esi
  00057	53		 push	 ebx
  00058	8d 45 8c	 lea	 eax, DWORD PTR _dc$[ebp]
  0005b	8b cf		 mov	 ecx, edi
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?DrawCell@CXColourPopup@@IAEXPAVCDC@@HH@Z ; CXColourPopup::DrawCell
  00063	8b 87 88 00 00
	00		 mov	 eax, DWORD PTR [edi+136]
  00069	46		 inc	 esi
  0006a	3b f0		 cmp	 esi, eax
  0006c	7c e8		 jl	 SHORT $LL7@OnPaint
$LN2@OnPaint:

; 447  : 
; 448  : 	// Draw color cells
; 449  : 	for (int row = 0; row < m_nNumRows; row++)

  0006e	43		 inc	 ebx
  0006f	3b 9f 8c 00 00
	00		 cmp	 ebx, DWORD PTR [edi+140]
  00075	7c d9		 jl	 SHORT $LL4@OnPaint
$LN3@OnPaint:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 86   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetClientRect(m_hWnd, lpRect); }

  00077	8d 45 e0	 lea	 eax, DWORD PTR _rect$[ebp]
  0007a	0f 57 c0	 xorps	 xmm0, xmm0
  0007d	50		 push	 eax
  0007e	ff 77 20	 push	 DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00081	0f 11 45 e0	 movups	 XMMWORD PTR _rect$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 86   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetClientRect(m_hWnd, lpRect); }

  00085	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 510  : 	{ ASSERT(m_hDC != NULL); return ::DrawEdge(m_hDC, lpRect, nEdge, nFlags); }

  0008b	6a 0f		 push	 15			; 0000000fH
  0008d	6a 05		 push	 5
  0008f	8d 45 e0	 lea	 eax, DWORD PTR _rect$[ebp]
  00092	50		 push	 eax
  00093	ff 75 90	 push	 DWORD PTR _dc$[ebp+4]
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DrawEdge@16
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 458  : }

  0009c	8d 4d 8c	 lea	 ecx, DWORD PTR _dc$[ebp]
  0009f	e8 00 00 00 00	 call	 ??1CPaintDC@@UAE@XZ	; CPaintDC::~CPaintDC
  000a4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ae	59		 pop	 ecx
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5b		 pop	 ebx
  000b2	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b5	33 cd		 xor	 ecx, ebp
  000b7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bc	8b e5		 mov	 esp, ebp
  000be	5d		 pop	 ebp
  000bf	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnPaint@CXColourPopup@@IAEXXZ$0:
  00000	8d 4d 8c	 lea	 ecx, DWORD PTR _dc$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CPaintDC@@UAE@XZ	; CPaintDC::~CPaintDC
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?OnPaint@CXColourPopup@@IAEXXZ:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a 88	 mov	 ecx, DWORD PTR [edx-120]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnPaint@CXColourPopup@@IAEXXZ
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnPaint@CXColourPopup@@IAEXXZ ENDP			; CXColourPopup::OnPaint
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ?OnLButtonUp@CXColourPopup@@IAEXIVCPoint@@@Z
_TEXT	SEGMENT
_nFlags$ = 8						; size = 4
_point$ = 12						; size = 8
?OnLButtonUp@CXColourPopup@@IAEXIVCPoint@@@Z PROC	; CXColourPopup::OnLButtonUp, COMDAT
; _this$ = ecx

; 517  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 434  : 	{ Default(); }

  00003	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 520  : 	DWORD pos = GetMessagePos();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMessagePos@0

; 521  : 	point = CPoint(GET_X_LPARAM(pos), GET_Y_LPARAM(pos));

  0000e	0f bf d0	 movsx	 edx, ax
  00011	c1 e8 10	 shr	 eax, 16			; 00000010H
  00014	98		 cwde
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 648  : 	return ::PtInRect(this, point);

  00015	50		 push	 eax
  00016	52		 push	 edx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 523  : 	if (m_WindowRect.PtInRect(point))

  00017	8d 86 c0 00 00
	00		 lea	 eax, DWORD PTR [esi+192]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 648  : 	return ::PtInRect(this, point);

  0001d	50		 push	 eax
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 523  : 	if (m_WindowRect.PtInRect(point))

  00024	f7 d8		 neg	 eax

; 524  : 		EndSelection(CPN_SELENDOK);
; 525  : 	else
; 526  : 		EndSelection(CPN_SELENDCANCEL);
; 527  : }

  00026	8b ce		 mov	 ecx, esi
  00028	1b c0		 sbb	 eax, eax
  0002a	05 ed 07 00 00	 add	 eax, 2029		; 000007edH
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ?EndSelection@CXColourPopup@@IAEXH@Z ; CXColourPopup::EndSelection
  00035	5e		 pop	 esi
  00036	c2 0c 00	 ret	 12			; 0000000cH
?OnLButtonUp@CXColourPopup@@IAEXIVCPoint@@@Z ENDP	; CXColourPopup::OnLButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ?OnNcDestroy@CXColourPopup@@IAEXXZ
_TEXT	SEGMENT
?OnNcDestroy@CXColourPopup@@IAEXXZ PROC			; CXColourPopup::OnNcDestroy, COMDAT
; _this$ = ecx

; 437  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 438  : 	CWnd::OnNcDestroy();

  00003	e8 00 00 00 00	 call	 ?OnNcDestroy@CWnd@@IAEXXZ ; CWnd::OnNcDestroy

; 439  : 	delete this;

  00008	85 f6		 test	 esi, esi
  0000a	74 09		 je	 SHORT $LN3@OnNcDestro
  0000c	8b 06		 mov	 eax, DWORD PTR [esi]
  0000e	8b ce		 mov	 ecx, esi
  00010	6a 01		 push	 1
  00012	ff 50 04	 call	 DWORD PTR [eax+4]
$LN3@OnNcDestro:

; 440  : }

  00015	5e		 pop	 esi
  00016	c3		 ret	 0
?OnNcDestroy@CXColourPopup@@IAEXXZ ENDP			; CXColourPopup::OnNcDestroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ?DrawCell@CXColourPopup@@IAEXPAVCDC@@HH@Z
_TEXT	SEGMENT
_this$GSCopy$1$ = -76					; size = 4
_brush$ = -72						; size = 8
_pen$ = -64						; size = 8
_pDC$GSCopy$1$ = -56					; size = 4
tv525 = -52						; size = 4
$T2 = -52						; size = 4
$T3 = -52						; size = 4
_divider$4 = -48					; size = 16
_rect$ = -32						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pDC$ = 8						; size = 4
_row$ = 12						; size = 4
_col$ = 16						; size = 4
?DrawCell@CXColourPopup@@IAEXPAVCDC@@HH@Z PROC		; CXColourPopup::DrawCell, COMDAT
; _this$ = ecx

; 752  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DrawCell@CXColourPopup@@IAEXPAVCDC@@HH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 40	 sub	 esp, 64			; 00000040H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f9		 mov	 edi, ecx
  0002c	89 7d b4	 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi

; 753  : 	// This is a special hack for the text box
; 754  : 	if (m_bShowCustom && row == CUSTOM_BUTTON_ROW)// && row == TEXT_BOX_VALUE)

  0002f	83 bf a8 00 00
	00 00		 cmp	 DWORD PTR [edi+168], 0
  00036	8b 75 08	 mov	 esi, DWORD PTR _pDC$[ebp]
  00039	8b 4d 0c	 mov	 ecx, DWORD PTR _row$[ebp]
  0003c	89 75 c8	 mov	 DWORD PTR _pDC$GSCopy$1$[ebp], esi
  0003f	0f 84 89 00 00
	00		 je	 $LN2@DrawCell
  00045	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  00048	0f 85 80 00 00
	00		 jne	 $LN2@DrawCell

; 755  : 	{
; 756  : 		pDC->FillSolidRect(m_TextRect, ::GetSysColor(COLOR_3DFACE));

  0004e	8d 87 b0 00 00
	00		 lea	 eax, DWORD PTR [edi+176]
  00054	6a 0f		 push	 15			; 0000000fH
  00056	89 45 cc	 mov	 DWORD PTR tv525[ebp], eax
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSysColor@4
  0005f	50		 push	 eax
  00060	8d 87 b0 00 00
	00		 lea	 eax, DWORD PTR [edi+176]
  00066	8b ce		 mov	 ecx, esi
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ?FillSolidRect@CDC@@QAEXPBUtagRECT@@K@Z ; CDC::FillSolidRect

; 757  : 		if (m_nCurrentRow == row && m_nCurrentCol == col)

  0006e	83 bf 98 00 00
	00 0a		 cmp	 DWORD PTR [edi+152], 10	; 0000000aH
  00075	75 1f		 jne	 SHORT $LN3@DrawCell
  00077	8b 87 9c 00 00
	00		 mov	 eax, DWORD PTR [edi+156]
  0007d	3b 45 10	 cmp	 eax, DWORD PTR _col$[ebp]
  00080	75 14		 jne	 SHORT $LN3@DrawCell
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 510  : 	{ ASSERT(m_hDC != NULL); return ::DrawEdge(m_hDC, lpRect, nEdge, nFlags); }

  00082	6a 0f		 push	 15			; 0000000fH
  00084	6a 05		 push	 5
  00086	8d 87 b0 00 00
	00		 lea	 eax, DWORD PTR [edi+176]
  0008c	50		 push	 eax
  0008d	ff 76 04	 push	 DWORD PTR [esi+4]
  00090	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DrawEdge@16
$LN3@DrawCell:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 761  : 		CFont * pOldFont = (CFont *) pDC->SelectObject(&m_Font);

  00096	8b 16		 mov	 edx, DWORD PTR [esi]
  00098	8d 87 e0 00 00
	00		 lea	 eax, DWORD PTR [edi+224]
  0009e	50		 push	 eax
  0009f	8b ce		 mov	 ecx, esi
  000a1	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  000a4	ff d0		 call	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

  000a6	8b 8f ac 00 00
	00		 mov	 ecx, DWORD PTR [edi+172]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 761  : 		CFont * pOldFont = (CFont *) pDC->SelectObject(&m_Font);

  000ac	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 600  : 		return _AFX_FUNCNAME(DrawText)((LPCTSTR)str, (int)str.GetLength(), lpRect, nFormat); }

  000ae	8b 7d c8	 mov	 edi, DWORD PTR _pDC$GSCopy$1$[ebp]
  000b1	6a 25		 push	 37			; 00000025H
  000b3	ff 75 cc	 push	 DWORD PTR tv525[ebp]
  000b6	ff 71 f4	 push	 DWORD PTR [ecx-12]
  000b9	8b 17		 mov	 edx, DWORD PTR [edi]
  000bb	51		 push	 ecx
  000bc	8b cf		 mov	 ecx, edi
  000be	ff 52 70	 call	 DWORD PTR [edx+112]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 764  : 		pDC->SelectObject(pOldFont);

  000c1	8b 07		 mov	 eax, DWORD PTR [edi]
  000c3	8b cf		 mov	 ecx, edi
  000c5	56		 push	 esi
  000c6	ff 50 30	 call	 DWORD PTR [eax+48]

; 765  : 
; 766  : 		return;

  000c9	e9 f8 01 00 00	 jmp	 $LN51@DrawCell
$LN2@DrawCell:

; 774  : 	if (!GetCellRect(row, col, rect))

  000ce	8d 45 e0	 lea	 eax, DWORD PTR _rect$[ebp]
  000d1	0f 57 c0	 xorps	 xmm0, xmm0
  000d4	89 45 cc	 mov	 DWORD PTR $T3[ebp], eax
  000d7	8d 45 cc	 lea	 eax, DWORD PTR $T3[ebp]
  000da	50		 push	 eax
  000db	ff 75 10	 push	 DWORD PTR _col$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  000de	0f 11 45 e0	 movups	 XMMWORD PTR _rect$[ebp], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 774  : 	if (!GetCellRect(row, col, rect))

  000e2	51		 push	 ecx
  000e3	8b cf		 mov	 ecx, edi
  000e5	e8 00 00 00 00	 call	 ?GetCellRect@CXColourPopup@@IAEHHHABQAUtagRECT@@@Z ; CXColourPopup::GetCellRect
  000ea	6a 0f		 push	 15			; 0000000fH
  000ec	85 c0		 test	 eax, eax
  000ee	0f 85 a0 00 00
	00		 jne	 $LN4@DrawCell

; 775  : 	{
; 776  : 		pDC->FillSolidRect(rect, ::GetSysColor(COLOR_3DFACE));

  000f4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSysColor@4
  000fa	50		 push	 eax
  000fb	8d 45 e0	 lea	 eax, DWORD PTR _rect$[ebp]
  000fe	8b ce		 mov	 ecx, esi
  00100	50		 push	 eax
  00101	e8 00 00 00 00	 call	 ?FillSolidRect@CDC@@QAEXPBUtagRECT@@K@Z ; CDC::FillSolidRect

; 777  : 		if (row != DIVIDER_LINE_ROW)

  00106	83 7d 0c 09	 cmp	 DWORD PTR _row$[ebp], 9
  0010a	0f 85 b6 01 00
	00		 jne	 $LN51@DrawCell

; 781  : 		CRect divider(rect);

  00110	0f 10 4d e0	 movups	 xmm1, XMMWORD PTR _rect$[ebp]

; 783  : 		GetCellRect(row, 7, rect);

  00114	8b cf		 mov	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 581  : 	return bottom - top;

  00116	0f 28 c1	 movaps	 xmm0, xmm1
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 781  : 		CRect divider(rect);

  00119	0f 11 4d d0	 movups	 XMMWORD PTR _divider$4[ebp], xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 581  : 	return bottom - top;

  0011d	66 0f 73 d8 0c	 psrldq	 xmm0, 12		; 0000000cH
  00122	66 0f 73 d9 04	 psrldq	 xmm1, 4
  00127	66 0f 7e c8	 movd	 eax, xmm1
  0012b	66 0f 7e c6	 movd	 esi, xmm0
  0012f	2b f0		 sub	 esi, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 783  : 		GetCellRect(row, 7, rect);

  00131	8d 45 e0	 lea	 eax, DWORD PTR _rect$[ebp]
  00134	89 45 cc	 mov	 DWORD PTR $T2[ebp], eax
  00137	8d 45 cc	 lea	 eax, DWORD PTR $T2[ebp]
  0013a	50		 push	 eax
  0013b	6a 07		 push	 7
  0013d	6a 09		 push	 9
  0013f	e8 00 00 00 00	 call	 ?GetCellRect@CXColourPopup@@IAEHHHABQAUtagRECT@@@Z ; CXColourPopup::GetCellRect

; 784  : 		divider.right = rect.right;

  00144	8b 4d e8	 mov	 ecx, DWORD PTR _rect$[ebp+8]

; 785  : 		divider.top += (h/2) - 2;

  00147	8b c6		 mov	 eax, esi
  00149	89 4d d8	 mov	 DWORD PTR _divider$4[ebp+8], ecx
  0014c	8b 4d d4	 mov	 ecx, DWORD PTR _divider$4[ebp+4]
  0014f	99		 cdq
  00150	83 c1 fe	 add	 ecx, -2			; fffffffeH
  00153	2b c2		 sub	 eax, edx
  00155	d1 f8		 sar	 eax, 1
  00157	03 c8		 add	 ecx, eax
  00159	89 4d d4	 mov	 DWORD PTR _divider$4[ebp+4], ecx

; 786  : 		divider.bottom -= (h/2) - 2;

  0015c	b9 02 00 00 00	 mov	 ecx, 2
  00161	2b c8		 sub	 ecx, eax
  00163	01 4d dc	 add	 DWORD PTR _divider$4[ebp+12], ecx

; 787  : 		UINT nFlags = BF_BOTTOM | BF_TOP;
; 788  : 		if (col == 0)
; 789  : 			nFlags |= BF_LEFT;
; 790  : 		if (col == 7)

  00166	8b 4d 10	 mov	 ecx, DWORD PTR _col$[ebp]
  00169	f7 d9		 neg	 ecx
  0016b	1b c9		 sbb	 ecx, ecx
  0016d	83 c1 0b	 add	 ecx, 11			; 0000000bH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 510  : 	{ ASSERT(m_hDC != NULL); return ::DrawEdge(m_hDC, lpRect, nEdge, nFlags); }

  00170	8b c1		 mov	 eax, ecx
  00172	83 c8 04	 or	 eax, 4
  00175	83 7d 10 07	 cmp	 DWORD PTR _col$[ebp], 7
  00179	0f 45 c1	 cmovne	 eax, ecx
  0017c	50		 push	 eax
  0017d	6a 0a		 push	 10			; 0000000aH
  0017f	8d 45 d0	 lea	 eax, DWORD PTR _divider$4[ebp]
  00182	50		 push	 eax
  00183	8b 45 c8	 mov	 eax, DWORD PTR _pDC$GSCopy$1$[ebp]
  00186	ff 70 04	 push	 DWORD PTR [eax+4]
  00189	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DrawEdge@16
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 793  : 		return;

  0018f	e9 32 01 00 00	 jmp	 $LN51@DrawCell
$LN4@DrawCell:

; 794  : 	}
; 795  : 
; 796  : 	// fill background
; 797  : 	pDC->FillSolidRect(rect, ::GetSysColor(COLOR_3DFACE));

  00194	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSysColor@4
  0019a	50		 push	 eax
  0019b	8d 45 e0	 lea	 eax, DWORD PTR _rect$[ebp]
  0019e	8b ce		 mov	 ecx, esi
  001a0	50		 push	 eax
  001a1	e8 00 00 00 00	 call	 ?FillSolidRect@CDC@@QAEXPBUtagRECT@@K@Z ; CDC::FillSolidRect

; 798  : 
; 799  : 	// Draw raised edge if selected
; 800  : 	if (m_nCurrentRow == row && m_nCurrentCol == col)

  001a6	8b 45 0c	 mov	 eax, DWORD PTR _row$[ebp]
  001a9	8b 4d 10	 mov	 ecx, DWORD PTR _col$[ebp]
  001ac	39 87 98 00 00
	00		 cmp	 DWORD PTR [edi+152], eax
  001b2	75 0e		 jne	 SHORT $LN8@DrawCell
  001b4	39 8f 9c 00 00
	00		 cmp	 DWORD PTR [edi+156], ecx
  001ba	75 06		 jne	 SHORT $LN8@DrawCell
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 510  : 	{ ASSERT(m_hDC != NULL); return ::DrawEdge(m_hDC, lpRect, nEdge, nFlags); }

  001bc	6a 0f		 push	 15			; 0000000fH
  001be	6a 05		 push	 5
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 801  : 		pDC->DrawEdge(rect, EDGE_RAISED, BF_RECT);

  001c0	eb 14		 jmp	 SHORT $LN56@DrawCell
$LN8@DrawCell:

; 802  : 	else if (m_nSelectedRow == row && m_nSelectedCol == col)

  001c2	39 87 a0 00 00
	00		 cmp	 DWORD PTR [edi+160], eax
  001c8	75 19		 jne	 SHORT $LN10@DrawCell
  001ca	39 8f a4 00 00
	00		 cmp	 DWORD PTR [edi+164], ecx
  001d0	75 11		 jne	 SHORT $LN10@DrawCell
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 510  : 	{ ASSERT(m_hDC != NULL); return ::DrawEdge(m_hDC, lpRect, nEdge, nFlags); }

  001d2	6a 0f		 push	 15			; 0000000fH
  001d4	6a 0a		 push	 10			; 0000000aH
$LN56@DrawCell:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h

; 83   : 		return (0x00FFFFFF & m_crColors[row * m_nNumColumns + col].crColor);

  001d6	8d 45 e0	 lea	 eax, DWORD PTR _rect$[ebp]
  001d9	50		 push	 eax
  001da	ff 76 04	 push	 DWORD PTR [esi+4]
  001dd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DrawEdge@16
$LN10@DrawCell:
  001e3	8b 87 88 00 00
	00		 mov	 eax, DWORD PTR [edi+136]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 808  : 	CBrush brush(rgbCell);

  001e9	8d 4d b8	 lea	 ecx, DWORD PTR _brush$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h

; 83   : 		return (0x00FFFFFF & m_crColors[row * m_nNumColumns + col].crColor);

  001ec	0f af 45 0c	 imul	 eax, DWORD PTR _row$[ebp]
  001f0	03 45 10	 add	 eax, DWORD PTR _col$[ebp]
  001f3	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  001f6	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A[eax*4]
  001fd	25 ff ff ff 00	 and	 eax, 16777215		; 00ffffffH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 808  : 	CBrush brush(rgbCell);

  00202	50		 push	 eax
  00203	e8 00 00 00 00	 call	 ??0CBrush@@QAE@K@Z	; CBrush::CBrush
  00208	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 70   : 	{ m_hObject = NULL; }

  0020f	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _pen$[ebp+4], 0

; 104  : 	{ }

  00216	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _pen$[ebp], OFFSET ??_7CPen@@6B@
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 810  : 	pen.CreatePen(PS_SOLID, 1, ::GetSysColor(COLOR_3DSHADOW));

  0021d	6a 10		 push	 16			; 00000010H
  0021f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00223	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSysColor@4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 108  : 	{ return Attach(::CreatePen(nPenStyle, nWidth, crColor)); }

  00229	50		 push	 eax
  0022a	6a 01		 push	 1
  0022c	6a 00		 push	 0
  0022e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreatePen@12
  00234	50		 push	 eax
  00235	8d 4d c0	 lea	 ecx, DWORD PTR _pen$[ebp]
  00238	e8 00 00 00 00	 call	 ?Attach@CGdiObject@@QAEHPAX@Z ; CGdiObject::Attach
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 812  : 	CBrush * pOldBrush = (CBrush *) pDC->SelectObject(&brush);

  0023d	8d 45 b8	 lea	 eax, DWORD PTR _brush$[ebp]
  00240	8b ce		 mov	 ecx, esi
  00242	50		 push	 eax
  00243	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCBrush@@PAV2@@Z ; CDC::SelectObject
  00248	8b f8		 mov	 edi, eax

; 813  : 	CPen * pOldPen = (CPen *) pDC->SelectObject(&pen);

  0024a	8b ce		 mov	 ecx, esi
  0024c	8d 45 c0	 lea	 eax, DWORD PTR _pen$[ebp]
  0024f	50		 push	 eax
  00250	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z ; CDC::SelectObject

; 816  : 	rect.DeflateRect(m_nMargin + 1, m_nMargin + 1);

  00255	8b 4d b4	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00258	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 698  : 	::InflateRect(this, -x, -y);

  0025a	8d 45 e0	 lea	 eax, DWORD PTR _rect$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 816  : 	rect.DeflateRect(m_nMargin + 1, m_nMargin + 1);

  0025d	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  00263	f7 d1		 not	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 698  : 	::InflateRect(this, -x, -y);

  00265	51		 push	 ecx
  00266	51		 push	 ecx
  00267	50		 push	 eax
  00268	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InflateRect@12
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 541  : 	{ ASSERT(m_hDC != NULL); return ::Rectangle(m_hDC, lpRect->left, lpRect->top,

  0026e	ff 75 ec	 push	 DWORD PTR _rect$[ebp+12]
  00271	8b 45 c8	 mov	 eax, DWORD PTR _pDC$GSCopy$1$[ebp]
  00274	ff 75 e8	 push	 DWORD PTR _rect$[ebp+8]
  00277	ff 75 e4	 push	 DWORD PTR _rect$[ebp+4]
  0027a	ff 75 e0	 push	 DWORD PTR _rect$[ebp]
  0027d	ff 70 04	 push	 DWORD PTR [eax+4]
  00280	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Rectangle@20
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 820  : 	pDC->SelectObject(pOldBrush);

  00286	8b 4d c8	 mov	 ecx, DWORD PTR _pDC$GSCopy$1$[ebp]
  00289	57		 push	 edi
  0028a	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCBrush@@PAV2@@Z ; CDC::SelectObject

; 821  : 	pDC->SelectObject(pOldPen);

  0028f	8b 4d c8	 mov	 ecx, DWORD PTR _pDC$GSCopy$1$[ebp]
  00292	56		 push	 esi
  00293	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z ; CDC::SelectObject

; 822  : 	brush.DeleteObject();

  00298	8d 4d b8	 lea	 ecx, DWORD PTR _brush$[ebp]
  0029b	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject

; 823  : 	pen.DeleteObject();

  002a0	8d 4d c0	 lea	 ecx, DWORD PTR _pen$[ebp]
  002a3	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 106  : 	{ }

  002a8	8d 4d c0	 lea	 ecx, DWORD PTR _pen$[ebp]
  002ab	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _pen$[ebp], OFFSET ??_7CPen@@6B@
  002b2	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject

; 130  : 	{ }

  002b7	8d 4d b8	 lea	 ecx, DWORD PTR _brush$[ebp]
  002ba	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _brush$[ebp], OFFSET ??_7CBrush@@6B@
  002c1	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
$LN51@DrawCell:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 824  : }

  002c6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002c9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  002d0	59		 pop	 ecx
  002d1	5f		 pop	 edi
  002d2	5e		 pop	 esi
  002d3	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002d6	33 cd		 xor	 ecx, ebp
  002d8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002dd	8b e5		 mov	 esp, ebp
  002df	5d		 pop	 ebp
  002e0	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DrawCell@CXColourPopup@@IAEXPAVCDC@@HH@Z$0:
  00000	8d 4d b8	 lea	 ecx, DWORD PTR _brush$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CBrush@@UAE@XZ	; CBrush::~CBrush
__unwindfunclet$?DrawCell@CXColourPopup@@IAEXPAVCDC@@HH@Z$1:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR _pen$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1CPen@@UAE@XZ		; CPen::~CPen
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?DrawCell@CXColourPopup@@IAEXPAVCDC@@HH@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a b4	 mov	 ecx, DWORD PTR [edx-76]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DrawCell@CXColourPopup@@IAEXPAVCDC@@HH@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DrawCell@CXColourPopup@@IAEXPAVCDC@@HH@Z ENDP		; CXColourPopup::DrawCell
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxdlgs.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ?EndSelection@CXColourPopup@@IAEXH@Z
_TEXT	SEGMENT
_dlg$2 = -288						; size = 208
_rgb$3 = -80						; size = 64
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_nMessage$ = 8						; size = 4
?EndSelection@CXColourPopup@@IAEXH@Z PROC		; CXColourPopup::EndSelection, COMDAT
; _this$ = ecx

; 693  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?EndSelection@CXColourPopup@@IAEXH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b f1		 mov	 esi, ecx

; 694  : 	ReleaseCapture();

  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseCapture@0

; 695  : 
; 696  : 	if (nMessage != CPN_SELENDCANCEL && m_nCurrentRow == DIVIDER_LINE_ROW)

  00036	8b 5d 08	 mov	 ebx, DWORD PTR _nMessage$[ebp]
  00039	8b 8e 98 00 00
	00		 mov	 ecx, DWORD PTR [esi+152]
  0003f	81 fb ed 07 00
	00		 cmp	 ebx, 2029		; 000007edH
  00045	0f 84 f8 01 00
	00		 je	 $LN84@EndSelecti
  0004b	83 f9 09	 cmp	 ecx, 9
  0004e	75 14		 jne	 SHORT $LN77@EndSelecti
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 163  : 	{ ASSERT(::IsWindow(m_hWnd)); return CWnd::FromHandle(::SetCapture(m_hWnd)); }

  00050	ff 76 20	 push	 DWORD PTR [esi+32]
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCapture@4
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 700  : 		return;

  0005f	e9 94 02 00 00	 jmp	 $LN1@EndSelecti
$LN77@EndSelecti:

; 701  : 	}
; 702  : 	else if (nMessage != CPN_SELENDCANCEL && m_nCurrentRow == CUSTOM_BUTTON_ROW)

  00064	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  00067	0f 85 e2 01 00
	00		 jne	 $LN80@EndSelecti

; 707  : 		for (i = 0, row = FIRST_CUSTOM_ROW; row < FIRST_CUSTOM_ROW+2; row++)

  0006d	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  00073	8d 55 b4	 lea	 edx, DWORD PTR _rgb$3[ebp+4]
  00076	69 c8 84 00 00
	00		 imul	 ecx, eax, 132
  0007c	bf 02 00 00 00	 mov	 edi, 2
  00081	8d 1c 40	 lea	 ebx, DWORD PTR [eax+eax*2]
  00084	c1 e3 02	 shl	 ebx, 2
  00087	81 c1 0c 00 00
	00		 add	 ecx, OFFSET ?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A+12
  0008d	0f 1f 00	 npad	 3
$LL4@EndSelecti:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h

; 83   : 		return (0x00FFFFFF & m_crColors[row * m_nNumColumns + col].crColor);

  00090	8b 41 f4	 mov	 eax, DWORD PTR [ecx-12]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 709  : 				rgb[i++] = GetColor(row, col);

  00093	8d 52 20	 lea	 edx, DWORD PTR [edx+32]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h

; 83   : 		return (0x00FFFFFF & m_crColors[row * m_nNumColumns + col].crColor);

  00096	25 ff ff ff 00	 and	 eax, 16777215		; 00ffffffH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 709  : 				rgb[i++] = GetColor(row, col);

  0009b	89 42 dc	 mov	 DWORD PTR [edx-36], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h

; 83   : 		return (0x00FFFFFF & m_crColors[row * m_nNumColumns + col].crColor);

  0009e	8b 01		 mov	 eax, DWORD PTR [ecx]
  000a0	25 ff ff ff 00	 and	 eax, 16777215		; 00ffffffH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 709  : 				rgb[i++] = GetColor(row, col);

  000a5	89 42 e0	 mov	 DWORD PTR [edx-32], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h

; 83   : 		return (0x00FFFFFF & m_crColors[row * m_nNumColumns + col].crColor);

  000a8	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  000ab	25 ff ff ff 00	 and	 eax, 16777215		; 00ffffffH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 709  : 				rgb[i++] = GetColor(row, col);

  000b0	89 42 e4	 mov	 DWORD PTR [edx-28], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h

; 83   : 		return (0x00FFFFFF & m_crColors[row * m_nNumColumns + col].crColor);

  000b3	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  000b6	25 ff ff ff 00	 and	 eax, 16777215		; 00ffffffH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 709  : 				rgb[i++] = GetColor(row, col);

  000bb	89 42 e8	 mov	 DWORD PTR [edx-24], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h

; 83   : 		return (0x00FFFFFF & m_crColors[row * m_nNumColumns + col].crColor);

  000be	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  000c1	25 ff ff ff 00	 and	 eax, 16777215		; 00ffffffH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 709  : 				rgb[i++] = GetColor(row, col);

  000c6	89 42 ec	 mov	 DWORD PTR [edx-20], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h

; 83   : 		return (0x00FFFFFF & m_crColors[row * m_nNumColumns + col].crColor);

  000c9	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  000cc	25 ff ff ff 00	 and	 eax, 16777215		; 00ffffffH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 709  : 				rgb[i++] = GetColor(row, col);

  000d1	89 42 f0	 mov	 DWORD PTR [edx-16], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h

; 83   : 		return (0x00FFFFFF & m_crColors[row * m_nNumColumns + col].crColor);

  000d4	8b 41 3c	 mov	 eax, DWORD PTR [ecx+60]
  000d7	25 ff ff ff 00	 and	 eax, 16777215		; 00ffffffH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 709  : 				rgb[i++] = GetColor(row, col);

  000dc	89 42 f4	 mov	 DWORD PTR [edx-12], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h

; 83   : 		return (0x00FFFFFF & m_crColors[row * m_nNumColumns + col].crColor);

  000df	8b 41 48	 mov	 eax, DWORD PTR [ecx+72]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 707  : 		for (i = 0, row = FIRST_CUSTOM_ROW; row < FIRST_CUSTOM_ROW+2; row++)

  000e2	03 cb		 add	 ecx, ebx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h

; 83   : 		return (0x00FFFFFF & m_crColors[row * m_nNumColumns + col].crColor);

  000e4	25 ff ff ff 00	 and	 eax, 16777215		; 00ffffffH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 709  : 				rgb[i++] = GetColor(row, col);

  000e9	89 42 f8	 mov	 DWORD PTR [edx-8], eax
  000ec	83 ef 01	 sub	 edi, 1
  000ef	75 9f		 jne	 SHORT $LL4@EndSelecti

; 710  : 
; 711  : 		CColorDialog dlg(m_crInitialColor, CC_FULLOPEN | CC_ANYCOLOR, this);

  000f1	56		 push	 esi
  000f2	68 02 01 00 00	 push	 258			; 00000102H
  000f7	ff b6 e8 00 00
	00		 push	 DWORD PTR [esi+232]
  000fd	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _dlg$2[ebp]
  00103	e8 00 00 00 00	 call	 ??0CColorDialog@@QAE@KKPAVCWnd@@@Z ; CColorDialog::CColorDialog

; 712  : 		dlg.m_cc.lStructSize  = sizeof(CHOOSECOLOR);
; 713  : 		dlg.m_cc.hwndOwner    = m_hWnd;

  00108	8b 46 20	 mov	 eax, DWORD PTR [esi+32]

; 714  : 		dlg.m_cc.lpCustColors = rgb;
; 715  : 		dlg.m_cc.Flags        |= CC_FULLOPEN | CC_ANYCOLOR;
; 716  : 
; 717  : 		if (dlg.DoModal() == IDOK)

  0010b	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _dlg$2[ebp]
  00111	81 4d 9c 02 01
	00 00		 or	 DWORD PTR _dlg$2[ebp+188], 258 ; 00000102H
  00118	89 45 8c	 mov	 DWORD PTR _dlg$2[ebp+172], eax
  0011b	8d 45 b0	 lea	 eax, DWORD PTR _rgb$3[ebp]
  0011e	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  00121	c7 45 88 24 00
	00 00		 mov	 DWORD PTR _dlg$2[ebp+168], 36 ; 00000024H
  00128	89 45 98	 mov	 DWORD PTR _dlg$2[ebp+184], eax
  0012b	e8 00 00 00 00	 call	 ?DoModal@CColorDialog@@UAEHXZ ; CColorDialog::DoModal
  00130	83 f8 01	 cmp	 eax, 1
  00133	0f 85 e1 00 00
	00		 jne	 $LN20@EndSelecti

; 718  : 		{
; 719  : 			m_crColor = dlg.GetColor();

  00139	8b 45 94	 mov	 eax, DWORD PTR _dlg$2[ebp+180]
  0013c	8d 7d b4	 lea	 edi, DWORD PTR _rgb$3[ebp+4]
  0013f	89 86 ec 00 00
	00		 mov	 DWORD PTR [esi+236], eax
  00145	ba 0b 00 00 00	 mov	 edx, 11			; 0000000bH
  0014a	66 0f 1f 44 00
	00		 npad	 6
$LL10@EndSelecti:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h

; 87   : 		m_crColors[row * m_nNumColumns + col].crColor = rgb;

  00150	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  00156	8d 7f 20	 lea	 edi, DWORD PTR [edi+32]
  00159	0f af c2	 imul	 eax, edx
  0015c	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  0015f	8b 47 dc	 mov	 eax, DWORD PTR [edi-36]
  00162	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A[ecx*4], eax
  00169	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  0016f	0f af c2	 imul	 eax, edx
  00172	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  00175	8b 47 e0	 mov	 eax, DWORD PTR [edi-32]
  00178	89 04 8d 0c 00
	00 00		 mov	 DWORD PTR ?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A[ecx*4+12], eax
  0017f	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  00185	0f af c2	 imul	 eax, edx
  00188	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  0018b	8b 47 e4	 mov	 eax, DWORD PTR [edi-28]
  0018e	89 04 8d 18 00
	00 00		 mov	 DWORD PTR ?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A[ecx*4+24], eax
  00195	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  0019b	0f af c2	 imul	 eax, edx
  0019e	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  001a1	8b 47 e8	 mov	 eax, DWORD PTR [edi-24]
  001a4	89 04 8d 24 00
	00 00		 mov	 DWORD PTR ?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A[ecx*4+36], eax
  001ab	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  001b1	0f af c2	 imul	 eax, edx
  001b4	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  001b7	8b 47 ec	 mov	 eax, DWORD PTR [edi-20]
  001ba	89 04 8d 30 00
	00 00		 mov	 DWORD PTR ?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A[ecx*4+48], eax
  001c1	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  001c7	0f af c2	 imul	 eax, edx
  001ca	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  001cd	8b 47 f0	 mov	 eax, DWORD PTR [edi-16]
  001d0	89 04 8d 3c 00
	00 00		 mov	 DWORD PTR ?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A[ecx*4+60], eax
  001d7	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  001dd	0f af c2	 imul	 eax, edx
  001e0	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  001e3	8b 47 f4	 mov	 eax, DWORD PTR [edi-12]
  001e6	89 04 8d 48 00
	00 00		 mov	 DWORD PTR ?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A[ecx*4+72], eax
  001ed	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  001f3	0f af c2	 imul	 eax, edx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 720  : 			for (i = 0, row = FIRST_CUSTOM_ROW; row < FIRST_CUSTOM_ROW+2; row++)

  001f6	42		 inc	 edx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h

; 87   : 		m_crColors[row * m_nNumColumns + col].crColor = rgb;

  001f7	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  001fa	8b 47 f8	 mov	 eax, DWORD PTR [edi-8]
  001fd	89 04 8d 54 00
	00 00		 mov	 DWORD PTR ?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A[ecx*4+84], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 720  : 			for (i = 0, row = FIRST_CUSTOM_ROW; row < FIRST_CUSTOM_ROW+2; row++)

  00204	83 fa 0d	 cmp	 edx, 13			; 0000000dH
  00207	0f 8c 43 ff ff
	ff		 jl	 $LL10@EndSelecti
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 114  : 	{ ASSERT(::IsWindow(m_hWnd)); ::InvalidateRect(m_hWnd, NULL, bErase); }

  0020d	6a 01		 push	 1
  0020f	6a 00		 push	 0
  00211	ff 76 20	 push	 DWORD PTR [esi+32]
  00214	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InvalidateRect@12
$LN20@EndSelecti:

; 163  : 	{ ASSERT(::IsWindow(m_hWnd)); return CWnd::FromHandle(::SetCapture(m_hWnd)); }

  0021a	ff 76 20	 push	 DWORD PTR [esi+32]
  0021d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCapture@4
  00223	50		 push	 eax
  00224	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxdlgs.h

; 110  :     virtual ~CCommonDialog() {};

  00229	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _dlg$2[ebp]
  0022f	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _dlg$2[ebp], OFFSET ??_7CCommonDialog@@6B@
  00239	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 726  : 		return;

  0023e	e9 b5 00 00 00	 jmp	 $LN1@EndSelecti
$LN84@EndSelecti:

; 727  : 	}
; 728  : 
; 729  : 	if (nMessage == CPN_SELENDCANCEL)
; 730  : 		m_crColor = m_crInitialColor;

  00243	8b 86 e8 00 00
	00		 mov	 eax, DWORD PTR [esi+232]
  00249	89 86 ec 00 00
	00		 mov	 DWORD PTR [esi+236], eax
$LN80@EndSelecti:

; 731  : 
; 732  : 	m_nSelectedRow = m_nCurrentRow;
; 733  : 	m_nSelectedCol = m_nCurrentCol;
; 734  : 
; 735  : 	if (m_pCustomColors)

  0024f	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  00256	8b 86 9c 00 00
	00		 mov	 eax, DWORD PTR [esi+156]
  0025c	89 86 a4 00 00
	00		 mov	 DWORD PTR [esi+164], eax
  00262	89 8e a0 00 00
	00		 mov	 DWORD PTR [esi+160], ecx
  00268	0f b7 c0	 movzx	 eax, ax
  0026b	0f b7 d1	 movzx	 edx, cx
  0026e	74 5f		 je	 SHORT $LN76@EndSelecti

; 736  : 	{
; 737  : 		for (int i = 0; i < 16; i++)

  00270	33 ff		 xor	 edi, edi
  00272	ba 2c 04 00 00	 mov	 edx, OFFSET ?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A+1068
  00277	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL16@EndSelecti:

; 738  : 		{
; 739  : 			m_pCustomColors[i] = m_crColors[FIRST_CUSTOM_ROW * 8 + i].crColor;

  00280	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  00286	8d 7f 10	 lea	 edi, DWORD PTR [edi+16]
  00289	8b 42 f4	 mov	 eax, DWORD PTR [edx-12]
  0028c	89 44 0f f0	 mov	 DWORD PTR [edi+ecx-16], eax
  00290	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  00296	8b 02		 mov	 eax, DWORD PTR [edx]
  00298	89 44 0f f4	 mov	 DWORD PTR [edi+ecx-12], eax
  0029c	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  002a2	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  002a5	89 44 0f f8	 mov	 DWORD PTR [edi+ecx-8], eax
  002a9	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  002af	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  002b2	83 c2 30	 add	 edx, 48			; 00000030H
  002b5	89 44 0f fc	 mov	 DWORD PTR [edi+ecx-4], eax
  002b9	81 fa ec 04 00
	00		 cmp	 edx, OFFSET ?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A+1260
  002bf	7c bf		 jl	 SHORT $LL16@EndSelecti

; 709  : 				rgb[i++] = GetColor(row, col);

  002c1	0f b7 86 a4 00
	00 00		 movzx	 eax, WORD PTR [esi+164]
  002c8	0f b7 96 a0 00
	00 00		 movzx	 edx, WORD PTR [esi+160]
$LN76@EndSelecti:

; 740  : 		}
; 741  : 	}
; 742  : 
; 743  : 	m_pParent->SendMessage(nMessage, (WPARAM) m_crColor,

  002cf	0f b7 c8	 movzx	 ecx, ax
  002d2	0f b7 c2	 movzx	 eax, dx
  002d5	c1 e1 10	 shl	 ecx, 16			; 00000010H
  002d8	0b c8		 or	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 32   : 	{ ASSERT(::IsWindow(m_hWnd)); return ::SendMessage(m_hWnd, message, wParam, lParam); }

  002da	8b 86 90 01 00
	00		 mov	 eax, DWORD PTR [esi+400]
  002e0	51		 push	 ecx
  002e1	ff b6 ec 00 00
	00		 push	 DWORD PTR [esi+236]
  002e7	53		 push	 ebx
  002e8	ff 70 20	 push	 DWORD PTR [eax+32]
  002eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 746  : 	DestroyWindow();

  002f1	8b 06		 mov	 eax, DWORD PTR [esi]
  002f3	8b ce		 mov	 ecx, esi
  002f5	ff 50 68	 call	 DWORD PTR [eax+104]
$LN1@EndSelecti:

; 747  : }

  002f8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002fb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00302	59		 pop	 ecx
  00303	5f		 pop	 edi
  00304	5e		 pop	 esi
  00305	5b		 pop	 ebx
  00306	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00309	33 cd		 xor	 ecx, ebp
  0030b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00310	8b e5		 mov	 esp, ebp
  00312	5d		 pop	 ebp
  00313	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?EndSelection@CXColourPopup@@IAEXH@Z$0:
  00000	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _dlg$2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CColorDialog@@UAE@XZ
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
__ehhandler$?EndSelection@CXColourPopup@@IAEXH@Z:
  00010	90		 npad	 1
  00011	90		 npad	 1
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a dc fe ff
	ff		 mov	 ecx, DWORD PTR [edx-292]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?EndSelection@CXColourPopup@@IAEXH@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?EndSelection@CXColourPopup@@IAEXH@Z ENDP		; CXColourPopup::EndSelection
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ?ChangeSelection@CXColourPopup@@IAEXHH@Z
_TEXT	SEGMENT
_dc$ = -32						; size = 20
__$EHRec$ = -12						; size = 12
_row$ = 8						; size = 4
_col$ = 12						; size = 4
?ChangeSelection@CXColourPopup@@IAEXHH@Z PROC		; CXColourPopup::ChangeSelection, COMDAT
; _this$ = ecx

; 648  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ChangeSelection@CXColourPopup@@IAEXHH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx

; 649  : 	CClientDC dc(this);        // device context for drawing

  00028	56		 push	 esi
  00029	8d 4d e0	 lea	 ecx, DWORD PTR _dc$[ebp]
  0002c	e8 00 00 00 00	 call	 ??0CClientDC@@QAE@PAVCWnd@@@Z ; CClientDC::CClientDC

; 650  : 
; 651  : 	//int row = (row1 < 5) ? row1 : row1 + 1;
; 652  : 
; 653  : 	if ((m_nCurrentRow >= 0 && m_nCurrentRow < m_nNumRows &&
; 654  : 			m_nCurrentCol >= 0 && m_nCurrentCol < m_nNumColumns) ||
; 655  : 		(m_nCurrentRow == CUSTOM_BUTTON_ROW) ||

  00031	8b 8e 98 00 00
	00		 mov	 ecx, DWORD PTR [esi+152]
  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003e	85 c9		 test	 ecx, ecx
  00040	78 1a		 js	 SHORT $LN4@ChangeSele
  00042	3b 8e 8c 00 00
	00		 cmp	 ecx, DWORD PTR [esi+140]
  00048	7d 12		 jge	 SHORT $LN4@ChangeSele
  0004a	8b 86 9c 00 00
	00		 mov	 eax, DWORD PTR [esi+156]
  00050	85 c0		 test	 eax, eax
  00052	78 08		 js	 SHORT $LN4@ChangeSele
  00054	3b 86 88 00 00
	00		 cmp	 eax, DWORD PTR [esi+136]
  0005a	7c 0a		 jl	 SHORT $LN3@ChangeSele
$LN4@ChangeSele:
  0005c	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  0005f	74 05		 je	 SHORT $LN3@ChangeSele
  00061	83 f9 09	 cmp	 ecx, 9
  00064	75 27		 jne	 SHORT $LN2@ChangeSele
$LN3@ChangeSele:

; 656  : 		(m_nCurrentRow == DIVIDER_LINE_ROW))
; 657  : 	{
; 658  : 		// Set Current selection as invalid and redraw old selection (this way
; 659  : 		// the old selection will be drawn unselected)
; 660  : 		int OldRow = m_nCurrentRow;
; 661  : 		int OldCol = m_nCurrentCol;

  00066	8b 86 9c 00 00
	00		 mov	 eax, DWORD PTR [esi+156]

; 662  : 		m_nCurrentRow = m_nCurrentCol = -1;
; 663  : 		DrawCell(&dc, OldRow, OldCol);

  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	8d 45 e0	 lea	 eax, DWORD PTR _dc$[ebp]
  00071	c7 86 9c 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+156], -1
  0007b	50		 push	 eax
  0007c	8b ce		 mov	 ecx, esi
  0007e	c7 86 98 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+152], -1
  00088	e8 00 00 00 00	 call	 ?DrawCell@CXColourPopup@@IAEXPAVCDC@@HH@Z ; CXColourPopup::DrawCell
$LN2@ChangeSele:

; 664  : 	}
; 665  : 
; 666  : 	if (row == -1 || col == -1)

  0008d	8b 45 08	 mov	 eax, DWORD PTR _row$[ebp]
  00090	83 f8 ff	 cmp	 eax, -1
  00093	74 74		 je	 SHORT $LN6@ChangeSele
  00095	8b 4d 0c	 mov	 ecx, DWORD PTR _col$[ebp]
  00098	83 f9 ff	 cmp	 ecx, -1
  0009b	74 6c		 je	 SHORT $LN6@ChangeSele

; 667  : 		return;
; 668  : 
; 669  : 	// Set the current selection as row/col and draw (it will be drawn selected)
; 670  : 	m_nCurrentRow = row;

  0009d	89 86 98 00 00
	00		 mov	 DWORD PTR [esi+152], eax

; 671  : 	m_nCurrentCol = col;

  000a3	89 8e 9c 00 00
	00		 mov	 DWORD PTR [esi+156], ecx

; 672  : 
; 673  : 	if (row == DIVIDER_LINE_ROW)

  000a9	83 f8 09	 cmp	 eax, 9
  000ac	74 5b		 je	 SHORT $LN6@ChangeSele

; 674  : 		return;
; 675  : 
; 676  : 	DrawCell(&dc, row, col);

  000ae	51		 push	 ecx
  000af	50		 push	 eax
  000b0	8d 45 e0	 lea	 eax, DWORD PTR _dc$[ebp]
  000b3	8b ce		 mov	 ecx, esi
  000b5	50		 push	 eax
  000b6	e8 00 00 00 00	 call	 ?DrawCell@CXColourPopup@@IAEXPAVCDC@@HH@Z ; CXColourPopup::DrawCell

; 677  : 
; 678  : 	// Store the current color
; 679  : 	if (m_nCurrentRow == CUSTOM_BUTTON_ROW)// && m_nCurrentCol == TEXT_BOX_VALUE)

  000bb	8b 8e 98 00 00
	00		 mov	 ecx, DWORD PTR [esi+152]
  000c1	6a 00		 push	 0
  000c3	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  000c6	75 08		 jne	 SHORT $LN8@ChangeSele
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 32   : 	{ ASSERT(::IsWindow(m_hWnd)); return ::SendMessage(m_hWnd, message, wParam, lParam); }

  000c8	ff b6 e8 00 00
	00		 push	 DWORD PTR [esi+232]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 682  : 	}

  000ce	eb 25		 jmp	 SHORT $LN21@ChangeSele
$LN8@ChangeSele:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h

; 83   : 		return (0x00FFFFFF & m_crColors[row * m_nNumColumns + col].crColor);

  000d0	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  000d6	0f af c1	 imul	 eax, ecx
  000d9	03 86 9c 00 00
	00		 add	 eax, DWORD PTR [esi+156]
  000df	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  000e2	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A[eax*4]
  000e9	25 ff ff ff 00	 and	 eax, 16777215		; 00ffffffH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 685  : 		m_crColor = GetColor(m_nCurrentRow, m_nCurrentCol);

  000ee	89 86 ec 00 00
	00		 mov	 DWORD PTR [esi+236], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 32   : 	{ ASSERT(::IsWindow(m_hWnd)); return ::SendMessage(m_hWnd, message, wParam, lParam); }

  000f4	50		 push	 eax
$LN21@ChangeSele:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 688  : }

  000f5	8b 86 90 01 00
	00		 mov	 eax, DWORD PTR [esi+400]
  000fb	68 e9 07 00 00	 push	 2025			; 000007e9H
  00100	ff 70 20	 push	 DWORD PTR [eax+32]
  00103	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
$LN6@ChangeSele:
  00109	8d 4d e0	 lea	 ecx, DWORD PTR _dc$[ebp]
  0010c	e8 00 00 00 00	 call	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC
  00111	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00114	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011b	59		 pop	 ecx
  0011c	5e		 pop	 esi
  0011d	8b e5		 mov	 esp, ebp
  0011f	5d		 pop	 ebp
  00120	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChangeSelection@CXColourPopup@@IAEXHH@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _dc$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?ChangeSelection@CXColourPopup@@IAEXHH@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ChangeSelection@CXColourPopup@@IAEXHH@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ChangeSelection@CXColourPopup@@IAEXHH@Z ENDP		; CXColourPopup::ChangeSelection
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ?CreateToolTips@CXColourPopup@@IAEXXZ
_TEXT	SEGMENT
_row$1$ = -28						; size = 4
_this$GSCopy$1$ = -24					; size = 4
_rect$1 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?CreateToolTips@CXColourPopup@@IAEXXZ PROC		; CXColourPopup::CreateToolTips, COMDAT
; _this$ = ecx

; 616  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 617  : 	// Create the tool tip
; 618  : 	if (!m_ToolTip.Create(this))

  00010	8b 81 f0 00 00
	00		 mov	 eax, DWORD PTR [ecx+240]
  00016	53		 push	 ebx
  00017	8d 99 f0 00 00
	00		 lea	 ebx, DWORD PTR [ecx+240]
  0001d	89 4d e8	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
  00020	6a 00		 push	 0
  00022	51		 push	 ecx
  00023	8b cb		 mov	 ecx, ebx
  00025	ff 90 6c 01 00
	00		 call	 DWORD PTR [eax+364]
  0002b	85 c0		 test	 eax, eax
  0002d	0f 84 f4 00 00
	00		 je	 $LN3@CreateTool

; 619  : 		return;
; 620  : 
; 621  : 	// Add a tool for each cell
; 622  : 	for (int row = 0; row < m_nNumRows; row++)

  00033	8b 4d e8	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00036	57		 push	 edi
  00037	33 ff		 xor	 edi, edi
  00039	89 7d e4	 mov	 DWORD PTR _row$1$[ebp], edi
  0003c	39 b9 8c 00 00
	00		 cmp	 DWORD PTR [ecx+140], edi
  00042	0f 8e de 00 00
	00		 jle	 $LN42@CreateTool
  00048	56		 push	 esi
  00049	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@CreateTool:

; 623  : 	{
; 624  : 		if (row == DIVIDER_LINE_ROW)

  00050	83 ff 09	 cmp	 edi, 9
  00053	0f 84 bc 00 00
	00		 je	 $LN2@CreateTool

; 625  : 			continue;
; 626  : 
; 627  : 		if (row == CUSTOM_BUTTON_ROW)

  00059	83 ff 0a	 cmp	 edi, 10			; 0000000aH
  0005c	75 1e		 jne	 SHORT $LN10@CreateTool

; 628  : 		{
; 629  : 			m_ToolTip.AddTool(this, _T("Selects a custom color"), m_TextRect, 1);

  0005e	6a 01		 push	 1
  00060	8d 81 b0 00 00
	00		 lea	 eax, DWORD PTR [ecx+176]
  00066	50		 push	 eax
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@JABHPIAH@Selects?5a?5custom?5color@
  0006c	51		 push	 ecx
  0006d	8b cb		 mov	 ecx, ebx
  0006f	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 630  : 			continue;

  00074	8b 4d e8	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00077	e9 99 00 00 00	 jmp	 $LN2@CreateTool
$LN10@CreateTool:

; 631  : 		}
; 632  : 
; 633  : 		for (int col = 0; col < m_nNumColumns; col++)

  0007c	8b 99 88 00 00
	00		 mov	 ebx, DWORD PTR [ecx+136]
  00082	33 f6		 xor	 esi, esi
  00084	85 db		 test	 ebx, ebx
  00086	0f 8e 83 00 00
	00		 jle	 $LN41@CreateTool
  0008c	0f 1f 40 00	 npad	 4
$LL7@CreateTool:
  00090	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00093	0f 11 45 ec	 movups	 XMMWORD PTR _rect$1[ebp], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 533  : 	if (row < 0 || row >= m_nNumRows || col < 0 || col >= m_nNumColumns)

  00097	85 ff		 test	 edi, edi
  00099	78 6d		 js	 SHORT $LN17@CreateTool
  0009b	3b b9 8c 00 00
	00		 cmp	 edi, DWORD PTR [ecx+140]
  000a1	7d 65		 jge	 SHORT $LN17@CreateTool
  000a3	85 f6		 test	 esi, esi
  000a5	78 61		 js	 SHORT $LN17@CreateTool
  000a7	3b f3		 cmp	 esi, ebx
  000a9	7d 5d		 jge	 SHORT $LN17@CreateTool

; 534  : 		return FALSE;
; 535  : 
; 536  : 	rect->left = col * m_nBoxSize + m_nMargin;

  000ab	8b b9 90 00 00
	00		 mov	 edi, DWORD PTR [ecx+144]
  000b1	8b d7		 mov	 edx, edi
  000b3	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]

; 537  : 	rect->top  = row * m_nBoxSize + m_nMargin;

  000b9	8b c7		 mov	 eax, edi
  000bb	0f af 45 e4	 imul	 eax, DWORD PTR _row$1$[ebp]
  000bf	0f af d6	 imul	 edx, esi

; 640  : 			VERIFY(m_ToolTip.AddTool(this, GetColorName(row, col), rect, 1));

  000c2	6a 01		 push	 1

; 536  : 	rect->left = col * m_nBoxSize + m_nMargin;

  000c4	03 d1		 add	 edx, ecx

; 537  : 	rect->top  = row * m_nBoxSize + m_nMargin;

  000c6	03 c8		 add	 ecx, eax
  000c8	89 4d f0	 mov	 DWORD PTR _rect$1[ebp+4], ecx
  000cb	89 55 ec	 mov	 DWORD PTR _rect$1[ebp], edx

; 538  : 
; 539  : 	rect->right = rect->left + m_nBoxSize;

  000ce	8d 04 3a	 lea	 eax, DWORD PTR [edx+edi]
  000d1	89 45 f4	 mov	 DWORD PTR _rect$1[ebp+8], eax

; 540  : 	rect->bottom = rect->top + m_nBoxSize;

  000d4	8d 04 39	 lea	 eax, DWORD PTR [ecx+edi]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h

; 91   : 		return m_crColors[row * m_nNumColumns + col].szName;

  000d7	8b 7d e4	 mov	 edi, DWORD PTR _row$1$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 640  : 			VERIFY(m_ToolTip.AddTool(this, GetColorName(row, col), rect, 1));

  000da	8b 4d e8	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h

; 91   : 		return m_crColors[row * m_nNumColumns + col].szName;

  000dd	0f af df	 imul	 ebx, edi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 540  : 	rect->bottom = rect->top + m_nBoxSize;

  000e0	89 45 f8	 mov	 DWORD PTR _rect$1[ebp+12], eax

; 640  : 			VERIFY(m_ToolTip.AddTool(this, GetColorName(row, col), rect, 1));

  000e3	8d 45 ec	 lea	 eax, DWORD PTR _rect$1[ebp]
  000e6	50		 push	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h

; 91   : 		return m_crColors[row * m_nNumColumns + col].szName;

  000e7	03 de		 add	 ebx, esi
  000e9	8d 04 5b	 lea	 eax, DWORD PTR [ebx+ebx*2]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 640  : 			VERIFY(m_ToolTip.AddTool(this, GetColorName(row, col), rect, 1));

  000ec	ff 34 85 04 00
	00 00		 push	 DWORD PTR ?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A[eax*4+4]
  000f3	51		 push	 ecx
  000f4	8d 89 f0 00 00
	00		 lea	 ecx, DWORD PTR [ecx+240]
  000fa	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool
  000ff	8b 4d e8	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00102	8b 99 88 00 00
	00		 mov	 ebx, DWORD PTR [ecx+136]
$LN17@CreateTool:

; 631  : 		}
; 632  : 
; 633  : 		for (int col = 0; col < m_nNumColumns; col++)

  00108	8b c3		 mov	 eax, ebx
  0010a	46		 inc	 esi
  0010b	3b f0		 cmp	 esi, eax
  0010d	7c 81		 jl	 SHORT $LL7@CreateTool
$LN41@CreateTool:

; 619  : 		return;
; 620  : 
; 621  : 	// Add a tool for each cell
; 622  : 	for (int row = 0; row < m_nNumRows; row++)

  0010f	8d 99 f0 00 00
	00		 lea	 ebx, DWORD PTR [ecx+240]
$LN2@CreateTool:
  00115	47		 inc	 edi
  00116	89 7d e4	 mov	 DWORD PTR _row$1$[ebp], edi
  00119	3b b9 8c 00 00
	00		 cmp	 edi, DWORD PTR [ecx+140]
  0011f	0f 8c 2b ff ff
	ff		 jl	 $LL4@CreateTool
  00125	5e		 pop	 esi
$LN42@CreateTool:
  00126	5f		 pop	 edi
$LN3@CreateTool:

; 641  : 		}
; 642  : 	}
; 643  : }

  00127	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012a	33 cd		 xor	 ecx, ebp
  0012c	5b		 pop	 ebx
  0012d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00132	8b e5		 mov	 esp, ebp
  00134	5d		 pop	 ebp
  00135	c3		 ret	 0
?CreateToolTips@CXColourPopup@@IAEXXZ ENDP		; CXColourPopup::CreateToolTips
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ?SetWindowSize@CXColourPopup@@IAEXXZ
_TEXT	SEGMENT
_dc$5 = -412						; size = 20
_size$6 = -392						; size = 8
_TextSize$$sroa$354$1$ = -384				; size = 4
_TextSize$$sroa$355$1$ = -380				; size = 4
_ncm$7 = -376						; size = 344
_rect$ = -32						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?SetWindowSize@CXColourPopup@@IAEXXZ PROC		; CXColourPopup::SetWindowSize, COMDAT
; _this$ = ecx

; 551  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetWindowSize@CXColourPopup@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 90 01 00
	00		 sub	 esp, 400		; 00000190H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b d9		 mov	 ebx, ecx

; 555  : 	if (m_bShowCustom)

  00030	83 bb a8 00 00
	00 00		 cmp	 DWORD PTR [ebx+168], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 304  : 	cx = 0;

  00037	c7 85 84 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _TextSize$$sroa$355$1$[ebp], 0

; 305  : 	cy = 0;

  00041	c7 85 80 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _TextSize$$sroa$354$1$[ebp], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 555  : 	if (m_bShowCustom)

  0004b	0f 84 c2 00 00
	00		 je	 $LN2@SetWindowS

; 558  : 		if (m_Font.GetSafeHandle() == NULL)

  00051	8d b3 e0 00 00
	00		 lea	 esi, DWORD PTR [ebx+224]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 68   : 	{ return this == NULL ? NULL : m_hObject; }

  00057	85 f6		 test	 esi, esi
  00059	74 06		 je	 SHORT $LN49@SetWindowS
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 558  : 		if (m_Font.GetSafeHandle() == NULL)

  0005b	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  0005f	75 32		 jne	 SHORT $LN3@SetWindowS
$LN49@SetWindowS:

; 559  : 		{
; 560  : 			NONCLIENTMETRICS ncm;
; 561  : 			ncm.cbSize = sizeof(NONCLIENTMETRICS);
; 562  : 			VERIFY(SystemParametersInfo(SPI_GETNONCLIENTMETRICS,

  00061	6a 00		 push	 0
  00063	8d 85 88 fe ff
	ff		 lea	 eax, DWORD PTR _ncm$7[ebp]
  00069	c7 85 88 fe ff
	ff 58 01 00 00	 mov	 DWORD PTR _ncm$7[ebp], 344 ; 00000158H
  00073	50		 push	 eax
  00074	68 58 01 00 00	 push	 344			; 00000158H
  00079	6a 29		 push	 41			; 00000029H
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SystemParametersInfoA@16
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 157  : 	{ return Attach(::CreateFontIndirect(lpLogFont)); }

  00081	8d 45 a0	 lea	 eax, DWORD PTR _ncm$7[ebp+280]
  00084	50		 push	 eax
  00085	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFontIndirectA@4
  0008b	50		 push	 eax
  0008c	8b ce		 mov	 ecx, esi
  0008e	e8 00 00 00 00	 call	 ?Attach@CGdiObject@@QAEHPAX@Z ; CGdiObject::Attach
$LN3@SetWindowS:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 568  : 		CClientDC dc(this);

  00093	53		 push	 ebx
  00094	8d 8d 64 fe ff
	ff		 lea	 ecx, DWORD PTR _dc$5[ebp]
  0009a	e8 00 00 00 00	 call	 ??0CClientDC@@QAE@PAVCWnd@@@Z ; CClientDC::CClientDC

; 569  : 		CFont * pOldFont = (CFont *) dc.SelectObject(&m_Font);

  0009f	56		 push	 esi
  000a0	8d 8d 64 fe ff
	ff		 lea	 ecx, DWORD PTR _dc$5[ebp]
  000a6	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000ad	e8 00 00 00 00	 call	 ?SelectObject@CDC@@UAEPAVCFont@@PAV2@@Z ; CDC::SelectObject
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

  000b2	8b 8b ac 00 00
	00		 mov	 ecx, DWORD PTR [ebx+172]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 569  : 		CFont * pOldFont = (CFont *) dc.SelectObject(&m_Font);

  000b8	8b f8		 mov	 edi, eax

; 570  : 		TextSize = dc.GetTextExtent(m_strCustomText)

  000ba	8b b3 94 00 00
	00		 mov	 esi, DWORD PTR [ebx+148]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 639  : 		VERIFY(::GetTextExtentPoint32(m_hAttribDC, str, (int)str.GetLength(), &size));

  000c0	8d 85 78 fe ff
	ff		 lea	 eax, DWORD PTR _size$6[ebp]
  000c6	50		 push	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 570  : 		TextSize = dc.GetTextExtent(m_strCustomText)

  000c7	03 f6		 add	 esi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 639  : 		VERIFY(::GetTextExtentPoint32(m_hAttribDC, str, (int)str.GetLength(), &size));

  000c9	ff 71 f4	 push	 DWORD PTR [ecx-12]
  000cc	51		 push	 ecx
  000cd	ff b5 6c fe ff
	ff		 push	 DWORD PTR _dc$5[ebp+8]
  000d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTextExtentPoint32A@16
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 364  : 	return CSize(cx + size.cx, cy + size.cy);

  000d9	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR _size$6[ebp+4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 572  : 		dc.SelectObject(pOldFont);

  000df	8d 8d 64 fe ff
	ff		 lea	 ecx, DWORD PTR _dc$5[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 364  : 	return CSize(cx + size.cx, cy + size.cy);

  000e5	03 c6		 add	 eax, esi
  000e7	89 85 80 fe ff
	ff		 mov	 DWORD PTR _TextSize$$sroa$354$1$[ebp], eax
  000ed	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR _size$6[ebp]
  000f3	03 c6		 add	 eax, esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 572  : 		dc.SelectObject(pOldFont);

  000f5	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 364  : 	return CSize(cx + size.cx, cy + size.cy);

  000f6	89 85 84 fe ff
	ff		 mov	 DWORD PTR _TextSize$$sroa$355$1$[ebp], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 572  : 		dc.SelectObject(pOldFont);

  000fc	e8 00 00 00 00	 call	 ?SelectObject@CDC@@UAEPAVCFont@@PAV2@@Z ; CDC::SelectObject

; 573  : 	}

  00101	8d 8d 64 fe ff
	ff		 lea	 ecx, DWORD PTR _dc$5[ebp]
  00107	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0010e	e8 00 00 00 00	 call	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC
$LN2@SetWindowS:

; 574  : 
; 575  : 	// Get the number of columns and rows
; 576  : 	m_nNumColumns = 8;
; 577  : 	m_nNumRows = (m_nNumColors / m_nNumColumns);

  00113	8b 8b 84 00 00
	00		 mov	 ecx, DWORD PTR [ebx+132]
  00119	8b c1		 mov	 eax, ecx
  0011b	99		 cdq
  0011c	83 e2 07	 and	 edx, 7
  0011f	c7 83 88 00 00
	00 08 00 00 00	 mov	 DWORD PTR [ebx+136], 8
  00129	03 c2		 add	 eax, edx
  0012b	c1 f8 03	 sar	 eax, 3
  0012e	89 83 8c 00 00
	00		 mov	 DWORD PTR [ebx+140], eax

; 578  : 	if (m_nNumColors % m_nNumColumns)

  00134	81 e1 07 00 00
	80		 and	 ecx, -2147483641	; 80000007H
  0013a	79 07		 jns	 SHORT $LN52@SetWindowS
  0013c	49		 dec	 ecx
  0013d	83 c9 f8	 or	 ecx, -8			; fffffff8H
  00140	83 c1 01	 add	 ecx, 1
$LN52@SetWindowS:
  00143	74 07		 je	 SHORT $LN4@SetWindowS

; 579  : 		m_nNumRows++;

  00145	40		 inc	 eax
  00146	89 83 8c 00 00
	00		 mov	 DWORD PTR [ebx+140], eax
$LN4@SetWindowS:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0014c	8d 45 e0	 lea	 eax, DWORD PTR _rect$[ebp]
  0014f	0f 57 c0	 xorps	 xmm0, xmm0
  00152	50		 push	 eax
  00153	ff 73 20	 push	 DWORD PTR [ebx+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00156	0f 11 45 e0	 movups	 XMMWORD PTR _rect$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0015a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 585  : 	m_WindowRect.SetRect(rect.left, rect.top,

  00160	8b bb 90 00 00
	00		 mov	 edi, DWORD PTR [ebx+144]
  00166	8b 83 8c 00 00
	00		 mov	 eax, DWORD PTR [ebx+140]
  0016c	8b b3 94 00 00
	00		 mov	 esi, DWORD PTR [ebx+148]
  00172	8b 8b 88 00 00
	00		 mov	 ecx, DWORD PTR [ebx+136]
  00178	03 f6		 add	 esi, esi
  0017a	8b 55 e4	 mov	 edx, DWORD PTR _rect$[ebp+4]
  0017d	0f af c7	 imul	 eax, edi
  00180	0f af cf	 imul	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 657  : 	::SetRect(this, x1, y1, x2, y2);

  00183	8d bb c0 00 00
	00		 lea	 edi, DWORD PTR [ebx+192]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 585  : 	m_WindowRect.SetRect(rect.left, rect.top,

  00189	03 c6		 add	 eax, esi
  0018b	03 c2		 add	 eax, edx
  0018d	03 ce		 add	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 657  : 	::SetRect(this, x1, y1, x2, y2);

  0018f	50		 push	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 585  : 	m_WindowRect.SetRect(rect.left, rect.top,

  00190	8b 45 e0	 mov	 eax, DWORD PTR _rect$[ebp]
  00193	03 c8		 add	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 657  : 	::SetRect(this, x1, y1, x2, y2);

  00195	51		 push	 ecx
  00196	52		 push	 edx
  00197	50		 push	 eax
  00198	57		 push	 edi
  00199	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 591  : 	if (m_bShowCustom)

  0019f	83 bb a8 00 00
	00 00		 cmp	 DWORD PTR [ebx+168], 0
  001a6	0f 84 82 00 00
	00		 je	 $LN5@SetWindowS
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  001ac	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  001af	8b 0f		 mov	 ecx, DWORD PTR [edi]
  001b1	2b c1		 sub	 eax, ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 594  : 		if (TextSize.cx > m_WindowRect.Width())

  001b3	8b 95 84 fe ff
	ff		 mov	 edx, DWORD PTR _TextSize$$sroa$355$1$[ebp]
  001b9	3b d0		 cmp	 edx, eax
  001bb	7e 0b		 jle	 SHORT $LN50@SetWindowS

; 595  : 			m_WindowRect.right = m_WindowRect.left + TextSize.cx;

  001bd	8d 34 11	 lea	 esi, DWORD PTR [ecx+edx]
  001c0	89 b3 c8 00 00
	00		 mov	 DWORD PTR [ebx+200], esi
  001c6	eb 06		 jmp	 SHORT $LN6@SetWindowS
$LN50@SetWindowS:
  001c8	8b b3 c8 00 00
	00		 mov	 esi, DWORD PTR [ebx+200]
$LN6@SetWindowS:

; 596  : 		TextSize.cx = m_WindowRect.Width() - 2 * m_nMargin;

  001ce	8b 93 94 00 00
	00		 mov	 edx, DWORD PTR [ebx+148]
  001d4	8d 04 12	 lea	 eax, DWORD PTR [edx+edx]
  001d7	2b f0		 sub	 esi, eax

; 599  : 		m_TextRect.SetRect(m_nMargin,

  001d9	8b 83 90 00 00
	00		 mov	 eax, DWORD PTR [ebx+144]
  001df	2b f1		 sub	 esi, ecx
  001e1	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  001e4	8d 0c 42	 lea	 ecx, DWORD PTR [edx+eax*2]
  001e7	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR _TextSize$$sroa$354$1$[ebp]
  001ed	03 c1		 add	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 657  : 	::SetRect(this, x1, y1, x2, y2);

  001ef	50		 push	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 599  : 		m_TextRect.SetRect(m_nMargin,

  001f0	8d 04 16	 lea	 eax, DWORD PTR [esi+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 657  : 	::SetRect(this, x1, y1, x2, y2);

  001f3	50		 push	 eax
  001f4	51		 push	 ecx
  001f5	52		 push	 edx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 599  : 		m_TextRect.SetRect(m_nMargin,

  001f6	8d 83 b0 00 00
	00		 lea	 eax, DWORD PTR [ebx+176]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 657  : 	::SetRect(this, x1, y1, x2, y2);

  001fc	50		 push	 eax
  001fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 603  : 		m_DividerRect.SetRect(m_nMargin,

  00203	8b 8b 90 00 00
	00		 mov	 ecx, DWORD PTR [ebx+144]
  00209	8b 93 94 00 00
	00		 mov	 edx, DWORD PTR [ebx+148]
  0020f	8d 04 89	 lea	 eax, DWORD PTR [ecx+ecx*4]
  00212	8d 04 42	 lea	 eax, DWORD PTR [edx+eax*2]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 657  : 	::SetRect(this, x1, y1, x2, y2);

  00215	50		 push	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 603  : 		m_DividerRect.SetRect(m_nMargin,

  00216	8d 04 16	 lea	 eax, DWORD PTR [esi+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 657  : 	::SetRect(this, x1, y1, x2, y2);

  00219	50		 push	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 603  : 		m_DividerRect.SetRect(m_nMargin,

  0021a	8d 04 ca	 lea	 eax, DWORD PTR [edx+ecx*8]
  0021d	03 c1		 add	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 657  : 	::SetRect(this, x1, y1, x2, y2);

  0021f	50		 push	 eax
  00220	52		 push	 edx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 603  : 		m_DividerRect.SetRect(m_nMargin,

  00221	8d 83 d0 00 00
	00		 lea	 eax, DWORD PTR [ebx+208]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 657  : 	::SetRect(this, x1, y1, x2, y2);

  00227	50		 push	 eax
  00228	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
$LN5@SetWindowS:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 73   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  0022e	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  00231	8b cb		 mov	 ecx, ebx
  00233	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00236	8b 37		 mov	 esi, DWORD PTR [edi]
  00238	2b c2		 sub	 eax, edx
  0023a	6a 01		 push	 1
  0023c	50		 push	 eax
  0023d	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00240	2b c6		 sub	 eax, esi
  00242	50		 push	 eax
  00243	52		 push	 edx
  00244	56		 push	 esi
  00245	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 611  : }

  0024a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0024d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00254	59		 pop	 ecx
  00255	5f		 pop	 edi
  00256	5e		 pop	 esi
  00257	5b		 pop	 ebx
  00258	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0025b	33 cd		 xor	 ecx, ebp
  0025d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00262	8b e5		 mov	 esp, ebp
  00264	5d		 pop	 ebp
  00265	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetWindowSize@CXColourPopup@@IAEXXZ$0:
  00000	8d 8d 64 fe ff
	ff		 lea	 ecx, DWORD PTR _dc$5[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
__ehhandler$?SetWindowSize@CXColourPopup@@IAEXXZ:
  00010	90		 npad	 1
  00011	90		 npad	 1
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a 60 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-416]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetWindowSize@CXColourPopup@@IAEXXZ
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetWindowSize@CXColourPopup@@IAEXXZ ENDP		; CXColourPopup::SetWindowSize
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ?GetCellRect@CXColourPopup@@IAEHHHABQAUtagRECT@@@Z
_TEXT	SEGMENT
_row$ = 8						; size = 4
_col$ = 12						; size = 4
_rect$ = 16						; size = 4
?GetCellRect@CXColourPopup@@IAEHHHABQAUtagRECT@@@Z PROC	; CXColourPopup::GetCellRect, COMDAT
; _this$ = ecx

; 532  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 533  : 	if (row < 0 || row >= m_nNumRows || col < 0 || col >= m_nNumColumns)

  00005	8b 7d 08	 mov	 edi, DWORD PTR _row$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	85 ff		 test	 edi, edi
  0000c	78 6c		 js	 SHORT $LN3@GetCellRec
  0000e	3b be 8c 00 00
	00		 cmp	 edi, DWORD PTR [esi+140]
  00014	7d 64		 jge	 SHORT $LN3@GetCellRec
  00016	8b 45 0c	 mov	 eax, DWORD PTR _col$[ebp]
  00019	85 c0		 test	 eax, eax
  0001b	78 5d		 js	 SHORT $LN3@GetCellRec
  0001d	3b 86 88 00 00
	00		 cmp	 eax, DWORD PTR [esi+136]
  00023	7d 55		 jge	 SHORT $LN3@GetCellRec

; 535  : 
; 536  : 	rect->left = col * m_nBoxSize + m_nMargin;

  00025	8b 8e 90 00 00
	00		 mov	 ecx, DWORD PTR [esi+144]
  0002b	8b 55 10	 mov	 edx, DWORD PTR _rect$[ebp]
  0002e	0f af c8	 imul	 ecx, eax
  00031	8b 02		 mov	 eax, DWORD PTR [edx]
  00033	03 8e 94 00 00
	00		 add	 ecx, DWORD PTR [esi+148]
  00039	89 08		 mov	 DWORD PTR [eax], ecx

; 537  : 	rect->top  = row * m_nBoxSize + m_nMargin;

  0003b	8b 8e 90 00 00
	00		 mov	 ecx, DWORD PTR [esi+144]
  00041	8b 02		 mov	 eax, DWORD PTR [edx]
  00043	0f af cf	 imul	 ecx, edi
  00046	03 8e 94 00 00
	00		 add	 ecx, DWORD PTR [esi+148]
  0004c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 538  : 
; 539  : 	rect->right = rect->left + m_nBoxSize;

  0004f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00051	8b 01		 mov	 eax, DWORD PTR [ecx]
  00053	03 86 90 00 00
	00		 add	 eax, DWORD PTR [esi+144]
  00059	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 540  : 	rect->bottom = rect->top + m_nBoxSize;

  0005c	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0005e	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00061	03 86 90 00 00
	00		 add	 eax, DWORD PTR [esi+144]
  00067	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 541  : 
; 542  : 	if (row == DIVIDER_LINE_ROW)

  0006a	83 ff 09	 cmp	 edi, 9
  0006d	74 0b		 je	 SHORT $LN3@GetCellRec

; 543  : 		return FALSE;
; 544  : 	else
; 545  : 		return TRUE;

  0006f	5f		 pop	 edi
  00070	b8 01 00 00 00	 mov	 eax, 1

; 546  : }

  00075	5e		 pop	 esi
  00076	5d		 pop	 ebp
  00077	c2 0c 00	 ret	 12			; 0000000cH
$LN3@GetCellRec:
  0007a	5f		 pop	 edi

; 534  : 		return FALSE;

  0007b	33 c0		 xor	 eax, eax

; 546  : }

  0007d	5e		 pop	 esi
  0007e	5d		 pop	 ebp
  0007f	c2 0c 00	 ret	 12			; 0000000cH
?GetCellRect@CXColourPopup@@IAEHHHABQAUtagRECT@@@Z ENDP	; CXColourPopup::GetCellRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ?Init@CXColourPopup@@IAEXXZ
_TEXT	SEGMENT
?Init@CXColourPopup@@IAEXXZ PROC			; CXColourPopup::Init, COMDAT
; _this$ = ecx

; 255  : {

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	57		 push	 edi

; 256  : 	m_nNumColors    = sizeof(m_crColors) / sizeof(ColorTableEntry);
; 257  : 	ASSERT(m_nNumColors == 104);
; 258  : 	m_nNumColumns   = 0;
; 259  : 	m_nNumRows      = 0;
; 260  : 	m_nBoxSize      = 18;
; 261  : 	m_nMargin       = ::GetSystemMetrics(SM_CXEDGE);

  00004	6a 2d		 push	 45			; 0000002dH
  00006	c7 83 84 00 00
	00 68 00 00 00	 mov	 DWORD PTR [ebx+132], 104 ; 00000068H
  00010	c7 83 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+136], 0
  0001a	c7 83 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+140], 0
  00024	c7 83 90 00 00
	00 12 00 00 00	 mov	 DWORD PTR [ebx+144], 18	; 00000012H
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4

; 262  : 	m_nCurrentRow   = -1;
; 263  : 	m_nCurrentCol   = -1;
; 264  : 	m_nSelectedRow  = -1;
; 265  : 	m_nSelectedCol  = -1;
; 266  : 	m_crColor       = m_crInitialColor = RGB(255, 255, 255);
; 267  : 	m_pCustomColors = NULL;
; 268  : 	m_bShowCustom   = TRUE;
; 269  : 	m_strCustomText = _T("Custom...");

  00034	68 00 00 00 00	 push	 OFFSET ??_C@_09IANHLED@Custom?4?4?4@
  00039	8d 8b ac 00 00
	00		 lea	 ecx, DWORD PTR [ebx+172]
  0003f	89 83 94 00 00
	00		 mov	 DWORD PTR [ebx+148], eax
  00045	c7 83 98 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [ebx+152], -1
  0004f	c7 83 9c 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [ebx+156], -1
  00059	c7 83 a0 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [ebx+160], -1
  00063	c7 83 a4 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [ebx+164], -1
  0006d	c7 83 e8 00 00
	00 ff ff ff 00	 mov	 DWORD PTR [ebx+232], 16777215 ; 00ffffffH
  00077	c7 83 ec 00 00
	00 ff ff ff 00	 mov	 DWORD PTR [ebx+236], 16777215 ; 00ffffffH
  00081	c7 83 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+128], 0
  0008b	c7 83 a8 00 00
	00 01 00 00 00	 mov	 DWORD PTR [ebx+168], 1
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z

; 270  : 	m_pParent       = NULL;
; 271  : 
; 272  : 	// Make sure the color square is at least 5 x 5;
; 273  : 	if (m_nBoxSize - 2 * m_nMargin - 2 < 5)

  0009b	8b 8b 94 00 00
	00		 mov	 ecx, DWORD PTR [ebx+148]
  000a1	8b 83 90 00 00
	00		 mov	 eax, DWORD PTR [ebx+144]
  000a7	03 c9		 add	 ecx, ecx
  000a9	2b c1		 sub	 eax, ecx
  000ab	c7 83 90 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+400], 0
  000b5	83 e8 02	 sub	 eax, 2
  000b8	83 f8 05	 cmp	 eax, 5
  000bb	7d 09		 jge	 SHORT $LN5@Init

; 274  : 		m_nBoxSize = 5 + 2 * m_nMargin + 2;

  000bd	8d 41 07	 lea	 eax, DWORD PTR [ecx+7]
  000c0	89 83 90 00 00
	00		 mov	 DWORD PTR [ebx+144], eax
$LN5@Init:

; 275  : 
; 276  : 	// set system colors
; 277  : 	for (int i = 0; i < m_nNumColors; i++)

  000c6	33 ff		 xor	 edi, edi
  000c8	39 bb 84 00 00
	00		 cmp	 DWORD PTR [ebx+132], edi
  000ce	7e 24		 jle	 SHORT $LN3@Init
  000d0	56		 push	 esi
  000d1	be 00 00 00 00	 mov	 esi, OFFSET ?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A ; CXColourPopup::m_crColors
$LL4@Init:

; 278  : 		if (m_crColors[i].nSystemColor != -1)

  000d6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000d9	83 f8 ff	 cmp	 eax, -1
  000dc	74 09		 je	 SHORT $LN2@Init

; 279  : 			m_crColors[i].crColor = GetSysColor(m_crColors[i].nSystemColor);

  000de	50		 push	 eax
  000df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSysColor@4
  000e5	89 06		 mov	 DWORD PTR [esi], eax
$LN2@Init:

; 275  : 
; 276  : 	// set system colors
; 277  : 	for (int i = 0; i < m_nNumColors; i++)

  000e7	47		 inc	 edi
  000e8	83 c6 0c	 add	 esi, 12			; 0000000cH
  000eb	3b bb 84 00 00
	00		 cmp	 edi, DWORD PTR [ebx+132]
  000f1	7c e3		 jl	 SHORT $LL4@Init
  000f3	5e		 pop	 esi
$LN3@Init:
  000f4	5f		 pop	 edi

; 280  : }

  000f5	5b		 pop	 ebx
  000f6	c3		 ret	 0
?Init@CXColourPopup@@IAEXXZ ENDP			; CXColourPopup::Init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ?PreTranslateMessage@CXColourPopup@@UAEHPAUtagMSG@@@Z
_TEXT	SEGMENT
_pMsg$ = 8						; size = 4
?PreTranslateMessage@CXColourPopup@@UAEHPAUtagMSG@@@Z PROC ; CXColourPopup::PreTranslateMessage, COMDAT
; _this$ = ecx

; 331  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl

; 429  : 	{ ASSERT(::IsWindow(m_hWnd));  ::SendMessage(m_hWnd, TTM_RELAYEVENT, 0, (LPARAM)lpMsg); }

  00004	ff 75 08	 push	 DWORD PTR _pMsg$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 331  : {

  00007	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl

; 429  : 	{ ASSERT(::IsWindow(m_hWnd));  ::SendMessage(m_hWnd, TTM_RELAYEVENT, 0, (LPARAM)lpMsg); }

  00009	6a 00		 push	 0
  0000b	68 07 04 00 00	 push	 1031			; 00000407H
  00010	ff b7 10 01 00
	00		 push	 DWORD PTR [edi+272]
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 333  : 	return CWnd::PreTranslateMessage(pMsg);

  0001c	ff 75 08	 push	 DWORD PTR _pMsg$[ebp]
  0001f	8b cf		 mov	 ecx, edi
  00021	e8 00 00 00 00	 call	 ?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z ; CWnd::PreTranslateMessage
  00026	5f		 pop	 edi

; 334  : }

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?PreTranslateMessage@CXColourPopup@@UAEHPAUtagMSG@@@Z ENDP ; CXColourPopup::PreTranslateMessage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ?Create@CXColourPopup@@QAEHVCPoint@@KPAVCWnd@@PBD@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
_szClassName$ = -40					; size = 4
_szCustomText$GSCopy$1$ = -36				; size = 4
_row$1$ = -36						; size = 4
_rect$3 = -32						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 8
_crColor$ = 16						; size = 4
_pParentWnd$ = 20					; size = 4
_szCustomText$ = 24					; size = 4
?Create@CXColourPopup@@QAEHVCPoint@@KPAVCWnd@@PBD@Z PROC ; CXColourPopup::Create, COMDAT
; _this$ = ecx

; 294  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Create@CXColourPopup@@QAEHVCPoint@@KPAVCWnd@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f9		 mov	 edi, ecx
  0002c	8b 45 18	 mov	 eax, DWORD PTR _szCustomText$[ebp]
  0002f	8b 75 14	 mov	 esi, DWORD PTR _pParentWnd$[ebp]

; 295  : 	ASSERT(pParentWnd && ::IsWindow(pParentWnd->GetSafeHwnd()));
; 296  : 
; 297  : 	m_pParent  = pParentWnd;
; 298  : 	m_crColor  = m_crInitialColor = crColor;
; 299  : 
; 300  : 	// Get the class name and create the window
; 301  : 	CString szClassName = AfxRegisterWndClass(

  00032	6a 00		 push	 0
  00034	89 45 dc	 mov	 DWORD PTR _szCustomText$GSCopy$1$[ebp], eax
  00037	8b 45 10	 mov	 eax, DWORD PTR _crColor$[ebp]
  0003a	6a 01		 push	 1
  0003c	89 b7 90 01 00
	00		 mov	 DWORD PTR [edi+400], esi
  00042	89 87 e8 00 00
	00		 mov	 DWORD PTR [edi+232], eax
  00048	89 87 ec 00 00
	00		 mov	 DWORD PTR [edi+236], eax
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetStockObject@4
  00054	50		 push	 eax
  00055	6a 00		 push	 0
  00057	68 43 08 00 00	 push	 2115			; 00000843H
  0005c	e8 00 00 00 00	 call	 ?AfxRegisterWndClass@@YGPBDIPAUHICON__@@PAUHBRUSH__@@0@Z ; AfxRegisterWndClass
  00061	50		 push	 eax
  00062	8d 4d d8	 lea	 ecx, DWORD PTR _szClassName$[ebp]
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  0006b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 25   : 	{ return this == NULL ? NULL : m_hWnd; }

  00072	85 f6		 test	 esi, esi
  00074	75 04		 jne	 SHORT $LN9@Create
  00076	33 c0		 xor	 eax, eax
  00078	eb 03		 jmp	 SHORT $LN10@Create
$LN9@Create:
  0007a	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
$LN10@Create:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 305  : 	if (!CWnd::CreateEx(0, szClassName, _T(""), WS_VISIBLE | WS_POPUP,

  0007d	6a 00		 push	 0
  0007f	6a 00		 push	 0
  00081	50		 push	 eax
  00082	6a 64		 push	 100			; 00000064H
  00084	6a 64		 push	 100			; 00000064H
  00086	ff 75 0c	 push	 DWORD PTR _p$[ebp+4]
  00089	8b cf		 mov	 ecx, edi
  0008b	ff 75 08	 push	 DWORD PTR _p$[ebp]
  0008e	68 00 00 00 90	 push	 -1879048192		; 90000000H
  00093	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00098	ff 75 d8	 push	 DWORD PTR _szClassName$[ebp]
  0009b	6a 00		 push	 0
  0009d	e8 00 00 00 00	 call	 ?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z ; CWnd::CreateEx
  000a2	85 c0		 test	 eax, eax
  000a4	75 07		 jne	 SHORT $LN2@Create
  000a6	33 f6		 xor	 esi, esi
  000a8	e9 09 01 00 00	 jmp	 $LN6@Create
$LN2@Create:

; 306  : 			p.x, p.y, 100, 100, // size updated soon
; 307  : 		pParentWnd->GetSafeHwnd(), 0, NULL))
; 308  : 	{
; 309  : 		return FALSE;
; 310  : 	}
; 311  : 
; 312  : 	// Store the Custom text
; 313  : 	if (szCustomText != NULL)

  000ad	8b 45 dc	 mov	 eax, DWORD PTR _szCustomText$GSCopy$1$[ebp]
  000b0	85 c0		 test	 eax, eax
  000b2	74 0d		 je	 SHORT $LN3@Create

; 314  : 		m_strCustomText = szCustomText;

  000b4	50		 push	 eax
  000b5	8d 8f ac 00 00
	00		 lea	 ecx, DWORD PTR [edi+172]
  000bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
$LN3@Create:

; 315  : 
; 316  : 	// Set the window size
; 317  : 	SetWindowSize();

  000c1	8b cf		 mov	 ecx, edi
  000c3	e8 00 00 00 00	 call	 ?SetWindowSize@CXColourPopup@@IAEXXZ ; CXColourPopup::SetWindowSize

; 618  : 	if (!m_ToolTip.Create(this))

  000c8	8b 87 f0 00 00
	00		 mov	 eax, DWORD PTR [edi+240]
  000ce	8d b7 f0 00 00
	00		 lea	 esi, DWORD PTR [edi+240]
  000d4	6a 00		 push	 0
  000d6	57		 push	 edi
  000d7	8b ce		 mov	 ecx, esi
  000d9	8b 80 6c 01 00
	00		 mov	 eax, DWORD PTR [eax+364]
  000df	ff d0		 call	 eax
  000e1	85 c0		 test	 eax, eax
  000e3	0f 84 b9 00 00
	00		 je	 $LN15@Create

; 619  : 		return;
; 620  : 
; 621  : 	// Add a tool for each cell
; 622  : 	for (int row = 0; row < m_nNumRows; row++)

  000e9	33 c0		 xor	 eax, eax
  000eb	89 45 dc	 mov	 DWORD PTR _row$1$[ebp], eax
  000ee	39 87 8c 00 00
	00		 cmp	 DWORD PTR [edi+140], eax
  000f4	0f 8e a8 00 00
	00		 jle	 $LN15@Create
  000fa	66 0f 1f 44 00
	00		 npad	 6
$LL16@Create:

; 623  : 	{
; 624  : 		if (row == DIVIDER_LINE_ROW)

  00100	83 f8 09	 cmp	 eax, 9
  00103	0f 84 89 00 00
	00		 je	 $LN14@Create

; 625  : 			continue;
; 626  : 
; 627  : 		if (row == CUSTOM_BUTTON_ROW)

  00109	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0010c	75 1b		 jne	 SHORT $LN22@Create

; 628  : 		{
; 629  : 			m_ToolTip.AddTool(this, _T("Selects a custom color"), m_TextRect, 1);

  0010e	6a 01		 push	 1
  00110	8d 87 b0 00 00
	00		 lea	 eax, DWORD PTR [edi+176]
  00116	8b ce		 mov	 ecx, esi
  00118	50		 push	 eax
  00119	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@JABHPIAH@Selects?5a?5custom?5color@
  0011e	57		 push	 edi
  0011f	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 630  : 			continue;

  00124	8b 45 dc	 mov	 eax, DWORD PTR _row$1$[ebp]
  00127	eb 69		 jmp	 SHORT $LN14@Create
$LN22@Create:

; 631  : 		}
; 632  : 
; 633  : 		for (int col = 0; col < m_nNumColumns; col++)

  00129	33 f6		 xor	 esi, esi
  0012b	39 b7 88 00 00
	00		 cmp	 DWORD PTR [edi+136], esi
  00131	7e 59		 jle	 SHORT $LN48@Create

; 636  : 			if (!GetCellRect(row, col, rect))

  00133	8d 4d e0	 lea	 ecx, DWORD PTR _rect$3[ebp]
  00136	89 4d d4	 mov	 DWORD PTR $T2[ebp], ecx
  00139	0f 1f 80 00 00
	00 00		 npad	 7
$LL19@Create:
  00140	8d 4d d4	 lea	 ecx, DWORD PTR $T2[ebp]
  00143	0f 57 c0	 xorps	 xmm0, xmm0
  00146	51		 push	 ecx
  00147	56		 push	 esi
  00148	50		 push	 eax
  00149	8b cf		 mov	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  0014b	0f 11 45 e0	 movups	 XMMWORD PTR _rect$3[ebp], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 636  : 			if (!GetCellRect(row, col, rect))

  0014f	e8 00 00 00 00	 call	 ?GetCellRect@CXColourPopup@@IAEHHHABQAUtagRECT@@@Z ; CXColourPopup::GetCellRect
  00154	85 c0		 test	 eax, eax
  00156	74 28		 je	 SHORT $LN17@Create

; 640  : 			VERIFY(m_ToolTip.AddTool(this, GetColorName(row, col), rect, 1));

  00158	6a 01		 push	 1
  0015a	8d 45 e0	 lea	 eax, DWORD PTR _rect$3[ebp]
  0015d	50		 push	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h

; 91   : 		return m_crColors[row * m_nNumColumns + col].szName;

  0015e	8b 87 88 00 00
	00		 mov	 eax, DWORD PTR [edi+136]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 640  : 			VERIFY(m_ToolTip.AddTool(this, GetColorName(row, col), rect, 1));

  00164	8d 8f f0 00 00
	00		 lea	 ecx, DWORD PTR [edi+240]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.h

; 91   : 		return m_crColors[row * m_nNumColumns + col].szName;

  0016a	0f af 45 dc	 imul	 eax, DWORD PTR _row$1$[ebp]
  0016e	03 c6		 add	 eax, esi
  00170	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 640  : 			VERIFY(m_ToolTip.AddTool(this, GetColorName(row, col), rect, 1));

  00173	ff 34 85 04 00
	00 00		 push	 DWORD PTR ?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A[eax*4+4]
  0017a	57		 push	 edi
  0017b	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool
$LN17@Create:

; 631  : 		}
; 632  : 
; 633  : 		for (int col = 0; col < m_nNumColumns; col++)

  00180	8b 45 dc	 mov	 eax, DWORD PTR _row$1$[ebp]
  00183	46		 inc	 esi
  00184	3b b7 88 00 00
	00		 cmp	 esi, DWORD PTR [edi+136]
  0018a	7c b4		 jl	 SHORT $LL19@Create
$LN48@Create:

; 619  : 		return;
; 620  : 
; 621  : 	// Add a tool for each cell
; 622  : 	for (int row = 0; row < m_nNumRows; row++)

  0018c	8d b7 f0 00 00
	00		 lea	 esi, DWORD PTR [edi+240]
$LN14@Create:
  00192	40		 inc	 eax
  00193	89 45 dc	 mov	 DWORD PTR _row$1$[ebp], eax
  00196	3b 87 8c 00 00
	00		 cmp	 eax, DWORD PTR [edi+140]
  0019c	0f 8c 5e ff ff
	ff		 jl	 $LL16@Create
$LN15@Create:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 163  : 	{ ASSERT(::IsWindow(m_hWnd)); return CWnd::FromHandle(::SetCapture(m_hWnd)); }

  001a2	ff 77 20	 push	 DWORD PTR [edi+32]
  001a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCapture@4
  001ab	50		 push	 eax
  001ac	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 325  : 	return TRUE;

  001b1	be 01 00 00 00	 mov	 esi, 1
$LN6@Create:
  001b6	8d 4d d8	 lea	 ecx, DWORD PTR _szClassName$[ebp]
  001b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  001bf	8b c6		 mov	 eax, esi

; 326  : }

  001c1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001c4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001cb	59		 pop	 ecx
  001cc	5f		 pop	 edi
  001cd	5e		 pop	 esi
  001ce	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001d1	33 cd		 xor	 ecx, ebp
  001d3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001d8	8b e5		 mov	 esp, ebp
  001da	5d		 pop	 ebp
  001db	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Create@CXColourPopup@@QAEHVCPoint@@KPAVCWnd@@PBD@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _szClassName$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
__ehhandler$?Create@CXColourPopup@@QAEHVCPoint@@KPAVCWnd@@PBD@Z:
  0000e	90		 npad	 1
  0000f	90		 npad	 1
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Create@CXColourPopup@@QAEHVCPoint@@KPAVCWnd@@PBD@Z
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Create@CXColourPopup@@QAEHVCPoint@@KPAVCWnd@@PBD@Z ENDP ; CXColourPopup::Create
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ??1CXColourPopup@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CXColourPopup@@UAE@XZ PROC				; CXColourPopup::~CXColourPopup, COMDAT
; _this$ = ecx

; 283  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CXColourPopup@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f9		 mov	 edi, ecx

; 284  : 	if (m_Font.GetSafeHandle())

  00026	8d b7 e0 00 00
	00		 lea	 esi, DWORD PTR [edi+224]
  0002c	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CXColourPopup@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 68   : 	{ return this == NULL ? NULL : m_hObject; }

  00032	85 f6		 test	 esi, esi
  00034	74 0d		 je	 SHORT $LN2@CXColourPo
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 284  : 	if (m_Font.GetSafeHandle())

  00036	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  0003a	74 07		 je	 SHORT $LN2@CXColourPo

; 285  : 		m_Font.DeleteObject();

  0003c	8b ce		 mov	 ecx, esi
  0003e	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject
$LN2@CXColourPo:

; 286  : }

  00043	8d 8f f0 00 00
	00		 lea	 ecx, DWORD PTR [edi+240]
  00049	e8 00 00 00 00	 call	 ??1CToolTipCtrl@@UAE@XZ	; CToolTipCtrl::~CToolTipCtrl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 155  : 	{ }

  0004e	8b ce		 mov	 ecx, esi
  00050	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CFont@@6B@
  00056	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 286  : }

  0005b	8d 8f ac 00 00
	00		 lea	 ecx, DWORD PTR [edi+172]
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00067	8b cf		 mov	 ecx, edi
  00069	e8 00 00 00 00	 call	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
  0006e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00071	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00078	59		 pop	 ecx
  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c3		 ret	 0
  0007f	cc		 int	 3
  00080	cc		 int	 3
  00081	cc		 int	 3
  00082	cc		 int	 3
  00083	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CXColourPopup@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CXColourPopup@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CXColourPopup@@UAE@XZ ENDP				; CXColourPopup::~CXColourPopup
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ??0CXColourPopup@@QAE@PAVCWnd@@VCPoint@@KPAKHHPBD@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pParentWnd$ = 8					; size = 4
_p$ = 12						; size = 8
_crColor$ = 20						; size = 4
_pCustomColors$ = 24					; size = 4
_nSelectedRow$ = 28					; size = 4
_nSelectedCol$ = 32					; size = 4
_szCustomText$ = 36					; size = 4
??0CXColourPopup@@QAE@PAVCWnd@@VCPoint@@KPAKHHPBD@Z PROC ; CXColourPopup::CXColourPopup, COMDAT
; _this$ = ecx

; 218  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CXColourPopup@@QAE@PAVCWnd@@VCPoint@@KPAKHHPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx
  00028	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  0002b	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd
  00030	8d 8e ac 00 00
	00		 lea	 ecx, DWORD PTR [esi+172]
  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CXColourPopup@@6B@
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00049	c7 86 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+176], 0

; 529  : 	top = 0;

  00053	c7 86 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+180], 0

; 530  : 	right = 0;

  0005d	c7 86 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+184], 0

; 531  : 	bottom = 0;

  00067	c7 86 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+188], 0

; 528  : 	left = 0;

  00071	c7 86 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+192], 0

; 529  : 	top = 0;

  0007b	c7 86 c4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+196], 0

; 530  : 	right = 0;

  00085	c7 86 c8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+200], 0

; 531  : 	bottom = 0;

  0008f	c7 86 cc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+204], 0

; 528  : 	left = 0;

  00099	c7 86 d0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+208], 0

; 529  : 	top = 0;

  000a3	c7 86 d4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+212], 0

; 530  : 	right = 0;

  000ad	c7 86 d8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+216], 0

; 531  : 	bottom = 0;

  000b7	c7 86 dc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+220], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 70   : 	{ m_hObject = NULL; }

  000c1	c7 86 e4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+228], 0

; 153  : 	{ }

  000cb	c7 86 e0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+224], OFFSET ??_7CFont@@6B@
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 218  : {

  000d5	8d 8e f0 00 00
	00		 lea	 ecx, DWORD PTR [esi+240]
  000db	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000df	e8 00 00 00 00	 call	 ??0CToolTipCtrl@@QAE@XZ	; CToolTipCtrl::CToolTipCtrl

; 219  : 	Init();

  000e4	8b ce		 mov	 ecx, esi
  000e6	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000ea	e8 00 00 00 00	 call	 ?Init@CXColourPopup@@IAEXXZ ; CXColourPopup::Init

; 220  : 
; 221  : 	m_nSelectedRow  = nSelectedRow;

  000ef	8b 45 1c	 mov	 eax, DWORD PTR _nSelectedRow$[ebp]

; 222  : 	m_nSelectedCol  = nSelectedCol;
; 223  : 	m_crColor       = m_crInitialColor = crColor;

  000f2	8b 7d 14	 mov	 edi, DWORD PTR _crColor$[ebp]
  000f5	8b 4d 20	 mov	 ecx, DWORD PTR _nSelectedCol$[ebp]

; 224  : 	m_pParent       = pParentWnd;

  000f8	8b 5d 08	 mov	 ebx, DWORD PTR _pParentWnd$[ebp]
  000fb	89 86 a0 00 00
	00		 mov	 DWORD PTR [esi+160], eax
  00101	89 8e a4 00 00
	00		 mov	 DWORD PTR [esi+164], ecx
  00107	89 be e8 00 00
	00		 mov	 DWORD PTR [esi+232], edi
  0010d	89 be ec 00 00
	00		 mov	 DWORD PTR [esi+236], edi
  00113	89 9e 90 01 00
	00		 mov	 DWORD PTR [esi+400], ebx

; 225  : 
; 226  : 	int i;
; 227  : 	if (nSelectedRow == -1 || nSelectedCol == -1)

  00119	83 f8 ff	 cmp	 eax, -1
  0011c	74 05		 je	 SHORT $LN9@CXColourPo
  0011e	83 f9 ff	 cmp	 ecx, -1
  00121	75 43		 jne	 SHORT $LN3@CXColourPo
$LN9@CXColourPo:

; 228  : 	{
; 229  : 		// no selection specified - look thru the color table for a match
; 230  : 		for (i = 0; i < m_nNumColors; i++)

  00123	8b 96 84 00 00
	00		 mov	 edx, DWORD PTR [esi+132]
  00129	33 c9		 xor	 ecx, ecx
  0012b	85 d2		 test	 edx, edx
  0012d	7e 37		 jle	 SHORT $LN3@CXColourPo
  0012f	b8 00 00 00 00	 mov	 eax, OFFSET ?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A
$LL4@CXColourPo:

; 231  : 		{
; 232  : 			if (m_crColors[i].crColor == crColor)

  00134	39 38		 cmp	 DWORD PTR [eax], edi
  00136	74 0a		 je	 SHORT $LN29@CXColourPo

; 228  : 	{
; 229  : 		// no selection specified - look thru the color table for a match
; 230  : 		for (i = 0; i < m_nNumColors; i++)

  00138	41		 inc	 ecx
  00139	83 c0 0c	 add	 eax, 12			; 0000000cH
  0013c	3b ca		 cmp	 ecx, edx
  0013e	7c f4		 jl	 SHORT $LL4@CXColourPo

; 231  : 		{
; 232  : 			if (m_crColors[i].crColor == crColor)

  00140	eb 24		 jmp	 SHORT $LN3@CXColourPo
$LN29@CXColourPo:

; 233  : 			{
; 234  : 				m_nSelectedRow = i / 8;

  00142	8b c1		 mov	 eax, ecx
  00144	99		 cdq
  00145	83 e2 07	 and	 edx, 7
  00148	03 c2		 add	 eax, edx
  0014a	c1 f8 03	 sar	 eax, 3
  0014d	89 86 a0 00 00
	00		 mov	 DWORD PTR [esi+160], eax

; 235  : 				m_nSelectedCol = i % 8;

  00153	81 e1 07 00 00
	80		 and	 ecx, -2147483641	; 80000007H
  00159	79 05		 jns	 SHORT $LN38@CXColourPo
  0015b	49		 dec	 ecx
  0015c	83 c9 f8	 or	 ecx, -8			; fffffff8H
  0015f	41		 inc	 ecx
$LN38@CXColourPo:
  00160	89 8e a4 00 00
	00		 mov	 DWORD PTR [esi+164], ecx
$LN3@CXColourPo:

; 236  : 				break;
; 237  : 			}
; 238  : 		}
; 239  : 	}
; 240  : 
; 241  : 	if (pCustomColors)

  00166	8b 45 18	 mov	 eax, DWORD PTR _pCustomColors$[ebp]
  00169	85 c0		 test	 eax, eax
  0016b	74 53		 je	 SHORT $LN34@CXColourPo

; 242  : 	{
; 243  : 		m_pCustomColors = pCustomColors;

  0016d	89 86 80 00 00
	00		 mov	 DWORD PTR [esi+128], eax
  00173	33 d2		 xor	 edx, edx
  00175	b8 2c 04 00 00	 mov	 eax, OFFSET ?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A+1068
  0017a	66 0f 1f 44 00
	00		 npad	 6
$LL7@CXColourPo:

; 244  : 
; 245  : 		for (i = 0; i < 16; i++)
; 246  : 		{
; 247  : 			m_crColors[FIRST_CUSTOM_ROW * 8 + i].crColor = m_pCustomColors[i];

  00180	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  00186	8d 52 10	 lea	 edx, DWORD PTR [edx+16]
  00189	8b 4c 0a f0	 mov	 ecx, DWORD PTR [edx+ecx-16]
  0018d	89 48 f4	 mov	 DWORD PTR [eax-12], ecx
  00190	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  00196	8b 4c 11 f4	 mov	 ecx, DWORD PTR [ecx+edx-12]
  0019a	89 08		 mov	 DWORD PTR [eax], ecx
  0019c	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  001a2	8b 4c 11 f8	 mov	 ecx, DWORD PTR [ecx+edx-8]
  001a6	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  001a9	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  001af	8b 4c 0a fc	 mov	 ecx, DWORD PTR [edx+ecx-4]
  001b3	89 48 18	 mov	 DWORD PTR [eax+24], ecx
  001b6	83 c0 30	 add	 eax, 48			; 00000030H
  001b9	3d ec 04 00 00	 cmp	 eax, OFFSET ?m_crColors@CXColourPopup@@1PAUColorTableEntry@@A+1260
  001be	7c c0		 jl	 SHORT $LL7@CXColourPo
$LN34@CXColourPo:

; 248  : 		}
; 249  : 	}
; 250  : 
; 251  : 	Create(p, crColor, pParentWnd, szCustomText);

  001c0	ff 75 24	 push	 DWORD PTR _szCustomText$[ebp]
  001c3	8b ce		 mov	 ecx, esi
  001c5	53		 push	 ebx
  001c6	57		 push	 edi
  001c7	ff 75 10	 push	 DWORD PTR _p$[ebp+4]
  001ca	ff 75 0c	 push	 DWORD PTR _p$[ebp]
  001cd	e8 00 00 00 00	 call	 ?Create@CXColourPopup@@QAEHVCPoint@@KPAVCWnd@@PBD@Z ; CXColourPopup::Create

; 252  : }

  001d2	8b c6		 mov	 eax, esi
  001d4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001d7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001de	59		 pop	 ecx
  001df	5f		 pop	 edi
  001e0	5e		 pop	 esi
  001e1	5b		 pop	 ebx
  001e2	8b e5		 mov	 esp, ebp
  001e4	5d		 pop	 ebp
  001e5	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CXColourPopup@@QAE@PAVCWnd@@VCPoint@@KPAKHHPBD@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
__unwindfunclet$??0CXColourPopup@@QAE@PAVCWnd@@VCPoint@@KPAKHHPBD@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  00011	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$??0CXColourPopup@@QAE@PAVCWnd@@VCPoint@@KPAKHHPBD@Z$2:
  00017	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00020	e9 00 00 00 00	 jmp	 ??1CFont@@UAE@XZ	; CFont::~CFont
__unwindfunclet$??0CXColourPopup@@QAE@PAVCWnd@@VCPoint@@KPAKHHPBD@Z$3:
  00025	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	81 c1 f0 00 00
	00		 add	 ecx, 240		; 000000f0H
  0002e	e9 00 00 00 00	 jmp	 ??1CToolTipCtrl@@UAE@XZ	; CToolTipCtrl::~CToolTipCtrl
  00033	cc		 int	 3
  00034	cc		 int	 3
  00035	cc		 int	 3
  00036	cc		 int	 3
  00037	cc		 int	 3
__ehhandler$??0CXColourPopup@@QAE@PAVCWnd@@VCPoint@@KPAKHHPBD@Z:
  00038	90		 npad	 1
  00039	90		 npad	 1
  0003a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00041	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00044	33 c8		 xor	 ecx, eax
  00046	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CXColourPopup@@QAE@PAVCWnd@@VCPoint@@KPAKHHPBD@Z
  00050	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CXColourPopup@@QAE@PAVCWnd@@VCPoint@@KPAKHHPBD@Z ENDP ; CXColourPopup::CXColourPopup
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ??0CXColourPopup@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CXColourPopup@@QAE@XZ PROC				; CXColourPopup::CXColourPopup, COMDAT
; _this$ = ecx

; 207  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CXColourPopup@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd
  0002e	8d 8e ac 00 00
	00		 lea	 ecx, DWORD PTR [esi+172]
  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CXColourPopup@@6B@
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00047	c7 86 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+176], 0

; 529  : 	top = 0;

  00051	c7 86 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+180], 0

; 530  : 	right = 0;

  0005b	c7 86 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+184], 0

; 531  : 	bottom = 0;

  00065	c7 86 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+188], 0

; 528  : 	left = 0;

  0006f	c7 86 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+192], 0

; 529  : 	top = 0;

  00079	c7 86 c4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+196], 0

; 530  : 	right = 0;

  00083	c7 86 c8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+200], 0

; 531  : 	bottom = 0;

  0008d	c7 86 cc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+204], 0

; 528  : 	left = 0;

  00097	c7 86 d0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+208], 0

; 529  : 	top = 0;

  000a1	c7 86 d4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+212], 0

; 530  : 	right = 0;

  000ab	c7 86 d8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+216], 0

; 531  : 	bottom = 0;

  000b5	c7 86 dc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+220], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 70   : 	{ m_hObject = NULL; }

  000bf	c7 86 e4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+228], 0

; 153  : 	{ }

  000c9	c7 86 e0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+224], OFFSET ??_7CFont@@6B@
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp

; 207  : {

  000d3	8d 8e f0 00 00
	00		 lea	 ecx, DWORD PTR [esi+240]
  000d9	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000dd	e8 00 00 00 00	 call	 ??0CToolTipCtrl@@QAE@XZ	; CToolTipCtrl::CToolTipCtrl

; 208  : 	Init();

  000e2	8b ce		 mov	 ecx, esi
  000e4	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000e8	e8 00 00 00 00	 call	 ?Init@CXColourPopup@@IAEXXZ ; CXColourPopup::Init

; 209  : }

  000ed	8b c6		 mov	 eax, esi
  000ef	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f9	59		 pop	 ecx
  000fa	5e		 pop	 esi
  000fb	8b e5		 mov	 esp, ebp
  000fd	5d		 pop	 ebp
  000fe	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CXColourPopup@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
__unwindfunclet$??0CXColourPopup@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  00011	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$??0CXColourPopup@@QAE@XZ$2:
  00017	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00020	e9 00 00 00 00	 jmp	 ??1CFont@@UAE@XZ	; CFont::~CFont
__unwindfunclet$??0CXColourPopup@@QAE@XZ$3:
  00025	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	81 c1 f0 00 00
	00		 add	 ecx, 240		; 000000f0H
  0002e	e9 00 00 00 00	 jmp	 ??1CToolTipCtrl@@UAE@XZ	; CToolTipCtrl::~CToolTipCtrl
  00033	cc		 int	 3
  00034	cc		 int	 3
  00035	cc		 int	 3
  00036	cc		 int	 3
  00037	cc		 int	 3
__ehhandler$??0CXColourPopup@@QAE@XZ:
  00038	90		 npad	 1
  00039	90		 npad	 1
  0003a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00041	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00044	33 c8		 xor	 ecx, eax
  00046	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CXColourPopup@@QAE@XZ
  00050	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CXColourPopup@@QAE@XZ ENDP				; CXColourPopup::CXColourPopup
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxdlgs.h
;	COMDAT ??1CColorDialog@@UAE@XZ
_TEXT	SEGMENT
??1CColorDialog@@UAE@XZ PROC				; CColorDialog::~CColorDialog, COMDAT
; _this$ = ecx

; 110  :     virtual ~CCommonDialog() {};

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CCommonDialog@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
??1CColorDialog@@UAE@XZ ENDP				; CColorDialog::~CColorDialog
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxdlgs.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCCommonDialog@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCommonDialog@@UAEPAXI@Z PROC			; CCommonDialog::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxdlgs.h

; 110  :     virtual ~CCommonDialog() {};

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CCommonDialog@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  00011	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00014	a8 01		 test	 al, 1
  00016	74 22		 je	 SHORT $LN12@scalar
  00018	a8 04		 test	 al, 4
  0001a	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
$LN3@scalar:
  0002c	68 a8 00 00 00	 push	 168			; 000000a8H
  00031	56		 push	 esi
  00032	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00037	83 c4 08	 add	 esp, 8
$LN12@scalar:
  0003a	8b c6		 mov	 eax, esi
  0003c	5e		 pop	 esi
  0003d	5d		 pop	 ebp
  0003e	c2 04 00	 ret	 4
??_GCCommonDialog@@UAEPAXI@Z ENDP			; CCommonDialog::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxdlgs.h
;	COMDAT ??1CCommonDialog@@UAE@XZ
_TEXT	SEGMENT
??1CCommonDialog@@UAE@XZ PROC				; CCommonDialog::~CCommonDialog, COMDAT
; _this$ = ecx

; 110  :     virtual ~CCommonDialog() {};

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CCommonDialog@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
??1CCommonDialog@@UAE@XZ ENDP				; CCommonDialog::~CCommonDialog
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
;	COMDAT ?Create@CDialog@@UAEHIPAVCWnd@@@Z
_TEXT	SEGMENT
_nIDTemplate$ = 8					; size = 4
_pParentWnd$ = 12					; size = 4
?Create@CDialog@@UAEHIPAVCWnd@@@Z PROC			; CDialog::Create, COMDAT
; _this$ = ecx

; 585  : 	{ return CDialog::Create(ATL_MAKEINTRESOURCE(nIDTemplate), pParentWnd); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	0f b7 45 08	 movzx	 eax, WORD PTR _nIDTemplate$[ebp]
  00007	89 45 08	 mov	 DWORD PTR _nIDTemplate$[ebp], eax
  0000a	5d		 pop	 ebp
  0000b	e9 00 00 00 00	 jmp	 ?Create@CDialog@@UAEHPBDPAVCWnd@@@Z ; CDialog::Create
?Create@CDialog@@UAEHIPAVCWnd@@@Z ENDP			; CDialog::Create
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
?EndModalState@CWnd@@UAEXXZ PROC			; CWnd::EndModalState, COMDAT
; _this$ = ecx

; 567  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	6a 01		 push	 1
  00002	ff 71 20	 push	 DWORD PTR [ecx+32]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  0000b	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
?BeginModalState@CWnd@@UAEXXZ PROC			; CWnd::BeginModalState, COMDAT
; _this$ = ecx

; 565  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	6a 00		 push	 0
  00002	ff 71 20	 push	 DWORD PTR [ecx+32]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  0000b	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC	; CWnd::DoDataExchange, COMDAT
; _this$ = ecx

; 561  : 	{ } // default does nothing

  00000	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCFont@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCFont@@UAEPAXI@Z PROC				; CFont::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 155  : 	{ }

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CFont@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  00011	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00014	a8 01		 test	 al, 1
  00016	74 1f		 je	 SHORT $LN12@scalar
  00018	a8 04		 test	 al, 4
  0001a	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
$LN3@scalar:
  0002c	6a 08		 push	 8
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00034	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00037	8b c6		 mov	 eax, esi
  00039	5e		 pop	 esi
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
??_GCFont@@UAEPAXI@Z ENDP				; CFont::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ??1CFont@@UAE@XZ
_TEXT	SEGMENT
??1CFont@@UAE@XZ PROC					; CFont::~CFont, COMDAT
; _this$ = ecx

; 155  : 	{ }

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CFont@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
??1CFont@@UAE@XZ ENDP					; CFont::~CFont
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCBrush@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBrush@@UAEPAXI@Z PROC				; CBrush::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 130  : 	{ }

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBrush@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  00011	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00014	a8 01		 test	 al, 1
  00016	74 1f		 je	 SHORT $LN12@scalar
  00018	a8 04		 test	 al, 4
  0001a	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
$LN3@scalar:
  0002c	6a 08		 push	 8
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00034	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00037	8b c6		 mov	 eax, esi
  00039	5e		 pop	 esi
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
??_GCBrush@@UAEPAXI@Z ENDP				; CBrush::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ??1CBrush@@UAE@XZ
_TEXT	SEGMENT
??1CBrush@@UAE@XZ PROC					; CBrush::~CBrush, COMDAT
; _this$ = ecx

; 130  : 	{ }

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBrush@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
??1CBrush@@UAE@XZ ENDP					; CBrush::~CBrush
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCPen@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCPen@@UAEPAXI@Z PROC				; CPen::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 106  : 	{ }

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CPen@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  00011	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00014	a8 01		 test	 al, 1
  00016	74 1f		 je	 SHORT $LN12@scalar
  00018	a8 04		 test	 al, 4
  0001a	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
$LN3@scalar:
  0002c	6a 08		 push	 8
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00034	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00037	8b c6		 mov	 eax, esi
  00039	5e		 pop	 esi
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
??_GCPen@@UAEPAXI@Z ENDP				; CPen::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ??1CPen@@UAE@XZ
_TEXT	SEGMENT
??1CPen@@UAE@XZ PROC					; CPen::~CPen, COMDAT
; _this$ = ecx

; 106  : 	{ }

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CPen@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
??1CPen@@UAE@XZ ENDP					; CPen::~CPen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGdiObject@@UAEPAXI@Z PROC				; CGdiObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  0000b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0000e	a8 01		 test	 al, 1
  00010	74 1f		 je	 SHORT $LN9@scalar
  00012	a8 04		 test	 al, 4
  00014	75 10		 jne	 SHORT $LN3@scalar

; 112  : 	{ ::operator delete(p); }

  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001c	83 c4 04	 add	 esp, 4
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
$LN3@scalar:
  00026	6a 08		 push	 8
  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002e	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00031	8b c6		 mov	 eax, esi
  00033	5e		 pop	 esi
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
??_GCGdiObject@@UAEPAXI@Z ENDP				; CGdiObject::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT
_pException$2 = -540					; size = 4
_strMsg$3 = -536					; size = 4
_szErrorMessage$4 = -532				; size = 512
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
??1CGdiObject@@UAE@XZ PROC				; CGdiObject::~CGdiObject, COMDAT
; _this$ = ecx

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGdiObject@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 10 02 00
	00		 sub	 esp, 528		; 00000210H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00031	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CGdiObject@@6B@

; 75   : 	AFX_BEGIN_DESTRUCTOR

  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 76   : 	DeleteObject();

  0003e	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject
$LN18@CGdiObject:

; 78   : }

  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00054	33 cd		 xor	 ecx, ebp
  00056	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
__catch$??1CGdiObject@@UAE@XZ$0:

; 77   : 	AFX_END_DESTRUCTOR

  0005f	8d 8d e8 fd ff
	ff		 lea	 ecx, DWORD PTR _strMsg$3[ebp]
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0006b	8b b5 e4 fd ff
	ff		 mov	 esi, DWORD PTR _pException$2[ebp]
  00071	8d 8d ec fd ff
	ff		 lea	 ecx, DWORD PTR _szErrorMessage$4[ebp]
  00077	6a 00		 push	 0
  00079	68 00 02 00 00	 push	 512			; 00000200H
  0007e	51		 push	 ecx
  0007f	8b 06		 mov	 eax, DWORD PTR [esi]
  00081	8b ce		 mov	 ecx, esi
  00083	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00087	ff 50 14	 call	 DWORD PTR [eax+20]
  0008a	85 c0		 test	 eax, eax
  0008c	74 2a		 je	 SHORT $LN9@CGdiObject
  0008e	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _szErrorMessage$4[ebp]
  00094	50		 push	 eax
  00095	6a 4d		 push	 77			; 0000004dH
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@
  000a1	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _strMsg$3[ebp]
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HBOOMJBF@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ?6?$CFTs@
  000ac	50		 push	 eax
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  000b3	83 c4 18	 add	 esp, 24			; 00000018H
  000b6	eb 21		 jmp	 SHORT $LN10@CGdiObject
$LN9@CGdiObject:
  000b8	6a 4d		 push	 77			; 0000004dH
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@
  000c4	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _strMsg$3[ebp]
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OMEMOKLE@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ@
  000cf	50		 push	 eax
  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  000d6	83 c4 14	 add	 esp, 20			; 00000014H
$LN10@CGdiObject:
  000d9	6a 00		 push	 0
  000db	6a 00		 push	 0
  000dd	ff b5 e8 fd ff
	ff		 push	 DWORD PTR _strMsg$3[ebp]
  000e3	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox
  000e8	8d 8d e8 fd ff
	ff		 lea	 ecx, DWORD PTR _strMsg$3[ebp]
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000f4	8b 06		 mov	 eax, DWORD PTR [esi]
  000f6	8b ce		 mov	 ecx, esi
  000f8	6a 01		 push	 1
  000fa	ff 50 04	 call	 DWORD PTR [eax+4]
  000fd	b8 00 00 00 00	 mov	 eax, $LN18@CGdiObject
  00102	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CGdiObject@@UAE@XZ$2:
  00000	8d 8d e8 fd ff
	ff		 lea	 ecx, DWORD PTR _strMsg$3[ebp]
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$??1CGdiObject@@UAE@XZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 8a e0 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-544]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGdiObject@@UAE@XZ
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGdiObject@@UAE@XZ ENDP				; CGdiObject::~CGdiObject
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC		; CObject::Dump, COMDAT
; _this$ = ecx

; 122  : 	{ /* no dumping in release builds */ }

  00000	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
?AssertValid@CObject@@UBEXXZ PROC			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 120  : 	{ /* no asserts in release builds */ }

  00000	c2 00 00	 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC		; CObject::Serialize, COMDAT
; _this$ = ecx

; 106  : 	{ /* CObject does not serialize anything by default */ }

  00000	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT
??1CObject@@UAE@XZ PROC					; CObject::~CObject, COMDAT
; _this$ = ecx

; 104  : 	{ }

  00000	c2 00 00	 ret	 0
??1CObject@@UAE@XZ ENDP					; CObject::~CObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ChartUtil\XColourPopup.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
