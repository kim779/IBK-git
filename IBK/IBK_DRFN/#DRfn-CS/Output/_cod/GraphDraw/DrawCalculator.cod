; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\GraphDraw\DrawCalculator.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0CDrawCalculator@@QAE@XZ			; CDrawCalculator::CDrawCalculator
PUBLIC	??1CDrawCalculator@@UAE@XZ			; CDrawCalculator::~CDrawCalculator
PUBLIC	?GetDataDrawCount@CDrawCalculator@@QAEHPAVCPacket@@H@Z ; CDrawCalculator::GetDataDrawCount
PUBLIC	?GetInitDataUpCheck@CDrawCalculator@@QAE_NPAVCPacket@@HPAU__POSITION@@@Z ; CDrawCalculator::GetInitDataUpCheck
PUBLIC	?PFdataDrawingCount@CDrawCalculator@@QAEHHPAVCPacket@@PAU__POSITION@@_NHHHH@Z ; CDrawCalculator::PFdataDrawingCount
PUBLIC	??_GCDrawCalculator@@UAEPAXI@Z			; CDrawCalculator::`scalar deleting destructor'
PUBLIC	??_7CDrawCalculator@@6B@			; CDrawCalculator::`vftable'
PUBLIC	??_R4CDrawCalculator@@6B@			; CDrawCalculator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDrawCalculator@@@8			; CDrawCalculator `RTTI Type Descriptor'
PUBLIC	??_R3CDrawCalculator@@8				; CDrawCalculator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDrawCalculator@@8				; CDrawCalculator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDrawCalculator@@8		; CDrawCalculator::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_ECDrawCalculator@@UAEPAXI@Z:PROC		; CDrawCalculator::`vector deleting destructor'
EXTRN	__imp_?GetnumericDataList@CPacket@@QAEPAV?$CList@NN@@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__fltused:DWORD
;	COMDAT ??_R1A@?0A@EA@CDrawCalculator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDrawCalculator@@8 DD FLAT:??_R0?AVCDrawCalculator@@@8 ; CDrawCalculator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDrawCalculator@@8
rdata$r	ENDS
;	COMDAT ??_R2CDrawCalculator@@8
rdata$r	SEGMENT
??_R2CDrawCalculator@@8 DD FLAT:??_R1A@?0A@EA@CDrawCalculator@@8 ; CDrawCalculator::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CDrawCalculator@@8
rdata$r	SEGMENT
??_R3CDrawCalculator@@8 DD 00H				; CDrawCalculator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CDrawCalculator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDrawCalculator@@@8
data$rs	SEGMENT
??_R0?AVCDrawCalculator@@@8 DD FLAT:??_7type_info@@6B@	; CDrawCalculator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDrawCalculator@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CDrawCalculator@@6B@
rdata$r	SEGMENT
??_R4CDrawCalculator@@6B@ DD 00H			; CDrawCalculator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDrawCalculator@@@8
	DD	FLAT:??_R3CDrawCalculator@@8
rdata$r	ENDS
;	COMDAT ??_7CDrawCalculator@@6B@
CONST	SEGMENT
??_7CDrawCalculator@@6B@ DD FLAT:??_R4CDrawCalculator@@6B@ ; CDrawCalculator::`vftable'
	DD	FLAT:??_ECDrawCalculator@@UAEPAXI@Z
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCDrawCalculator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCDrawCalculator@@UAEPAXI@Z PROC			; CDrawCalculator::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDrawCalculator@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GCDrawCalculator@@UAEPAXI@Z ENDP			; CDrawCalculator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp
;	COMDAT ?PFdataDrawingCount@CDrawCalculator@@QAEHHPAVCPacket@@PAU__POSITION@@_NHHHH@Z
_TEXT	SEGMENT
_i$1$ = -8						; size = 4
_widthCount$1$ = -4					; size = 4
_dataCount$ = 8						; size = 4
_dataPacket$ = 12					; size = 4
_startPos$ = 16						; size = 4
_UPCheck$ = 20						; size = 1
_nUnitSize$ = 24					; size = 4
_checkData$ = 28					; size = 4
_checkCount$ = 32					; size = 4
_checkConvert$ = 36					; size = 4
?PFdataDrawingCount@CDrawCalculator@@QAEHHPAVCPacket@@PAU__POSITION@@_NHHHH@Z PROC ; CDrawCalculator::PFdataDrawingCount, COMDAT
; _this$ = ecx

; 106  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 107  : 	if(dataPacket == NULL || dataPacket->GetnumericDataList() == NULL || startPos == NULL)

  00003	8b 45 0c	 mov	 eax, DWORD PTR _dataPacket$[ebp]
  00006	83 ec 08	 sub	 esp, 8
  00009	56		 push	 esi
  0000a	85 c0		 test	 eax, eax
  0000c	0f 84 e5 00 00
	00		 je	 $LN6@PFdataDraw
  00012	8b c8		 mov	 ecx, eax
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetnumericDataList@CPacket@@QAEPAV?$CList@NN@@XZ
  0001a	85 c0		 test	 eax, eax
  0001c	0f 84 d5 00 00
	00		 je	 $LN6@PFdataDraw
  00022	8b 75 10	 mov	 esi, DWORD PTR _startPos$[ebp]
  00025	85 f6		 test	 esi, esi
  00027	0f 84 ca 00 00
	00		 je	 $LN6@PFdataDraw

; 109  : 
; 110  : 	int widthCount =1;

  0002d	ba 01 00 00 00	 mov	 edx, 1
  00032	89 55 fc	 mov	 DWORD PTR _widthCount$1$[ebp], edx

; 111  : 	for(int i = 1; i < dataCount; i++){

  00035	89 55 f8	 mov	 DWORD PTR _i$1$[ebp], edx
  00038	39 55 08	 cmp	 DWORD PTR _dataCount$[ebp], edx
  0003b	0f 8e ad 00 00
	00		 jle	 $LN28@PFdataDraw
  00041	53		 push	 ebx
  00042	8a 5d 14	 mov	 bl, BYTE PTR _UPCheck$[ebp]
  00045	57		 push	 edi
  00046	8b 7d 1c	 mov	 edi, DWORD PTR _checkData$[ebp]
  00049	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@PFdataDraw:

; 112  : 		if(startPos == NULL)

  00050	85 f6		 test	 esi, esi
  00052	0f 84 94 00 00
	00		 je	 $LN32@PFdataDraw

; 115  : 		int data = (int)dataPacket->GetnumericDataList()->GetNext(startPos);

  00058	8b 4d 0c	 mov	 ecx, DWORD PTR _dataPacket$[ebp]
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetnumericDataList@CPacket@@QAEPAV?$CList@NN@@XZ

; 116  : 
; 117  : 		if(data >= checkData + nUnitSize && UPCheck == true){

  00061	8b 4d 18	 mov	 ecx, DWORD PTR _nUnitSize$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 811  : 	{ CNode* pNode = (CNode*) rPosition;

  00064	8b c6		 mov	 eax, esi

; 812  : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 813  : 		rPosition = (POSITION) pNode->pNext;

  00066	8b 36		 mov	 esi, DWORD PTR [esi]
  00068	89 75 10	 mov	 DWORD PTR _startPos$[ebp], esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp

; 115  : 		int data = (int)dataPacket->GetnumericDataList()->GetNext(startPos);

  0006b	f2 0f 2c 70 08	 cvttsd2si esi, QWORD PTR [eax+8]

; 116  : 
; 117  : 		if(data >= checkData + nUnitSize && UPCheck == true){

  00070	8d 04 39	 lea	 eax, DWORD PTR [ecx+edi]
  00073	3b f0		 cmp	 esi, eax
  00075	7c 33		 jl	 SHORT $LN10@PFdataDraw
  00077	80 fb 01	 cmp	 bl, 1
  0007a	74 58		 je	 SHORT $LN34@PFdataDraw

; 118  : 			checkCount = (data - checkData) / nUnitSize;
; 119  : 			checkData = data;
; 120  : 		}
; 121  : 		else if(data >= checkData + nUnitSize && UPCheck == false){

  0007c	84 db		 test	 bl, bl
  0007e	75 2a		 jne	 SHORT $LN10@PFdataDraw

; 122  : 			checkCount = (data - checkData) / nUnitSize;

  00080	8b c6		 mov	 eax, esi

; 123  : 			if(checkCount >= checkConvert){

  00082	0f b6 db	 movzx	 ebx, bl
  00085	2b c7		 sub	 eax, edi
  00087	99		 cdq
  00088	f7 f9		 idiv	 ecx

; 124  : 				UPCheck = true;
; 125  : 				widthCount++;
; 126  : 				checkData = data;
; 127  : 			}
; 128  : 			else
; 129  : 				checkCount = 0;
; 130  : 		}

  0008a	8b 55 fc	 mov	 edx, DWORD PTR _widthCount$1$[ebp]
  0008d	b9 01 00 00 00	 mov	 ecx, 1
  00092	3b 45 24	 cmp	 eax, DWORD PTR _checkConvert$[ebp]
  00095	0f 4d d9	 cmovge	 ebx, ecx
  00098	0f 4c f7	 cmovl	 esi, edi
  0009b	8d 4a 01	 lea	 ecx, DWORD PTR [edx+1]
  0009e	8b fe		 mov	 edi, esi
  000a0	0f 4c ca	 cmovl	 ecx, edx
  000a3	8b d1		 mov	 edx, ecx
  000a5	89 55 fc	 mov	 DWORD PTR _widthCount$1$[ebp], edx
  000a8	eb 2f		 jmp	 SHORT $LN2@PFdataDraw
$LN10@PFdataDraw:

; 131  : 		else if(data <= checkData - nUnitSize && UPCheck == false){

  000aa	8b c7		 mov	 eax, edi
  000ac	2b c1		 sub	 eax, ecx
  000ae	3b f0		 cmp	 esi, eax
  000b0	7f 24		 jg	 SHORT $LN31@PFdataDraw
  000b2	84 db		 test	 bl, bl
  000b4	74 1e		 je	 SHORT $LN34@PFdataDraw

; 132  : 			checkCount = (checkData - data) / nUnitSize;
; 133  : 			checkData = data;
; 134  : 		}
; 135  : 		else if(data <= checkData - nUnitSize && UPCheck == true){

  000b6	80 fb 01	 cmp	 bl, 1
  000b9	75 1b		 jne	 SHORT $LN31@PFdataDraw

; 136  : 			checkCount = (checkData - data) / nUnitSize;

  000bb	8b c7		 mov	 eax, edi
  000bd	2b c6		 sub	 eax, esi
  000bf	99		 cdq
  000c0	f7 f9		 idiv	 ecx

; 137  : 			if(checkCount >= checkConvert){

  000c2	8b 55 fc	 mov	 edx, DWORD PTR _widthCount$1$[ebp]
  000c5	3b 45 24	 cmp	 eax, DWORD PTR _checkConvert$[ebp]
  000c8	7c 0f		 jl	 SHORT $LN2@PFdataDraw

; 138  : 				UPCheck = false;

  000ca	32 db		 xor	 bl, bl

; 139  : 				widthCount++;
; 140  : 				checkData = data;

  000cc	8b fe		 mov	 edi, esi
  000ce	42		 inc	 edx
  000cf	89 55 fc	 mov	 DWORD PTR _widthCount$1$[ebp], edx
  000d2	eb 05		 jmp	 SHORT $LN2@PFdataDraw
$LN34@PFdataDraw:

; 111  : 	for(int i = 1; i < dataCount; i++){

  000d4	8b fe		 mov	 edi, esi
$LN31@PFdataDraw:
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _widthCount$1$[ebp]
$LN2@PFdataDraw:
  000d9	8b 45 f8	 mov	 eax, DWORD PTR _i$1$[ebp]
  000dc	8b 75 10	 mov	 esi, DWORD PTR _startPos$[ebp]
  000df	40		 inc	 eax
  000e0	89 45 f8	 mov	 DWORD PTR _i$1$[ebp], eax
  000e3	3b 45 08	 cmp	 eax, DWORD PTR _dataCount$[ebp]
  000e6	0f 8c 64 ff ff
	ff		 jl	 $LL4@PFdataDraw
$LN32@PFdataDraw:
  000ec	5f		 pop	 edi
  000ed	5b		 pop	 ebx
$LN28@PFdataDraw:

; 141  : 			}
; 142  : 			else
; 143  : 				checkCount = 0;
; 144  : 		}
; 145  : 		else
; 146  : 			checkCount = 0;
; 147  : 
; 148  : 	}
; 149  : 	
; 150  : 	return widthCount;

  000ee	8b c2		 mov	 eax, edx
  000f0	5e		 pop	 esi

; 151  : }

  000f1	8b e5		 mov	 esp, ebp
  000f3	5d		 pop	 ebp
  000f4	c2 20 00	 ret	 32			; 00000020H
$LN6@PFdataDraw:

; 108  : 		return 1;

  000f7	b8 01 00 00 00	 mov	 eax, 1
  000fc	5e		 pop	 esi

; 151  : }

  000fd	8b e5		 mov	 esp, ebp
  000ff	5d		 pop	 ebp
  00100	c2 20 00	 ret	 32			; 00000020H
?PFdataDrawingCount@CDrawCalculator@@QAEHHPAVCPacket@@PAU__POSITION@@_NHHHH@Z ENDP ; CDrawCalculator::PFdataDrawingCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp
;	COMDAT ?GetInitDataUpCheck@CDrawCalculator@@QAE_NPAVCPacket@@HPAU__POSITION@@@Z
_TEXT	SEGMENT
_checkData$1$ = -8					; size = 8
_dataPacket$ = 8					; size = 4
_UPCheck$1$ = 11					; size = 1
_nUnitSize$ = 12					; size = 4
_startPos$ = 16						; size = 4
?GetInitDataUpCheck@CDrawCalculator@@QAE_NPAVCPacket@@HPAU__POSITION@@@Z PROC ; CDrawCalculator::GetInitDataUpCheck, COMDAT
; _this$ = ecx

; 83   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 84   : 	if(dataPacket == NULL || dataPacket->GetnumericDataList() == NULL || startPos == NULL)

  00008	8b 75 08	 mov	 esi, DWORD PTR _dataPacket$[ebp]
  0000b	57		 push	 edi
  0000c	85 f6		 test	 esi, esi
  0000e	0f 84 ac 00 00
	00		 je	 $LN6@GetInitDat
  00014	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetnumericDataList@CPacket@@QAEPAV?$CList@NN@@XZ
  0001a	8b ce		 mov	 ecx, esi
  0001c	ff d7		 call	 edi
  0001e	85 c0		 test	 eax, eax
  00020	0f 84 9a 00 00
	00		 je	 $LN6@GetInitDat
  00026	8b 5d 10	 mov	 ebx, DWORD PTR _startPos$[ebp]
  00029	85 db		 test	 ebx, ebx
  0002b	0f 84 8f 00 00
	00		 je	 $LN6@GetInitDat

; 85   : 		return false;
; 86   : 
; 87   : 	bool UPCheck = true;
; 88   : 	double checkData = dataPacket->GetnumericDataList()->GetNext(startPos);

  00031	8b ce		 mov	 ecx, esi
  00033	c6 45 0b 01	 mov	 BYTE PTR _UPCheck$1$[ebp], 1
  00037	ff d7		 call	 edi
  00039	f2 0f 10 43 08	 movsd	 xmm0, QWORD PTR [ebx+8]

; 89   : 	for(int i = 1; i < dataPacket->GetCount(); i++){

  0003e	8b ce		 mov	 ecx, esi
  00040	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 813  : 		rPosition = (POSITION) pNode->pNext;

  00042	8b 3b		 mov	 edi, DWORD PTR [ebx]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp

; 89   : 	for(int i = 1; i < dataPacket->GetCount(); i++){

  00044	bb 01 00 00 00	 mov	 ebx, 1
  00049	f2 0f 11 45 f8	 movsd	 QWORD PTR _checkData$1$[ebp], xmm0
  0004e	ff 50 14	 call	 DWORD PTR [eax+20]
  00051	3b c3		 cmp	 eax, ebx
  00053	7e 60		 jle	 SHORT $LN24@GetInitDat
$LL4@GetInitDat:

; 90   : 		if(startPos == NULL)

  00055	85 ff		 test	 edi, edi
  00057	74 45		 je	 SHORT $LN23@GetInitDat

; 91   : 			break;
; 92   : 		double data = dataPacket->GetnumericDataList()->GetNext(startPos);

  00059	8b ce		 mov	 ecx, esi
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetnumericDataList@CPacket@@QAEPAV?$CList@NN@@XZ
  00061	66 0f 6e 55 0c	 movd	 xmm2, DWORD PTR _nUnitSize$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 811  : 	{ CNode* pNode = (CNode*) rPosition;

  00066	8b c7		 mov	 eax, edi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp

; 93   : 		if(data >= checkData + nUnitSize){

  00068	f2 0f 10 5d f8	 movsd	 xmm3, QWORD PTR _checkData$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 813  : 		rPosition = (POSITION) pNode->pNext;

  0006d	8b 3f		 mov	 edi, DWORD PTR [edi]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp

; 93   : 		if(data >= checkData + nUnitSize){

  0006f	f3 0f e6 d2	 cvtdq2pd xmm2, xmm2
  00073	f2 0f 10 48 08	 movsd	 xmm1, QWORD PTR [eax+8]
  00078	0f 28 c2	 movaps	 xmm0, xmm2
  0007b	f2 0f 58 c3	 addsd	 xmm0, xmm3
  0007f	66 0f 2f c8	 comisd	 xmm1, xmm0
  00083	73 25		 jae	 SHORT $LN18@GetInitDat

; 94   : 			UPCheck = true;
; 95   : 			break;
; 96   : 		}
; 97   : 		else if(data <= checkData - nUnitSize){

  00085	0f 28 c3	 movaps	 xmm0, xmm3
  00088	f2 0f 5c c2	 subsd	 xmm0, xmm2
  0008c	66 0f 2f c1	 comisd	 xmm0, xmm1
  00090	73 2e		 jae	 SHORT $LN6@GetInitDat

; 89   : 	for(int i = 1; i < dataPacket->GetCount(); i++){

  00092	8b 06		 mov	 eax, DWORD PTR [esi]
  00094	8b ce		 mov	 ecx, esi
  00096	43		 inc	 ebx
  00097	ff 50 14	 call	 DWORD PTR [eax+20]
  0009a	3b d8		 cmp	 ebx, eax
  0009c	7c b7		 jl	 SHORT $LL4@GetInitDat
$LN23@GetInitDat:

; 98   : 			UPCheck = false;
; 99   : 			break;
; 100  : 		}
; 101  : 	}
; 102  : 	return UPCheck;
; 103  : }

  0009e	8a 45 0b	 mov	 al, BYTE PTR _UPCheck$1$[ebp]
  000a1	5f		 pop	 edi
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 0c 00	 ret	 12			; 0000000cH
$LN18@GetInitDat:
  000aa	5f		 pop	 edi
  000ab	5e		 pop	 esi
  000ac	b0 01		 mov	 al, 1
  000ae	5b		 pop	 ebx
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c2 0c 00	 ret	 12			; 0000000cH
$LN24@GetInitDat:
  000b5	5f		 pop	 edi
  000b6	5e		 pop	 esi
  000b7	8a c3		 mov	 al, bl
  000b9	5b		 pop	 ebx
  000ba	8b e5		 mov	 esp, ebp
  000bc	5d		 pop	 ebp
  000bd	c2 0c 00	 ret	 12			; 0000000cH
$LN6@GetInitDat:
  000c0	5f		 pop	 edi
  000c1	5e		 pop	 esi
  000c2	32 c0		 xor	 al, al
  000c4	5b		 pop	 ebx
  000c5	8b e5		 mov	 esp, ebp
  000c7	5d		 pop	 ebp
  000c8	c2 0c 00	 ret	 12			; 0000000cH
?GetInitDataUpCheck@CDrawCalculator@@QAE_NPAVCPacket@@HPAU__POSITION@@@Z ENDP ; CDrawCalculator::GetInitDataUpCheck
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp
;	COMDAT ?GetDataDrawCount@CDrawCalculator@@QAEHPAVCPacket@@H@Z
_TEXT	SEGMENT
_data$$sroa$170$1$ = -36				; size = 8
_data$$sroa$161$1$ = -28				; size = 8
_data$$sroa$186$1$ = -20				; size = 8
_data$$sroa$167$1$ = -12				; size = 8
_startPos$2$ = -4					; size = 4
_dataPacket$ = 8					; size = 4
_dataCount$ = 12					; size = 4
?GetDataDrawCount@CDrawCalculator@@QAEHPAVCPacket@@H@Z PROC ; CDrawCalculator::GetDataDrawCount, COMDAT
; _this$ = ecx

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 32   : 	if(dataPacket == NULL || dataPacket->GetnumericDataList() == NULL)

  00009	8b 7d 08	 mov	 edi, DWORD PTR _dataPacket$[ebp]
  0000c	85 ff		 test	 edi, edi
  0000e	0f 84 12 01 00
	00		 je	 $LN6@GetDataDra
  00014	8b cf		 mov	 ecx, edi
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetnumericDataList@CPacket@@QAEPAV?$CList@NN@@XZ
  0001c	85 c0		 test	 eax, eax
  0001e	0f 84 02 01 00
	00		 je	 $LN6@GetDataDra

; 33   : 		return 0;
; 34   : 
; 35   : 	int dataDrawCount = 0;
; 36   : 	bool upCheck = true;

  00024	b3 01		 mov	 bl, 1

; 37   : 	bool downCheck = true;
; 38   : 	double data[4];
; 39   : 	POSITION startPos = dataPacket->GetnumericDataList()->GetHeadPosition();

  00026	8b cf		 mov	 ecx, edi
  00028	33 f6		 xor	 esi, esi
  0002a	8a fb		 mov	 bh, bl
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetnumericDataList@CPacket@@QAEPAV?$CList@NN@@XZ
  00032	8b 78 04	 mov	 edi, DWORD PTR [eax+4]

; 40   : 	if(startPos == NULL)

  00035	85 ff		 test	 edi, edi
  00037	0f 84 e9 00 00
	00		 je	 $LN6@GetDataDra

; 43   : 	data[0] = data[1] = data[2] = data[3] = dataPacket->GetnumericDataList()->GetNext(startPos);

  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _dataPacket$[ebp]
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetnumericDataList@CPacket@@QAEPAV?$CList@NN@@XZ
  00046	f2 0f 10 47 08	 movsd	 xmm0, QWORD PTR [edi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 813  : 		rPosition = (POSITION) pNode->pNext;

  0004b	8b 0f		 mov	 ecx, DWORD PTR [edi]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp

; 45   : 	for(int i = 1 ; i < dataCount ; i++){

  0004d	bf 01 00 00 00	 mov	 edi, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 813  : 		rPosition = (POSITION) pNode->pNext;

  00052	89 4d fc	 mov	 DWORD PTR _startPos$2$[ebp], ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp

; 43   : 	data[0] = data[1] = data[2] = data[3] = dataPacket->GetnumericDataList()->GetNext(startPos);

  00055	f2 0f 11 45 dc	 movsd	 QWORD PTR _data$$sroa$170$1$[ebp], xmm0
  0005a	f2 0f 11 45 f4	 movsd	 QWORD PTR _data$$sroa$167$1$[ebp], xmm0

; 45   : 	for(int i = 1 ; i < dataCount ; i++){

  0005f	39 7d 0c	 cmp	 DWORD PTR _dataCount$[ebp], edi
  00062	0f 8e b3 00 00
	00		 jle	 $LN26@GetDataDra
  00068	0f 28 d0	 movaps	 xmm2, xmm0
  0006b	f2 0f 11 45 ec	 movsd	 QWORD PTR _data$$sroa$186$1$[ebp], xmm0
  00070	f2 0f 11 55 e4	 movsd	 QWORD PTR _data$$sroa$161$1$[ebp], xmm2
$LL4@GetDataDra:

; 46   : 		if(startPos == NULL)

  00075	85 c9		 test	 ecx, ecx
  00077	0f 84 9e 00 00
	00		 je	 $LN26@GetDataDra

; 47   : 			break;
; 48   : 
; 49   : 		double checkData = dataPacket->GetnumericDataList()->GetNext(startPos);

  0007d	8b 4d 08	 mov	 ecx, DWORD PTR _dataPacket$[ebp]
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetnumericDataList@CPacket@@QAEPAV?$CList@NN@@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 811  : 	{ CNode* pNode = (CNode*) rPosition;

  00086	8b 4d fc	 mov	 ecx, DWORD PTR _startPos$2$[ebp]
  00089	8b c1		 mov	 eax, ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp

; 50   : 		if(data[0] < checkData){

  0008b	f2 0f 10 55 e4	 movsd	 xmm2, QWORD PTR _data$$sroa$161$1$[ebp]
  00090	f2 0f 10 48 08	 movsd	 xmm1, QWORD PTR [eax+8]
  00095	66 0f 2f ca	 comisd	 xmm1, xmm2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 813  : 		rPosition = (POSITION) pNode->pNext;

  00099	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0009b	89 4d fc	 mov	 DWORD PTR _startPos$2$[ebp], ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp

; 50   : 		if(data[0] < checkData){

  0009e	76 39		 jbe	 SHORT $LN9@GetDataDra

; 51   : 			dataDrawCount++;

  000a0	46		 inc	 esi

; 52   : 			if(upCheck == true){

  000a1	80 fb 01	 cmp	 bl, 1
  000a4	75 25		 jne	 SHORT $LN11@GetDataDra

; 53   : 				data[3] = data[2];
; 54   : 				data[2] = data[1];

  000a6	f2 0f 10 5d f4	 movsd	 xmm3, QWORD PTR _data$$sroa$167$1$[ebp]

; 55   : 				data[1] = data[0];
; 56   : 				data[0] = checkData;
; 57   : 			}
; 58   : 			else{
; 59   : 				data[0] = checkData;
; 60   : 				upCheck = true;
; 61   : 			}
; 62   : 			downCheck = false;

  000ab	32 ff		 xor	 bh, bh
  000ad	f2 0f 10 45 ec	 movsd	 xmm0, QWORD PTR _data$$sroa$186$1$[ebp]
  000b2	f2 0f 11 55 f4	 movsd	 QWORD PTR _data$$sroa$167$1$[ebp], xmm2
  000b7	0f 28 d1	 movaps	 xmm2, xmm1
  000ba	f2 0f 11 45 dc	 movsd	 QWORD PTR _data$$sroa$170$1$[ebp], xmm0
  000bf	f2 0f 11 5d ec	 movsd	 QWORD PTR _data$$sroa$186$1$[ebp], xmm3
  000c4	f2 0f 11 55 e4	 movsd	 QWORD PTR _data$$sroa$161$1$[ebp], xmm2

; 63   : 		}

  000c9	eb 46		 jmp	 SHORT $LN2@GetDataDra
$LN11@GetDataDra:

; 55   : 				data[1] = data[0];
; 56   : 				data[0] = checkData;
; 57   : 			}
; 58   : 			else{
; 59   : 				data[0] = checkData;
; 60   : 				upCheck = true;
; 61   : 			}
; 62   : 			downCheck = false;

  000cb	0f 28 d1	 movaps	 xmm2, xmm1
  000ce	b3 01		 mov	 bl, 1
  000d0	32 ff		 xor	 bh, bh
  000d2	f2 0f 11 55 e4	 movsd	 QWORD PTR _data$$sroa$161$1$[ebp], xmm2

; 63   : 		}

  000d7	eb 38		 jmp	 SHORT $LN2@GetDataDra
$LN9@GetDataDra:

; 64   : 		else if(data[3] > checkData){

  000d9	f2 0f 10 45 dc	 movsd	 xmm0, QWORD PTR _data$$sroa$170$1$[ebp]
  000de	66 0f 2f c1	 comisd	 xmm0, xmm1
  000e2	76 2d		 jbe	 SHORT $LN2@GetDataDra

; 65   : 			dataDrawCount++;

  000e4	46		 inc	 esi

; 66   : 			if(downCheck == true){

  000e5	80 ff 01	 cmp	 bh, 1
  000e8	75 1b		 jne	 SHORT $LN14@GetDataDra

; 67   : 				data[0] = data[1];

  000ea	f2 0f 10 55 f4	 movsd	 xmm2, QWORD PTR _data$$sroa$167$1$[ebp]
  000ef	f2 0f 11 55 e4	 movsd	 QWORD PTR _data$$sroa$161$1$[ebp], xmm2

; 68   : 				data[1] = data[2];

  000f4	f2 0f 10 55 ec	 movsd	 xmm2, QWORD PTR _data$$sroa$186$1$[ebp]
  000f9	f2 0f 11 55 f4	 movsd	 QWORD PTR _data$$sroa$167$1$[ebp], xmm2

; 69   : 				data[2] = data[3];

  000fe	f2 0f 11 45 ec	 movsd	 QWORD PTR _data$$sroa$186$1$[ebp], xmm0

; 70   : 				data[3] = checkData;			
; 71   : 			}

  00103	eb 02		 jmp	 SHORT $LN15@GetDataDra
$LN14@GetDataDra:

; 72   : 			else{
; 73   : 				data[3] = checkData;
; 74   : 				downCheck = true;			

  00105	b7 01		 mov	 bh, 1
$LN15@GetDataDra:

; 75   : 			}
; 76   : 			upCheck = false;

  00107	0f 28 c1	 movaps	 xmm0, xmm1
  0010a	32 db		 xor	 bl, bl
  0010c	f2 0f 11 45 dc	 movsd	 QWORD PTR _data$$sroa$170$1$[ebp], xmm0
$LN2@GetDataDra:

; 45   : 	for(int i = 1 ; i < dataCount ; i++){

  00111	47		 inc	 edi
  00112	3b 7d 0c	 cmp	 edi, DWORD PTR _dataCount$[ebp]
  00115	0f 8c 5a ff ff
	ff		 jl	 $LL4@GetDataDra
$LN26@GetDataDra:
  0011b	5f		 pop	 edi

; 77   : 		}		
; 78   : 	}
; 79   : 	return dataDrawCount;

  0011c	8b c6		 mov	 eax, esi

; 80   : }

  0011e	5e		 pop	 esi
  0011f	5b		 pop	 ebx
  00120	8b e5		 mov	 esp, ebp
  00122	5d		 pop	 ebp
  00123	c2 08 00	 ret	 8
$LN6@GetDataDra:
  00126	5f		 pop	 edi
  00127	5e		 pop	 esi
  00128	33 c0		 xor	 eax, eax
  0012a	5b		 pop	 ebx
  0012b	8b e5		 mov	 esp, ebp
  0012d	5d		 pop	 ebp
  0012e	c2 08 00	 ret	 8
?GetDataDrawCount@CDrawCalculator@@QAEHPAVCPacket@@H@Z ENDP ; CDrawCalculator::GetDataDrawCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp
;	COMDAT ??1CDrawCalculator@@UAE@XZ
_TEXT	SEGMENT
??1CDrawCalculator@@UAE@XZ PROC				; CDrawCalculator::~CDrawCalculator, COMDAT
; _this$ = ecx

; 26   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CDrawCalculator@@6B@

; 27   : 
; 28   : }

  00006	c3		 ret	 0
??1CDrawCalculator@@UAE@XZ ENDP				; CDrawCalculator::~CDrawCalculator
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp
;	COMDAT ??0CDrawCalculator@@QAE@XZ
_TEXT	SEGMENT
??0CDrawCalculator@@QAE@XZ PROC				; CDrawCalculator::CDrawCalculator, COMDAT
; _this$ = ecx

; 21   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CDrawCalculator@@6B@

; 22   : 
; 23   : }

  00006	8b c1		 mov	 eax, ecx
  00008	c3		 ret	 0
??0CDrawCalculator@@QAE@XZ ENDP				; CDrawCalculator::CDrawCalculator
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\GraphDraw\DrawCalculator.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
