; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\GraphDraw\CalcDataForDraw.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0CRect@@QAE@XZ				; CRect::CRect
PUBLIC	??0CCalcDataForDraw@@QAE@XZ			; CCalcDataForDraw::CCalcDataForDraw
PUBLIC	?CheckYValue@CCalcDataForDraw@@QAE_NNN_N0ABVCRect@@H@Z ; CCalcDataForDraw::CheckYValue
PUBLIC	?SetYValue@CCalcDataForDraw@@QAEXNN_N0ABVCRect@@H@Z ; CCalcDataForDraw::SetYValue
PUBLIC	??1CCalcDataForDraw@@MAE@XZ			; CCalcDataForDraw::~CCalcDataForDraw
PUBLIC	?ResetValue@CCalcDataForDraw@@QAEXXZ		; CCalcDataForDraw::ResetValue
PUBLIC	?Alloc_pptLine@CCalcDataForDraw@@QAEXH@Z	; CCalcDataForDraw::Alloc_pptLine
PUBLIC	?Alloc_dCurOpen@CCalcDataForDraw@@QAEXH@Z	; CCalcDataForDraw::Alloc_dCurOpen
PUBLIC	?Alloc_dCurClose@CCalcDataForDraw@@QAEXH@Z	; CCalcDataForDraw::Alloc_dCurClose
PUBLIC	?Alloc_dCurVolume@CCalcDataForDraw@@QAEXH@Z	; CCalcDataForDraw::Alloc_dCurVolume
PUBLIC	?Alloc_rtGraph@CCalcDataForDraw@@QAEXH@Z	; CCalcDataForDraw::Alloc_rtGraph
PUBLIC	?Alloc_lpPoint_High@CCalcDataForDraw@@QAEXH@Z	; CCalcDataForDraw::Alloc_lpPoint_High
PUBLIC	?Alloc_lpPolyCount_High@CCalcDataForDraw@@QAEXH@Z ; CCalcDataForDraw::Alloc_lpPolyCount_High
PUBLIC	?Alloc_lpdwcntPoly_High@CCalcDataForDraw@@QAEXH@Z ; CCalcDataForDraw::Alloc_lpdwcntPoly_High
PUBLIC	?Alloc_lpPoint_Low@CCalcDataForDraw@@QAEXH@Z	; CCalcDataForDraw::Alloc_lpPoint_Low
PUBLIC	?Alloc_lpPolyCount_Low@CCalcDataForDraw@@QAEXH@Z ; CCalcDataForDraw::Alloc_lpPolyCount_Low
PUBLIC	?Alloc_lpdwcntPoly_Low@CCalcDataForDraw@@QAEXH@Z ; CCalcDataForDraw::Alloc_lpdwcntPoly_Low
PUBLIC	?Alloc_lpPoint_Bohap@CCalcDataForDraw@@QAEXH@Z	; CCalcDataForDraw::Alloc_lpPoint_Bohap
PUBLIC	?Alloc_lpPolyCount_Bohap@CCalcDataForDraw@@QAEXH@Z ; CCalcDataForDraw::Alloc_lpPolyCount_Bohap
PUBLIC	?Alloc_lpdwcntPoly_Bohap@CCalcDataForDraw@@QAEXH@Z ; CCalcDataForDraw::Alloc_lpdwcntPoly_Bohap
PUBLIC	?Alloc_lpPointBuffer@CCalcDataForDraw@@QAEXH@Z	; CCalcDataForDraw::Alloc_lpPointBuffer
PUBLIC	?Allocated@CCalcDataForDraw@@IAEXH@Z		; CCalcDataForDraw::Allocated
PUBLIC	??_GCCalcDataForDraw@@MAEPAXI@Z			; CCalcDataForDraw::`scalar deleting destructor'
PUBLIC	??_7CCalcDataForDraw@@6B@			; CCalcDataForDraw::`vftable'
PUBLIC	??_R4CCalcDataForDraw@@6B@			; CCalcDataForDraw::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCalcDataForDraw@@@8			; CCalcDataForDraw `RTTI Type Descriptor'
PUBLIC	??_R3CCalcDataForDraw@@8			; CCalcDataForDraw::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCalcDataForDraw@@8			; CCalcDataForDraw::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCalcDataForDraw@@8		; CCalcDataForDraw::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__imp__EqualRect@8:PROC
EXTRN	??_ECCalcDataForDraw@@MAEPAXI@Z:PROC		; CCalcDataForDraw::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__fltused:DWORD
;	COMDAT ??_R1A@?0A@EA@CCalcDataForDraw@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCalcDataForDraw@@8 DD FLAT:??_R0?AVCCalcDataForDraw@@@8 ; CCalcDataForDraw::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCalcDataForDraw@@8
rdata$r	ENDS
;	COMDAT ??_R2CCalcDataForDraw@@8
rdata$r	SEGMENT
??_R2CCalcDataForDraw@@8 DD FLAT:??_R1A@?0A@EA@CCalcDataForDraw@@8 ; CCalcDataForDraw::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CCalcDataForDraw@@8
rdata$r	SEGMENT
??_R3CCalcDataForDraw@@8 DD 00H				; CCalcDataForDraw::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CCalcDataForDraw@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCalcDataForDraw@@@8
data$rs	SEGMENT
??_R0?AVCCalcDataForDraw@@@8 DD FLAT:??_7type_info@@6B@	; CCalcDataForDraw `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCalcDataForDraw@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CCalcDataForDraw@@6B@
rdata$r	SEGMENT
??_R4CCalcDataForDraw@@6B@ DD 00H			; CCalcDataForDraw::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCalcDataForDraw@@@8
	DD	FLAT:??_R3CCalcDataForDraw@@8
rdata$r	ENDS
;	COMDAT ??_7CCalcDataForDraw@@6B@
CONST	SEGMENT
??_7CCalcDataForDraw@@6B@ DD FLAT:??_R4CCalcDataForDraw@@6B@ ; CCalcDataForDraw::`vftable'
	DD	FLAT:??_ECCalcDataForDraw@@MAEPAXI@Z
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCCalcDataForDraw@@MAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCalcDataForDraw@@MAEPAXI@Z PROC			; CCalcDataForDraw::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CCalcDataForDraw@@MAE@XZ ; CCalcDataForDraw::~CCalcDataForDraw
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 70 01 00 00	 push	 368			; 00000170H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCCalcDataForDraw@@MAEPAXI@Z ENDP			; CCalcDataForDraw::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?Allocated@CCalcDataForDraw@@IAEXH@Z
_TEXT	SEGMENT
_p_nSize$ = 8						; size = 4
?Allocated@CCalcDataForDraw@@IAEXH@Z PROC		; CCalcDataForDraw::Allocated, COMDAT
; _this$ = ecx

; 190  : 	ASSERT( TRUE);
; 191  : }

  00000	c2 04 00	 ret	 4
?Allocated@CCalcDataForDraw@@IAEXH@Z ENDP		; CCalcDataForDraw::Allocated
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?Alloc_lpPointBuffer@CCalcDataForDraw@@QAEXH@Z
_TEXT	SEGMENT
_p_nSize$ = 8						; size = 4
?Alloc_lpPointBuffer@CCalcDataForDraw@@QAEXH@Z PROC	; CCalcDataForDraw::Alloc_lpPointBuffer, COMDAT
; _this$ = ecx

; 186  : _CDFD_DEFINE( POINT,	lpPointBuffer);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
  00007	8b 7d 08	 mov	 edi, DWORD PTR _p_nSize$[ebp]
  0000a	3b be 6c 01 00
	00		 cmp	 edi, DWORD PTR [esi+364]
  00010	7e 3a		 jle	 SHORT $LN1@Alloc_lpPo
  00012	8b 86 68 01 00
	00		 mov	 eax, DWORD PTR [esi+360]
  00018	85 c0		 test	 eax, eax
  0001a	74 09		 je	 SHORT $LN3@Alloc_lpPo
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00022	83 c4 04	 add	 esp, 4
$LN3@Alloc_lpPo:
  00025	33 c9		 xor	 ecx, ecx
  00027	89 be 6c 01 00
	00		 mov	 DWORD PTR [esi+364], edi
  0002d	8b c7		 mov	 eax, edi
  0002f	ba 08 00 00 00	 mov	 edx, 8
  00034	f7 e2		 mul	 edx
  00036	0f 90 c1	 seto	 cl
  00039	f7 d9		 neg	 ecx
  0003b	0b c8		 or	 ecx, eax
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00043	83 c4 04	 add	 esp, 4
  00046	89 86 68 01 00
	00		 mov	 DWORD PTR [esi+360], eax
$LN1@Alloc_lpPo:
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?Alloc_lpPointBuffer@CCalcDataForDraw@@QAEXH@Z ENDP	; CCalcDataForDraw::Alloc_lpPointBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?Alloc_lpdwcntPoly_Bohap@CCalcDataForDraw@@QAEXH@Z
_TEXT	SEGMENT
_p_nSize$ = 8						; size = 4
?Alloc_lpdwcntPoly_Bohap@CCalcDataForDraw@@QAEXH@Z PROC	; CCalcDataForDraw::Alloc_lpdwcntPoly_Bohap, COMDAT
; _this$ = ecx

; 185  : _CDFD_DEFINE( DWORD, lpdwcntPoly_Bohap);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
  00007	8b 7d 08	 mov	 edi, DWORD PTR _p_nSize$[ebp]
  0000a	3b be 44 01 00
	00		 cmp	 edi, DWORD PTR [esi+324]
  00010	7e 3a		 jle	 SHORT $LN1@Alloc_lpdw
  00012	8b 86 40 01 00
	00		 mov	 eax, DWORD PTR [esi+320]
  00018	85 c0		 test	 eax, eax
  0001a	74 09		 je	 SHORT $LN3@Alloc_lpdw
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00022	83 c4 04	 add	 esp, 4
$LN3@Alloc_lpdw:
  00025	33 c9		 xor	 ecx, ecx
  00027	89 be 44 01 00
	00		 mov	 DWORD PTR [esi+324], edi
  0002d	8b c7		 mov	 eax, edi
  0002f	ba 04 00 00 00	 mov	 edx, 4
  00034	f7 e2		 mul	 edx
  00036	0f 90 c1	 seto	 cl
  00039	f7 d9		 neg	 ecx
  0003b	0b c8		 or	 ecx, eax
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00043	83 c4 04	 add	 esp, 4
  00046	89 86 40 01 00
	00		 mov	 DWORD PTR [esi+320], eax
$LN1@Alloc_lpdw:
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?Alloc_lpdwcntPoly_Bohap@CCalcDataForDraw@@QAEXH@Z ENDP	; CCalcDataForDraw::Alloc_lpdwcntPoly_Bohap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?Alloc_lpPolyCount_Bohap@CCalcDataForDraw@@QAEXH@Z
_TEXT	SEGMENT
_p_nSize$ = 8						; size = 4
?Alloc_lpPolyCount_Bohap@CCalcDataForDraw@@QAEXH@Z PROC	; CCalcDataForDraw::Alloc_lpPolyCount_Bohap, COMDAT
; _this$ = ecx

; 184  : _CDFD_DEFINE( INT, lpPolyCount_Bohap);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
  00007	8b 7d 08	 mov	 edi, DWORD PTR _p_nSize$[ebp]
  0000a	3b be 3c 01 00
	00		 cmp	 edi, DWORD PTR [esi+316]
  00010	7e 3a		 jle	 SHORT $LN1@Alloc_lpPo
  00012	8b 86 38 01 00
	00		 mov	 eax, DWORD PTR [esi+312]
  00018	85 c0		 test	 eax, eax
  0001a	74 09		 je	 SHORT $LN3@Alloc_lpPo
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00022	83 c4 04	 add	 esp, 4
$LN3@Alloc_lpPo:
  00025	33 c9		 xor	 ecx, ecx
  00027	89 be 3c 01 00
	00		 mov	 DWORD PTR [esi+316], edi
  0002d	8b c7		 mov	 eax, edi
  0002f	ba 04 00 00 00	 mov	 edx, 4
  00034	f7 e2		 mul	 edx
  00036	0f 90 c1	 seto	 cl
  00039	f7 d9		 neg	 ecx
  0003b	0b c8		 or	 ecx, eax
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00043	83 c4 04	 add	 esp, 4
  00046	89 86 38 01 00
	00		 mov	 DWORD PTR [esi+312], eax
$LN1@Alloc_lpPo:
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?Alloc_lpPolyCount_Bohap@CCalcDataForDraw@@QAEXH@Z ENDP	; CCalcDataForDraw::Alloc_lpPolyCount_Bohap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?Alloc_lpPoint_Bohap@CCalcDataForDraw@@QAEXH@Z
_TEXT	SEGMENT
_p_nSize$ = 8						; size = 4
?Alloc_lpPoint_Bohap@CCalcDataForDraw@@QAEXH@Z PROC	; CCalcDataForDraw::Alloc_lpPoint_Bohap, COMDAT
; _this$ = ecx

; 183  : _CDFD_DEFINE( POINT, lpPoint_Bohap);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
  00007	8b 7d 08	 mov	 edi, DWORD PTR _p_nSize$[ebp]
  0000a	3b be 34 01 00
	00		 cmp	 edi, DWORD PTR [esi+308]
  00010	7e 3a		 jle	 SHORT $LN1@Alloc_lpPo
  00012	8b 86 30 01 00
	00		 mov	 eax, DWORD PTR [esi+304]
  00018	85 c0		 test	 eax, eax
  0001a	74 09		 je	 SHORT $LN3@Alloc_lpPo
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00022	83 c4 04	 add	 esp, 4
$LN3@Alloc_lpPo:
  00025	33 c9		 xor	 ecx, ecx
  00027	89 be 34 01 00
	00		 mov	 DWORD PTR [esi+308], edi
  0002d	8b c7		 mov	 eax, edi
  0002f	ba 08 00 00 00	 mov	 edx, 8
  00034	f7 e2		 mul	 edx
  00036	0f 90 c1	 seto	 cl
  00039	f7 d9		 neg	 ecx
  0003b	0b c8		 or	 ecx, eax
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00043	83 c4 04	 add	 esp, 4
  00046	89 86 30 01 00
	00		 mov	 DWORD PTR [esi+304], eax
$LN1@Alloc_lpPo:
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?Alloc_lpPoint_Bohap@CCalcDataForDraw@@QAEXH@Z ENDP	; CCalcDataForDraw::Alloc_lpPoint_Bohap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?Alloc_lpdwcntPoly_Low@CCalcDataForDraw@@QAEXH@Z
_TEXT	SEGMENT
_p_nSize$ = 8						; size = 4
?Alloc_lpdwcntPoly_Low@CCalcDataForDraw@@QAEXH@Z PROC	; CCalcDataForDraw::Alloc_lpdwcntPoly_Low, COMDAT
; _this$ = ecx

; 182  : _CDFD_DEFINE( DWORD, lpdwcntPoly_Low);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
  00007	8b 7d 08	 mov	 edi, DWORD PTR _p_nSize$[ebp]
  0000a	3b be 2c 01 00
	00		 cmp	 edi, DWORD PTR [esi+300]
  00010	7e 3a		 jle	 SHORT $LN1@Alloc_lpdw
  00012	8b 86 28 01 00
	00		 mov	 eax, DWORD PTR [esi+296]
  00018	85 c0		 test	 eax, eax
  0001a	74 09		 je	 SHORT $LN3@Alloc_lpdw
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00022	83 c4 04	 add	 esp, 4
$LN3@Alloc_lpdw:
  00025	33 c9		 xor	 ecx, ecx
  00027	89 be 2c 01 00
	00		 mov	 DWORD PTR [esi+300], edi
  0002d	8b c7		 mov	 eax, edi
  0002f	ba 04 00 00 00	 mov	 edx, 4
  00034	f7 e2		 mul	 edx
  00036	0f 90 c1	 seto	 cl
  00039	f7 d9		 neg	 ecx
  0003b	0b c8		 or	 ecx, eax
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00043	83 c4 04	 add	 esp, 4
  00046	89 86 28 01 00
	00		 mov	 DWORD PTR [esi+296], eax
$LN1@Alloc_lpdw:
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?Alloc_lpdwcntPoly_Low@CCalcDataForDraw@@QAEXH@Z ENDP	; CCalcDataForDraw::Alloc_lpdwcntPoly_Low
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?Alloc_lpPolyCount_Low@CCalcDataForDraw@@QAEXH@Z
_TEXT	SEGMENT
_p_nSize$ = 8						; size = 4
?Alloc_lpPolyCount_Low@CCalcDataForDraw@@QAEXH@Z PROC	; CCalcDataForDraw::Alloc_lpPolyCount_Low, COMDAT
; _this$ = ecx

; 181  : _CDFD_DEFINE( INT, lpPolyCount_Low);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
  00007	8b 7d 08	 mov	 edi, DWORD PTR _p_nSize$[ebp]
  0000a	3b be 24 01 00
	00		 cmp	 edi, DWORD PTR [esi+292]
  00010	7e 3a		 jle	 SHORT $LN1@Alloc_lpPo
  00012	8b 86 20 01 00
	00		 mov	 eax, DWORD PTR [esi+288]
  00018	85 c0		 test	 eax, eax
  0001a	74 09		 je	 SHORT $LN3@Alloc_lpPo
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00022	83 c4 04	 add	 esp, 4
$LN3@Alloc_lpPo:
  00025	33 c9		 xor	 ecx, ecx
  00027	89 be 24 01 00
	00		 mov	 DWORD PTR [esi+292], edi
  0002d	8b c7		 mov	 eax, edi
  0002f	ba 04 00 00 00	 mov	 edx, 4
  00034	f7 e2		 mul	 edx
  00036	0f 90 c1	 seto	 cl
  00039	f7 d9		 neg	 ecx
  0003b	0b c8		 or	 ecx, eax
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00043	83 c4 04	 add	 esp, 4
  00046	89 86 20 01 00
	00		 mov	 DWORD PTR [esi+288], eax
$LN1@Alloc_lpPo:
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?Alloc_lpPolyCount_Low@CCalcDataForDraw@@QAEXH@Z ENDP	; CCalcDataForDraw::Alloc_lpPolyCount_Low
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?Alloc_lpPoint_Low@CCalcDataForDraw@@QAEXH@Z
_TEXT	SEGMENT
_p_nSize$ = 8						; size = 4
?Alloc_lpPoint_Low@CCalcDataForDraw@@QAEXH@Z PROC	; CCalcDataForDraw::Alloc_lpPoint_Low, COMDAT
; _this$ = ecx

; 180  : _CDFD_DEFINE( POINT, lpPoint_Low);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
  00007	8b 7d 08	 mov	 edi, DWORD PTR _p_nSize$[ebp]
  0000a	3b be 1c 01 00
	00		 cmp	 edi, DWORD PTR [esi+284]
  00010	7e 3a		 jle	 SHORT $LN1@Alloc_lpPo
  00012	8b 86 18 01 00
	00		 mov	 eax, DWORD PTR [esi+280]
  00018	85 c0		 test	 eax, eax
  0001a	74 09		 je	 SHORT $LN3@Alloc_lpPo
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00022	83 c4 04	 add	 esp, 4
$LN3@Alloc_lpPo:
  00025	33 c9		 xor	 ecx, ecx
  00027	89 be 1c 01 00
	00		 mov	 DWORD PTR [esi+284], edi
  0002d	8b c7		 mov	 eax, edi
  0002f	ba 08 00 00 00	 mov	 edx, 8
  00034	f7 e2		 mul	 edx
  00036	0f 90 c1	 seto	 cl
  00039	f7 d9		 neg	 ecx
  0003b	0b c8		 or	 ecx, eax
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00043	83 c4 04	 add	 esp, 4
  00046	89 86 18 01 00
	00		 mov	 DWORD PTR [esi+280], eax
$LN1@Alloc_lpPo:
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?Alloc_lpPoint_Low@CCalcDataForDraw@@QAEXH@Z ENDP	; CCalcDataForDraw::Alloc_lpPoint_Low
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?Alloc_lpdwcntPoly_High@CCalcDataForDraw@@QAEXH@Z
_TEXT	SEGMENT
_p_nSize$ = 8						; size = 4
?Alloc_lpdwcntPoly_High@CCalcDataForDraw@@QAEXH@Z PROC	; CCalcDataForDraw::Alloc_lpdwcntPoly_High, COMDAT
; _this$ = ecx

; 179  : _CDFD_DEFINE( DWORD, lpdwcntPoly_High);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
  00007	8b 7d 08	 mov	 edi, DWORD PTR _p_nSize$[ebp]
  0000a	3b be 14 01 00
	00		 cmp	 edi, DWORD PTR [esi+276]
  00010	7e 3a		 jle	 SHORT $LN1@Alloc_lpdw
  00012	8b 86 10 01 00
	00		 mov	 eax, DWORD PTR [esi+272]
  00018	85 c0		 test	 eax, eax
  0001a	74 09		 je	 SHORT $LN3@Alloc_lpdw
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00022	83 c4 04	 add	 esp, 4
$LN3@Alloc_lpdw:
  00025	33 c9		 xor	 ecx, ecx
  00027	89 be 14 01 00
	00		 mov	 DWORD PTR [esi+276], edi
  0002d	8b c7		 mov	 eax, edi
  0002f	ba 04 00 00 00	 mov	 edx, 4
  00034	f7 e2		 mul	 edx
  00036	0f 90 c1	 seto	 cl
  00039	f7 d9		 neg	 ecx
  0003b	0b c8		 or	 ecx, eax
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00043	83 c4 04	 add	 esp, 4
  00046	89 86 10 01 00
	00		 mov	 DWORD PTR [esi+272], eax
$LN1@Alloc_lpdw:
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?Alloc_lpdwcntPoly_High@CCalcDataForDraw@@QAEXH@Z ENDP	; CCalcDataForDraw::Alloc_lpdwcntPoly_High
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?Alloc_lpPolyCount_High@CCalcDataForDraw@@QAEXH@Z
_TEXT	SEGMENT
_p_nSize$ = 8						; size = 4
?Alloc_lpPolyCount_High@CCalcDataForDraw@@QAEXH@Z PROC	; CCalcDataForDraw::Alloc_lpPolyCount_High, COMDAT
; _this$ = ecx

; 178  : _CDFD_DEFINE( INT, lpPolyCount_High);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
  00007	8b 7d 08	 mov	 edi, DWORD PTR _p_nSize$[ebp]
  0000a	3b be 0c 01 00
	00		 cmp	 edi, DWORD PTR [esi+268]
  00010	7e 3a		 jle	 SHORT $LN1@Alloc_lpPo
  00012	8b 86 08 01 00
	00		 mov	 eax, DWORD PTR [esi+264]
  00018	85 c0		 test	 eax, eax
  0001a	74 09		 je	 SHORT $LN3@Alloc_lpPo
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00022	83 c4 04	 add	 esp, 4
$LN3@Alloc_lpPo:
  00025	33 c9		 xor	 ecx, ecx
  00027	89 be 0c 01 00
	00		 mov	 DWORD PTR [esi+268], edi
  0002d	8b c7		 mov	 eax, edi
  0002f	ba 04 00 00 00	 mov	 edx, 4
  00034	f7 e2		 mul	 edx
  00036	0f 90 c1	 seto	 cl
  00039	f7 d9		 neg	 ecx
  0003b	0b c8		 or	 ecx, eax
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00043	83 c4 04	 add	 esp, 4
  00046	89 86 08 01 00
	00		 mov	 DWORD PTR [esi+264], eax
$LN1@Alloc_lpPo:
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?Alloc_lpPolyCount_High@CCalcDataForDraw@@QAEXH@Z ENDP	; CCalcDataForDraw::Alloc_lpPolyCount_High
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?Alloc_lpPoint_High@CCalcDataForDraw@@QAEXH@Z
_TEXT	SEGMENT
_p_nSize$ = 8						; size = 4
?Alloc_lpPoint_High@CCalcDataForDraw@@QAEXH@Z PROC	; CCalcDataForDraw::Alloc_lpPoint_High, COMDAT
; _this$ = ecx

; 177  : _CDFD_DEFINE( POINT, lpPoint_High);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
  00007	8b 7d 08	 mov	 edi, DWORD PTR _p_nSize$[ebp]
  0000a	3b be 04 01 00
	00		 cmp	 edi, DWORD PTR [esi+260]
  00010	7e 3a		 jle	 SHORT $LN1@Alloc_lpPo
  00012	8b 86 00 01 00
	00		 mov	 eax, DWORD PTR [esi+256]
  00018	85 c0		 test	 eax, eax
  0001a	74 09		 je	 SHORT $LN3@Alloc_lpPo
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00022	83 c4 04	 add	 esp, 4
$LN3@Alloc_lpPo:
  00025	33 c9		 xor	 ecx, ecx
  00027	89 be 04 01 00
	00		 mov	 DWORD PTR [esi+260], edi
  0002d	8b c7		 mov	 eax, edi
  0002f	ba 08 00 00 00	 mov	 edx, 8
  00034	f7 e2		 mul	 edx
  00036	0f 90 c1	 seto	 cl
  00039	f7 d9		 neg	 ecx
  0003b	0b c8		 or	 ecx, eax
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00043	83 c4 04	 add	 esp, 4
  00046	89 86 00 01 00
	00		 mov	 DWORD PTR [esi+256], eax
$LN1@Alloc_lpPo:
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?Alloc_lpPoint_High@CCalcDataForDraw@@QAEXH@Z ENDP	; CCalcDataForDraw::Alloc_lpPoint_High
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?Alloc_rtGraph@CCalcDataForDraw@@QAEXH@Z
_TEXT	SEGMENT
_p_nSize$ = 8						; size = 4
?Alloc_rtGraph@CCalcDataForDraw@@QAEXH@Z PROC		; CCalcDataForDraw::Alloc_rtGraph, COMDAT
; _this$ = ecx

; 176  : _CDFD_DEFINE( CRect, rtGraph);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 08	 mov	 esi, DWORD PTR _p_nSize$[ebp]
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	3b b7 fc 00 00
	00		 cmp	 esi, DWORD PTR [edi+252]
  00010	7e 77		 jle	 SHORT $LN1@Alloc_rtGr
  00012	8b 87 f8 00 00
	00		 mov	 eax, DWORD PTR [edi+248]
  00018	85 c0		 test	 eax, eax
  0001a	74 09		 je	 SHORT $LN3@Alloc_rtGr
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00022	83 c4 04	 add	 esp, 4
$LN3@Alloc_rtGr:
  00025	33 c9		 xor	 ecx, ecx
  00027	89 b7 fc 00 00
	00		 mov	 DWORD PTR [edi+252], esi
  0002d	8b c6		 mov	 eax, esi
  0002f	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00034	f7 e2		 mul	 edx
  00036	0f 90 c1	 seto	 cl
  00039	f7 d9		 neg	 ecx
  0003b	0b c8		 or	 ecx, eax
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00043	83 c4 04	 add	 esp, 4
  00046	85 c0		 test	 eax, eax
  00048	74 37		 je	 SHORT $LN5@Alloc_rtGr
  0004a	85 f6		 test	 esi, esi
  0004c	74 35		 je	 SHORT $LN6@Alloc_rtGr
  0004e	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
$LL8@Alloc_rtGr:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00051	c7 41 f8 00 00
	00 00		 mov	 DWORD PTR [ecx-8], 0
  00058	8d 49 10	 lea	 ecx, DWORD PTR [ecx+16]

; 529  : 	top = 0;

  0005b	c7 41 ec 00 00
	00 00		 mov	 DWORD PTR [ecx-20], 0

; 530  : 	right = 0;

  00062	c7 41 f0 00 00
	00 00		 mov	 DWORD PTR [ecx-16], 0

; 531  : 	bottom = 0;

  00069	c7 41 f4 00 00
	00 00		 mov	 DWORD PTR [ecx-12], 0
  00070	83 ee 01	 sub	 esi, 1
  00073	75 dc		 jne	 SHORT $LL8@Alloc_rtGr
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp

; 176  : _CDFD_DEFINE( CRect, rtGraph);

  00075	89 87 f8 00 00
	00		 mov	 DWORD PTR [edi+248], eax
  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi
  0007d	5d		 pop	 ebp
  0007e	c2 04 00	 ret	 4
$LN5@Alloc_rtGr:
  00081	33 c0		 xor	 eax, eax
$LN6@Alloc_rtGr:
  00083	89 87 f8 00 00
	00		 mov	 DWORD PTR [edi+248], eax
$LN1@Alloc_rtGr:
  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5d		 pop	 ebp
  0008c	c2 04 00	 ret	 4
?Alloc_rtGraph@CCalcDataForDraw@@QAEXH@Z ENDP		; CCalcDataForDraw::Alloc_rtGraph
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?Alloc_dCurVolume@CCalcDataForDraw@@QAEXH@Z
_TEXT	SEGMENT
_p_nSize$ = 8						; size = 4
?Alloc_dCurVolume@CCalcDataForDraw@@QAEXH@Z PROC	; CCalcDataForDraw::Alloc_dCurVolume, COMDAT
; _this$ = ecx

; 175  : _CDFD_DEFINE( double, dCurVolume);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
  00007	8b 7d 08	 mov	 edi, DWORD PTR _p_nSize$[ebp]
  0000a	3b be f4 00 00
	00		 cmp	 edi, DWORD PTR [esi+244]
  00010	7e 3a		 jle	 SHORT $LN1@Alloc_dCur
  00012	8b 86 f0 00 00
	00		 mov	 eax, DWORD PTR [esi+240]
  00018	85 c0		 test	 eax, eax
  0001a	74 09		 je	 SHORT $LN3@Alloc_dCur
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00022	83 c4 04	 add	 esp, 4
$LN3@Alloc_dCur:
  00025	33 c9		 xor	 ecx, ecx
  00027	89 be f4 00 00
	00		 mov	 DWORD PTR [esi+244], edi
  0002d	8b c7		 mov	 eax, edi
  0002f	ba 08 00 00 00	 mov	 edx, 8
  00034	f7 e2		 mul	 edx
  00036	0f 90 c1	 seto	 cl
  00039	f7 d9		 neg	 ecx
  0003b	0b c8		 or	 ecx, eax
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00043	83 c4 04	 add	 esp, 4
  00046	89 86 f0 00 00
	00		 mov	 DWORD PTR [esi+240], eax
$LN1@Alloc_dCur:
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?Alloc_dCurVolume@CCalcDataForDraw@@QAEXH@Z ENDP	; CCalcDataForDraw::Alloc_dCurVolume
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?Alloc_dCurClose@CCalcDataForDraw@@QAEXH@Z
_TEXT	SEGMENT
_p_nSize$ = 8						; size = 4
?Alloc_dCurClose@CCalcDataForDraw@@QAEXH@Z PROC		; CCalcDataForDraw::Alloc_dCurClose, COMDAT
; _this$ = ecx

; 174  : _CDFD_DEFINE( double, dCurClose);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
  00007	8b 7d 08	 mov	 edi, DWORD PTR _p_nSize$[ebp]
  0000a	3b be ec 00 00
	00		 cmp	 edi, DWORD PTR [esi+236]
  00010	7e 3a		 jle	 SHORT $LN1@Alloc_dCur
  00012	8b 86 e8 00 00
	00		 mov	 eax, DWORD PTR [esi+232]
  00018	85 c0		 test	 eax, eax
  0001a	74 09		 je	 SHORT $LN3@Alloc_dCur
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00022	83 c4 04	 add	 esp, 4
$LN3@Alloc_dCur:
  00025	33 c9		 xor	 ecx, ecx
  00027	89 be ec 00 00
	00		 mov	 DWORD PTR [esi+236], edi
  0002d	8b c7		 mov	 eax, edi
  0002f	ba 08 00 00 00	 mov	 edx, 8
  00034	f7 e2		 mul	 edx
  00036	0f 90 c1	 seto	 cl
  00039	f7 d9		 neg	 ecx
  0003b	0b c8		 or	 ecx, eax
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00043	83 c4 04	 add	 esp, 4
  00046	89 86 e8 00 00
	00		 mov	 DWORD PTR [esi+232], eax
$LN1@Alloc_dCur:
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?Alloc_dCurClose@CCalcDataForDraw@@QAEXH@Z ENDP		; CCalcDataForDraw::Alloc_dCurClose
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?Alloc_dCurOpen@CCalcDataForDraw@@QAEXH@Z
_TEXT	SEGMENT
_p_nSize$ = 8						; size = 4
?Alloc_dCurOpen@CCalcDataForDraw@@QAEXH@Z PROC		; CCalcDataForDraw::Alloc_dCurOpen, COMDAT
; _this$ = ecx

; 173  : _CDFD_DEFINE( double, dCurOpen);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
  00007	8b 7d 08	 mov	 edi, DWORD PTR _p_nSize$[ebp]
  0000a	3b be e4 00 00
	00		 cmp	 edi, DWORD PTR [esi+228]
  00010	7e 3a		 jle	 SHORT $LN1@Alloc_dCur
  00012	8b 86 e0 00 00
	00		 mov	 eax, DWORD PTR [esi+224]
  00018	85 c0		 test	 eax, eax
  0001a	74 09		 je	 SHORT $LN3@Alloc_dCur
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00022	83 c4 04	 add	 esp, 4
$LN3@Alloc_dCur:
  00025	33 c9		 xor	 ecx, ecx
  00027	89 be e4 00 00
	00		 mov	 DWORD PTR [esi+228], edi
  0002d	8b c7		 mov	 eax, edi
  0002f	ba 08 00 00 00	 mov	 edx, 8
  00034	f7 e2		 mul	 edx
  00036	0f 90 c1	 seto	 cl
  00039	f7 d9		 neg	 ecx
  0003b	0b c8		 or	 ecx, eax
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00043	83 c4 04	 add	 esp, 4
  00046	89 86 e0 00 00
	00		 mov	 DWORD PTR [esi+224], eax
$LN1@Alloc_dCur:
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?Alloc_dCurOpen@CCalcDataForDraw@@QAEXH@Z ENDP		; CCalcDataForDraw::Alloc_dCurOpen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?Alloc_pptLine@CCalcDataForDraw@@QAEXH@Z
_TEXT	SEGMENT
_p_nSize$ = 8						; size = 4
?Alloc_pptLine@CCalcDataForDraw@@QAEXH@Z PROC		; CCalcDataForDraw::Alloc_pptLine, COMDAT
; _this$ = ecx

; 172  : _CDFD_DEFINE( POINT, pptLine);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
  00007	8b 7d 08	 mov	 edi, DWORD PTR _p_nSize$[ebp]
  0000a	3b be dc 00 00
	00		 cmp	 edi, DWORD PTR [esi+220]
  00010	7e 3a		 jle	 SHORT $LN1@Alloc_pptL
  00012	8b 86 d8 00 00
	00		 mov	 eax, DWORD PTR [esi+216]
  00018	85 c0		 test	 eax, eax
  0001a	74 09		 je	 SHORT $LN3@Alloc_pptL
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00022	83 c4 04	 add	 esp, 4
$LN3@Alloc_pptL:
  00025	33 c9		 xor	 ecx, ecx
  00027	89 be dc 00 00
	00		 mov	 DWORD PTR [esi+220], edi
  0002d	8b c7		 mov	 eax, edi
  0002f	ba 08 00 00 00	 mov	 edx, 8
  00034	f7 e2		 mul	 edx
  00036	0f 90 c1	 seto	 cl
  00039	f7 d9		 neg	 ecx
  0003b	0b c8		 or	 ecx, eax
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00043	83 c4 04	 add	 esp, 4
  00046	89 86 d8 00 00
	00		 mov	 DWORD PTR [esi+216], eax
$LN1@Alloc_pptL:
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?Alloc_pptLine@CCalcDataForDraw@@QAEXH@Z ENDP		; CCalcDataForDraw::Alloc_pptLine
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?ResetValue@CCalcDataForDraw@@QAEXXZ
_TEXT	SEGMENT
?ResetValue@CCalcDataForDraw@@QAEXXZ PROC		; CCalcDataForDraw::ResetValue, COMDAT
; _this$ = ecx

; 106  : {

  00000	0f 57 c9	 xorps	 xmm1, xmm1

; 107  : 	m_dMax = 0.0;
; 108  : 	m_dMin = 0.0;
; 109  : 	m_bLog = false;

  00003	66 c7 41 48 00
	00		 mov	 WORD PTR [ecx+72], 0
  00009	0f 57 c0	 xorps	 xmm0, xmm0

; 110  : 	m_bInvert = false;
; 111  : 	m_graphRegion = CRect(0,0,0,0);
; 112  : 	m_nPoints	  = 0;

  0000c	c7 81 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+160], 0
  00016	0f 11 49 08	 movups	 XMMWORD PTR [ecx+8], xmm1

; 113  : 	m_Prept = CPoint(0,0);

  0001a	c7 41 5c 00 00
	00 00		 mov	 DWORD PTR [ecx+92], 0
  00021	0f 11 41 4c	 movups	 XMMWORD PTR [ecx+76], xmm0
  00025	c7 41 60 00 00
	00 00		 mov	 DWORD PTR [ecx+96], 0

; 114  : 
; 115  : 	m_nS_High = 0;

  0002c	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0

; 116  : 	m_nH_High = 0;

  00033	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0

; 117  : 	m_nL_High = 0;

  0003a	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0

; 118  : 	m_nE_High = 0;

  00041	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0

; 119  : 	m_nS_Low  = 0;

  00048	c7 41 28 00 00
	00 00		 mov	 DWORD PTR [ecx+40], 0

; 120  : 	m_nH_Low  = 0;

  0004f	c7 41 2c 00 00
	00 00		 mov	 DWORD PTR [ecx+44], 0

; 121  : 	m_nL_Low  = 0;

  00056	c7 41 30 00 00
	00 00		 mov	 DWORD PTR [ecx+48], 0

; 122  : 	m_nE_Low  = 0;

  0005d	c7 41 34 00 00
	00 00		 mov	 DWORD PTR [ecx+52], 0

; 123  : 
; 124  : 	m_nCurXHigh = 0;

  00064	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], 0

; 125  : 	m_nCurXLow  = 0;

  0006b	c7 41 44 00 00
	00 00		 mov	 DWORD PTR [ecx+68], 0

; 126  : 	m_nHighLow  = 0;

  00072	c7 41 64 00 00
	00 00		 mov	 DWORD PTR [ecx+100], 0

; 127  : 
; 128  : 	nFlag		= 0;

  00079	c7 41 68 00 00
	00 00		 mov	 DWORD PTR [ecx+104], 0

; 129  : 	nDTI_Start	= 0;

  00080	c7 41 6c 00 00
	00 00		 mov	 DWORD PTR [ecx+108], 0

; 130  : 	nDTI_End	= 0;

  00087	c7 41 70 00 00
	00 00		 mov	 DWORD PTR [ecx+112], 0

; 131  : 	nMaxTop		= INT_MAX;

  0008e	c7 41 7c ff ff
	ff 7f		 mov	 DWORD PTR [ecx+124], 2147483647 ; 7fffffffH

; 132  : 	nPreLeft    = 0;

  00095	c7 81 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+128], 0

; 133  : 	nDTI_Start_LastPixel = 0;

  0009f	c7 41 74 00 00
	00 00		 mov	 DWORD PTR [ecx+116], 0

; 134  : 	nIndex_LastPixel	 = 0;

  000a6	c7 41 78 00 00
	00 00		 mov	 DWORD PTR [ecx+120], 0

; 135  : 	nArrowIndex			 = 0;

  000ad	c7 81 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+156], 0

; 136  : 	dPreClose			 = 0;

  000b7	0f 11 89 a8 00
	00 00		 movups	 XMMWORD PTR [ecx+168], xmm1

; 137  : 	dPreVolume			 = 0;
; 138  : 	nCount_High			 = 0;

  000be	c7 81 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+184], 0

; 139  : 	nCount_Low			 = 0;

  000c8	c7 81 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+188], 0

; 140  : 	nCount_Bohap	  	 = 0;

  000d2	c7 81 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+192], 0

; 141  : 	nCount_High2		 = 0;

  000dc	c7 81 c8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+200], 0

; 142  : 	nCount_Low2			 = 0;

  000e6	c7 81 cc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+204], 0

; 143  : 	nCount_Bohap2	  	 = 0;

  000f0	c7 81 d0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+208], 0

; 144  : 	nPtCnt				 = 0;

  000fa	c7 81 c4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+196], 0

; 145  : 	nLastPixel_high		 = 0;

  00104	c7 81 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+132], 0

; 146  : 	nLastPixel_Low		 = 0;

  0010e	c7 81 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+136], 0

; 147  : 	nLastPixel_Bohap	 = 0;

  00118	c7 81 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+140], 0

; 148  : 	nLastPolyCnt_high    = 0;

  00122	c7 81 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+144], 0

; 149  : 	nLastPolyCnt_Low	 = 0;

  0012c	c7 81 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+148], 0

; 150  : 	nLastPolyCnt_Bohap	 = 0;

  00136	c7 81 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+152], 0

; 151  : 	nPolyCount_High			= 0;

  00140	c7 81 48 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+328], 0

; 152  : 	nPointCount_High		= 0;

  0014a	c7 81 4c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+332], 0

; 153  : 	nLastPolyCount_High		= 0;

  00154	c7 81 50 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+336], 0

; 154  : 	nLastPointCount_High	= 0;

  0015e	c7 81 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+340], 0

; 155  : 	nPolyCount_Low			= 0;

  00168	c7 81 58 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+344], 0

; 156  : 	nPointCount_Low			= 0;

  00172	c7 81 5c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+348], 0

; 157  : 	nLastPolyCount_Low		= 0;

  0017c	c7 81 60 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+352], 0

; 158  : 	nLastPointCount_Low		= 0;

  00186	c7 81 64 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+356], 0

; 159  : 
; 160  : 	// (2009/2/27 - Seung-Won, Bae) Temporary Pointer (no memory)
; 161  : 	MAKENULL( m_pTemp);

  00190	c7 81 d4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+212], 0

; 162  : }

  0019a	c3		 ret	 0
?ResetValue@CCalcDataForDraw@@QAEXXZ ENDP		; CCalcDataForDraw::ResetValue
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ??1CCalcDataForDraw@@MAE@XZ
_TEXT	SEGMENT
??1CCalcDataForDraw@@MAE@XZ PROC			; CCalcDataForDraw::~CCalcDataForDraw, COMDAT
; _this$ = ecx

; 60   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 61   : 	// (2009/2/27 - Seung-Won, Bae) Temporary Pointer (no memory)
; 62   : 	MAKENULL( m_pTemp);
; 63   : 
; 64   : 	SAFE_DELETE(pptLine);

  00003	8b 86 d8 00 00
	00		 mov	 eax, DWORD PTR [esi+216]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CCalcDataForDraw@@6B@
  0000f	c7 86 d4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+212], 0
  00019	85 c0		 test	 eax, eax
  0001b	74 0b		 je	 SHORT $LN2@CCalcDataF
  0001d	6a 08		 push	 8
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00025	83 c4 08	 add	 esp, 8
$LN2@CCalcDataF:

; 65   : 	SAFE_DELETE(dCurOpen);

  00028	8b 86 e0 00 00
	00		 mov	 eax, DWORD PTR [esi+224]
  0002e	c7 86 d8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+216], 0
  00038	85 c0		 test	 eax, eax
  0003a	74 0b		 je	 SHORT $LN3@CCalcDataF
  0003c	6a 08		 push	 8
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00044	83 c4 08	 add	 esp, 8
$LN3@CCalcDataF:

; 66   : 	SAFE_DELETE(dCurClose);

  00047	8b 86 e8 00 00
	00		 mov	 eax, DWORD PTR [esi+232]
  0004d	c7 86 e0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+224], 0
  00057	85 c0		 test	 eax, eax
  00059	74 0b		 je	 SHORT $LN4@CCalcDataF
  0005b	6a 08		 push	 8
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00063	83 c4 08	 add	 esp, 8
$LN4@CCalcDataF:

; 67   : 	SAFE_DELETE(dCurVolume);

  00066	8b 86 f0 00 00
	00		 mov	 eax, DWORD PTR [esi+240]
  0006c	c7 86 e8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+232], 0
  00076	85 c0		 test	 eax, eax
  00078	74 0b		 je	 SHORT $LN5@CCalcDataF
  0007a	6a 08		 push	 8
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00082	83 c4 08	 add	 esp, 8
$LN5@CCalcDataF:

; 68   : 	SAFE_DELETE(rtGraph);

  00085	8b 86 f8 00 00
	00		 mov	 eax, DWORD PTR [esi+248]
  0008b	c7 86 f0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+240], 0
  00095	85 c0		 test	 eax, eax
  00097	74 0b		 je	 SHORT $LN6@CCalcDataF
  00099	6a 10		 push	 16			; 00000010H
  0009b	50		 push	 eax
  0009c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000a1	83 c4 08	 add	 esp, 8
$LN6@CCalcDataF:

; 69   : 	SAFE_DELETE(lpPoint_High);

  000a4	8b 86 00 01 00
	00		 mov	 eax, DWORD PTR [esi+256]
  000aa	c7 86 f8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+248], 0
  000b4	85 c0		 test	 eax, eax
  000b6	74 0b		 je	 SHORT $LN7@CCalcDataF
  000b8	6a 08		 push	 8
  000ba	50		 push	 eax
  000bb	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000c0	83 c4 08	 add	 esp, 8
$LN7@CCalcDataF:

; 70   : 	SAFE_DELETE(lpPoint_Low);

  000c3	8b 86 18 01 00
	00		 mov	 eax, DWORD PTR [esi+280]
  000c9	c7 86 00 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+256], 0
  000d3	85 c0		 test	 eax, eax
  000d5	74 0b		 je	 SHORT $LN8@CCalcDataF
  000d7	6a 08		 push	 8
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000df	83 c4 08	 add	 esp, 8
$LN8@CCalcDataF:

; 71   : 	SAFE_DELETE(lpPoint_Bohap);

  000e2	8b 86 30 01 00
	00		 mov	 eax, DWORD PTR [esi+304]
  000e8	c7 86 18 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+280], 0
  000f2	85 c0		 test	 eax, eax
  000f4	74 0b		 je	 SHORT $LN9@CCalcDataF
  000f6	6a 08		 push	 8
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000fe	83 c4 08	 add	 esp, 8
$LN9@CCalcDataF:

; 72   : 	SAFE_DELETE(lpPolyCount_High);

  00101	8b 86 08 01 00
	00		 mov	 eax, DWORD PTR [esi+264]
  00107	c7 86 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+304], 0
  00111	85 c0		 test	 eax, eax
  00113	74 0b		 je	 SHORT $LN10@CCalcDataF
  00115	6a 04		 push	 4
  00117	50		 push	 eax
  00118	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0011d	83 c4 08	 add	 esp, 8
$LN10@CCalcDataF:

; 73   : 	SAFE_DELETE(lpPolyCount_Low);

  00120	8b 86 20 01 00
	00		 mov	 eax, DWORD PTR [esi+288]
  00126	c7 86 08 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+264], 0
  00130	85 c0		 test	 eax, eax
  00132	74 0b		 je	 SHORT $LN11@CCalcDataF
  00134	6a 04		 push	 4
  00136	50		 push	 eax
  00137	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0013c	83 c4 08	 add	 esp, 8
$LN11@CCalcDataF:

; 74   : 	SAFE_DELETE(lpPolyCount_Bohap);

  0013f	8b 86 38 01 00
	00		 mov	 eax, DWORD PTR [esi+312]
  00145	c7 86 20 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+288], 0
  0014f	85 c0		 test	 eax, eax
  00151	74 0b		 je	 SHORT $LN12@CCalcDataF
  00153	6a 04		 push	 4
  00155	50		 push	 eax
  00156	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0015b	83 c4 08	 add	 esp, 8
$LN12@CCalcDataF:

; 75   : 	SAFE_DELETE(lpdwcntPoly_High);

  0015e	8b 86 10 01 00
	00		 mov	 eax, DWORD PTR [esi+272]
  00164	c7 86 38 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+312], 0
  0016e	85 c0		 test	 eax, eax
  00170	74 0b		 je	 SHORT $LN13@CCalcDataF
  00172	6a 04		 push	 4
  00174	50		 push	 eax
  00175	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0017a	83 c4 08	 add	 esp, 8
$LN13@CCalcDataF:

; 76   : 	SAFE_DELETE(lpdwcntPoly_Low);	

  0017d	8b 86 28 01 00
	00		 mov	 eax, DWORD PTR [esi+296]
  00183	c7 86 10 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+272], 0
  0018d	85 c0		 test	 eax, eax
  0018f	74 0b		 je	 SHORT $LN14@CCalcDataF
  00191	6a 04		 push	 4
  00193	50		 push	 eax
  00194	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00199	83 c4 08	 add	 esp, 8
$LN14@CCalcDataF:

; 77   : 	SAFE_DELETE(lpdwcntPoly_Bohap);	

  0019c	8b 86 40 01 00
	00		 mov	 eax, DWORD PTR [esi+320]
  001a2	c7 86 28 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+296], 0
  001ac	85 c0		 test	 eax, eax
  001ae	74 0b		 je	 SHORT $LN15@CCalcDataF
  001b0	6a 04		 push	 4
  001b2	50		 push	 eax
  001b3	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001b8	83 c4 08	 add	 esp, 8
$LN15@CCalcDataF:

; 78   : 	SAFE_DELETE( lpPointBuffer);

  001bb	8b 86 68 01 00
	00		 mov	 eax, DWORD PTR [esi+360]
  001c1	c7 86 40 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+320], 0
  001cb	85 c0		 test	 eax, eax
  001cd	74 0b		 je	 SHORT $LN18@CCalcDataF
  001cf	6a 08		 push	 8
  001d1	50		 push	 eax
  001d2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001d7	83 c4 08	 add	 esp, 8
$LN18@CCalcDataF:

; 79   : }

  001da	c7 86 68 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+360], 0
  001e4	5e		 pop	 esi
  001e5	c3		 ret	 0
??1CCalcDataForDraw@@MAE@XZ ENDP			; CCalcDataForDraw::~CCalcDataForDraw
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?SetYValue@CCalcDataForDraw@@QAEXNN_N0ABVCRect@@H@Z
_TEXT	SEGMENT
_dMaxValue$ = 8						; size = 8
_dMinValue$ = 16					; size = 8
_bLog$ = 24						; size = 1
_bInvert$ = 28						; size = 1
_graphRegion$ = 32					; size = 4
_nCntPoint$ = 36					; size = 4
?SetYValue@CCalcDataForDraw@@QAEXNN_N0ABVCRect@@H@Z PROC ; CCalcDataForDraw::SetYValue, COMDAT
; _this$ = ecx

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 96   : 	m_dMax			= dMaxValue;
; 97   : 	m_dMin			= dMinValue;
; 98   : 	m_bLog			= bLog;

  00003	8a 45 18	 mov	 al, BYTE PTR _bLog$[ebp]
  00006	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _dMaxValue$[ebp]
  0000b	88 41 48	 mov	 BYTE PTR [ecx+72], al

; 99   : 	m_bInvert		= bInvert;

  0000e	8a 45 1c	 mov	 al, BYTE PTR _bInvert$[ebp]
  00011	88 41 49	 mov	 BYTE PTR [ecx+73], al

; 100  : 	m_graphRegion	= graphRegion;

  00014	8b 45 20	 mov	 eax, DWORD PTR _graphRegion$[ebp]
  00017	f2 0f 11 41 08	 movsd	 QWORD PTR [ecx+8], xmm0
  0001c	f2 0f 10 45 10	 movsd	 xmm0, QWORD PTR _dMinValue$[ebp]
  00021	f2 0f 11 41 10	 movsd	 QWORD PTR [ecx+16], xmm0
  00026	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 101  : 	m_nPoints	    = nCntPoint;

  00029	8b 45 24	 mov	 eax, DWORD PTR _nCntPoint$[ebp]
  0002c	89 81 a0 00 00
	00		 mov	 DWORD PTR [ecx+160], eax
  00032	0f 11 41 4c	 movups	 XMMWORD PTR [ecx+76], xmm0

; 102  : }

  00036	5d		 pop	 ebp
  00037	c2 20 00	 ret	 32			; 00000020H
?SetYValue@CCalcDataForDraw@@QAEXNN_N0ABVCRect@@H@Z ENDP ; CCalcDataForDraw::SetYValue
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?CheckYValue@CCalcDataForDraw@@QAE_NNN_N0ABVCRect@@H@Z
_TEXT	SEGMENT
_dMaxValue$ = 8						; size = 8
_dMinValue$ = 16					; size = 8
tv203 = 24						; size = 4
_bLog$ = 24						; size = 1
_bInvert$ = 28						; size = 1
_graphRegion$ = 32					; size = 4
_nCntPoint$ = 36					; size = 4
?CheckYValue@CCalcDataForDraw@@QAE_NNN_N0ABVCRect@@H@Z PROC ; CCalcDataForDraw::CheckYValue, COMDAT
; _this$ = ecx

; 82   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 83   : 	bool bResult = TRUE;

  00007	b0 01		 mov	 al, 1

; 84   : 
; 85   : 	if(m_dMax	 != dMaxValue)		bResult = FALSE;

  00009	f2 0f 10 46 08	 movsd	 xmm0, QWORD PTR [esi+8]
  0000e	66 0f 2e 45 08	 ucomisd xmm0, QWORD PTR _dMaxValue$[ebp]
  00013	9f		 lahf
  00014	f6 c4 44	 test	 ah, 68			; 00000044H
  00017	7b 02		 jnp	 SHORT $LN2@CheckYValu
  00019	32 c0		 xor	 al, al
$LN2@CheckYValu:

; 86   : 	if(m_dMin	 != dMinValue)		bResult = FALSE;

  0001b	f2 0f 10 46 10	 movsd	 xmm0, QWORD PTR [esi+16]
  00020	66 0f 2e 45 10	 ucomisd xmm0, QWORD PTR _dMinValue$[ebp]
  00025	9f		 lahf
  00026	f6 c4 44	 test	 ah, 68			; 00000044H
  00029	7b 02		 jnp	 SHORT $LN3@CheckYValu
  0002b	32 c0		 xor	 al, al
$LN3@CheckYValu:

; 87   : 	if(m_bLog  	 != bLog)			bResult = FALSE;

  0002d	8a 4e 48	 mov	 cl, BYTE PTR [esi+72]

; 88   : 	if(m_bInvert != bInvert)		bResult = FALSE;

  00030	33 d2		 xor	 edx, edx
  00032	3a 4d 18	 cmp	 cl, BYTE PTR _bLog$[ebp]
  00035	8a 5e 49	 mov	 bl, BYTE PTR [esi+73]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 775  : 	return !::EqualRect(this, &rect);

  00038	ff 75 20	 push	 DWORD PTR _graphRegion$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp

; 88   : 	if(m_bInvert != bInvert)		bResult = FALSE;

  0003b	0f b6 c0	 movzx	 eax, al
  0003e	0f 44 d0	 cmove	 edx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 775  : 	return !::EqualRect(this, &rect);

  00041	33 c9		 xor	 ecx, ecx
  00043	3a 5d 1c	 cmp	 bl, BYTE PTR _bInvert$[ebp]
  00046	0f b6 c2	 movzx	 eax, dl
  00049	0f 44 c8	 cmove	 ecx, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp

; 89   : 	if(m_graphRegion != graphRegion)bResult = FALSE;

  0004c	8d 46 4c	 lea	 eax, DWORD PTR [esi+76]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 775  : 	return !::EqualRect(this, &rect);

  0004f	50		 push	 eax
  00050	89 4d 18	 mov	 DWORD PTR tv203[ebp], ecx
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EqualRect@8
  00059	8b c8		 mov	 ecx, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp

; 89   : 	if(m_graphRegion != graphRegion)bResult = FALSE;

  0005b	f7 d9		 neg	 ecx
  0005d	1a c9		 sbb	 cl, cl

; 90   : 	if(m_nPoints     != nCntPoint)  bResult = FALSE;
; 91   : 	return bResult;

  0005f	33 c0		 xor	 eax, eax
  00061	22 4d 18	 and	 cl, BYTE PTR tv203[ebp]
  00064	0f b6 d1	 movzx	 edx, cl
  00067	8b 8e a0 00 00
	00		 mov	 ecx, DWORD PTR [esi+160]
  0006d	3b 4d 24	 cmp	 ecx, DWORD PTR _nCntPoint$[ebp]
  00070	5e		 pop	 esi
  00071	0f 44 c2	 cmove	 eax, edx
  00074	5b		 pop	 ebx

; 92   : }

  00075	5d		 pop	 ebp
  00076	c2 20 00	 ret	 32			; 00000020H
?CheckYValue@CCalcDataForDraw@@QAE_NNN_N0ABVCRect@@H@Z ENDP ; CCalcDataForDraw::CheckYValue
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ??0CCalcDataForDraw@@QAE@XZ
_TEXT	SEGMENT
??0CCalcDataForDraw@@QAE@XZ PROC			; CCalcDataForDraw::CCalcDataForDraw, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 529  : 	top = 0;

  00000	c7 41 50 00 00
	00 00		 mov	 DWORD PTR [ecx+80], 0
  00007	0f 57 c9	 xorps	 xmm1, xmm1

; 530  : 	right = 0;

  0000a	c7 41 54 00 00
	00 00		 mov	 DWORD PTR [ecx+84], 0
  00011	0f 57 c0	 xorps	 xmm0, xmm0

; 531  : 	bottom = 0;

  00014	c7 41 58 00 00
	00 00		 mov	 DWORD PTR [ecx+88], 0

; 401  : 	y = 0;

  0001b	c7 41 60 00 00
	00 00		 mov	 DWORD PTR [ecx+96], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp

; 15   : {	

  00022	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CCalcDataForDraw@@6B@

; 107  : 	m_dMax = 0.0;

  00028	0f 11 49 08	 movups	 XMMWORD PTR [ecx+8], xmm1

; 108  : 	m_dMin = 0.0;
; 109  : 	m_bLog = false;

  0002c	66 c7 41 48 00
	00		 mov	 WORD PTR [ecx+72], 0

; 110  : 	m_bInvert = false;
; 111  : 	m_graphRegion = CRect(0,0,0,0);

  00032	0f 11 41 4c	 movups	 XMMWORD PTR [ecx+76], xmm0

; 112  : 	m_nPoints	  = 0;

  00036	c7 81 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+160], 0

; 113  : 	m_Prept = CPoint(0,0);

  00040	c7 41 5c 00 00
	00 00		 mov	 DWORD PTR [ecx+92], 0
  00047	c7 41 60 00 00
	00 00		 mov	 DWORD PTR [ecx+96], 0

; 114  : 
; 115  : 	m_nS_High = 0;

  0004e	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0

; 116  : 	m_nH_High = 0;

  00055	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0

; 117  : 	m_nL_High = 0;

  0005c	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0

; 118  : 	m_nE_High = 0;

  00063	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0

; 119  : 	m_nS_Low  = 0;

  0006a	c7 41 28 00 00
	00 00		 mov	 DWORD PTR [ecx+40], 0

; 120  : 	m_nH_Low  = 0;

  00071	c7 41 2c 00 00
	00 00		 mov	 DWORD PTR [ecx+44], 0

; 121  : 	m_nL_Low  = 0;

  00078	c7 41 30 00 00
	00 00		 mov	 DWORD PTR [ecx+48], 0

; 122  : 	m_nE_Low  = 0;

  0007f	c7 41 34 00 00
	00 00		 mov	 DWORD PTR [ecx+52], 0

; 123  : 
; 124  : 	m_nCurXHigh = 0;

  00086	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], 0

; 125  : 	m_nCurXLow  = 0;

  0008d	c7 41 44 00 00
	00 00		 mov	 DWORD PTR [ecx+68], 0

; 126  : 	m_nHighLow  = 0;

  00094	c7 41 64 00 00
	00 00		 mov	 DWORD PTR [ecx+100], 0

; 127  : 
; 128  : 	nFlag		= 0;

  0009b	c7 41 68 00 00
	00 00		 mov	 DWORD PTR [ecx+104], 0

; 129  : 	nDTI_Start	= 0;

  000a2	c7 41 6c 00 00
	00 00		 mov	 DWORD PTR [ecx+108], 0

; 130  : 	nDTI_End	= 0;

  000a9	c7 41 70 00 00
	00 00		 mov	 DWORD PTR [ecx+112], 0

; 131  : 	nMaxTop		= INT_MAX;

  000b0	c7 41 7c ff ff
	ff 7f		 mov	 DWORD PTR [ecx+124], 2147483647 ; 7fffffffH

; 132  : 	nPreLeft    = 0;

  000b7	c7 81 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+128], 0

; 133  : 	nDTI_Start_LastPixel = 0;

  000c1	c7 41 74 00 00
	00 00		 mov	 DWORD PTR [ecx+116], 0

; 134  : 	nIndex_LastPixel	 = 0;

  000c8	c7 41 78 00 00
	00 00		 mov	 DWORD PTR [ecx+120], 0

; 135  : 	nArrowIndex			 = 0;

  000cf	c7 81 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+156], 0

; 136  : 	dPreClose			 = 0;

  000d9	0f 11 89 a8 00
	00 00		 movups	 XMMWORD PTR [ecx+168], xmm1

; 137  : 	dPreVolume			 = 0;
; 138  : 	nCount_High			 = 0;

  000e0	c7 81 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+184], 0

; 139  : 	nCount_Low			 = 0;

  000ea	c7 81 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+188], 0

; 140  : 	nCount_Bohap	  	 = 0;

  000f4	c7 81 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+192], 0

; 141  : 	nCount_High2		 = 0;

  000fe	c7 81 c8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+200], 0

; 142  : 	nCount_Low2			 = 0;

  00108	c7 81 cc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+204], 0

; 143  : 	nCount_Bohap2	  	 = 0;

  00112	c7 81 d0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+208], 0

; 144  : 	nPtCnt				 = 0;

  0011c	c7 81 c4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+196], 0

; 145  : 	nLastPixel_high		 = 0;

  00126	c7 81 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+132], 0

; 146  : 	nLastPixel_Low		 = 0;

  00130	c7 81 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+136], 0

; 147  : 	nLastPixel_Bohap	 = 0;

  0013a	c7 81 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+140], 0

; 148  : 	nLastPolyCnt_high    = 0;

  00144	c7 81 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+144], 0

; 149  : 	nLastPolyCnt_Low	 = 0;

  0014e	c7 81 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+148], 0

; 150  : 	nLastPolyCnt_Bohap	 = 0;

  00158	c7 81 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+152], 0

; 151  : 	nPolyCount_High			= 0;

  00162	c7 81 48 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+328], 0

; 152  : 	nPointCount_High		= 0;

  0016c	c7 81 4c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+332], 0

; 153  : 	nLastPolyCount_High		= 0;

  00176	c7 81 50 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+336], 0

; 154  : 	nLastPointCount_High	= 0;

  00180	c7 81 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+340], 0

; 155  : 	nPolyCount_Low			= 0;

  0018a	c7 81 58 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+344], 0

; 156  : 	nPointCount_Low			= 0;

  00194	c7 81 5c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+348], 0

; 157  : 	nLastPolyCount_Low		= 0;

  0019e	c7 81 60 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+352], 0

; 158  : 	nLastPointCount_Low		= 0;

  001a8	c7 81 64 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+356], 0

; 159  : 
; 160  : 	// (2009/2/27 - Seung-Won, Bae) Temporary Pointer (no memory)
; 161  : 	MAKENULL( m_pTemp);

  001b2	c7 81 d4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+212], 0

; 16   : 	// (2009/3/11 - Seung-Won, Bae) Manage memory for no-reallocation.
; 17   : 	//		Reset all value in ResetValue().
; 18   : 	//		But Do not reset Memory Pointer and Size Value in ResetValue().
; 19   : 	ResetValue();
; 20   : 
; 21   : 	// (2009/3/11 - Seung-Won, Bae) Manage memory for no-reallocation.
; 22   : 	//		Memory Pointer
; 23   : 	MAKENULL(pptLine);

  001bc	c7 81 d8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+216], 0

; 24   : 	MAKENULL(dCurOpen);

  001c6	c7 81 e0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+224], 0

; 25   : 	MAKENULL(dCurClose);

  001d0	c7 81 e8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+232], 0

; 26   : 	MAKENULL(dCurVolume);

  001da	c7 81 f0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+240], 0

; 27   : 	MAKENULL(rtGraph);

  001e4	c7 81 f8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+248], 0

; 28   : 	MAKENULL(lpPoint_High);

  001ee	c7 81 00 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+256], 0

; 29   : 	MAKENULL(lpPoint_Low);

  001f8	c7 81 18 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+280], 0

; 30   : 	MAKENULL(lpPoint_Bohap);

  00202	c7 81 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+304], 0

; 31   : 	MAKENULL(lpPolyCount_High);

  0020c	c7 81 08 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+264], 0

; 32   : 	MAKENULL(lpPolyCount_Low);

  00216	c7 81 20 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+288], 0

; 33   : 	MAKENULL(lpPolyCount_Bohap);

  00220	c7 81 38 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+312], 0

; 34   : 	MAKENULL(lpdwcntPoly_High);

  0022a	c7 81 10 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+272], 0

; 35   : 	MAKENULL(lpdwcntPoly_Low);	

  00234	c7 81 28 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+296], 0

; 36   : 	MAKENULL(lpdwcntPoly_Bohap);

  0023e	c7 81 40 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+320], 0

; 37   : 	MAKENULL( lpPointBuffer);

  00248	c7 81 68 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+360], 0

; 38   : 
; 39   : 	// (2009/3/11 - Seung-Won, Bae) Manage memory for no-reallocation.
; 40   : 	//		Size Value
; 41   : 	nSize_pptLine = 0;
; 42   : 	nSize_pptLine = 0;

  00252	c7 81 dc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+220], 0

; 43   : 	nSize_dCurOpen = 0;

  0025c	c7 81 e4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+228], 0

; 44   : 	nSize_dCurClose = 0;

  00266	c7 81 ec 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+236], 0

; 45   : 	nSize_dCurVolume = 0;

  00270	c7 81 f4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+244], 0

; 46   : 	nSize_rtGraph = 0;

  0027a	c7 81 fc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+252], 0

; 47   : 	nSize_lpPoint_High = 0;

  00284	c7 81 04 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+260], 0

; 48   : 	nSize_lpPolyCount_High = 0;

  0028e	c7 81 0c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+268], 0

; 49   : 	nSize_lpdwcntPoly_High = 0;

  00298	c7 81 14 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+276], 0

; 50   : 	nSize_lpPoint_Low = 0;

  002a2	c7 81 1c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+284], 0

; 51   : 	nSize_lpPolyCount_Low = 0;

  002ac	c7 81 24 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+292], 0

; 52   : 	nSize_lpdwcntPoly_Low = 0;

  002b6	c7 81 2c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+300], 0

; 53   : 	nSize_lpPoint_Bohap = 0;

  002c0	c7 81 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+308], 0

; 54   : 	nSize_lpPolyCount_Bohap = 0;
; 55   : 	nSize_lpdwcntPoly_Bohap = 0;
; 56   : 	nSize_lpPointBuffer		= 0;
; 57   : }

  002ca	8b c1		 mov	 eax, ecx
  002cc	c7 81 3c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+316], 0
  002d6	c7 81 44 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+324], 0
  002e0	c7 81 6c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+364], 0
  002ea	c3		 ret	 0
??0CCalcDataForDraw@@QAE@XZ ENDP			; CCalcDataForDraw::CCalcDataForDraw
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT
??0CRect@@QAE@XZ PROC					; CRect::CRect, COMDAT
; _this$ = ecx

; 528  : 	left = 0;

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 529  : 	top = 0;
; 530  : 	right = 0;
; 531  : 	bottom = 0;
; 532  : }

  00006	8b c1		 mov	 eax, ecx
  00008	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0000f	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00016	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  0001d	c3		 ret	 0
??0CRect@@QAE@XZ ENDP					; CRect::CRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\CalcDataForDraw.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
