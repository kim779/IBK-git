; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\HWStrategyConfigureWizard\xySplitterWnd.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1CObject@@UAE@XZ				; CObject::~CObject
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
PUBLIC	??_GCStatic@@UAEPAXI@Z				; CStatic::`scalar deleting destructor'
PUBLIC	??0CxSplitterWnd@@QAE@XZ			; CxSplitterWnd::CxSplitterWnd
PUBLIC	??0?$CArray@UControlInfo@@AAU1@@@QAE@XZ		; CArray<ControlInfo,ControlInfo &>::CArray<ControlInfo,ControlInfo &>
PUBLIC	?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z	; CArray<ControlInfo,ControlInfo &>::SetSize
PUBLIC	?SetAtGrow@?$CArray@UControlInfo@@AAU1@@@QAEXHAAUControlInfo@@@Z ; CArray<ControlInfo,ControlInfo &>::SetAtGrow
PUBLIC	??1?$CArray@UControlInfo@@AAU1@@@UAE@XZ		; CArray<ControlInfo,ControlInfo &>::~CArray<ControlInfo,ControlInfo &>
PUBLIC	?Serialize@?$CArray@UControlInfo@@AAU1@@@UAEXAAVCArchive@@@Z ; CArray<ControlInfo,ControlInfo &>::Serialize
PUBLIC	??_G?$CArray@UControlInfo@@AAU1@@@UAEPAXI@Z	; CArray<ControlInfo,ControlInfo &>::`scalar deleting destructor'
PUBLIC	?BindWithControl@CxSplitterWnd@@QAE_NPAVCWnd@@K@Z ; CxSplitterWnd::BindWithControl
PUBLIC	?CreateInWnd@CxSplitterWnd@@QAE_NPAVCWnd@@KPAUtagRECT@@@Z ; CxSplitterWnd::CreateInWnd
PUBLIC	?Unbind@CxSplitterWnd@@QAEXXZ			; CxSplitterWnd::Unbind
PUBLIC	?SetMinWidth@CxSplitterWnd@@QAEXHH@Z		; CxSplitterWnd::SetMinWidth
PUBLIC	?AttachAsLeftCtrl@CxSplitterWnd@@QAE_NH_N@Z	; CxSplitterWnd::AttachAsLeftCtrl
PUBLIC	?AttachAsLeftCtrl@CxSplitterWnd@@QAE_NPAVCWnd@@_N@Z ; CxSplitterWnd::AttachAsLeftCtrl
PUBLIC	?AttachAsLeftCtrl@CxSplitterWnd@@QAE_NHH_N@Z	; CxSplitterWnd::AttachAsLeftCtrl
PUBLIC	?AttachAsLeftCtrl@CxSplitterWnd@@QAE_NPAVCWnd@@H_N@Z ; CxSplitterWnd::AttachAsLeftCtrl
PUBLIC	?AttachAsRightCtrl@CxSplitterWnd@@QAE_NH_N@Z	; CxSplitterWnd::AttachAsRightCtrl
PUBLIC	?AttachAsRightCtrl@CxSplitterWnd@@QAE_NPAVCWnd@@_N@Z ; CxSplitterWnd::AttachAsRightCtrl
PUBLIC	?AttachAsRightCtrl@CxSplitterWnd@@QAE_NHH_N@Z	; CxSplitterWnd::AttachAsRightCtrl
PUBLIC	?AttachAsRightCtrl@CxSplitterWnd@@QAE_NPAVCWnd@@H_N@Z ; CxSplitterWnd::AttachAsRightCtrl
PUBLIC	?DetachAllCtrls@CxSplitterWnd@@QAE_NXZ		; CxSplitterWnd::DetachAllCtrls
PUBLIC	?RecalcLayout@CxSplitterWnd@@QAEXXZ		; CxSplitterWnd::RecalcLayout
PUBLIC	?AttachToParent@CxSplitterWnd@@QAE_NKK@Z	; CxSplitterWnd::AttachToParent
PUBLIC	?GetMouseClipRect@CxSplitterWnd@@IAE_NPAUtagRECT@@VCPoint@@@Z ; CxSplitterWnd::GetMouseClipRect
PUBLIC	??1CxSplitterWnd@@UAE@XZ			; CxSplitterWnd::~CxSplitterWnd
PUBLIC	?OnSetCursor@CxSplitterWnd@@IAEHPAVCWnd@@II@Z	; CxSplitterWnd::OnSetCursor
PUBLIC	?OnLButtonDown@CxSplitterWnd@@IAEXIVCPoint@@@Z	; CxSplitterWnd::OnLButtonDown
PUBLIC	?OnCreate@CxSplitterWnd@@IAEHPAUtagCREATESTRUCTA@@@Z ; CxSplitterWnd::OnCreate
PUBLIC	?OnDestroy@CxSplitterWnd@@IAEXXZ		; CxSplitterWnd::OnDestroy
PUBLIC	?GetThisMessageMap@CxSplitterWnd@@KGPBUAFX_MSGMAP@@XZ ; CxSplitterWnd::GetThisMessageMap
PUBLIC	?GetMessageMap@CxSplitterWnd@@MBEPBUAFX_MSGMAP@@XZ ; CxSplitterWnd::GetMessageMap
PUBLIC	??_GCxSplitterWnd@@UAEPAXI@Z			; CxSplitterWnd::`scalar deleting destructor'
PUBLIC	??0CySplitterWnd@@QAE@XZ			; CySplitterWnd::CySplitterWnd
PUBLIC	?BindWithControl@CySplitterWnd@@QAE_NPAVCWnd@@K@Z ; CySplitterWnd::BindWithControl
PUBLIC	?CreateInWnd@CySplitterWnd@@QAE_NPAVCWnd@@KPAUtagRECT@@@Z ; CySplitterWnd::CreateInWnd
PUBLIC	?Unbind@CySplitterWnd@@QAEXXZ			; CySplitterWnd::Unbind
PUBLIC	?SetMinHeight@CySplitterWnd@@QAEXHH@Z		; CySplitterWnd::SetMinHeight
PUBLIC	?AttachAsAboveCtrl@CySplitterWnd@@QAE_NH_N@Z	; CySplitterWnd::AttachAsAboveCtrl
PUBLIC	?AttachAsAboveCtrl@CySplitterWnd@@QAE_NPAVCWnd@@_N@Z ; CySplitterWnd::AttachAsAboveCtrl
PUBLIC	?AttachAsAboveCtrl@CySplitterWnd@@QAE_NHH_N@Z	; CySplitterWnd::AttachAsAboveCtrl
PUBLIC	?AttachAsAboveCtrl@CySplitterWnd@@QAE_NPAVCWnd@@H_N@Z ; CySplitterWnd::AttachAsAboveCtrl
PUBLIC	?AttachAsBelowCtrl@CySplitterWnd@@QAE_NH_N@Z	; CySplitterWnd::AttachAsBelowCtrl
PUBLIC	?AttachAsBelowCtrl@CySplitterWnd@@QAE_NPAVCWnd@@_N@Z ; CySplitterWnd::AttachAsBelowCtrl
PUBLIC	?AttachAsBelowCtrl@CySplitterWnd@@QAE_NHH_N@Z	; CySplitterWnd::AttachAsBelowCtrl
PUBLIC	?AttachAsBelowCtrl@CySplitterWnd@@QAE_NPAVCWnd@@H_N@Z ; CySplitterWnd::AttachAsBelowCtrl
PUBLIC	?DetachAllCtrls@CySplitterWnd@@QAE_NXZ		; CySplitterWnd::DetachAllCtrls
PUBLIC	?RecalcLayout@CySplitterWnd@@QAEXXZ		; CySplitterWnd::RecalcLayout
PUBLIC	?AttachToParent@CySplitterWnd@@QAE_NKK@Z	; CySplitterWnd::AttachToParent
PUBLIC	?GetMouseClipRect@CySplitterWnd@@IAE_NPAUtagRECT@@VCPoint@@@Z ; CySplitterWnd::GetMouseClipRect
PUBLIC	??1CySplitterWnd@@UAE@XZ			; CySplitterWnd::~CySplitterWnd
PUBLIC	?OnLButtonDown@CySplitterWnd@@IAEXIVCPoint@@@Z	; CySplitterWnd::OnLButtonDown
PUBLIC	?OnSetCursor@CySplitterWnd@@IAEHPAVCWnd@@II@Z	; CySplitterWnd::OnSetCursor
PUBLIC	?GetThisMessageMap@CySplitterWnd@@KGPBUAFX_MSGMAP@@XZ ; CySplitterWnd::GetThisMessageMap
PUBLIC	?GetMessageMap@CySplitterWnd@@MBEPBUAFX_MSGMAP@@XZ ; CySplitterWnd::GetMessageMap
PUBLIC	??_GCySplitterWnd@@UAEPAXI@Z			; CySplitterWnd::`scalar deleting destructor'
PUBLIC	??$SerializeElements@UControlInfo@@@@YGXAAVCArchive@@PAUControlInfo@@H@Z ; SerializeElements<ControlInfo>
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_7CStatic@@6B@				; CStatic::`vftable'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CStatic@@6B@				; CStatic::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCStatic@@@8				; CStatic `RTTI Type Descriptor'
PUBLIC	??_R3CStatic@@8					; CStatic::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CStatic@@8					; CStatic::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CStatic@@8			; CStatic::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R3CWnd@@8					; CWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWnd@@8					; CWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R3CCmdTarget@@8				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCmdTarget@@8				; CCmdTarget::`RTTI Base Class Array'
PUBLIC	??_7?$CArray@UControlInfo@@AAU1@@@6B@		; CArray<ControlInfo,ControlInfo &>::`vftable'
PUBLIC	??_7CxSplitterWnd@@6B@				; CxSplitterWnd::`vftable'
PUBLIC	??_7CySplitterWnd@@6B@				; CySplitterWnd::`vftable'
PUBLIC	??_C@_02MKAICKHL@Hi@				; `string'
PUBLIC	??_C@_06GCFCNKMP@STATIC@			; `string'
PUBLIC	??_R4?$CArray@UControlInfo@@AAU1@@@6B@		; CArray<ControlInfo,ControlInfo &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CArray@UControlInfo@@AAU1@@@@8	; CArray<ControlInfo,ControlInfo &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CArray@UControlInfo@@AAU1@@@8		; CArray<ControlInfo,ControlInfo &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CArray@UControlInfo@@AAU1@@@8		; CArray<ControlInfo,ControlInfo &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CArray@UControlInfo@@AAU1@@@8	; CArray<ControlInfo,ControlInfo &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CxSplitterWnd@@6B@				; CxSplitterWnd::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCxSplitterWnd@@@8			; CxSplitterWnd `RTTI Type Descriptor'
PUBLIC	??_R3CxSplitterWnd@@8				; CxSplitterWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CxSplitterWnd@@8				; CxSplitterWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CxSplitterWnd@@8			; CxSplitterWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CySplitterWnd@@6B@				; CySplitterWnd::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCySplitterWnd@@@8			; CySplitterWnd `RTTI Type Descriptor'
PUBLIC	??_R3CySplitterWnd@@8				; CySplitterWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CySplitterWnd@@8				; CySplitterWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CySplitterWnd@@8			; CySplitterWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__imp___invalid_parameter_noinfo:PROC
EXTRN	__imp___errno:PROC
EXTRN	__imp__GetMessageA@16:PROC
EXTRN	__imp__DispatchMessageA@4:PROC
EXTRN	__imp__SendMessageA@16:PROC
EXTRN	__imp__IsWindow@4:PROC
EXTRN	__imp__GetCapture@0:PROC
EXTRN	__imp__SetCapture@4:PROC
EXTRN	__imp__ReleaseCapture@0:PROC
EXTRN	__imp__EnableWindow@8:PROC
EXTRN	__imp__GetDC@4:PROC
EXTRN	__imp__ReleaseDC@8:PROC
EXTRN	__imp__InvalidateRect@12:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__GetWindowRect@8:PROC
EXTRN	__imp__SetCursor@4:PROC
EXTRN	__imp__ClipCursor@4:PROC
EXTRN	__imp__SetWindowLongA@12:PROC
EXTRN	__imp__GetParent@4:PROC
EXTRN	__imp__LoadCursorA@8:PROC
EXTRN	?AfxThrowMemoryException@@YGXXZ:PROC		; AfxThrowMemoryException
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?AfxThrowArchiveException@@YGXHPBD@Z:PROC	; AfxThrowArchiveException
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CObject::GetRuntimeClass
EXTRN	?Read@CArchive@@QAEIPAXI@Z:PROC			; CArchive::Read
EXTRN	?Write@CArchive@@QAEXPBXI@Z:PROC		; CArchive::Write
EXTRN	?ReadCount@CArchive@@QAEKXZ:PROC		; CArchive::ReadCount
EXTRN	?WriteCount@CArchive@@QAEXK@Z:PROC		; CArchive::WriteCount
EXTRN	??0CDWordArray@@QAE@XZ:PROC			; CDWordArray::CDWordArray
EXTRN	?SetSize@CDWordArray@@QAEXHH@Z:PROC		; CDWordArray::SetSize
EXTRN	?SetAtGrow@CDWordArray@@QAEXHK@Z:PROC		; CDWordArray::SetAtGrow
EXTRN	??1CDWordArray@@UAE@XZ:PROC			; CDWordArray::~CDWordArray
EXTRN	?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ:PROC ; AfxGetModuleState
EXTRN	?FromHandle@CDC@@SGPAV1@PAUHDC__@@@Z:PROC	; CDC::FromHandle
EXTRN	?DrawDragRect@CDC@@QAEXPBUtagRECT@@UtagSIZE@@01PAVCBrush@@2@Z:PROC ; CDC::DrawDragRect
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:PROC ; CCmdTarget::OnCmdMsg
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:PROC	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:PROC ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:PROC	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:PROC ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:PROC ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:PROC ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:PROC ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:PROC ; CCmdTarget::GetConnectionMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:PROC ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:PROC	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:PROC ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:PROC ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:PROC ; CCmdTarget::GetConnectionHook
EXTRN	?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ:PROC ; CWnd::GetRuntimeClass
EXTRN	?GetStyle@CWnd@@QBEKXZ:PROC			; CWnd::GetStyle
EXTRN	??0CWnd@@QAE@XZ:PROC				; CWnd::CWnd
EXTRN	?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z:PROC	; CWnd::FromHandle
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:PROC		; CWnd::PreSubclassWindow
EXTRN	?SubclassWindow@CWnd@@QAEHPAUHWND__@@@Z:PROC	; CWnd::SubclassWindow
EXTRN	?UnsubclassWindow@CWnd@@QAEPAUHWND__@@XZ:PROC	; CWnd::UnsubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:PROC ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:PROC ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:PROC ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:PROC		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:PROC ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:PROC	; CWnd::CalcWindowRect
EXTRN	?GetDlgCtrlID@CWnd@@QBEHXZ:PROC			; CWnd::GetDlgCtrlID
EXTRN	?GetDlgItem@CWnd@@QBEPAV1@H@Z:PROC		; CWnd::GetDlgItem
EXTRN	?GetMenu@CWnd@@UBEPAVCMenu@@XZ:PROC		; CWnd::GetMenu
EXTRN	?SetMenu@CWnd@@UAEHPAVCMenu@@@Z:PROC		; CWnd::SetMenu
EXTRN	?MoveWindow@CWnd@@QAEXHHHHH@Z:PROC		; CWnd::MoveWindow
EXTRN	?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z:PROC	; CWnd::SetWindowPos
EXTRN	?ClientToScreen@CWnd@@QBEXPAUtagRECT@@@Z:PROC	; CWnd::ClientToScreen
EXTRN	?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z:PROC	; CWnd::ScreenToClient
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:PROC			; CWnd::ShowWindow
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:PROC ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:PROC ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:PROC		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:PROC		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:PROC		; CWnd::EndModalLoop
EXTRN	?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z:PROC ; CWnd::OnDrawIconicThumbnailOrLivePreview
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:PROC ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:PROC			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:PROC ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:PROC		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:PROC ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDescription
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:PROC ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDefaultAction
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:PROC	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:PROC ; CWnd::accLocation
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:PROC	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:PROC ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:PROC ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:PROC	; CWnd::CreateAccessibleProxy
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:PROC			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:PROC		; CWnd::OnNotify
EXTRN	?OnDestroy@CWnd@@IAEXXZ:PROC			; CWnd::OnDestroy
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:PROC ; CWnd::GetSuperWndProcAddr
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:PROC ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:PROC ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:PROC		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnWndMsg
EXTRN	?Default@CWnd@@IAEJXZ:PROC			; CWnd::Default
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:PROC		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:PROC		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnChildNotify
EXTRN	?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInputs
EXTRN	?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInput
EXTRN	?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z:PROC	; CWnd::GetGestureStatus
EXTRN	?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z:PROC	; CWnd::OnGestureZoom
EXTRN	?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z:PROC	; CWnd::OnGesturePan
EXTRN	?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z:PROC	; CWnd::OnGestureRotate
EXTRN	?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z:PROC ; CWnd::OnGestureTwoFingerTap
EXTRN	?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z:PROC ; CWnd::OnGesturePressAndTap
EXTRN	?ResizeDynamicLayout@CWnd@@MAEXXZ:PROC		; CWnd::ResizeDynamicLayout
EXTRN	??1CWnd@@UAE@XZ:PROC				; CWnd::~CWnd
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:PROC		; CWnd::CheckAutoCenter
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:PROC			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:PROC		; CWnd::OnFinalRelease
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:PROC ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:PROC ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:PROC ; CWnd::SetOccDialogInfo
EXTRN	?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ:PROC ; CWnd::GetOccDialogInfo
EXTRN	?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ:PROC ; CWnd::GetThisMessageMap
EXTRN	?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ:PROC	; CWnd::GetMessageMap
EXTRN	?GetRuntimeClass@CStatic@@UBEPAUCRuntimeClass@@XZ:PROC ; CStatic::GetRuntimeClass
EXTRN	?Create@CStatic@@UAEHPBDKABUtagRECT@@PAVCWnd@@I@Z:PROC ; CStatic::Create
EXTRN	?DrawItem@CStatic@@UAEXPAUtagDRAWITEMSTRUCT@@@Z:PROC ; CStatic::DrawItem
EXTRN	??1CStatic@@UAE@XZ:PROC				; CStatic::~CStatic
EXTRN	?OnChildNotify@CStatic@@MAEHIIJPAJ@Z:PROC	; CStatic::OnChildNotify
EXTRN	??_ECStatic@@UAEPAXI@Z:PROC			; CStatic::`vector deleting destructor'
EXTRN	??_E?$CArray@UControlInfo@@AAU1@@@UAEPAXI@Z:PROC ; CArray<ControlInfo,ControlInfo &>::`vector deleting destructor'
EXTRN	??_ECxSplitterWnd@@UAEPAXI@Z:PROC		; CxSplitterWnd::`vector deleting destructor'
EXTRN	??_ECySplitterWnd@@UAEPAXI@Z:PROC		; CySplitterWnd::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__imp_?wndTop@CWnd@@2V1@B:BYTE
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@CySplitterWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CySplitterWnd@@8 DD FLAT:??_R0?AVCySplitterWnd@@@8 ; CySplitterWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CySplitterWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2CySplitterWnd@@8
rdata$r	SEGMENT
??_R2CySplitterWnd@@8 DD FLAT:??_R1A@?0A@EA@CySplitterWnd@@8 ; CySplitterWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CySplitterWnd@@8
rdata$r	SEGMENT
??_R3CySplitterWnd@@8 DD 00H				; CySplitterWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CySplitterWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCySplitterWnd@@@8
data$rs	SEGMENT
??_R0?AVCySplitterWnd@@@8 DD FLAT:??_7type_info@@6B@	; CySplitterWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCySplitterWnd@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CySplitterWnd@@6B@
rdata$r	SEGMENT
??_R4CySplitterWnd@@6B@ DD 00H				; CySplitterWnd::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCySplitterWnd@@@8
	DD	FLAT:??_R3CySplitterWnd@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CxSplitterWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CxSplitterWnd@@8 DD FLAT:??_R0?AVCxSplitterWnd@@@8 ; CxSplitterWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CxSplitterWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2CxSplitterWnd@@8
rdata$r	SEGMENT
??_R2CxSplitterWnd@@8 DD FLAT:??_R1A@?0A@EA@CxSplitterWnd@@8 ; CxSplitterWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CxSplitterWnd@@8
rdata$r	SEGMENT
??_R3CxSplitterWnd@@8 DD 00H				; CxSplitterWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CxSplitterWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCxSplitterWnd@@@8
data$rs	SEGMENT
??_R0?AVCxSplitterWnd@@@8 DD FLAT:??_7type_info@@6B@	; CxSplitterWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCxSplitterWnd@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CxSplitterWnd@@6B@
rdata$r	SEGMENT
??_R4CxSplitterWnd@@6B@ DD 00H				; CxSplitterWnd::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCxSplitterWnd@@@8
	DD	FLAT:??_R3CxSplitterWnd@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CArray@UControlInfo@@AAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CArray@UControlInfo@@AAU1@@@8 DD FLAT:??_R0?AV?$CArray@UControlInfo@@AAU1@@@@8 ; CArray<ControlInfo,ControlInfo &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CArray@UControlInfo@@AAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CArray@UControlInfo@@AAU1@@@8
rdata$r	SEGMENT
??_R2?$CArray@UControlInfo@@AAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CArray@UControlInfo@@AAU1@@@8 ; CArray<ControlInfo,ControlInfo &>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CArray@UControlInfo@@AAU1@@@8
rdata$r	SEGMENT
??_R3?$CArray@UControlInfo@@AAU1@@@8 DD 00H		; CArray<ControlInfo,ControlInfo &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CArray@UControlInfo@@AAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CArray@UControlInfo@@AAU1@@@@8
data$rs	SEGMENT
??_R0?AV?$CArray@UControlInfo@@AAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CArray<ControlInfo,ControlInfo &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CArray@UControlInfo@@AAU1@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CArray@UControlInfo@@AAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CArray@UControlInfo@@AAU1@@@6B@ DD 00H		; CArray<ControlInfo,ControlInfo &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CArray@UControlInfo@@AAU1@@@@8
	DD	FLAT:??_R3?$CArray@UControlInfo@@AAU1@@@8
rdata$r	ENDS
;	COMDAT ?messageMap@?1??GetThisMessageMap@CySplitterWnd@@KGPBUAFX_MSGMAP@@XZ@4U3@B
CONST	SEGMENT
?messageMap@?1??GetThisMessageMap@CySplitterWnd@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ ; `CySplitterWnd::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CySplitterWnd@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
;	COMDAT ?_messageEntries@?1??GetThisMessageMap@CySplitterWnd@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@?1??GetThisMessageMap@CySplitterWnd@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 0201H ; `CySplitterWnd::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	036H
	DD	FLAT:?OnLButtonDown@CySplitterWnd@@IAEXIVCPoint@@@Z
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	05H
	DD	FLAT:?OnSetCursor@CySplitterWnd@@IAEHPAVCWnd@@II@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?messageMap@?1??GetThisMessageMap@CxSplitterWnd@@KGPBUAFX_MSGMAP@@XZ@4U3@B
CONST	SEGMENT
?messageMap@?1??GetThisMessageMap@CxSplitterWnd@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ ; `CxSplitterWnd::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CxSplitterWnd@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
;	COMDAT ?_messageEntries@?1??GetThisMessageMap@CxSplitterWnd@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@?1??GetThisMessageMap@CxSplitterWnd@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 020H ; `CxSplitterWnd::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	05H
	DD	FLAT:?OnSetCursor@CxSplitterWnd@@IAEHPAVCWnd@@II@Z
	DD	0201H
	DD	00H
	DD	00H
	DD	00H
	DD	036H
	DD	FLAT:?OnLButtonDown@CxSplitterWnd@@IAEXIVCPoint@@@Z
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	0dH
	DD	FLAT:?OnCreate@CxSplitterWnd@@IAEHPAUtagCREATESTRUCTA@@@Z
	DD	02H
	DD	00H
	DD	00H
	DD	00H
	DD	013H
	DD	FLAT:?OnDestroy@CxSplitterWnd@@IAEXXZ
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_C@_06GCFCNKMP@STATIC@
CONST	SEGMENT
??_C@_06GCFCNKMP@STATIC@ DB 'STATIC', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02MKAICKHL@Hi@
CONST	SEGMENT
??_C@_02MKAICKHL@Hi@ DB 'Hi', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CySplitterWnd@@6B@
CONST	SEGMENT
??_7CySplitterWnd@@6B@ DD FLAT:??_R4CySplitterWnd@@6B@	; CySplitterWnd::`vftable'
	DD	FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECySplitterWnd@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CySplitterWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
CONST	ENDS
;	COMDAT ??_7CxSplitterWnd@@6B@
CONST	SEGMENT
??_7CxSplitterWnd@@6B@ DD FLAT:??_R4CxSplitterWnd@@6B@	; CxSplitterWnd::`vftable'
	DD	FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECxSplitterWnd@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CxSplitterWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
CONST	ENDS
;	COMDAT ??_7?$CArray@UControlInfo@@AAU1@@@6B@
CONST	SEGMENT
??_7?$CArray@UControlInfo@@AAU1@@@6B@ DD FLAT:??_R4?$CArray@UControlInfo@@AAU1@@@6B@ ; CArray<ControlInfo,ControlInfo &>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CArray@UControlInfo@@AAU1@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CArray@UControlInfo@@AAU1@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_R2CCmdTarget@@8
rdata$r	SEGMENT
??_R2CCmdTarget@@8 DD FLAT:??_R1A@?0A@EA@CCmdTarget@@8	; CCmdTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CCmdTarget@@8
rdata$r	SEGMENT
??_R3CCmdTarget@@8 DD 00H				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
data$rs	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R2CWnd@@8
rdata$r	SEGMENT
??_R2CWnd@@8 DD	FLAT:??_R1A@?0A@EA@CWnd@@8		; CWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWnd@@8
rdata$r	SEGMENT
??_R3CWnd@@8 DD	00H					; CWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
data$rs	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CStatic@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CStatic@@8 DD FLAT:??_R0?AVCStatic@@@8	; CStatic::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CStatic@@8
rdata$r	ENDS
;	COMDAT ??_R2CStatic@@8
rdata$r	SEGMENT
??_R2CStatic@@8 DD FLAT:??_R1A@?0A@EA@CStatic@@8	; CStatic::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CStatic@@8
rdata$r	SEGMENT
??_R3CStatic@@8 DD 00H					; CStatic::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CStatic@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCStatic@@@8
data$rs	SEGMENT
??_R0?AVCStatic@@@8 DD FLAT:??_7type_info@@6B@		; CStatic `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCStatic@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CStatic@@6B@
rdata$r	SEGMENT
??_R4CStatic@@6B@ DD 00H				; CStatic::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCStatic@@@8
	DD	FLAT:??_R3CStatic@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$rs	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$rs	ENDS
;	COMDAT ??_7CStatic@@6B@
CONST	SEGMENT
??_7CStatic@@6B@ DD FLAT:??_R4CStatic@@6B@		; CStatic::`vftable'
	DD	FLAT:?GetRuntimeClass@CStatic@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECStatic@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CStatic@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CStatic@@UAEHPBDKABUtagRECT@@PAVCWnd@@I@Z
	DD	FLAT:?DrawItem@CStatic@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CySplitterWnd@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CySplitterWnd@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CySplitterWnd@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CySplitterWnd@@QAE@XZ$2
__ehfuncinfo$??0CySplitterWnd@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CySplitterWnd@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CxSplitterWnd@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CxSplitterWnd@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CxSplitterWnd@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CxSplitterWnd@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CxSplitterWnd@@QAE@XZ$3
__ehfuncinfo$??0CxSplitterWnd@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CxSplitterWnd@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@UControlInfo@@@@YGXAAVCArchive@@PAUControlInfo@@H@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@UControlInfo@@@@YGXAAVCArchive@@PAUControlInfo@@H@Z PROC ; SerializeElements<ControlInfo>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b 75 10	 mov	 esi, DWORD PTR _nCount$[ebp]
  0000b	57		 push	 edi
  0000c	85 f6		 test	 esi, esi
  0000e	74 04		 je	 SHORT $LN2@SerializeE
  00010	85 c9		 test	 ecx, ecx
  00012	74 7d		 je	 SHORT $LN34@SerializeE
$LN2@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00014	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00017	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0001a	f7 d0		 not	 eax
  0001c	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  0001e	74 32		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;
; 79   : 		pData = pElements;
; 80   : 		while( nElementsLeft > 0 )

  00020	85 f6		 test	 esi, esi
  00022	74 27		 je	 SHORT $LN8@SerializeE
$LL5@SerializeE:

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00024	bb ff ff ff 07	 mov	 ebx, 134217727		; 07ffffffH
  00029	3b f3		 cmp	 esi, ebx
  0002b	0f 42 de	 cmovb	 ebx, esi

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0002e	8b fb		 mov	 edi, ebx
  00030	c1 e7 04	 shl	 edi, 4
  00033	57		 push	 edi
  00034	51		 push	 ecx
  00035	8b ca		 mov	 ecx, edx
  00037	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;
; 87   : 			pData += nElementsToWrite;

  0003c	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  0003f	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00042	03 cf		 add	 ecx, edi
  00044	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  00047	2b f3		 sub	 esi, ebx
  00049	75 d9		 jne	 SHORT $LL5@SerializeE
$LN8@SerializeE:
  0004b	5f		 pop	 edi

; 105  : 		}
; 106  : 	}
; 107  : }

  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	5d		 pop	 ebp
  0004f	c2 0c 00	 ret	 12			; 0000000cH
$LN10@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  00052	85 f6		 test	 esi, esi
  00054	74 f5		 je	 SHORT $LN8@SerializeE
$LL7@SerializeE:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00056	bb ff ff ff 07	 mov	 ebx, 134217727		; 07ffffffH
  0005b	3b f3		 cmp	 esi, ebx
  0005d	0f 42 de	 cmovb	 ebx, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00060	8b fb		 mov	 edi, ebx
  00062	c1 e7 04	 shl	 edi, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00065	57		 push	 edi
  00066	51		 push	 ecx
  00067	8b ca		 mov	 ecx, edx
  00069	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0006e	3b c7		 cmp	 eax, edi
  00070	75 16		 jne	 SHORT $LN23@SerializeE
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  00072	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00075	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;
; 104  : 			pData += nElementsToRead;

  00078	03 cf		 add	 ecx, edi
  0007a	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  0007d	2b f3		 sub	 esi, ebx
  0007f	75 d5		 jne	 SHORT $LL7@SerializeE

; 105  : 		}
; 106  : 	}
; 107  : }

  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	5b		 pop	 ebx
  00084	5d		 pop	 ebp
  00085	c2 0c 00	 ret	 12			; 0000000cH
$LN23@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 402  : 		AfxThrowArchiveException(CArchiveException::endOfFile);

  00088	6a 00		 push	 0
  0008a	6a 03		 push	 3
  0008c	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN34@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00091	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN32@SerializeE:
  00096	cc		 int	 3
??$SerializeElements@UControlInfo@@@@YGXAAVCArchive@@PAUControlInfo@@H@Z ENDP ; SerializeElements<ControlInfo>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCySplitterWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCySplitterWnd@@UAEPAXI@Z PROC			; CySplitterWnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 503  : {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 504  : }

  00006	8d 8e b4 00 00
	00		 lea	 ecx, DWORD PTR [esi+180]
  0000c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CySplitterWnd@@6B@
  00012	e8 00 00 00 00	 call	 ??1CDWordArray@@UAE@XZ	; CDWordArray::~CDWordArray
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 358  : 	if (m_pData != NULL)

  00017	8b 86 9c 00 00
	00		 mov	 eax, DWORD PTR [esi+156]
  0001d	c7 86 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+152], OFFSET ??_7?$CArray@UControlInfo@@AAU1@@@6B@
  00027	85 c0		 test	 eax, eax
  00029	74 13		 je	 SHORT $LN14@scalar

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )

  0002b	83 be a0 00 00
	00 00		 cmp	 DWORD PTR [esi+160], 0
  00032	0f 4f c0	 cmovg	 eax, eax

; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0003b	83 c4 04	 add	 esp, 4
$LN14@scalar:

; 358  : 	if (m_pData != NULL)

  0003e	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  00044	c7 86 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+132], OFFSET ??_7?$CArray@UControlInfo@@AAU1@@@6B@
  0004e	85 c0		 test	 eax, eax
  00050	74 13		 je	 SHORT $LN21@scalar

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )

  00052	83 be 8c 00 00
	00 00		 cmp	 DWORD PTR [esi+140], 0
  00059	0f 4f c0	 cmovg	 eax, eax

; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00062	83 c4 04	 add	 esp, 4
$LN21@scalar:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 504  : }

  00065	8b ce		 mov	 ecx, esi
  00067	e8 00 00 00 00	 call	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
  0006c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0006f	a8 01		 test	 al, 1
  00071	74 22		 je	 SHORT $LN34@scalar
  00073	a8 04		 test	 al, 4
  00075	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  00077	56		 push	 esi
  00078	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0007d	83 c4 04	 add	 esp, 4
  00080	8b c6		 mov	 eax, esi
  00082	5e		 pop	 esi
  00083	5d		 pop	 ebp
  00084	c2 04 00	 ret	 4
$LN3@scalar:
  00087	68 c8 00 00 00	 push	 200			; 000000c8H
  0008c	56		 push	 esi
  0008d	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00092	83 c4 08	 add	 esp, 8
$LN34@scalar:
  00095	8b c6		 mov	 eax, esi
  00097	5e		 pop	 esi
  00098	5d		 pop	 ebp
  00099	c2 04 00	 ret	 4
??_GCySplitterWnd@@UAEPAXI@Z ENDP			; CySplitterWnd::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?GetMessageMap@CySplitterWnd@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetMessageMap@CySplitterWnd@@MBEPBUAFX_MSGMAP@@XZ PROC	; CySplitterWnd::GetMessageMap, COMDAT
; _this$ = ecx

; 831  : BEGIN_MESSAGE_MAP(CySplitterWnd, CWnd)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CySplitterWnd@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  00005	c3		 ret	 0
?GetMessageMap@CySplitterWnd@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CySplitterWnd::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?GetThisMessageMap@CySplitterWnd@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CySplitterWnd@@KGPBUAFX_MSGMAP@@XZ PROC ; CySplitterWnd::GetThisMessageMap, COMDAT

; 832  : 	//{{AFX_MSG_MAP(CySplitterWnd)
; 833  : 	ON_WM_LBUTTONDOWN()
; 834  : 	ON_WM_SETCURSOR()
; 835  : 	//}}AFX_MSG_MAP
; 836  : END_MESSAGE_MAP()

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CySplitterWnd@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  00005	c3		 ret	 0
?GetThisMessageMap@CySplitterWnd@@KGPBUAFX_MSGMAP@@XZ ENDP ; CySplitterWnd::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?OnSetCursor@CySplitterWnd@@IAEHPAVCWnd@@II@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?OnSetCursor@CySplitterWnd@@IAEHPAVCWnd@@II@Z PROC	; CySplitterWnd::OnSetCursor, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 19   : 	{ return afxCurrentWinApp; }

  00000	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 1047 : 	{ return ::LoadCursor(NULL, lpszCursorName); }

  00005	68 85 7f 00 00	 push	 32645			; 00007f85H
  0000a	6a 00		 push	 0
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 845  : 	SetCursor(AfxGetApp()->LoadStandardCursor(IDC_SIZENS));

  00012	50		 push	 eax
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4

; 846  :     return TRUE;

  00019	b8 01 00 00 00	 mov	 eax, 1

; 847  : 	
; 848  : 	//return CWnd::OnSetCursor(pWnd, nHitTest, message);
; 849  : }

  0001e	c2 0c 00	 ret	 12			; 0000000cH
?OnSetCursor@CySplitterWnd@@IAEHPAVCWnd@@II@Z ENDP	; CySplitterWnd::OnSetCursor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?OnLButtonDown@CySplitterWnd@@IAEXIVCPoint@@@Z
_TEXT	SEGMENT
_msg$2 = -104						; size = 28
_sizeBar$2$ = -76					; size = 4
_pDrawDC$1$ = -72					; size = 4
_rectMouseClip$ = -68					; size = 16
_rectOld$ = -52						; size = 16
_rectSplitter$ = -36					; size = 16
_rectCur$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_point$ = 12						; size = 8
?OnLButtonDown@CySplitterWnd@@IAEXIVCPoint@@@Z PROC	; CySplitterWnd::OnLButtonDown, COMDAT
; _this$ = ecx

; 852  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	57		 push	 edi
  00011	8b f9		 mov	 edi, ecx

; 853  : 	// TODO: Add your message handler code here and/or call default
; 854  : 
; 855  : 	// don't handle if capture already set
; 856  : 	if (::GetCapture() != NULL) return;

  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCapture@0
  00019	85 c0		 test	 eax, eax
  0001b	0f 85 ea 01 00
	00		 jne	 $LN1@OnLButtonD

; 857  : 
; 858  :     // don't handle if no room to drag
; 859  :     RECT rectMouseClip;
; 860  :     if (!GetMouseClipRect(&rectMouseClip, point)) return;

  00021	ff 75 10	 push	 DWORD PTR _point$[ebp+4]
  00024	8d 45 bc	 lea	 eax, DWORD PTR _rectMouseClip$[ebp]
  00027	8b cf		 mov	 ecx, edi
  00029	ff 75 0c	 push	 DWORD PTR _point$[ebp]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?GetMouseClipRect@CySplitterWnd@@IAE_NPAUtagRECT@@VCPoint@@@Z ; CySplitterWnd::GetMouseClipRect
  00032	84 c0		 test	 al, al
  00034	0f 84 d1 01 00
	00		 je	 $LN1@OnLButtonD

; 861  :     ::ClipCursor(&rectMouseClip);

  0003a	53		 push	 ebx
  0003b	56		 push	 esi
  0003c	8d 45 bc	 lea	 eax, DWORD PTR _rectMouseClip$[ebp]
  0003f	50		 push	 eax
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ClipCursor@4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 163  : 	{ ASSERT(::IsWindow(m_hWnd)); return CWnd::FromHandle(::SetCapture(m_hWnd)); }

  00046	ff 77 20	 push	 DWORD PTR [edi+32]
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCapture@4
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 869  :     pDrawDC = m_pParent->GetDC();

  00055	8b 87 80 00 00
	00		 mov	 eax, DWORD PTR [edi+128]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 100  : 	{ ASSERT(::IsWindow(m_hWnd)); return CDC::FromHandle(::GetDC(m_hWnd)); }

  0005b	ff 70 20	 push	 DWORD PTR [eax+32]
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDC@4
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ?FromHandle@CDC@@SGPAV1@PAUHDC__@@@Z ; CDC::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 869  :     pDrawDC = m_pParent->GetDC();

  0006a	89 45 b8	 mov	 DWORD PTR _pDrawDC$1$[ebp], eax
  0006d	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00070	8d 45 dc	 lea	 eax, DWORD PTR _rectSplitter$[ebp]
  00073	50		 push	 eax
  00074	ff 77 20	 push	 DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00077	0f 11 45 dc	 movups	 XMMWORD PTR _rectSplitter$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 581  : 	return bottom - top;

  00081	8b 75 e8	 mov	 esi, DWORD PTR _rectSplitter$[ebp+12]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 880  :     m_pParent->ScreenToClient(rectSplitter);

  00084	8d 45 dc	 lea	 eax, DWORD PTR _rectSplitter$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  00087	8b 5d e4	 mov	 ebx, DWORD PTR _rectSplitter$[ebp+8]

; 581  : 	return bottom - top;

  0008a	2b 75 e0	 sub	 esi, DWORD PTR _rectSplitter$[ebp+4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 880  :     m_pParent->ScreenToClient(rectSplitter);

  0008d	8b 8f 80 00 00
	00		 mov	 ecx, DWORD PTR [edi+128]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  00093	2b 5d dc	 sub	 ebx, DWORD PTR _rectSplitter$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 880  :     m_pParent->ScreenToClient(rectSplitter);

  00096	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 581  : 	return bottom - top;

  00097	89 75 b4	 mov	 DWORD PTR _sizeBar$2$[ebp], esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 880  :     m_pParent->ScreenToClient(rectSplitter);

  0009a	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 881  :     pDrawDC->DrawDragRect(&rectSplitter, sizeBar, NULL, sizeBar);

  0009f	8b 4d b8	 mov	 ecx, DWORD PTR _pDrawDC$1$[ebp]
  000a2	8d 45 dc	 lea	 eax, DWORD PTR _rectSplitter$[ebp]
  000a5	6a 00		 push	 0
  000a7	6a 00		 push	 0
  000a9	56		 push	 esi
  000aa	53		 push	 ebx
  000ab	6a 00		 push	 0
  000ad	56		 push	 esi
  000ae	53		 push	 ebx
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 ?DrawDragRect@CDC@@QAEXPBUtagRECT@@UtagSIZE@@01PAVCBrush@@2@Z ; CDC::DrawDragRect

; 882  :     rectOld = rectCur = rectSplitter;

  000b5	0f 10 45 dc	 movups	 xmm0, XMMWORD PTR _rectSplitter$[ebp]

; 883  :     xDiff = yDiff = 0;

  000b9	33 f6		 xor	 esi, esi

; 884  : 
; 885  : 	// get messages until capture lost or cancelled/accepted
; 886  : 	for (;;) {
; 887  : 		MSG msg;
; 888  : 		VERIFY(::GetMessage(&msg, NULL, 0, 0));

  000bb	8d 45 98	 lea	 eax, DWORD PTR _msg$2[ebp]
  000be	56		 push	 esi
  000bf	56		 push	 esi
  000c0	56		 push	 esi
  000c1	50		 push	 eax
  000c2	0f 11 45 ec	 movups	 XMMWORD PTR _rectCur$[ebp], xmm0
  000c6	0f 11 45 cc	 movups	 XMMWORD PTR _rectOld$[ebp], xmm0
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMessageA@16
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 161  : 	{ return CWnd::FromHandle(::GetCapture()); }

  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCapture@0
  000d6	50		 push	 eax
  000d7	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 890  : 		if (CWnd::GetCapture() != this)

  000dc	3b c7		 cmp	 eax, edi
  000de	0f 85 a5 00 00
	00		 jne	 $ExitLoop$67
$LL2@OnLButtonD:

; 891  : 			break;
; 892  : 
; 893  : 		switch (msg.message) {

  000e4	8b 45 9c	 mov	 eax, DWORD PTR _msg$2[ebp+4]
  000e7	3d 02 02 00 00	 cmp	 eax, 514		; 00000202H
  000ec	77 66		 ja	 SHORT $LN19@OnLButtonD
  000ee	0f 84 95 00 00
	00		 je	 $ExitLoop$67
  000f4	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  000f9	74 51		 je	 SHORT $LN11@OnLButtonD
  000fb	3d 00 02 00 00	 cmp	 eax, 512		; 00000200H
  00100	75 59		 jne	 SHORT $LN16@OnLButtonD

; 894  : 		// handle movement/accept messages
; 895  : 		case WM_MOUSEMOVE:
; 896  : 			// handle resize cases (and part of move)
; 897  :             curX = (int)(short)LOWORD(msg.lParam);
; 898  :             curY = (int)(short)HIWORD(msg.lParam);
; 899  : 
; 900  :             xDiff = curX - point.x;
; 901  :             yDiff = curY - point.y;
; 902  : 
; 903  :             rectCur = rectSplitter;

  00102	0f 10 45 dc	 movups	 xmm0, XMMWORD PTR _rectSplitter$[ebp]
  00106	8b 45 a4	 mov	 eax, DWORD PTR _msg$2[ebp+12]

; 904  :             rectCur.top += yDiff;
; 905  :             rectCur.bottom += yDiff;
; 906  :             pDrawDC->DrawDragRect(&rectCur, sizeBar, &rectOld, sizeBar);

  00109	8d 4d cc	 lea	 ecx, DWORD PTR _rectOld$[ebp]
  0010c	c1 e8 10	 shr	 eax, 16			; 00000010H
  0010f	0f bf f0	 movsx	 esi, ax
  00112	2b 75 10	 sub	 esi, DWORD PTR _point$[ebp+4]
  00115	0f 11 45 ec	 movups	 XMMWORD PTR _rectCur$[ebp], xmm0
  00119	01 75 f8	 add	 DWORD PTR _rectCur$[ebp+12], esi
  0011c	66 0f 73 d8 04	 psrldq	 xmm0, 4
  00121	6a 00		 push	 0
  00123	66 0f 7e c0	 movd	 eax, xmm0
  00127	6a 00		 push	 0
  00129	03 c6		 add	 eax, esi
  0012b	89 45 f0	 mov	 DWORD PTR _rectCur$[ebp+4], eax
  0012e	8b 45 b4	 mov	 eax, DWORD PTR _sizeBar$2$[ebp]
  00131	50		 push	 eax
  00132	53		 push	 ebx
  00133	51		 push	 ecx
  00134	8b 4d b8	 mov	 ecx, DWORD PTR _pDrawDC$1$[ebp]
  00137	50		 push	 eax
  00138	53		 push	 ebx
  00139	8d 45 ec	 lea	 eax, DWORD PTR _rectCur$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?DrawDragRect@CDC@@QAEXPBUtagRECT@@UtagSIZE@@01PAVCBrush@@2@Z ; CDC::DrawDragRect

; 907  :             rectOld = rectCur;

  00142	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR _rectCur$[ebp]
  00146	0f 11 45 cc	 movups	 XMMWORD PTR _rectOld$[ebp], xmm0

; 908  : 
; 909  :             break;

  0014a	eb 19		 jmp	 SHORT $LN5@OnLButtonD
$LN11@OnLButtonD:

; 910  : 
; 911  : 		// handle cancel messages
; 912  : 		case WM_KEYDOWN:
; 913  : 			if (msg.wParam != VK_ESCAPE)

  0014c	83 7d a0 1b	 cmp	 DWORD PTR _msg$2[ebp+8], 27 ; 0000001bH
  00150	74 37		 je	 SHORT $ExitLoop$67

; 914  : 				break;

  00152	eb 11		 jmp	 SHORT $LN5@OnLButtonD
$LN19@OnLButtonD:

; 891  : 			break;
; 892  : 
; 893  : 		switch (msg.message) {

  00154	3d 04 02 00 00	 cmp	 eax, 516		; 00000204H
  00159	74 2e		 je	 SHORT $ExitLoop$67
$LN16@OnLButtonD:

; 915  : 		case WM_LBUTTONUP:
; 916  : 		case WM_RBUTTONDOWN:
; 917  :             goto ExitLoop;
; 918  : 
; 919  : 		// just dispatch rest of the messages
; 920  : 		default:
; 921  : 			DispatchMessage(&msg);

  0015b	8d 45 98	 lea	 eax, DWORD PTR _msg$2[ebp]
  0015e	50		 push	 eax
  0015f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DispatchMessageA@4
$LN5@OnLButtonD:

; 884  : 
; 885  : 	// get messages until capture lost or cancelled/accepted
; 886  : 	for (;;) {
; 887  : 		MSG msg;
; 888  : 		VERIFY(::GetMessage(&msg, NULL, 0, 0));

  00165	6a 00		 push	 0
  00167	6a 00		 push	 0
  00169	6a 00		 push	 0
  0016b	8d 45 98	 lea	 eax, DWORD PTR _msg$2[ebp]
  0016e	50		 push	 eax
  0016f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMessageA@16
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 161  : 	{ return CWnd::FromHandle(::GetCapture()); }

  00175	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCapture@0
  0017b	50		 push	 eax
  0017c	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 890  : 		if (CWnd::GetCapture() != this)

  00181	3b c7		 cmp	 eax, edi
  00183	0f 84 5b ff ff
	ff		 je	 $LL2@OnLButtonD
$ExitLoop$67:

; 922  : 			break;
; 923  : 		}
; 924  : 	}
; 925  : 
; 926  : ExitLoop:
; 927  :     pDrawDC->DrawDragRect(&rectCur, sizeBar, NULL, sizeBar);

  00189	8b 45 b4	 mov	 eax, DWORD PTR _sizeBar$2$[ebp]
  0018c	6a 00		 push	 0
  0018e	6a 00		 push	 0
  00190	50		 push	 eax
  00191	53		 push	 ebx
  00192	6a 00		 push	 0
  00194	50		 push	 eax
  00195	53		 push	 ebx
  00196	8b 5d b8	 mov	 ebx, DWORD PTR _pDrawDC$1$[ebp]
  00199	8d 45 ec	 lea	 eax, DWORD PTR _rectCur$[ebp]
  0019c	50		 push	 eax
  0019d	8b cb		 mov	 ecx, ebx
  0019f	e8 00 00 00 00	 call	 ?DrawDragRect@CDC@@QAEXPBUtagRECT@@UtagSIZE@@01PAVCBrush@@2@Z ; CDC::DrawDragRect
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 104  : 	{ ASSERT(::IsWindow(m_hWnd)); return ::ReleaseDC(m_hWnd, pDC->m_hDC); }

  001a4	8b 87 80 00 00
	00		 mov	 eax, DWORD PTR [edi+128]
  001aa	ff 73 04	 push	 DWORD PTR [ebx+4]
  001ad	ff 70 20	 push	 DWORD PTR [eax+32]
  001b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseDC@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 930  :     ReleaseCapture();

  001b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseCapture@0

; 931  :     ::ClipCursor(NULL);

  001bc	6a 00		 push	 0
  001be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ClipCursor@4

; 932  : 
; 933  :     if (yDiff == 0) return;

  001c4	85 f6		 test	 esi, esi
  001c6	74 41		 je	 SHORT $LN65@OnLButtonD
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 73   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  001c8	8b 45 f8	 mov	 eax, DWORD PTR _rectCur$[ebp+12]
  001cb	8b 55 f0	 mov	 edx, DWORD PTR _rectCur$[ebp+4]
  001ce	2b c2		 sub	 eax, edx
  001d0	8b 4d ec	 mov	 ecx, DWORD PTR _rectCur$[ebp]
  001d3	6a 00		 push	 0
  001d5	50		 push	 eax
  001d6	8b 45 f4	 mov	 eax, DWORD PTR _rectCur$[ebp+8]
  001d9	2b c1		 sub	 eax, ecx
  001db	50		 push	 eax
  001dc	52		 push	 edx
  001dd	51		 push	 ecx
  001de	8b cf		 mov	 ecx, edi
  001e0	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 937  :     RecalcLayout();

  001e5	8b cf		 mov	 ecx, edi
  001e7	e8 00 00 00 00	 call	 ?RecalcLayout@CySplitterWnd@@QAEXXZ ; CySplitterWnd::RecalcLayout

; 938  : 
; 939  : 	m_pParent->SendMessage(WM_SPLITTER_MOVED, yDiff, GetDlgCtrlID());

  001ec	8b cf		 mov	 ecx, edi
  001ee	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 32   : 	{ ASSERT(::IsWindow(m_hWnd)); return ::SendMessage(m_hWnd, message, wParam, lParam); }

  001f3	50		 push	 eax
  001f4	8b 87 80 00 00
	00		 mov	 eax, DWORD PTR [edi+128]
  001fa	56		 push	 esi
  001fb	68 e8 07 00 00	 push	 2024			; 000007e8H
  00200	ff 70 20	 push	 DWORD PTR [eax+32]
  00203	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
$LN65@OnLButtonD:
  00209	5e		 pop	 esi
  0020a	5b		 pop	 ebx
$LN1@OnLButtonD:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 942  : }

  0020b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0020e	33 cd		 xor	 ecx, ebp
  00210	5f		 pop	 edi
  00211	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00216	8b e5		 mov	 esp, ebp
  00218	5d		 pop	 ebp
  00219	c2 0c 00	 ret	 12			; 0000000cH
?OnLButtonDown@CySplitterWnd@@IAEXIVCPoint@@@Z ENDP	; CySplitterWnd::OnLButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ??1CySplitterWnd@@UAE@XZ
_TEXT	SEGMENT
??1CySplitterWnd@@UAE@XZ PROC				; CySplitterWnd::~CySplitterWnd, COMDAT
; _this$ = ecx

; 503  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 504  : }

  00003	8d 8e b4 00 00
	00		 lea	 ecx, DWORD PTR [esi+180]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CySplitterWnd@@6B@
  0000f	e8 00 00 00 00	 call	 ??1CDWordArray@@UAE@XZ	; CDWordArray::~CDWordArray
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 358  : 	if (m_pData != NULL)

  00014	8b 86 9c 00 00
	00		 mov	 eax, DWORD PTR [esi+156]
  0001a	c7 86 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+152], OFFSET ??_7?$CArray@UControlInfo@@AAU1@@@6B@
  00024	85 c0		 test	 eax, eax
  00026	74 13		 je	 SHORT $LN7@CySplitter

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )

  00028	83 be a0 00 00
	00 00		 cmp	 DWORD PTR [esi+160], 0
  0002f	0f 4f c0	 cmovg	 eax, eax

; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00038	83 c4 04	 add	 esp, 4
$LN7@CySplitter:

; 358  : 	if (m_pData != NULL)

  0003b	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  00041	c7 86 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+132], OFFSET ??_7?$CArray@UControlInfo@@AAU1@@@6B@
  0004b	85 c0		 test	 eax, eax
  0004d	74 13		 je	 SHORT $LN14@CySplitter

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )

  0004f	83 be 8c 00 00
	00 00		 cmp	 DWORD PTR [esi+140], 0
  00056	0f 4f c0	 cmovg	 eax, eax

; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0005f	83 c4 04	 add	 esp, 4
$LN14@CySplitter:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 504  : }

  00062	8b ce		 mov	 ecx, esi
  00064	5e		 pop	 esi
  00065	e9 00 00 00 00	 jmp	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
??1CySplitterWnd@@UAE@XZ ENDP				; CySplitterWnd::~CySplitterWnd
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?GetMouseClipRect@CySplitterWnd@@IAE_NPAUtagRECT@@VCPoint@@@Z
_TEXT	SEGMENT
_cInfo$ = -80						; size = 16
_rectClip$GSCopy$1$ = -64				; size = 4
tv579 = -60						; size = 4
_rectTarget$$sroa$353$1$ = -56				; size = 4
_rectCtrl$ = -52					; size = 16
_rectParent$ = -36					; size = 16
_rectSplitter$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_rectClip$ = 8						; size = 4
_pointInSplitter$ = 12					; size = 8
?GetMouseClipRect@CySplitterWnd@@IAE_NPAUtagRECT@@VCPoint@@@Z PROC ; CySplitterWnd::GetMouseClipRect, COMDAT
; _this$ = ecx

; 779  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _rectClip$[ebp]
  00013	0f 57 c0	 xorps	 xmm0, xmm0
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f1		 mov	 esi, ecx
  0001b	89 45 c0	 mov	 DWORD PTR _rectClip$GSCopy$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0001e	8d 45 ec	 lea	 eax, DWORD PTR _rectSplitter$[ebp]
  00021	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00022	0f 11 45 ec	 movups	 XMMWORD PTR _rectSplitter$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00026	ff 76 20	 push	 DWORD PTR [esi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00029	0f 11 45 dc	 movups	 XMMWORD PTR _rectParent$[ebp], xmm0
  0002d	0f 11 45 cc	 movups	 XMMWORD PTR _rectCtrl$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8

; 86   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetClientRect(m_hWnd, lpRect); }

  00037	8d 45 dc	 lea	 eax, DWORD PTR _rectParent$[ebp]
  0003a	50		 push	 eax
  0003b	8b 86 80 00 00
	00		 mov	 eax, DWORD PTR [esi+128]
  00041	ff 70 20	 push	 DWORD PTR [eax+32]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 785  : 	m_pParent->ClientToScreen(&rectParent);

  0004a	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  00050	8d 45 dc	 lea	 eax, DWORD PTR _rectParent$[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?ClientToScreen@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ClientToScreen

; 786  : 
; 787  : 	rectTarget = rectSplitter;
; 788  : 	rectTarget.top = rectParent.top + m_minAbove;

  00059	8b 86 ac 00 00
	00		 mov	 eax, DWORD PTR [esi+172]

; 789  : 	for ( i=0; i<m_aboveCtrls.GetSize(); i++) 

  0005f	33 db		 xor	 ebx, ebx
  00061	03 45 e0	 add	 eax, DWORD PTR _rectParent$[ebp+4]
  00064	89 45 c8	 mov	 DWORD PTR _rectTarget$$sroa$353$1$[ebp], eax
  00067	8b 86 8c 00 00
	00		 mov	 eax, DWORD PTR [esi+140]
  0006d	85 c0		 test	 eax, eax
  0006f	7e 5f		 jle	 SHORT $LN3@GetMouseCl

; 779  : {

  00071	33 ff		 xor	 edi, edi
$LL4@GetMouseCl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 288  : 	if(nIndex >= 0 && nIndex < m_nSize)

  00073	85 ff		 test	 edi, edi
  00075	0f 88 28 01 00
	00		 js	 $LN37@GetMouseCl
  0007b	3b d8		 cmp	 ebx, eax
  0007d	0f 8d 20 01 00
	00		 jge	 $LN37@GetMouseCl

; 289  : 		return m_pData[nIndex];

  00083	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 791  :         cInfo = m_aboveCtrls.GetAt(i);

  00089	0f 10 04 38	 movups	 xmm0, XMMWORD PTR [eax+edi]
  0008d	0f 11 45 b0	 movups	 XMMWORD PTR _cInfo$[ebp], xmm0

; 792  : 		if (cInfo.bResize) //need at least one resize control.

  00091	66 0f 73 d8 0c	 psrldq	 xmm0, 12		; 0000000cH
  00096	66 0f 7e c0	 movd	 eax, xmm0
  0009a	84 c0		 test	 al, al
  0009c	74 24		 je	 SHORT $LN2@GetMouseCl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0009e	8d 45 cc	 lea	 eax, DWORD PTR _rectCtrl$[ebp]
  000a1	50		 push	 eax
  000a2	8b 45 b4	 mov	 eax, DWORD PTR _cInfo$[ebp+4]
  000a5	ff 70 20	 push	 DWORD PTR [eax+32]
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 795  : 			if (rectTarget.top < rectCtrl.top + m_minAbove) 

  000ae	8b 45 d0	 mov	 eax, DWORD PTR _rectCtrl$[ebp+4]
  000b1	03 86 ac 00 00
	00		 add	 eax, DWORD PTR [esi+172]
  000b7	8b 4d c8	 mov	 ecx, DWORD PTR _rectTarget$$sroa$353$1$[ebp]
  000ba	3b c8		 cmp	 ecx, eax
  000bc	0f 4c c8	 cmovl	 ecx, eax
  000bf	89 4d c8	 mov	 DWORD PTR _rectTarget$$sroa$353$1$[ebp], ecx
$LN2@GetMouseCl:

; 789  : 	for ( i=0; i<m_aboveCtrls.GetSize(); i++) 

  000c2	8b 86 8c 00 00
	00		 mov	 eax, DWORD PTR [esi+140]
  000c8	43		 inc	 ebx
  000c9	83 c7 10	 add	 edi, 16			; 00000010H
  000cc	3b d8		 cmp	 ebx, eax
  000ce	7c a3		 jl	 SHORT $LL4@GetMouseCl
$LN3@GetMouseCl:

; 796  : 			{
; 797  : 				rectTarget.top = rectCtrl.top + m_minAbove;
; 798  : 			}
; 799  : 		}
; 800  :     }
; 801  : 
; 802  :     rectTarget.bottom = rectParent.bottom - m_minBelow;

  000d0	8b 7d e8	 mov	 edi, DWORD PTR _rectParent$[ebp+12]

; 803  :     for (i=0; i<m_belowCtrls.GetSize(); i++) 

  000d3	33 db		 xor	 ebx, ebx
  000d5	2b be b0 00 00
	00		 sub	 edi, DWORD PTR [esi+176]
  000db	8b 86 a0 00 00
	00		 mov	 eax, DWORD PTR [esi+160]
  000e1	85 c0		 test	 eax, eax
  000e3	7e 68		 jle	 SHORT $LN6@GetMouseCl

; 796  : 			{
; 797  : 				rectTarget.top = rectCtrl.top + m_minAbove;
; 798  : 			}
; 799  : 		}
; 800  :     }
; 801  : 
; 802  :     rectTarget.bottom = rectParent.bottom - m_minBelow;

  000e5	33 c9		 xor	 ecx, ecx
  000e7	89 4d c4	 mov	 DWORD PTR tv579[ebp], ecx
  000ea	66 0f 1f 44 00
	00		 npad	 6
$LL7@GetMouseCl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 288  : 	if(nIndex >= 0 && nIndex < m_nSize)

  000f0	85 c9		 test	 ecx, ecx
  000f2	0f 88 ab 00 00
	00		 js	 $LN37@GetMouseCl
  000f8	3b d8		 cmp	 ebx, eax
  000fa	0f 8d a3 00 00
	00		 jge	 $LN37@GetMouseCl

; 289  : 		return m_pData[nIndex];

  00100	8b 86 9c 00 00
	00		 mov	 eax, DWORD PTR [esi+156]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 805  :         cInfo = m_belowCtrls.GetAt(i);

  00106	0f 10 04 08	 movups	 xmm0, XMMWORD PTR [eax+ecx]
  0010a	0f 11 45 b0	 movups	 XMMWORD PTR _cInfo$[ebp], xmm0

; 806  : 		if (cInfo.bResize) //need at least one resize control.

  0010e	66 0f 73 d8 0c	 psrldq	 xmm0, 12		; 0000000cH
  00113	66 0f 7e c0	 movd	 eax, xmm0
  00117	84 c0		 test	 al, al
  00119	74 21		 je	 SHORT $LN5@GetMouseCl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0011b	8d 45 cc	 lea	 eax, DWORD PTR _rectCtrl$[ebp]
  0011e	50		 push	 eax
  0011f	8b 45 b4	 mov	 eax, DWORD PTR _cInfo$[ebp+4]
  00122	ff 70 20	 push	 DWORD PTR [eax+32]
  00125	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 809  : 			if (rectTarget.bottom > rectCtrl.bottom - m_minBelow) 

  0012b	8b 45 d8	 mov	 eax, DWORD PTR _rectCtrl$[ebp+12]
  0012e	2b 86 b0 00 00
	00		 sub	 eax, DWORD PTR [esi+176]
  00134	8b 4d c4	 mov	 ecx, DWORD PTR tv579[ebp]
  00137	3b f8		 cmp	 edi, eax
  00139	0f 4f f8	 cmovg	 edi, eax
$LN5@GetMouseCl:

; 803  :     for (i=0; i<m_belowCtrls.GetSize(); i++) 

  0013c	8b 86 a0 00 00
	00		 mov	 eax, DWORD PTR [esi+160]
  00142	43		 inc	 ebx
  00143	83 c1 10	 add	 ecx, 16			; 00000010H
  00146	89 4d c4	 mov	 DWORD PTR tv579[ebp], ecx
  00149	3b d8		 cmp	 ebx, eax
  0014b	7c a3		 jl	 SHORT $LL7@GetMouseCl
$LN6@GetMouseCl:

; 810  : 			{
; 811  : 				rectTarget.bottom = rectCtrl.bottom - m_minBelow;
; 812  : 			}
; 813  : 		}
; 814  :     }
; 815  : 
; 816  :     if (rectTarget.top >= rectTarget.bottom) 

  0014d	8b 55 c8	 mov	 edx, DWORD PTR _rectTarget$$sroa$353$1$[ebp]
  00150	3b d7		 cmp	 edx, edi
  00152	7c 15		 jl	 SHORT $LN12@GetMouseCl

; 828  : }

  00154	5f		 pop	 edi
  00155	5e		 pop	 esi
  00156	32 c0		 xor	 al, al
  00158	5b		 pop	 ebx
  00159	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0015c	33 cd		 xor	 ecx, ebp
  0015e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00163	8b e5		 mov	 esp, ebp
  00165	5d		 pop	 ebp
  00166	c2 0c 00	 ret	 12			; 0000000cH
$LN12@GetMouseCl:

; 817  : 	{
; 818  :         TRACE("No room to drag the y-splitter bar");
; 819  :         return FALSE;
; 820  :     }
; 821  : 
; 822  :     rectClip->left = rectSplitter.left;

  00169	8b 5d c0	 mov	 ebx, DWORD PTR _rectClip$GSCopy$1$[ebp]

; 823  :     rectClip->right = rectSplitter.right;
; 824  :     rectClip->top = rectTarget.top + pointInSplitter.y;

  0016c	8b 4d 10	 mov	 ecx, DWORD PTR _pointInSplitter$[ebp+4]
  0016f	8b 45 ec	 mov	 eax, DWORD PTR _rectSplitter$[ebp]
  00172	89 03		 mov	 DWORD PTR [ebx], eax
  00174	8b 45 f4	 mov	 eax, DWORD PTR _rectSplitter$[ebp+8]
  00177	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  0017a	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
  0017d	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 825  :     rectClip->bottom = rectTarget.bottom - (rectSplitter.Height() - pointInSplitter.y) + 1;

  00180	8b 45 f0	 mov	 eax, DWORD PTR _rectSplitter$[ebp+4]
  00183	2b 45 f8	 sub	 eax, DWORD PTR _rectSplitter$[ebp+12]
  00186	40		 inc	 eax
  00187	03 c7		 add	 eax, edi
  00189	03 c1		 add	 eax, ecx

; 828  : }

  0018b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0018e	5f		 pop	 edi
  0018f	89 43 0c	 mov	 DWORD PTR [ebx+12], eax
  00192	33 cd		 xor	 ecx, ebp
  00194	5e		 pop	 esi
  00195	b0 01		 mov	 al, 1
  00197	5b		 pop	 ebx
  00198	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0019d	8b e5		 mov	 esp, ebp
  0019f	5d		 pop	 ebp
  001a0	c2 0c 00	 ret	 12			; 0000000cH
$LN37@GetMouseCl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 290  : 	AfxThrowInvalidArgException();

  001a3	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN51@GetMouseCl:
  001a8	cc		 int	 3
?GetMouseClipRect@CySplitterWnd@@IAE_NPAUtagRECT@@VCPoint@@@Z ENDP ; CySplitterWnd::GetMouseClipRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?AttachToParent@CySplitterWnd@@QAE_NKK@Z
_TEXT	SEGMENT
_rcSplitter$ = -36					; size = 16
_rcCtrl$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_ctrlId$ = 8						; size = 4
_ctrlParentID$ = 12					; size = 4
?AttachToParent@CySplitterWnd@@QAE_NKK@Z PROC		; CySplitterWnd::AttachToParent, COMDAT
; _this$ = ecx

; 625  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b 75 08	 mov	 esi, DWORD PTR _ctrlId$[ebp]
  00015	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 137  : 		SetAtGrow(nIndex, newElement);

  00016	ff 75 0c	 push	 DWORD PTR _ctrlParentID$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 625  : { 

  00019	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 137  : 		SetAtGrow(nIndex, newElement);

  0001b	ff b7 bc 00 00
	00		 push	 DWORD PTR [edi+188]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 626  : 	m_dwaRelationID.Add(ctrlParentID); 

  00021	8d 9f b4 00 00
	00		 lea	 ebx, DWORD PTR [edi+180]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 137  : 		SetAtGrow(nIndex, newElement);

  00027	8b cb		 mov	 ecx, ebx
  00029	e8 00 00 00 00	 call	 ?SetAtGrow@CDWordArray@@QAEXHK@Z ; CDWordArray::SetAtGrow
  0002e	56		 push	 esi
  0002f	ff 73 08	 push	 DWORD PTR [ebx+8]
  00032	8b cb		 mov	 ecx, ebx
  00034	e8 00 00 00 00	 call	 ?SetAtGrow@CDWordArray@@QAEXHK@Z ; CDWordArray::SetAtGrow
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 631  : 	pCtrl = m_pParent->GetDlgItem(ctrlId); 

  00039	8b 8f 80 00 00
	00		 mov	 ecx, DWORD PTR [edi+128]
  0003f	0f 57 c0	 xorps	 xmm0, xmm0
  00042	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00043	0f 11 45 ec	 movups	 XMMWORD PTR _rcCtrl$[ebp], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 631  : 	pCtrl = m_pParent->GetDlgItem(ctrlId); 

  00047	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0004c	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetWindowRect@8
  00052	8d 4d ec	 lea	 ecx, DWORD PTR _rcCtrl$[ebp]
  00055	51		 push	 ecx
  00056	ff 70 20	 push	 DWORD PTR [eax+32]
  00059	ff d6		 call	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 633  : 	m_pParent->ScreenToClient(&rcCtrl); 

  0005b	8b 8f 80 00 00
	00		 mov	 ecx, DWORD PTR [edi+128]
  00061	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 581  : 	return bottom - top;

  0006a	8b 45 f8	 mov	 eax, DWORD PTR _rcCtrl$[ebp+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 137  : 		SetAtGrow(nIndex, newElement);

  0006d	8b cb		 mov	 ecx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 581  : 	return bottom - top;

  0006f	2b 45 f0	 sub	 eax, DWORD PTR _rcCtrl$[ebp+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 137  : 		SetAtGrow(nIndex, newElement);

  00072	50		 push	 eax
  00073	ff 73 08	 push	 DWORD PTR [ebx+8]
  00076	e8 00 00 00 00	 call	 ?SetAtGrow@CDWordArray@@QAEXHK@Z ; CDWordArray::SetAtGrow
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0007b	8d 45 dc	 lea	 eax, DWORD PTR _rcSplitter$[ebp]
  0007e	0f 57 c0	 xorps	 xmm0, xmm0
  00081	50		 push	 eax
  00082	ff 77 20	 push	 DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00085	0f 11 45 dc	 movups	 XMMWORD PTR _rcSplitter$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00089	ff d6		 call	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 639  : 	m_pParent->ScreenToClient(&rcSplitter); 

  0008b	8b 8f 80 00 00
	00		 mov	 ecx, DWORD PTR [edi+128]
  00091	8d 45 dc	 lea	 eax, DWORD PTR _rcSplitter$[ebp]
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 641  : 	dwCtrlDistance = rcCtrl.top - rcSplitter.bottom; 

  0009a	8b 45 f0	 mov	 eax, DWORD PTR _rcCtrl$[ebp+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 137  : 		SetAtGrow(nIndex, newElement);

  0009d	8b cb		 mov	 ecx, ebx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 641  : 	dwCtrlDistance = rcCtrl.top - rcSplitter.bottom; 

  0009f	2b 45 e8	 sub	 eax, DWORD PTR _rcSplitter$[ebp+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 137  : 		SetAtGrow(nIndex, newElement);

  000a2	50		 push	 eax
  000a3	ff 73 08	 push	 DWORD PTR [ebx+8]
  000a6	e8 00 00 00 00	 call	 ?SetAtGrow@CDWordArray@@QAEXHK@Z ; CDWordArray::SetAtGrow
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 645  : } 

  000ab	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ae	b0 01		 mov	 al, 1
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	33 cd		 xor	 ecx, ebp
  000b4	5b		 pop	 ebx
  000b5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ba	8b e5		 mov	 esp, ebp
  000bc	5d		 pop	 ebp
  000bd	c2 08 00	 ret	 8
?AttachToParent@CySplitterWnd@@QAE_NKK@Z ENDP		; CySplitterWnd::AttachToParent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?RecalcLayout@CySplitterWnd@@QAEXXZ
_TEXT	SEGMENT
_cInfo$8$ = -92						; size = 16
_cInfo$7$ = -92						; size = 16
_rcFrame$1 = -92					; size = 16
_cInfo$ = -76						; size = 16
_rcFrame$1$ = -60					; size = 4
tv1443 = -56						; size = 4
_i$2$ = -52						; size = 4
_pCtrl$1$ = -48						; size = 4
_nMaxBottom$1$ = -44					; size = 4
_i$1$ = -44						; size = 4
_pCtrlWithMaxBottom$1$ = -40				; size = 4
tv1452 = -40						; size = 4
_rcSplitter$ = -36					; size = 16
_rcCtrl$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?RecalcLayout@CySplitterWnd@@QAEXXZ PROC		; CySplitterWnd::RecalcLayout, COMDAT
; _this$ = ecx

; 648  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00012	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetWindowRect@8
  00018	8d 45 dc	 lea	 eax, DWORD PTR _rcSplitter$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 648  : { 

  0001b	57		 push	 edi
  0001c	8b f9		 mov	 edi, ecx
  0001e	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00021	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00022	0f 11 45 dc	 movups	 XMMWORD PTR _rcSplitter$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00026	ff 77 20	 push	 DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00029	0f 11 45 ec	 movups	 XMMWORD PTR _rcCtrl$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0002d	ff d6		 call	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 652  : 	m_pParent->ScreenToClient(&rcSplitter); 

  0002f	8b 8f 80 00 00
	00		 mov	 ecx, DWORD PTR [edi+128]
  00035	8d 45 dc	 lea	 eax, DWORD PTR _rcSplitter$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 653  : 
; 654  : 	ControlInfo cInfo;
; 655  : 	int i = 0;
; 656  : 	for ( i=0; i<m_aboveCtrls.GetSize(); i++) 

  0003e	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]
  00044	33 c9		 xor	 ecx, ecx
  00046	89 4d d4	 mov	 DWORD PTR _i$1$[ebp], ecx
  00049	85 c0		 test	 eax, eax
  0004b	0f 8e a0 01 00
	00		 jle	 $LN129@RecalcLayo

; 648  : { 

  00051	33 d2		 xor	 edx, edx
  00053	89 55 d8	 mov	 DWORD PTR tv1452[ebp], edx
$LL4@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 288  : 	if(nIndex >= 0 && nIndex < m_nSize)

  00056	85 d2		 test	 edx, edx
  00058	0f 88 f4 03 00
	00		 js	 $LN74@RecalcLayo
  0005e	3b c8		 cmp	 ecx, eax
  00060	0f 8d ec 03 00
	00		 jge	 $LN74@RecalcLayo

; 289  : 		return m_pData[nIndex];

  00066	8b 87 88 00 00
	00		 mov	 eax, DWORD PTR [edi+136]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 658  : 		cInfo = m_aboveCtrls.GetAt(i); 

  0006c	0f 10 04 10	 movups	 xmm0, XMMWORD PTR [eax+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00070	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
  00073	50		 push	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 658  : 		cInfo = m_aboveCtrls.GetAt(i); 

  00074	0f 11 45 a4	 movups	 XMMWORD PTR _cInfo$7$[ebp], xmm0
  00078	0f 11 45 b4	 movups	 XMMWORD PTR _cInfo$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0007c	66 0f 73 d8 04	 psrldq	 xmm0, 4
  00081	66 0f 7e c3	 movd	 ebx, xmm0
  00085	ff 73 20	 push	 DWORD PTR [ebx+32]
  00088	ff d6		 call	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 660  : 		m_pParent->ScreenToClient(&rcCtrl); 

  0008a	8b 8f 80 00 00
	00		 mov	 ecx, DWORD PTR [edi+128]
  00090	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 661  : 		if (cInfo.bResize)

  00099	0f 10 45 a4	 movups	 xmm0, XMMWORD PTR _cInfo$7$[ebp]
  0009d	66 0f 73 d8 0c	 psrldq	 xmm0, 12		; 0000000cH
  000a2	66 0f 7e c0	 movd	 eax, xmm0
  000a6	84 c0		 test	 al, al
  000a8	74 11		 je	 SHORT $LN14@RecalcLayo

; 662  : 		{
; 663  : 			rcCtrl.bottom = rcSplitter.top - cInfo.nMargin; 

  000aa	8b 55 e0	 mov	 edx, DWORD PTR _rcSplitter$[ebp+4]
  000ad	2b 55 bc	 sub	 edx, DWORD PTR _cInfo$[ebp+8]

; 664  : 		}

  000b0	8b 4d f4	 mov	 ecx, DWORD PTR _rcCtrl$[ebp+8]
  000b3	8b 75 ec	 mov	 esi, DWORD PTR _rcCtrl$[ebp]
  000b6	89 55 f8	 mov	 DWORD PTR _rcCtrl$[ebp+12], edx
  000b9	eb 19		 jmp	 SHORT $LN15@RecalcLayo
$LN14@RecalcLayo:

; 668  : 			rcCtrl.right = rcSplitter.left - cInfo.nMargin;

  000bb	8b 4d dc	 mov	 ecx, DWORD PTR _rcSplitter$[ebp]
  000be	2b 4d bc	 sub	 ecx, DWORD PTR _cInfo$[ebp+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  000c1	8b 45 f4	 mov	 eax, DWORD PTR _rcCtrl$[ebp+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 668  : 			rcCtrl.right = rcSplitter.left - cInfo.nMargin;

  000c4	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  000c6	2b 45 ec	 sub	 eax, DWORD PTR _rcCtrl$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 669  : 			rcCtrl.left = rcCtrl.right - nWidth;

  000c9	8b 55 f8	 mov	 edx, DWORD PTR _rcCtrl$[ebp+12]
  000cc	2b f0		 sub	 esi, eax
  000ce	89 4d f4	 mov	 DWORD PTR _rcCtrl$[ebp+8], ecx
  000d1	89 75 ec	 mov	 DWORD PTR _rcCtrl$[ebp], esi
$LN15@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 73   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  000d4	8b 45 f0	 mov	 eax, DWORD PTR _rcCtrl$[ebp+4]
  000d7	2b ce		 sub	 ecx, esi
  000d9	6a 00		 push	 0
  000db	2b d0		 sub	 edx, eax
  000dd	52		 push	 edx
  000de	51		 push	 ecx
  000df	50		 push	 eax
  000e0	56		 push	 esi
  000e1	8b cb		 mov	 ecx, ebx
  000e3	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 673  : 		for (int j=0; j<m_dwaRelationID.GetSize(); j+=4) 

  000e8	8b 8f bc 00 00
	00		 mov	 ecx, DWORD PTR [edi+188]
  000ee	85 c9		 test	 ecx, ecx
  000f0	0f 8e d7 00 00
	00		 jle	 $LN2@RecalcLayo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 73   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  000f6	be 02 00 00 00	 mov	 esi, 2
  000fb	0f 1f 44 00 00	 npad	 5
$LL7@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 117  : 		if( nIndex < 0 || nIndex >= m_nSize )

  00100	8d 46 fe	 lea	 eax, DWORD PTR [esi-2]
  00103	85 c0		 test	 eax, eax
  00105	0f 88 47 03 00
	00		 js	 $LN74@RecalcLayo
  0010b	3b c1		 cmp	 eax, ecx
  0010d	0f 8d 3f 03 00
	00		 jge	 $LN74@RecalcLayo

; 118  : 			AfxThrowInvalidArgException();
; 119  : 		return m_pData[nIndex]; }

  00113	8b 97 b8 00 00
	00		 mov	 edx, DWORD PTR [edi+184]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 676  : 			if (nParentId == cInfo.nID) 

  00119	8b 45 b4	 mov	 eax, DWORD PTR _cInfo$[ebp]
  0011c	39 44 b2 f8	 cmp	 DWORD PTR [edx+esi*4-8], eax
  00120	0f 85 99 00 00
	00		 jne	 $LN5@RecalcLayo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 117  : 		if( nIndex < 0 || nIndex >= m_nSize )

  00126	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  00129	85 c0		 test	 eax, eax
  0012b	0f 88 21 03 00
	00		 js	 $LN74@RecalcLayo
  00131	3b c1		 cmp	 eax, ecx
  00133	0f 8d 19 03 00
	00		 jge	 $LN74@RecalcLayo
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 679  : 				CWnd *pCtrl = m_pParent->GetDlgItem(nChildId); 

  00139	ff 74 b2 fc	 push	 DWORD PTR [edx+esi*4-4]
  0013d	8b 8f 80 00 00
	00		 mov	 ecx, DWORD PTR [edi+128]
  00143	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00148	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0014a	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
  0014d	50		 push	 eax
  0014e	ff 73 20	 push	 DWORD PTR [ebx+32]
  00151	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 681  : 				m_pParent->ScreenToClient(&rcCtrl); 

  00157	8b 8f 80 00 00
	00		 mov	 ecx, DWORD PTR [edi+128]
  0015d	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
  00160	50		 push	 eax
  00161	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 682  : 				if (rcSplitter.top > rcCtrl.bottom)

  00166	8b 4d e0	 mov	 ecx, DWORD PTR _rcSplitter$[ebp+4]
  00169	8b 45 f8	 mov	 eax, DWORD PTR _rcCtrl$[ebp+12]
  0016c	8b 55 f0	 mov	 edx, DWORD PTR _rcCtrl$[ebp+4]
  0016f	3b c8		 cmp	 ecx, eax
  00171	7e 23		 jle	 SHORT $LN17@RecalcLayo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 117  : 		if( nIndex < 0 || nIndex >= m_nSize )

  00173	85 f6		 test	 esi, esi
  00175	0f 88 d7 02 00
	00		 js	 $LN74@RecalcLayo
  0017b	3b b7 bc 00 00
	00		 cmp	 esi, DWORD PTR [edi+188]
  00181	0f 8d cb 02 00
	00		 jge	 $LN74@RecalcLayo
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 684  : 					if (rcSplitter.top < (LONG)(rcCtrl.top + m_dwaRelationID.GetAt(j+2))) 

  00187	8b 87 b8 00 00
	00		 mov	 eax, DWORD PTR [edi+184]
  0018d	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]
  00190	03 c2		 add	 eax, edx
  00192	3b c8		 cmp	 ecx, eax

; 685  : 					{ 
; 686  : 						rcCtrl.bottom = rcSplitter.top;// - m_nMargin; 
; 687  : 					}
; 688  : 					else 
; 689  : 						rcCtrl.bottom = rcCtrl.top + m_dwaRelationID.GetAt(j+2); 
; 690  : 				}

  00194	eb 06		 jmp	 SHORT $LN138@RecalcLayo
$LN17@RecalcLayo:

; 691  : 				else if (rcSplitter.top < rcCtrl.bottom) 

  00196	7d 0a		 jge	 SHORT $LN22@RecalcLayo

; 692  : 				{ 
; 693  : 					if (rcCtrl.top < rcSplitter.top) 

  00198	8b c2		 mov	 eax, edx
  0019a	3b d1		 cmp	 edx, ecx
$LN138@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 73   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  0019c	0f 4c c1	 cmovl	 eax, ecx
  0019f	89 45 f8	 mov	 DWORD PTR _rcCtrl$[ebp+12], eax
$LN22@RecalcLayo:
  001a2	8b 4d ec	 mov	 ecx, DWORD PTR _rcCtrl$[ebp]
  001a5	2b c2		 sub	 eax, edx
  001a7	6a 00		 push	 0
  001a9	50		 push	 eax
  001aa	8b 45 f4	 mov	 eax, DWORD PTR _rcCtrl$[ebp+8]
  001ad	2b c1		 sub	 eax, ecx
  001af	50		 push	 eax
  001b0	52		 push	 edx
  001b1	51		 push	 ecx
  001b2	8b cb		 mov	 ecx, ebx
  001b4	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
  001b9	8b 8f bc 00 00
	00		 mov	 ecx, DWORD PTR [edi+188]
$LN5@RecalcLayo:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 673  : 		for (int j=0; j<m_dwaRelationID.GetSize(); j+=4) 

  001bf	83 c6 04	 add	 esi, 4
  001c2	8d 46 fe	 lea	 eax, DWORD PTR [esi-2]
  001c5	3b c1		 cmp	 eax, ecx
  001c7	0f 8c 33 ff ff
	ff		 jl	 $LL7@RecalcLayo
$LN2@RecalcLayo:

; 653  : 
; 654  : 	ControlInfo cInfo;
; 655  : 	int i = 0;
; 656  : 	for ( i=0; i<m_aboveCtrls.GetSize(); i++) 

  001cd	8b 4d d4	 mov	 ecx, DWORD PTR _i$1$[ebp]
  001d0	8b 55 d8	 mov	 edx, DWORD PTR tv1452[ebp]
  001d3	41		 inc	 ecx
  001d4	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]
  001da	83 c2 10	 add	 edx, 16			; 00000010H
  001dd	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetWindowRect@8
  001e3	89 4d d4	 mov	 DWORD PTR _i$1$[ebp], ecx
  001e6	89 55 d8	 mov	 DWORD PTR tv1452[ebp], edx
  001e9	3b c8		 cmp	 ecx, eax
  001eb	0f 8c 65 fe ff
	ff		 jl	 $LL4@RecalcLayo
$LN129@RecalcLayo:

; 707  : 	for (i=0; i<m_belowCtrls.GetSize(); i++) 

  001f1	8b 87 a0 00 00
	00		 mov	 eax, DWORD PTR [edi+160]
  001f7	33 c9		 xor	 ecx, ecx
  001f9	89 4d cc	 mov	 DWORD PTR _i$2$[ebp], ecx
  001fc	85 c0		 test	 eax, eax
  001fe	0f 8e 2a 02 00
	00		 jle	 $LN9@RecalcLayo
  00204	33 d2		 xor	 edx, edx
  00206	89 55 c8	 mov	 DWORD PTR tv1443[ebp], edx
  00209	0f 1f 80 00 00
	00 00		 npad	 7
$LL10@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 288  : 	if(nIndex >= 0 && nIndex < m_nSize)

  00210	85 d2		 test	 edx, edx
  00212	0f 88 3a 02 00
	00		 js	 $LN74@RecalcLayo
  00218	3b c8		 cmp	 ecx, eax
  0021a	0f 8d 32 02 00
	00		 jge	 $LN74@RecalcLayo

; 289  : 		return m_pData[nIndex];

  00220	8b 87 9c 00 00
	00		 mov	 eax, DWORD PTR [edi+156]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 709  : 		cInfo = m_belowCtrls.GetAt(i); 

  00226	0f 10 04 10	 movups	 xmm0, XMMWORD PTR [eax+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0022a	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
  0022d	50		 push	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 709  : 		cInfo = m_belowCtrls.GetAt(i); 

  0022e	0f 11 45 a4	 movups	 XMMWORD PTR _cInfo$8$[ebp], xmm0
  00232	0f 11 45 b4	 movups	 XMMWORD PTR _cInfo$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00236	66 0f 73 d8 04	 psrldq	 xmm0, 4
  0023b	66 0f 7e c3	 movd	 ebx, xmm0
  0023f	ff 73 20	 push	 DWORD PTR [ebx+32]
  00242	ff d6		 call	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 711  : 		m_pParent->ScreenToClient(&rcCtrl); 

  00244	8b 8f 80 00 00
	00		 mov	 ecx, DWORD PTR [edi+128]
  0024a	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
  0024d	50		 push	 eax
  0024e	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 712  : 		if (cInfo.bResize)

  00253	0f 10 45 a4	 movups	 xmm0, XMMWORD PTR _cInfo$8$[ebp]
  00257	8b 55 f4	 mov	 edx, DWORD PTR _rcCtrl$[ebp+8]
  0025a	8b 75 ec	 mov	 esi, DWORD PTR _rcCtrl$[ebp]
  0025d	8b 4d bc	 mov	 ecx, DWORD PTR _cInfo$[ebp+8]
  00260	66 0f 73 d8 0c	 psrldq	 xmm0, 12		; 0000000cH
  00265	66 0f 7e c0	 movd	 eax, xmm0
  00269	84 c0		 test	 al, al
  0026b	74 08		 je	 SHORT $LN24@RecalcLayo

; 713  : 		{
; 714  : 			rcCtrl.top = rcSplitter.bottom + cInfo.nMargin;

  0026d	03 4d e8	 add	 ecx, DWORD PTR _rcSplitter$[ebp+12]

; 715  : 		}

  00270	8b 45 f8	 mov	 eax, DWORD PTR _rcCtrl$[ebp+12]
  00273	eb 0c		 jmp	 SHORT $LN139@RecalcLayo
$LN24@RecalcLayo:

; 716  : 		else	
; 717  : 		{
; 718  : 			int nWidth = rcCtrl.Width();
; 719  : 			rcCtrl.top = rcSplitter.bottom + cInfo.nMargin;

  00275	03 4d e8	 add	 ecx, DWORD PTR _rcSplitter$[ebp+12]

; 720  : 			rcCtrl.bottom = rcCtrl.top + nWidth;

  00278	8b c1		 mov	 eax, ecx
  0027a	2b c6		 sub	 eax, esi
  0027c	03 c2		 add	 eax, edx
  0027e	89 45 f8	 mov	 DWORD PTR _rcCtrl$[ebp+12], eax
$LN139@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 73   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  00281	6a 00		 push	 0
  00283	2b c1		 sub	 eax, ecx
  00285	89 4d f0	 mov	 DWORD PTR _rcCtrl$[ebp+4], ecx
  00288	50		 push	 eax
  00289	2b d6		 sub	 edx, esi
  0028b	52		 push	 edx
  0028c	51		 push	 ecx
  0028d	56		 push	 esi
  0028e	8b cb		 mov	 ecx, ebx
  00290	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 724  : 		RECT rcFrame = rcCtrl; 

  00295	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR _rcCtrl$[ebp]

; 730  : 		for (int j=0; j<m_dwaRelationID.GetSize(); j+=4) 

  00299	8b 8f bc 00 00
	00		 mov	 ecx, DWORD PTR [edi+188]
  0029f	33 c0		 xor	 eax, eax
  002a1	83 ca ff	 or	 edx, -1
  002a4	89 45 d8	 mov	 DWORD PTR _pCtrlWithMaxBottom$1$[ebp], eax
  002a7	89 55 d4	 mov	 DWORD PTR _nMaxBottom$1$[ebp], edx
  002aa	0f 11 45 a4	 movups	 XMMWORD PTR _rcFrame$1[ebp], xmm0
  002ae	8b 5d b0	 mov	 ebx, DWORD PTR _rcFrame$1[ebp+12]
  002b1	89 5d c4	 mov	 DWORD PTR _rcFrame$1$[ebp], ebx
  002b4	85 c9		 test	 ecx, ecx
  002b6	0f 8e 0c 01 00
	00		 jle	 $LN136@RecalcLayo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 73   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  002bc	be 03 00 00 00	 mov	 esi, 3
$LL13@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 117  : 		if( nIndex < 0 || nIndex >= m_nSize )

  002c1	8d 46 fd	 lea	 eax, DWORD PTR [esi-3]
  002c4	85 c0		 test	 eax, eax
  002c6	0f 88 86 01 00
	00		 js	 $LN74@RecalcLayo
  002cc	3b c1		 cmp	 eax, ecx
  002ce	0f 8d 7e 01 00
	00		 jge	 $LN74@RecalcLayo

; 118  : 			AfxThrowInvalidArgException();
; 119  : 		return m_pData[nIndex]; }

  002d4	8b 97 b8 00 00
	00		 mov	 edx, DWORD PTR [edi+184]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 733  : 			if (nParentId == cInfo.nID) 

  002da	8b 45 b4	 mov	 eax, DWORD PTR _cInfo$[ebp]
  002dd	39 44 b2 f4	 cmp	 DWORD PTR [edx+esi*4-12], eax
  002e1	0f 85 cd 00 00
	00		 jne	 $LN11@RecalcLayo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 117  : 		if( nIndex < 0 || nIndex >= m_nSize )

  002e7	8d 46 fe	 lea	 eax, DWORD PTR [esi-2]
  002ea	85 c0		 test	 eax, eax
  002ec	0f 88 60 01 00
	00		 js	 $LN74@RecalcLayo
  002f2	3b c1		 cmp	 eax, ecx
  002f4	0f 8d 58 01 00
	00		 jge	 $LN74@RecalcLayo
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 736  : 				CWnd *pCtrl = m_pParent->GetDlgItem(nChildId); 

  002fa	ff 74 b2 f8	 push	 DWORD PTR [edx+esi*4-8]
  002fe	8b 8f 80 00 00
	00		 mov	 ecx, DWORD PTR [edi+128]
  00304	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00309	8d 4d ec	 lea	 ecx, DWORD PTR _rcCtrl$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 736  : 				CWnd *pCtrl = m_pParent->GetDlgItem(nChildId); 

  0030c	89 45 d0	 mov	 DWORD PTR _pCtrl$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0030f	51		 push	 ecx
  00310	ff 70 20	 push	 DWORD PTR [eax+32]
  00313	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 738  : 				m_pParent->ScreenToClient(&rcCtrl); 

  00319	8b 8f 80 00 00
	00		 mov	 ecx, DWORD PTR [edi+128]
  0031f	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
  00322	50		 push	 eax
  00323	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 117  : 		if( nIndex < 0 || nIndex >= m_nSize )

  00328	85 f6		 test	 esi, esi
  0032a	0f 88 22 01 00
	00		 js	 $LN74@RecalcLayo
  00330	8b 9f bc 00 00
	00		 mov	 ebx, DWORD PTR [edi+188]
  00336	3b f3		 cmp	 esi, ebx
  00338	0f 8d 14 01 00
	00		 jge	 $LN74@RecalcLayo

; 118  : 			AfxThrowInvalidArgException();
; 119  : 		return m_pData[nIndex]; }

  0033e	8b 87 b8 00 00
	00		 mov	 eax, DWORD PTR [edi+184]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 739  : 				rcCtrl.top = rcSplitter.bottom + m_dwaRelationID.GetAt(j+3); 

  00344	8b 14 b0	 mov	 edx, DWORD PTR [eax+esi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 117  : 		if( nIndex < 0 || nIndex >= m_nSize )

  00347	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 739  : 				rcCtrl.top = rcSplitter.bottom + m_dwaRelationID.GetAt(j+3); 

  0034a	03 55 e8	 add	 edx, DWORD PTR _rcSplitter$[ebp+12]
  0034d	89 55 f0	 mov	 DWORD PTR _rcCtrl$[ebp+4], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 117  : 		if( nIndex < 0 || nIndex >= m_nSize )

  00350	85 c0		 test	 eax, eax
  00352	0f 88 fa 00 00
	00		 js	 $LN74@RecalcLayo
  00358	3b c3		 cmp	 eax, ebx
  0035a	0f 8d f2 00 00
	00		 jge	 $LN74@RecalcLayo
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 748  : 				if (rcCtrl.bottom > rcFrame.bottom) 

  00360	8b 87 b8 00 00
	00		 mov	 eax, DWORD PTR [edi+184]
  00366	8b 5d c4	 mov	 ebx, DWORD PTR _rcFrame$1$[ebp]
  00369	8b 4c b0 fc	 mov	 ecx, DWORD PTR [eax+esi*4-4]
  0036d	8b 45 d8	 mov	 eax, DWORD PTR _pCtrlWithMaxBottom$1$[ebp]
  00370	03 ca		 add	 ecx, edx
  00372	3b 4d d4	 cmp	 ecx, DWORD PTR _nMaxBottom$1$[ebp]
  00375	89 4d f8	 mov	 DWORD PTR _rcCtrl$[ebp+12], ecx
  00378	0f 4f 45 d0	 cmovg	 eax, DWORD PTR _pCtrl$1$[ebp]
  0037c	89 45 d8	 mov	 DWORD PTR _pCtrlWithMaxBottom$1$[ebp], eax
  0037f	8b c1		 mov	 eax, ecx
  00381	0f 4e 45 d4	 cmovle	 eax, DWORD PTR _nMaxBottom$1$[ebp]
  00385	89 45 d4	 mov	 DWORD PTR _nMaxBottom$1$[ebp], eax
  00388	3b cb		 cmp	 ecx, ebx
  0038a	7e 0a		 jle	 SHORT $LN29@RecalcLayo

; 749  : 				{ 
; 750  : 					if (rcCtrl.top < rcFrame.bottom) 

  0038c	3b d3		 cmp	 edx, ebx
  0038e	8b ca		 mov	 ecx, edx
  00390	0f 4c cb	 cmovl	 ecx, ebx
  00393	89 4d f8	 mov	 DWORD PTR _rcCtrl$[ebp+12], ecx
$LN29@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 73   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  00396	8b 45 f4	 mov	 eax, DWORD PTR _rcCtrl$[ebp+8]
  00399	2b ca		 sub	 ecx, edx
  0039b	6a 00		 push	 0
  0039d	51		 push	 ecx
  0039e	8b 4d ec	 mov	 ecx, DWORD PTR _rcCtrl$[ebp]
  003a1	2b c1		 sub	 eax, ecx
  003a3	50		 push	 eax
  003a4	52		 push	 edx
  003a5	51		 push	 ecx
  003a6	8b 4d d0	 mov	 ecx, DWORD PTR _pCtrl$1$[ebp]
  003a9	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
  003ae	8b 8f bc 00 00
	00		 mov	 ecx, DWORD PTR [edi+188]
$LN11@RecalcLayo:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 730  : 		for (int j=0; j<m_dwaRelationID.GetSize(); j+=4) 

  003b4	83 c6 04	 add	 esi, 4
  003b7	8d 46 fd	 lea	 eax, DWORD PTR [esi-3]
  003ba	3b c1		 cmp	 eax, ecx
  003bc	0f 8c ff fe ff
	ff		 jl	 $LL13@RecalcLayo
  003c2	8b 45 d8	 mov	 eax, DWORD PTR _pCtrlWithMaxBottom$1$[ebp]
  003c5	8b 55 d4	 mov	 edx, DWORD PTR _nMaxBottom$1$[ebp]
$LN136@RecalcLayo:

; 751  : 					{ 
; 752  : 						rcCtrl.bottom = rcFrame.bottom;// - m_nMargin; 
; 753  : 					}
; 754  : 					else 
; 755  : 					{ 
; 756  : 						rcCtrl.bottom = rcCtrl.top ; 
; 757  : 					} 
; 758  : 				} 
; 759  : 				pCtrl->MoveWindow(&rcCtrl, FALSE); 
; 760  : 			} 
; 761  : 		}
; 762  : 
; 763  : 		if (nMaxBottom < rcFrame.bottom && pCtrlWithMaxBottom)

  003c8	3b d3		 cmp	 edx, ebx
  003ca	7d 3e		 jge	 SHORT $LN8@RecalcLayo
  003cc	85 c0		 test	 eax, eax
  003ce	74 3a		 je	 SHORT $LN8@RecalcLayo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  003d0	8d 4d ec	 lea	 ecx, DWORD PTR _rcCtrl$[ebp]
  003d3	51		 push	 ecx
  003d4	ff 70 20	 push	 DWORD PTR [eax+32]
  003d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 770  : 			m_pParent->ScreenToClient(&rcCtrl); 

  003dd	8b 8f 80 00 00
	00		 mov	 ecx, DWORD PTR [edi+128]
  003e3	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
  003e6	50		 push	 eax
  003e7	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 73   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  003ec	8b 75 f0	 mov	 esi, DWORD PTR _rcCtrl$[ebp+4]
  003ef	8b 45 f4	 mov	 eax, DWORD PTR _rcCtrl$[ebp+8]
  003f2	8b 55 ec	 mov	 edx, DWORD PTR _rcCtrl$[ebp]
  003f5	2b c2		 sub	 eax, edx
  003f7	8b 4d d8	 mov	 ecx, DWORD PTR _pCtrlWithMaxBottom$1$[ebp]
  003fa	6a 00		 push	 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 771  : 			rcCtrl.bottom = rcFrame.bottom;// - m_nMargin; 

  003fc	89 5d f8	 mov	 DWORD PTR _rcCtrl$[ebp+12], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 73   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  003ff	2b de		 sub	 ebx, esi
  00401	53		 push	 ebx
  00402	50		 push	 eax
  00403	56		 push	 esi
  00404	52		 push	 edx
  00405	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
$LN8@RecalcLayo:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 707  : 	for (i=0; i<m_belowCtrls.GetSize(); i++) 

  0040a	8b 4d cc	 mov	 ecx, DWORD PTR _i$2$[ebp]
  0040d	8b 55 c8	 mov	 edx, DWORD PTR tv1443[ebp]
  00410	41		 inc	 ecx
  00411	8b 87 a0 00 00
	00		 mov	 eax, DWORD PTR [edi+160]
  00417	83 c2 10	 add	 edx, 16			; 00000010H
  0041a	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetWindowRect@8
  00420	89 4d cc	 mov	 DWORD PTR _i$2$[ebp], ecx
  00423	89 55 c8	 mov	 DWORD PTR tv1443[ebp], edx
  00426	3b c8		 cmp	 ecx, eax
  00428	0f 8c e2 fd ff
	ff		 jl	 $LL10@RecalcLayo
$LN9@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 114  : 	{ ASSERT(::IsWindow(m_hWnd)); ::InvalidateRect(m_hWnd, NULL, bErase); }

  0042e	8b 87 80 00 00
	00		 mov	 eax, DWORD PTR [edi+128]
  00434	6a 01		 push	 1
  00436	6a 00		 push	 0
  00438	ff 70 20	 push	 DWORD PTR [eax+32]
  0043b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InvalidateRect@12
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 776  : } 

  00441	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 114  : 	{ ASSERT(::IsWindow(m_hWnd)); ::InvalidateRect(m_hWnd, NULL, bErase); }

  00444	5f		 pop	 edi
  00445	5e		 pop	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 776  : } 

  00446	33 cd		 xor	 ecx, ebp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 114  : 	{ ASSERT(::IsWindow(m_hWnd)); ::InvalidateRect(m_hWnd, NULL, bErase); }

  00448	5b		 pop	 ebx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 776  : } 

  00449	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0044e	8b e5		 mov	 esp, ebp
  00450	5d		 pop	 ebp
  00451	c3		 ret	 0
$LN74@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 290  : 	AfxThrowInvalidArgException();

  00452	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN137@RecalcLayo:
  00457	cc		 int	 3
?RecalcLayout@CySplitterWnd@@QAEXXZ ENDP		; CySplitterWnd::RecalcLayout
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?DetachAllCtrls@CySplitterWnd@@QAE_NXZ
_TEXT	SEGMENT
?DetachAllCtrls@CySplitterWnd@@QAE_NXZ PROC		; CySplitterWnd::DetachAllCtrls, COMDAT
; _this$ = ecx

; 617  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 381  : 		if (m_pData != NULL)

  00003	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  00009	85 c0		 test	 eax, eax
  0000b	74 13		 je	 SHORT $LN25@DetachAllC

; 382  : 		{
; 383  : 			for( int i = 0; i < m_nSize; i++ )
; 384  : 				(m_pData + i)->~TYPE();
; 385  : 			delete[] (BYTE*)m_pData;

  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00013	83 c4 04	 add	 esp, 4

; 386  : 			m_pData = NULL;

  00016	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0
$LN25@DetachAllC:

; 388  : 		m_nSize = m_nMaxSize = 0;

  00020	c7 86 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+144], 0
  0002a	c7 86 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+140], 0

; 381  : 		if (m_pData != NULL)

  00034	8b 86 9c 00 00
	00		 mov	 eax, DWORD PTR [esi+156]
  0003a	85 c0		 test	 eax, eax
  0003c	74 13		 je	 SHORT $LN100@DetachAllC

; 382  : 		{
; 383  : 			for( int i = 0; i < m_nSize; i++ )
; 384  : 				(m_pData + i)->~TYPE();
; 385  : 			delete[] (BYTE*)m_pData;

  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00044	83 c4 04	 add	 esp, 4

; 386  : 			m_pData = NULL;

  00047	c7 86 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+156], 0
$LN100@DetachAllC:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 114  : 	{ SetSize(0); }

  00051	6a ff		 push	 -1
  00053	6a 00		 push	 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 620  : 	m_dwaRelationID.RemoveAll(); 

  00055	8d 8e b4 00 00
	00		 lea	 ecx, DWORD PTR [esi+180]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 388  : 		m_nSize = m_nMaxSize = 0;

  0005b	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0
  00065	c7 86 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+160], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 114  : 	{ SetSize(0); }

  0006f	e8 00 00 00 00	 call	 ?SetSize@CDWordArray@@QAEXHH@Z ; CDWordArray::SetSize
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 621  :     return TRUE;

  00074	b0 01		 mov	 al, 1
  00076	5e		 pop	 esi

; 622  : }

  00077	c3		 ret	 0
?DetachAllCtrls@CySplitterWnd@@QAE_NXZ ENDP		; CySplitterWnd::DetachAllCtrls
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?AttachAsBelowCtrl@CySplitterWnd@@QAE_NPAVCWnd@@H_N@Z
_TEXT	SEGMENT
_info$ = -16						; size = 16
_pWnd$ = 8						; size = 4
_nMargin$ = 12						; size = 4
_bResize$ = 16						; size = 1
?AttachAsBelowCtrl@CySplitterWnd@@QAE_NPAVCWnd@@H_N@Z PROC ; CySplitterWnd::AttachAsBelowCtrl, COMDAT
; _this$ = ecx

; 607  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 18   : 		pWnd(_pWnd),

  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  0000d	89 4d f4	 mov	 DWORD PTR _info$[ebp+4], ecx
  00010	85 c9		 test	 ecx, ecx

; 19   : 		nMargin(0),
; 20   : 		bResize(TRUE)
; 21   : 	{
; 22   : 		if (pWnd)

  00012	74 0a		 je	 SHORT $LN4@AttachAsBe

; 23   : 			nID = pWnd->GetDlgCtrlID();

  00014	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID
  00019	89 45 f0	 mov	 DWORD PTR _info$[ebp], eax
  0001c	eb 07		 jmp	 SHORT $LN5@AttachAsBe
$LN4@AttachAsBe:

; 24   : 		else
; 25   : 			nID = NULL;

  0001e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _info$[ebp], 0
$LN5@AttachAsBe:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 609  : 	info.nMargin = nMargin;

  00025	8b 45 0c	 mov	 eax, DWORD PTR _nMargin$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  00028	8b b7 a0 00 00
	00		 mov	 esi, DWORD PTR [edi+160]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 609  : 	info.nMargin = nMargin;

  0002e	89 45 f8	 mov	 DWORD PTR _info$[ebp+8], eax

; 610  : 	info.bResize = bResize;

  00031	8a 45 10	 mov	 al, BYTE PTR _bResize$[ebp]
  00034	88 45 fc	 mov	 BYTE PTR _info$[ebp+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 538  : 	if(nIndex < 0)

  00037	85 f6		 test	 esi, esi
  00039	78 2b		 js	 SHORT $LN17@AttachAsBe

; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  0003b	6a ff		 push	 -1
  0003d	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00040	50		 push	 eax
  00041	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  00047	e8 00 00 00 00	 call	 ?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z ; CArray<ControlInfo,ControlInfo &>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  0004c	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR _info$[ebp]
  00050	c1 e6 04	 shl	 esi, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 612  :     return TRUE;

  00053	b0 01		 mov	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00055	03 b7 9c 00 00
	00		 add	 esi, DWORD PTR [edi+156]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 612  :     return TRUE;

  0005b	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  0005c	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 612  :     return TRUE;

  0005f	5e		 pop	 esi

; 613  : }

  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c2 0c 00	 ret	 12			; 0000000cH
$LN17@AttachAsBe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 539  : 		AfxThrowInvalidArgException();

  00066	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN15@AttachAsBe:
  0006b	cc		 int	 3
?AttachAsBelowCtrl@CySplitterWnd@@QAE_NPAVCWnd@@H_N@Z ENDP ; CySplitterWnd::AttachAsBelowCtrl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?AttachAsBelowCtrl@CySplitterWnd@@QAE_NHH_N@Z
_TEXT	SEGMENT
_info$1 = -16						; size = 16
_ctrlid$ = 8						; size = 4
_nMargin$ = 12						; size = 4
_bResize$ = 16						; size = 1
?AttachAsBelowCtrl@CySplitterWnd@@QAE_NHH_N@Z PROC	; CySplitterWnd::AttachAsBelowCtrl, COMDAT
; _this$ = ecx

; 600  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 213  : 	{ ASSERT(::IsWindow(m_hWnd)); return CWnd::FromHandle(::GetParent(m_hWnd)); }

  0000a	ff 77 20	 push	 DWORD PTR [edi+32]
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetParent@4
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 601  : 	return AttachAsBelowCtrl(GetParent()->GetDlgItem(ctrlid), nMargin, bResize);

  00019	ff 75 08	 push	 DWORD PTR _ctrlid$[ebp]
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 18   : 		pWnd(_pWnd),

  00023	89 45 f4	 mov	 DWORD PTR _info$1[ebp+4], eax

; 19   : 		nMargin(0),
; 20   : 		bResize(TRUE)
; 21   : 	{
; 22   : 		if (pWnd)

  00026	85 c0		 test	 eax, eax
  00028	74 0c		 je	 SHORT $LN8@AttachAsBe

; 23   : 			nID = pWnd->GetDlgCtrlID();

  0002a	8b c8		 mov	 ecx, eax
  0002c	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID
  00031	89 45 f0	 mov	 DWORD PTR _info$1[ebp], eax
  00034	eb 07		 jmp	 SHORT $LN9@AttachAsBe
$LN8@AttachAsBe:

; 24   : 		else
; 25   : 			nID = NULL;

  00036	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _info$1[ebp], 0
$LN9@AttachAsBe:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 609  : 	info.nMargin = nMargin;

  0003d	8b 45 0c	 mov	 eax, DWORD PTR _nMargin$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  00040	8b b7 a0 00 00
	00		 mov	 esi, DWORD PTR [edi+160]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 609  : 	info.nMargin = nMargin;

  00046	89 45 f8	 mov	 DWORD PTR _info$1[ebp+8], eax

; 610  : 	info.bResize = bResize;

  00049	8a 45 10	 mov	 al, BYTE PTR _bResize$[ebp]
  0004c	88 45 fc	 mov	 BYTE PTR _info$1[ebp+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 538  : 	if(nIndex < 0)

  0004f	85 f6		 test	 esi, esi
  00051	78 2b		 js	 SHORT $LN22@AttachAsBe

; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  00053	6a ff		 push	 -1
  00055	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00058	50		 push	 eax
  00059	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  0005f	e8 00 00 00 00	 call	 ?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z ; CArray<ControlInfo,ControlInfo &>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  00064	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR _info$1[ebp]
  00068	c1 e6 04	 shl	 esi, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 601  : 	return AttachAsBelowCtrl(GetParent()->GetDlgItem(ctrlid), nMargin, bResize);

  0006b	b0 01		 mov	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  0006d	03 b7 9c 00 00
	00		 add	 esi, DWORD PTR [edi+156]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 601  : 	return AttachAsBelowCtrl(GetParent()->GetDlgItem(ctrlid), nMargin, bResize);

  00073	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00074	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 601  : 	return AttachAsBelowCtrl(GetParent()->GetDlgItem(ctrlid), nMargin, bResize);

  00077	5e		 pop	 esi

; 602  : }

  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 0c 00	 ret	 12			; 0000000cH
$LN22@AttachAsBe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 539  : 		AfxThrowInvalidArgException();

  0007e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN20@AttachAsBe:
  00083	cc		 int	 3
?AttachAsBelowCtrl@CySplitterWnd@@QAE_NHH_N@Z ENDP	; CySplitterWnd::AttachAsBelowCtrl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?AttachAsBelowCtrl@CySplitterWnd@@QAE_NPAVCWnd@@_N@Z
_TEXT	SEGMENT
_info$1 = -52						; size = 16
_rcSplitter$ = -36					; size = 16
_rcCtrl$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_pWnd$ = 8						; size = 4
_bResize$ = 12						; size = 1
?AttachAsBelowCtrl@CySplitterWnd@@QAE_NPAVCWnd@@_N@Z PROC ; CySplitterWnd::AttachAsBelowCtrl, COMDAT
; _this$ = ecx

; 589  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00012	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetWindowRect@8
  00018	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 589  : {

  0001b	57		 push	 edi
  0001c	8b 7d 08	 mov	 edi, DWORD PTR _pWnd$[ebp]
  0001f	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00022	50		 push	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 589  : {

  00023	8b d9		 mov	 ebx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00025	0f 11 45 ec	 movups	 XMMWORD PTR _rcCtrl$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00029	ff 77 20	 push	 DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  0002c	0f 11 45 dc	 movups	 XMMWORD PTR _rcSplitter$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00030	ff d6		 call	 esi
  00032	8d 45 dc	 lea	 eax, DWORD PTR _rcSplitter$[ebp]
  00035	50		 push	 eax
  00036	ff 73 20	 push	 DWORD PTR [ebx+32]
  00039	ff d6		 call	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 594  : 	return AttachAsBelowCtrl(pWnd, rcCtrl.top - rcSplitter.bottom, bResize);

  0003b	8b 75 f0	 mov	 esi, DWORD PTR _rcCtrl$[ebp+4]
  0003e	2b 75 e8	 sub	 esi, DWORD PTR _rcSplitter$[ebp+12]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 18   : 		pWnd(_pWnd),

  00041	89 7d d0	 mov	 DWORD PTR _info$1[ebp+4], edi
  00044	85 ff		 test	 edi, edi

; 19   : 		nMargin(0),
; 20   : 		bResize(TRUE)
; 21   : 	{
; 22   : 		if (pWnd)

  00046	74 0c		 je	 SHORT $LN14@AttachAsBe

; 23   : 			nID = pWnd->GetDlgCtrlID();

  00048	8b cf		 mov	 ecx, edi
  0004a	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID
  0004f	89 45 cc	 mov	 DWORD PTR _info$1[ebp], eax
  00052	eb 07		 jmp	 SHORT $LN15@AttachAsBe
$LN14@AttachAsBe:

; 24   : 		else
; 25   : 			nID = NULL;

  00054	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _info$1[ebp], 0
$LN15@AttachAsBe:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 610  : 	info.bResize = bResize;

  0005b	8a 45 0c	 mov	 al, BYTE PTR _bResize$[ebp]
  0005e	89 75 d4	 mov	 DWORD PTR _info$1[ebp+8], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  00061	8b b3 a0 00 00
	00		 mov	 esi, DWORD PTR [ebx+160]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 610  : 	info.bResize = bResize;

  00067	88 45 d8	 mov	 BYTE PTR _info$1[ebp+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 538  : 	if(nIndex < 0)

  0006a	85 f6		 test	 esi, esi
  0006c	78 36		 js	 SHORT $LN28@AttachAsBe

; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  0006e	6a ff		 push	 -1
  00070	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00073	50		 push	 eax
  00074	8d 8b 98 00 00
	00		 lea	 ecx, DWORD PTR [ebx+152]
  0007a	e8 00 00 00 00	 call	 ?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z ; CArray<ControlInfo,ControlInfo &>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  0007f	0f 10 45 cc	 movups	 xmm0, XMMWORD PTR _info$1[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 595  : }

  00083	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00086	b0 01		 mov	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00088	c1 e6 04	 shl	 esi, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 595  : }

  0008b	33 cd		 xor	 ecx, ebp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  0008d	03 b3 9c 00 00
	00		 add	 esi, DWORD PTR [ebx+156]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 594  : 	return AttachAsBelowCtrl(pWnd, rcCtrl.top - rcSplitter.bottom, bResize);

  00093	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00094	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 594  : 	return AttachAsBelowCtrl(pWnd, rcCtrl.top - rcSplitter.bottom, bResize);

  00097	5e		 pop	 esi
  00098	5b		 pop	 ebx

; 595  : }

  00099	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 08 00	 ret	 8
$LN28@AttachAsBe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 539  : 		AfxThrowInvalidArgException();

  000a4	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN26@AttachAsBe:
  000a9	cc		 int	 3
?AttachAsBelowCtrl@CySplitterWnd@@QAE_NPAVCWnd@@_N@Z ENDP ; CySplitterWnd::AttachAsBelowCtrl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?AttachAsBelowCtrl@CySplitterWnd@@QAE_NH_N@Z
_TEXT	SEGMENT
_info$1 = -52						; size = 16
_rcSplitter$2 = -36					; size = 16
_rcCtrl$3 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_ctrlid$ = 8						; size = 4
_bResize$ = 12						; size = 1
?AttachAsBelowCtrl@CySplitterWnd@@QAE_NH_N@Z PROC	; CySplitterWnd::AttachAsBelowCtrl, COMDAT
; _this$ = ecx

; 583  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b 75 08	 mov	 esi, DWORD PTR _ctrlid$[ebp]
  00015	8b d9		 mov	 ebx, ecx
  00017	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 213  : 	{ ASSERT(::IsWindow(m_hWnd)); return CWnd::FromHandle(::GetParent(m_hWnd)); }

  00018	ff 73 20	 push	 DWORD PTR [ebx+32]
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetParent@4
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 584  : 	return AttachAsBelowCtrl(GetParent()->GetDlgItem(ctrlid), bResize);

  00027	56		 push	 esi
  00028	8b c8		 mov	 ecx, eax
  0002a	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0002f	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetWindowRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 584  : 	return AttachAsBelowCtrl(GetParent()->GetDlgItem(ctrlid), bResize);

  00035	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00037	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$3[ebp]
  0003a	0f 57 c0	 xorps	 xmm0, xmm0
  0003d	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  0003e	0f 11 45 ec	 movups	 XMMWORD PTR _rcCtrl$3[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00042	ff 77 20	 push	 DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00045	0f 11 45 dc	 movups	 XMMWORD PTR _rcSplitter$2[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00049	ff d6		 call	 esi
  0004b	8d 45 dc	 lea	 eax, DWORD PTR _rcSplitter$2[ebp]
  0004e	50		 push	 eax
  0004f	ff 73 20	 push	 DWORD PTR [ebx+32]
  00052	ff d6		 call	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 594  : 	return AttachAsBelowCtrl(pWnd, rcCtrl.top - rcSplitter.bottom, bResize);

  00054	8b 75 f0	 mov	 esi, DWORD PTR _rcCtrl$3[ebp+4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 23   : 			nID = pWnd->GetDlgCtrlID();

  00057	8b cf		 mov	 ecx, edi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 594  : 	return AttachAsBelowCtrl(pWnd, rcCtrl.top - rcSplitter.bottom, bResize);

  00059	2b 75 e8	 sub	 esi, DWORD PTR _rcSplitter$2[ebp+12]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 18   : 		pWnd(_pWnd),

  0005c	89 7d d0	 mov	 DWORD PTR _info$1[ebp+4], edi

; 23   : 			nID = pWnd->GetDlgCtrlID();

  0005f	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID
  00064	89 45 cc	 mov	 DWORD PTR _info$1[ebp], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 610  : 	info.bResize = bResize;

  00067	8a 45 0c	 mov	 al, BYTE PTR _bResize$[ebp]
  0006a	89 75 d4	 mov	 DWORD PTR _info$1[ebp+8], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  0006d	8b b3 a0 00 00
	00		 mov	 esi, DWORD PTR [ebx+160]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 610  : 	info.bResize = bResize;

  00073	88 45 d8	 mov	 BYTE PTR _info$1[ebp+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 538  : 	if(nIndex < 0)

  00076	85 f6		 test	 esi, esi
  00078	78 36		 js	 SHORT $LN33@AttachAsBe

; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  0007a	6a ff		 push	 -1
  0007c	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  0007f	50		 push	 eax
  00080	8d 8b 98 00 00
	00		 lea	 ecx, DWORD PTR [ebx+152]
  00086	e8 00 00 00 00	 call	 ?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z ; CArray<ControlInfo,ControlInfo &>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  0008b	0f 10 45 cc	 movups	 xmm0, XMMWORD PTR _info$1[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 585  : }

  0008f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00092	b0 01		 mov	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00094	c1 e6 04	 shl	 esi, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 585  : }

  00097	33 cd		 xor	 ecx, ebp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00099	03 b3 9c 00 00
	00		 add	 esi, DWORD PTR [ebx+156]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 584  : 	return AttachAsBelowCtrl(GetParent()->GetDlgItem(ctrlid), bResize);

  0009f	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  000a0	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 584  : 	return AttachAsBelowCtrl(GetParent()->GetDlgItem(ctrlid), bResize);

  000a3	5e		 pop	 esi
  000a4	5b		 pop	 ebx

; 585  : }

  000a5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c2 08 00	 ret	 8
$LN33@AttachAsBe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 539  : 		AfxThrowInvalidArgException();

  000b0	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN31@AttachAsBe:
  000b5	cc		 int	 3
?AttachAsBelowCtrl@CySplitterWnd@@QAE_NH_N@Z ENDP	; CySplitterWnd::AttachAsBelowCtrl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?AttachAsAboveCtrl@CySplitterWnd@@QAE_NPAVCWnd@@H_N@Z
_TEXT	SEGMENT
_info$ = -16						; size = 16
_pWnd$ = 8						; size = 4
_nMargin$ = 12						; size = 4
_bResize$ = 16						; size = 1
?AttachAsAboveCtrl@CySplitterWnd@@QAE_NPAVCWnd@@H_N@Z PROC ; CySplitterWnd::AttachAsAboveCtrl, COMDAT
; _this$ = ecx

; 572  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 18   : 		pWnd(_pWnd),

  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  0000d	89 4d f4	 mov	 DWORD PTR _info$[ebp+4], ecx
  00010	85 c9		 test	 ecx, ecx

; 19   : 		nMargin(0),
; 20   : 		bResize(TRUE)
; 21   : 	{
; 22   : 		if (pWnd)

  00012	74 0a		 je	 SHORT $LN4@AttachAsAb

; 23   : 			nID = pWnd->GetDlgCtrlID();

  00014	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID
  00019	89 45 f0	 mov	 DWORD PTR _info$[ebp], eax
  0001c	eb 07		 jmp	 SHORT $LN5@AttachAsAb
$LN4@AttachAsAb:

; 24   : 		else
; 25   : 			nID = NULL;

  0001e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _info$[ebp], 0
$LN5@AttachAsAb:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 574  : 	info.nMargin = nMargin;

  00025	8b 45 0c	 mov	 eax, DWORD PTR _nMargin$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  00028	8b b7 8c 00 00
	00		 mov	 esi, DWORD PTR [edi+140]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 574  : 	info.nMargin = nMargin;

  0002e	89 45 f8	 mov	 DWORD PTR _info$[ebp+8], eax

; 575  : 	info.bResize = bResize;

  00031	8a 45 10	 mov	 al, BYTE PTR _bResize$[ebp]
  00034	88 45 fc	 mov	 BYTE PTR _info$[ebp+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 538  : 	if(nIndex < 0)

  00037	85 f6		 test	 esi, esi
  00039	78 2b		 js	 SHORT $LN17@AttachAsAb

; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  0003b	6a ff		 push	 -1
  0003d	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00040	50		 push	 eax
  00041	8d 8f 84 00 00
	00		 lea	 ecx, DWORD PTR [edi+132]
  00047	e8 00 00 00 00	 call	 ?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z ; CArray<ControlInfo,ControlInfo &>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  0004c	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR _info$[ebp]
  00050	c1 e6 04	 shl	 esi, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 577  : 	return TRUE;

  00053	b0 01		 mov	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00055	03 b7 88 00 00
	00		 add	 esi, DWORD PTR [edi+136]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 577  : 	return TRUE;

  0005b	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  0005c	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 577  : 	return TRUE;

  0005f	5e		 pop	 esi

; 578  : }

  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c2 0c 00	 ret	 12			; 0000000cH
$LN17@AttachAsAb:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 539  : 		AfxThrowInvalidArgException();

  00066	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN15@AttachAsAb:
  0006b	cc		 int	 3
?AttachAsAboveCtrl@CySplitterWnd@@QAE_NPAVCWnd@@H_N@Z ENDP ; CySplitterWnd::AttachAsAboveCtrl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?AttachAsAboveCtrl@CySplitterWnd@@QAE_NHH_N@Z
_TEXT	SEGMENT
_info$1 = -16						; size = 16
_ctrlid$ = 8						; size = 4
_nMargin$ = 12						; size = 4
_bResize$ = 16						; size = 1
?AttachAsAboveCtrl@CySplitterWnd@@QAE_NHH_N@Z PROC	; CySplitterWnd::AttachAsAboveCtrl, COMDAT
; _this$ = ecx

; 565  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 213  : 	{ ASSERT(::IsWindow(m_hWnd)); return CWnd::FromHandle(::GetParent(m_hWnd)); }

  0000a	ff 77 20	 push	 DWORD PTR [edi+32]
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetParent@4
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 566  : 	return AttachAsAboveCtrl(GetParent()->GetDlgItem(ctrlid), nMargin, bResize);

  00019	ff 75 08	 push	 DWORD PTR _ctrlid$[ebp]
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 18   : 		pWnd(_pWnd),

  00023	89 45 f4	 mov	 DWORD PTR _info$1[ebp+4], eax

; 19   : 		nMargin(0),
; 20   : 		bResize(TRUE)
; 21   : 	{
; 22   : 		if (pWnd)

  00026	85 c0		 test	 eax, eax
  00028	74 0c		 je	 SHORT $LN8@AttachAsAb

; 23   : 			nID = pWnd->GetDlgCtrlID();

  0002a	8b c8		 mov	 ecx, eax
  0002c	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID
  00031	89 45 f0	 mov	 DWORD PTR _info$1[ebp], eax
  00034	eb 07		 jmp	 SHORT $LN9@AttachAsAb
$LN8@AttachAsAb:

; 24   : 		else
; 25   : 			nID = NULL;

  00036	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _info$1[ebp], 0
$LN9@AttachAsAb:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 574  : 	info.nMargin = nMargin;

  0003d	8b 45 0c	 mov	 eax, DWORD PTR _nMargin$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  00040	8b b7 8c 00 00
	00		 mov	 esi, DWORD PTR [edi+140]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 574  : 	info.nMargin = nMargin;

  00046	89 45 f8	 mov	 DWORD PTR _info$1[ebp+8], eax

; 575  : 	info.bResize = bResize;

  00049	8a 45 10	 mov	 al, BYTE PTR _bResize$[ebp]
  0004c	88 45 fc	 mov	 BYTE PTR _info$1[ebp+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 538  : 	if(nIndex < 0)

  0004f	85 f6		 test	 esi, esi
  00051	78 2b		 js	 SHORT $LN22@AttachAsAb

; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  00053	6a ff		 push	 -1
  00055	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00058	50		 push	 eax
  00059	8d 8f 84 00 00
	00		 lea	 ecx, DWORD PTR [edi+132]
  0005f	e8 00 00 00 00	 call	 ?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z ; CArray<ControlInfo,ControlInfo &>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  00064	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR _info$1[ebp]
  00068	c1 e6 04	 shl	 esi, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 566  : 	return AttachAsAboveCtrl(GetParent()->GetDlgItem(ctrlid), nMargin, bResize);

  0006b	b0 01		 mov	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  0006d	03 b7 88 00 00
	00		 add	 esi, DWORD PTR [edi+136]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 566  : 	return AttachAsAboveCtrl(GetParent()->GetDlgItem(ctrlid), nMargin, bResize);

  00073	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00074	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 566  : 	return AttachAsAboveCtrl(GetParent()->GetDlgItem(ctrlid), nMargin, bResize);

  00077	5e		 pop	 esi

; 567  : }

  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 0c 00	 ret	 12			; 0000000cH
$LN22@AttachAsAb:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 539  : 		AfxThrowInvalidArgException();

  0007e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN20@AttachAsAb:
  00083	cc		 int	 3
?AttachAsAboveCtrl@CySplitterWnd@@QAE_NHH_N@Z ENDP	; CySplitterWnd::AttachAsAboveCtrl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?AttachAsAboveCtrl@CySplitterWnd@@QAE_NPAVCWnd@@_N@Z
_TEXT	SEGMENT
_info$1 = -52						; size = 16
_rcCtrl$ = -36						; size = 16
_rcSplitter$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_pWnd$ = 8						; size = 4
_bResize$ = 12						; size = 1
?AttachAsAboveCtrl@CySplitterWnd@@QAE_NPAVCWnd@@_N@Z PROC ; CySplitterWnd::AttachAsAboveCtrl, COMDAT
; _this$ = ecx

; 554  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00012	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetWindowRect@8
  00018	8d 45 dc	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 554  : {

  0001b	57		 push	 edi
  0001c	8b 7d 08	 mov	 edi, DWORD PTR _pWnd$[ebp]
  0001f	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00022	50		 push	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 554  : {

  00023	8b d9		 mov	 ebx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00025	0f 11 45 dc	 movups	 XMMWORD PTR _rcCtrl$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00029	ff 77 20	 push	 DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  0002c	0f 11 45 ec	 movups	 XMMWORD PTR _rcSplitter$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00030	ff d6		 call	 esi
  00032	8d 45 ec	 lea	 eax, DWORD PTR _rcSplitter$[ebp]
  00035	50		 push	 eax
  00036	ff 73 20	 push	 DWORD PTR [ebx+32]
  00039	ff d6		 call	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 559  : 	return AttachAsAboveCtrl(pWnd, rcSplitter.top - rcCtrl.bottom, bResize);

  0003b	8b 75 f0	 mov	 esi, DWORD PTR _rcSplitter$[ebp+4]
  0003e	2b 75 e8	 sub	 esi, DWORD PTR _rcCtrl$[ebp+12]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 18   : 		pWnd(_pWnd),

  00041	89 7d d0	 mov	 DWORD PTR _info$1[ebp+4], edi
  00044	85 ff		 test	 edi, edi

; 19   : 		nMargin(0),
; 20   : 		bResize(TRUE)
; 21   : 	{
; 22   : 		if (pWnd)

  00046	74 0c		 je	 SHORT $LN14@AttachAsAb

; 23   : 			nID = pWnd->GetDlgCtrlID();

  00048	8b cf		 mov	 ecx, edi
  0004a	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID
  0004f	89 45 cc	 mov	 DWORD PTR _info$1[ebp], eax
  00052	eb 07		 jmp	 SHORT $LN15@AttachAsAb
$LN14@AttachAsAb:

; 24   : 		else
; 25   : 			nID = NULL;

  00054	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _info$1[ebp], 0
$LN15@AttachAsAb:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 575  : 	info.bResize = bResize;

  0005b	8a 45 0c	 mov	 al, BYTE PTR _bResize$[ebp]
  0005e	89 75 d4	 mov	 DWORD PTR _info$1[ebp+8], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  00061	8b b3 8c 00 00
	00		 mov	 esi, DWORD PTR [ebx+140]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 575  : 	info.bResize = bResize;

  00067	88 45 d8	 mov	 BYTE PTR _info$1[ebp+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 538  : 	if(nIndex < 0)

  0006a	85 f6		 test	 esi, esi
  0006c	78 36		 js	 SHORT $LN28@AttachAsAb

; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  0006e	6a ff		 push	 -1
  00070	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00073	50		 push	 eax
  00074	8d 8b 84 00 00
	00		 lea	 ecx, DWORD PTR [ebx+132]
  0007a	e8 00 00 00 00	 call	 ?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z ; CArray<ControlInfo,ControlInfo &>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  0007f	0f 10 45 cc	 movups	 xmm0, XMMWORD PTR _info$1[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 560  : }

  00083	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00086	b0 01		 mov	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00088	c1 e6 04	 shl	 esi, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 560  : }

  0008b	33 cd		 xor	 ecx, ebp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  0008d	03 b3 88 00 00
	00		 add	 esi, DWORD PTR [ebx+136]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 559  : 	return AttachAsAboveCtrl(pWnd, rcSplitter.top - rcCtrl.bottom, bResize);

  00093	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00094	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 559  : 	return AttachAsAboveCtrl(pWnd, rcSplitter.top - rcCtrl.bottom, bResize);

  00097	5e		 pop	 esi
  00098	5b		 pop	 ebx

; 560  : }

  00099	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 08 00	 ret	 8
$LN28@AttachAsAb:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 539  : 		AfxThrowInvalidArgException();

  000a4	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN26@AttachAsAb:
  000a9	cc		 int	 3
?AttachAsAboveCtrl@CySplitterWnd@@QAE_NPAVCWnd@@_N@Z ENDP ; CySplitterWnd::AttachAsAboveCtrl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?AttachAsAboveCtrl@CySplitterWnd@@QAE_NH_N@Z
_TEXT	SEGMENT
_info$1 = -52						; size = 16
_rcCtrl$2 = -36						; size = 16
_rcSplitter$3 = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_ctrlid$ = 8						; size = 4
_bResize$ = 12						; size = 1
?AttachAsAboveCtrl@CySplitterWnd@@QAE_NH_N@Z PROC	; CySplitterWnd::AttachAsAboveCtrl, COMDAT
; _this$ = ecx

; 548  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b 75 08	 mov	 esi, DWORD PTR _ctrlid$[ebp]
  00015	8b d9		 mov	 ebx, ecx
  00017	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 213  : 	{ ASSERT(::IsWindow(m_hWnd)); return CWnd::FromHandle(::GetParent(m_hWnd)); }

  00018	ff 73 20	 push	 DWORD PTR [ebx+32]
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetParent@4
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 549  : 	return AttachAsAboveCtrl(GetParent()->GetDlgItem(ctrlid), bResize);

  00027	56		 push	 esi
  00028	8b c8		 mov	 ecx, eax
  0002a	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0002f	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetWindowRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 549  : 	return AttachAsAboveCtrl(GetParent()->GetDlgItem(ctrlid), bResize);

  00035	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00037	8d 45 dc	 lea	 eax, DWORD PTR _rcCtrl$2[ebp]
  0003a	0f 57 c0	 xorps	 xmm0, xmm0
  0003d	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  0003e	0f 11 45 dc	 movups	 XMMWORD PTR _rcCtrl$2[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00042	ff 77 20	 push	 DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00045	0f 11 45 ec	 movups	 XMMWORD PTR _rcSplitter$3[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00049	ff d6		 call	 esi
  0004b	8d 45 ec	 lea	 eax, DWORD PTR _rcSplitter$3[ebp]
  0004e	50		 push	 eax
  0004f	ff 73 20	 push	 DWORD PTR [ebx+32]
  00052	ff d6		 call	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 559  : 	return AttachAsAboveCtrl(pWnd, rcSplitter.top - rcCtrl.bottom, bResize);

  00054	8b 75 f0	 mov	 esi, DWORD PTR _rcSplitter$3[ebp+4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 23   : 			nID = pWnd->GetDlgCtrlID();

  00057	8b cf		 mov	 ecx, edi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 559  : 	return AttachAsAboveCtrl(pWnd, rcSplitter.top - rcCtrl.bottom, bResize);

  00059	2b 75 e8	 sub	 esi, DWORD PTR _rcCtrl$2[ebp+12]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 18   : 		pWnd(_pWnd),

  0005c	89 7d d0	 mov	 DWORD PTR _info$1[ebp+4], edi

; 23   : 			nID = pWnd->GetDlgCtrlID();

  0005f	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID
  00064	89 45 cc	 mov	 DWORD PTR _info$1[ebp], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 575  : 	info.bResize = bResize;

  00067	8a 45 0c	 mov	 al, BYTE PTR _bResize$[ebp]
  0006a	89 75 d4	 mov	 DWORD PTR _info$1[ebp+8], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  0006d	8b b3 8c 00 00
	00		 mov	 esi, DWORD PTR [ebx+140]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 575  : 	info.bResize = bResize;

  00073	88 45 d8	 mov	 BYTE PTR _info$1[ebp+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 538  : 	if(nIndex < 0)

  00076	85 f6		 test	 esi, esi
  00078	78 36		 js	 SHORT $LN33@AttachAsAb

; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  0007a	6a ff		 push	 -1
  0007c	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  0007f	50		 push	 eax
  00080	8d 8b 84 00 00
	00		 lea	 ecx, DWORD PTR [ebx+132]
  00086	e8 00 00 00 00	 call	 ?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z ; CArray<ControlInfo,ControlInfo &>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  0008b	0f 10 45 cc	 movups	 xmm0, XMMWORD PTR _info$1[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 550  : }

  0008f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00092	b0 01		 mov	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00094	c1 e6 04	 shl	 esi, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 550  : }

  00097	33 cd		 xor	 ecx, ebp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00099	03 b3 88 00 00
	00		 add	 esi, DWORD PTR [ebx+136]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 549  : 	return AttachAsAboveCtrl(GetParent()->GetDlgItem(ctrlid), bResize);

  0009f	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  000a0	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 549  : 	return AttachAsAboveCtrl(GetParent()->GetDlgItem(ctrlid), bResize);

  000a3	5e		 pop	 esi
  000a4	5b		 pop	 ebx

; 550  : }

  000a5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c2 08 00	 ret	 8
$LN33@AttachAsAb:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 539  : 		AfxThrowInvalidArgException();

  000b0	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN31@AttachAsAb:
  000b5	cc		 int	 3
?AttachAsAboveCtrl@CySplitterWnd@@QAE_NH_N@Z ENDP	; CySplitterWnd::AttachAsAboveCtrl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?SetMinHeight@CySplitterWnd@@QAEXHH@Z
_TEXT	SEGMENT
_above$ = 8						; size = 4
_below$ = 12						; size = 4
?SetMinHeight@CySplitterWnd@@QAEXHH@Z PROC		; CySplitterWnd::SetMinHeight, COMDAT
; _this$ = ecx

; 540  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 541  :     m_minAbove = above;

  00003	8b 45 08	 mov	 eax, DWORD PTR _above$[ebp]
  00006	89 81 ac 00 00
	00		 mov	 DWORD PTR [ecx+172], eax

; 542  :     m_minBelow = below;

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _below$[ebp]
  0000f	89 81 b0 00 00
	00		 mov	 DWORD PTR [ecx+176], eax

; 543  : }

  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?SetMinHeight@CySplitterWnd@@QAEXHH@Z ENDP		; CySplitterWnd::SetMinHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?Unbind@CySplitterWnd@@QAEXXZ
_TEXT	SEGMENT
?Unbind@CySplitterWnd@@QAEXXZ PROC			; CySplitterWnd::Unbind, COMDAT
; _this$ = ecx

; 532  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 533  : 	if (!::IsWindow(m_hWnd))

  00003	ff 76 20	 push	 DWORD PTR [esi+32]
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  0000c	85 c0		 test	 eax, eax
  0000e	74 79		 je	 SHORT $LN1@Unbind
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 381  : 		if (m_pData != NULL)

  00010	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  00016	85 c0		 test	 eax, eax
  00018	74 13		 je	 SHORT $LN28@Unbind

; 382  : 		{
; 383  : 			for( int i = 0; i < m_nSize; i++ )
; 384  : 				(m_pData + i)->~TYPE();
; 385  : 			delete[] (BYTE*)m_pData;

  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00020	83 c4 04	 add	 esp, 4

; 386  : 			m_pData = NULL;

  00023	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0
$LN28@Unbind:

; 388  : 		m_nSize = m_nMaxSize = 0;

  0002d	c7 86 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+144], 0
  00037	c7 86 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+140], 0

; 381  : 		if (m_pData != NULL)

  00041	8b 86 9c 00 00
	00		 mov	 eax, DWORD PTR [esi+156]
  00047	85 c0		 test	 eax, eax
  00049	74 13		 je	 SHORT $LN103@Unbind

; 382  : 		{
; 383  : 			for( int i = 0; i < m_nSize; i++ )
; 384  : 				(m_pData + i)->~TYPE();
; 385  : 			delete[] (BYTE*)m_pData;

  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00051	83 c4 04	 add	 esp, 4

; 386  : 			m_pData = NULL;

  00054	c7 86 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+156], 0
$LN103@Unbind:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 114  : 	{ SetSize(0); }

  0005e	6a ff		 push	 -1
  00060	6a 00		 push	 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 620  : 	m_dwaRelationID.RemoveAll(); 

  00062	8d 8e b4 00 00
	00		 lea	 ecx, DWORD PTR [esi+180]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 388  : 		m_nSize = m_nMaxSize = 0;

  00068	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0
  00072	c7 86 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+160], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 114  : 	{ SetSize(0); }

  0007c	e8 00 00 00 00	 call	 ?SetSize@CDWordArray@@QAEXHH@Z ; CDWordArray::SetSize
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 536  :     UnsubclassWindow();

  00081	8b ce		 mov	 ecx, esi
  00083	5e		 pop	 esi
  00084	e9 00 00 00 00	 jmp	 ?UnsubclassWindow@CWnd@@QAEPAUHWND__@@XZ ; CWnd::UnsubclassWindow
$LN1@Unbind:
  00089	5e		 pop	 esi

; 537  : }

  0008a	c3		 ret	 0
?Unbind@CySplitterWnd@@QAEXXZ ENDP			; CySplitterWnd::Unbind
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?CreateInWnd@CySplitterWnd@@QAE_NPAVCWnd@@KPAUtagRECT@@@Z
_TEXT	SEGMENT
_parent$ = 8						; size = 4
_ctrlId$ = 12						; size = 4
_rc$ = 16						; size = 4
?CreateInWnd@CySplitterWnd@@QAE_NPAVCWnd@@KPAUtagRECT@@@Z PROC ; CySplitterWnd::CreateInWnd, COMDAT
; _this$ = ecx

; 521  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 522  :     m_pParent = parent;

  00003	8b 45 08	 mov	 eax, DWORD PTR _parent$[ebp]

; 523  : 
; 524  : 	if (!Create(_T("STATIC"), "Hi", WS_CHILD | WS_VISIBLE | SS_NOTIFY | WS_EX_CLIENTEDGE | SS_GRAYRECT,

  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	6a 00		 push	 0
  0000a	ff 75 0c	 push	 DWORD PTR _ctrlId$[ebp]
  0000d	89 81 80 00 00
	00		 mov	 DWORD PTR [ecx+128], eax
  00013	50		 push	 eax
  00014	ff 75 10	 push	 DWORD PTR _rc$[ebp]
  00017	68 05 03 00 50	 push	 1342178053		; 50000305H
  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_02MKAICKHL@Hi@
  00021	68 00 00 00 00	 push	 OFFSET ??_C@_06GCFCNKMP@STATIC@
  00026	ff 52 5c	 call	 DWORD PTR [edx+92]
  00029	85 c0		 test	 eax, eax
  0002b	0f 95 c0	 setne	 al

; 525  : 			*rc, parent, ctrlId))
; 526  : 		return FALSE;
; 527  : 
; 528  :     return TRUE;
; 529  : }

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?CreateInWnd@CySplitterWnd@@QAE_NPAVCWnd@@KPAUtagRECT@@@Z ENDP ; CySplitterWnd::CreateInWnd
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?BindWithControl@CySplitterWnd@@QAE_NPAVCWnd@@K@Z
_TEXT	SEGMENT
_parent$ = 8						; size = 4
_ctrlId$ = 12						; size = 4
?BindWithControl@CySplitterWnd@@QAE_NPAVCWnd@@K@Z PROC	; CySplitterWnd::BindWithControl, COMDAT
; _this$ = ecx

; 507  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 510  :     if (!SubclassWindow(m_pParent->GetDlgItem(ctrlId)->GetSafeHwnd()))

  00004	ff 75 0c	 push	 DWORD PTR _ctrlId$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	8b 4d 08	 mov	 ecx, DWORD PTR _parent$[ebp]
  0000c	89 8e 80 00 00
	00		 mov	 DWORD PTR [esi+128], ecx
  00012	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 25   : 	{ return this == NULL ? NULL : m_hWnd; }

  00017	85 c0		 test	 eax, eax
  00019	74 03		 je	 SHORT $LN7@BindWithCo
$LN6@BindWithCo:
  0001b	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
$LN7@BindWithCo:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 510  :     if (!SubclassWindow(m_pParent->GetDlgItem(ctrlId)->GetSafeHwnd()))

  0001e	50		 push	 eax
  0001f	8b ce		 mov	 ecx, esi
  00021	e8 00 00 00 00	 call	 ?SubclassWindow@CWnd@@QAEHPAUHWND__@@@Z ; CWnd::SubclassWindow
  00026	85 c0		 test	 eax, eax
  00028	75 07		 jne	 SHORT $LN2@BindWithCo

; 511  : 		return FALSE;

  0002a	32 c0		 xor	 al, al
  0002c	5e		 pop	 esi

; 518  : }

  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
$LN2@BindWithCo:

; 512  :     
; 513  :     // Make sure to get mouse message from the dialog window
; 514  :     DWORD style = GetStyle();

  00031	8b ce		 mov	 ecx, esi
  00033	e8 00 00 00 00	 call	 ?GetStyle@CWnd@@QBEKXZ	; CWnd::GetStyle

; 515  :     ::SetWindowLong(GetSafeHwnd(), GWL_STYLE, style | SS_NOTIFY);

  00038	0d 00 01 00 00	 or	 eax, 256		; 00000100H
  0003d	50		 push	 eax
  0003e	6a f0		 push	 -16			; fffffff0H
  00040	ff 76 20	 push	 DWORD PTR [esi+32]
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongA@12

; 516  : 
; 517  :     return TRUE;

  00049	b0 01		 mov	 al, 1
  0004b	5e		 pop	 esi

; 518  : }

  0004c	5d		 pop	 ebp
  0004d	c2 08 00	 ret	 8
?BindWithControl@CySplitterWnd@@QAE_NPAVCWnd@@K@Z ENDP	; CySplitterWnd::BindWithControl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ??0CySplitterWnd@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CySplitterWnd@@QAE@XZ PROC				; CySplitterWnd::CySplitterWnd, COMDAT
; _this$ = ecx

; 497  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CySplitterWnd@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd
  0002e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CySplitterWnd@@6B@
  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 348  : {

  0003b	c7 86 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+132], OFFSET ??_7?$CArray@UControlInfo@@AAU1@@@6B@

; 349  : 	m_pData = NULL;

  00045	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0

; 350  : 	m_nSize = m_nMaxSize = m_nGrowBy = 0;

  0004f	c7 86 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+148], 0
  00059	c7 86 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+144], 0
  00063	c7 86 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+140], 0

; 348  : {

  0006d	c7 86 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+152], OFFSET ??_7?$CArray@UControlInfo@@AAU1@@@6B@

; 349  : 	m_pData = NULL;

  00077	c7 86 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+156], 0

; 350  : 	m_nSize = m_nMaxSize = m_nGrowBy = 0;

  00081	c7 86 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+168], 0
  0008b	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0
  00095	c7 86 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+160], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 497  : {

  0009f	8d 8e b4 00 00
	00		 lea	 ecx, DWORD PTR [esi+180]
  000a5	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000a9	e8 00 00 00 00	 call	 ??0CDWordArray@@QAE@XZ	; CDWordArray::CDWordArray

; 498  : 	m_minAbove = 0;

  000ae	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0

; 499  : 	m_minBelow = 0;
; 500  : }

  000b8	8b c6		 mov	 eax, esi
  000ba	c7 86 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+176], 0
  000c4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ce	59		 pop	 ecx
  000cf	5e		 pop	 esi
  000d0	8b e5		 mov	 esp, ebp
  000d2	5d		 pop	 ebp
  000d3	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CySplitterWnd@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
__unwindfunclet$??0CySplitterWnd@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00011	e9 00 00 00 00	 jmp	 ??1?$CArray@UControlInfo@@AAU1@@@UAE@XZ ; CArray<ControlInfo,ControlInfo &>::~CArray<ControlInfo,ControlInfo &>
__unwindfunclet$??0CySplitterWnd@@QAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 98 00 00
	00		 add	 ecx, 152		; 00000098H
  0001f	e9 00 00 00 00	 jmp	 ??1?$CArray@UControlInfo@@AAU1@@@UAE@XZ ; CArray<ControlInfo,ControlInfo &>::~CArray<ControlInfo,ControlInfo &>
  00024	cc		 int	 3
  00025	cc		 int	 3
  00026	cc		 int	 3
  00027	cc		 int	 3
  00028	cc		 int	 3
__ehhandler$??0CySplitterWnd@@QAE@XZ:
  00029	90		 npad	 1
  0002a	90		 npad	 1
  0002b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00032	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CySplitterWnd@@QAE@XZ
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CySplitterWnd@@QAE@XZ ENDP				; CySplitterWnd::CySplitterWnd
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCxSplitterWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCxSplitterWnd@@UAEPAXI@Z PROC			; CxSplitterWnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 24   : {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 25   : }

  00006	8d 8e c8 00 00
	00		 lea	 ecx, DWORD PTR [esi+200]
  0000c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CxSplitterWnd@@6B@
  00012	e8 00 00 00 00	 call	 ??1CStatic@@UAE@XZ	; CStatic::~CStatic
  00017	8d 8e b4 00 00
	00		 lea	 ecx, DWORD PTR [esi+180]
  0001d	e8 00 00 00 00	 call	 ??1CDWordArray@@UAE@XZ	; CDWordArray::~CDWordArray
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 358  : 	if (m_pData != NULL)

  00022	8b 86 9c 00 00
	00		 mov	 eax, DWORD PTR [esi+156]
  00028	c7 86 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+152], OFFSET ??_7?$CArray@UControlInfo@@AAU1@@@6B@
  00032	85 c0		 test	 eax, eax
  00034	74 13		 je	 SHORT $LN14@scalar

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )

  00036	83 be a0 00 00
	00 00		 cmp	 DWORD PTR [esi+160], 0
  0003d	0f 4f c0	 cmovg	 eax, eax

; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00046	83 c4 04	 add	 esp, 4
$LN14@scalar:

; 358  : 	if (m_pData != NULL)

  00049	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  0004f	c7 86 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+132], OFFSET ??_7?$CArray@UControlInfo@@AAU1@@@6B@
  00059	85 c0		 test	 eax, eax
  0005b	74 13		 je	 SHORT $LN21@scalar

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )

  0005d	83 be 8c 00 00
	00 00		 cmp	 DWORD PTR [esi+140], 0
  00064	0f 4f c0	 cmovg	 eax, eax

; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0006d	83 c4 04	 add	 esp, 4
$LN21@scalar:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 25   : }

  00070	8b ce		 mov	 ecx, esi
  00072	e8 00 00 00 00	 call	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
  00077	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0007a	a8 01		 test	 al, 1
  0007c	74 22		 je	 SHORT $LN34@scalar
  0007e	a8 04		 test	 al, 4
  00080	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  00082	56		 push	 esi
  00083	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00088	83 c4 04	 add	 esp, 4
  0008b	8b c6		 mov	 eax, esi
  0008d	5e		 pop	 esi
  0008e	5d		 pop	 ebp
  0008f	c2 04 00	 ret	 4
$LN3@scalar:
  00092	68 50 01 00 00	 push	 336			; 00000150H
  00097	56		 push	 esi
  00098	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0009d	83 c4 08	 add	 esp, 8
$LN34@scalar:
  000a0	8b c6		 mov	 eax, esi
  000a2	5e		 pop	 esi
  000a3	5d		 pop	 ebp
  000a4	c2 04 00	 ret	 4
??_GCxSplitterWnd@@UAEPAXI@Z ENDP			; CxSplitterWnd::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?GetMessageMap@CxSplitterWnd@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetMessageMap@CxSplitterWnd@@MBEPBUAFX_MSGMAP@@XZ PROC	; CxSplitterWnd::GetMessageMap, COMDAT
; _this$ = ecx

; 354  : BEGIN_MESSAGE_MAP(CxSplitterWnd, CWnd)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CxSplitterWnd@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  00005	c3		 ret	 0
?GetMessageMap@CxSplitterWnd@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CxSplitterWnd::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?GetThisMessageMap@CxSplitterWnd@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CxSplitterWnd@@KGPBUAFX_MSGMAP@@XZ PROC ; CxSplitterWnd::GetThisMessageMap, COMDAT

; 355  : 	//{{AFX_MSG_MAP(CxSplitterWnd)
; 356  : 	ON_WM_SETCURSOR()
; 357  : 	ON_WM_LBUTTONDOWN()
; 358  : 	ON_WM_CREATE()
; 359  : 	ON_WM_DESTROY()
; 360  : 	//}}AFX_MSG_MAP
; 361  : END_MESSAGE_MAP()

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CxSplitterWnd@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  00005	c3		 ret	 0
?GetThisMessageMap@CxSplitterWnd@@KGPBUAFX_MSGMAP@@XZ ENDP ; CxSplitterWnd::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?OnDestroy@CxSplitterWnd@@IAEXXZ
_TEXT	SEGMENT
?OnDestroy@CxSplitterWnd@@IAEXXZ PROC			; CxSplitterWnd::OnDestroy, COMDAT
; _this$ = ecx

; 390  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 391  : 	CWnd::OnDestroy();

  00003	e8 00 00 00 00	 call	 ?OnDestroy@CWnd@@IAEXXZ	; CWnd::OnDestroy

; 392  : 	
; 393  : 	// TODO: Add your message handler code here
; 394  : 	m_MovingSplitter.DestroyWindow( );

  00008	8b 86 c8 00 00
	00		 mov	 eax, DWORD PTR [esi+200]
  0000e	8d 8e c8 00 00
	00		 lea	 ecx, DWORD PTR [esi+200]
  00014	5e		 pop	 esi
  00015	ff 60 68	 jmp	 DWORD PTR [eax+104]
?OnDestroy@CxSplitterWnd@@IAEXXZ ENDP			; CxSplitterWnd::OnDestroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?OnCreate@CxSplitterWnd@@IAEHPAUtagCREATESTRUCTA@@@Z
_TEXT	SEGMENT
$T1 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_lpCreateStruct$ = 8					; size = 4
?OnCreate@CxSplitterWnd@@IAEHPAUtagCREATESTRUCTA@@@Z PROC ; CxSplitterWnd::OnCreate, COMDAT
; _this$ = ecx

; 378  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	57		 push	 edi
  00011	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 296  : 	{ return (int)Default(); }

  00013	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 379  : 	if (CWnd::OnCreate(lpCreateStruct) == -1)

  00018	83 f8 ff	 cmp	 eax, -1
  0001b	75 13		 jne	 SHORT $LN2@OnCreate

; 380  : 		return -1;

  0001d	0b c0		 or	 eax, eax
  0001f	5f		 pop	 edi

; 385  : 	
; 386  : 	return 0;
; 387  : }

  00020	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00023	33 cd		 xor	 ecx, ebp
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
$LN2@OnCreate:

; 383  : 	m_MovingSplitter.Create(_T(""), WS_CHILD|WS_VISIBLE|SS_CENTER,CRect(0,0,0,0), m_pParent);

  00030	8b 87 c8 00 00
	00		 mov	 eax, DWORD PTR [edi+200]
  00036	8d 4d ec	 lea	 ecx, DWORD PTR $T1[ebp]
  00039	56		 push	 esi
  0003a	68 ff ff 00 00	 push	 65535			; 0000ffffH
  0003f	ff b7 80 00 00
	00		 push	 DWORD PTR [edi+128]
  00045	0f 57 c0	 xorps	 xmm0, xmm0
  00048	51		 push	 ecx
  00049	68 01 00 00 50	 push	 1342177281		; 50000001H
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00053	8d 8f c8 00 00
	00		 lea	 ecx, DWORD PTR [edi+200]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 540  : 	left = l;

  00059	0f 11 45 ec	 movups	 XMMWORD PTR $T1[ebp], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 383  : 	m_MovingSplitter.Create(_T(""), WS_CHILD|WS_VISIBLE|SS_CENTER,CRect(0,0,0,0), m_pParent);

  0005d	ff 90 6c 01 00
	00		 call	 DWORD PTR [eax+364]

; 384  : 	m_MovingSplitter.ShowWindow(SW_HIDE);

  00063	6a 00		 push	 0
  00065	8d 8f c8 00 00
	00		 lea	 ecx, DWORD PTR [edi+200]
  0006b	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 385  : 	
; 386  : 	return 0;
; 387  : }

  00070	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00073	33 c0		 xor	 eax, eax
  00075	5e		 pop	 esi
  00076	33 cd		 xor	 ecx, ebp
  00078	5f		 pop	 edi
  00079	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
?OnCreate@CxSplitterWnd@@IAEHPAUtagCREATESTRUCTA@@@Z ENDP ; CxSplitterWnd::OnCreate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?OnLButtonDown@CxSplitterWnd@@IAEXIVCPoint@@@Z
_TEXT	SEGMENT
_msg$1 = -88						; size = 28
_rectCur$ = -60						; size = 16
_xDiff$1$ = -44						; size = 4
_rectCur$1$ = -40					; size = 4
_rectMouseClip$ = -36					; size = 16
_rectSplitter$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_point$ = 12						; size = 8
?OnLButtonDown@CxSplitterWnd@@IAEXIVCPoint@@@Z PROC	; CxSplitterWnd::OnLButtonDown, COMDAT
; _this$ = ecx

; 398  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b f1		 mov	 esi, ecx

; 399  : 	// TODO: Add your message handler code here and/or call default
; 400  : 	if(m_bFix)	return;

  00013	83 be 48 01 00
	00 00		 cmp	 DWORD PTR [esi+328], 0
  0001a	0f 85 2c 02 00
	00		 jne	 $LN1@OnLButtonD

; 401  : 	
; 402  : 	// don't handle if capture already set
; 403  : 	if (::GetCapture() != NULL) return;

  00020	53		 push	 ebx
  00021	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__GetCapture@0
  00027	ff d3		 call	 ebx
  00029	85 c0		 test	 eax, eax
  0002b	0f 85 1a 02 00
	00		 jne	 $LN64@OnLButtonD

; 404  :     // don't handle if no room to drag
; 405  :     RECT rectMouseClip;
; 406  :     if (!GetMouseClipRect(&rectMouseClip, point)) return;

  00031	ff 75 10	 push	 DWORD PTR _point$[ebp+4]
  00034	8d 45 dc	 lea	 eax, DWORD PTR _rectMouseClip$[ebp]
  00037	8b ce		 mov	 ecx, esi
  00039	ff 75 0c	 push	 DWORD PTR _point$[ebp]
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ?GetMouseClipRect@CxSplitterWnd@@IAE_NPAUtagRECT@@VCPoint@@@Z ; CxSplitterWnd::GetMouseClipRect
  00042	84 c0		 test	 al, al
  00044	0f 84 01 02 00
	00		 je	 $LN64@OnLButtonD

; 407  :     ::ClipCursor(&rectMouseClip);

  0004a	57		 push	 edi
  0004b	8d 45 dc	 lea	 eax, DWORD PTR _rectMouseClip$[ebp]
  0004e	50		 push	 eax
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ClipCursor@4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 163  : 	{ ASSERT(::IsWindow(m_hWnd)); return CWnd::FromHandle(::SetCapture(m_hWnd)); }

  00055	ff 76 20	 push	 DWORD PTR [esi+32]
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCapture@4
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00064	8d 45 ec	 lea	 eax, DWORD PTR _rectSplitter$[ebp]
  00067	0f 57 c0	 xorps	 xmm0, xmm0
  0006a	50		 push	 eax
  0006b	ff 76 20	 push	 DWORD PTR [esi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  0006e	0f 11 45 ec	 movups	 XMMWORD PTR _rectSplitter$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 425  :     m_pParent->ScreenToClient(rectSplitter);

  00078	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  0007e	8d 45 ec	 lea	 eax, DWORD PTR _rectSplitter$[ebp]
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 581  : 	return bottom - top;

  00087	8b 45 f8	 mov	 eax, DWORD PTR _rectSplitter$[ebp+12]
  0008a	8b 55 f0	 mov	 edx, DWORD PTR _rectSplitter$[ebp+4]
  0008d	2b c2		 sub	 eax, edx

; 576  : 	return right - left;

  0008f	8b 4d ec	 mov	 ecx, DWORD PTR _rectSplitter$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 427  : 	m_MovingSplitter.SetWindowPos(&CWnd::wndTop,rectSplitter.left,rectSplitter.top,rectSplitter.Width(),rectSplitter.Height(),SWP_SHOWWINDOW);

  00092	6a 40		 push	 64			; 00000040H
  00094	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  00095	8b 45 f4	 mov	 eax, DWORD PTR _rectSplitter$[ebp+8]
  00098	2b c1		 sub	 eax, ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 427  : 	m_MovingSplitter.SetWindowPos(&CWnd::wndTop,rectSplitter.left,rectSplitter.top,rectSplitter.Width(),rectSplitter.Height(),SWP_SHOWWINDOW);

  0009a	50		 push	 eax
  0009b	52		 push	 edx
  0009c	51		 push	 ecx
  0009d	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?wndTop@CWnd@@2V1@B
  000a3	8d 8e c8 00 00
	00		 lea	 ecx, DWORD PTR [esi+200]
  000a9	e8 00 00 00 00	 call	 ?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z ; CWnd::SetWindowPos

; 428  :     rectOld = rectCur = rectSplitter;

  000ae	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR _rectSplitter$[ebp]

; 429  :     xDiff = yDiff = 0;
; 430  : 
; 431  : 	// get messages until capture lost or cancelled/accepted
; 432  : 	for (;;) {
; 433  : 		MSG msg;
; 434  : 		VERIFY(::GetMessage(&msg, NULL, 0, 0));

  000b2	6a 00		 push	 0
  000b4	6a 00		 push	 0
  000b6	6a 00		 push	 0
  000b8	8d 45 a8	 lea	 eax, DWORD PTR _msg$1[ebp]
  000bb	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _xDiff$1$[ebp], 0
  000c2	50		 push	 eax
  000c3	0f 11 45 c4	 movups	 XMMWORD PTR _rectCur$[ebp], xmm0
  000c7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMessageA@16
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 161  : 	{ return CWnd::FromHandle(::GetCapture()); }

  000cd	ff d3		 call	 ebx
  000cf	50		 push	 eax
  000d0	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 436  : 		if (CWnd::GetCapture() != this)

  000d5	8b 7d cc	 mov	 edi, DWORD PTR _rectCur$[ebp+8]
  000d8	3b c6		 cmp	 eax, esi
  000da	8b 45 c4	 mov	 eax, DWORD PTR _rectCur$[ebp]
  000dd	8b 5d c8	 mov	 ebx, DWORD PTR _rectCur$[ebp+4]
  000e0	89 45 d8	 mov	 DWORD PTR _rectCur$1$[ebp], eax
  000e3	0f 85 de 00 00
	00		 jne	 $ExitLoop$67
  000e9	0f 1f 80 00 00
	00 00		 npad	 7
$LL2@OnLButtonD:

; 437  : 			break;
; 438  : 
; 439  : 		switch (msg.message) {

  000f0	8b 45 ac	 mov	 eax, DWORD PTR _msg$1[ebp+4]
  000f3	3d 02 02 00 00	 cmp	 eax, 514		; 00000202H
  000f8	0f 87 94 00 00
	00		 ja	 $LN20@OnLButtonD
  000fe	0f 84 c3 00 00
	00		 je	 $ExitLoop$67
  00104	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  00109	74 7f		 je	 SHORT $LN12@OnLButtonD
  0010b	3d 00 02 00 00	 cmp	 eax, 512		; 00000200H
  00110	0f 85 83 00 00
	00		 jne	 $LN17@OnLButtonD

; 449  :             rectCur = rectSplitter;

  00116	0f 10 4d ec	 movups	 xmm1, XMMWORD PTR _rectSplitter$[ebp]
  0011a	0f bf 4d b4	 movsx	 ecx, WORD PTR _msg$1[ebp+12]
  0011e	2b 4d 0c	 sub	 ecx, DWORD PTR _point$[ebp]

; 450  :             rectCur.left += xDiff;

  00121	66 0f 7e ca	 movd	 edx, xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 581  : 	return bottom - top;

  00125	0f 28 c1	 movaps	 xmm0, xmm1
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 449  :             rectCur = rectSplitter;

  00128	0f 11 4d c4	 movups	 XMMWORD PTR _rectCur$[ebp], xmm1

; 451  :             rectCur.right += xDiff;

  0012c	8b 7d cc	 mov	 edi, DWORD PTR _rectCur$[ebp+8]

; 452  : 			m_MovingSplitter.SetWindowPos(&CWnd::wndTop,rectCur.left,rectCur.top,rectSplitter.Width(),rectSplitter.Height(),SWP_SHOWWINDOW);

  0012f	8b 5d c8	 mov	 ebx, DWORD PTR _rectCur$[ebp+4]
  00132	03 f9		 add	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 581  : 	return bottom - top;

  00134	66 0f 73 d8 0c	 psrldq	 xmm0, 12		; 0000000cH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 446  :             xDiff = curX - point.x;

  00139	89 4d d4	 mov	 DWORD PTR _xDiff$1$[ebp], ecx

; 450  :             rectCur.left += xDiff;

  0013c	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 581  : 	return bottom - top;

  0013f	66 0f 7e c1	 movd	 ecx, xmm0
  00143	0f 28 c1	 movaps	 xmm0, xmm1
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 450  :             rectCur.left += xDiff;

  00146	89 45 d8	 mov	 DWORD PTR _rectCur$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 581  : 	return bottom - top;

  00149	66 0f 73 d8 04	 psrldq	 xmm0, 4
  0014e	66 0f 7e c0	 movd	 eax, xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 452  : 			m_MovingSplitter.SetWindowPos(&CWnd::wndTop,rectCur.left,rectCur.top,rectSplitter.Width(),rectSplitter.Height(),SWP_SHOWWINDOW);

  00152	6a 40		 push	 64			; 00000040H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  00154	66 0f 73 d9 08	 psrldq	 xmm1, 8

; 581  : 	return bottom - top;

  00159	2b c8		 sub	 ecx, eax

; 576  : 	return right - left;

  0015b	66 0f 7e c8	 movd	 eax, xmm1
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 452  : 			m_MovingSplitter.SetWindowPos(&CWnd::wndTop,rectCur.left,rectCur.top,rectSplitter.Width(),rectSplitter.Height(),SWP_SHOWWINDOW);

  0015f	51		 push	 ecx
  00160	8d 8e c8 00 00
	00		 lea	 ecx, DWORD PTR [esi+200]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  00166	2b c2		 sub	 eax, edx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 452  : 			m_MovingSplitter.SetWindowPos(&CWnd::wndTop,rectCur.left,rectCur.top,rectSplitter.Width(),rectSplitter.Height(),SWP_SHOWWINDOW);

  00168	50		 push	 eax
  00169	53		 push	 ebx
  0016a	ff 75 d8	 push	 DWORD PTR _rectCur$1$[ebp]
  0016d	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?wndTop@CWnd@@2V1@B
  00173	e8 00 00 00 00	 call	 ?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z ; CWnd::SetWindowPos
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 114  : 	{ ASSERT(::IsWindow(m_hWnd)); ::InvalidateRect(m_hWnd, NULL, bErase); }

  00178	6a 01		 push	 1
  0017a	6a 00		 push	 0
  0017c	ff b6 e8 00 00
	00		 push	 DWORD PTR [esi+232]
  00182	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InvalidateRect@12
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 457  :             break;

  00188	eb 19		 jmp	 SHORT $LN5@OnLButtonD
$LN12@OnLButtonD:

; 458  : 
; 459  : 		// handle cancel messages
; 460  : 		case WM_KEYDOWN:
; 461  : 			if (msg.wParam != VK_ESCAPE)

  0018a	83 7d b0 1b	 cmp	 DWORD PTR _msg$1[ebp+8], 27 ; 0000001bH
  0018e	74 37		 je	 SHORT $ExitLoop$67

; 462  : 				break;

  00190	eb 11		 jmp	 SHORT $LN5@OnLButtonD
$LN20@OnLButtonD:

; 437  : 			break;
; 438  : 
; 439  : 		switch (msg.message) {

  00192	3d 04 02 00 00	 cmp	 eax, 516		; 00000204H
  00197	74 2e		 je	 SHORT $ExitLoop$67
$LN17@OnLButtonD:

; 463  : 		case WM_LBUTTONUP:
; 464  : 		case WM_RBUTTONDOWN:
; 465  :             goto ExitLoop;
; 466  : 
; 467  : 		// just dispatch rest of the messages
; 468  : 		default:
; 469  : 			DispatchMessage(&msg);

  00199	8d 45 a8	 lea	 eax, DWORD PTR _msg$1[ebp]
  0019c	50		 push	 eax
  0019d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DispatchMessageA@4
$LN5@OnLButtonD:

; 429  :     xDiff = yDiff = 0;
; 430  : 
; 431  : 	// get messages until capture lost or cancelled/accepted
; 432  : 	for (;;) {
; 433  : 		MSG msg;
; 434  : 		VERIFY(::GetMessage(&msg, NULL, 0, 0));

  001a3	6a 00		 push	 0
  001a5	6a 00		 push	 0
  001a7	6a 00		 push	 0
  001a9	8d 45 a8	 lea	 eax, DWORD PTR _msg$1[ebp]
  001ac	50		 push	 eax
  001ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMessageA@16
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 161  : 	{ return CWnd::FromHandle(::GetCapture()); }

  001b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCapture@0
  001b9	50		 push	 eax
  001ba	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 436  : 		if (CWnd::GetCapture() != this)

  001bf	3b c6		 cmp	 eax, esi
  001c1	0f 84 29 ff ff
	ff		 je	 $LL2@OnLButtonD
$ExitLoop$67:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 581  : 	return bottom - top;

  001c7	8b 45 f8	 mov	 eax, DWORD PTR _rectSplitter$[ebp+12]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 476  : m_MovingSplitter.SetWindowPos(&CWnd::wndTop,rectCur.left,rectCur.top,rectSplitter.Width(),rectSplitter.Height(),SWP_SHOWWINDOW);

  001ca	8d 8e c8 00 00
	00		 lea	 ecx, DWORD PTR [esi+200]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 581  : 	return bottom - top;

  001d0	2b 45 f0	 sub	 eax, DWORD PTR _rectSplitter$[ebp+4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 476  : m_MovingSplitter.SetWindowPos(&CWnd::wndTop,rectCur.left,rectCur.top,rectSplitter.Width(),rectSplitter.Height(),SWP_SHOWWINDOW);

  001d3	6a 40		 push	 64			; 00000040H
  001d5	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  001d6	8b 45 f4	 mov	 eax, DWORD PTR _rectSplitter$[ebp+8]
  001d9	2b 45 ec	 sub	 eax, DWORD PTR _rectSplitter$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 476  : m_MovingSplitter.SetWindowPos(&CWnd::wndTop,rectCur.left,rectCur.top,rectSplitter.Width(),rectSplitter.Height(),SWP_SHOWWINDOW);

  001dc	50		 push	 eax
  001dd	53		 push	 ebx
  001de	ff 75 d8	 push	 DWORD PTR _rectCur$1$[ebp]
  001e1	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?wndTop@CWnd@@2V1@B
  001e7	e8 00 00 00 00	 call	 ?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z ; CWnd::SetWindowPos

; 477  : m_MovingSplitter.ShowWindow(SW_HIDE);

  001ec	6a 00		 push	 0
  001ee	8d 8e c8 00 00
	00		 lea	 ecx, DWORD PTR [esi+200]
  001f4	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 478  : //    m_pParent->ReleaseDC(pDrawDC);
; 479  :     ReleaseCapture();

  001f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseCapture@0

; 480  :     ::ClipCursor(NULL);

  001ff	6a 00		 push	 0
  00201	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ClipCursor@4

; 481  : 
; 482  :     if (xDiff == 0) return;

  00207	83 7d d4 00	 cmp	 DWORD PTR _xDiff$1$[ebp], 0
  0020b	74 3d		 je	 SHORT $LN65@OnLButtonD
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 73   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  0020d	8b 45 d0	 mov	 eax, DWORD PTR _rectCur$[ebp+12]
  00210	8b ce		 mov	 ecx, esi
  00212	6a 00		 push	 0
  00214	2b c3		 sub	 eax, ebx
  00216	50		 push	 eax
  00217	8b 45 d8	 mov	 eax, DWORD PTR _rectCur$1$[ebp]
  0021a	2b f8		 sub	 edi, eax
  0021c	57		 push	 edi
  0021d	53		 push	 ebx
  0021e	50		 push	 eax
  0021f	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 486  :     RecalcLayout();

  00224	8b ce		 mov	 ecx, esi
  00226	e8 00 00 00 00	 call	 ?RecalcLayout@CxSplitterWnd@@QAEXXZ ; CxSplitterWnd::RecalcLayout

; 487  : 
; 488  : 	m_pParent->SendMessage(WM_SPLITTER_MOVED, xDiff, GetDlgCtrlID());

  0022b	8b ce		 mov	 ecx, esi
  0022d	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 32   : 	{ ASSERT(::IsWindow(m_hWnd)); return ::SendMessage(m_hWnd, message, wParam, lParam); }

  00232	50		 push	 eax
  00233	ff 75 d4	 push	 DWORD PTR _xDiff$1$[ebp]
  00236	8b 86 80 00 00
	00		 mov	 eax, DWORD PTR [esi+128]
  0023c	68 e8 07 00 00	 push	 2024			; 000007e8H
  00241	ff 70 20	 push	 DWORD PTR [eax+32]
  00244	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
$LN65@OnLButtonD:
  0024a	5f		 pop	 edi
$LN64@OnLButtonD:
  0024b	5b		 pop	 ebx
$LN1@OnLButtonD:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 491  : }

  0024c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0024f	33 cd		 xor	 ecx, ebp
  00251	5e		 pop	 esi
  00252	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00257	8b e5		 mov	 esp, ebp
  00259	5d		 pop	 ebp
  0025a	c2 0c 00	 ret	 12			; 0000000cH
?OnLButtonDown@CxSplitterWnd@@IAEXIVCPoint@@@Z ENDP	; CxSplitterWnd::OnLButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?OnSetCursor@CxSplitterWnd@@IAEHPAVCWnd@@II@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?OnSetCursor@CxSplitterWnd@@IAEHPAVCWnd@@II@Z PROC	; CxSplitterWnd::OnSetCursor, COMDAT
; _this$ = ecx

; 368  : 	// TODO: Add your message handler code here and/or call default
; 369  : 	if(m_bFix)	return TRUE;

  00000	83 b9 48 01 00
	00 00		 cmp	 DWORD PTR [ecx+328], 0
  00007	75 19		 jne	 SHORT $LN8@OnSetCurso
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 19   : 	{ return afxCurrentWinApp; }

  00009	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 1047 : 	{ return ::LoadCursor(NULL, lpszCursorName); }

  0000e	68 84 7f 00 00	 push	 32644			; 00007f84H
  00013	6a 00		 push	 0
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 371  : 	SetCursor(AfxGetApp()->LoadStandardCursor(IDC_SIZEWE));

  0001b	50		 push	 eax
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4
$LN8@OnSetCurso:

; 372  :     return TRUE;
; 373  : 	
; 374  : 	//return CWnd::OnSetCursor(pWnd, nHitTest, message);
; 375  : }

  00022	b8 01 00 00 00	 mov	 eax, 1
  00027	c2 0c 00	 ret	 12			; 0000000cH
?OnSetCursor@CxSplitterWnd@@IAEHPAVCWnd@@II@Z ENDP	; CxSplitterWnd::OnSetCursor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ??1CxSplitterWnd@@UAE@XZ
_TEXT	SEGMENT
??1CxSplitterWnd@@UAE@XZ PROC				; CxSplitterWnd::~CxSplitterWnd, COMDAT
; _this$ = ecx

; 24   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 25   : }

  00003	8d 8e c8 00 00
	00		 lea	 ecx, DWORD PTR [esi+200]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CxSplitterWnd@@6B@
  0000f	e8 00 00 00 00	 call	 ??1CStatic@@UAE@XZ	; CStatic::~CStatic
  00014	8d 8e b4 00 00
	00		 lea	 ecx, DWORD PTR [esi+180]
  0001a	e8 00 00 00 00	 call	 ??1CDWordArray@@UAE@XZ	; CDWordArray::~CDWordArray
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 358  : 	if (m_pData != NULL)

  0001f	8b 86 9c 00 00
	00		 mov	 eax, DWORD PTR [esi+156]
  00025	c7 86 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+152], OFFSET ??_7?$CArray@UControlInfo@@AAU1@@@6B@
  0002f	85 c0		 test	 eax, eax
  00031	74 13		 je	 SHORT $LN7@CxSplitter

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )

  00033	83 be a0 00 00
	00 00		 cmp	 DWORD PTR [esi+160], 0
  0003a	0f 4f c0	 cmovg	 eax, eax

; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00043	83 c4 04	 add	 esp, 4
$LN7@CxSplitter:

; 358  : 	if (m_pData != NULL)

  00046	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  0004c	c7 86 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+132], OFFSET ??_7?$CArray@UControlInfo@@AAU1@@@6B@
  00056	85 c0		 test	 eax, eax
  00058	74 13		 je	 SHORT $LN14@CxSplitter

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )

  0005a	83 be 8c 00 00
	00 00		 cmp	 DWORD PTR [esi+140], 0
  00061	0f 4f c0	 cmovg	 eax, eax

; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0006a	83 c4 04	 add	 esp, 4
$LN14@CxSplitter:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 25   : }

  0006d	8b ce		 mov	 ecx, esi
  0006f	5e		 pop	 esi
  00070	e9 00 00 00 00	 jmp	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
??1CxSplitterWnd@@UAE@XZ ENDP				; CxSplitterWnd::~CxSplitterWnd
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?GetMouseClipRect@CxSplitterWnd@@IAE_NPAUtagRECT@@VCPoint@@@Z
_TEXT	SEGMENT
_cInfo$ = -80						; size = 16
_rectClip$GSCopy$1$ = -64				; size = 4
tv579 = -60						; size = 4
_rectTarget$$sroa$353$1$ = -56				; size = 4
_rectCtrl$ = -52					; size = 16
_rectParent$ = -36					; size = 16
_rectSplitter$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_rectClip$ = 8						; size = 4
_pointInSplitter$ = 12					; size = 8
?GetMouseClipRect@CxSplitterWnd@@IAE_NPAUtagRECT@@VCPoint@@@Z PROC ; CxSplitterWnd::GetMouseClipRect, COMDAT
; _this$ = ecx

; 302  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _rectClip$[ebp]
  00013	0f 57 c0	 xorps	 xmm0, xmm0
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	89 45 c0	 mov	 DWORD PTR _rectClip$GSCopy$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0001e	8d 45 ec	 lea	 eax, DWORD PTR _rectSplitter$[ebp]
  00021	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00022	0f 11 45 ec	 movups	 XMMWORD PTR _rectSplitter$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00026	ff 77 20	 push	 DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00029	0f 11 45 dc	 movups	 XMMWORD PTR _rectParent$[ebp], xmm0
  0002d	0f 11 45 cc	 movups	 XMMWORD PTR _rectCtrl$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8

; 86   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetClientRect(m_hWnd, lpRect); }

  00037	8d 45 dc	 lea	 eax, DWORD PTR _rectParent$[ebp]
  0003a	50		 push	 eax
  0003b	8b 87 80 00 00
	00		 mov	 eax, DWORD PTR [edi+128]
  00041	ff 70 20	 push	 DWORD PTR [eax+32]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 309  :     m_pParent->ClientToScreen(&rectParent);

  0004a	8b 8f 80 00 00
	00		 mov	 ecx, DWORD PTR [edi+128]
  00050	8d 45 dc	 lea	 eax, DWORD PTR _rectParent$[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?ClientToScreen@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ClientToScreen

; 310  : 
; 311  :     rectTarget = rectSplitter;
; 312  :     rectTarget.left = rectParent.left + m_minLeft;

  00059	8b 87 ac 00 00
	00		 mov	 eax, DWORD PTR [edi+172]

; 313  :     for ( i=0; i<m_leftCtrls.GetSize(); i++) 

  0005f	33 db		 xor	 ebx, ebx
  00061	03 45 dc	 add	 eax, DWORD PTR _rectParent$[ebp]
  00064	89 45 c8	 mov	 DWORD PTR _rectTarget$$sroa$353$1$[ebp], eax
  00067	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]
  0006d	85 c0		 test	 eax, eax
  0006f	7e 5f		 jle	 SHORT $LN3@GetMouseCl

; 302  : {

  00071	33 f6		 xor	 esi, esi
$LL4@GetMouseCl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 288  : 	if(nIndex >= 0 && nIndex < m_nSize)

  00073	85 f6		 test	 esi, esi
  00075	0f 88 27 01 00
	00		 js	 $LN37@GetMouseCl
  0007b	3b d8		 cmp	 ebx, eax
  0007d	0f 8d 1f 01 00
	00		 jge	 $LN37@GetMouseCl

; 289  : 		return m_pData[nIndex];

  00083	8b 87 88 00 00
	00		 mov	 eax, DWORD PTR [edi+136]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 315  :         cInfo = m_leftCtrls.GetAt(i);

  00089	0f 10 04 30	 movups	 xmm0, XMMWORD PTR [eax+esi]
  0008d	0f 11 45 b0	 movups	 XMMWORD PTR _cInfo$[ebp], xmm0

; 316  : 		if (cInfo.bResize) //need at least one resize control.

  00091	66 0f 73 d8 0c	 psrldq	 xmm0, 12		; 0000000cH
  00096	66 0f 7e c0	 movd	 eax, xmm0
  0009a	84 c0		 test	 al, al
  0009c	74 24		 je	 SHORT $LN2@GetMouseCl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0009e	8d 45 cc	 lea	 eax, DWORD PTR _rectCtrl$[ebp]
  000a1	50		 push	 eax
  000a2	8b 45 b4	 mov	 eax, DWORD PTR _cInfo$[ebp+4]
  000a5	ff 70 20	 push	 DWORD PTR [eax+32]
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 319  : 			if (rectTarget.left < rectCtrl.left + m_minLeft) 

  000ae	8b 45 cc	 mov	 eax, DWORD PTR _rectCtrl$[ebp]
  000b1	03 87 ac 00 00
	00		 add	 eax, DWORD PTR [edi+172]
  000b7	8b 4d c8	 mov	 ecx, DWORD PTR _rectTarget$$sroa$353$1$[ebp]
  000ba	3b c8		 cmp	 ecx, eax
  000bc	0f 4c c8	 cmovl	 ecx, eax
  000bf	89 4d c8	 mov	 DWORD PTR _rectTarget$$sroa$353$1$[ebp], ecx
$LN2@GetMouseCl:

; 313  :     for ( i=0; i<m_leftCtrls.GetSize(); i++) 

  000c2	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]
  000c8	43		 inc	 ebx
  000c9	83 c6 10	 add	 esi, 16			; 00000010H
  000cc	3b d8		 cmp	 ebx, eax
  000ce	7c a3		 jl	 SHORT $LL4@GetMouseCl
$LN3@GetMouseCl:

; 320  : 			{
; 321  : 				rectTarget.left = rectCtrl.left + m_minLeft;
; 322  : 			}
; 323  : 		}
; 324  :     }
; 325  : 
; 326  :     rectTarget.right = rectParent.right - m_minRight;

  000d0	8b 75 e4	 mov	 esi, DWORD PTR _rectParent$[ebp+8]

; 327  :     for (i=0; i<m_rightCtrls.GetSize(); i++) 

  000d3	33 db		 xor	 ebx, ebx
  000d5	2b b7 b0 00 00
	00		 sub	 esi, DWORD PTR [edi+176]
  000db	8b 87 a0 00 00
	00		 mov	 eax, DWORD PTR [edi+160]
  000e1	85 c0		 test	 eax, eax
  000e3	7e 68		 jle	 SHORT $LN6@GetMouseCl

; 320  : 			{
; 321  : 				rectTarget.left = rectCtrl.left + m_minLeft;
; 322  : 			}
; 323  : 		}
; 324  :     }
; 325  : 
; 326  :     rectTarget.right = rectParent.right - m_minRight;

  000e5	33 c9		 xor	 ecx, ecx
  000e7	89 4d c4	 mov	 DWORD PTR tv579[ebp], ecx
  000ea	66 0f 1f 44 00
	00		 npad	 6
$LL7@GetMouseCl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 288  : 	if(nIndex >= 0 && nIndex < m_nSize)

  000f0	85 c9		 test	 ecx, ecx
  000f2	0f 88 aa 00 00
	00		 js	 $LN37@GetMouseCl
  000f8	3b d8		 cmp	 ebx, eax
  000fa	0f 8d a2 00 00
	00		 jge	 $LN37@GetMouseCl

; 289  : 		return m_pData[nIndex];

  00100	8b 87 9c 00 00
	00		 mov	 eax, DWORD PTR [edi+156]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 329  :         cInfo = m_rightCtrls.GetAt(i);

  00106	0f 10 04 08	 movups	 xmm0, XMMWORD PTR [eax+ecx]
  0010a	0f 11 45 b0	 movups	 XMMWORD PTR _cInfo$[ebp], xmm0

; 330  : 		if (cInfo.bResize) //need at least one resize control.

  0010e	66 0f 73 d8 0c	 psrldq	 xmm0, 12		; 0000000cH
  00113	66 0f 7e c0	 movd	 eax, xmm0
  00117	84 c0		 test	 al, al
  00119	74 21		 je	 SHORT $LN5@GetMouseCl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0011b	8d 45 cc	 lea	 eax, DWORD PTR _rectCtrl$[ebp]
  0011e	50		 push	 eax
  0011f	8b 45 b4	 mov	 eax, DWORD PTR _cInfo$[ebp+4]
  00122	ff 70 20	 push	 DWORD PTR [eax+32]
  00125	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 333  : 			if (rectTarget.right > rectCtrl.right - m_minRight) 

  0012b	8b 45 d4	 mov	 eax, DWORD PTR _rectCtrl$[ebp+8]
  0012e	2b 87 b0 00 00
	00		 sub	 eax, DWORD PTR [edi+176]
  00134	8b 4d c4	 mov	 ecx, DWORD PTR tv579[ebp]
  00137	3b f0		 cmp	 esi, eax
  00139	0f 4f f0	 cmovg	 esi, eax
$LN5@GetMouseCl:

; 327  :     for (i=0; i<m_rightCtrls.GetSize(); i++) 

  0013c	8b 87 a0 00 00
	00		 mov	 eax, DWORD PTR [edi+160]
  00142	43		 inc	 ebx
  00143	83 c1 10	 add	 ecx, 16			; 00000010H
  00146	89 4d c4	 mov	 DWORD PTR tv579[ebp], ecx
  00149	3b d8		 cmp	 ebx, eax
  0014b	7c a3		 jl	 SHORT $LL7@GetMouseCl
$LN6@GetMouseCl:

; 334  : 			{
; 335  : 				rectTarget.right = rectCtrl.right - m_minRight;
; 336  : 			}
; 337  : 		}
; 338  :     }
; 339  : 
; 340  :     if (rectTarget.left >= rectTarget.right) 

  0014d	8b 45 c8	 mov	 eax, DWORD PTR _rectTarget$$sroa$353$1$[ebp]
  00150	3b c6		 cmp	 eax, esi
  00152	7c 15		 jl	 SHORT $LN12@GetMouseCl

; 352  : }

  00154	5f		 pop	 edi
  00155	5e		 pop	 esi
  00156	32 c0		 xor	 al, al
  00158	5b		 pop	 ebx
  00159	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0015c	33 cd		 xor	 ecx, ebp
  0015e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00163	8b e5		 mov	 esp, ebp
  00165	5d		 pop	 ebp
  00166	c2 0c 00	 ret	 12			; 0000000cH
$LN12@GetMouseCl:

; 341  : 	{
; 342  :         TRACE("No room to drag the x-splitter bar");
; 343  :         return FALSE;
; 344  :     }
; 345  : 
; 346  :     rectClip->left = rectTarget.left + pointInSplitter.x;

  00169	8b 55 c0	 mov	 edx, DWORD PTR _rectClip$GSCopy$1$[ebp]
  0016c	8b 4d 0c	 mov	 ecx, DWORD PTR _pointInSplitter$[ebp]
  0016f	03 c1		 add	 eax, ecx

; 347  :     rectClip->right = rectTarget.right - (rectSplitter.Width() - pointInSplitter.x) + 1;

  00171	2b 75 f4	 sub	 esi, DWORD PTR _rectSplitter$[ebp+8]
  00174	03 75 ec	 add	 esi, DWORD PTR _rectSplitter$[ebp]
  00177	89 02		 mov	 DWORD PTR [edx], eax
  00179	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]

; 352  : }

  0017c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0017f	03 c6		 add	 eax, esi
  00181	33 cd		 xor	 ecx, ebp
  00183	89 42 08	 mov	 DWORD PTR [edx+8], eax
  00186	8b 45 f0	 mov	 eax, DWORD PTR _rectSplitter$[ebp+4]
  00189	5f		 pop	 edi
  0018a	89 42 04	 mov	 DWORD PTR [edx+4], eax
  0018d	8b 45 f8	 mov	 eax, DWORD PTR _rectSplitter$[ebp+12]
  00190	5e		 pop	 esi
  00191	89 42 0c	 mov	 DWORD PTR [edx+12], eax
  00194	b0 01		 mov	 al, 1
  00196	5b		 pop	 ebx
  00197	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0019c	8b e5		 mov	 esp, ebp
  0019e	5d		 pop	 ebp
  0019f	c2 0c 00	 ret	 12			; 0000000cH
$LN37@GetMouseCl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 290  : 	AfxThrowInvalidArgException();

  001a2	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN51@GetMouseCl:
  001a7	cc		 int	 3
?GetMouseClipRect@CxSplitterWnd@@IAE_NPAUtagRECT@@VCPoint@@@Z ENDP ; CxSplitterWnd::GetMouseClipRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?AttachToParent@CxSplitterWnd@@QAE_NKK@Z
_TEXT	SEGMENT
_rcSplitter$ = -36					; size = 16
_rcCtrl$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_ctrlId$ = 8						; size = 4
_ctrlParentID$ = 12					; size = 4
?AttachToParent@CxSplitterWnd@@QAE_NKK@Z PROC		; CxSplitterWnd::AttachToParent, COMDAT
; _this$ = ecx

; 148  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b 75 08	 mov	 esi, DWORD PTR _ctrlId$[ebp]
  00015	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 137  : 		SetAtGrow(nIndex, newElement);

  00016	ff 75 0c	 push	 DWORD PTR _ctrlParentID$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 148  : { 

  00019	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 137  : 		SetAtGrow(nIndex, newElement);

  0001b	ff b7 bc 00 00
	00		 push	 DWORD PTR [edi+188]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 149  : 	m_dwaRelationID.Add(ctrlParentID); 

  00021	8d 9f b4 00 00
	00		 lea	 ebx, DWORD PTR [edi+180]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 137  : 		SetAtGrow(nIndex, newElement);

  00027	8b cb		 mov	 ecx, ebx
  00029	e8 00 00 00 00	 call	 ?SetAtGrow@CDWordArray@@QAEXHK@Z ; CDWordArray::SetAtGrow
  0002e	56		 push	 esi
  0002f	ff 73 08	 push	 DWORD PTR [ebx+8]
  00032	8b cb		 mov	 ecx, ebx
  00034	e8 00 00 00 00	 call	 ?SetAtGrow@CDWordArray@@QAEXHK@Z ; CDWordArray::SetAtGrow
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 154  : 	pCtrl = m_pParent->GetDlgItem(ctrlId); 

  00039	8b 8f 80 00 00
	00		 mov	 ecx, DWORD PTR [edi+128]
  0003f	0f 57 c0	 xorps	 xmm0, xmm0
  00042	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00043	0f 11 45 ec	 movups	 XMMWORD PTR _rcCtrl$[ebp], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 154  : 	pCtrl = m_pParent->GetDlgItem(ctrlId); 

  00047	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0004c	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetWindowRect@8
  00052	8d 4d ec	 lea	 ecx, DWORD PTR _rcCtrl$[ebp]
  00055	51		 push	 ecx
  00056	ff 70 20	 push	 DWORD PTR [eax+32]
  00059	ff d6		 call	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 156  : 	m_pParent->ScreenToClient(&rcCtrl); 

  0005b	8b 8f 80 00 00
	00		 mov	 ecx, DWORD PTR [edi+128]
  00061	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  0006a	8b 45 f4	 mov	 eax, DWORD PTR _rcCtrl$[ebp+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 137  : 		SetAtGrow(nIndex, newElement);

  0006d	8b cb		 mov	 ecx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  0006f	2b 45 ec	 sub	 eax, DWORD PTR _rcCtrl$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 137  : 		SetAtGrow(nIndex, newElement);

  00072	50		 push	 eax
  00073	ff 73 08	 push	 DWORD PTR [ebx+8]
  00076	e8 00 00 00 00	 call	 ?SetAtGrow@CDWordArray@@QAEXHK@Z ; CDWordArray::SetAtGrow
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0007b	8d 45 dc	 lea	 eax, DWORD PTR _rcSplitter$[ebp]
  0007e	0f 57 c0	 xorps	 xmm0, xmm0
  00081	50		 push	 eax
  00082	ff 77 20	 push	 DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00085	0f 11 45 dc	 movups	 XMMWORD PTR _rcSplitter$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00089	ff d6		 call	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 162  : 	m_pParent->ScreenToClient(&rcSplitter); 

  0008b	8b 8f 80 00 00
	00		 mov	 ecx, DWORD PTR [edi+128]
  00091	8d 45 dc	 lea	 eax, DWORD PTR _rcSplitter$[ebp]
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 164  : 	dwCtrlDistance = rcCtrl.left - rcSplitter.right; 

  0009a	8b 45 ec	 mov	 eax, DWORD PTR _rcCtrl$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 137  : 		SetAtGrow(nIndex, newElement);

  0009d	8b cb		 mov	 ecx, ebx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 164  : 	dwCtrlDistance = rcCtrl.left - rcSplitter.right; 

  0009f	2b 45 e4	 sub	 eax, DWORD PTR _rcSplitter$[ebp+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 137  : 		SetAtGrow(nIndex, newElement);

  000a2	50		 push	 eax
  000a3	ff 73 08	 push	 DWORD PTR [ebx+8]
  000a6	e8 00 00 00 00	 call	 ?SetAtGrow@CDWordArray@@QAEXHK@Z ; CDWordArray::SetAtGrow
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 168  : } 

  000ab	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ae	b0 01		 mov	 al, 1
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	33 cd		 xor	 ecx, ebp
  000b4	5b		 pop	 ebx
  000b5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ba	8b e5		 mov	 esp, ebp
  000bc	5d		 pop	 ebp
  000bd	c2 08 00	 ret	 8
?AttachToParent@CxSplitterWnd@@QAE_NKK@Z ENDP		; CxSplitterWnd::AttachToParent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?RecalcLayout@CxSplitterWnd@@QAEXXZ
_TEXT	SEGMENT
_cInfo$8$ = -92						; size = 16
_cInfo$7$ = -92						; size = 16
_rcFrame$1 = -92					; size = 16
_cInfo$ = -76						; size = 16
_i$2$ = -60						; size = 4
_rcFrame$1$ = -56					; size = 4
_pCtrl$1$ = -52						; size = 4
tv1457 = -48						; size = 4
_pCtrl$1$ = -48						; size = 4
_nMaxRight$1$ = -44					; size = 4
_i$1$ = -44						; size = 4
tv1466 = -40						; size = 4
_pCtrlWithMaxRight$1$ = -40				; size = 4
_rcSplitter$ = -36					; size = 16
_rcCtrl$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?RecalcLayout@CxSplitterWnd@@QAEXXZ PROC		; CxSplitterWnd::RecalcLayout, COMDAT
; _this$ = ecx

; 171  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00013	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetWindowRect@8
  00019	8d 45 dc	 lea	 eax, DWORD PTR _rcSplitter$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 171  : { 

  0001c	8b f1		 mov	 esi, ecx
  0001e	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00021	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00022	0f 11 45 dc	 movups	 XMMWORD PTR _rcSplitter$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00026	ff 76 20	 push	 DWORD PTR [esi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00029	0f 11 45 ec	 movups	 XMMWORD PTR _rcCtrl$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0002d	ff d7		 call	 edi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 175  : 	m_pParent->ScreenToClient(&rcSplitter); 

  0002f	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  00035	8d 45 dc	 lea	 eax, DWORD PTR _rcSplitter$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 176  : 
; 177  : 	ControlInfo cInfo;
; 178  : 	int i = 0;
; 179  : 	for ( i=0; i<m_leftCtrls.GetSize(); i++) 

  0003e	8b 86 8c 00 00
	00		 mov	 eax, DWORD PTR [esi+140]
  00044	33 c9		 xor	 ecx, ecx
  00046	89 4d d4	 mov	 DWORD PTR _i$1$[ebp], ecx
  00049	85 c0		 test	 eax, eax
  0004b	0f 8e 92 01 00
	00		 jle	 $LN129@RecalcLayo

; 171  : { 

  00051	33 d2		 xor	 edx, edx
  00053	89 55 d8	 mov	 DWORD PTR tv1466[ebp], edx
$LL4@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 288  : 	if(nIndex >= 0 && nIndex < m_nSize)

  00056	85 d2		 test	 edx, edx
  00058	0f 88 e5 03 00
	00		 js	 $LN74@RecalcLayo
  0005e	3b c8		 cmp	 ecx, eax
  00060	0f 8d dd 03 00
	00		 jge	 $LN74@RecalcLayo

; 289  : 		return m_pData[nIndex];

  00066	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 181  : 		cInfo = m_leftCtrls.GetAt(i); 

  0006c	0f 10 04 10	 movups	 xmm0, XMMWORD PTR [eax+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00070	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
  00073	50		 push	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 181  : 		cInfo = m_leftCtrls.GetAt(i); 

  00074	0f 11 45 a4	 movups	 XMMWORD PTR _cInfo$7$[ebp], xmm0
  00078	0f 11 45 b4	 movups	 XMMWORD PTR _cInfo$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0007c	66 0f 73 d8 04	 psrldq	 xmm0, 4
  00081	66 0f 7e c3	 movd	 ebx, xmm0
  00085	ff 73 20	 push	 DWORD PTR [ebx+32]
  00088	ff d7		 call	 edi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 183  : 		m_pParent->ScreenToClient(&rcCtrl); 

  0008a	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  00090	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 184  : 		if (cInfo.bResize)

  00099	0f 10 45 a4	 movups	 xmm0, XMMWORD PTR _cInfo$7$[ebp]
  0009d	8b 4d dc	 mov	 ecx, DWORD PTR _rcSplitter$[ebp]
  000a0	2b 4d bc	 sub	 ecx, DWORD PTR _cInfo$[ebp+8]
  000a3	66 0f 73 d8 0c	 psrldq	 xmm0, 12		; 0000000cH
  000a8	66 0f 7e c0	 movd	 eax, xmm0
  000ac	84 c0		 test	 al, al
  000ae	74 05		 je	 SHORT $LN14@RecalcLayo

; 185  : 		{
; 186  : 			rcCtrl.right = rcSplitter.left - cInfo.nMargin;
; 187  : 		}

  000b0	8b 7d ec	 mov	 edi, DWORD PTR _rcCtrl$[ebp]
  000b3	eb 0d		 jmp	 SHORT $LN138@RecalcLayo
$LN14@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  000b5	8b 45 f4	 mov	 eax, DWORD PTR _rcCtrl$[ebp+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 191  : 			rcCtrl.right = rcSplitter.left - cInfo.nMargin;

  000b8	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  000ba	2b 45 ec	 sub	 eax, DWORD PTR _rcCtrl$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 191  : 			rcCtrl.right = rcSplitter.left - cInfo.nMargin;

  000bd	2b f8		 sub	 edi, eax

; 192  : 			rcCtrl.left = rcCtrl.right - nWidth;

  000bf	89 7d ec	 mov	 DWORD PTR _rcCtrl$[ebp], edi
$LN138@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 73   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  000c2	8b 45 f8	 mov	 eax, DWORD PTR _rcCtrl$[ebp+12]
  000c5	8b 55 f0	 mov	 edx, DWORD PTR _rcCtrl$[ebp+4]
  000c8	2b c2		 sub	 eax, edx
  000ca	6a 00		 push	 0
  000cc	89 4d f4	 mov	 DWORD PTR _rcCtrl$[ebp+8], ecx
  000cf	2b cf		 sub	 ecx, edi
  000d1	50		 push	 eax
  000d2	51		 push	 ecx
  000d3	52		 push	 edx
  000d4	57		 push	 edi
  000d5	8b cb		 mov	 ecx, ebx
  000d7	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 196  : 		for (int j=0; j<m_dwaRelationID.GetSize(); j+=4) 

  000dc	8b 8e bc 00 00
	00		 mov	 ecx, DWORD PTR [esi+188]
  000e2	85 c9		 test	 ecx, ecx
  000e4	0f 8e d5 00 00
	00		 jle	 $LN2@RecalcLayo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 73   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  000ea	bf 02 00 00 00	 mov	 edi, 2
  000ef	90		 npad	 1
$LL7@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 117  : 		if( nIndex < 0 || nIndex >= m_nSize )

  000f0	8d 47 fe	 lea	 eax, DWORD PTR [edi-2]
  000f3	85 c0		 test	 eax, eax
  000f5	0f 88 48 03 00
	00		 js	 $LN74@RecalcLayo
  000fb	3b c1		 cmp	 eax, ecx
  000fd	0f 8d 40 03 00
	00		 jge	 $LN74@RecalcLayo

; 118  : 			AfxThrowInvalidArgException();
; 119  : 		return m_pData[nIndex]; }

  00103	8b 96 b8 00 00
	00		 mov	 edx, DWORD PTR [esi+184]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 199  : 			if (nParentId == cInfo.nID) 

  00109	8b 45 b4	 mov	 eax, DWORD PTR _cInfo$[ebp]
  0010c	39 44 ba f8	 cmp	 DWORD PTR [edx+edi*4-8], eax
  00110	0f 85 9b 00 00
	00		 jne	 $LN5@RecalcLayo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 117  : 		if( nIndex < 0 || nIndex >= m_nSize )

  00116	8d 47 ff	 lea	 eax, DWORD PTR [edi-1]
  00119	85 c0		 test	 eax, eax
  0011b	0f 88 22 03 00
	00		 js	 $LN74@RecalcLayo
  00121	3b c1		 cmp	 eax, ecx
  00123	0f 8d 1a 03 00
	00		 jge	 $LN74@RecalcLayo
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 202  : 				CWnd *pCtrl = m_pParent->GetDlgItem(nChildId); 

  00129	ff 74 ba fc	 push	 DWORD PTR [edx+edi*4-4]
  0012d	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  00133	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00138	8d 4d ec	 lea	 ecx, DWORD PTR _rcCtrl$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 202  : 				CWnd *pCtrl = m_pParent->GetDlgItem(nChildId); 

  0013b	89 45 d0	 mov	 DWORD PTR _pCtrl$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0013e	51		 push	 ecx
  0013f	ff 70 20	 push	 DWORD PTR [eax+32]
  00142	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 204  : 				m_pParent->ScreenToClient(&rcCtrl); 

  00148	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  0014e	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
  00151	50		 push	 eax
  00152	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 205  : 				if (rcSplitter.left > rcCtrl.right)

  00157	8b 4d dc	 mov	 ecx, DWORD PTR _rcSplitter$[ebp]
  0015a	8b 55 f4	 mov	 edx, DWORD PTR _rcCtrl$[ebp+8]
  0015d	8b 5d ec	 mov	 ebx, DWORD PTR _rcCtrl$[ebp]
  00160	3b ca		 cmp	 ecx, edx
  00162	7e 23		 jle	 SHORT $LN17@RecalcLayo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 117  : 		if( nIndex < 0 || nIndex >= m_nSize )

  00164	85 ff		 test	 edi, edi
  00166	0f 88 d7 02 00
	00		 js	 $LN74@RecalcLayo
  0016c	3b be bc 00 00
	00		 cmp	 edi, DWORD PTR [esi+188]
  00172	0f 8d cb 02 00
	00		 jge	 $LN74@RecalcLayo
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 207  : 					if (rcSplitter.left < (LONG)(rcCtrl.left + m_dwaRelationID.GetAt(j+2))) 

  00178	8b 86 b8 00 00
	00		 mov	 eax, DWORD PTR [esi+184]
  0017e	8b 14 b8	 mov	 edx, DWORD PTR [eax+edi*4]
  00181	03 d3		 add	 edx, ebx
  00183	3b ca		 cmp	 ecx, edx

; 208  : 					{ 
; 209  : 						rcCtrl.right = rcSplitter.left;// - m_nMargin; 
; 210  : 					}
; 211  : 					else 
; 212  : 						rcCtrl.right = rcCtrl.left + m_dwaRelationID.GetAt(j+2); 
; 213  : 				}

  00185	eb 06		 jmp	 SHORT $LN139@RecalcLayo
$LN17@RecalcLayo:

; 214  : 				else if (rcSplitter.left < rcCtrl.right) 

  00187	7d 0a		 jge	 SHORT $LN22@RecalcLayo

; 215  : 				{ 
; 216  : 					if (rcCtrl.left < rcSplitter.left) 

  00189	8b d3		 mov	 edx, ebx
  0018b	3b d9		 cmp	 ebx, ecx
$LN139@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 73   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  0018d	0f 4c d1	 cmovl	 edx, ecx
  00190	89 55 f4	 mov	 DWORD PTR _rcCtrl$[ebp+8], edx
$LN22@RecalcLayo:
  00193	8b 4d f0	 mov	 ecx, DWORD PTR _rcCtrl$[ebp+4]
  00196	2b d3		 sub	 edx, ebx
  00198	8b 45 f8	 mov	 eax, DWORD PTR _rcCtrl$[ebp+12]
  0019b	6a 00		 push	 0
  0019d	2b c1		 sub	 eax, ecx
  0019f	50		 push	 eax
  001a0	52		 push	 edx
  001a1	51		 push	 ecx
  001a2	8b 4d d0	 mov	 ecx, DWORD PTR _pCtrl$1$[ebp]
  001a5	53		 push	 ebx
  001a6	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
  001ab	8b 8e bc 00 00
	00		 mov	 ecx, DWORD PTR [esi+188]
$LN5@RecalcLayo:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 196  : 		for (int j=0; j<m_dwaRelationID.GetSize(); j+=4) 

  001b1	83 c7 04	 add	 edi, 4
  001b4	8d 47 fe	 lea	 eax, DWORD PTR [edi-2]
  001b7	3b c1		 cmp	 eax, ecx
  001b9	0f 8c 31 ff ff
	ff		 jl	 $LL7@RecalcLayo
$LN2@RecalcLayo:

; 176  : 
; 177  : 	ControlInfo cInfo;
; 178  : 	int i = 0;
; 179  : 	for ( i=0; i<m_leftCtrls.GetSize(); i++) 

  001bf	8b 4d d4	 mov	 ecx, DWORD PTR _i$1$[ebp]
  001c2	8b 55 d8	 mov	 edx, DWORD PTR tv1466[ebp]
  001c5	41		 inc	 ecx
  001c6	8b 86 8c 00 00
	00		 mov	 eax, DWORD PTR [esi+140]
  001cc	83 c2 10	 add	 edx, 16			; 00000010H
  001cf	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetWindowRect@8
  001d5	89 4d d4	 mov	 DWORD PTR _i$1$[ebp], ecx
  001d8	89 55 d8	 mov	 DWORD PTR tv1466[ebp], edx
  001db	3b c8		 cmp	 ecx, eax
  001dd	0f 8c 73 fe ff
	ff		 jl	 $LL4@RecalcLayo
$LN129@RecalcLayo:

; 230  : 	for (i=0; i<m_rightCtrls.GetSize(); i++) 

  001e3	8b 86 a0 00 00
	00		 mov	 eax, DWORD PTR [esi+160]
  001e9	33 c9		 xor	 ecx, ecx
  001eb	89 4d c4	 mov	 DWORD PTR _i$2$[ebp], ecx
  001ee	85 c0		 test	 eax, eax
  001f0	0f 8e 29 02 00
	00		 jle	 $LN9@RecalcLayo
  001f6	33 d2		 xor	 edx, edx
  001f8	89 55 d0	 mov	 DWORD PTR tv1457[ebp], edx
  001fb	0f 1f 44 00 00	 npad	 5
$LL10@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 288  : 	if(nIndex >= 0 && nIndex < m_nSize)

  00200	85 d2		 test	 edx, edx
  00202	0f 88 3b 02 00
	00		 js	 $LN74@RecalcLayo
  00208	3b c8		 cmp	 ecx, eax
  0020a	0f 8d 33 02 00
	00		 jge	 $LN74@RecalcLayo

; 289  : 		return m_pData[nIndex];

  00210	8b 86 9c 00 00
	00		 mov	 eax, DWORD PTR [esi+156]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 232  : 		cInfo = m_rightCtrls.GetAt(i); 

  00216	0f 10 04 10	 movups	 xmm0, XMMWORD PTR [eax+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0021a	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
  0021d	50		 push	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 232  : 		cInfo = m_rightCtrls.GetAt(i); 

  0021e	0f 11 45 a4	 movups	 XMMWORD PTR _cInfo$8$[ebp], xmm0
  00222	0f 11 45 b4	 movups	 XMMWORD PTR _cInfo$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00226	66 0f 73 d8 04	 psrldq	 xmm0, 4
  0022b	66 0f 7e c3	 movd	 ebx, xmm0
  0022f	ff 73 20	 push	 DWORD PTR [ebx+32]
  00232	ff d7		 call	 edi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 234  : 		m_pParent->ScreenToClient(&rcCtrl); 

  00234	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  0023a	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
  0023d	50		 push	 eax
  0023e	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 235  : 		if (cInfo.bResize)

  00243	0f 10 45 a4	 movups	 xmm0, XMMWORD PTR _cInfo$8$[ebp]
  00247	8b 4d bc	 mov	 ecx, DWORD PTR _cInfo$[ebp+8]
  0024a	03 4d e4	 add	 ecx, DWORD PTR _rcSplitter$[ebp+8]
  0024d	8b 7d f4	 mov	 edi, DWORD PTR _rcCtrl$[ebp+8]
  00250	66 0f 73 d8 0c	 psrldq	 xmm0, 12		; 0000000cH
  00255	66 0f 7e c0	 movd	 eax, xmm0
  00259	84 c0		 test	 al, al
  0025b	75 08		 jne	 SHORT $LN140@RecalcLayo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  0025d	2b 7d ec	 sub	 edi, DWORD PTR _rcCtrl$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 242  : 			rcCtrl.left = rcSplitter.right + cInfo.nMargin;

  00260	03 f9		 add	 edi, ecx

; 243  : 			rcCtrl.right = rcCtrl.left + nWidth;

  00262	89 7d f4	 mov	 DWORD PTR _rcCtrl$[ebp+8], edi
$LN140@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 73   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  00265	8b 45 f8	 mov	 eax, DWORD PTR _rcCtrl$[ebp+12]
  00268	2b f9		 sub	 edi, ecx
  0026a	8b 55 f0	 mov	 edx, DWORD PTR _rcCtrl$[ebp+4]
  0026d	2b c2		 sub	 eax, edx
  0026f	6a 00		 push	 0
  00271	50		 push	 eax
  00272	57		 push	 edi
  00273	52		 push	 edx
  00274	89 4d ec	 mov	 DWORD PTR _rcCtrl$[ebp], ecx
  00277	51		 push	 ecx
  00278	8b cb		 mov	 ecx, ebx
  0027a	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 247  : 		RECT rcFrame = rcCtrl; 

  0027f	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR _rcCtrl$[ebp]

; 253  : 		for (int j=0; j<m_dwaRelationID.GetSize(); j+=4) 

  00283	8b 8e bc 00 00
	00		 mov	 ecx, DWORD PTR [esi+188]
  00289	33 db		 xor	 ebx, ebx
  0028b	83 c8 ff	 or	 eax, -1
  0028e	89 5d d8	 mov	 DWORD PTR _pCtrlWithMaxRight$1$[ebp], ebx
  00291	89 45 d4	 mov	 DWORD PTR _nMaxRight$1$[ebp], eax
  00294	0f 11 45 a4	 movups	 XMMWORD PTR _rcFrame$1[ebp], xmm0
  00298	8b 7d ac	 mov	 edi, DWORD PTR _rcFrame$1[ebp+8]
  0029b	89 7d c8	 mov	 DWORD PTR _rcFrame$1$[ebp], edi
  0029e	85 c9		 test	 ecx, ecx
  002a0	0f 8e 14 01 00
	00		 jle	 $LN136@RecalcLayo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 73   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  002a6	bf 03 00 00 00	 mov	 edi, 3
  002ab	0f 1f 44 00 00	 npad	 5
$LL13@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 117  : 		if( nIndex < 0 || nIndex >= m_nSize )

  002b0	8d 47 fd	 lea	 eax, DWORD PTR [edi-3]
  002b3	85 c0		 test	 eax, eax
  002b5	0f 88 88 01 00
	00		 js	 $LN74@RecalcLayo
  002bb	3b c1		 cmp	 eax, ecx
  002bd	0f 8d 80 01 00
	00		 jge	 $LN74@RecalcLayo

; 118  : 			AfxThrowInvalidArgException();
; 119  : 		return m_pData[nIndex]; }

  002c3	8b 96 b8 00 00
	00		 mov	 edx, DWORD PTR [esi+184]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 256  : 			if (nParentId == cInfo.nID) 

  002c9	8b 45 b4	 mov	 eax, DWORD PTR _cInfo$[ebp]
  002cc	39 44 ba f4	 cmp	 DWORD PTR [edx+edi*4-12], eax
  002d0	0f 85 cd 00 00
	00		 jne	 $LN11@RecalcLayo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 117  : 		if( nIndex < 0 || nIndex >= m_nSize )

  002d6	8d 47 fe	 lea	 eax, DWORD PTR [edi-2]
  002d9	85 c0		 test	 eax, eax
  002db	0f 88 62 01 00
	00		 js	 $LN74@RecalcLayo
  002e1	3b c1		 cmp	 eax, ecx
  002e3	0f 8d 5a 01 00
	00		 jge	 $LN74@RecalcLayo
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 259  : 				CWnd *pCtrl = m_pParent->GetDlgItem(nChildId); 

  002e9	ff 74 ba f8	 push	 DWORD PTR [edx+edi*4-8]
  002ed	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  002f3	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  002f8	8d 4d ec	 lea	 ecx, DWORD PTR _rcCtrl$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 259  : 				CWnd *pCtrl = m_pParent->GetDlgItem(nChildId); 

  002fb	89 45 cc	 mov	 DWORD PTR _pCtrl$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  002fe	51		 push	 ecx
  002ff	ff 70 20	 push	 DWORD PTR [eax+32]
  00302	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 261  : 				m_pParent->ScreenToClient(&rcCtrl); 

  00308	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  0030e	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
  00311	50		 push	 eax
  00312	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 117  : 		if( nIndex < 0 || nIndex >= m_nSize )

  00317	85 ff		 test	 edi, edi
  00319	0f 88 24 01 00
	00		 js	 $LN74@RecalcLayo
  0031f	8b 96 bc 00 00
	00		 mov	 edx, DWORD PTR [esi+188]
  00325	3b fa		 cmp	 edi, edx
  00327	0f 8d 16 01 00
	00		 jge	 $LN74@RecalcLayo

; 118  : 			AfxThrowInvalidArgException();
; 119  : 		return m_pData[nIndex]; }

  0032d	8b 86 b8 00 00
	00		 mov	 eax, DWORD PTR [esi+184]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 262  : 				rcCtrl.left = rcSplitter.right + m_dwaRelationID.GetAt(j+3); 

  00333	8b 1c b8	 mov	 ebx, DWORD PTR [eax+edi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 117  : 		if( nIndex < 0 || nIndex >= m_nSize )

  00336	8d 47 ff	 lea	 eax, DWORD PTR [edi-1]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 262  : 				rcCtrl.left = rcSplitter.right + m_dwaRelationID.GetAt(j+3); 

  00339	03 5d e4	 add	 ebx, DWORD PTR _rcSplitter$[ebp+8]
  0033c	89 5d ec	 mov	 DWORD PTR _rcCtrl$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 117  : 		if( nIndex < 0 || nIndex >= m_nSize )

  0033f	85 c0		 test	 eax, eax
  00341	0f 88 fc 00 00
	00		 js	 $LN74@RecalcLayo
  00347	3b c2		 cmp	 eax, edx
  00349	0f 8d f4 00 00
	00		 jge	 $LN74@RecalcLayo
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 263  : 				rcCtrl.right = rcCtrl.left + m_dwaRelationID.GetAt(j+2); 

  0034f	8b 86 b8 00 00
	00		 mov	 eax, DWORD PTR [esi+184]
  00355	8b 54 b8 fc	 mov	 edx, DWORD PTR [eax+edi*4-4]

; 264  : 
; 265  : 				if (rcCtrl.right >= nMaxRight)

  00359	8b 45 d8	 mov	 eax, DWORD PTR _pCtrlWithMaxRight$1$[ebp]
  0035c	03 d3		 add	 edx, ebx
  0035e	3b 55 d4	 cmp	 edx, DWORD PTR _nMaxRight$1$[ebp]
  00361	89 55 f4	 mov	 DWORD PTR _rcCtrl$[ebp+8], edx
  00364	0f 4d 45 cc	 cmovge	 eax, DWORD PTR _pCtrl$1$[ebp]
  00368	89 45 d8	 mov	 DWORD PTR _pCtrlWithMaxRight$1$[ebp], eax

; 266  : 				{
; 267  : 					nMaxRight = rcCtrl.right;
; 268  : 					pCtrlWithMaxRight = pCtrl;
; 269  : 				}
; 270  : 
; 271  : 				if (rcCtrl.right > rcFrame.right) 

  0036b	8b c2		 mov	 eax, edx
  0036d	0f 4c 45 d4	 cmovl	 eax, DWORD PTR _nMaxRight$1$[ebp]
  00371	89 45 d4	 mov	 DWORD PTR _nMaxRight$1$[ebp], eax
  00374	8b 45 c8	 mov	 eax, DWORD PTR _rcFrame$1$[ebp]
  00377	3b d0		 cmp	 edx, eax
  00379	7e 0a		 jle	 SHORT $LN29@RecalcLayo

; 272  : 				{ 
; 273  : 					if (rcCtrl.left < rcFrame.right) 

  0037b	3b d8		 cmp	 ebx, eax
  0037d	8b d3		 mov	 edx, ebx
  0037f	0f 4c d0	 cmovl	 edx, eax
  00382	89 55 f4	 mov	 DWORD PTR _rcCtrl$[ebp+8], edx
$LN29@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 73   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  00385	8b 4d f0	 mov	 ecx, DWORD PTR _rcCtrl$[ebp+4]
  00388	2b d3		 sub	 edx, ebx
  0038a	8b 45 f8	 mov	 eax, DWORD PTR _rcCtrl$[ebp+12]
  0038d	6a 00		 push	 0
  0038f	2b c1		 sub	 eax, ecx
  00391	50		 push	 eax
  00392	52		 push	 edx
  00393	51		 push	 ecx
  00394	8b 4d cc	 mov	 ecx, DWORD PTR _pCtrl$1$[ebp]
  00397	53		 push	 ebx
  00398	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
  0039d	8b 8e bc 00 00
	00		 mov	 ecx, DWORD PTR [esi+188]
$LN11@RecalcLayo:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 253  : 		for (int j=0; j<m_dwaRelationID.GetSize(); j+=4) 

  003a3	83 c7 04	 add	 edi, 4
  003a6	8d 47 fd	 lea	 eax, DWORD PTR [edi-3]
  003a9	3b c1		 cmp	 eax, ecx
  003ab	0f 8c ff fe ff
	ff		 jl	 $LL13@RecalcLayo
  003b1	8b 7d c8	 mov	 edi, DWORD PTR _rcFrame$1$[ebp]
  003b4	8b 5d d8	 mov	 ebx, DWORD PTR _pCtrlWithMaxRight$1$[ebp]
  003b7	8b 45 d4	 mov	 eax, DWORD PTR _nMaxRight$1$[ebp]
$LN136@RecalcLayo:

; 274  : 					{ 
; 275  : 						rcCtrl.right = rcFrame.right;// - m_nMargin; 
; 276  : 					}
; 277  : 					else 
; 278  : 					{ 
; 279  : 						rcCtrl.right = rcCtrl.left ; 
; 280  : 					} 
; 281  : 				} 
; 282  : 				pCtrl->MoveWindow(&rcCtrl, FALSE); 
; 283  : 			} 
; 284  : 		} 
; 285  : 
; 286  : 		if (nMaxRight < rcFrame.right && pCtrlWithMaxRight)

  003ba	3b c7		 cmp	 eax, edi
  003bc	7d 3d		 jge	 SHORT $LN8@RecalcLayo
  003be	85 db		 test	 ebx, ebx
  003c0	74 39		 je	 SHORT $LN8@RecalcLayo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  003c2	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
  003c5	50		 push	 eax
  003c6	ff 73 20	 push	 DWORD PTR [ebx+32]
  003c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 293  : 			m_pParent->ScreenToClient(&rcCtrl); 

  003cf	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  003d5	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
  003d8	50		 push	 eax
  003d9	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 73   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  003de	8b 45 f8	 mov	 eax, DWORD PTR _rcCtrl$[ebp+12]
  003e1	8b cb		 mov	 ecx, ebx
  003e3	8b 55 f0	 mov	 edx, DWORD PTR _rcCtrl$[ebp+4]
  003e6	2b c2		 sub	 eax, edx
  003e8	6a 00		 push	 0
  003ea	50		 push	 eax
  003eb	8b 45 ec	 mov	 eax, DWORD PTR _rcCtrl$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 294  : 			rcCtrl.right = rcFrame.right;// - m_nMargin; 

  003ee	89 7d f4	 mov	 DWORD PTR _rcCtrl$[ebp+8], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 73   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  003f1	2b f8		 sub	 edi, eax
  003f3	57		 push	 edi
  003f4	52		 push	 edx
  003f5	50		 push	 eax
  003f6	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
$LN8@RecalcLayo:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 230  : 	for (i=0; i<m_rightCtrls.GetSize(); i++) 

  003fb	8b 4d c4	 mov	 ecx, DWORD PTR _i$2$[ebp]
  003fe	8b 55 d0	 mov	 edx, DWORD PTR tv1457[ebp]
  00401	41		 inc	 ecx
  00402	8b 86 a0 00 00
	00		 mov	 eax, DWORD PTR [esi+160]
  00408	83 c2 10	 add	 edx, 16			; 00000010H
  0040b	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetWindowRect@8
  00411	89 4d c4	 mov	 DWORD PTR _i$2$[ebp], ecx
  00414	89 55 d0	 mov	 DWORD PTR tv1457[ebp], edx
  00417	3b c8		 cmp	 ecx, eax
  00419	0f 8c e1 fd ff
	ff		 jl	 $LL10@RecalcLayo
$LN9@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 114  : 	{ ASSERT(::IsWindow(m_hWnd)); ::InvalidateRect(m_hWnd, NULL, bErase); }

  0041f	8b 86 80 00 00
	00		 mov	 eax, DWORD PTR [esi+128]
  00425	6a 01		 push	 1
  00427	6a 00		 push	 0
  00429	ff 70 20	 push	 DWORD PTR [eax+32]
  0042c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InvalidateRect@12
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 299  : } 

  00432	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 114  : 	{ ASSERT(::IsWindow(m_hWnd)); ::InvalidateRect(m_hWnd, NULL, bErase); }

  00435	5f		 pop	 edi
  00436	5e		 pop	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 299  : } 

  00437	33 cd		 xor	 ecx, ebp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 114  : 	{ ASSERT(::IsWindow(m_hWnd)); ::InvalidateRect(m_hWnd, NULL, bErase); }

  00439	5b		 pop	 ebx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 299  : } 

  0043a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0043f	8b e5		 mov	 esp, ebp
  00441	5d		 pop	 ebp
  00442	c3		 ret	 0
$LN74@RecalcLayo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 290  : 	AfxThrowInvalidArgException();

  00443	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN137@RecalcLayo:
  00448	cc		 int	 3
?RecalcLayout@CxSplitterWnd@@QAEXXZ ENDP		; CxSplitterWnd::RecalcLayout
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?DetachAllCtrls@CxSplitterWnd@@QAE_NXZ
_TEXT	SEGMENT
?DetachAllCtrls@CxSplitterWnd@@QAE_NXZ PROC		; CxSplitterWnd::DetachAllCtrls, COMDAT
; _this$ = ecx

; 140  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 381  : 		if (m_pData != NULL)

  00003	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  00009	85 c0		 test	 eax, eax
  0000b	74 13		 je	 SHORT $LN25@DetachAllC

; 382  : 		{
; 383  : 			for( int i = 0; i < m_nSize; i++ )
; 384  : 				(m_pData + i)->~TYPE();
; 385  : 			delete[] (BYTE*)m_pData;

  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00013	83 c4 04	 add	 esp, 4

; 386  : 			m_pData = NULL;

  00016	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0
$LN25@DetachAllC:

; 388  : 		m_nSize = m_nMaxSize = 0;

  00020	c7 86 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+144], 0
  0002a	c7 86 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+140], 0

; 381  : 		if (m_pData != NULL)

  00034	8b 86 9c 00 00
	00		 mov	 eax, DWORD PTR [esi+156]
  0003a	85 c0		 test	 eax, eax
  0003c	74 13		 je	 SHORT $LN100@DetachAllC

; 382  : 		{
; 383  : 			for( int i = 0; i < m_nSize; i++ )
; 384  : 				(m_pData + i)->~TYPE();
; 385  : 			delete[] (BYTE*)m_pData;

  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00044	83 c4 04	 add	 esp, 4

; 386  : 			m_pData = NULL;

  00047	c7 86 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+156], 0
$LN100@DetachAllC:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 114  : 	{ SetSize(0); }

  00051	6a ff		 push	 -1
  00053	6a 00		 push	 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 143  : 	m_dwaRelationID.RemoveAll(); 

  00055	8d 8e b4 00 00
	00		 lea	 ecx, DWORD PTR [esi+180]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 388  : 		m_nSize = m_nMaxSize = 0;

  0005b	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0
  00065	c7 86 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+160], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 114  : 	{ SetSize(0); }

  0006f	e8 00 00 00 00	 call	 ?SetSize@CDWordArray@@QAEXHH@Z ; CDWordArray::SetSize
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 144  :     return TRUE;

  00074	b0 01		 mov	 al, 1
  00076	5e		 pop	 esi

; 145  : }

  00077	c3		 ret	 0
?DetachAllCtrls@CxSplitterWnd@@QAE_NXZ ENDP		; CxSplitterWnd::DetachAllCtrls
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?AttachAsRightCtrl@CxSplitterWnd@@QAE_NPAVCWnd@@H_N@Z
_TEXT	SEGMENT
_info$ = -16						; size = 16
_pWnd$ = 8						; size = 4
_nMargin$ = 12						; size = 4
_bResize$ = 16						; size = 1
?AttachAsRightCtrl@CxSplitterWnd@@QAE_NPAVCWnd@@H_N@Z PROC ; CxSplitterWnd::AttachAsRightCtrl, COMDAT
; _this$ = ecx

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 18   : 		pWnd(_pWnd),

  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  0000d	89 4d f4	 mov	 DWORD PTR _info$[ebp+4], ecx
  00010	85 c9		 test	 ecx, ecx

; 19   : 		nMargin(0),
; 20   : 		bResize(TRUE)
; 21   : 	{
; 22   : 		if (pWnd)

  00012	74 0a		 je	 SHORT $LN4@AttachAsRi

; 23   : 			nID = pWnd->GetDlgCtrlID();

  00014	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID
  00019	89 45 f0	 mov	 DWORD PTR _info$[ebp], eax
  0001c	eb 07		 jmp	 SHORT $LN5@AttachAsRi
$LN4@AttachAsRi:

; 24   : 		else
; 25   : 			nID = NULL;

  0001e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _info$[ebp], 0
$LN5@AttachAsRi:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 132  : 	info.nMargin = nMargin;

  00025	8b 45 0c	 mov	 eax, DWORD PTR _nMargin$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  00028	8b b7 a0 00 00
	00		 mov	 esi, DWORD PTR [edi+160]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 132  : 	info.nMargin = nMargin;

  0002e	89 45 f8	 mov	 DWORD PTR _info$[ebp+8], eax

; 133  : 	info.bResize = bResize;

  00031	8a 45 10	 mov	 al, BYTE PTR _bResize$[ebp]
  00034	88 45 fc	 mov	 BYTE PTR _info$[ebp+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 538  : 	if(nIndex < 0)

  00037	85 f6		 test	 esi, esi
  00039	78 2b		 js	 SHORT $LN17@AttachAsRi

; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  0003b	6a ff		 push	 -1
  0003d	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00040	50		 push	 eax
  00041	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  00047	e8 00 00 00 00	 call	 ?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z ; CArray<ControlInfo,ControlInfo &>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  0004c	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR _info$[ebp]
  00050	c1 e6 04	 shl	 esi, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 135  :     return TRUE;

  00053	b0 01		 mov	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00055	03 b7 9c 00 00
	00		 add	 esi, DWORD PTR [edi+156]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 135  :     return TRUE;

  0005b	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  0005c	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 135  :     return TRUE;

  0005f	5e		 pop	 esi

; 136  : }

  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c2 0c 00	 ret	 12			; 0000000cH
$LN17@AttachAsRi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 539  : 		AfxThrowInvalidArgException();

  00066	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN15@AttachAsRi:
  0006b	cc		 int	 3
?AttachAsRightCtrl@CxSplitterWnd@@QAE_NPAVCWnd@@H_N@Z ENDP ; CxSplitterWnd::AttachAsRightCtrl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?AttachAsRightCtrl@CxSplitterWnd@@QAE_NHH_N@Z
_TEXT	SEGMENT
_info$1 = -16						; size = 16
_ctrlid$ = 8						; size = 4
_nMargin$ = 12						; size = 4
_bResize$ = 16						; size = 1
?AttachAsRightCtrl@CxSplitterWnd@@QAE_NHH_N@Z PROC	; CxSplitterWnd::AttachAsRightCtrl, COMDAT
; _this$ = ecx

; 123  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 213  : 	{ ASSERT(::IsWindow(m_hWnd)); return CWnd::FromHandle(::GetParent(m_hWnd)); }

  0000a	ff 77 20	 push	 DWORD PTR [edi+32]
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetParent@4
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 124  : 	return AttachAsRightCtrl(GetParent()->GetDlgItem(ctrlid), nMargin, bResize);

  00019	ff 75 08	 push	 DWORD PTR _ctrlid$[ebp]
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 18   : 		pWnd(_pWnd),

  00023	89 45 f4	 mov	 DWORD PTR _info$1[ebp+4], eax

; 19   : 		nMargin(0),
; 20   : 		bResize(TRUE)
; 21   : 	{
; 22   : 		if (pWnd)

  00026	85 c0		 test	 eax, eax
  00028	74 0c		 je	 SHORT $LN8@AttachAsRi

; 23   : 			nID = pWnd->GetDlgCtrlID();

  0002a	8b c8		 mov	 ecx, eax
  0002c	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID
  00031	89 45 f0	 mov	 DWORD PTR _info$1[ebp], eax
  00034	eb 07		 jmp	 SHORT $LN9@AttachAsRi
$LN8@AttachAsRi:

; 24   : 		else
; 25   : 			nID = NULL;

  00036	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _info$1[ebp], 0
$LN9@AttachAsRi:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 132  : 	info.nMargin = nMargin;

  0003d	8b 45 0c	 mov	 eax, DWORD PTR _nMargin$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  00040	8b b7 a0 00 00
	00		 mov	 esi, DWORD PTR [edi+160]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 132  : 	info.nMargin = nMargin;

  00046	89 45 f8	 mov	 DWORD PTR _info$1[ebp+8], eax

; 133  : 	info.bResize = bResize;

  00049	8a 45 10	 mov	 al, BYTE PTR _bResize$[ebp]
  0004c	88 45 fc	 mov	 BYTE PTR _info$1[ebp+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 538  : 	if(nIndex < 0)

  0004f	85 f6		 test	 esi, esi
  00051	78 2b		 js	 SHORT $LN22@AttachAsRi

; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  00053	6a ff		 push	 -1
  00055	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00058	50		 push	 eax
  00059	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  0005f	e8 00 00 00 00	 call	 ?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z ; CArray<ControlInfo,ControlInfo &>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  00064	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR _info$1[ebp]
  00068	c1 e6 04	 shl	 esi, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 124  : 	return AttachAsRightCtrl(GetParent()->GetDlgItem(ctrlid), nMargin, bResize);

  0006b	b0 01		 mov	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  0006d	03 b7 9c 00 00
	00		 add	 esi, DWORD PTR [edi+156]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 124  : 	return AttachAsRightCtrl(GetParent()->GetDlgItem(ctrlid), nMargin, bResize);

  00073	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00074	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 124  : 	return AttachAsRightCtrl(GetParent()->GetDlgItem(ctrlid), nMargin, bResize);

  00077	5e		 pop	 esi

; 125  : }

  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 0c 00	 ret	 12			; 0000000cH
$LN22@AttachAsRi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 539  : 		AfxThrowInvalidArgException();

  0007e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN20@AttachAsRi:
  00083	cc		 int	 3
?AttachAsRightCtrl@CxSplitterWnd@@QAE_NHH_N@Z ENDP	; CxSplitterWnd::AttachAsRightCtrl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?AttachAsRightCtrl@CxSplitterWnd@@QAE_NPAVCWnd@@_N@Z
_TEXT	SEGMENT
_info$1 = -52						; size = 16
_rcSplitter$ = -36					; size = 16
_rcCtrl$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_pWnd$ = 8						; size = 4
_bResize$ = 12						; size = 1
?AttachAsRightCtrl@CxSplitterWnd@@QAE_NPAVCWnd@@_N@Z PROC ; CxSplitterWnd::AttachAsRightCtrl, COMDAT
; _this$ = ecx

; 112  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00012	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetWindowRect@8
  00018	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 112  : {

  0001b	57		 push	 edi
  0001c	8b 7d 08	 mov	 edi, DWORD PTR _pWnd$[ebp]
  0001f	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00022	50		 push	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 112  : {

  00023	8b d9		 mov	 ebx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00025	0f 11 45 ec	 movups	 XMMWORD PTR _rcCtrl$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00029	ff 77 20	 push	 DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  0002c	0f 11 45 dc	 movups	 XMMWORD PTR _rcSplitter$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00030	ff d6		 call	 esi
  00032	8d 45 dc	 lea	 eax, DWORD PTR _rcSplitter$[ebp]
  00035	50		 push	 eax
  00036	ff 73 20	 push	 DWORD PTR [ebx+32]
  00039	ff d6		 call	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 117  : 	return AttachAsRightCtrl(pWnd, rcCtrl.left - rcSplitter.right, bResize);

  0003b	8b 75 ec	 mov	 esi, DWORD PTR _rcCtrl$[ebp]
  0003e	2b 75 e4	 sub	 esi, DWORD PTR _rcSplitter$[ebp+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 18   : 		pWnd(_pWnd),

  00041	89 7d d0	 mov	 DWORD PTR _info$1[ebp+4], edi
  00044	85 ff		 test	 edi, edi

; 19   : 		nMargin(0),
; 20   : 		bResize(TRUE)
; 21   : 	{
; 22   : 		if (pWnd)

  00046	74 0c		 je	 SHORT $LN14@AttachAsRi

; 23   : 			nID = pWnd->GetDlgCtrlID();

  00048	8b cf		 mov	 ecx, edi
  0004a	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID
  0004f	89 45 cc	 mov	 DWORD PTR _info$1[ebp], eax
  00052	eb 07		 jmp	 SHORT $LN15@AttachAsRi
$LN14@AttachAsRi:

; 24   : 		else
; 25   : 			nID = NULL;

  00054	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _info$1[ebp], 0
$LN15@AttachAsRi:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 133  : 	info.bResize = bResize;

  0005b	8a 45 0c	 mov	 al, BYTE PTR _bResize$[ebp]
  0005e	89 75 d4	 mov	 DWORD PTR _info$1[ebp+8], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  00061	8b b3 a0 00 00
	00		 mov	 esi, DWORD PTR [ebx+160]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 133  : 	info.bResize = bResize;

  00067	88 45 d8	 mov	 BYTE PTR _info$1[ebp+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 538  : 	if(nIndex < 0)

  0006a	85 f6		 test	 esi, esi
  0006c	78 36		 js	 SHORT $LN28@AttachAsRi

; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  0006e	6a ff		 push	 -1
  00070	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00073	50		 push	 eax
  00074	8d 8b 98 00 00
	00		 lea	 ecx, DWORD PTR [ebx+152]
  0007a	e8 00 00 00 00	 call	 ?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z ; CArray<ControlInfo,ControlInfo &>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  0007f	0f 10 45 cc	 movups	 xmm0, XMMWORD PTR _info$1[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 118  : }

  00083	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00086	b0 01		 mov	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00088	c1 e6 04	 shl	 esi, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 118  : }

  0008b	33 cd		 xor	 ecx, ebp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  0008d	03 b3 9c 00 00
	00		 add	 esi, DWORD PTR [ebx+156]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 117  : 	return AttachAsRightCtrl(pWnd, rcCtrl.left - rcSplitter.right, bResize);

  00093	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00094	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 117  : 	return AttachAsRightCtrl(pWnd, rcCtrl.left - rcSplitter.right, bResize);

  00097	5e		 pop	 esi
  00098	5b		 pop	 ebx

; 118  : }

  00099	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 08 00	 ret	 8
$LN28@AttachAsRi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 539  : 		AfxThrowInvalidArgException();

  000a4	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN26@AttachAsRi:
  000a9	cc		 int	 3
?AttachAsRightCtrl@CxSplitterWnd@@QAE_NPAVCWnd@@_N@Z ENDP ; CxSplitterWnd::AttachAsRightCtrl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?AttachAsRightCtrl@CxSplitterWnd@@QAE_NH_N@Z
_TEXT	SEGMENT
_info$1 = -52						; size = 16
_rcSplitter$2 = -36					; size = 16
_rcCtrl$3 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_ctrlid$ = 8						; size = 4
_bResize$ = 12						; size = 1
?AttachAsRightCtrl@CxSplitterWnd@@QAE_NH_N@Z PROC	; CxSplitterWnd::AttachAsRightCtrl, COMDAT
; _this$ = ecx

; 106  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b 75 08	 mov	 esi, DWORD PTR _ctrlid$[ebp]
  00015	8b d9		 mov	 ebx, ecx
  00017	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 213  : 	{ ASSERT(::IsWindow(m_hWnd)); return CWnd::FromHandle(::GetParent(m_hWnd)); }

  00018	ff 73 20	 push	 DWORD PTR [ebx+32]
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetParent@4
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 107  : 	return AttachAsRightCtrl(GetParent()->GetDlgItem(ctrlid), bResize);

  00027	56		 push	 esi
  00028	8b c8		 mov	 ecx, eax
  0002a	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0002f	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetWindowRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 107  : 	return AttachAsRightCtrl(GetParent()->GetDlgItem(ctrlid), bResize);

  00035	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00037	8d 45 ec	 lea	 eax, DWORD PTR _rcCtrl$3[ebp]
  0003a	0f 57 c0	 xorps	 xmm0, xmm0
  0003d	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  0003e	0f 11 45 ec	 movups	 XMMWORD PTR _rcCtrl$3[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00042	ff 77 20	 push	 DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00045	0f 11 45 dc	 movups	 XMMWORD PTR _rcSplitter$2[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00049	ff d6		 call	 esi
  0004b	8d 45 dc	 lea	 eax, DWORD PTR _rcSplitter$2[ebp]
  0004e	50		 push	 eax
  0004f	ff 73 20	 push	 DWORD PTR [ebx+32]
  00052	ff d6		 call	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 117  : 	return AttachAsRightCtrl(pWnd, rcCtrl.left - rcSplitter.right, bResize);

  00054	8b 75 ec	 mov	 esi, DWORD PTR _rcCtrl$3[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 23   : 			nID = pWnd->GetDlgCtrlID();

  00057	8b cf		 mov	 ecx, edi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 117  : 	return AttachAsRightCtrl(pWnd, rcCtrl.left - rcSplitter.right, bResize);

  00059	2b 75 e4	 sub	 esi, DWORD PTR _rcSplitter$2[ebp+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 18   : 		pWnd(_pWnd),

  0005c	89 7d d0	 mov	 DWORD PTR _info$1[ebp+4], edi

; 23   : 			nID = pWnd->GetDlgCtrlID();

  0005f	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID
  00064	89 45 cc	 mov	 DWORD PTR _info$1[ebp], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 133  : 	info.bResize = bResize;

  00067	8a 45 0c	 mov	 al, BYTE PTR _bResize$[ebp]
  0006a	89 75 d4	 mov	 DWORD PTR _info$1[ebp+8], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  0006d	8b b3 a0 00 00
	00		 mov	 esi, DWORD PTR [ebx+160]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 133  : 	info.bResize = bResize;

  00073	88 45 d8	 mov	 BYTE PTR _info$1[ebp+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 538  : 	if(nIndex < 0)

  00076	85 f6		 test	 esi, esi
  00078	78 36		 js	 SHORT $LN33@AttachAsRi

; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  0007a	6a ff		 push	 -1
  0007c	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  0007f	50		 push	 eax
  00080	8d 8b 98 00 00
	00		 lea	 ecx, DWORD PTR [ebx+152]
  00086	e8 00 00 00 00	 call	 ?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z ; CArray<ControlInfo,ControlInfo &>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  0008b	0f 10 45 cc	 movups	 xmm0, XMMWORD PTR _info$1[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 108  : }

  0008f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00092	b0 01		 mov	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00094	c1 e6 04	 shl	 esi, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 108  : }

  00097	33 cd		 xor	 ecx, ebp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00099	03 b3 9c 00 00
	00		 add	 esi, DWORD PTR [ebx+156]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 107  : 	return AttachAsRightCtrl(GetParent()->GetDlgItem(ctrlid), bResize);

  0009f	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  000a0	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 107  : 	return AttachAsRightCtrl(GetParent()->GetDlgItem(ctrlid), bResize);

  000a3	5e		 pop	 esi
  000a4	5b		 pop	 ebx

; 108  : }

  000a5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c2 08 00	 ret	 8
$LN33@AttachAsRi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 539  : 		AfxThrowInvalidArgException();

  000b0	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN31@AttachAsRi:
  000b5	cc		 int	 3
?AttachAsRightCtrl@CxSplitterWnd@@QAE_NH_N@Z ENDP	; CxSplitterWnd::AttachAsRightCtrl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?AttachAsLeftCtrl@CxSplitterWnd@@QAE_NPAVCWnd@@H_N@Z
_TEXT	SEGMENT
_info$ = -16						; size = 16
_pWnd$ = 8						; size = 4
_nMargin$ = 12						; size = 4
_bResize$ = 16						; size = 1
?AttachAsLeftCtrl@CxSplitterWnd@@QAE_NPAVCWnd@@H_N@Z PROC ; CxSplitterWnd::AttachAsLeftCtrl, COMDAT
; _this$ = ecx

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 18   : 		pWnd(_pWnd),

  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  0000d	89 4d f4	 mov	 DWORD PTR _info$[ebp+4], ecx
  00010	85 c9		 test	 ecx, ecx

; 19   : 		nMargin(0),
; 20   : 		bResize(TRUE)
; 21   : 	{
; 22   : 		if (pWnd)

  00012	74 0a		 je	 SHORT $LN4@AttachAsLe

; 23   : 			nID = pWnd->GetDlgCtrlID();

  00014	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID
  00019	89 45 f0	 mov	 DWORD PTR _info$[ebp], eax
  0001c	eb 07		 jmp	 SHORT $LN5@AttachAsLe
$LN4@AttachAsLe:

; 24   : 		else
; 25   : 			nID = NULL;

  0001e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _info$[ebp], 0
$LN5@AttachAsLe:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 97   : 	info.nMargin = nMargin;

  00025	8b 45 0c	 mov	 eax, DWORD PTR _nMargin$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  00028	8b b7 8c 00 00
	00		 mov	 esi, DWORD PTR [edi+140]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 97   : 	info.nMargin = nMargin;

  0002e	89 45 f8	 mov	 DWORD PTR _info$[ebp+8], eax

; 98   : 	info.bResize = bResize;

  00031	8a 45 10	 mov	 al, BYTE PTR _bResize$[ebp]
  00034	88 45 fc	 mov	 BYTE PTR _info$[ebp+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 538  : 	if(nIndex < 0)

  00037	85 f6		 test	 esi, esi
  00039	78 2b		 js	 SHORT $LN17@AttachAsLe

; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  0003b	6a ff		 push	 -1
  0003d	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00040	50		 push	 eax
  00041	8d 8f 84 00 00
	00		 lea	 ecx, DWORD PTR [edi+132]
  00047	e8 00 00 00 00	 call	 ?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z ; CArray<ControlInfo,ControlInfo &>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  0004c	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR _info$[ebp]
  00050	c1 e6 04	 shl	 esi, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 100  : 	return TRUE;

  00053	b0 01		 mov	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00055	03 b7 88 00 00
	00		 add	 esi, DWORD PTR [edi+136]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 100  : 	return TRUE;

  0005b	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  0005c	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 100  : 	return TRUE;

  0005f	5e		 pop	 esi

; 101  : }

  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c2 0c 00	 ret	 12			; 0000000cH
$LN17@AttachAsLe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 539  : 		AfxThrowInvalidArgException();

  00066	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN15@AttachAsLe:
  0006b	cc		 int	 3
?AttachAsLeftCtrl@CxSplitterWnd@@QAE_NPAVCWnd@@H_N@Z ENDP ; CxSplitterWnd::AttachAsLeftCtrl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?AttachAsLeftCtrl@CxSplitterWnd@@QAE_NHH_N@Z
_TEXT	SEGMENT
_info$1 = -16						; size = 16
_ctrlid$ = 8						; size = 4
_nMargin$ = 12						; size = 4
_bResize$ = 16						; size = 1
?AttachAsLeftCtrl@CxSplitterWnd@@QAE_NHH_N@Z PROC	; CxSplitterWnd::AttachAsLeftCtrl, COMDAT
; _this$ = ecx

; 88   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 213  : 	{ ASSERT(::IsWindow(m_hWnd)); return CWnd::FromHandle(::GetParent(m_hWnd)); }

  0000a	ff 77 20	 push	 DWORD PTR [edi+32]
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetParent@4
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 89   : 	return AttachAsLeftCtrl(GetParent()->GetDlgItem(ctrlid), nMargin, bResize);

  00019	ff 75 08	 push	 DWORD PTR _ctrlid$[ebp]
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 18   : 		pWnd(_pWnd),

  00023	89 45 f4	 mov	 DWORD PTR _info$1[ebp+4], eax

; 19   : 		nMargin(0),
; 20   : 		bResize(TRUE)
; 21   : 	{
; 22   : 		if (pWnd)

  00026	85 c0		 test	 eax, eax
  00028	74 0c		 je	 SHORT $LN8@AttachAsLe

; 23   : 			nID = pWnd->GetDlgCtrlID();

  0002a	8b c8		 mov	 ecx, eax
  0002c	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID
  00031	89 45 f0	 mov	 DWORD PTR _info$1[ebp], eax
  00034	eb 07		 jmp	 SHORT $LN9@AttachAsLe
$LN8@AttachAsLe:

; 24   : 		else
; 25   : 			nID = NULL;

  00036	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _info$1[ebp], 0
$LN9@AttachAsLe:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 97   : 	info.nMargin = nMargin;

  0003d	8b 45 0c	 mov	 eax, DWORD PTR _nMargin$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  00040	8b b7 8c 00 00
	00		 mov	 esi, DWORD PTR [edi+140]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 97   : 	info.nMargin = nMargin;

  00046	89 45 f8	 mov	 DWORD PTR _info$1[ebp+8], eax

; 98   : 	info.bResize = bResize;

  00049	8a 45 10	 mov	 al, BYTE PTR _bResize$[ebp]
  0004c	88 45 fc	 mov	 BYTE PTR _info$1[ebp+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 538  : 	if(nIndex < 0)

  0004f	85 f6		 test	 esi, esi
  00051	78 2b		 js	 SHORT $LN22@AttachAsLe

; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  00053	6a ff		 push	 -1
  00055	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00058	50		 push	 eax
  00059	8d 8f 84 00 00
	00		 lea	 ecx, DWORD PTR [edi+132]
  0005f	e8 00 00 00 00	 call	 ?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z ; CArray<ControlInfo,ControlInfo &>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  00064	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR _info$1[ebp]
  00068	c1 e6 04	 shl	 esi, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 89   : 	return AttachAsLeftCtrl(GetParent()->GetDlgItem(ctrlid), nMargin, bResize);

  0006b	b0 01		 mov	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  0006d	03 b7 88 00 00
	00		 add	 esi, DWORD PTR [edi+136]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 89   : 	return AttachAsLeftCtrl(GetParent()->GetDlgItem(ctrlid), nMargin, bResize);

  00073	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00074	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 89   : 	return AttachAsLeftCtrl(GetParent()->GetDlgItem(ctrlid), nMargin, bResize);

  00077	5e		 pop	 esi

; 90   : }

  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 0c 00	 ret	 12			; 0000000cH
$LN22@AttachAsLe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 539  : 		AfxThrowInvalidArgException();

  0007e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN20@AttachAsLe:
  00083	cc		 int	 3
?AttachAsLeftCtrl@CxSplitterWnd@@QAE_NHH_N@Z ENDP	; CxSplitterWnd::AttachAsLeftCtrl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?AttachAsLeftCtrl@CxSplitterWnd@@QAE_NPAVCWnd@@_N@Z
_TEXT	SEGMENT
_info$1 = -52						; size = 16
_rcCtrl$ = -36						; size = 16
_rcSplitter$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_pWnd$ = 8						; size = 4
_bResize$ = 12						; size = 1
?AttachAsLeftCtrl@CxSplitterWnd@@QAE_NPAVCWnd@@_N@Z PROC ; CxSplitterWnd::AttachAsLeftCtrl, COMDAT
; _this$ = ecx

; 77   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00012	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetWindowRect@8
  00018	8d 45 dc	 lea	 eax, DWORD PTR _rcCtrl$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 77   : {

  0001b	57		 push	 edi
  0001c	8b 7d 08	 mov	 edi, DWORD PTR _pWnd$[ebp]
  0001f	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00022	50		 push	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 77   : {

  00023	8b d9		 mov	 ebx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00025	0f 11 45 dc	 movups	 XMMWORD PTR _rcCtrl$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00029	ff 77 20	 push	 DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  0002c	0f 11 45 ec	 movups	 XMMWORD PTR _rcSplitter$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00030	ff d6		 call	 esi
  00032	8d 45 ec	 lea	 eax, DWORD PTR _rcSplitter$[ebp]
  00035	50		 push	 eax
  00036	ff 73 20	 push	 DWORD PTR [ebx+32]
  00039	ff d6		 call	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 82   : 	return AttachAsLeftCtrl(pWnd, rcSplitter.left - rcCtrl.right, bResize);

  0003b	8b 75 ec	 mov	 esi, DWORD PTR _rcSplitter$[ebp]
  0003e	2b 75 e4	 sub	 esi, DWORD PTR _rcCtrl$[ebp+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 18   : 		pWnd(_pWnd),

  00041	89 7d d0	 mov	 DWORD PTR _info$1[ebp+4], edi
  00044	85 ff		 test	 edi, edi

; 19   : 		nMargin(0),
; 20   : 		bResize(TRUE)
; 21   : 	{
; 22   : 		if (pWnd)

  00046	74 0c		 je	 SHORT $LN14@AttachAsLe

; 23   : 			nID = pWnd->GetDlgCtrlID();

  00048	8b cf		 mov	 ecx, edi
  0004a	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID
  0004f	89 45 cc	 mov	 DWORD PTR _info$1[ebp], eax
  00052	eb 07		 jmp	 SHORT $LN15@AttachAsLe
$LN14@AttachAsLe:

; 24   : 		else
; 25   : 			nID = NULL;

  00054	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _info$1[ebp], 0
$LN15@AttachAsLe:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 98   : 	info.bResize = bResize;

  0005b	8a 45 0c	 mov	 al, BYTE PTR _bResize$[ebp]
  0005e	89 75 d4	 mov	 DWORD PTR _info$1[ebp+8], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  00061	8b b3 8c 00 00
	00		 mov	 esi, DWORD PTR [ebx+140]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 98   : 	info.bResize = bResize;

  00067	88 45 d8	 mov	 BYTE PTR _info$1[ebp+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 538  : 	if(nIndex < 0)

  0006a	85 f6		 test	 esi, esi
  0006c	78 36		 js	 SHORT $LN28@AttachAsLe

; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  0006e	6a ff		 push	 -1
  00070	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00073	50		 push	 eax
  00074	8d 8b 84 00 00
	00		 lea	 ecx, DWORD PTR [ebx+132]
  0007a	e8 00 00 00 00	 call	 ?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z ; CArray<ControlInfo,ControlInfo &>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  0007f	0f 10 45 cc	 movups	 xmm0, XMMWORD PTR _info$1[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 83   : }

  00083	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00086	b0 01		 mov	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00088	c1 e6 04	 shl	 esi, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 83   : }

  0008b	33 cd		 xor	 ecx, ebp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  0008d	03 b3 88 00 00
	00		 add	 esi, DWORD PTR [ebx+136]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 82   : 	return AttachAsLeftCtrl(pWnd, rcSplitter.left - rcCtrl.right, bResize);

  00093	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00094	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 82   : 	return AttachAsLeftCtrl(pWnd, rcSplitter.left - rcCtrl.right, bResize);

  00097	5e		 pop	 esi
  00098	5b		 pop	 ebx

; 83   : }

  00099	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 08 00	 ret	 8
$LN28@AttachAsLe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 539  : 		AfxThrowInvalidArgException();

  000a4	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN26@AttachAsLe:
  000a9	cc		 int	 3
?AttachAsLeftCtrl@CxSplitterWnd@@QAE_NPAVCWnd@@_N@Z ENDP ; CxSplitterWnd::AttachAsLeftCtrl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?AttachAsLeftCtrl@CxSplitterWnd@@QAE_NH_N@Z
_TEXT	SEGMENT
_info$1 = -52						; size = 16
_rcCtrl$2 = -36						; size = 16
_rcSplitter$3 = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_ctrlid$ = 8						; size = 4
_bResize$ = 12						; size = 1
?AttachAsLeftCtrl@CxSplitterWnd@@QAE_NH_N@Z PROC	; CxSplitterWnd::AttachAsLeftCtrl, COMDAT
; _this$ = ecx

; 71   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b 75 08	 mov	 esi, DWORD PTR _ctrlid$[ebp]
  00015	8b d9		 mov	 ebx, ecx
  00017	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 213  : 	{ ASSERT(::IsWindow(m_hWnd)); return CWnd::FromHandle(::GetParent(m_hWnd)); }

  00018	ff 73 20	 push	 DWORD PTR [ebx+32]
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetParent@4
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 72   : 	return AttachAsLeftCtrl(GetParent()->GetDlgItem(ctrlid), bResize);

  00027	56		 push	 esi
  00028	8b c8		 mov	 ecx, eax
  0002a	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0002f	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetWindowRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 72   : 	return AttachAsLeftCtrl(GetParent()->GetDlgItem(ctrlid), bResize);

  00035	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00037	8d 45 dc	 lea	 eax, DWORD PTR _rcCtrl$2[ebp]
  0003a	0f 57 c0	 xorps	 xmm0, xmm0
  0003d	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  0003e	0f 11 45 dc	 movups	 XMMWORD PTR _rcCtrl$2[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00042	ff 77 20	 push	 DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00045	0f 11 45 ec	 movups	 XMMWORD PTR _rcSplitter$3[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00049	ff d6		 call	 esi
  0004b	8d 45 ec	 lea	 eax, DWORD PTR _rcSplitter$3[ebp]
  0004e	50		 push	 eax
  0004f	ff 73 20	 push	 DWORD PTR [ebx+32]
  00052	ff d6		 call	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 82   : 	return AttachAsLeftCtrl(pWnd, rcSplitter.left - rcCtrl.right, bResize);

  00054	8b 75 ec	 mov	 esi, DWORD PTR _rcSplitter$3[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 23   : 			nID = pWnd->GetDlgCtrlID();

  00057	8b cf		 mov	 ecx, edi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 82   : 	return AttachAsLeftCtrl(pWnd, rcSplitter.left - rcCtrl.right, bResize);

  00059	2b 75 e4	 sub	 esi, DWORD PTR _rcCtrl$2[ebp+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 18   : 		pWnd(_pWnd),

  0005c	89 7d d0	 mov	 DWORD PTR _info$1[ebp+4], edi

; 23   : 			nID = pWnd->GetDlgCtrlID();

  0005f	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID
  00064	89 45 cc	 mov	 DWORD PTR _info$1[ebp], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 98   : 	info.bResize = bResize;

  00067	8a 45 0c	 mov	 al, BYTE PTR _bResize$[ebp]
  0006a	89 75 d4	 mov	 DWORD PTR _info$1[ebp+8], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  0006d	8b b3 8c 00 00
	00		 mov	 esi, DWORD PTR [ebx+140]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 98   : 	info.bResize = bResize;

  00073	88 45 d8	 mov	 BYTE PTR _info$1[ebp+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 538  : 	if(nIndex < 0)

  00076	85 f6		 test	 esi, esi
  00078	78 36		 js	 SHORT $LN33@AttachAsLe

; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  0007a	6a ff		 push	 -1
  0007c	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  0007f	50		 push	 eax
  00080	8d 8b 84 00 00
	00		 lea	 ecx, DWORD PTR [ebx+132]
  00086	e8 00 00 00 00	 call	 ?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z ; CArray<ControlInfo,ControlInfo &>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  0008b	0f 10 45 cc	 movups	 xmm0, XMMWORD PTR _info$1[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 73   : }

  0008f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00092	b0 01		 mov	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00094	c1 e6 04	 shl	 esi, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 73   : }

  00097	33 cd		 xor	 ecx, ebp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  00099	03 b3 88 00 00
	00		 add	 esi, DWORD PTR [ebx+136]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 72   : 	return AttachAsLeftCtrl(GetParent()->GetDlgItem(ctrlid), bResize);

  0009f	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  000a0	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 72   : 	return AttachAsLeftCtrl(GetParent()->GetDlgItem(ctrlid), bResize);

  000a3	5e		 pop	 esi
  000a4	5b		 pop	 ebx

; 73   : }

  000a5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c2 08 00	 ret	 8
$LN33@AttachAsLe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 539  : 		AfxThrowInvalidArgException();

  000b0	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN31@AttachAsLe:
  000b5	cc		 int	 3
?AttachAsLeftCtrl@CxSplitterWnd@@QAE_NH_N@Z ENDP	; CxSplitterWnd::AttachAsLeftCtrl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?SetMinWidth@CxSplitterWnd@@QAEXHH@Z
_TEXT	SEGMENT
_left$ = 8						; size = 4
_right$ = 12						; size = 4
?SetMinWidth@CxSplitterWnd@@QAEXHH@Z PROC		; CxSplitterWnd::SetMinWidth, COMDAT
; _this$ = ecx

; 63   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 64   :     m_minLeft = left;

  00003	8b 45 08	 mov	 eax, DWORD PTR _left$[ebp]
  00006	89 81 ac 00 00
	00		 mov	 DWORD PTR [ecx+172], eax

; 65   :     m_minRight = right;

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _right$[ebp]
  0000f	89 81 b0 00 00
	00		 mov	 DWORD PTR [ecx+176], eax

; 66   : }

  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?SetMinWidth@CxSplitterWnd@@QAEXHH@Z ENDP		; CxSplitterWnd::SetMinWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?Unbind@CxSplitterWnd@@QAEXXZ
_TEXT	SEGMENT
?Unbind@CxSplitterWnd@@QAEXXZ PROC			; CxSplitterWnd::Unbind, COMDAT
; _this$ = ecx

; 55   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 56   : 	if (!::IsWindow(m_hWnd))

  00003	ff 76 20	 push	 DWORD PTR [esi+32]
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  0000c	85 c0		 test	 eax, eax
  0000e	74 79		 je	 SHORT $LN1@Unbind
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 381  : 		if (m_pData != NULL)

  00010	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  00016	85 c0		 test	 eax, eax
  00018	74 13		 je	 SHORT $LN28@Unbind

; 382  : 		{
; 383  : 			for( int i = 0; i < m_nSize; i++ )
; 384  : 				(m_pData + i)->~TYPE();
; 385  : 			delete[] (BYTE*)m_pData;

  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00020	83 c4 04	 add	 esp, 4

; 386  : 			m_pData = NULL;

  00023	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0
$LN28@Unbind:

; 388  : 		m_nSize = m_nMaxSize = 0;

  0002d	c7 86 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+144], 0
  00037	c7 86 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+140], 0

; 381  : 		if (m_pData != NULL)

  00041	8b 86 9c 00 00
	00		 mov	 eax, DWORD PTR [esi+156]
  00047	85 c0		 test	 eax, eax
  00049	74 13		 je	 SHORT $LN103@Unbind

; 382  : 		{
; 383  : 			for( int i = 0; i < m_nSize; i++ )
; 384  : 				(m_pData + i)->~TYPE();
; 385  : 			delete[] (BYTE*)m_pData;

  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00051	83 c4 04	 add	 esp, 4

; 386  : 			m_pData = NULL;

  00054	c7 86 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+156], 0
$LN103@Unbind:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 114  : 	{ SetSize(0); }

  0005e	6a ff		 push	 -1
  00060	6a 00		 push	 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 143  : 	m_dwaRelationID.RemoveAll(); 

  00062	8d 8e b4 00 00
	00		 lea	 ecx, DWORD PTR [esi+180]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 388  : 		m_nSize = m_nMaxSize = 0;

  00068	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0
  00072	c7 86 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+160], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 114  : 	{ SetSize(0); }

  0007c	e8 00 00 00 00	 call	 ?SetSize@CDWordArray@@QAEXHH@Z ; CDWordArray::SetSize
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 59   :     UnsubclassWindow();

  00081	8b ce		 mov	 ecx, esi
  00083	5e		 pop	 esi
  00084	e9 00 00 00 00	 jmp	 ?UnsubclassWindow@CWnd@@QAEPAUHWND__@@XZ ; CWnd::UnsubclassWindow
$LN1@Unbind:
  00089	5e		 pop	 esi

; 60   : }

  0008a	c3		 ret	 0
?Unbind@CxSplitterWnd@@QAEXXZ ENDP			; CxSplitterWnd::Unbind
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?CreateInWnd@CxSplitterWnd@@QAE_NPAVCWnd@@KPAUtagRECT@@@Z
_TEXT	SEGMENT
_parent$ = 8						; size = 4
_ctrlId$ = 12						; size = 4
_rc$ = 16						; size = 4
?CreateInWnd@CxSplitterWnd@@QAE_NPAVCWnd@@KPAUtagRECT@@@Z PROC ; CxSplitterWnd::CreateInWnd, COMDAT
; _this$ = ecx

; 43   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 44   :     m_pParent = parent;

  00003	8b 45 08	 mov	 eax, DWORD PTR _parent$[ebp]

; 45   : 
; 46   : 	if (!Create(_T("STATIC"), "Hi", WS_CHILD | WS_VISIBLE | SS_NOTIFY | WS_EX_CLIENTEDGE | SS_GRAYRECT,

  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	6a 00		 push	 0
  0000a	ff 75 0c	 push	 DWORD PTR _ctrlId$[ebp]
  0000d	89 81 80 00 00
	00		 mov	 DWORD PTR [ecx+128], eax
  00013	50		 push	 eax
  00014	ff 75 10	 push	 DWORD PTR _rc$[ebp]
  00017	68 05 03 00 50	 push	 1342178053		; 50000305H
  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_02MKAICKHL@Hi@
  00021	68 00 00 00 00	 push	 OFFSET ??_C@_06GCFCNKMP@STATIC@
  00026	ff 52 5c	 call	 DWORD PTR [edx+92]
  00029	85 c0		 test	 eax, eax
  0002b	0f 95 c0	 setne	 al

; 47   : 			*rc, parent, ctrlId))
; 48   : 		return FALSE;
; 49   : 
; 50   : 
; 51   :     return TRUE;
; 52   : }

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?CreateInWnd@CxSplitterWnd@@QAE_NPAVCWnd@@KPAUtagRECT@@@Z ENDP ; CxSplitterWnd::CreateInWnd
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?BindWithControl@CxSplitterWnd@@QAE_NPAVCWnd@@K@Z
_TEXT	SEGMENT
_parent$ = 8						; size = 4
_ctrlId$ = 12						; size = 4
?BindWithControl@CxSplitterWnd@@QAE_NPAVCWnd@@K@Z PROC	; CxSplitterWnd::BindWithControl, COMDAT
; _this$ = ecx

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 32   :     if (!SubclassWindow(m_pParent->GetDlgItem(ctrlId)->GetSafeHwnd()))

  00004	ff 75 0c	 push	 DWORD PTR _ctrlId$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	8b 4d 08	 mov	 ecx, DWORD PTR _parent$[ebp]
  0000c	89 8e 80 00 00
	00		 mov	 DWORD PTR [esi+128], ecx
  00012	c7 86 b0 00 00
	00 0a 00 00 00	 mov	 DWORD PTR [esi+176], 10	; 0000000aH
  0001c	c7 86 ac 00 00
	00 0a 00 00 00	 mov	 DWORD PTR [esi+172], 10	; 0000000aH
  00026	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 25   : 	{ return this == NULL ? NULL : m_hWnd; }

  0002b	85 c0		 test	 eax, eax
  0002d	74 03		 je	 SHORT $LN7@BindWithCo
$LN6@BindWithCo:
  0002f	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
$LN7@BindWithCo:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 32   :     if (!SubclassWindow(m_pParent->GetDlgItem(ctrlId)->GetSafeHwnd()))

  00032	50		 push	 eax
  00033	8b ce		 mov	 ecx, esi
  00035	e8 00 00 00 00	 call	 ?SubclassWindow@CWnd@@QAEHPAUHWND__@@@Z ; CWnd::SubclassWindow
  0003a	85 c0		 test	 eax, eax
  0003c	75 07		 jne	 SHORT $LN2@BindWithCo

; 33   : 		return FALSE;

  0003e	32 c0		 xor	 al, al
  00040	5e		 pop	 esi

; 40   : }

  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
$LN2@BindWithCo:

; 34   : 
; 35   :     // Make sure to get mouse message from the dialog window
; 36   :     DWORD style = GetStyle();

  00045	8b ce		 mov	 ecx, esi
  00047	e8 00 00 00 00	 call	 ?GetStyle@CWnd@@QBEKXZ	; CWnd::GetStyle

; 37   :     ::SetWindowLong(GetSafeHwnd(), GWL_STYLE, style | SS_NOTIFY);

  0004c	0d 00 01 00 00	 or	 eax, 256		; 00000100H
  00051	50		 push	 eax
  00052	6a f0		 push	 -16			; fffffff0H
  00054	ff 76 20	 push	 DWORD PTR [esi+32]
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongA@12

; 38   : 
; 39   :     return TRUE;

  0005d	b0 01		 mov	 al, 1
  0005f	5e		 pop	 esi

; 40   : }

  00060	5d		 pop	 ebp
  00061	c2 08 00	 ret	 8
?BindWithControl@CxSplitterWnd@@QAE_NPAVCWnd@@K@Z ENDP	; CxSplitterWnd::BindWithControl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_G?$CArray@UControlInfo@@AAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CArray@UControlInfo@@AAU1@@@UAEPAXI@Z PROC	; CArray<ControlInfo,ControlInfo &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 355  : {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 356  : 	ASSERT_VALID(this);
; 357  : 
; 358  : 	if (m_pData != NULL)

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CArray@UControlInfo@@AAU1@@@6B@
  0000f	85 c0		 test	 eax, eax
  00011	74 09		 je	 SHORT $LN11@scalar

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )
; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00019	83 c4 04	 add	 esp, 4
$LN11@scalar:
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	a8 01		 test	 al, 1
  00021	74 1f		 je	 SHORT $LN20@scalar
  00023	a8 04		 test	 al, 4
  00025	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002d	83 c4 04	 add	 esp, 4
  00030	8b c6		 mov	 eax, esi
  00032	5e		 pop	 esi
  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
$LN3@scalar:
  00037	6a 14		 push	 20			; 00000014H
  00039	56		 push	 esi
  0003a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003f	83 c4 08	 add	 esp, 8
$LN20@scalar:
  00042	8b c6		 mov	 eax, esi
  00044	5e		 pop	 esi
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??_G?$CArray@UControlInfo@@AAU1@@@UAEPAXI@Z ENDP	; CArray<ControlInfo,ControlInfo &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CArray@UControlInfo@@AAU1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_pData$1$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CArray@UControlInfo@@AAU1@@@UAEXAAVCArchive@@@Z PROC ; CArray<ControlInfo,ControlInfo &>::Serialize, COMDAT
; _this$ = ecx

; 633  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00009	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0000c	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  0000f	f7 d0		 not	 eax
  00011	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 637  : 	if (ar.IsStoring())

  00013	74 0a		 je	 SHORT $LN2@Serialize

; 638  : 	{
; 639  : 		ar.WriteCount(m_nSize);

  00015	ff 77 08	 push	 DWORD PTR [edi+8]
  00018	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 640  : 	}

  0001d	eb 0f		 jmp	 SHORT $LN3@Serialize
$LN2@Serialize:

; 641  : 	else
; 642  : 	{
; 643  : 		DWORD_PTR nOldSize = ar.ReadCount();

  0001f	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount

; 644  : 		SetSize(nOldSize, -1);

  00024	6a ff		 push	 -1
  00026	50		 push	 eax
  00027	8b cf		 mov	 ecx, edi
  00029	e8 00 00 00 00	 call	 ?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z ; CArray<ControlInfo,ControlInfo &>::SetSize
$LN3@Serialize:

; 645  : 	}
; 646  : 	SerializeElements<TYPE>(ar, m_pData, m_nSize);

  0002e	8b 77 08	 mov	 esi, DWORD PTR [edi+8]
  00031	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00034	89 4d fc	 mov	 DWORD PTR _pData$1$[ebp], ecx

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00037	85 f6		 test	 esi, esi
  00039	74 08		 je	 SHORT $LN8@Serialize
  0003b	85 c9		 test	 ecx, ecx
  0003d	0f 84 8a 00 00
	00		 je	 $LN40@Serialize
$LN8@Serialize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00043	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00046	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00049	f7 d0		 not	 eax
  0004b	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  0004d	74 34		 je	 SHORT $LN16@Serialize

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;
; 79   : 		pData = pElements;
; 80   : 		while( nElementsLeft > 0 )

  0004f	85 f6		 test	 esi, esi
  00051	74 27		 je	 SHORT $LN14@Serialize
$LL11@Serialize:

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00053	bb ff ff ff 07	 mov	 ebx, 134217727		; 07ffffffH
  00058	3b f3		 cmp	 esi, ebx
  0005a	0f 42 de	 cmovb	 ebx, esi

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0005d	8b fb		 mov	 edi, ebx
  0005f	c1 e7 04	 shl	 edi, 4
  00062	57		 push	 edi
  00063	51		 push	 ecx
  00064	8b ca		 mov	 ecx, edx
  00066	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;
; 87   : 			pData += nElementsToWrite;

  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _pData$1$[ebp]
  0006e	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00071	03 cf		 add	 ecx, edi
  00073	89 4d fc	 mov	 DWORD PTR _pData$1$[ebp], ecx
  00076	2b f3		 sub	 esi, ebx
  00078	75 d9		 jne	 SHORT $LL11@Serialize
$LN14@Serialize:
  0007a	5f		 pop	 edi

; 647  : }

  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c2 04 00	 ret	 4
$LN16@Serialize:

; 97   : 		while( nElementsLeft > 0 )

  00083	85 f6		 test	 esi, esi
  00085	74 f3		 je	 SHORT $LN14@Serialize
  00087	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL13@Serialize:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00090	bb ff ff ff 07	 mov	 ebx, 134217727		; 07ffffffH
  00095	3b f3		 cmp	 esi, ebx
  00097	0f 42 de	 cmovb	 ebx, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0009a	8b fb		 mov	 edi, ebx
  0009c	c1 e7 04	 shl	 edi, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  0009f	57		 push	 edi
  000a0	51		 push	 ecx
  000a1	8b ca		 mov	 ecx, edx
  000a3	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  000a8	3b c7		 cmp	 eax, edi
  000aa	75 18		 jne	 SHORT $LN30@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  000ac	8b 4d fc	 mov	 ecx, DWORD PTR _pData$1$[ebp]
  000af	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;
; 104  : 			pData += nElementsToRead;

  000b2	03 cf		 add	 ecx, edi
  000b4	89 4d fc	 mov	 DWORD PTR _pData$1$[ebp], ecx
  000b7	2b f3		 sub	 esi, ebx
  000b9	75 d5		 jne	 SHORT $LL13@Serialize

; 647  : }

  000bb	5f		 pop	 edi
  000bc	5e		 pop	 esi
  000bd	5b		 pop	 ebx
  000be	8b e5		 mov	 esp, ebp
  000c0	5d		 pop	 ebp
  000c1	c2 04 00	 ret	 4
$LN30@Serialize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 402  : 		AfxThrowArchiveException(CArchiveException::endOfFile);

  000c4	6a 00		 push	 0
  000c6	6a 03		 push	 3
  000c8	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN40@Serialize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  000cd	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN38@Serialize:
  000d2	cc		 int	 3
?Serialize@?$CArray@UControlInfo@@AAU1@@@UAEXAAVCArchive@@@Z ENDP ; CArray<ControlInfo,ControlInfo &>::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CArray@UControlInfo@@AAU1@@@UAE@XZ
_TEXT	SEGMENT
??1?$CArray@UControlInfo@@AAU1@@@UAE@XZ PROC		; CArray<ControlInfo,ControlInfo &>::~CArray<ControlInfo,ControlInfo &>, COMDAT
; _this$ = ecx

; 356  : 	ASSERT_VALID(this);
; 357  : 
; 358  : 	if (m_pData != NULL)

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CArray@UControlInfo@@AAU1@@@6B@
  00009	85 c0		 test	 eax, eax
  0000b	74 07		 je	 SHORT $LN5@CArray

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )
; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00013	59		 pop	 ecx
$LN5@CArray:

; 363  : 	}
; 364  : }

  00014	c3		 ret	 0
??1?$CArray@UControlInfo@@AAU1@@@UAE@XZ ENDP		; CArray<ControlInfo,ControlInfo &>::~CArray<ControlInfo,ControlInfo &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?SetAtGrow@?$CArray@UControlInfo@@AAU1@@@QAEXHAAUControlInfo@@@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CArray@UControlInfo@@AAU1@@@QAEXHAAUControlInfo@@@Z PROC ; CArray<ControlInfo,ControlInfo &>::SetAtGrow, COMDAT
; _this$ = ecx

; 534  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 535  : 	ASSERT_VALID(this);
; 536  : 	ASSERT(nIndex >= 0);
; 537  : 
; 538  : 	if(nIndex < 0)

  00004	8b 75 08	 mov	 esi, DWORD PTR _nIndex$[ebp]
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	85 f6		 test	 esi, esi
  0000c	78 25		 js	 SHORT $LN7@SetAtGrow

; 540  : 
; 541  : 	if (nIndex >= m_nSize)

  0000e	3b 77 08	 cmp	 esi, DWORD PTR [edi+8]
  00011	7c 0b		 jl	 SHORT $LN3@SetAtGrow

; 542  : 		SetSize(nIndex+1, -1);

  00013	6a ff		 push	 -1
  00015	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z ; CArray<ControlInfo,ControlInfo &>::SetSize
$LN3@SetAtGrow:

; 543  : 	m_pData[nIndex] = newElement;

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  00021	c1 e6 04	 shl	 esi, 4
  00024	03 77 04	 add	 esi, DWORD PTR [edi+4]
  00027	5f		 pop	 edi
  00028	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  0002b	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  0002e	5e		 pop	 esi

; 544  : }

  0002f	5d		 pop	 ebp
  00030	c2 08 00	 ret	 8
$LN7@SetAtGrow:

; 539  : 		AfxThrowInvalidArgException();

  00033	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@SetAtGrow:
  00038	cc		 int	 3
?SetAtGrow@?$CArray@UControlInfo@@AAU1@@@QAEXHAAUControlInfo@@@Z ENDP ; CArray<ControlInfo,ControlInfo &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z
_TEXT	SEGMENT
__N$1$ = -8						; size = 4
__S2$1$ = -4						; size = 4
__S1max$1$ = 8						; size = 4
_nAllocSize$1$ = 8					; size = 4
_nNewSize$ = 8						; size = 4
_nNewMax$1$ = 12					; size = 4
_nGrowBy$ = 12						; size = 4
?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z PROC	; CArray<ControlInfo,ControlInfo &>::SetSize, COMDAT
; _this$ = ecx

; 368  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	8b 5d 08	 mov	 ebx, DWORD PTR _nNewSize$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b f9		 mov	 edi, ecx

; 369  : 	ASSERT_VALID(this);
; 370  : 	ASSERT(nNewSize >= 0);
; 371  : 
; 372  : 	if(nNewSize < 0 )

  0000e	85 db		 test	 ebx, ebx
  00010	0f 88 51 02 00
	00		 js	 $LN64@SetSize

; 373  : 		AfxThrowInvalidArgException();
; 374  : 
; 375  : 	if (nGrowBy >= 0)

  00016	8b 45 0c	 mov	 eax, DWORD PTR _nGrowBy$[ebp]
  00019	85 c0		 test	 eax, eax
  0001b	78 03		 js	 SHORT $LN93@SetSize

; 376  : 		m_nGrowBy = nGrowBy;  // set new size

  0001d	89 47 10	 mov	 DWORD PTR [edi+16], eax
$LN93@SetSize:

; 377  : 
; 378  : 	if (nNewSize == 0)

  00020	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  00023	85 db		 test	 ebx, ebx
  00025	75 27		 jne	 SHORT $LN19@SetSize

; 379  : 	{
; 380  : 		// shrink to nothing
; 381  : 		if (m_pData != NULL)

  00027	85 d2		 test	 edx, edx
  00029	74 0c		 je	 SHORT $LN21@SetSize

; 382  : 		{
; 383  : 			for( int i = 0; i < m_nSize; i++ )
; 384  : 				(m_pData + i)->~TYPE();
; 385  : 			delete[] (BYTE*)m_pData;

  0002b	52		 push	 edx
  0002c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00031	83 c4 04	 add	 esp, 4

; 386  : 			m_pData = NULL;

  00034	89 5f 04	 mov	 DWORD PTR [edi+4], ebx
$LN21@SetSize:

; 387  : 		}
; 388  : 		m_nSize = m_nMaxSize = 0;

  00037	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
  0003e	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00045	5f		 pop	 edi

; 475  : }

  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 08 00	 ret	 8
$LN19@SetSize:

; 389  : 	}
; 390  : 	else if (m_pData == NULL)

  0004e	85 d2		 test	 edx, edx
  00050	75 68		 jne	 SHORT $LN22@SetSize

; 391  : 	{
; 392  : 		// create buffer big enough to hold number of requested elements or
; 393  : 		// m_nGrowBy elements, whichever is larger.
; 394  : #ifdef SIZE_T_MAX
; 395  : 		ASSERT(nNewSize <= SIZE_T_MAX/sizeof(TYPE));    // no overflow
; 396  : #endif
; 397  : 		size_t nAllocSize = __max(nNewSize, m_nGrowBy);

  00052	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00055	3b d8		 cmp	 ebx, eax
  00057	0f 4f c3	 cmovg	 eax, ebx

; 398  : 		m_pData = (TYPE*) new BYTE[(size_t)nAllocSize * sizeof(TYPE)];

  0005a	8b f0		 mov	 esi, eax
  0005c	89 45 08	 mov	 DWORD PTR _nAllocSize$1$[ebp], eax
  0005f	c1 e6 04	 shl	 esi, 4
  00062	56		 push	 esi
  00063	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]

; 399  : 		memset((void*)m_pData, 0, (size_t)nAllocSize * sizeof(TYPE));

  00068	56		 push	 esi
  00069	6a 00		 push	 0
  0006b	50		 push	 eax
  0006c	89 47 04	 mov	 DWORD PTR [edi+4], eax
  0006f	e8 00 00 00 00	 call	 _memset
  00074	83 c4 10	 add	 esp, 16			; 00000010H

; 400  : 		for( int i = 0; i < nNewSize; i++ )

  00077	85 db		 test	 ebx, ebx
  00079	7e 2d		 jle	 SHORT $LN6@SetSize

; 398  : 		m_pData = (TYPE*) new BYTE[(size_t)nAllocSize * sizeof(TYPE)];

  0007b	33 c9		 xor	 ecx, ecx
  0007d	8b d3		 mov	 edx, ebx
  0007f	90		 npad	 1
$LL7@SetSize:

; 401  : #pragma push_macro("new")
; 402  : #undef new
; 403  : 			::new( (void*)( m_pData + i ) ) TYPE;

  00080	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00083	8d 49 10	 lea	 ecx, DWORD PTR [ecx+16]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 18   : 		pWnd(_pWnd),

  00086	c7 44 01 f4 00
	00 00 00	 mov	 DWORD PTR [ecx+eax-12], 0

; 19   : 		nMargin(0),

  0008e	c7 44 01 f8 00
	00 00 00	 mov	 DWORD PTR [ecx+eax-8], 0

; 20   : 		bResize(TRUE)

  00096	c6 44 01 fc 01	 mov	 BYTE PTR [ecx+eax-4], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 400  : 		for( int i = 0; i < nNewSize; i++ )

  0009b	c7 44 01 f0 00
	00 00 00	 mov	 DWORD PTR [ecx+eax-16], 0
  000a3	83 ea 01	 sub	 edx, 1
  000a6	75 d8		 jne	 SHORT $LL7@SetSize
$LN6@SetSize:

; 404  : #pragma pop_macro("new")
; 405  : 		m_nSize = nNewSize;
; 406  : 		m_nMaxSize = nAllocSize;

  000a8	8b 45 08	 mov	 eax, DWORD PTR _nAllocSize$1$[ebp]
  000ab	89 5f 08	 mov	 DWORD PTR [edi+8], ebx

; 475  : }

  000ae	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c2 08 00	 ret	 8
$LN22@SetSize:

; 407  : 	}
; 408  : 	else if (nNewSize <= m_nMaxSize)

  000ba	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000bd	3b d9		 cmp	 ebx, ecx
  000bf	7f 6a		 jg	 SHORT $LN24@SetSize

; 409  : 	{
; 410  : 		// it fits
; 411  : 		if (nNewSize > m_nSize)

  000c1	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  000c4	3b d9		 cmp	 ebx, ecx
  000c6	7e 57		 jle	 SHORT $LN26@SetSize

; 412  : 		{
; 413  : 			// initialize the new elements
; 414  : 			memset((void*)(m_pData + m_nSize), 0, (size_t)(nNewSize-m_nSize) * sizeof(TYPE));

  000c8	8b c3		 mov	 eax, ebx
  000ca	2b c1		 sub	 eax, ecx
  000cc	c1 e1 04	 shl	 ecx, 4
  000cf	c1 e0 04	 shl	 eax, 4
  000d2	03 ca		 add	 ecx, edx
  000d4	50		 push	 eax
  000d5	6a 00		 push	 0
  000d7	51		 push	 ecx
  000d8	e8 00 00 00 00	 call	 _memset

; 415  : 			for( int i = 0; i < nNewSize-m_nSize; i++ )

  000dd	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  000e0	8b c3		 mov	 eax, ebx
  000e2	2b c1		 sub	 eax, ecx
  000e4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000e7	33 d2		 xor	 edx, edx
  000e9	85 c0		 test	 eax, eax
  000eb	7e 32		 jle	 SHORT $LN26@SetSize
  000ed	0f 1f 00	 npad	 3
$LL10@SetSize:

; 416  : #pragma push_macro("new")
; 417  : #undef new
; 418  : 				::new( (void*)( m_pData + m_nSize + i ) ) TYPE;

  000f0	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000f3	03 ca		 add	 ecx, edx
  000f5	03 c9		 add	 ecx, ecx
  000f7	42		 inc	 edx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 18   : 		pWnd(_pWnd),

  000f8	c7 44 c8 04 00
	00 00 00	 mov	 DWORD PTR [eax+ecx*8+4], 0

; 19   : 		nMargin(0),

  00100	c7 44 c8 08 00
	00 00 00	 mov	 DWORD PTR [eax+ecx*8+8], 0

; 20   : 		bResize(TRUE)

  00108	c6 44 c8 0c 01	 mov	 BYTE PTR [eax+ecx*8+12], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 415  : 			for( int i = 0; i < nNewSize-m_nSize; i++ )

  0010d	c7 04 c8 00 00
	00 00		 mov	 DWORD PTR [eax+ecx*8], 0
  00114	8b c3		 mov	 eax, ebx
  00116	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00119	2b c1		 sub	 eax, ecx
  0011b	3b d0		 cmp	 edx, eax
  0011d	7c d1		 jl	 SHORT $LL10@SetSize
$LN26@SetSize:

; 419  : #pragma pop_macro("new")
; 420  : 		}
; 421  : 		else if (m_nSize > nNewSize)
; 422  : 		{
; 423  : 			// destroy the old elements
; 424  : 			for( int i = 0; i < m_nSize-nNewSize; i++ )
; 425  : 				(m_pData + nNewSize + i)->~TYPE();
; 426  : 		}
; 427  : 		m_nSize = nNewSize;

  0011f	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  00122	5f		 pop	 edi

; 475  : }

  00123	5e		 pop	 esi
  00124	5b		 pop	 ebx
  00125	8b e5		 mov	 esp, ebp
  00127	5d		 pop	 ebp
  00128	c2 08 00	 ret	 8
$LN24@SetSize:

; 428  : 	}
; 429  : 	else
; 430  : 	{
; 431  : 		// otherwise, grow array
; 432  : 		nGrowBy = m_nGrowBy;

  0012b	8b 47 10	 mov	 eax, DWORD PTR [edi+16]

; 433  : 		if (nGrowBy == 0)

  0012e	85 c0		 test	 eax, eax
  00130	75 22		 jne	 SHORT $LN37@SetSize

; 434  : 		{
; 435  : 			// heuristically determine growth when nGrowBy == 0
; 436  : 			//  (this avoids heap fragmentation in many situations)
; 437  : 			nGrowBy = m_nSize / 8;

  00132	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00135	99		 cdq
  00136	83 e2 07	 and	 edx, 7
  00139	03 c2		 add	 eax, edx
  0013b	c1 f8 03	 sar	 eax, 3

; 438  : 			nGrowBy = (nGrowBy < 4) ? 4 : ((nGrowBy > 1024) ? 1024 : nGrowBy);

  0013e	83 f8 04	 cmp	 eax, 4
  00141	7d 07		 jge	 SHORT $LN36@SetSize
  00143	b8 04 00 00 00	 mov	 eax, 4
  00148	eb 0a		 jmp	 SHORT $LN37@SetSize
$LN36@SetSize:
  0014a	ba 00 04 00 00	 mov	 edx, 1024		; 00000400H
  0014f	3b c2		 cmp	 eax, edx
  00151	0f 4f c2	 cmovg	 eax, edx
$LN37@SetSize:

; 439  : 		}
; 440  : 		INT_PTR nNewMax;
; 441  : 		if (nNewSize < m_nMaxSize + nGrowBy)

  00154	03 c1		 add	 eax, ecx
  00156	89 45 0c	 mov	 DWORD PTR _nNewMax$1$[ebp], eax
  00159	3b d8		 cmp	 ebx, eax
  0015b	7d 0a		 jge	 SHORT $LN30@SetSize

; 445  : 
; 446  : 		ASSERT(nNewMax >= m_nMaxSize);  // no wrap around
; 447  : 
; 448  : 		if(nNewMax  < m_nMaxSize)

  0015d	3b c1		 cmp	 eax, ecx
  0015f	0f 8c 02 01 00
	00		 jl	 $LN64@SetSize
  00165	eb 05		 jmp	 SHORT $LN32@SetSize
$LN30@SetSize:

; 442  : 			nNewMax = m_nMaxSize + nGrowBy;  // granularity
; 443  : 		else
; 444  : 			nNewMax = nNewSize;  // no slush

  00167	8b c3		 mov	 eax, ebx
  00169	89 5d 0c	 mov	 DWORD PTR _nNewMax$1$[ebp], ebx
$LN32@SetSize:

; 449  : 			AfxThrowInvalidArgException();
; 450  : 
; 451  : #ifdef SIZE_T_MAX
; 452  : 		ASSERT(nNewMax <= SIZE_T_MAX/sizeof(TYPE)); // no overflow
; 453  : #endif
; 454  : 		TYPE* pNewData = (TYPE*) new BYTE[(size_t)nNewMax * sizeof(TYPE)];

  0016c	c1 e0 04	 shl	 eax, 4
  0016f	50		 push	 eax
  00170	89 45 08	 mov	 DWORD PTR __S1max$1$[ebp], eax
  00173	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]

; 455  : 
; 456  : 		// copy new data from old
; 457  : 		::ATL::Checked::memcpy_s(pNewData, (size_t)nNewMax * sizeof(TYPE),

  00178	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0017b	8b f0		 mov	 esi, eax
  0017d	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00180	83 c4 04	 add	 esp, 4
  00183	c1 e0 04	 shl	 eax, 4
  00186	89 45 f8	 mov	 DWORD PTR __N$1$[ebp], eax
  00189	89 4d fc	 mov	 DWORD PTR __S2$1$[ebp], ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h

; 46   :         if (_SourceSize == 0)

  0018c	85 c0		 test	 eax, eax
  0018e	74 24		 je	 SHORT $LN62@SetSize

; 47   :         {
; 48   :             return 0;
; 49   :         }
; 50   : 
; 51   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  00190	85 f6		 test	 esi, esi
  00192	0f 84 bd 00 00
	00		 je	 $LN95@SetSize

; 52   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  00198	85 c9		 test	 ecx, ecx
  0019a	0f 84 8d 00 00
	00		 je	 $LN52@SetSize
  001a0	39 45 08	 cmp	 DWORD PTR __S1max$1$[ebp], eax
  001a3	0f 82 84 00 00
	00		 jb	 $LN52@SetSize

; 58   : 
; 59   :             // Unreachable, but required to suppress /analyze warnings:
; 60   :             return EINVAL;
; 61   :         }
; 62   :         memcpy(_Destination, _Source, _SourceSize);

  001a9	50		 push	 eax
  001aa	51		 push	 ecx
  001ab	56		 push	 esi
  001ac	e8 00 00 00 00	 call	 _memcpy
  001b1	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN62@SetSize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 462  : 		memset((void*)(pNewData + m_nSize), 0, (size_t)(nNewSize-m_nSize) * sizeof(TYPE));

  001b4	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  001b7	8b c3		 mov	 eax, ebx
  001b9	2b c1		 sub	 eax, ecx
  001bb	c1 e1 04	 shl	 ecx, 4
  001be	c1 e0 04	 shl	 eax, 4
  001c1	03 ce		 add	 ecx, esi
  001c3	50		 push	 eax
  001c4	6a 00		 push	 0
  001c6	51		 push	 ecx
  001c7	e8 00 00 00 00	 call	 _memset

; 463  : 		for( int i = 0; i < nNewSize-m_nSize; i++ )

  001cc	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  001cf	8b c3		 mov	 eax, ebx
  001d1	2b c2		 sub	 eax, edx
  001d3	83 c4 0c	 add	 esp, 12			; 0000000cH
  001d6	33 c9		 xor	 ecx, ecx
  001d8	85 c0		 test	 eax, eax
  001da	7e 31		 jle	 SHORT $LN15@SetSize
  001dc	0f 1f 40 00	 npad	 4
$LL16@SetSize:

; 464  : #pragma push_macro("new")
; 465  : #undef new
; 466  : 			::new( (void*)( pNewData + m_nSize + i ) ) TYPE;

  001e0	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
  001e3	41		 inc	 ecx
  001e4	03 c0		 add	 eax, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.h

; 18   : 		pWnd(_pWnd),

  001e6	c7 44 c6 04 00
	00 00 00	 mov	 DWORD PTR [esi+eax*8+4], 0

; 19   : 		nMargin(0),

  001ee	c7 44 c6 08 00
	00 00 00	 mov	 DWORD PTR [esi+eax*8+8], 0

; 20   : 		bResize(TRUE)

  001f6	c6 44 c6 0c 01	 mov	 BYTE PTR [esi+eax*8+12], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 463  : 		for( int i = 0; i < nNewSize-m_nSize; i++ )

  001fb	c7 04 c6 00 00
	00 00		 mov	 DWORD PTR [esi+eax*8], 0
  00202	8b c3		 mov	 eax, ebx
  00204	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  00207	2b c2		 sub	 eax, edx
  00209	3b c8		 cmp	 ecx, eax
  0020b	7c d3		 jl	 SHORT $LL16@SetSize
$LN15@SetSize:

; 467  : #pragma pop_macro("new")
; 468  : 
; 469  : 		// get rid of old stuff (note: no destructors called)
; 470  : 		delete[] (BYTE*)m_pData;

  0020d	ff 77 04	 push	 DWORD PTR [edi+4]
  00210	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]

; 471  : 		m_pData = pNewData;
; 472  : 		m_nSize = nNewSize;
; 473  : 		m_nMaxSize = nNewMax;

  00215	8b 45 0c	 mov	 eax, DWORD PTR _nNewMax$1$[ebp]
  00218	83 c4 04	 add	 esp, 4
  0021b	89 77 04	 mov	 DWORD PTR [edi+4], esi
  0021e	89 5f 08	 mov	 DWORD PTR [edi+8], ebx

; 475  : }

  00221	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  00224	5f		 pop	 edi
  00225	5e		 pop	 esi
  00226	5b		 pop	 ebx
  00227	8b e5		 mov	 esp, ebp
  00229	5d		 pop	 ebp
  0022a	c2 08 00	 ret	 8
$LN52@SetSize:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h

; 54   :             memset(_Destination, 0, _DestinationSize);

  0022d	8b 5d 08	 mov	 ebx, DWORD PTR __S1max$1$[ebp]
  00230	53		 push	 ebx
  00231	6a 00		 push	 0
  00233	56		 push	 esi
  00234	e8 00 00 00 00	 call	 _memset
  00239	83 c4 0c	 add	 esp, 12			; 0000000cH

; 55   : 
; 56   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);

  0023c	83 7d fc 00	 cmp	 DWORD PTR __S2$1$[ebp], 0
  00240	74 13		 je	 SHORT $LN95@SetSize

; 57   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);

  00242	3b 5d f8	 cmp	 ebx, DWORD PTR __N$1$[ebp]
  00245	73 20		 jae	 SHORT $LN64@SetSize
  00247	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___errno
  0024d	c7 00 22 00 00
	00		 mov	 DWORD PTR [eax], 34	; 00000022H
  00253	eb 0c		 jmp	 SHORT $LN96@SetSize
$LN95@SetSize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.h

; 517  : 		AfxThrowInvalidArgException();

  00255	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___errno
  0025b	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
$LN96@SetSize:
  00261	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter_noinfo
$LN64@SetSize:
  00267	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN94@SetSize:
  0026c	cc		 int	 3
?SetSize@?$CArray@UControlInfo@@AAU1@@@QAEXHH@Z ENDP	; CArray<ControlInfo,ControlInfo &>::SetSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CArray@UControlInfo@@AAU1@@@QAE@XZ
_TEXT	SEGMENT
??0?$CArray@UControlInfo@@AAU1@@@QAE@XZ PROC		; CArray<ControlInfo,ControlInfo &>::CArray<ControlInfo,ControlInfo &>, COMDAT
; _this$ = ecx

; 348  : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CArray@UControlInfo@@AAU1@@@6B@

; 349  : 	m_pData = NULL;
; 350  : 	m_nSize = m_nMaxSize = m_nGrowBy = 0;
; 351  : }

  00006	8b c1		 mov	 eax, ecx
  00008	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0000f	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00016	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  0001d	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00024	c3		 ret	 0
??0?$CArray@UControlInfo@@AAU1@@@QAE@XZ ENDP		; CArray<ControlInfo,ControlInfo &>::CArray<ControlInfo,ControlInfo &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ??0CxSplitterWnd@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CxSplitterWnd@@QAE@XZ PROC				; CxSplitterWnd::CxSplitterWnd, COMDAT
; _this$ = ecx

; 17   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CxSplitterWnd@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f9		 mov	 edi, ecx
  00029	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  0002c	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd
  00031	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CxSplitterWnd@@6B@
  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 348  : {

  0003e	c7 87 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+132], OFFSET ??_7?$CArray@UControlInfo@@AAU1@@@6B@

; 349  : 	m_pData = NULL;

  00048	c7 87 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+136], 0

; 350  : 	m_nSize = m_nMaxSize = m_nGrowBy = 0;

  00052	c7 87 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+148], 0
  0005c	c7 87 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+144], 0
  00066	c7 87 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+140], 0

; 348  : {

  00070	c7 87 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+152], OFFSET ??_7?$CArray@UControlInfo@@AAU1@@@6B@

; 349  : 	m_pData = NULL;

  0007a	c7 87 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+156], 0

; 350  : 	m_nSize = m_nMaxSize = m_nGrowBy = 0;

  00084	c7 87 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+168], 0
  0008e	c7 87 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+164], 0
  00098	c7 87 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+160], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 17   : {

  000a2	8d 8f b4 00 00
	00		 lea	 ecx, DWORD PTR [edi+180]
  000a8	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000ac	e8 00 00 00 00	 call	 ??0CDWordArray@@QAE@XZ	; CDWordArray::CDWordArray
  000b1	8d b7 c8 00 00
	00		 lea	 esi, DWORD PTR [edi+200]
  000b7	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 603  : 	{ }

  000bb	8b ce		 mov	 ecx, esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 17   : {

  000bd	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 603  : 	{ }

  000c0	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd
  000c5	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CStatic@@6B@
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp

; 21   : }

  000cb	8b c7		 mov	 eax, edi
  000cd	c7 87 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+172], 0
  000d7	c7 87 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+176], 0
  000e1	c7 87 48 01 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+328], 0
  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	8b e5		 mov	 esp, ebp
  000fa	5d		 pop	 ebp
  000fb	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CxSplitterWnd@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
__unwindfunclet$??0CxSplitterWnd@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00011	e9 00 00 00 00	 jmp	 ??1?$CArray@UControlInfo@@AAU1@@@UAE@XZ ; CArray<ControlInfo,ControlInfo &>::~CArray<ControlInfo,ControlInfo &>
__unwindfunclet$??0CxSplitterWnd@@QAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 98 00 00
	00		 add	 ecx, 152		; 00000098H
  0001f	e9 00 00 00 00	 jmp	 ??1?$CArray@UControlInfo@@AAU1@@@UAE@XZ ; CArray<ControlInfo,ControlInfo &>::~CArray<ControlInfo,ControlInfo &>
__unwindfunclet$??0CxSplitterWnd@@QAE@XZ$3:
  00024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  0002d	e9 00 00 00 00	 jmp	 ??1CDWordArray@@UAE@XZ	; CDWordArray::~CDWordArray
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
  00035	cc		 int	 3
  00036	cc		 int	 3
__ehhandler$??0CxSplitterWnd@@QAE@XZ:
  00037	90		 npad	 1
  00038	90		 npad	 1
  00039	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00040	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00043	33 c8		 xor	 ecx, eax
  00045	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CxSplitterWnd@@QAE@XZ
  0004f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CxSplitterWnd@@QAE@XZ ENDP				; CxSplitterWnd::CxSplitterWnd
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCStatic@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCStatic@@UAEPAXI@Z PROC				; CStatic::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CStatic@@UAE@XZ	; CStatic::~CStatic
  0000b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0000e	a8 01		 test	 al, 1
  00010	74 22		 je	 SHORT $LN9@scalar
  00012	a8 04		 test	 al, 4
  00014	75 10		 jne	 SHORT $LN3@scalar

; 112  : 	{ ::operator delete(p); }

  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001c	83 c4 04	 add	 esp, 4
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
$LN3@scalar:
  00026	68 80 00 00 00	 push	 128			; 00000080H
  0002b	56		 push	 esi
  0002c	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00031	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00034	8b c6		 mov	 eax, esi
  00036	5e		 pop	 esi
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
??_GCStatic@@UAEPAXI@Z ENDP				; CStatic::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
?EndModalState@CWnd@@UAEXXZ PROC			; CWnd::EndModalState, COMDAT
; _this$ = ecx

; 567  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	6a 01		 push	 1
  00002	ff 71 20	 push	 DWORD PTR [ecx+32]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  0000b	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
?BeginModalState@CWnd@@UAEXXZ PROC			; CWnd::BeginModalState, COMDAT
; _this$ = ecx

; 565  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	6a 00		 push	 0
  00002	ff 71 20	 push	 DWORD PTR [ecx+32]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  0000b	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC	; CWnd::DoDataExchange, COMDAT
; _this$ = ecx

; 561  : 	{ } // default does nothing

  00000	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC		; CObject::Dump, COMDAT
; _this$ = ecx

; 122  : 	{ /* no dumping in release builds */ }

  00000	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
?AssertValid@CObject@@UBEXXZ PROC			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 120  : 	{ /* no asserts in release builds */ }

  00000	c2 00 00	 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC		; CObject::Serialize, COMDAT
; _this$ = ecx

; 106  : 	{ /* CObject does not serialize anything by default */ }

  00000	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT
??1CObject@@UAE@XZ PROC					; CObject::~CObject, COMDAT
; _this$ = ecx

; 104  : 	{ }

  00000	c2 00 00	 ret	 0
??1CObject@@UAE@XZ ENDP					; CObject::~CObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\HWSTRATEGYCONFIGUREWIZARD\Control\xySplitterWnd.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
