; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\ScaleDraw\ScaleRegion.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1CScaleCompart@@QAE@XZ			; CScaleCompart::~CScaleCompart
PUBLIC	??0CScaleCompart@@QAE@ABV0@@Z			; CScaleCompart::CScaleCompart
PUBLIC	??1CScale@@QAE@XZ				; CScale::~CScale
PUBLIC	??0CScale@@QAE@ABV0@@Z				; CScale::CScale
PUBLIC	??1CHorizontalScale@@QAE@XZ			; CHorizontalScale::~CHorizontalScale
PUBLIC	??0CHorizontalScale@@QAE@ABV0@@Z		; CHorizontalScale::CHorizontalScale
PUBLIC	?IsVertScaleMinMaxLock@CVerticalScale@@QBEHXZ	; CVerticalScale::IsVertScaleMinMaxLock
PUBLIC	?SetVertScaleMinMaxLock@CVerticalScale@@QAEXH@Z	; CVerticalScale::SetVertScaleMinMaxLock
PUBLIC	?GetVertScaleMinMaxType@CVerticalScale@@QBE?AW4VERTMINMAXTYPE@CScaleBaseData@@XZ ; CVerticalScale::GetVertScaleMinMaxType
PUBLIC	?SetVertScaleMinMaxType@CVerticalScale@@QAEXW4VERTMINMAXTYPE@CScaleBaseData@@@Z ; CVerticalScale::SetVertScaleMinMaxType
PUBLIC	?GetVertScaleMin@CVerticalScale@@QBENXZ		; CVerticalScale::GetVertScaleMin
PUBLIC	?SetVertScaleMin@CVerticalScale@@QAEXN@Z	; CVerticalScale::SetVertScaleMin
PUBLIC	?GetVertScaleMax@CVerticalScale@@QBENXZ		; CVerticalScale::GetVertScaleMax
PUBLIC	?SetVertScaleMax@CVerticalScale@@QAEXN@Z	; CVerticalScale::SetVertScaleMax
PUBLIC	?SetVertScaleHoGaNumber@CVerticalScale@@QAEXN@Z	; CVerticalScale::SetVertScaleHoGaNumber
PUBLIC	?SetVertScaleUserNumber@CVerticalScale@@QAEXN@Z	; CVerticalScale::SetVertScaleUserNumber
PUBLIC	?SetVertUserHogaScaleType@CVerticalScale@@QAEXH@Z ; CVerticalScale::SetVertUserHogaScaleType
PUBLIC	?GetVertScaleHoGaNumber@CVerticalScale@@QBENXZ	; CVerticalScale::GetVertScaleHoGaNumber
PUBLIC	?GetVertScaleUserNumber@CVerticalScale@@QBENXZ	; CVerticalScale::GetVertScaleUserNumber
PUBLIC	?GetVertUserHogaScaleType@CVerticalScale@@QBEHXZ ; CVerticalScale::GetVertUserHogaScaleType
PUBLIC	?GetVertScaleInvertType@CVerticalScale@@QBE_NXZ	; CVerticalScale::GetVertScaleInvertType
PUBLIC	?SetVertScaleInvertType@CVerticalScale@@QAEX_N@Z ; CVerticalScale::SetVertScaleInvertType
PUBLIC	?SetSpace@CVerticalScale@@QAEXHH@Z		; CVerticalScale::SetSpace
PUBLIC	?GetSpace@CVerticalScale@@QBEXAAH0@Z		; CVerticalScale::GetSpace
PUBLIC	??1CVerticalScale@@QAE@XZ			; CVerticalScale::~CVerticalScale
PUBLIC	??0CVerticalScale@@QAE@ABV0@@Z			; CVerticalScale::CVerticalScale
PUBLIC	??4CHorzScaleRegionHeight@@QAEAAV0@ABV0@@Z	; CHorzScaleRegionHeight::operator=
PUBLIC	??4CHorzScaleRegionHeight@@QAEAAV0@$$QAV0@@Z	; CHorzScaleRegionHeight::operator=
PUBLIC	??4CVertScaleRegionWidth@@QAEAAV0@ABV0@@Z	; CVertScaleRegionWidth::operator=
PUBLIC	??4CVertScaleRegionWidth@@QAEAAV0@$$QAV0@@Z	; CVertScaleRegionWidth::operator=
PUBLIC	??4CHorzScaleRegion@@QAEAAV0@ABV0@@Z		; CHorzScaleRegion::operator=
PUBLIC	??4CHorzScaleRegion@@QAEAAV0@$$QAV0@@Z		; CHorzScaleRegion::operator=
PUBLIC	??4CVertScaleRegion@@QAEAAV0@ABV0@@Z		; CVertScaleRegion::operator=
PUBLIC	??4CVertScaleRegion@@QAEAAV0@$$QAV0@@Z		; CVertScaleRegion::operator=
PUBLIC	??0CScaleDrawingRegion@@QAE@XZ			; CScaleDrawingRegion::CScaleDrawingRegion
PUBLIC	??0CScaleDrawingRegion@@QAE@ABVCRect@@0@Z	; CScaleDrawingRegion::CScaleDrawingRegion
PUBLIC	?GetScaleTextRegion@CScaleDrawingRegion@@QBE?AVCRect@@XZ ; CScaleDrawingRegion::GetScaleTextRegion
PUBLIC	?GetScaleGridRegion@CScaleDrawingRegion@@QBE?AVCRect@@XZ ; CScaleDrawingRegion::GetScaleGridRegion
PUBLIC	??_7CScale@@6B@					; CScale::`vftable'
PUBLIC	??_7CHorizontalScale@@6B@			; CHorizontalScale::`vftable'
PUBLIC	??_7CVerticalScale@@6B@				; CVerticalScale::`vftable'
PUBLIC	??_R4CScale@@6B@				; CScale::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCScale@@@8				; CScale `RTTI Type Descriptor'
PUBLIC	??_R3CScale@@8					; CScale::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CScale@@8					; CScale::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CScale@@8				; CScale::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CHorizontalScale@@6B@			; CHorizontalScale::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCHorizontalScale@@@8			; CHorizontalScale `RTTI Type Descriptor'
PUBLIC	??_R3CHorizontalScale@@8			; CHorizontalScale::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CHorizontalScale@@8			; CHorizontalScale::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CHorizontalScale@@8		; CHorizontalScale::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CVerticalScale@@6B@			; CVerticalScale::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCVerticalScale@@@8			; CVerticalScale `RTTI Type Descriptor'
PUBLIC	??_R3CVerticalScale@@8				; CVerticalScale::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CVerticalScale@@8				; CVerticalScale::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CVerticalScale@@8			; CVerticalScale::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	?SetScaleData@CScale@@UAEXPADPAUHWND__@@@Z:PROC	; CScale::SetScaleData
EXTRN	?SetScaleData@CHorizontalScale@@UAEXPADPAUHWND__@@@Z:PROC ; CHorizontalScale::SetScaleData
EXTRN	?SetScaleData@CVerticalScale@@UAEXPADPAUHWND__@@@Z:PROC ; CVerticalScale::SetScaleData
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ??_R1A@?0A@EA@CVerticalScale@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CVerticalScale@@8 DD FLAT:??_R0?AVCVerticalScale@@@8 ; CVerticalScale::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CVerticalScale@@8
rdata$r	ENDS
;	COMDAT ??_R2CVerticalScale@@8
rdata$r	SEGMENT
??_R2CVerticalScale@@8 DD FLAT:??_R1A@?0A@EA@CVerticalScale@@8 ; CVerticalScale::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CScale@@8
rdata$r	ENDS
;	COMDAT ??_R3CVerticalScale@@8
rdata$r	SEGMENT
??_R3CVerticalScale@@8 DD 00H				; CVerticalScale::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CVerticalScale@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCVerticalScale@@@8
data$rs	SEGMENT
??_R0?AVCVerticalScale@@@8 DD FLAT:??_7type_info@@6B@	; CVerticalScale `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCVerticalScale@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CVerticalScale@@6B@
rdata$r	SEGMENT
??_R4CVerticalScale@@6B@ DD 00H				; CVerticalScale::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCVerticalScale@@@8
	DD	FLAT:??_R3CVerticalScale@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CHorizontalScale@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CHorizontalScale@@8 DD FLAT:??_R0?AVCHorizontalScale@@@8 ; CHorizontalScale::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CHorizontalScale@@8
rdata$r	ENDS
;	COMDAT ??_R2CHorizontalScale@@8
rdata$r	SEGMENT
??_R2CHorizontalScale@@8 DD FLAT:??_R1A@?0A@EA@CHorizontalScale@@8 ; CHorizontalScale::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CScale@@8
rdata$r	ENDS
;	COMDAT ??_R3CHorizontalScale@@8
rdata$r	SEGMENT
??_R3CHorizontalScale@@8 DD 00H				; CHorizontalScale::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CHorizontalScale@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCHorizontalScale@@@8
data$rs	SEGMENT
??_R0?AVCHorizontalScale@@@8 DD FLAT:??_7type_info@@6B@	; CHorizontalScale `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCHorizontalScale@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CHorizontalScale@@6B@
rdata$r	SEGMENT
??_R4CHorizontalScale@@6B@ DD 00H			; CHorizontalScale::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCHorizontalScale@@@8
	DD	FLAT:??_R3CHorizontalScale@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CScale@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CScale@@8 DD FLAT:??_R0?AVCScale@@@8	; CScale::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CScale@@8
rdata$r	ENDS
;	COMDAT ??_R2CScale@@8
rdata$r	SEGMENT
??_R2CScale@@8 DD FLAT:??_R1A@?0A@EA@CScale@@8		; CScale::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CScale@@8
rdata$r	SEGMENT
??_R3CScale@@8 DD 00H					; CScale::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CScale@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCScale@@@8
data$rs	SEGMENT
??_R0?AVCScale@@@8 DD FLAT:??_7type_info@@6B@		; CScale `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCScale@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CScale@@6B@
rdata$r	SEGMENT
??_R4CScale@@6B@ DD 00H					; CScale::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCScale@@@8
	DD	FLAT:??_R3CScale@@8
rdata$r	ENDS
;	COMDAT ??_7CVerticalScale@@6B@
CONST	SEGMENT
??_7CVerticalScale@@6B@ DD FLAT:??_R4CVerticalScale@@6B@ ; CVerticalScale::`vftable'
	DD	FLAT:?SetScaleData@CVerticalScale@@UAEXPADPAUHWND__@@@Z
CONST	ENDS
;	COMDAT ??_7CHorizontalScale@@6B@
CONST	SEGMENT
??_7CHorizontalScale@@6B@ DD FLAT:??_R4CHorizontalScale@@6B@ ; CHorizontalScale::`vftable'
	DD	FLAT:?SetScaleData@CHorizontalScale@@UAEXPADPAUHWND__@@@Z
CONST	ENDS
;	COMDAT ??_7CScale@@6B@
CONST	SEGMENT
??_7CScale@@6B@ DD FLAT:??_R4CScale@@6B@		; CScale::`vftable'
	DD	FLAT:?SetScaleData@CScale@@UAEXPADPAUHWND__@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CHorizontalScale@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CHorizontalScale@@QAE@ABV0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CHorizontalScale@@QAE@ABV0@@Z$3
__ehfuncinfo$??0CHorizontalScale@@QAE@ABV0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CHorizontalScale@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CScaleCompart@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CScaleCompart@@QAE@ABV0@@Z$0
__ehfuncinfo$??0CScaleCompart@@QAE@ABV0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CScaleCompart@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ScaleDraw\ScaleRegion.cpp
;	COMDAT ?GetScaleGridRegion@CScaleDrawingRegion@@QBE?AVCRect@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetScaleGridRegion@CScaleDrawingRegion@@QBE?AVCRect@@XZ PROC ; CScaleDrawingRegion::GetScaleGridRegion, COMDAT
; _this$ = ecx

; 30   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	return m_scaleGridRegion;

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	0f 10 41 10	 movups	 xmm0, XMMWORD PTR [ecx+16]
  0000a	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 32   : }

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?GetScaleGridRegion@CScaleDrawingRegion@@QBE?AVCRect@@XZ ENDP ; CScaleDrawingRegion::GetScaleGridRegion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ScaleDraw\ScaleRegion.cpp
;	COMDAT ?GetScaleTextRegion@CScaleDrawingRegion@@QBE?AVCRect@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetScaleTextRegion@CScaleDrawingRegion@@QBE?AVCRect@@XZ PROC ; CScaleDrawingRegion::GetScaleTextRegion, COMDAT
; _this$ = ecx

; 25   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 26   : 	return m_scaleTextRegion;

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00009	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 27   : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?GetScaleTextRegion@CScaleDrawingRegion@@QBE?AVCRect@@XZ ENDP ; CScaleDrawingRegion::GetScaleTextRegion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ScaleDraw\ScaleRegion.cpp
;	COMDAT ??0CScaleDrawingRegion@@QAE@ABVCRect@@0@Z
_TEXT	SEGMENT
_scaleTextRegion$ = 8					; size = 4
_scaleGridRegion$ = 12					; size = 4
??0CScaleDrawingRegion@@QAE@ABVCRect@@0@Z PROC		; CScaleDrawingRegion::CScaleDrawingRegion, COMDAT
; _this$ = ecx

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 19   : 	m_scaleTextRegion(scaleTextRegion),

  00003	8b 45 08	 mov	 eax, DWORD PTR _scaleTextRegion$[ebp]
  00006	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 20   : 	m_scaleGridRegion(scaleGridRegion)

  00009	8b 45 0c	 mov	 eax, DWORD PTR _scaleGridRegion$[ebp]
  0000c	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  0000f	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 22   : }

  00012	8b c1		 mov	 eax, ecx
  00014	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0
  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
??0CScaleDrawingRegion@@QAE@ABVCRect@@0@Z ENDP		; CScaleDrawingRegion::CScaleDrawingRegion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ScaleDraw\ScaleRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ScaleDraw\ScaleRegion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ScaleDraw\ScaleRegion.cpp
;	COMDAT ??0CScaleDrawingRegion@@QAE@XZ
_TEXT	SEGMENT
??0CScaleDrawingRegion@@QAE@XZ PROC			; CScaleDrawingRegion::CScaleDrawingRegion, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 540  : 	left = l;

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ScaleDraw\ScaleRegion.cpp

; 16   : }

  00006	8b c1		 mov	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 541  : 	top = t;

  00008	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 542  : 	right = r;

  0000f	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 543  : 	bottom = b;

  00016	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0

; 540  : 	left = l;

  0001d	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 541  : 	top = t;

  00024	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 542  : 	right = r;

  0002b	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0

; 543  : 	bottom = b;

  00032	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ScaleDraw\ScaleRegion.cpp

; 16   : }

  00039	c3		 ret	 0
??0CScaleDrawingRegion@@QAE@XZ ENDP			; CScaleDrawingRegion::CScaleDrawingRegion
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4CVertScaleRegion@@QAEAAV0@$$QAV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CVertScaleRegion@@QAEAAV0@$$QAV0@@Z PROC		; CVertScaleRegion::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00009	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  0000c	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]
  00010	8b c1		 mov	 eax, ecx
  00012	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??4CVertScaleRegion@@QAEAAV0@$$QAV0@@Z ENDP		; CVertScaleRegion::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4CVertScaleRegion@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CVertScaleRegion@@QAEAAV0@ABV0@@Z PROC		; CVertScaleRegion::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00009	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  0000c	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]
  00010	8b c1		 mov	 eax, ecx
  00012	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??4CVertScaleRegion@@QAEAAV0@ABV0@@Z ENDP		; CVertScaleRegion::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4CHorzScaleRegion@@QAEAAV0@$$QAV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CHorzScaleRegion@@QAEAAV0@$$QAV0@@Z PROC		; CHorzScaleRegion::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00009	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  0000c	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]
  00010	8b c1		 mov	 eax, ecx
  00012	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??4CHorzScaleRegion@@QAEAAV0@$$QAV0@@Z ENDP		; CHorzScaleRegion::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4CHorzScaleRegion@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CHorzScaleRegion@@QAEAAV0@ABV0@@Z PROC		; CHorzScaleRegion::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00009	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  0000c	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]
  00010	8b c1		 mov	 eax, ecx
  00012	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??4CHorzScaleRegion@@QAEAAV0@ABV0@@Z ENDP		; CHorzScaleRegion::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4CVertScaleRegionWidth@@QAEAAV0@$$QAV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CVertScaleRegionWidth@@QAEAAV0@$$QAV0@@Z PROC	; CVertScaleRegionWidth::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00006	8b 02		 mov	 eax, DWORD PTR [edx]
  00008	89 01		 mov	 DWORD PTR [ecx], eax
  0000a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0000d	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00010	8b c1		 mov	 eax, ecx
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
??4CVertScaleRegionWidth@@QAEAAV0@$$QAV0@@Z ENDP	; CVertScaleRegionWidth::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4CVertScaleRegionWidth@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CVertScaleRegionWidth@@QAEAAV0@ABV0@@Z PROC		; CVertScaleRegionWidth::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000b	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0000e	8b c1		 mov	 eax, ecx
  00010	89 11		 mov	 DWORD PTR [ecx], edx
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
??4CVertScaleRegionWidth@@QAEAAV0@ABV0@@Z ENDP		; CVertScaleRegionWidth::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4CHorzScaleRegionHeight@@QAEAAV0@$$QAV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CHorzScaleRegionHeight@@QAEAAV0@$$QAV0@@Z PROC	; CHorzScaleRegionHeight::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00006	8b 02		 mov	 eax, DWORD PTR [edx]
  00008	89 01		 mov	 DWORD PTR [ecx], eax
  0000a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0000d	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00010	8b c1		 mov	 eax, ecx
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
??4CHorzScaleRegionHeight@@QAEAAV0@$$QAV0@@Z ENDP	; CHorzScaleRegionHeight::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4CHorzScaleRegionHeight@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CHorzScaleRegionHeight@@QAEAAV0@ABV0@@Z PROC		; CHorzScaleRegionHeight::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000b	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0000e	8b c1		 mov	 eax, ecx
  00010	89 11		 mov	 DWORD PTR [ecx], edx
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
??4CHorzScaleRegionHeight@@QAEAAV0@ABV0@@Z ENDP		; CHorzScaleRegionHeight::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0CVerticalScale@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CVerticalScale@@QAE@ABV0@@Z PROC			; CVerticalScale::CVerticalScale, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
  0000b	89 7d fc	 mov	 DWORD PTR _this$[ebp], edi
  0000e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00011	50		 push	 eax
  00012	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00015	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CScale@@6B@
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00021	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00024	89 47 08	 mov	 DWORD PTR [edi+8], eax
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CVerticalScale@@6B@
  0002d	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00030	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  00033	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00036	89 47 10	 mov	 DWORD PTR [edi+16], eax
  00039	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0003c	89 47 14	 mov	 DWORD PTR [edi+20], eax
  0003f	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00042	89 47 18	 mov	 DWORD PTR [edi+24], eax
  00045	f2 0f 10 46 20	 movsd	 xmm0, QWORD PTR [esi+32]
  0004a	f2 0f 11 47 20	 movsd	 QWORD PTR [edi+32], xmm0
  0004f	f2 0f 10 46 28	 movsd	 xmm0, QWORD PTR [esi+40]
  00054	f2 0f 11 47 28	 movsd	 QWORD PTR [edi+40], xmm0
  00059	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  0005c	89 47 30	 mov	 DWORD PTR [edi+48], eax
  0005f	8a 46 34	 mov	 al, BYTE PTR [esi+52]
  00062	88 47 34	 mov	 BYTE PTR [edi+52], al
  00065	f2 0f 10 46 38	 movsd	 xmm0, QWORD PTR [esi+56]
  0006a	f2 0f 11 47 38	 movsd	 QWORD PTR [edi+56], xmm0
  0006f	f2 0f 10 46 40	 movsd	 xmm0, QWORD PTR [esi+64]
  00074	f2 0f 11 47 40	 movsd	 QWORD PTR [edi+64], xmm0
  00079	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  0007c	89 47 48	 mov	 DWORD PTR [edi+72], eax
  0007f	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  00082	89 47 4c	 mov	 DWORD PTR [edi+76], eax
  00085	8b 46 50	 mov	 eax, DWORD PTR [esi+80]
  00088	89 47 50	 mov	 DWORD PTR [edi+80], eax
  0008b	8b c7		 mov	 eax, edi
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c2 04 00	 ret	 4
??0CVerticalScale@@QAE@ABV0@@Z ENDP			; CVerticalScale::CVerticalScale
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1CVerticalScale@@QAE@XZ
_TEXT	SEGMENT
??1CVerticalScale@@QAE@XZ PROC				; CVerticalScale::~CVerticalScale, COMDAT
; _this$ = ecx
  00000	83 c1 04	 add	 ecx, 4
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
??1CVerticalScale@@QAE@XZ ENDP				; CVerticalScale::~CVerticalScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ScaleBaseData.h
;	COMDAT ?GetSpace@CVerticalScale@@QBEXAAH0@Z
_TEXT	SEGMENT
_p_nUpSpace$ = 8					; size = 4
_p_nDownSpace$ = 12					; size = 4
?GetSpace@CVerticalScale@@QBEXAAH0@Z PROC		; CVerticalScale::GetSpace, COMDAT
; _this$ = ecx

; 240  : 	void	GetSpace( int &p_nUpSpace, int &p_nDownSpace) const		{	p_nUpSpace = m_nUpSpace;	p_nDownSpace = m_nDownSpace;	}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p_nUpSpace$[ebp]
  00006	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  00009	89 10		 mov	 DWORD PTR [eax], edx
  0000b	8b 45 0c	 mov	 eax, DWORD PTR _p_nDownSpace$[ebp]
  0000e	8b 49 50	 mov	 ecx, DWORD PTR [ecx+80]
  00011	89 08		 mov	 DWORD PTR [eax], ecx
  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
?GetSpace@CVerticalScale@@QBEXAAH0@Z ENDP		; CVerticalScale::GetSpace
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ScaleBaseData.h
;	COMDAT ?SetSpace@CVerticalScale@@QAEXHH@Z
_TEXT	SEGMENT
_p_nUpSpace$ = 8					; size = 4
_p_nDownSpace$ = 12					; size = 4
?SetSpace@CVerticalScale@@QAEXHH@Z PROC			; CVerticalScale::SetSpace, COMDAT
; _this$ = ecx

; 239  : 	void	SetSpace( int p_nUpSpace, int p_nDownSpace)				{	m_nUpSpace = p_nUpSpace;	m_nDownSpace = p_nDownSpace;	}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p_nUpSpace$[ebp]
  00006	89 41 4c	 mov	 DWORD PTR [ecx+76], eax
  00009	8b 45 0c	 mov	 eax, DWORD PTR _p_nDownSpace$[ebp]
  0000c	89 41 50	 mov	 DWORD PTR [ecx+80], eax
  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
?SetSpace@CVerticalScale@@QAEXHH@Z ENDP			; CVerticalScale::SetSpace
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ScaleBaseData.h
;	COMDAT ?SetVertScaleInvertType@CVerticalScale@@QAEX_N@Z
_TEXT	SEGMENT
_bIsVertScaleInvertType$ = 8				; size = 1
?SetVertScaleInvertType@CVerticalScale@@QAEX_N@Z PROC	; CVerticalScale::SetVertScaleInvertType, COMDAT
; _this$ = ecx

; 232  : 	void	SetVertScaleInvertType(const bool bIsVertScaleInvertType)	{	m_bIsVertScaleInvertType = bIsVertScaleInvertType;	}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8a 45 08	 mov	 al, BYTE PTR _bIsVertScaleInvertType$[ebp]
  00006	88 41 34	 mov	 BYTE PTR [ecx+52], al
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetVertScaleInvertType@CVerticalScale@@QAEX_N@Z ENDP	; CVerticalScale::SetVertScaleInvertType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ScaleBaseData.h
;	COMDAT ?GetVertScaleInvertType@CVerticalScale@@QBE_NXZ
_TEXT	SEGMENT
?GetVertScaleInvertType@CVerticalScale@@QBE_NXZ PROC	; CVerticalScale::GetVertScaleInvertType, COMDAT
; _this$ = ecx

; 230  : 	bool	GetVertScaleInvertType() const								{	return m_bIsVertScaleInvertType;	}

  00000	8a 41 34	 mov	 al, BYTE PTR [ecx+52]
  00003	c3		 ret	 0
?GetVertScaleInvertType@CVerticalScale@@QBE_NXZ ENDP	; CVerticalScale::GetVertScaleInvertType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ScaleBaseData.h
;	COMDAT ?GetVertUserHogaScaleType@CVerticalScale@@QBEHXZ
_TEXT	SEGMENT
?GetVertUserHogaScaleType@CVerticalScale@@QBEHXZ PROC	; CVerticalScale::GetVertUserHogaScaleType, COMDAT
; _this$ = ecx

; 226  : 	int			GetVertUserHogaScaleType( void) const						{	return m_nUserHogaType;		}			

  00000	8b 41 48	 mov	 eax, DWORD PTR [ecx+72]
  00003	c3		 ret	 0
?GetVertUserHogaScaleType@CVerticalScale@@QBEHXZ ENDP	; CVerticalScale::GetVertUserHogaScaleType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ScaleBaseData.h
;	COMDAT ?GetVertScaleUserNumber@CVerticalScale@@QBENXZ
_TEXT	SEGMENT
?GetVertScaleUserNumber@CVerticalScale@@QBENXZ PROC	; CVerticalScale::GetVertScaleUserNumber, COMDAT
; _this$ = ecx

; 225  : 	double		GetVertScaleUserNumber( void) const						{	return m_dUserNumber;		}			

  00000	dd 41 38	 fld	 QWORD PTR [ecx+56]
  00003	c3		 ret	 0
?GetVertScaleUserNumber@CVerticalScale@@QBENXZ ENDP	; CVerticalScale::GetVertScaleUserNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ScaleBaseData.h
;	COMDAT ?GetVertScaleHoGaNumber@CVerticalScale@@QBENXZ
_TEXT	SEGMENT
?GetVertScaleHoGaNumber@CVerticalScale@@QBENXZ PROC	; CVerticalScale::GetVertScaleHoGaNumber, COMDAT
; _this$ = ecx

; 224  : 	double		GetVertScaleHoGaNumber( void) const						{	return m_dHogaNumber;		}			

  00000	dd 41 40	 fld	 QWORD PTR [ecx+64]
  00003	c3		 ret	 0
?GetVertScaleHoGaNumber@CVerticalScale@@QBENXZ ENDP	; CVerticalScale::GetVertScaleHoGaNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ScaleBaseData.h
;	COMDAT ?SetVertUserHogaScaleType@CVerticalScale@@QAEXH@Z
_TEXT	SEGMENT
_p_nUserHogaType$ = 8					; size = 4
?SetVertUserHogaScaleType@CVerticalScale@@QAEXH@Z PROC	; CVerticalScale::SetVertUserHogaScaleType, COMDAT
; _this$ = ecx

; 222  : 	void		SetVertUserHogaScaleType( int p_nUserHogaType)		{	m_nUserHogaType = p_nUserHogaType;	}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p_nUserHogaType$[ebp]
  00006	89 41 48	 mov	 DWORD PTR [ecx+72], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetVertUserHogaScaleType@CVerticalScale@@QAEXH@Z ENDP	; CVerticalScale::SetVertUserHogaScaleType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ScaleBaseData.h
;	COMDAT ?SetVertScaleUserNumber@CVerticalScale@@QAEXN@Z
_TEXT	SEGMENT
_p_dUserNumber$ = 8					; size = 8
?SetVertScaleUserNumber@CVerticalScale@@QAEXN@Z PROC	; CVerticalScale::SetVertScaleUserNumber, COMDAT
; _this$ = ecx

; 221  : 	void		SetVertScaleUserNumber( double p_dUserNumber)			{	m_dUserNumber = p_dUserNumber;	}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _p_dUserNumber$[ebp]
  00008	f2 0f 11 41 38	 movsd	 QWORD PTR [ecx+56], xmm0
  0000d	5d		 pop	 ebp
  0000e	c2 08 00	 ret	 8
?SetVertScaleUserNumber@CVerticalScale@@QAEXN@Z ENDP	; CVerticalScale::SetVertScaleUserNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ScaleBaseData.h
;	COMDAT ?SetVertScaleHoGaNumber@CVerticalScale@@QAEXN@Z
_TEXT	SEGMENT
_p_dHogaNumber$ = 8					; size = 8
?SetVertScaleHoGaNumber@CVerticalScale@@QAEXN@Z PROC	; CVerticalScale::SetVertScaleHoGaNumber, COMDAT
; _this$ = ecx

; 220  : 	void		SetVertScaleHoGaNumber( double p_dHogaNumber)			{	m_dHogaNumber = p_dHogaNumber;	}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _p_dHogaNumber$[ebp]
  00008	f2 0f 11 41 40	 movsd	 QWORD PTR [ecx+64], xmm0
  0000d	5d		 pop	 ebp
  0000e	c2 08 00	 ret	 8
?SetVertScaleHoGaNumber@CVerticalScale@@QAEXN@Z ENDP	; CVerticalScale::SetVertScaleHoGaNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ScaleBaseData.h
;	COMDAT ?SetVertScaleMax@CVerticalScale@@QAEXN@Z
_TEXT	SEGMENT
_p_dMax$ = 8						; size = 8
?SetVertScaleMax@CVerticalScale@@QAEXN@Z PROC		; CVerticalScale::SetVertScaleMax, COMDAT
; _this$ = ecx

; 211  : 	void							SetVertScaleMax( double p_dMax)											{	m_dMax = p_dMax;	}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _p_dMax$[ebp]
  00008	f2 0f 11 41 28	 movsd	 QWORD PTR [ecx+40], xmm0
  0000d	5d		 pop	 ebp
  0000e	c2 08 00	 ret	 8
?SetVertScaleMax@CVerticalScale@@QAEXN@Z ENDP		; CVerticalScale::SetVertScaleMax
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ScaleBaseData.h
;	COMDAT ?GetVertScaleMax@CVerticalScale@@QBENXZ
_TEXT	SEGMENT
?GetVertScaleMax@CVerticalScale@@QBENXZ PROC		; CVerticalScale::GetVertScaleMax, COMDAT
; _this$ = ecx

; 210  : 	double							GetVertScaleMax( void) const											{	return m_dMax;		}

  00000	dd 41 28	 fld	 QWORD PTR [ecx+40]
  00003	c3		 ret	 0
?GetVertScaleMax@CVerticalScale@@QBENXZ ENDP		; CVerticalScale::GetVertScaleMax
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ScaleBaseData.h
;	COMDAT ?SetVertScaleMin@CVerticalScale@@QAEXN@Z
_TEXT	SEGMENT
_p_dMin$ = 8						; size = 8
?SetVertScaleMin@CVerticalScale@@QAEXN@Z PROC		; CVerticalScale::SetVertScaleMin, COMDAT
; _this$ = ecx

; 208  : 	void							SetVertScaleMin( double p_dMin)											{	m_dMin = p_dMin;	}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _p_dMin$[ebp]
  00008	f2 0f 11 41 20	 movsd	 QWORD PTR [ecx+32], xmm0
  0000d	5d		 pop	 ebp
  0000e	c2 08 00	 ret	 8
?SetVertScaleMin@CVerticalScale@@QAEXN@Z ENDP		; CVerticalScale::SetVertScaleMin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ScaleBaseData.h
;	COMDAT ?GetVertScaleMin@CVerticalScale@@QBENXZ
_TEXT	SEGMENT
?GetVertScaleMin@CVerticalScale@@QBENXZ PROC		; CVerticalScale::GetVertScaleMin, COMDAT
; _this$ = ecx

; 207  : 	double							GetVertScaleMin( void) const											{	return m_dMin;		}			

  00000	dd 41 20	 fld	 QWORD PTR [ecx+32]
  00003	c3		 ret	 0
?GetVertScaleMin@CVerticalScale@@QBENXZ ENDP		; CVerticalScale::GetVertScaleMin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ScaleBaseData.h
;	COMDAT ?SetVertScaleMinMaxType@CVerticalScale@@QAEXW4VERTMINMAXTYPE@CScaleBaseData@@@Z
_TEXT	SEGMENT
_p_eMinMaxType$ = 8					; size = 4
?SetVertScaleMinMaxType@CVerticalScale@@QAEXW4VERTMINMAXTYPE@CScaleBaseData@@@Z PROC ; CVerticalScale::SetVertScaleMinMaxType, COMDAT
; _this$ = ecx

; 205  : 	void							SetVertScaleMinMaxType( CScaleBaseData::VERTMINMAXTYPE p_eMinMaxType) 	{	m_eMinMaxType = p_eMinMaxType;	}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p_eMinMaxType$[ebp]
  00006	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetVertScaleMinMaxType@CVerticalScale@@QAEXW4VERTMINMAXTYPE@CScaleBaseData@@@Z ENDP ; CVerticalScale::SetVertScaleMinMaxType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ScaleBaseData.h
;	COMDAT ?GetVertScaleMinMaxType@CVerticalScale@@QBE?AW4VERTMINMAXTYPE@CScaleBaseData@@XZ
_TEXT	SEGMENT
?GetVertScaleMinMaxType@CVerticalScale@@QBE?AW4VERTMINMAXTYPE@CScaleBaseData@@XZ PROC ; CVerticalScale::GetVertScaleMinMaxType, COMDAT
; _this$ = ecx

; 204  : 	CScaleBaseData::VERTMINMAXTYPE	GetVertScaleMinMaxType( void) const										{	return m_eMinMaxType;			}

  00000	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00003	c3		 ret	 0
?GetVertScaleMinMaxType@CVerticalScale@@QBE?AW4VERTMINMAXTYPE@CScaleBaseData@@XZ ENDP ; CVerticalScale::GetVertScaleMinMaxType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ScaleBaseData.h
;	COMDAT ?SetVertScaleMinMaxLock@CVerticalScale@@QAEXH@Z
_TEXT	SEGMENT
_p_bMinMaxLock$ = 8					; size = 4
?SetVertScaleMinMaxLock@CVerticalScale@@QAEXH@Z PROC	; CVerticalScale::SetVertScaleMinMaxLock, COMDAT
; _this$ = ecx

; 202  : 	void							SetVertScaleMinMaxLock( BOOL p_bMinMaxLock)								{	m_bMinMaxLock = p_bMinMaxLock;	}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p_bMinMaxLock$[ebp]
  00006	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetVertScaleMinMaxLock@CVerticalScale@@QAEXH@Z ENDP	; CVerticalScale::SetVertScaleMinMaxLock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ScaleBaseData.h
;	COMDAT ?IsVertScaleMinMaxLock@CVerticalScale@@QBEHXZ
_TEXT	SEGMENT
?IsVertScaleMinMaxLock@CVerticalScale@@QBEHXZ PROC	; CVerticalScale::IsVertScaleMinMaxLock, COMDAT
; _this$ = ecx

; 201  : 	BOOL							IsVertScaleMinMaxLock( void) const										{	return m_bMinMaxLock;			}

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00003	c3		 ret	 0
?IsVertScaleMinMaxLock@CVerticalScale@@QBEHXZ ENDP	; CVerticalScale::IsVertScaleMinMaxLock
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0CHorizontalScale@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
___that$ = 8						; size = 4
??0CHorizontalScale@@QAE@ABV0@@Z PROC			; CHorizontalScale::CHorizontalScale, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CHorizontalScale@@QAE@ABV0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx
  00028	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  0002b	8b 5d 08	 mov	 ebx, DWORD PTR ___that$[ebp]
  0002e	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00031	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CScale@@6B@
  00037	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0003a	50		 push	 eax
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00041	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00044	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00047	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CHorizontalScale@@6B@
  0004d	8d 7b 10	 lea	 edi, DWORD PTR [ebx+16]
  00050	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
  00053	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  00056	83 c6 10	 add	 esi, 16			; 00000010H
  00059	57		 push	 edi
  0005a	8b ce		 mov	 ecx, esi
  0005c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00063	89 75 08	 mov	 DWORD PTR _this$[ebp], esi
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0006c	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  0006f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00073	50		 push	 eax
  00074	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0007d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00083	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00086	8b 43 1c	 mov	 eax, DWORD PTR [ebx+28]
  00089	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
  0008c	8b 43 20	 mov	 eax, DWORD PTR [ebx+32]
  0008f	89 41 20	 mov	 DWORD PTR [ecx+32], eax
  00092	8b 43 24	 mov	 eax, DWORD PTR [ebx+36]
  00095	89 41 24	 mov	 DWORD PTR [ecx+36], eax
  00098	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  0009b	89 41 28	 mov	 DWORD PTR [ecx+40], eax
  0009e	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  000a1	89 41 2c	 mov	 DWORD PTR [ecx+44], eax
  000a4	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]
  000a7	89 41 30	 mov	 DWORD PTR [ecx+48], eax
  000aa	8b 43 34	 mov	 eax, DWORD PTR [ebx+52]
  000ad	89 41 34	 mov	 DWORD PTR [ecx+52], eax
  000b0	8b 43 38	 mov	 eax, DWORD PTR [ebx+56]
  000b3	89 41 38	 mov	 DWORD PTR [ecx+56], eax
  000b6	8b 43 3c	 mov	 eax, DWORD PTR [ebx+60]
  000b9	89 41 3c	 mov	 DWORD PTR [ecx+60], eax
  000bc	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
  000bf	89 41 40	 mov	 DWORD PTR [ecx+64], eax
  000c2	8b 43 44	 mov	 eax, DWORD PTR [ebx+68]
  000c5	89 41 44	 mov	 DWORD PTR [ecx+68], eax
  000c8	8b 43 48	 mov	 eax, DWORD PTR [ebx+72]
  000cb	89 41 48	 mov	 DWORD PTR [ecx+72], eax
  000ce	0f b7 43 4c	 movzx	 eax, WORD PTR [ebx+76]
  000d2	66 89 41 4c	 mov	 WORD PTR [ecx+76], ax
  000d6	0f b7 43 4e	 movzx	 eax, WORD PTR [ebx+78]
  000da	66 89 41 4e	 mov	 WORD PTR [ecx+78], ax
  000de	0f b7 43 50	 movzx	 eax, WORD PTR [ebx+80]
  000e2	66 89 41 50	 mov	 WORD PTR [ecx+80], ax
  000e6	0f b7 43 52	 movzx	 eax, WORD PTR [ebx+82]
  000ea	66 89 41 52	 mov	 WORD PTR [ecx+82], ax
  000ee	8b 43 54	 mov	 eax, DWORD PTR [ebx+84]
  000f1	89 41 54	 mov	 DWORD PTR [ecx+84], eax
  000f4	8b 43 58	 mov	 eax, DWORD PTR [ebx+88]
  000f7	89 41 58	 mov	 DWORD PTR [ecx+88], eax
  000fa	8b 43 5c	 mov	 eax, DWORD PTR [ebx+92]
  000fd	89 41 5c	 mov	 DWORD PTR [ecx+92], eax
  00100	8b 43 60	 mov	 eax, DWORD PTR [ebx+96]
  00103	89 41 60	 mov	 DWORD PTR [ecx+96], eax
  00106	8b c1		 mov	 eax, ecx
  00108	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0010b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00112	59		 pop	 ecx
  00113	5f		 pop	 edi
  00114	5e		 pop	 esi
  00115	5b		 pop	 ebx
  00116	8b e5		 mov	 esp, ebp
  00118	5d		 pop	 ebp
  00119	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CHorizontalScale@@QAE@ABV0@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CScale@@QAE@XZ
__unwindfunclet$??0CHorizontalScale@@QAE@ABV0@@Z$3:
  00008	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
__ehhandler$??0CHorizontalScale@@QAE@ABV0@@Z:
  00016	90		 npad	 1
  00017	90		 npad	 1
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CHorizontalScale@@QAE@ABV0@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CHorizontalScale@@QAE@ABV0@@Z ENDP			; CHorizontalScale::CHorizontalScale
; Function compile flags: /Ogtp
;	COMDAT ??1CHorizontalScale@@QAE@XZ
_TEXT	SEGMENT
??1CHorizontalScale@@QAE@XZ PROC			; CHorizontalScale::~CHorizontalScale, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
  00004	8d 4f 14	 lea	 ecx, DWORD PTR [edi+20]
  00007	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000d	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00016	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
??1CHorizontalScale@@QAE@XZ ENDP			; CHorizontalScale::~CHorizontalScale
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0CScale@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CScale@@QAE@ABV0@@Z PROC				; CScale::CScale, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
  0000b	89 7d fc	 mov	 DWORD PTR _this$[ebp], edi
  0000e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00011	50		 push	 eax
  00012	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00015	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CScale@@6B@
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00021	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00024	89 47 08	 mov	 DWORD PTR [edi+8], eax
  00027	8b c7		 mov	 eax, edi
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
??0CScale@@QAE@ABV0@@Z ENDP				; CScale::CScale
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1CScale@@QAE@XZ
_TEXT	SEGMENT
??1CScale@@QAE@XZ PROC					; CScale::~CScale, COMDAT
; _this$ = ecx
  00000	83 c1 04	 add	 ecx, 4
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
??1CScale@@QAE@XZ ENDP					; CScale::~CScale
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0CScaleCompart@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0CScaleCompart@@QAE@ABV0@@Z PROC			; CScaleCompart::CScaleCompart, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CScaleCompart@@QAE@ABV0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  0002a	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0002d	56		 push	 esi
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00034	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003e	50		 push	 eax
  0003f	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00048	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0004b	89 47 08	 mov	 DWORD PTR [edi+8], eax
  0004e	8b c7		 mov	 eax, edi
  00050	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00053	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005a	59		 pop	 ecx
  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CScaleCompart@@QAE@ABV0@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
__ehhandler$??0CScaleCompart@@QAE@ABV0@@Z:
  0000e	90		 npad	 1
  0000f	90		 npad	 1
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CScaleCompart@@QAE@ABV0@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CScaleCompart@@QAE@ABV0@@Z ENDP			; CScaleCompart::CScaleCompart
; Function compile flags: /Ogtp
;	COMDAT ??1CScaleCompart@@QAE@XZ
_TEXT	SEGMENT
??1CScaleCompart@@QAE@XZ PROC				; CScaleCompart::~CScaleCompart, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000c	8b ce		 mov	 ecx, esi
  0000e	5e		 pop	 esi
  0000f	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
??1CScaleCompart@@QAE@XZ ENDP				; CScaleCompart::~CScaleCompart
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ScaleDraw\ScaleRegion.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\ScaleDraw\ScaleRegion.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
