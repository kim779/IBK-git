; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\ChartObject\ViewData.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1CObject@@UAE@XZ				; CObject::~CObject
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	??4CSubGraphViewData@@QAEAAV0@ABV0@@Z		; CSubGraphViewData::operator=
PUBLIC	??0CSubGraphViewData@@QAE@XZ			; CSubGraphViewData::CSubGraphViewData
PUBLIC	??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@2@Z ; CSubGraphViewData::CSubGraphViewData
PUBLIC	??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@22@Z ; CSubGraphViewData::CSubGraphViewData
PUBLIC	?GetGraphType@CSubGraphViewData@@QBE?AW4GRAPHTYPE@CGraphBaseData@@XZ ; CSubGraphViewData::GetGraphType
PUBLIC	?GetGraphStyle@CSubGraphViewData@@QBE?AVCGraphStyle@@XZ ; CSubGraphViewData::GetGraphStyle
PUBLIC	?GetTitle@CSubGraphViewData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CSubGraphViewData::GetTitle
PUBLIC	?GetPacketNames@CSubGraphViewData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CSubGraphViewData::GetPacketNames
PUBLIC	?GetRQ@CSubGraphViewData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CSubGraphViewData::GetRQ
PUBLIC	??1CSubGraphViewData@@QAE@XZ			; CSubGraphViewData::~CSubGraphViewData
PUBLIC	??4CSubGraphViewDataList@@QAEAAV0@ABV0@@Z	; CSubGraphViewDataList::operator=
PUBLIC	?AddTail@CSubGraphViewDataList@@QAEXVCSubGraphViewData@@@Z ; CSubGraphViewDataList::AddTail
PUBLIC	?RemoveAll@CSubGraphViewDataList@@QAEXXZ	; CSubGraphViewDataList::RemoveAll
PUBLIC	?GetSubGraphViewDataList@CSubGraphViewDataList@@QAEAAV?$CList@VCSubGraphViewData@@AAV1@@@XZ ; CSubGraphViewDataList::GetSubGraphViewDataList
PUBLIC	?GetSubGraphViewDataList@CSubGraphViewDataList@@QBEABV?$CList@VCSubGraphViewData@@AAV1@@@XZ ; CSubGraphViewDataList::GetSubGraphViewDataList
PUBLIC	?GetHeadPosition@CSubGraphViewDataList@@QBEPAU__POSITION@@XZ ; CSubGraphViewDataList::GetHeadPosition
PUBLIC	?GetNext@CSubGraphViewDataList@@QAEAAVCSubGraphViewData@@AAPAU__POSITION@@@Z ; CSubGraphViewDataList::GetNext
PUBLIC	?GetAt@CSubGraphViewDataList@@QAEAAVCSubGraphViewData@@H@Z ; CSubGraphViewDataList::GetAt
PUBLIC	?GetAt@CSubGraphViewDataList@@QBE?AVCSubGraphViewData@@H@Z ; CSubGraphViewDataList::GetAt
PUBLIC	?GetCount@CSubGraphViewDataList@@QBEHXZ		; CSubGraphViewDataList::GetCount
PUBLIC	??0?$CList@VCSubGraphViewData@@AAV1@@@QAE@H@Z	; CList<CSubGraphViewData,CSubGraphViewData &>::CList<CSubGraphViewData,CSubGraphViewData &>
PUBLIC	?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z ; CList<CSubGraphViewData,CSubGraphViewData &>::AddTail
PUBLIC	?RemoveAll@?$CList@VCSubGraphViewData@@AAV1@@@QAEXXZ ; CList<CSubGraphViewData,CSubGraphViewData &>::RemoveAll
PUBLIC	?FindIndex@?$CList@VCSubGraphViewData@@AAV1@@@QBEPAU__POSITION@@H@Z ; CList<CSubGraphViewData,CSubGraphViewData &>::FindIndex
PUBLIC	?NewNode@?$CList@VCSubGraphViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z ; CList<CSubGraphViewData,CSubGraphViewData &>::NewNode
PUBLIC	??1?$CList@VCSubGraphViewData@@AAV1@@@UAE@XZ	; CList<CSubGraphViewData,CSubGraphViewData &>::~CList<CSubGraphViewData,CSubGraphViewData &>
PUBLIC	?Serialize@?$CList@VCSubGraphViewData@@AAV1@@@UAEXAAVCArchive@@@Z ; CList<CSubGraphViewData,CSubGraphViewData &>::Serialize
PUBLIC	??_G?$CList@VCSubGraphViewData@@AAV1@@@UAEPAXI@Z ; CList<CSubGraphViewData,CSubGraphViewData &>::`scalar deleting destructor'
PUBLIC	??1CSubGraphViewDataList@@QAE@XZ		; CSubGraphViewDataList::~CSubGraphViewDataList
PUBLIC	??4CRowViewData@@QAEAAV0@ABV0@@Z		; CRowViewData::operator=
PUBLIC	??0CRowViewData@@QAE@XZ				; CRowViewData::CRowViewData
PUBLIC	??0CRowViewData@@QAE@ABV0@@Z			; CRowViewData::CRowViewData
PUBLIC	?RemoveAll@CRowViewData@@QAEXXZ			; CRowViewData::RemoveAll
PUBLIC	?SetRegion@CRowViewData@@QAEXABVCRect@@0@Z	; CRowViewData::SetRegion
PUBLIC	?SetHorzScaleName@CRowViewData@@QAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CRowViewData::SetHorzScaleName
PUBLIC	?GetGraphRegion@CRowViewData@@QBE?AVCRect@@XZ	; CRowViewData::GetGraphRegion
PUBLIC	?GetDrawingGraphRegion@CRowViewData@@QBE?AVCRect@@XZ ; CRowViewData::GetDrawingGraphRegion
PUBLIC	?GetHorzScaleName@CRowViewData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CRowViewData::GetHorzScaleName
PUBLIC	?GetSubGraphViewDataList@CRowViewData@@QAEAAVCSubGraphViewDataList@@XZ ; CRowViewData::GetSubGraphViewDataList
PUBLIC	?GetSubGraphViewDataList@CRowViewData@@QBEABVCSubGraphViewDataList@@XZ ; CRowViewData::GetSubGraphViewDataList
PUBLIC	?GetSubGraphViewDataCount@CRowViewData@@QBEHXZ	; CRowViewData::GetSubGraphViewDataCount
PUBLIC	?GetSubGraphViewData@CRowViewData@@QAEAAVCSubGraphViewData@@H@Z ; CRowViewData::GetSubGraphViewData
PUBLIC	??1CRowViewData@@QAE@XZ				; CRowViewData::~CRowViewData
PUBLIC	??4CColumnViewData@@QAEAAV0@ABV0@@Z		; CColumnViewData::operator=
PUBLIC	??0CColumnViewData@@QAE@XZ			; CColumnViewData::CColumnViewData
PUBLIC	??0CColumnViewData@@QAE@ABV0@@Z			; CColumnViewData::CColumnViewData
PUBLIC	?AddTail@CColumnViewData@@QAEXVCRowViewData@@@Z	; CColumnViewData::AddTail
PUBLIC	?RemoveAll@CColumnViewData@@QAEXXZ		; CColumnViewData::RemoveAll
PUBLIC	?GetRowViewDataList@CColumnViewData@@QBEABV?$CList@VCRowViewData@@AAV1@@@XZ ; CColumnViewData::GetRowViewDataList
PUBLIC	?GetRowViewDataList@CColumnViewData@@QAEAAV?$CList@VCRowViewData@@AAV1@@@XZ ; CColumnViewData::GetRowViewDataList
PUBLIC	?GetAt@CColumnViewData@@QAEAAVCRowViewData@@H@Z	; CColumnViewData::GetAt
PUBLIC	?GetAt@CColumnViewData@@QBE?AVCRowViewData@@H@Z	; CColumnViewData::GetAt
PUBLIC	?GetAt@CColumnViewData@@QAE_NHAAVCRowViewData@@@Z ; CColumnViewData::GetAt
PUBLIC	?GetCount@CColumnViewData@@QBEHXZ		; CColumnViewData::GetCount
PUBLIC	??0?$CList@VCRowViewData@@AAV1@@@QAE@H@Z	; CList<CRowViewData,CRowViewData &>::CList<CRowViewData,CRowViewData &>
PUBLIC	?AddTail@?$CList@VCRowViewData@@AAV1@@@QAEPAU__POSITION@@AAVCRowViewData@@@Z ; CList<CRowViewData,CRowViewData &>::AddTail
PUBLIC	?RemoveAll@?$CList@VCRowViewData@@AAV1@@@QAEXXZ	; CList<CRowViewData,CRowViewData &>::RemoveAll
PUBLIC	?FindIndex@?$CList@VCRowViewData@@AAV1@@@QBEPAU__POSITION@@H@Z ; CList<CRowViewData,CRowViewData &>::FindIndex
PUBLIC	?NewNode@?$CList@VCRowViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z ; CList<CRowViewData,CRowViewData &>::NewNode
PUBLIC	??1?$CList@VCRowViewData@@AAV1@@@UAE@XZ		; CList<CRowViewData,CRowViewData &>::~CList<CRowViewData,CRowViewData &>
PUBLIC	?Serialize@?$CList@VCRowViewData@@AAV1@@@UAEXAAVCArchive@@@Z ; CList<CRowViewData,CRowViewData &>::Serialize
PUBLIC	??_G?$CList@VCRowViewData@@AAV1@@@UAEPAXI@Z	; CList<CRowViewData,CRowViewData &>::`scalar deleting destructor'
PUBLIC	??1CColumnViewData@@QAE@XZ			; CColumnViewData::~CColumnViewData
PUBLIC	?AddTail@CViewData@@QAEXVCColumnViewData@@@Z	; CViewData::AddTail
PUBLIC	?RemoveAll@CViewData@@QAEXXZ			; CViewData::RemoveAll
PUBLIC	?GetAt@CViewData@@QAEAAVCColumnViewData@@H@Z	; CViewData::GetAt
PUBLIC	?GetAt@CViewData@@QBE?AVCColumnViewData@@H@Z	; CViewData::GetAt
PUBLIC	?GetAt@CViewData@@QAEAAVCRowViewData@@HH@Z	; CViewData::GetAt
PUBLIC	?GetAt@CViewData@@QAE_NHAAVCColumnViewData@@@Z	; CViewData::GetAt
PUBLIC	?GetAt@CViewData@@QAE_NHHAAVCRowViewData@@@Z	; CViewData::GetAt
PUBLIC	?GetColumnViewDataList@CViewData@@QAEAAV?$CList@VCColumnViewData@@AAV1@@@XZ ; CViewData::GetColumnViewDataList
PUBLIC	?GetColumnViewDataCount@CViewData@@QBEHXZ	; CViewData::GetColumnViewDataCount
PUBLIC	?GetRowViewDataCount@CViewData@@QBEHH@Z		; CViewData::GetRowViewDataCount
PUBLIC	?AddTail@?$CList@VCColumnViewData@@AAV1@@@QAEPAU__POSITION@@AAVCColumnViewData@@@Z ; CList<CColumnViewData,CColumnViewData &>::AddTail
PUBLIC	?RemoveAll@?$CList@VCColumnViewData@@AAV1@@@QAEXXZ ; CList<CColumnViewData,CColumnViewData &>::RemoveAll
PUBLIC	?FindIndex@?$CList@VCColumnViewData@@AAV1@@@QBEPAU__POSITION@@H@Z ; CList<CColumnViewData,CColumnViewData &>::FindIndex
PUBLIC	?NewNode@?$CList@VCColumnViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z ; CList<CColumnViewData,CColumnViewData &>::NewNode
PUBLIC	??$SerializeElements@VCSubGraphViewData@@@@YGXAAVCArchive@@PAVCSubGraphViewData@@H@Z ; SerializeElements<CSubGraphViewData>
PUBLIC	??$SerializeElements@VCRowViewData@@@@YGXAAVCArchive@@PAVCRowViewData@@H@Z ; SerializeElements<CRowViewData>
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CList@VCSubGraphViewData@@AAV1@@@6B@	; CList<CSubGraphViewData,CSubGraphViewData &>::`vftable'
PUBLIC	??_7?$CList@VCRowViewData@@AAV1@@@6B@		; CList<CRowViewData,CRowViewData &>::`vftable'
PUBLIC	??_C@_07MGCPDNLD@DEFAULT@			; `string'
PUBLIC	??_R4?$CList@VCSubGraphViewData@@AAV1@@@6B@	; CList<CSubGraphViewData,CSubGraphViewData &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CList@VCSubGraphViewData@@AAV1@@@@8	; CList<CSubGraphViewData,CSubGraphViewData &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CList@VCSubGraphViewData@@AAV1@@@8	; CList<CSubGraphViewData,CSubGraphViewData &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CList@VCSubGraphViewData@@AAV1@@@8	; CList<CSubGraphViewData,CSubGraphViewData &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CList@VCSubGraphViewData@@AAV1@@@8 ; CList<CSubGraphViewData,CSubGraphViewData &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CList@VCRowViewData@@AAV1@@@6B@		; CList<CRowViewData,CRowViewData &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CList@VCRowViewData@@AAV1@@@@8	; CList<CRowViewData,CRowViewData &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CList@VCRowViewData@@AAV1@@@8		; CList<CRowViewData,CRowViewData &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CList@VCRowViewData@@AAV1@@@8		; CList<CRowViewData,CRowViewData &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CList@VCRowViewData@@AAV1@@@8	; CList<CRowViewData,CRowViewData &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_L@YGXPAXIIP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	___std_terminate:PROC
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?AfxThrowArchiveException@@YGXHPBD@Z:PROC	; AfxThrowArchiveException
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CObject::GetRuntimeClass
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z:PROC
EXTRN	?Read@CArchive@@QAEIPAXI@Z:PROC			; CArchive::Read
EXTRN	?Write@CArchive@@QAEXPBXI@Z:PROC		; CArchive::Write
EXTRN	?ReadCount@CArchive@@QAEKXZ:PROC		; CArchive::ReadCount
EXTRN	?WriteCount@CArchive@@QAEXK@Z:PROC		; CArchive::WriteCount
EXTRN	?Create@CPlex@@SGPAU1@AAPAU1@II@Z:PROC		; CPlex::Create
EXTRN	?FreeDataChain@CPlex@@QAEXXZ:PROC		; CPlex::FreeDataChain
EXTRN	??_E?$CList@VCSubGraphViewData@@AAV1@@@UAEPAXI@Z:PROC ; CList<CSubGraphViewData,CSubGraphViewData &>::`vector deleting destructor'
EXTRN	??_E?$CList@VCRowViewData@@AAV1@@@UAEPAXI@Z:PROC ; CList<CRowViewData,CRowViewData &>::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@?$CList@VCRowViewData@@AAV1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CList@VCRowViewData@@AAV1@@@8 DD FLAT:??_R0?AV?$CList@VCRowViewData@@AAV1@@@@8 ; CList<CRowViewData,CRowViewData &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CList@VCRowViewData@@AAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CList@VCRowViewData@@AAV1@@@8
rdata$r	SEGMENT
??_R2?$CList@VCRowViewData@@AAV1@@@8 DD FLAT:??_R1A@?0A@EA@?$CList@VCRowViewData@@AAV1@@@8 ; CList<CRowViewData,CRowViewData &>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CList@VCRowViewData@@AAV1@@@8
rdata$r	SEGMENT
??_R3?$CList@VCRowViewData@@AAV1@@@8 DD 00H		; CList<CRowViewData,CRowViewData &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CList@VCRowViewData@@AAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CList@VCRowViewData@@AAV1@@@@8
data$rs	SEGMENT
??_R0?AV?$CList@VCRowViewData@@AAV1@@@@8 DD FLAT:??_7type_info@@6B@ ; CList<CRowViewData,CRowViewData &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CList@VCRowViewData@@AAV1@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CList@VCRowViewData@@AAV1@@@6B@
rdata$r	SEGMENT
??_R4?$CList@VCRowViewData@@AAV1@@@6B@ DD 00H		; CList<CRowViewData,CRowViewData &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CList@VCRowViewData@@AAV1@@@@8
	DD	FLAT:??_R3?$CList@VCRowViewData@@AAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CList@VCSubGraphViewData@@AAV1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CList@VCSubGraphViewData@@AAV1@@@8 DD FLAT:??_R0?AV?$CList@VCSubGraphViewData@@AAV1@@@@8 ; CList<CSubGraphViewData,CSubGraphViewData &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CList@VCSubGraphViewData@@AAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CList@VCSubGraphViewData@@AAV1@@@8
rdata$r	SEGMENT
??_R2?$CList@VCSubGraphViewData@@AAV1@@@8 DD FLAT:??_R1A@?0A@EA@?$CList@VCSubGraphViewData@@AAV1@@@8 ; CList<CSubGraphViewData,CSubGraphViewData &>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CList@VCSubGraphViewData@@AAV1@@@8
rdata$r	SEGMENT
??_R3?$CList@VCSubGraphViewData@@AAV1@@@8 DD 00H	; CList<CSubGraphViewData,CSubGraphViewData &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CList@VCSubGraphViewData@@AAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CList@VCSubGraphViewData@@AAV1@@@@8
data$rs	SEGMENT
??_R0?AV?$CList@VCSubGraphViewData@@AAV1@@@@8 DD FLAT:??_7type_info@@6B@ ; CList<CSubGraphViewData,CSubGraphViewData &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CList@VCSubGraphViewData@@AAV1@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CList@VCSubGraphViewData@@AAV1@@@6B@
rdata$r	SEGMENT
??_R4?$CList@VCSubGraphViewData@@AAV1@@@6B@ DD 00H	; CList<CSubGraphViewData,CSubGraphViewData &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CList@VCSubGraphViewData@@AAV1@@@@8
	DD	FLAT:??_R3?$CList@VCSubGraphViewData@@AAV1@@@8
rdata$r	ENDS
;	COMDAT ??_C@_07MGCPDNLD@DEFAULT@
CONST	SEGMENT
??_C@_07MGCPDNLD@DEFAULT@ DB 'DEFAULT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7?$CList@VCRowViewData@@AAV1@@@6B@
CONST	SEGMENT
??_7?$CList@VCRowViewData@@AAV1@@@6B@ DD FLAT:??_R4?$CList@VCRowViewData@@AAV1@@@6B@ ; CList<CRowViewData,CRowViewData &>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CList@VCRowViewData@@AAV1@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CList@VCRowViewData@@AAV1@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7?$CList@VCSubGraphViewData@@AAV1@@@6B@
CONST	SEGMENT
??_7?$CList@VCSubGraphViewData@@AAV1@@@6B@ DD FLAT:??_R4?$CList@VCSubGraphViewData@@AAV1@@@6B@ ; CList<CSubGraphViewData,CSubGraphViewData &>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CList@VCSubGraphViewData@@AAV1@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CList@VCSubGraphViewData@@AAV1@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$rs	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$rs	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RemoveAll@?$CList@VCColumnViewData@@AAV1@@@QAEXXZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?RemoveAll@?$CList@VCColumnViewData@@AAV1@@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RemoveAll@?$CList@VCColumnViewData@@AAV1@@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetRowViewDataCount@CViewData@@QBEHH@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?GetRowViewDataCount@CViewData@@QBEHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetRowViewDataCount@CViewData@@QBEHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GetAt@CViewData@@QAE_NHHAAVCRowViewData@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?GetAt@CViewData@@QAE_NHHAAVCRowViewData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GetAt@CViewData@@QAE_NHHAAVCRowViewData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetAt@CViewData@@QAE_NHHAAVCRowViewData@@@Z$0
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	03H
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddTail@CViewData@@QAEXVCColumnViewData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddTail@CViewData@@QAEXVCColumnViewData@@@Z$0
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?AddTail@CViewData@@QAEXVCColumnViewData@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AddTail@CViewData@@QAEXVCColumnViewData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GCColumnViewData@@QAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_GCColumnViewData@@QAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_GCColumnViewData@@QAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CColumnViewData@@QAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1CColumnViewData@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CColumnViewData@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CList@VCRowViewData@@AAV1@@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CList@VCRowViewData@@AAV1@@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$CList@VCRowViewData@@AAV1@@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Serialize@?$CList@VCRowViewData@@AAV1@@@UAEXAAVCArchive@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Serialize@?$CList@VCRowViewData@@AAV1@@@UAEXAAVCArchive@@@Z$0
__ehfuncinfo$?Serialize@?$CList@VCRowViewData@@AAV1@@@UAEXAAVCArchive@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Serialize@?$CList@VCRowViewData@@AAV1@@@UAEXAAVCArchive@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CList@VCRowViewData@@AAV1@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RemoveAll@?$CList@VCRowViewData@@AAV1@@@QAEXXZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?RemoveAll@?$CList@VCRowViewData@@AAV1@@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RemoveAll@?$CList@VCRowViewData@@AAV1@@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetAt@CColumnViewData@@QBE?AVCRowViewData@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetAt@CColumnViewData@@QBE?AVCRowViewData@@H@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetAt@CColumnViewData@@QBE?AVCRowViewData@@H@Z$2
__ehfuncinfo$?GetAt@CColumnViewData@@QBE?AVCRowViewData@@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetAt@CColumnViewData@@QBE?AVCRowViewData@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddTail@CColumnViewData@@QAEXVCRowViewData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddTail@CColumnViewData@@QAEXVCRowViewData@@@Z$0
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?AddTail@CColumnViewData@@QAEXVCRowViewData@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AddTail@CColumnViewData@@QAEXVCRowViewData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CColumnViewData@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CColumnViewData@@QAE@ABV0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CColumnViewData@@QAE@ABV0@@Z$1
	DD	00H
	DD	FLAT:___std_terminate
__ehfuncinfo$??0CColumnViewData@@QAE@ABV0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CColumnViewData@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4CColumnViewData@@QAEAAV0@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4CColumnViewData@@QAEAAV0@ABV0@@Z$0
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??4CColumnViewData@@QAEAAV0@ABV0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??4CColumnViewData@@QAEAAV0@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GCRowViewData@@QAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_GCRowViewData@@QAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_GCRowViewData@@QAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CRowViewData@@QAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1CRowViewData@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CRowViewData@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CRowViewData@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CRowViewData@@QAE@ABV0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CRowViewData@@QAE@ABV0@@Z$1
__ehfuncinfo$??0CRowViewData@@QAE@ABV0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CRowViewData@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4CRowViewData@@QAEAAV0@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4CRowViewData@@QAEAAV0@ABV0@@Z$0
__ehfuncinfo$??4CRowViewData@@QAEAAV0@ABV0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4CRowViewData@@QAEAAV0@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CSubGraphViewDataList@@QAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1CSubGraphViewDataList@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CSubGraphViewDataList@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CList@VCSubGraphViewData@@AAV1@@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CList@VCSubGraphViewData@@AAV1@@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$CList@VCSubGraphViewData@@AAV1@@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Serialize@?$CList@VCSubGraphViewData@@AAV1@@@UAEXAAVCArchive@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Serialize@?$CList@VCSubGraphViewData@@AAV1@@@UAEXAAVCArchive@@@Z$0
__ehfuncinfo$?Serialize@?$CList@VCSubGraphViewData@@AAV1@@@UAEXAAVCArchive@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Serialize@?$CList@VCSubGraphViewData@@AAV1@@@UAEXAAVCArchive@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CList@VCSubGraphViewData@@AAV1@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?NewNode@?$CList@VCSubGraphViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?NewNode@?$CList@VCSubGraphViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?NewNode@?$CList@VCSubGraphViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z$1
__ehfuncinfo$?NewNode@?$CList@VCSubGraphViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?NewNode@?$CList@VCSubGraphViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetAt@CSubGraphViewDataList@@QBE?AVCSubGraphViewData@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetAt@CSubGraphViewDataList@@QBE?AVCSubGraphViewData@@H@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetAt@CSubGraphViewDataList@@QBE?AVCSubGraphViewData@@H@Z$2
__ehfuncinfo$?GetAt@CSubGraphViewDataList@@QBE?AVCSubGraphViewData@@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetAt@CSubGraphViewDataList@@QBE?AVCSubGraphViewData@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddTail@CSubGraphViewDataList@@QAEXVCSubGraphViewData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddTail@CSubGraphViewDataList@@QAEXVCSubGraphViewData@@@Z$0
__ehfuncinfo$?AddTail@CSubGraphViewDataList@@QAEXVCSubGraphViewData@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddTail@CSubGraphViewDataList@@QAEXVCSubGraphViewData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4CSubGraphViewDataList@@QAEAAV0@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4CSubGraphViewDataList@@QAEAAV0@ABV0@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??4CSubGraphViewDataList@@QAEAAV0@ABV0@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??4CSubGraphViewDataList@@QAEAAV0@ABV0@@Z$0
__ehfuncinfo$??4CSubGraphViewDataList@@QAEAAV0@ABV0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??4CSubGraphViewDataList@@QAEAAV0@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CSubGraphViewData@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CSubGraphViewData@@QAE@ABV0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CSubGraphViewData@@QAE@ABV0@@Z$1
__ehfuncinfo$??0CSubGraphViewData@@QAE@ABV0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CSubGraphViewData@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@22@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@22@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@22@Z$1
__ehfuncinfo$??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@22@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@22@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@2@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@2@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@2@Z$1
__ehfuncinfo$??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@2@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@2@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CSubGraphViewData@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CSubGraphViewData@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CSubGraphViewData@@QAE@XZ$1
__ehfuncinfo$??0CSubGraphViewData@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CSubGraphViewData@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4CSubGraphViewData@@QAEAAV0@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4CSubGraphViewData@@QAEAAV0@ABV0@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??4CSubGraphViewData@@QAEAAV0@ABV0@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??4CSubGraphViewData@@QAEAAV0@ABV0@@Z$2
__ehfuncinfo$??4CSubGraphViewData@@QAEAAV0@ABV0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??4CSubGraphViewData@@QAEAAV0@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@VCRowViewData@@@@YGXAAVCArchive@@PAVCRowViewData@@H@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@VCRowViewData@@@@YGXAAVCArchive@@PAVCRowViewData@@H@Z PROC ; SerializeElements<CRowViewData>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b 75 10	 mov	 esi, DWORD PTR _nCount$[ebp]
  0000b	57		 push	 edi
  0000c	85 f6		 test	 esi, esi
  0000e	74 04		 je	 SHORT $LN2@SerializeE
  00010	85 c9		 test	 ecx, ecx
  00012	74 7d		 je	 SHORT $LN34@SerializeE
$LN2@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00014	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00017	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0001a	f7 d0		 not	 eax
  0001c	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  0001e	74 32		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;
; 79   : 		pData = pElements;
; 80   : 		while( nElementsLeft > 0 )

  00020	85 f6		 test	 esi, esi
  00022	74 27		 je	 SHORT $LN8@SerializeE
$LL5@SerializeE:

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00024	bb ff ff ff 01	 mov	 ebx, 33554431		; 01ffffffH
  00029	3b f3		 cmp	 esi, ebx
  0002b	0f 42 de	 cmovb	 ebx, esi

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0002e	8b fb		 mov	 edi, ebx
  00030	c1 e7 06	 shl	 edi, 6
  00033	57		 push	 edi
  00034	51		 push	 ecx
  00035	8b ca		 mov	 ecx, edx
  00037	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;
; 87   : 			pData += nElementsToWrite;

  0003c	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  0003f	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00042	03 cf		 add	 ecx, edi
  00044	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  00047	2b f3		 sub	 esi, ebx
  00049	75 d9		 jne	 SHORT $LL5@SerializeE
$LN8@SerializeE:
  0004b	5f		 pop	 edi

; 105  : 		}
; 106  : 	}
; 107  : }

  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	5d		 pop	 ebp
  0004f	c2 0c 00	 ret	 12			; 0000000cH
$LN10@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  00052	85 f6		 test	 esi, esi
  00054	74 f5		 je	 SHORT $LN8@SerializeE
$LL7@SerializeE:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00056	bb ff ff ff 01	 mov	 ebx, 33554431		; 01ffffffH
  0005b	3b f3		 cmp	 esi, ebx
  0005d	0f 42 de	 cmovb	 ebx, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00060	8b fb		 mov	 edi, ebx
  00062	c1 e7 06	 shl	 edi, 6
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00065	57		 push	 edi
  00066	51		 push	 ecx
  00067	8b ca		 mov	 ecx, edx
  00069	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0006e	3b c7		 cmp	 eax, edi
  00070	75 16		 jne	 SHORT $LN23@SerializeE
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  00072	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00075	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;
; 104  : 			pData += nElementsToRead;

  00078	03 cf		 add	 ecx, edi
  0007a	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  0007d	2b f3		 sub	 esi, ebx
  0007f	75 d5		 jne	 SHORT $LL7@SerializeE

; 105  : 		}
; 106  : 	}
; 107  : }

  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	5b		 pop	 ebx
  00084	5d		 pop	 ebp
  00085	c2 0c 00	 ret	 12			; 0000000cH
$LN23@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 402  : 		AfxThrowArchiveException(CArchiveException::endOfFile);

  00088	6a 00		 push	 0
  0008a	6a 03		 push	 3
  0008c	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN34@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00091	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN32@SerializeE:
  00096	cc		 int	 3
??$SerializeElements@VCRowViewData@@@@YGXAAVCArchive@@PAVCRowViewData@@H@Z ENDP ; SerializeElements<CRowViewData>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@VCSubGraphViewData@@@@YGXAAVCArchive@@PAVCSubGraphViewData@@H@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@VCSubGraphViewData@@@@YGXAAVCArchive@@PAVCSubGraphViewData@@H@Z PROC ; SerializeElements<CSubGraphViewData>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b 75 10	 mov	 esi, DWORD PTR _nCount$[ebp]
  0000b	57		 push	 edi
  0000c	85 f6		 test	 esi, esi
  0000e	74 08		 je	 SHORT $LN2@SerializeE
  00010	85 c9		 test	 ecx, ecx
  00012	0f 84 87 00 00
	00		 je	 $LN34@SerializeE
$LN2@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00018	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  0001b	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0001e	f7 d0		 not	 eax
  00020	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  00022	74 3b		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;
; 79   : 		pData = pElements;
; 80   : 		while( nElementsLeft > 0 )

  00024	85 f6		 test	 esi, esi
  00026	74 30		 je	 SHORT $LN8@SerializeE
  00028	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL5@SerializeE:

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00030	bb 66 66 66 06	 mov	 ebx, 107374182		; 06666666H
  00035	3b f3		 cmp	 esi, ebx
  00037	0f 42 de	 cmovb	 ebx, esi

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0003a	8d 3c 9b	 lea	 edi, DWORD PTR [ebx+ebx*4]
  0003d	c1 e7 02	 shl	 edi, 2
  00040	57		 push	 edi
  00041	51		 push	 ecx
  00042	8b ca		 mov	 ecx, edx
  00044	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;
; 87   : 			pData += nElementsToWrite;

  00049	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  0004c	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  0004f	03 cf		 add	 ecx, edi
  00051	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  00054	2b f3		 sub	 esi, ebx
  00056	75 d8		 jne	 SHORT $LL5@SerializeE
$LN8@SerializeE:
  00058	5f		 pop	 edi

; 105  : 		}
; 106  : 	}
; 107  : }

  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
$LN10@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  0005f	85 f6		 test	 esi, esi
  00061	74 f5		 je	 SHORT $LN8@SerializeE
$LL7@SerializeE:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00063	bf 66 66 66 06	 mov	 edi, 107374182		; 06666666H
  00068	3b f7		 cmp	 esi, edi
  0006a	0f 42 fe	 cmovb	 edi, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0006d	8d 1c bf	 lea	 ebx, DWORD PTR [edi+edi*4]
  00070	c1 e3 02	 shl	 ebx, 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00073	53		 push	 ebx
  00074	51		 push	 ecx
  00075	8b ca		 mov	 ecx, edx
  00077	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0007c	3b c3		 cmp	 eax, ebx
  0007e	75 16		 jne	 SHORT $LN23@SerializeE
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  00080	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00083	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;
; 104  : 			pData += nElementsToRead;

  00086	03 cb		 add	 ecx, ebx
  00088	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  0008b	2b f7		 sub	 esi, edi
  0008d	75 d4		 jne	 SHORT $LL7@SerializeE

; 105  : 		}
; 106  : 	}
; 107  : }

  0008f	5f		 pop	 edi
  00090	5e		 pop	 esi
  00091	5b		 pop	 ebx
  00092	5d		 pop	 ebp
  00093	c2 0c 00	 ret	 12			; 0000000cH
$LN23@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 402  : 		AfxThrowArchiveException(CArchiveException::endOfFile);

  00096	6a 00		 push	 0
  00098	6a 03		 push	 3
  0009a	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN34@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  0009f	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN32@SerializeE:
  000a4	cc		 int	 3
??$SerializeElements@VCSubGraphViewData@@@@YGXAAVCArchive@@PAVCSubGraphViewData@@H@Z ENDP ; SerializeElements<CSubGraphViewData>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?NewNode@?$CList@VCColumnViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z
_TEXT	SEGMENT
_pPrev$ = 8						; size = 4
_pNext$ = 12						; size = 4
?NewNode@?$CList@VCColumnViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z PROC ; CList<CColumnViewData,CColumnViewData &>::NewNode, COMDAT
; _this$ = ecx

; 901  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 902  : 	if (m_pNodeFree == NULL)

  00006	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0000a	75 34		 jne	 SHORT $LN7@NewNode

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  0000c	6a 24		 push	 36			; 00000024H
  0000e	ff 76 18	 push	 DWORD PTR [esi+24]
  00011	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  0001a	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  0001d	83 c0 08	 add	 eax, 8
  00020	8d 0c d2	 lea	 ecx, DWORD PTR [edx+edx*8]
  00023	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00026	83 c0 dc	 add	 eax, -36		; ffffffdcH

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  00029	83 c2 ff	 add	 edx, -1
  0002c	78 12		 js	 SHORT $LN7@NewNode
  0002e	66 90		 npad	 2
$LL4@NewNode:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00030	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00033	89 08		 mov	 DWORD PTR [eax], ecx

; 915  : 			m_pNodeFree = pNode;

  00035	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00038	83 e8 24	 sub	 eax, 36			; 00000024H
  0003b	83 ea 01	 sub	 edx, 1
  0003e	79 f0		 jns	 SHORT $LL4@NewNode
$LN7@NewNode:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	85 c9		 test	 ecx, ecx
  00045	74 4b		 je	 SHORT $LN21@NewNode

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  00047	8b 01		 mov	 eax, DWORD PTR [ecx]
  00049	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 922  : 	pNode->pPrev = pPrev;

  0004c	8b 45 08	 mov	 eax, DWORD PTR _pPrev$[ebp]
  0004f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 923  : 	pNode->pNext = pNext;

  00052	8b 45 0c	 mov	 eax, DWORD PTR _pNext$[ebp]
  00055	89 01		 mov	 DWORD PTR [ecx], eax

; 924  : 	m_nCount++;
; 925  : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 926  : 
; 927  : #pragma push_macro("new")
; 928  : #undef new
; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;
; 930  : #pragma pop_macro("new")
; 931  : 	return pNode;

  00057	8b c1		 mov	 eax, ecx
  00059	ff 46 0c	 inc	 DWORD PTR [esi+12]

; 851  : {

  0005c	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], OFFSET ??_7?$CList@VCRowViewData@@AAV1@@@6B@

; 852  : 	ASSERT(nBlockSize > 0);
; 853  : 
; 854  : 	m_nCount = 0;

  00063	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  0006a	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0
  00071	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00078	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0

; 856  : 	m_pBlocks = NULL;

  0007f	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0

; 857  : 	m_nBlockSize = nBlockSize;

  00086	c7 41 20 0a 00
	00 00		 mov	 DWORD PTR [ecx+32], 10	; 0000000aH

; 924  : 	m_nCount++;
; 925  : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 926  : 
; 927  : #pragma push_macro("new")
; 928  : #undef new
; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;
; 930  : #pragma pop_macro("new")
; 931  : 	return pNode;

  0008d	5e		 pop	 esi

; 932  : }

  0008e	5d		 pop	 ebp
  0008f	c2 08 00	 ret	 8
$LN21@NewNode:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00092	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN19@NewNode:
  00097	cc		 int	 3
?NewNode@?$CList@VCColumnViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z ENDP ; CList<CColumnViewData,CColumnViewData &>::NewNode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?FindIndex@?$CList@VCColumnViewData@@AAV1@@@QBEPAU__POSITION@@H@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
?FindIndex@?$CList@VCColumnViewData@@AAV1@@@QBEPAU__POSITION@@H@Z PROC ; CList<CColumnViewData,CColumnViewData &>::FindIndex, COMDAT
; _this$ = ecx

; 1130 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1131 : 	ASSERT_VALID(this);
; 1132 : 
; 1133 : 	if (nIndex >= m_nCount || nIndex < 0)

  00003	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00006	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00009	7d 14		 jge	 SHORT $LN5@FindIndex
  0000b	85 d2		 test	 edx, edx
  0000d	78 10		 js	 SHORT $LN5@FindIndex

; 1135 : 
; 1136 : 	CNode* pNode = m_pNodeHead;

  0000f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1137 : 	while (nIndex--)

  00012	74 0d		 je	 SHORT $LN1@FindIndex
$LL2@FindIndex:

; 1138 : 	{
; 1139 : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1140 : 		pNode = pNode->pNext;

  00014	8b 00		 mov	 eax, DWORD PTR [eax]
  00016	83 ea 01	 sub	 edx, 1
  00019	75 f9		 jne	 SHORT $LL2@FindIndex

; 1141 : 	}
; 1142 : 	return (POSITION) pNode;
; 1143 : }

  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
$LN5@FindIndex:

; 1134 : 		return NULL;  // went too far

  0001f	33 c0		 xor	 eax, eax
$LN1@FindIndex:

; 1141 : 	}
; 1142 : 	return (POSITION) pNode;
; 1143 : }

  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?FindIndex@?$CList@VCColumnViewData@@AAV1@@@QBEPAU__POSITION@@H@Z ENDP ; CList<CColumnViewData,CColumnViewData &>::FindIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CList@VCColumnViewData@@AAV1@@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?RemoveAll@?$CList@VCColumnViewData@@AAV1@@@QAEXXZ PROC	; CList<CColumnViewData,CColumnViewData &>::RemoveAll, COMDAT
; _this$ = ecx

; 862  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RemoveAll@?$CList@VCColumnViewData@@AAV1@@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f9		 mov	 edi, ecx

; 863  : 	ASSERT_VALID(this);
; 864  : 
; 865  : 	// destroy elements
; 866  : 	CNode* pNode;
; 867  : 	for (pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00029	85 f6		 test	 esi, esi
  0002b	74 25		 je	 SHORT $LN3@RemoveAll
  0002d	0f 1f 00	 npad	 3
$LL4@RemoveAll:

; 868  : 		pNode->data.~TYPE();

  00030	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]

; 878  : {

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@VCRowViewData@@AAV1@@@6B@

; 879  : 	RemoveAll();

  00040	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@VCRowViewData@@AAV1@@@QAEXXZ ; CList<CRowViewData,CRowViewData &>::RemoveAll

; 863  : 	ASSERT_VALID(this);
; 864  : 
; 865  : 	// destroy elements
; 866  : 	CNode* pNode;
; 867  : 	for (pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  00045	8b 36		 mov	 esi, DWORD PTR [esi]

; 881  : }

  00047	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 863  : 	ASSERT_VALID(this);
; 864  : 
; 865  : 	// destroy elements
; 866  : 	CNode* pNode;
; 867  : 	for (pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  0004e	85 f6		 test	 esi, esi
  00050	75 de		 jne	 SHORT $LL4@RemoveAll
$LN3@RemoveAll:

; 869  : 
; 870  : 	m_nCount = 0;
; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;
; 872  : 	m_pBlocks->FreeDataChain();

  00052	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00055	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
  0005c	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  00063	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  0006a	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  00071	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 873  : 	m_pBlocks = NULL;

  00076	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 874  : }

  0007d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00087	59		 pop	 ecx
  00088	5f		 pop	 edi
  00089	5e		 pop	 esi
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
  0008e	cc		 int	 3
  0008f	cc		 int	 3
  00090	cc		 int	 3
  00091	cc		 int	 3
  00092	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?RemoveAll@?$CList@VCColumnViewData@@AAV1@@@QAEXXZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RemoveAll@?$CList@VCColumnViewData@@AAV1@@@QAEXXZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RemoveAll@?$CList@VCColumnViewData@@AAV1@@@QAEXXZ ENDP	; CList<CColumnViewData,CColumnViewData &>::RemoveAll
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?AddTail@?$CList@VCColumnViewData@@AAV1@@@QAEPAU__POSITION@@AAVCColumnViewData@@@Z
_TEXT	SEGMENT
_newElement$ = 8					; size = 4
?AddTail@?$CList@VCColumnViewData@@AAV1@@@QAEPAU__POSITION@@AAVCColumnViewData@@@Z PROC ; CList<CColumnViewData,CColumnViewData &>::AddTail, COMDAT
; _this$ = ecx

; 965  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	57		 push	 edi

; 902  : 	if (m_pNodeFree == NULL)

  00008	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0

; 966  : 	ASSERT_VALID(this);
; 967  : 
; 968  : 	CNode* pNewNode = NewNode(m_pNodeTail, NULL);

  0000c	8b 5e 08	 mov	 ebx, DWORD PTR [esi+8]

; 902  : 	if (m_pNodeFree == NULL)

  0000f	75 32		 jne	 SHORT $LN11@AddTail

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  00011	6a 24		 push	 36			; 00000024H
  00013	ff 76 18	 push	 DWORD PTR [esi+24]
  00016	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  0001f	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  00022	83 c0 08	 add	 eax, 8
  00025	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  00028	83 c2 ff	 add	 edx, -1
  0002b	8d 0c c9	 lea	 ecx, DWORD PTR [ecx+ecx*8]
  0002e	8d 0c 88	 lea	 ecx, DWORD PTR [eax+ecx*4]
  00031	78 10		 js	 SHORT $LN11@AddTail
$LL8@AddTail:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00033	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00036	89 01		 mov	 DWORD PTR [ecx], eax

; 915  : 			m_pNodeFree = pNode;

  00038	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
  0003b	83 e9 24	 sub	 ecx, 36			; 00000024H
  0003e	83 ea 01	 sub	 edx, 1
  00041	79 f0		 jns	 SHORT $LL8@AddTail
$LN11@AddTail:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00043	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  00046	85 ff		 test	 edi, edi
  00048	74 70		 je	 SHORT $LN26@AddTail

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  0004a	8b 07		 mov	 eax, DWORD PTR [edi]

; 925  : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 926  : 
; 927  : #pragma push_macro("new")
; 928  : #undef new
; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;

  0004c	8d 4f 08	 lea	 ecx, DWORD PTR [edi+8]

; 969  : 	pNewNode->data = newElement;

  0004f	ff 75 08	 push	 DWORD PTR _newElement$[ebp]

; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  00052	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 922  : 	pNode->pPrev = pPrev;

  00055	89 5f 04	 mov	 DWORD PTR [edi+4], ebx

; 923  : 	pNode->pNext = pNext;

  00058	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0

; 924  : 	m_nCount++;

  0005e	ff 46 0c	 inc	 DWORD PTR [esi+12]

; 851  : {

  00061	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@VCRowViewData@@AAV1@@@6B@

; 852  : 	ASSERT(nBlockSize > 0);
; 853  : 
; 854  : 	m_nCount = 0;

  00067	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0

; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  0006e	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00075	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  0007c	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 856  : 	m_pBlocks = NULL;

  00083	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 857  : 	m_nBlockSize = nBlockSize;

  0008a	c7 41 18 0a 00
	00 00		 mov	 DWORD PTR [ecx+24], 10	; 0000000aH

; 969  : 	pNewNode->data = newElement;

  00091	e8 00 00 00 00	 call	 ??4CColumnViewData@@QAEAAV0@ABV0@@Z ; CColumnViewData::operator=

; 970  : 	if (m_pNodeTail != NULL)

  00096	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00099	85 c0		 test	 eax, eax
  0009b	74 0e		 je	 SHORT $LN2@AddTail

; 971  : 		m_pNodeTail->pNext = pNewNode;

  0009d	89 38		 mov	 DWORD PTR [eax], edi

; 974  : 	m_pNodeTail = pNewNode;
; 975  : 	return (POSITION) pNewNode;

  0009f	8b c7		 mov	 eax, edi
  000a1	89 7e 08	 mov	 DWORD PTR [esi+8], edi
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx

; 976  : }

  000a7	5d		 pop	 ebp
  000a8	c2 04 00	 ret	 4
$LN2@AddTail:

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;

  000ab	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 974  : 	m_pNodeTail = pNewNode;
; 975  : 	return (POSITION) pNewNode;

  000ae	8b c7		 mov	 eax, edi
  000b0	89 7e 08	 mov	 DWORD PTR [esi+8], edi
  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx

; 976  : }

  000b6	5d		 pop	 ebp
  000b7	c2 04 00	 ret	 4
$LN26@AddTail:

; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  000ba	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN24@AddTail:
  000bf	cc		 int	 3
?AddTail@?$CList@VCColumnViewData@@AAV1@@@QAEPAU__POSITION@@AAVCColumnViewData@@@Z ENDP ; CList<CColumnViewData,CColumnViewData &>::AddTail
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetRowViewDataCount@CViewData@@QBEHH@Z
_TEXT	SEGMENT
_columnViewData$ = -40					; size = 28
__$EHRec$ = -12						; size = 12
_nColumnIndex$ = 8					; size = 4
?GetRowViewDataCount@CViewData@@QBEHH@Z PROC		; CViewData::GetRowViewDataCount, COMDAT
; _this$ = ecx

; 375  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetRowViewDataCount@CViewData@@QBEHH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	56		 push	 esi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 376  : 	POSITION pos = m_columnViewDataList.FindIndex(nColumnIndex);

  00026	8b 45 08	 mov	 eax, DWORD PTR _nColumnIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1133 : 	if (nIndex >= m_nCount || nIndex < 0)

  00029	3b 41 0c	 cmp	 eax, DWORD PTR [ecx+12]
  0002c	7d 4d		 jge	 SHORT $LN22@GetRowView
  0002e	85 c0		 test	 eax, eax
  00030	78 49		 js	 SHORT $LN22@GetRowView

; 1134 : 		return NULL;  // went too far
; 1135 : 
; 1136 : 	CNode* pNode = m_pNodeHead;

  00032	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 1137 : 	while (nIndex--)

  00035	74 07		 je	 SHORT $LN18@GetRowView
$LL6@GetRowView:

; 1138 : 	{
; 1139 : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1140 : 		pNode = pNode->pNext;

  00037	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00039	83 e8 01	 sub	 eax, 1
  0003c	75 f9		 jne	 SHORT $LL6@GetRowView
$LN18@GetRowView:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 377  : 	if(pos == NULL)

  0003e	85 c9		 test	 ecx, ecx
  00040	74 39		 je	 SHORT $LN22@GetRowView

; 379  : 
; 380  : 	CColumnViewData columnViewData = m_columnViewDataList.GetAt(pos);

  00042	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  00045	50		 push	 eax
  00046	8d 4d d8	 lea	 ecx, DWORD PTR _columnViewData$[ebp]
  00049	e8 00 00 00 00	 call	 ??0CColumnViewData@@QAE@ABV0@@Z ; CColumnViewData::CColumnViewData

; 381  : 	return columnViewData.GetCount();

  0004e	8b 75 e4	 mov	 esi, DWORD PTR _columnViewData$[ebp+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 879  : 	RemoveAll();

  00051	8d 4d d8	 lea	 ecx, DWORD PTR _columnViewData$[ebp]
  00054	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005b	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _columnViewData$[ebp], OFFSET ??_7?$CList@VCRowViewData@@AAV1@@@6B@
  00062	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@VCRowViewData@@AAV1@@@QAEXXZ ; CList<CRowViewData,CRowViewData &>::RemoveAll
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 381  : 	return columnViewData.GetCount();

  00067	8b c6		 mov	 eax, esi

; 382  : }

  00069	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00073	59		 pop	 ecx
  00074	5e		 pop	 esi
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 04 00	 ret	 4
$LN22@GetRowView:

; 378  : 		return 0;

  0007b	33 c0		 xor	 eax, eax

; 382  : }

  0007d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00087	59		 pop	 ecx
  00088	5e		 pop	 esi
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c2 04 00	 ret	 4
  0008f	cc		 int	 3
  00090	cc		 int	 3
  00091	cc		 int	 3
  00092	cc		 int	 3
  00093	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?GetRowViewDataCount@CViewData@@QBEHH@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetRowViewDataCount@CViewData@@QBEHH@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetRowViewDataCount@CViewData@@QBEHH@Z ENDP		; CViewData::GetRowViewDataCount
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetColumnViewDataCount@CViewData@@QBEHXZ
_TEXT	SEGMENT
?GetColumnViewDataCount@CViewData@@QBEHXZ PROC		; CViewData::GetColumnViewDataCount, COMDAT
; _this$ = ecx

; 371  : 	return m_columnViewDataList.GetCount();

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]

; 372  : }

  00003	c3		 ret	 0
?GetColumnViewDataCount@CViewData@@QBEHXZ ENDP		; CViewData::GetColumnViewDataCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetColumnViewDataList@CViewData@@QAEAAV?$CList@VCColumnViewData@@AAV1@@@XZ
_TEXT	SEGMENT
?GetColumnViewDataList@CViewData@@QAEAAV?$CList@VCColumnViewData@@AAV1@@@XZ PROC ; CViewData::GetColumnViewDataList, COMDAT
; _this$ = ecx

; 386  : 	return m_columnViewDataList;

  00000	8b c1		 mov	 eax, ecx

; 387  : }

  00002	c3		 ret	 0
?GetColumnViewDataList@CViewData@@QAEAAV?$CList@VCColumnViewData@@AAV1@@@XZ ENDP ; CViewData::GetColumnViewDataList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetAt@CViewData@@QAE_NHHAAVCRowViewData@@@Z
_TEXT	SEGMENT
_columnViewData$ = -40					; size = 28
__$EHRec$ = -12						; size = 12
_nColumnIndex$ = 8					; size = 4
_nRowIndex$ = 12					; size = 4
_rowViewData$ = 16					; size = 4
?GetAt@CViewData@@QAE_NHHAAVCRowViewData@@@Z PROC	; CViewData::GetAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetAt@CViewData@@QAE_NHHAAVCRowViewData@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 103  : 	m_subGraphViewDataList.RemoveAll();

  0002a	8b 5d 10	 mov	 ebx, DWORD PTR _rowViewData$[ebp]
  0002d	83 c3 24	 add	 ebx, 36			; 00000024H
  00030	8b cb		 mov	 ecx, ebx
  00032	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@VCSubGraphViewData@@AAV1@@@QAEXXZ ; CList<CSubGraphViewData,CSubGraphViewData &>::RemoveAll
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  00037	33 f6		 xor	 esi, esi
  00039	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _columnViewData$[ebp], OFFSET ??_7?$CList@VCRowViewData@@AAV1@@@6B@
  00040	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _columnViewData$[ebp+12], 0
  00047	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _columnViewData$[ebp+16], 0
  0004e	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _columnViewData$[ebp+8], 0
  00055	89 75 dc	 mov	 DWORD PTR _columnViewData$[ebp+4], esi

; 856  : 	m_pBlocks = NULL;

  00058	89 75 ec	 mov	 DWORD PTR _columnViewData$[ebp+20], esi

; 857  : 	m_nBlockSize = nBlockSize;

  0005b	c7 45 f0 0a 00
	00 00		 mov	 DWORD PTR _columnViewData$[ebp+24], 10 ; 0000000aH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 351  : 	POSITION pos = m_columnViewDataList.FindIndex(nIndex);

  00062	8b 45 08	 mov	 eax, DWORD PTR _nColumnIndex$[ebp]

; 361  : 	rowViewData.RemoveAll();
; 362  : 	CColumnViewData columnViewData;

  00065	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1133 : 	if (nIndex >= m_nCount || nIndex < 0)

  00068	3b 47 0c	 cmp	 eax, DWORD PTR [edi+12]
  0006b	7d 58		 jge	 SHORT $LN97@GetAt
  0006d	85 c0		 test	 eax, eax
  0006f	78 54		 js	 SHORT $LN97@GetAt

; 1134 : 		return NULL;  // went too far
; 1135 : 
; 1136 : 	CNode* pNode = m_pNodeHead;

  00071	8b 57 04	 mov	 edx, DWORD PTR [edi+4]

; 1137 : 	while (nIndex--)

  00074	74 07		 je	 SHORT $LN85@GetAt
$LL18@GetAt:

; 1138 : 	{
; 1139 : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1140 : 		pNode = pNode->pNext;

  00076	8b 12		 mov	 edx, DWORD PTR [edx]
  00078	83 e8 01	 sub	 eax, 1
  0007b	75 f9		 jne	 SHORT $LL18@GetAt
$LN85@GetAt:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 352  : 	if(pos == NULL)

  0007d	85 d2		 test	 edx, edx
  0007f	74 44		 je	 SHORT $LN97@GetAt

; 353  : 		return false;
; 354  : 
; 355  : 	columnViewData = m_columnViewDataList.GetAt(pos);

  00081	8d 42 08	 lea	 eax, DWORD PTR [edx+8]
  00084	50		 push	 eax
  00085	8d 4d d8	 lea	 ecx, DWORD PTR _columnViewData$[ebp]
  00088	e8 00 00 00 00	 call	 ??4CColumnViewData@@QAEAAV0@ABV0@@Z ; CColumnViewData::operator=

; 103  : 	m_subGraphViewDataList.RemoveAll();

  0008d	8b cb		 mov	 ecx, ebx
  0008f	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@VCSubGraphViewData@@AAV1@@@QAEXXZ ; CList<CSubGraphViewData,CSubGraphViewData &>::RemoveAll

; 300  : 	POSITION pos = m_rowViewDataList.FindIndex(nIndex);

  00094	8b 45 0c	 mov	 eax, DWORD PTR _nRowIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1133 : 	if (nIndex >= m_nCount || nIndex < 0)

  00097	8b 75 dc	 mov	 esi, DWORD PTR _columnViewData$[ebp+4]
  0009a	3b 45 e4	 cmp	 eax, DWORD PTR _columnViewData$[ebp+12]
  0009d	7d 26		 jge	 SHORT $LN97@GetAt
  0009f	85 c0		 test	 eax, eax
  000a1	78 22		 js	 SHORT $LN97@GetAt

; 1134 : 		return NULL;  // went too far
; 1135 : 
; 1136 : 	CNode* pNode = m_pNodeHead;

  000a3	8b d6		 mov	 edx, esi

; 1137 : 	while (nIndex--)

  000a5	74 07		 je	 SHORT $LN87@GetAt
$LL54@GetAt:

; 1138 : 	{
; 1139 : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1140 : 		pNode = pNode->pNext;

  000a7	8b 12		 mov	 edx, DWORD PTR [edx]
  000a9	83 e8 01	 sub	 eax, 1
  000ac	75 f9		 jne	 SHORT $LL54@GetAt
$LN87@GetAt:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 301  : 	if(pos == NULL)

  000ae	85 d2		 test	 edx, edx
  000b0	74 13		 je	 SHORT $LN97@GetAt

; 302  : 		return false;
; 303  : 
; 304  : 	rowViewData = m_rowViewDataList.GetAt(pos);

  000b2	8b 4d 10	 mov	 ecx, DWORD PTR _rowViewData$[ebp]
  000b5	8d 42 08	 lea	 eax, DWORD PTR [edx+8]
  000b8	50		 push	 eax
  000b9	e8 00 00 00 00	 call	 ??4CRowViewData@@QAEAAV0@ABV0@@Z ; CRowViewData::operator=

; 305  : 	return true;

  000be	8b 75 dc	 mov	 esi, DWORD PTR _columnViewData$[ebp+4]
  000c1	b3 01		 mov	 bl, 1
  000c3	eb 02		 jmp	 SHORT $LN46@GetAt
$LN97@GetAt:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 878  : {

  000c5	32 db		 xor	 bl, bl
$LN46@GetAt:
  000c7	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  000ce	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _columnViewData$[ebp], OFFSET ??_7?$CList@VCRowViewData@@AAV1@@@6B@

; 867  : 	for (pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  000d5	85 f6		 test	 esi, esi
  000d7	74 2c		 je	 SHORT $LN67@GetAt
  000d9	0f 1f 80 00 00
	00 00		 npad	 7
$LL68@GetAt:

; 868  : 		pNode->data.~TYPE();

  000e0	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]

; 878  : {

  000e3	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000e7	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@VCSubGraphViewData@@AAV1@@@6B@

; 879  : 	RemoveAll();

  000ed	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@VCSubGraphViewData@@AAV1@@@QAEXXZ ; CList<CSubGraphViewData,CSubGraphViewData &>::RemoveAll

; 880  : 	ASSERT(m_nCount == 0);
; 881  : }

  000f2	8d 4e 28	 lea	 ecx, DWORD PTR [esi+40]
  000f5	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 867  : 	for (pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  000ff	8b 36		 mov	 esi, DWORD PTR [esi]
  00101	85 f6		 test	 esi, esi
  00103	75 db		 jne	 SHORT $LL68@GetAt
$LN67@GetAt:

; 869  : 
; 870  : 	m_nCount = 0;
; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;
; 872  : 	m_pBlocks->FreeDataChain();

  00105	8b 4d ec	 mov	 ecx, DWORD PTR _columnViewData$[ebp+20]
  00108	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _columnViewData$[ebp+12], 0
  0010f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _columnViewData$[ebp+16], 0
  00116	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _columnViewData$[ebp+8], 0
  0011d	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _columnViewData$[ebp+4], 0
  00124	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 366  : 	return columnViewData.GetAt(nRowIndex, rowViewData);

  00129	8a c3		 mov	 al, bl

; 367  : }

  0012b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0012e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00135	59		 pop	 ecx
  00136	5f		 pop	 edi
  00137	5e		 pop	 esi
  00138	5b		 pop	 ebx
  00139	8b e5		 mov	 esp, ebp
  0013b	5d		 pop	 ebp
  0013c	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetAt@CViewData@@QAE_NHHAAVCRowViewData@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _columnViewData$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CColumnViewData@@QAE@XZ
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?GetAt@CViewData@@QAE_NHHAAVCRowViewData@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetAt@CViewData@@QAE_NHHAAVCRowViewData@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetAt@CViewData@@QAE_NHHAAVCRowViewData@@@Z ENDP	; CViewData::GetAt
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetAt@CViewData@@QAE_NHAAVCColumnViewData@@@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
_columnViewData$ = 12					; size = 4
?GetAt@CViewData@@QAE_NHAAVCColumnViewData@@@Z PROC	; CViewData::GetAt, COMDAT
; _this$ = ecx

; 350  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 351  : 	POSITION pos = m_columnViewDataList.FindIndex(nIndex);

  00003	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1133 : 	if (nIndex >= m_nCount || nIndex < 0)

  00006	3b 41 0c	 cmp	 eax, DWORD PTR [ecx+12]
  00009	7d 26		 jge	 SHORT $LN15@GetAt
  0000b	85 c0		 test	 eax, eax
  0000d	78 22		 js	 SHORT $LN15@GetAt

; 1134 : 		return NULL;  // went too far
; 1135 : 
; 1136 : 	CNode* pNode = m_pNodeHead;

  0000f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 1137 : 	while (nIndex--)

  00012	74 07		 je	 SHORT $LN11@GetAt
$LL5@GetAt:

; 1138 : 	{
; 1139 : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1140 : 		pNode = pNode->pNext;

  00014	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00016	83 e8 01	 sub	 eax, 1
  00019	75 f9		 jne	 SHORT $LL5@GetAt
$LN11@GetAt:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 352  : 	if(pos == NULL)

  0001b	85 c9		 test	 ecx, ecx
  0001d	74 12		 je	 SHORT $LN15@GetAt

; 354  : 
; 355  : 	columnViewData = m_columnViewDataList.GetAt(pos);

  0001f	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  00022	8b 4d 0c	 mov	 ecx, DWORD PTR _columnViewData$[ebp]
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??4CColumnViewData@@QAEAAV0@ABV0@@Z ; CColumnViewData::operator=

; 356  : 	return true;

  0002b	b0 01		 mov	 al, 1

; 357  : }

  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
$LN15@GetAt:

; 353  : 		return false;

  00031	32 c0		 xor	 al, al

; 357  : }

  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
?GetAt@CViewData@@QAE_NHAAVCColumnViewData@@@Z ENDP	; CViewData::GetAt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetAt@CViewData@@QAEAAVCRowViewData@@HH@Z
_TEXT	SEGMENT
_nColumnIndex$ = 8					; size = 4
_nRowIndex$ = 12					; size = 4
?GetAt@CViewData@@QAEAAVCRowViewData@@HH@Z PROC		; CViewData::GetAt, COMDAT
; _this$ = ecx

; 343  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 344  : 	POSITION pos = m_columnViewDataList.FindIndex(nColumnIndex);

  00003	8b 55 08	 mov	 edx, DWORD PTR _nColumnIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1133 : 	if (nIndex >= m_nCount || nIndex < 0)

  00006	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00009	7d 12		 jge	 SHORT $LN7@GetAt
  0000b	85 d2		 test	 edx, edx
  0000d	78 0e		 js	 SHORT $LN7@GetAt

; 1135 : 
; 1136 : 	CNode* pNode = m_pNodeHead;

  0000f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1137 : 	while (nIndex--)

  00012	74 0b		 je	 SHORT $LN3@GetAt
$LL4@GetAt:

; 1138 : 	{
; 1139 : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1140 : 		pNode = pNode->pNext;

  00014	8b 00		 mov	 eax, DWORD PTR [eax]
  00016	83 ea 01	 sub	 edx, 1
  00019	75 f9		 jne	 SHORT $LL4@GetAt

; 1141 : 	}
; 1142 : 	return (POSITION) pNode;

  0001b	eb 02		 jmp	 SHORT $LN3@GetAt
$LN7@GetAt:

; 1134 : 		return NULL;  // went too far

  0001d	33 c0		 xor	 eax, eax
$LN3@GetAt:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 285  : 	POSITION pos = m_rowViewDataList.FindIndex(nIndex);

  0001f	8b 4d 0c	 mov	 ecx, DWORD PTR _nRowIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1133 : 	if (nIndex >= m_nCount || nIndex < 0)

  00022	3b 48 14	 cmp	 ecx, DWORD PTR [eax+20]
  00025	7d 17		 jge	 SHORT $LN15@GetAt
  00027	85 c9		 test	 ecx, ecx
  00029	78 13		 js	 SHORT $LN15@GetAt

; 1135 : 
; 1136 : 	CNode* pNode = m_pNodeHead;

  0002b	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]

; 1137 : 	while (nIndex--)

  0002e	74 10		 je	 SHORT $LN21@GetAt
$LL12@GetAt:

; 1138 : 	{
; 1139 : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1140 : 		pNode = pNode->pNext;

  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	83 e9 01	 sub	 ecx, 1
  00035	75 f9		 jne	 SHORT $LL12@GetAt
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 347  : }

  00037	83 c0 08	 add	 eax, 8
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN15@GetAt:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1134 : 		return NULL;  // went too far

  0003e	33 c0		 xor	 eax, eax
$LN21@GetAt:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 347  : }

  00040	83 c0 08	 add	 eax, 8
  00043	5d		 pop	 ebp
  00044	c2 08 00	 ret	 8
?GetAt@CViewData@@QAEAAVCRowViewData@@HH@Z ENDP		; CViewData::GetAt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetAt@CViewData@@QBE?AVCColumnViewData@@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_nIndex$ = 12						; size = 4
?GetAt@CViewData@@QBE?AVCColumnViewData@@H@Z PROC	; CViewData::GetAt, COMDAT
; _this$ = ecx

; 336  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 337  : 	POSITION pos = m_columnViewDataList.FindIndex(nIndex);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _nIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1133 : 	if (nIndex >= m_nCount || nIndex < 0)

  00006	3b 41 0c	 cmp	 eax, DWORD PTR [ecx+12]
  00009	7d 23		 jge	 SHORT $LN9@GetAt
  0000b	85 c0		 test	 eax, eax
  0000d	78 1f		 js	 SHORT $LN9@GetAt

; 1135 : 
; 1136 : 	CNode* pNode = m_pNodeHead;

  0000f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 1137 : 	while (nIndex--)

  00012	74 1c		 je	 SHORT $LN5@GetAt
$LL6@GetAt:

; 1138 : 	{
; 1139 : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1140 : 		pNode = pNode->pNext;

  00014	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00016	83 e8 01	 sub	 eax, 1
  00019	75 f9		 jne	 SHORT $LL6@GetAt
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 339  : 	return m_columnViewDataList.GetAt(pos);

  0001b	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??0CColumnViewData@@QAE@ABV0@@Z ; CColumnViewData::CColumnViewData
  00027	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 340  : }

  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
$LN9@GetAt:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1134 : 		return NULL;  // went too far

  0002e	33 c9		 xor	 ecx, ecx
$LN5@GetAt:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 339  : 	return m_columnViewDataList.GetAt(pos);

  00030	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  00033	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??0CColumnViewData@@QAE@ABV0@@Z ; CColumnViewData::CColumnViewData
  0003c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 340  : }

  0003f	5d		 pop	 ebp
  00040	c2 08 00	 ret	 8
?GetAt@CViewData@@QBE?AVCColumnViewData@@H@Z ENDP	; CViewData::GetAt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetAt@CViewData@@QAEAAVCColumnViewData@@H@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
?GetAt@CViewData@@QAEAAVCColumnViewData@@H@Z PROC	; CViewData::GetAt, COMDAT
; _this$ = ecx

; 329  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 330  : 	POSITION pos = m_columnViewDataList.FindIndex(nIndex);

  00003	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1133 : 	if (nIndex >= m_nCount || nIndex < 0)

  00006	3b 41 0c	 cmp	 eax, DWORD PTR [ecx+12]
  00009	7d 17		 jge	 SHORT $LN7@GetAt
  0000b	85 c0		 test	 eax, eax
  0000d	78 13		 js	 SHORT $LN7@GetAt

; 1135 : 
; 1136 : 	CNode* pNode = m_pNodeHead;

  0000f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 1137 : 	while (nIndex--)

  00012	74 07		 je	 SHORT $LN10@GetAt
$LL4@GetAt:

; 1138 : 	{
; 1139 : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1140 : 		pNode = pNode->pNext;

  00014	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00016	83 e8 01	 sub	 eax, 1
  00019	75 f9		 jne	 SHORT $LL4@GetAt
$LN10@GetAt:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 332  : 	return m_columnViewDataList.GetAt(pos);

  0001b	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]

; 333  : }

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
$LN7@GetAt:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1134 : 		return NULL;  // went too far

  00022	33 c0		 xor	 eax, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 332  : 	return m_columnViewDataList.GetAt(pos);

  00024	b8 08 00 00 00	 mov	 eax, 8

; 333  : }

  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?GetAt@CViewData@@QAEAAVCColumnViewData@@H@Z ENDP	; CViewData::GetAt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?RemoveAll@CViewData@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@CViewData@@QAEXXZ PROC			; CViewData::RemoveAll, COMDAT
; _this$ = ecx

; 324  : 	m_columnViewDataList.RemoveAll();

  00000	e9 00 00 00 00	 jmp	 ?RemoveAll@?$CList@VCColumnViewData@@AAV1@@@QAEXXZ ; CList<CColumnViewData,CColumnViewData &>::RemoveAll
?RemoveAll@CViewData@@QAEXXZ ENDP			; CViewData::RemoveAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?AddTail@CViewData@@QAEXVCColumnViewData@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_columnViewData$ = 8					; size = 28
?AddTail@CViewData@@QAEXVCColumnViewData@@@Z PROC	; CViewData::AddTail, COMDAT
; _this$ = ecx

; 318  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddTail@CViewData@@QAEXVCColumnViewData@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 319  : 	m_columnViewDataList.AddTail(columnViewData);

  00022	8d 45 08	 lea	 eax, DWORD PTR _columnViewData$[ebp]
  00025	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?AddTail@?$CList@VCColumnViewData@@AAV1@@@QAEPAU__POSITION@@AAVCColumnViewData@@@Z ; CList<CColumnViewData,CColumnViewData &>::AddTail
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 879  : 	RemoveAll();

  00032	8d 4d 08	 lea	 ecx, DWORD PTR _columnViewData$[ebp]
  00035	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  0003c	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _columnViewData$[ebp], OFFSET ??_7?$CList@VCRowViewData@@AAV1@@@6B@
  00043	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@VCRowViewData@@AAV1@@@QAEXXZ ; CList<CRowViewData,CRowViewData &>::RemoveAll
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 320  : }

  00048	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00052	59		 pop	 ecx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddTail@CViewData@@QAEXVCColumnViewData@@@Z$0:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _columnViewData$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CColumnViewData@@QAE@XZ
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?AddTail@CViewData@@QAEXVCColumnViewData@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddTail@CViewData@@QAEXVCColumnViewData@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddTail@CViewData@@QAEXVCColumnViewData@@@Z ENDP	; CViewData::AddTail
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??1CColumnViewData@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CColumnViewData@@QAE@XZ PROC				; CColumnViewData::~CColumnViewData, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CColumnViewData@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 878  : {

  00022	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00029	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@VCRowViewData@@AAV1@@@6B@

; 879  : 	RemoveAll();

  0002f	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@VCRowViewData@@AAV1@@@QAEXXZ ; CList<CRowViewData,CRowViewData &>::RemoveAll
  00034	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00037	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0003e	59		 pop	 ecx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
  00043	cc		 int	 3
  00044	cc		 int	 3
  00045	cc		 int	 3
  00046	cc		 int	 3
  00047	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CColumnViewData@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CColumnViewData@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CColumnViewData@@QAE@XZ ENDP				; CColumnViewData::~CColumnViewData
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_G?$CList@VCRowViewData@@AAV1@@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CList@VCRowViewData@@AAV1@@@UAEPAXI@Z PROC	; CList<CRowViewData,CRowViewData &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CList@VCRowViewData@@AAV1@@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 878  : {

  00025	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CList@VCRowViewData@@AAV1@@@6B@

; 879  : 	RemoveAll();

  00032	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@VCRowViewData@@AAV1@@@QAEXXZ ; CList<CRowViewData,CRowViewData &>::RemoveAll
  00037	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0003a	a8 01		 test	 al, 1
  0003c	74 2c		 je	 SHORT $LN12@scalar
  0003e	a8 04		 test	 al, 4
  00040	75 1d		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  00042	56		 push	 esi
  00043	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00048	83 c4 04	 add	 esp, 4
  0004b	8b c6		 mov	 eax, esi
  0004d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00050	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00057	59		 pop	 ecx
  00058	5e		 pop	 esi
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
$LN3@scalar:
  0005f	6a 1c		 push	 28			; 0000001cH
  00061	56		 push	 esi
  00062	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00067	83 c4 08	 add	 esp, 8
$LN12@scalar:
  0006a	8b c6		 mov	 eax, esi
  0006c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00076	59		 pop	 ecx
  00077	5e		 pop	 esi
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
  0007e	cc		 int	 3
  0007f	cc		 int	 3
  00080	cc		 int	 3
  00081	cc		 int	 3
  00082	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CList@VCRowViewData@@AAV1@@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CList@VCRowViewData@@AAV1@@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CList@VCRowViewData@@AAV1@@@UAEPAXI@Z ENDP	; CList<CRowViewData,CRowViewData &>::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CList@VCRowViewData@@AAV1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_nNewCount$1$ = -96					; size = 4
_nElementsToRead$1$ = -92				; size = 4
_nElementsLeft$1$ = -92					; size = 4
_this$GSCopy$1$ = -92					; size = 4
_ar$GSCopy$1$ = -88					; size = 4
_nElementsToRead$1$ = -84				; size = 4
_pData$1$ = -84						; size = 4
_pNode$1$ = -84						; size = 4
_newData$2 = -80					; size = 64
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ar$ = 8						; size = 4
?Serialize@?$CList@VCRowViewData@@AAV1@@@UAEXAAVCArchive@@@Z PROC ; CList<CRowViewData,CRowViewData &>::Serialize, COMDAT
; _this$ = ecx

; 1169 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Serialize@?$CList@VCRowViewData@@AAV1@@@UAEXAAVCArchive@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 54	 sub	 esp, 84			; 00000054H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b d9		 mov	 ebx, ecx
  0002d	89 5d a4	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ebx
  00030	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00033	89 4d a8	 mov	 DWORD PTR _ar$GSCopy$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00036	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00039	f7 d0		 not	 eax
  0003b	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1174 : 	if (ar.IsStoring())

  0003d	0f 84 ad 00 00
	00		 je	 $LN7@Serialize

; 1175 : 	{
; 1176 : 		ar.WriteCount(m_nCount);

  00043	ff 73 0c	 push	 DWORD PTR [ebx+12]
  00046	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1177 : 		for (CNode* pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  0004b	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0004e	89 45 ac	 mov	 DWORD PTR _pNode$1$[ebp], eax
  00051	85 c0		 test	 eax, eax
  00053	0f 84 6e 01 00
	00		 je	 $LN69@Serialize
  00059	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@Serialize:

; 1178 : 		{
; 1179 : 			ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1180 : 			TYPE* pData;
; 1181 : 			/*
; 1182 : 			 * in some cases the & operator might be overloaded, and we cannot use it to obtain
; 1183 : 			 * the address of a given object.  We then use the following trick to get the address
; 1184 : 			 */
; 1185 : 			pData = reinterpret_cast< TYPE* >( &reinterpret_cast< int& >( static_cast< TYPE& >( pNode->data ) ) );

  00060	8d 70 08	 lea	 esi, DWORD PTR [eax+8]

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00063	85 f6		 test	 esi, esi
  00065	0f 84 83 01 00
	00		 je	 $LN61@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  0006b	8b 4d a8	 mov	 ecx, DWORD PTR _ar$GSCopy$1$[ebp]
  0006e	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00071	f7 d0		 not	 eax
  00073	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  00075	74 32		 je	 SHORT $LN22@Serialize

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  00077	b8 01 00 00 00	 mov	 eax, 1
  0007c	89 45 a4	 mov	 DWORD PTR _nElementsLeft$1$[ebp], eax
  0007f	90		 npad	 1
$LL17@Serialize:

; 80   : 		while( nElementsLeft > 0 )
; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00080	bb ff ff ff 01	 mov	 ebx, 33554431		; 01ffffffH
  00085	3b c3		 cmp	 eax, ebx
  00087	0f 42 d8	 cmovb	 ebx, eax

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0008a	8b fb		 mov	 edi, ebx
  0008c	c1 e7 06	 shl	 edi, 6
  0008f	57		 push	 edi
  00090	56		 push	 esi
  00091	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  00096	8b 45 a4	 mov	 eax, DWORD PTR _nElementsLeft$1$[ebp]

; 87   : 			pData += nElementsToWrite;

  00099	03 f7		 add	 esi, edi
  0009b	8b 4d a8	 mov	 ecx, DWORD PTR _ar$GSCopy$1$[ebp]
  0009e	2b c3		 sub	 eax, ebx
  000a0	89 45 a4	 mov	 DWORD PTR _nElementsLeft$1$[ebp], eax
  000a3	85 c0		 test	 eax, eax
  000a5	75 d9		 jne	 SHORT $LL17@Serialize

; 88   : 		}
; 89   : 	}

  000a7	eb 32		 jmp	 SHORT $LN2@Serialize
$LN22@Serialize:

; 90   : 	else
; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000a9	bf 01 00 00 00	 mov	 edi, 1
  000ae	66 90		 npad	 2
$LL19@Serialize:

; 97   : 		while( nElementsLeft > 0 )
; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000b0	b8 ff ff ff 01	 mov	 eax, 33554431		; 01ffffffH
  000b5	3b f8		 cmp	 edi, eax
  000b7	0f 42 c7	 cmovb	 eax, edi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  000ba	8b d8		 mov	 ebx, eax
  000bc	89 45 a4	 mov	 DWORD PTR _nElementsToRead$1$[ebp], eax
  000bf	c1 e3 06	 shl	 ebx, 6
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  000c2	53		 push	 ebx
  000c3	56		 push	 esi
  000c4	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  000c9	3b c3		 cmp	 eax, ebx
  000cb	0f 85 14 01 00
	00		 jne	 $LN60@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 104  : 			pData += nElementsToRead;

  000d1	8b 4d a8	 mov	 ecx, DWORD PTR _ar$GSCopy$1$[ebp]
  000d4	03 f3		 add	 esi, ebx
  000d6	2b 7d a4	 sub	 edi, DWORD PTR _nElementsToRead$1$[ebp]
  000d9	75 d5		 jne	 SHORT $LL19@Serialize
$LN2@Serialize:

; 1177 : 		for (CNode* pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  000db	8b 45 ac	 mov	 eax, DWORD PTR _pNode$1$[ebp]
  000de	8b 00		 mov	 eax, DWORD PTR [eax]
  000e0	89 45 ac	 mov	 DWORD PTR _pNode$1$[ebp], eax
  000e3	85 c0		 test	 eax, eax
  000e5	0f 85 75 ff ff
	ff		 jne	 $LL4@Serialize
  000eb	e9 d7 00 00 00	 jmp	 $LN69@Serialize
$LN7@Serialize:

; 1186 : 			SerializeElements<TYPE>(ar, pData, 1);
; 1187 : 		}
; 1188 : 	}
; 1189 : 	else
; 1190 : 	{
; 1191 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000f0	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount

; 1192 : 		while (nNewCount--)

  000f5	85 c0		 test	 eax, eax
  000f7	0f 84 ca 00 00
	00		 je	 $LN69@Serialize
  000fd	0f 1f 00	 npad	 3
$LL5@Serialize:

; 1194 : 			TYPE newData[1];

  00100	68 00 00 00 00	 push	 OFFSET ??1CRowViewData@@QAE@XZ
  00105	68 00 00 00 00	 push	 OFFSET ??0CRowViewData@@QAE@XZ ; CRowViewData::CRowViewData
  0010a	48		 dec	 eax
  0010b	6a 01		 push	 1
  0010d	89 45 a0	 mov	 DWORD PTR _nNewCount$1$[ebp], eax
  00110	8d 45 b0	 lea	 eax, DWORD PTR _newData$2[ebp]
  00113	6a 40		 push	 64			; 00000040H
  00115	50		 push	 eax
  00116	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  0011b	8b 4d a8	 mov	 ecx, DWORD PTR _ar$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1194 : 			TYPE newData[1];

  0011e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00125	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00128	f7 d0		 not	 eax
  0012a	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  0012c	74 39		 je	 SHORT $LN43@Serialize

; 79   : 		pData = pElements;

  0012e	8d 45 b0	 lea	 eax, DWORD PTR _newData$2[ebp]
  00131	bb 01 00 00 00	 mov	 ebx, 1
  00136	89 45 ac	 mov	 DWORD PTR _pData$1$[ebp], eax
  00139	0f 1f 80 00 00
	00 00		 npad	 7
$LL38@Serialize:

; 80   : 		while( nElementsLeft > 0 )
; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00140	bf ff ff ff 01	 mov	 edi, 33554431		; 01ffffffH
  00145	3b df		 cmp	 ebx, edi
  00147	0f 42 fb	 cmovb	 edi, ebx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0014a	8b f7		 mov	 esi, edi
  0014c	c1 e6 06	 shl	 esi, 6
  0014f	56		 push	 esi
  00150	50		 push	 eax
  00151	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 87   : 			pData += nElementsToWrite;

  00156	8b 45 ac	 mov	 eax, DWORD PTR _pData$1$[ebp]
  00159	8b 4d a8	 mov	 ecx, DWORD PTR _ar$GSCopy$1$[ebp]
  0015c	03 c6		 add	 eax, esi
  0015e	89 45 ac	 mov	 DWORD PTR _pData$1$[ebp], eax
  00161	2b df		 sub	 ebx, edi
  00163	75 db		 jne	 SHORT $LL38@Serialize

; 88   : 		}
; 89   : 	}

  00165	eb 30		 jmp	 SHORT $LN41@Serialize
$LN43@Serialize:

; 90   : 	else
; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  00167	be 01 00 00 00	 mov	 esi, 1

; 96   : 		pData = pElements;

  0016c	8d 5d b0	 lea	 ebx, DWORD PTR _newData$2[ebp]
  0016f	90		 npad	 1
$LL40@Serialize:

; 97   : 		while( nElementsLeft > 0 )
; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00170	b8 ff ff ff 01	 mov	 eax, 33554431		; 01ffffffH
  00175	3b f0		 cmp	 esi, eax
  00177	0f 42 c6	 cmovb	 eax, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0017a	8b f8		 mov	 edi, eax
  0017c	89 45 ac	 mov	 DWORD PTR _nElementsToRead$1$[ebp], eax
  0017f	c1 e7 06	 shl	 edi, 6
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00182	57		 push	 edi
  00183	53		 push	 ebx
  00184	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  00189	3b c7		 cmp	 eax, edi
  0018b	75 58		 jne	 SHORT $LN60@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 104  : 			pData += nElementsToRead;

  0018d	8b 4d a8	 mov	 ecx, DWORD PTR _ar$GSCopy$1$[ebp]
  00190	03 df		 add	 ebx, edi
  00192	2b 75 ac	 sub	 esi, DWORD PTR _nElementsToRead$1$[ebp]
  00195	75 d9		 jne	 SHORT $LL40@Serialize
$LN41@Serialize:

; 1195 : 			SerializeElements<TYPE>(ar, newData, 1);
; 1196 : 			AddTail(newData[0]);

  00197	8b 4d a4	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  0019a	8d 45 b0	 lea	 eax, DWORD PTR _newData$2[ebp]
  0019d	50		 push	 eax
  0019e	e8 00 00 00 00	 call	 ?AddTail@?$CList@VCRowViewData@@AAV1@@@QAEPAU__POSITION@@AAVCRowViewData@@@Z ; CList<CRowViewData,CRowViewData &>::AddTail

; 1197 : 		}

  001a3	68 00 00 00 00	 push	 OFFSET ??1CRowViewData@@QAE@XZ
  001a8	6a 01		 push	 1
  001aa	6a 40		 push	 64			; 00000040H
  001ac	8d 45 b0	 lea	 eax, DWORD PTR _newData$2[ebp]
  001af	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001b6	50		 push	 eax
  001b7	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  001bc	8b 45 a0	 mov	 eax, DWORD PTR _nNewCount$1$[ebp]
  001bf	85 c0		 test	 eax, eax
  001c1	0f 85 39 ff ff
	ff		 jne	 $LL5@Serialize
$LN69@Serialize:

; 1198 : 	}
; 1199 : }

  001c7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001ca	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001d1	59		 pop	 ecx
  001d2	5f		 pop	 edi
  001d3	5e		 pop	 esi
  001d4	5b		 pop	 ebx
  001d5	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001d8	33 cd		 xor	 ecx, ebp
  001da	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001df	8b e5		 mov	 esp, ebp
  001e1	5d		 pop	 ebp
  001e2	c2 04 00	 ret	 4
$LN60@Serialize:
  001e5	6a 00		 push	 0
  001e7	6a 03		 push	 3
  001e9	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN61@Serialize:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  001ee	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN87@Serialize:
  001f3	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Serialize@?$CList@VCRowViewData@@AAV1@@@UAEXAAVCArchive@@@Z$0:
  00000	68 00 00 00 00	 push	 OFFSET ??1CRowViewData@@QAE@XZ
  00005	6a 01		 push	 1
  00007	6a 40		 push	 64			; 00000040H
  00009	8d 45 b0	 lea	 eax, DWORD PTR _newData$2[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00012	c3		 ret	 0
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
  00017	cc		 int	 3
__ehhandler$?Serialize@?$CList@VCRowViewData@@AAV1@@@UAEXAAVCArchive@@@Z:
  00018	90		 npad	 1
  00019	90		 npad	 1
  0001a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00021	8b 4a 9c	 mov	 ecx, DWORD PTR [edx-100]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002e	33 c8		 xor	 ecx, eax
  00030	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00035	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Serialize@?$CList@VCRowViewData@@AAV1@@@UAEXAAVCArchive@@@Z
  0003a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Serialize@?$CList@VCRowViewData@@AAV1@@@UAEXAAVCArchive@@@Z ENDP ; CList<CRowViewData,CRowViewData &>::Serialize
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CList@VCRowViewData@@AAV1@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CList@VCRowViewData@@AAV1@@@UAE@XZ PROC		; CList<CRowViewData,CRowViewData &>::~CList<CRowViewData,CRowViewData &>, COMDAT
; _this$ = ecx

; 878  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CList@VCRowViewData@@AAV1@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00022	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@VCRowViewData@@AAV1@@@6B@

; 879  : 	RemoveAll();

  00028	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@VCRowViewData@@AAV1@@@QAEXXZ ; CList<CRowViewData,CRowViewData &>::RemoveAll

; 880  : 	ASSERT(m_nCount == 0);
; 881  : }

  0002d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00030	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00037	59		 pop	 ecx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
  0003c	cc		 int	 3
  0003d	cc		 int	 3
  0003e	cc		 int	 3
  0003f	cc		 int	 3
  00040	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CList@VCRowViewData@@AAV1@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CList@VCRowViewData@@AAV1@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CList@VCRowViewData@@AAV1@@@UAE@XZ ENDP		; CList<CRowViewData,CRowViewData &>::~CList<CRowViewData,CRowViewData &>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?NewNode@?$CList@VCRowViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z
_TEXT	SEGMENT
_pPrev$ = 8						; size = 4
_pNext$ = 12						; size = 4
?NewNode@?$CList@VCRowViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z PROC ; CList<CRowViewData,CRowViewData &>::NewNode, COMDAT
; _this$ = ecx

; 901  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi

; 902  : 	if (m_pNodeFree == NULL)

  00007	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0000b	75 33		 jne	 SHORT $LN7@NewNode

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  0000d	6a 48		 push	 72			; 00000048H
  0000f	ff 76 18	 push	 DWORD PTR [esi+24]
  00012	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  0001b	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  0001e	83 c0 08	 add	 eax, 8
  00021	8d 0c d2	 lea	 ecx, DWORD PTR [edx+edx*8]
  00024	8d 04 c8	 lea	 eax, DWORD PTR [eax+ecx*8]
  00027	83 c0 b8	 add	 eax, -72		; ffffffb8H

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  0002a	83 c2 ff	 add	 edx, -1
  0002d	78 11		 js	 SHORT $LN7@NewNode
  0002f	90		 npad	 1
$LL4@NewNode:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00030	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00033	89 08		 mov	 DWORD PTR [eax], ecx

; 915  : 			m_pNodeFree = pNode;

  00035	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00038	83 e8 48	 sub	 eax, 72			; 00000048H
  0003b	83 ea 01	 sub	 edx, 1
  0003e	79 f0		 jns	 SHORT $LL4@NewNode
$LN7@NewNode:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00040	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  00043	85 ff		 test	 edi, edi
  00045	0f 84 8d 00 00
	00		 je	 $LN27@NewNode

; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  0004b	8b 07		 mov	 eax, DWORD PTR [edi]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 166  : {

  0004d	8d 4f 28	 lea	 ecx, DWORD PTR [edi+40]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  00050	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 922  : 	pNode->pPrev = pPrev;

  00053	8b 45 08	 mov	 eax, DWORD PTR _pPrev$[ebp]
  00056	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 923  : 	pNode->pNext = pNext;

  00059	8b 45 0c	 mov	 eax, DWORD PTR _pNext$[ebp]
  0005c	89 07		 mov	 DWORD PTR [edi], eax

; 924  : 	m_nCount++;

  0005e	ff 46 0c	 inc	 DWORD PTR [esi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 540  : 	left = l;

  00061	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 541  : 	top = t;

  00068	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0

; 542  : 	right = r;

  0006f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0

; 543  : 	bottom = b;

  00076	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 540  : 	left = l;

  0007d	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0

; 541  : 	top = t;

  00084	c7 47 1c 00 00
	00 00		 mov	 DWORD PTR [edi+28], 0

; 542  : 	right = r;

  0008b	c7 47 20 00 00
	00 00		 mov	 DWORD PTR [edi+32], 0

; 543  : 	bottom = b;

  00092	c7 47 24 00 00
	00 00		 mov	 DWORD PTR [edi+36], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 166  : {

  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 851  : {

  0009f	c7 47 2c 00 00
	00 00		 mov	 DWORD PTR [edi+44], OFFSET ??_7?$CList@VCSubGraphViewData@@AAV1@@@6B@

; 925  : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 926  : 
; 927  : #pragma push_macro("new")
; 928  : #undef new
; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;
; 930  : #pragma pop_macro("new")
; 931  : 	return pNode;

  000a6	8b c7		 mov	 eax, edi

; 854  : 	m_nCount = 0;

  000a8	c7 47 38 00 00
	00 00		 mov	 DWORD PTR [edi+56], 0

; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  000af	c7 47 3c 00 00
	00 00		 mov	 DWORD PTR [edi+60], 0
  000b6	c7 47 34 00 00
	00 00		 mov	 DWORD PTR [edi+52], 0
  000bd	c7 47 30 00 00
	00 00		 mov	 DWORD PTR [edi+48], 0

; 856  : 	m_pBlocks = NULL;

  000c4	c7 47 40 00 00
	00 00		 mov	 DWORD PTR [edi+64], 0

; 857  : 	m_nBlockSize = nBlockSize;

  000cb	c7 47 44 0a 00
	00 00		 mov	 DWORD PTR [edi+68], 10	; 0000000aH

; 925  : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 926  : 
; 927  : #pragma push_macro("new")
; 928  : #undef new
; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;
; 930  : #pragma pop_macro("new")
; 931  : 	return pNode;

  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi

; 932  : }

  000d4	5d		 pop	 ebp
  000d5	c2 08 00	 ret	 8
$LN27@NewNode:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  000d8	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN25@NewNode:
  000dd	cc		 int	 3
?NewNode@?$CList@VCRowViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z ENDP ; CList<CRowViewData,CRowViewData &>::NewNode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?FindIndex@?$CList@VCRowViewData@@AAV1@@@QBEPAU__POSITION@@H@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
?FindIndex@?$CList@VCRowViewData@@AAV1@@@QBEPAU__POSITION@@H@Z PROC ; CList<CRowViewData,CRowViewData &>::FindIndex, COMDAT
; _this$ = ecx

; 1130 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1131 : 	ASSERT_VALID(this);
; 1132 : 
; 1133 : 	if (nIndex >= m_nCount || nIndex < 0)

  00003	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00006	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00009	7d 14		 jge	 SHORT $LN5@FindIndex
  0000b	85 d2		 test	 edx, edx
  0000d	78 10		 js	 SHORT $LN5@FindIndex

; 1135 : 
; 1136 : 	CNode* pNode = m_pNodeHead;

  0000f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1137 : 	while (nIndex--)

  00012	74 0d		 je	 SHORT $LN1@FindIndex
$LL2@FindIndex:

; 1138 : 	{
; 1139 : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1140 : 		pNode = pNode->pNext;

  00014	8b 00		 mov	 eax, DWORD PTR [eax]
  00016	83 ea 01	 sub	 edx, 1
  00019	75 f9		 jne	 SHORT $LL2@FindIndex

; 1141 : 	}
; 1142 : 	return (POSITION) pNode;
; 1143 : }

  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
$LN5@FindIndex:

; 1134 : 		return NULL;  // went too far

  0001f	33 c0		 xor	 eax, eax
$LN1@FindIndex:

; 1141 : 	}
; 1142 : 	return (POSITION) pNode;
; 1143 : }

  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?FindIndex@?$CList@VCRowViewData@@AAV1@@@QBEPAU__POSITION@@H@Z ENDP ; CList<CRowViewData,CRowViewData &>::FindIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CList@VCRowViewData@@AAV1@@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?RemoveAll@?$CList@VCRowViewData@@AAV1@@@QAEXXZ PROC	; CList<CRowViewData,CRowViewData &>::RemoveAll, COMDAT
; _this$ = ecx

; 862  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RemoveAll@?$CList@VCRowViewData@@AAV1@@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f9		 mov	 edi, ecx

; 863  : 	ASSERT_VALID(this);
; 864  : 
; 865  : 	// destroy elements
; 866  : 	CNode* pNode;
; 867  : 	for (pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00029	85 f6		 test	 esi, esi
  0002b	74 2e		 je	 SHORT $LN3@RemoveAll
  0002d	0f 1f 00	 npad	 3
$LL4@RemoveAll:

; 868  : 		pNode->data.~TYPE();

  00030	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]

; 878  : {

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@VCSubGraphViewData@@AAV1@@@6B@

; 879  : 	RemoveAll();

  00040	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@VCSubGraphViewData@@AAV1@@@QAEXXZ ; CList<CSubGraphViewData,CSubGraphViewData &>::RemoveAll

; 880  : 	ASSERT(m_nCount == 0);
; 881  : }

  00045	8d 4e 28	 lea	 ecx, DWORD PTR [esi+40]
  00048	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 863  : 	ASSERT_VALID(this);
; 864  : 
; 865  : 	// destroy elements
; 866  : 	CNode* pNode;
; 867  : 	for (pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  00055	8b 36		 mov	 esi, DWORD PTR [esi]
  00057	85 f6		 test	 esi, esi
  00059	75 d5		 jne	 SHORT $LL4@RemoveAll
$LN3@RemoveAll:

; 869  : 
; 870  : 	m_nCount = 0;
; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;
; 872  : 	m_pBlocks->FreeDataChain();

  0005b	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  0005e	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
  00065	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  0006c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  0007a	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 873  : 	m_pBlocks = NULL;

  0007f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 874  : }

  00086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
  00097	cc		 int	 3
  00098	cc		 int	 3
  00099	cc		 int	 3
  0009a	cc		 int	 3
  0009b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?RemoveAll@?$CList@VCRowViewData@@AAV1@@@QAEXXZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RemoveAll@?$CList@VCRowViewData@@AAV1@@@QAEXXZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RemoveAll@?$CList@VCRowViewData@@AAV1@@@QAEXXZ ENDP	; CList<CRowViewData,CRowViewData &>::RemoveAll
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?AddTail@?$CList@VCRowViewData@@AAV1@@@QAEPAU__POSITION@@AAVCRowViewData@@@Z
_TEXT	SEGMENT
_newElement$ = 8					; size = 4
?AddTail@?$CList@VCRowViewData@@AAV1@@@QAEPAU__POSITION@@AAVCRowViewData@@@Z PROC ; CList<CRowViewData,CRowViewData &>::AddTail, COMDAT
; _this$ = ecx

; 965  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	57		 push	 edi

; 902  : 	if (m_pNodeFree == NULL)

  00008	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0

; 966  : 	ASSERT_VALID(this);
; 967  : 
; 968  : 	CNode* pNewNode = NewNode(m_pNodeTail, NULL);

  0000c	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]

; 902  : 	if (m_pNodeFree == NULL)

  0000f	75 32		 jne	 SHORT $LN11@AddTail

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  00011	6a 48		 push	 72			; 00000048H
  00013	ff 76 18	 push	 DWORD PTR [esi+24]
  00016	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  0001f	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  00022	83 c0 08	 add	 eax, 8
  00025	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  00028	83 c2 ff	 add	 edx, -1
  0002b	8d 0c c9	 lea	 ecx, DWORD PTR [ecx+ecx*8]
  0002e	8d 0c c8	 lea	 ecx, DWORD PTR [eax+ecx*8]
  00031	78 10		 js	 SHORT $LN11@AddTail
$LL8@AddTail:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00033	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00036	89 01		 mov	 DWORD PTR [ecx], eax

; 915  : 			m_pNodeFree = pNode;

  00038	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
  0003b	83 e9 48	 sub	 ecx, 72			; 00000048H
  0003e	83 ea 01	 sub	 edx, 1
  00041	79 f0		 jns	 SHORT $LL8@AddTail
$LN11@AddTail:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00043	8b 5e 10	 mov	 ebx, DWORD PTR [esi+16]
  00046	85 db		 test	 ebx, ebx
  00048	74 48		 je	 SHORT $LN22@AddTail

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  0004a	8b 03		 mov	 eax, DWORD PTR [ebx]

; 922  : 	pNode->pPrev = pPrev;
; 923  : 	pNode->pNext = pNext;
; 924  : 	m_nCount++;
; 925  : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 926  : 
; 927  : #pragma push_macro("new")
; 928  : #undef new
; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;

  0004c	8d 4b 08	 lea	 ecx, DWORD PTR [ebx+8]
  0004f	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00052	89 7b 04	 mov	 DWORD PTR [ebx+4], edi
  00055	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
  0005b	ff 46 0c	 inc	 DWORD PTR [esi+12]
  0005e	e8 00 00 00 00	 call	 ??0CRowViewData@@QAE@XZ	; CRowViewData::CRowViewData

; 969  : 	pNewNode->data = newElement;

  00063	ff 75 08	 push	 DWORD PTR _newElement$[ebp]
  00066	8d 4b 08	 lea	 ecx, DWORD PTR [ebx+8]
  00069	e8 00 00 00 00	 call	 ??4CRowViewData@@QAEAAV0@ABV0@@Z ; CRowViewData::operator=

; 970  : 	if (m_pNodeTail != NULL)

  0006e	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00071	85 c0		 test	 eax, eax
  00073	74 0e		 je	 SHORT $LN2@AddTail

; 971  : 		m_pNodeTail->pNext = pNewNode;

  00075	89 18		 mov	 DWORD PTR [eax], ebx

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;
; 974  : 	m_pNodeTail = pNewNode;
; 975  : 	return (POSITION) pNewNode;

  00077	8b c3		 mov	 eax, ebx
  00079	5f		 pop	 edi
  0007a	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx

; 976  : }

  0007f	5d		 pop	 ebp
  00080	c2 04 00	 ret	 4
$LN2@AddTail:

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;
; 974  : 	m_pNodeTail = pNewNode;
; 975  : 	return (POSITION) pNewNode;

  00083	5f		 pop	 edi
  00084	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  00087	8b c3		 mov	 eax, ebx
  00089	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx

; 976  : }

  0008e	5d		 pop	 ebp
  0008f	c2 04 00	 ret	 4
$LN22@AddTail:

; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00092	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN20@AddTail:
  00097	cc		 int	 3
?AddTail@?$CList@VCRowViewData@@AAV1@@@QAEPAU__POSITION@@AAVCRowViewData@@@Z ENDP ; CList<CRowViewData,CRowViewData &>::AddTail
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CList@VCRowViewData@@AAV1@@@QAE@H@Z
_TEXT	SEGMENT
_nBlockSize$ = 8					; size = 4
??0?$CList@VCRowViewData@@AAV1@@@QAE@H@Z PROC		; CList<CRowViewData,CRowViewData &>::CList<CRowViewData,CRowViewData &>, COMDAT
; _this$ = ecx

; 851  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 852  : 	ASSERT(nBlockSize > 0);
; 853  : 
; 854  : 	m_nCount = 0;
; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;
; 856  : 	m_pBlocks = NULL;
; 857  : 	m_nBlockSize = nBlockSize;

  00003	8b 45 08	 mov	 eax, DWORD PTR _nBlockSize$[ebp]
  00006	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 858  : }

  00009	8b c1		 mov	 eax, ecx
  0000b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@VCRowViewData@@AAV1@@@6B@
  00011	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00018	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  0001f	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00026	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0002d	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
??0?$CList@VCRowViewData@@AAV1@@@QAE@H@Z ENDP		; CList<CRowViewData,CRowViewData &>::CList<CRowViewData,CRowViewData &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetCount@CColumnViewData@@QBEHXZ
_TEXT	SEGMENT
?GetCount@CColumnViewData@@QBEHXZ PROC			; CColumnViewData::GetCount, COMDAT
; _this$ = ecx

; 310  : 	return m_rowViewDataList.GetCount();

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]

; 311  : }

  00003	c3		 ret	 0
?GetCount@CColumnViewData@@QBEHXZ ENDP			; CColumnViewData::GetCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetAt@CColumnViewData@@QAE_NHAAVCRowViewData@@@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
_rowViewData$ = 12					; size = 4
?GetAt@CColumnViewData@@QAE_NHAAVCRowViewData@@@Z PROC	; CColumnViewData::GetAt, COMDAT
; _this$ = ecx

; 298  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 103  : 	m_subGraphViewDataList.RemoveAll();

  00005	8b 7d 0c	 mov	 edi, DWORD PTR _rowViewData$[ebp]

; 298  : {

  00008	8b f1		 mov	 esi, ecx

; 103  : 	m_subGraphViewDataList.RemoveAll();

  0000a	8d 4f 24	 lea	 ecx, DWORD PTR [edi+36]
  0000d	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@VCSubGraphViewData@@AAV1@@@QAEXXZ ; CList<CSubGraphViewData,CSubGraphViewData &>::RemoveAll

; 299  : 	rowViewData.RemoveAll();
; 300  : 	POSITION pos = m_rowViewDataList.FindIndex(nIndex);

  00012	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1133 : 	if (nIndex >= m_nCount || nIndex < 0)

  00015	3b 46 0c	 cmp	 eax, DWORD PTR [esi+12]
  00018	7d 27		 jge	 SHORT $LN19@GetAt
  0001a	85 c0		 test	 eax, eax
  0001c	78 23		 js	 SHORT $LN19@GetAt

; 1134 : 		return NULL;  // went too far
; 1135 : 
; 1136 : 	CNode* pNode = m_pNodeHead;

  0001e	8b 56 04	 mov	 edx, DWORD PTR [esi+4]

; 1137 : 	while (nIndex--)

  00021	74 07		 je	 SHORT $LN15@GetAt
$LL9@GetAt:

; 1138 : 	{
; 1139 : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1140 : 		pNode = pNode->pNext;

  00023	8b 12		 mov	 edx, DWORD PTR [edx]
  00025	83 e8 01	 sub	 eax, 1
  00028	75 f9		 jne	 SHORT $LL9@GetAt
$LN15@GetAt:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 301  : 	if(pos == NULL)

  0002a	85 d2		 test	 edx, edx
  0002c	74 13		 je	 SHORT $LN19@GetAt

; 303  : 
; 304  : 	rowViewData = m_rowViewDataList.GetAt(pos);

  0002e	8d 42 08	 lea	 eax, DWORD PTR [edx+8]
  00031	8b cf		 mov	 ecx, edi
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??4CRowViewData@@QAEAAV0@ABV0@@Z ; CRowViewData::operator=
  00039	5f		 pop	 edi

; 305  : 	return true;

  0003a	b0 01		 mov	 al, 1

; 306  : }

  0003c	5e		 pop	 esi
  0003d	5d		 pop	 ebp
  0003e	c2 08 00	 ret	 8
$LN19@GetAt:
  00041	5f		 pop	 edi

; 302  : 		return false;

  00042	32 c0		 xor	 al, al

; 306  : }

  00044	5e		 pop	 esi
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?GetAt@CColumnViewData@@QAE_NHAAVCRowViewData@@@Z ENDP	; CColumnViewData::GetAt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetAt@CColumnViewData@@QBE?AVCRowViewData@@H@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
___$ReturnUdt$ = 12					; size = 4
_nIndex$ = 12						; size = 4
?GetAt@CColumnViewData@@QBE?AVCRowViewData@@H@Z PROC	; CColumnViewData::GetAt, COMDAT
; _this$ = ecx

; 291  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetAt@CColumnViewData@@QBE?AVCRowViewData@@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 292  : 	POSITION pos = m_rowViewDataList.FindIndex(nIndex);

  00024	8b 45 0c	 mov	 eax, DWORD PTR _nIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1133 : 	if (nIndex >= m_nCount || nIndex < 0)

  00027	3b 41 0c	 cmp	 eax, DWORD PTR [ecx+12]
  0002a	7d 12		 jge	 SHORT $LN9@GetAt
  0002c	85 c0		 test	 eax, eax
  0002e	78 0e		 js	 SHORT $LN9@GetAt

; 1135 : 
; 1136 : 	CNode* pNode = m_pNodeHead;

  00030	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]

; 1137 : 	while (nIndex--)

  00033	74 0b		 je	 SHORT $LN5@GetAt
$LL6@GetAt:

; 1138 : 	{
; 1139 : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1140 : 		pNode = pNode->pNext;

  00035	8b 3f		 mov	 edi, DWORD PTR [edi]
  00037	83 e8 01	 sub	 eax, 1
  0003a	75 f9		 jne	 SHORT $LL6@GetAt

; 1141 : 	}
; 1142 : 	return (POSITION) pNode;

  0003c	eb 02		 jmp	 SHORT $LN5@GetAt
$LN9@GetAt:

; 1134 : 		return NULL;  // went too far

  0003e	33 ff		 xor	 edi, edi
$LN5@GetAt:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 197  : 	return m_graphRegion;

  00040	0f 10 47 08	 movups	 xmm0, XMMWORD PTR [edi+8]
  00044	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]

; 207  : 	return m_strHorzScaleName;

  00047	8d 47 28	 lea	 eax, DWORD PTR [edi+40]
  0004a	50		 push	 eax

; 197  : 	return m_graphRegion;

  0004b	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0

; 172  : 	m_strHorzScaleName(rowViewData.GetHorzScaleName())

  0004e	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]

; 202  : 	return m_drawingGraphRegion;

  00051	0f 10 47 18	 movups	 xmm0, XMMWORD PTR [edi+24]

; 172  : 	m_strHorzScaleName(rowViewData.GetHorzScaleName())

  00055	89 4d 0c	 mov	 DWORD PTR ___$ReturnUdt$[ebp], ecx

; 202  : 	return m_drawingGraphRegion;

  00058	0f 11 46 10	 movups	 XMMWORD PTR [esi+16], xmm0

; 207  : 	return m_strHorzScaleName;

  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 173  : {

  00062	8d 4e 24	 lea	 ecx, DWORD PTR [esi+36]
  00065	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 851  : {

  0006c	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@VCSubGraphViewData@@AAV1@@@6B@

; 852  : 	ASSERT(nBlockSize > 0);
; 853  : 
; 854  : 	m_nCount = 0;

  00072	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0

; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  00079	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00080	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00087	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 856  : 	m_pBlocks = NULL;

  0008e	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 857  : 	m_nBlockSize = nBlockSize;

  00095	c7 41 18 0a 00
	00 00		 mov	 DWORD PTR [ecx+24], 10	; 0000000aH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 174  : 	m_subGraphViewDataList = rowViewData.GetSubGraphViewDataList();

  0009c	8d 57 2c	 lea	 edx, DWORD PTR [edi+44]
  0009f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000a3	52		 push	 edx
  000a4	e8 00 00 00 00	 call	 ??4CSubGraphViewDataList@@QAEAAV0@ABV0@@Z ; CSubGraphViewDataList::operator=

; 293  : 	assert(pos != NULL);
; 294  : 	return m_rowViewDataList.GetAt(pos);

  000a9	8b c6		 mov	 eax, esi

; 295  : }

  000ab	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ae	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b5	59		 pop	 ecx
  000b6	5f		 pop	 edi
  000b7	5e		 pop	 esi
  000b8	8b e5		 mov	 esp, ebp
  000ba	5d		 pop	 ebp
  000bb	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetAt@CColumnViewData@@QBE?AVCRowViewData@@H@Z$1:
  00000	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00003	83 c1 20	 add	 ecx, 32			; 00000020H
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?GetAt@CColumnViewData@@QBE?AVCRowViewData@@H@Z$2:
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000f	83 c1 24	 add	 ecx, 36			; 00000024H
  00012	e9 00 00 00 00	 jmp	 ??1CSubGraphViewDataList@@QAE@XZ
  00017	cc		 int	 3
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
__ehhandler$?GetAt@CColumnViewData@@QBE?AVCRowViewData@@H@Z:
  0001c	90		 npad	 1
  0001d	90		 npad	 1
  0001e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00022	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00025	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00028	33 c8		 xor	 ecx, eax
  0002a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetAt@CColumnViewData@@QBE?AVCRowViewData@@H@Z
  00034	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetAt@CColumnViewData@@QBE?AVCRowViewData@@H@Z ENDP	; CColumnViewData::GetAt
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetAt@CColumnViewData@@QAEAAVCRowViewData@@H@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
?GetAt@CColumnViewData@@QAEAAVCRowViewData@@H@Z PROC	; CColumnViewData::GetAt, COMDAT
; _this$ = ecx

; 284  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 285  : 	POSITION pos = m_rowViewDataList.FindIndex(nIndex);

  00003	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1133 : 	if (nIndex >= m_nCount || nIndex < 0)

  00006	3b 41 0c	 cmp	 eax, DWORD PTR [ecx+12]
  00009	7d 17		 jge	 SHORT $LN7@GetAt
  0000b	85 c0		 test	 eax, eax
  0000d	78 13		 js	 SHORT $LN7@GetAt

; 1135 : 
; 1136 : 	CNode* pNode = m_pNodeHead;

  0000f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 1137 : 	while (nIndex--)

  00012	74 07		 je	 SHORT $LN10@GetAt
$LL4@GetAt:

; 1138 : 	{
; 1139 : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1140 : 		pNode = pNode->pNext;

  00014	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00016	83 e8 01	 sub	 eax, 1
  00019	75 f9		 jne	 SHORT $LL4@GetAt
$LN10@GetAt:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 287  : 	return m_rowViewDataList.GetAt(pos);

  0001b	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]

; 288  : }

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
$LN7@GetAt:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1134 : 		return NULL;  // went too far

  00022	33 c0		 xor	 eax, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 287  : 	return m_rowViewDataList.GetAt(pos);

  00024	b8 08 00 00 00	 mov	 eax, 8

; 288  : }

  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?GetAt@CColumnViewData@@QAEAAVCRowViewData@@H@Z ENDP	; CColumnViewData::GetAt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetRowViewDataList@CColumnViewData@@QAEAAV?$CList@VCRowViewData@@AAV1@@@XZ
_TEXT	SEGMENT
?GetRowViewDataList@CColumnViewData@@QAEAAV?$CList@VCRowViewData@@AAV1@@@XZ PROC ; CColumnViewData::GetRowViewDataList, COMDAT
; _this$ = ecx

; 280  : 	return m_rowViewDataList;

  00000	8b c1		 mov	 eax, ecx

; 281  : }

  00002	c3		 ret	 0
?GetRowViewDataList@CColumnViewData@@QAEAAV?$CList@VCRowViewData@@AAV1@@@XZ ENDP ; CColumnViewData::GetRowViewDataList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetRowViewDataList@CColumnViewData@@QBEABV?$CList@VCRowViewData@@AAV1@@@XZ
_TEXT	SEGMENT
?GetRowViewDataList@CColumnViewData@@QBEABV?$CList@VCRowViewData@@AAV1@@@XZ PROC ; CColumnViewData::GetRowViewDataList, COMDAT
; _this$ = ecx

; 272  : 	return m_rowViewDataList;

  00000	8b c1		 mov	 eax, ecx

; 273  : }

  00002	c3		 ret	 0
?GetRowViewDataList@CColumnViewData@@QBEABV?$CList@VCRowViewData@@AAV1@@@XZ ENDP ; CColumnViewData::GetRowViewDataList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?RemoveAll@CColumnViewData@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@CColumnViewData@@QAEXXZ PROC			; CColumnViewData::RemoveAll, COMDAT
; _this$ = ecx

; 266  : 	m_rowViewDataList.RemoveAll();

  00000	e9 00 00 00 00	 jmp	 ?RemoveAll@?$CList@VCRowViewData@@AAV1@@@QAEXXZ ; CList<CRowViewData,CRowViewData &>::RemoveAll
?RemoveAll@CColumnViewData@@QAEXXZ ENDP			; CColumnViewData::RemoveAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?AddTail@CColumnViewData@@QAEXVCRowViewData@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_rowViewData$ = 8					; size = 64
?AddTail@CColumnViewData@@QAEXVCRowViewData@@@Z PROC	; CColumnViewData::AddTail, COMDAT
; _this$ = ecx

; 260  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddTail@CColumnViewData@@QAEXVCRowViewData@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 261  : 	m_rowViewDataList.AddTail(rowViewData);

  00022	8d 45 08	 lea	 eax, DWORD PTR _rowViewData$[ebp]
  00025	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?AddTail@?$CList@VCRowViewData@@AAV1@@@QAEPAU__POSITION@@AAVCRowViewData@@@Z ; CList<CRowViewData,CRowViewData &>::AddTail
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 879  : 	RemoveAll();

  00032	8d 4d 2c	 lea	 ecx, DWORD PTR _rowViewData$[ebp+36]
  00035	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  0003c	c7 45 2c 00 00
	00 00		 mov	 DWORD PTR _rowViewData$[ebp+36], OFFSET ??_7?$CList@VCSubGraphViewData@@AAV1@@@6B@
  00043	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@VCSubGraphViewData@@AAV1@@@QAEXXZ ; CList<CSubGraphViewData,CSubGraphViewData &>::RemoveAll
  00048	8d 4d 28	 lea	 ecx, DWORD PTR _rowViewData$[ebp+32]
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 262  : }

  00051	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00054	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005b	59		 pop	 ecx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 40 00	 ret	 64			; 00000040H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddTail@CColumnViewData@@QAEXVCRowViewData@@@Z$0:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _rowViewData$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CRowViewData@@QAE@XZ
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?AddTail@CColumnViewData@@QAEXVCRowViewData@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddTail@CColumnViewData@@QAEXVCRowViewData@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddTail@CColumnViewData@@QAEXVCRowViewData@@@Z ENDP	; CColumnViewData::AddTail
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ??0CColumnViewData@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$GSCopy$ = -88					; size = 4
_this$ = -84						; size = 4
$T2 = -80						; size = 64
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_columnViewData$ = 8					; size = 4
??0CColumnViewData@@QAE@ABV0@@Z PROC			; CColumnViewData::CColumnViewData, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CColumnViewData@@QAE@ABV0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f1		 mov	 esi, ecx
  0002d	89 75 ac	 mov	 DWORD PTR _this$[ebp], esi
  00030	8b 5d 08	 mov	 ebx, DWORD PTR _columnViewData$[ebp]
  00033	89 75 a8	 mov	 DWORD PTR _this$GSCopy$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 851  : {

  00036	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CList@VCRowViewData@@AAV1@@@6B@

; 852  : 	ASSERT(nBlockSize > 0);
; 853  : 
; 854  : 	m_nCount = 0;

  0003c	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  00043	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0004a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00051	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 856  : 	m_pBlocks = NULL;

  00058	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 857  : 	m_nBlockSize = nBlockSize;

  0005f	c7 46 18 0a 00
	00 00		 mov	 DWORD PTR [esi+24], 10	; 0000000aH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 253  : 	for(int nIndex = 0; nIndex < columnViewData.GetCount(); nIndex++){

  00066	33 ff		 xor	 edi, edi
  00068	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006f	39 7b 0c	 cmp	 DWORD PTR [ebx+12], edi
  00072	7e 3e		 jle	 SHORT $LN23@CColumnVie
$LL4@CColumnVie:

; 254  : 		m_rowViewDataList.AddTail(columnViewData.GetAt(nIndex));

  00074	57		 push	 edi
  00075	8d 45 b0	 lea	 eax, DWORD PTR $T2[ebp]
  00078	8b cb		 mov	 ecx, ebx
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ?GetAt@CColumnViewData@@QBE?AVCRowViewData@@H@Z ; CColumnViewData::GetAt
  00080	50		 push	 eax
  00081	8b ce		 mov	 ecx, esi
  00083	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00087	e8 00 00 00 00	 call	 ?AddTail@?$CList@VCRowViewData@@AAV1@@@QAEPAU__POSITION@@AAVCRowViewData@@@Z ; CList<CRowViewData,CRowViewData &>::AddTail
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 879  : 	RemoveAll();

  0008c	8d 4d d4	 lea	 ecx, DWORD PTR $T2[ebp+36]
  0008f	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00093	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+36], OFFSET ??_7?$CList@VCSubGraphViewData@@AAV1@@@6B@
  0009a	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@VCSubGraphViewData@@AAV1@@@QAEXXZ ; CList<CSubGraphViewData,CSubGraphViewData &>::RemoveAll
  0009f	8d 4d d0	 lea	 ecx, DWORD PTR $T2[ebp+32]

; 880  : 	ASSERT(m_nCount == 0);
; 881  : }

  000a2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 253  : 	for(int nIndex = 0; nIndex < columnViewData.GetCount(); nIndex++){

  000ac	47		 inc	 edi
  000ad	3b 7b 0c	 cmp	 edi, DWORD PTR [ebx+12]
  000b0	7c c2		 jl	 SHORT $LL4@CColumnVie
$LN23@CColumnVie:

; 255  : 	}
; 256  : }

  000b2	8b c6		 mov	 eax, esi
  000b4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000be	59		 pop	 ecx
  000bf	5f		 pop	 edi
  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c5	33 cd		 xor	 ecx, ebp
  000c7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CColumnViewData@@QAE@ABV0@@Z$0:
  00000	8b 4d a8	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CList@VCRowViewData@@AAV1@@@UAE@XZ ; CList<CRowViewData,CRowViewData &>::~CList<CRowViewData,CRowViewData &>
__unwindfunclet$??0CColumnViewData@@QAE@ABV0@@Z$1:
  00008	8d 4d b0	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1CRowViewData@@QAE@XZ
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$??0CColumnViewData@@QAE@ABV0@@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a a4	 mov	 ecx, DWORD PTR [edx-92]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CColumnViewData@@QAE@ABV0@@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CColumnViewData@@QAE@ABV0@@Z ENDP			; CColumnViewData::CColumnViewData
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ??0CColumnViewData@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CColumnViewData@@QAE@XZ PROC				; CColumnViewData::CColumnViewData, COMDAT
; _this$ = ecx

; 248  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 249  : }

  00007	8b c1		 mov	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 851  : {

  00009	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@VCRowViewData@@AAV1@@@6B@

; 852  : 	ASSERT(nBlockSize > 0);
; 853  : 
; 854  : 	m_nCount = 0;

  0000f	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0

; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  00016	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  0001d	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00024	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 856  : 	m_pBlocks = NULL;

  0002b	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 857  : 	m_nBlockSize = nBlockSize;

  00032	c7 41 18 0a 00
	00 00		 mov	 DWORD PTR [ecx+24], 10	; 0000000aH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 249  : }

  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
??0CColumnViewData@@QAE@XZ ENDP				; CColumnViewData::CColumnViewData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ??4CColumnViewData@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
$T2 = -80						; size = 64
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_columnViewData$ = 8					; size = 4
??4CColumnViewData@@QAEAAV0@ABV0@@Z PROC		; CColumnViewData::operator=, COMDAT
; _this$ = ecx

; 235  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??4CColumnViewData@@QAEAAV0@ABV0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f1		 mov	 esi, ecx
  0002d	8b 5d 08	 mov	 ebx, DWORD PTR _columnViewData$[ebp]

; 236  : 	if(this == &columnViewData)

  00030	3b f3		 cmp	 esi, ebx
  00032	74 53		 je	 SHORT $LN22@operator

; 239  : 	for(int nIndex = 0; nIndex < columnViewData.GetCount(); nIndex++){

  00034	33 ff		 xor	 edi, edi
  00036	39 7b 0c	 cmp	 DWORD PTR [ebx+12], edi
  00039	7e 4c		 jle	 SHORT $LN22@operator
  0003b	0f 1f 44 00 00	 npad	 5
$LL4@operator:

; 240  : 		m_rowViewDataList.AddTail(columnViewData.GetAt(nIndex));

  00040	57		 push	 edi
  00041	8d 45 b0	 lea	 eax, DWORD PTR $T2[ebp]
  00044	8b cb		 mov	 ecx, ebx
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?GetAt@CColumnViewData@@QBE?AVCRowViewData@@H@Z ; CColumnViewData::GetAt
  0004c	50		 push	 eax
  0004d	8b ce		 mov	 ecx, esi
  0004f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00056	e8 00 00 00 00	 call	 ?AddTail@?$CList@VCRowViewData@@AAV1@@@QAEPAU__POSITION@@AAVCRowViewData@@@Z ; CList<CRowViewData,CRowViewData &>::AddTail
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 879  : 	RemoveAll();

  0005b	8d 4d d4	 lea	 ecx, DWORD PTR $T2[ebp+36]
  0005e	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00065	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+36], OFFSET ??_7?$CList@VCSubGraphViewData@@AAV1@@@6B@
  0006c	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@VCSubGraphViewData@@AAV1@@@QAEXXZ ; CList<CSubGraphViewData,CSubGraphViewData &>::RemoveAll
  00071	8d 4d d0	 lea	 ecx, DWORD PTR $T2[ebp+32]

; 880  : 	ASSERT(m_nCount == 0);
; 881  : }

  00074	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 239  : 	for(int nIndex = 0; nIndex < columnViewData.GetCount(); nIndex++){

  00081	47		 inc	 edi
  00082	3b 7b 0c	 cmp	 edi, DWORD PTR [ebx+12]
  00085	7c b9		 jl	 SHORT $LL4@operator
$LN22@operator:

; 241  : 	}
; 242  : 
; 243  : 	return *this;
; 244  : }

  00087	8b c6		 mov	 eax, esi
  00089	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00093	59		 pop	 ecx
  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009a	33 cd		 xor	 ecx, ebp
  0009c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4CColumnViewData@@QAEAAV0@ABV0@@Z$0:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CRowViewData@@QAE@XZ
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??4CColumnViewData@@QAEAAV0@ABV0@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??4CColumnViewData@@QAEAAV0@ABV0@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??4CColumnViewData@@QAEAAV0@ABV0@@Z ENDP		; CColumnViewData::operator=
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??1CRowViewData@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CRowViewData@@QAE@XZ PROC				; CRowViewData::~CRowViewData, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CRowViewData@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	8d 4e 24	 lea	 ecx, DWORD PTR [esi+36]

; 878  : {

  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002f	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@VCSubGraphViewData@@AAV1@@@6B@

; 879  : 	RemoveAll();

  00035	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@VCSubGraphViewData@@AAV1@@@QAEXXZ ; CList<CSubGraphViewData,CSubGraphViewData &>::RemoveAll
  0003a	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	5e		 pop	 esi
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
  00053	cc		 int	 3
  00054	cc		 int	 3
  00055	cc		 int	 3
  00056	cc		 int	 3
  00057	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CRowViewData@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CRowViewData@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CRowViewData@@QAE@XZ ENDP				; CRowViewData::~CRowViewData
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetSubGraphViewData@CRowViewData@@QAEAAVCSubGraphViewData@@H@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
?GetSubGraphViewData@CRowViewData@@QAEAAVCSubGraphViewData@@H@Z PROC ; CRowViewData::GetSubGraphViewData, COMDAT
; _this$ = ecx

; 226  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 129  : 	POSITION pos = m_subGraphViewDataList.FindIndex(nIndex);

  00003	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1133 : 	if (nIndex >= m_nCount || nIndex < 0)

  00006	3b 41 30	 cmp	 eax, DWORD PTR [ecx+48]
  00009	7d 17		 jge	 SHORT $LN9@GetSubGrap
  0000b	85 c0		 test	 eax, eax
  0000d	78 13		 js	 SHORT $LN9@GetSubGrap

; 1135 : 
; 1136 : 	CNode* pNode = m_pNodeHead;

  0000f	8b 49 28	 mov	 ecx, DWORD PTR [ecx+40]

; 1137 : 	while (nIndex--)

  00012	74 07		 je	 SHORT $LN12@GetSubGrap
$LL6@GetSubGrap:

; 1138 : 	{
; 1139 : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1140 : 		pNode = pNode->pNext;

  00014	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00016	83 e8 01	 sub	 eax, 1
  00019	75 f9		 jne	 SHORT $LL6@GetSubGrap
$LN12@GetSubGrap:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 131  : 	return m_subGraphViewDataList.GetAt(pos);

  0001b	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]

; 227  : 	return m_subGraphViewDataList.GetAt(nIndex);
; 228  : }

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
$LN9@GetSubGrap:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1134 : 		return NULL;  // went too far

  00022	33 c0		 xor	 eax, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 131  : 	return m_subGraphViewDataList.GetAt(pos);

  00024	b8 08 00 00 00	 mov	 eax, 8

; 227  : 	return m_subGraphViewDataList.GetAt(nIndex);
; 228  : }

  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?GetSubGraphViewData@CRowViewData@@QAEAAVCSubGraphViewData@@H@Z ENDP ; CRowViewData::GetSubGraphViewData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetSubGraphViewDataCount@CRowViewData@@QBEHXZ
_TEXT	SEGMENT
?GetSubGraphViewDataCount@CRowViewData@@QBEHXZ PROC	; CRowViewData::GetSubGraphViewDataCount, COMDAT
; _this$ = ecx

; 222  : 	return m_subGraphViewDataList.GetCount();

  00000	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]

; 223  : }

  00003	c3		 ret	 0
?GetSubGraphViewDataCount@CRowViewData@@QBEHXZ ENDP	; CRowViewData::GetSubGraphViewDataCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetSubGraphViewDataList@CRowViewData@@QBEABVCSubGraphViewDataList@@XZ
_TEXT	SEGMENT
?GetSubGraphViewDataList@CRowViewData@@QBEABVCSubGraphViewDataList@@XZ PROC ; CRowViewData::GetSubGraphViewDataList, COMDAT
; _this$ = ecx

; 217  : 	return m_subGraphViewDataList;

  00000	8d 41 24	 lea	 eax, DWORD PTR [ecx+36]

; 218  : }

  00003	c3		 ret	 0
?GetSubGraphViewDataList@CRowViewData@@QBEABVCSubGraphViewDataList@@XZ ENDP ; CRowViewData::GetSubGraphViewDataList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetSubGraphViewDataList@CRowViewData@@QAEAAVCSubGraphViewDataList@@XZ
_TEXT	SEGMENT
?GetSubGraphViewDataList@CRowViewData@@QAEAAVCSubGraphViewDataList@@XZ PROC ; CRowViewData::GetSubGraphViewDataList, COMDAT
; _this$ = ecx

; 212  : 	return m_subGraphViewDataList;

  00000	8d 41 24	 lea	 eax, DWORD PTR [ecx+36]

; 213  : }

  00003	c3		 ret	 0
?GetSubGraphViewDataList@CRowViewData@@QAEAAVCSubGraphViewDataList@@XZ ENDP ; CRowViewData::GetSubGraphViewDataList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetHorzScaleName@CRowViewData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetHorzScaleName@CRowViewData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC ; CRowViewData::GetHorzScaleName, COMDAT
; _this$ = ecx

; 206  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 207  : 	return m_strHorzScaleName;

  00003	8d 41 20	 lea	 eax, DWORD PTR [ecx+32]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00009	50		 push	 eax
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00010	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 208  : }

  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
?GetHorzScaleName@CRowViewData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CRowViewData::GetHorzScaleName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetDrawingGraphRegion@CRowViewData@@QBE?AVCRect@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetDrawingGraphRegion@CRowViewData@@QBE?AVCRect@@XZ PROC ; CRowViewData::GetDrawingGraphRegion, COMDAT
; _this$ = ecx

; 201  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 	return m_drawingGraphRegion;

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	0f 10 41 10	 movups	 xmm0, XMMWORD PTR [ecx+16]
  0000a	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 203  : }

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?GetDrawingGraphRegion@CRowViewData@@QBE?AVCRect@@XZ ENDP ; CRowViewData::GetDrawingGraphRegion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetGraphRegion@CRowViewData@@QBE?AVCRect@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetGraphRegion@CRowViewData@@QBE?AVCRect@@XZ PROC	; CRowViewData::GetGraphRegion, COMDAT
; _this$ = ecx

; 196  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 	return m_graphRegion;

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00009	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 198  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?GetGraphRegion@CRowViewData@@QBE?AVCRect@@XZ ENDP	; CRowViewData::GetGraphRegion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?SetHorzScaleName@CRowViewData@@QAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_strHorzScaleName$ = 8					; size = 4
?SetHorzScaleName@CRowViewData@@QAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC ; CRowViewData::SetHorzScaleName, COMDAT
; _this$ = ecx

; 190  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 191  : 	m_strHorzScaleName = strHorzScaleName;

  00003	83 c1 20	 add	 ecx, 32			; 00000020H

; 192  : }

  00006	5d		 pop	 ebp

; 191  : 	m_strHorzScaleName = strHorzScaleName;

  00007	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
?SetHorzScaleName@CRowViewData@@QAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CRowViewData::SetHorzScaleName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?SetRegion@CRowViewData@@QAEXABVCRect@@0@Z
_TEXT	SEGMENT
_graphRegion$ = 8					; size = 4
_drawingGraphRegion$ = 12				; size = 4
?SetRegion@CRowViewData@@QAEXABVCRect@@0@Z PROC		; CRowViewData::SetRegion, COMDAT
; _this$ = ecx

; 184  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 185  : 	m_graphRegion = graphRegion;

  00003	8b 45 08	 mov	 eax, DWORD PTR _graphRegion$[ebp]
  00006	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 186  : 	m_drawingGraphRegion = drawingGraphRegion;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _drawingGraphRegion$[ebp]
  0000c	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  0000f	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00012	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0

; 187  : }

  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?SetRegion@CRowViewData@@QAEXABVCRect@@0@Z ENDP		; CRowViewData::SetRegion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?RemoveAll@CRowViewData@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@CRowViewData@@QAEXXZ PROC			; CRowViewData::RemoveAll, COMDAT
; _this$ = ecx

; 103  : 	m_subGraphViewDataList.RemoveAll();

  00000	83 c1 24	 add	 ecx, 36			; 00000024H
  00003	e9 00 00 00 00	 jmp	 ?RemoveAll@?$CList@VCSubGraphViewData@@AAV1@@@QAEXXZ ; CList<CSubGraphViewData,CSubGraphViewData &>::RemoveAll
?RemoveAll@CRowViewData@@QAEXXZ ENDP			; CRowViewData::RemoveAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ??0CRowViewData@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_rowViewData$ = 8					; size = 4
??0CRowViewData@@QAE@ABV0@@Z PROC			; CRowViewData::CRowViewData, COMDAT
; _this$ = ecx

; 173  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CRowViewData@@QAE@ABV0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi

; 197  : 	return m_graphRegion;

  0002a	8b 75 08	 mov	 esi, DWORD PTR _rowViewData$[ebp]

; 172  : 	m_strHorzScaleName(rowViewData.GetHorzScaleName())

  0002d	8d 4f 20	 lea	 ecx, DWORD PTR [edi+32]
  00030	89 4d 08	 mov	 DWORD PTR ___$ReturnUdt$[ebp], ecx

; 197  : 	return m_graphRegion;

  00033	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]

; 207  : 	return m_strHorzScaleName;

  00036	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  00039	50		 push	 eax

; 197  : 	return m_graphRegion;

  0003a	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0

; 202  : 	return m_drawingGraphRegion;

  0003d	0f 10 46 10	 movups	 xmm0, XMMWORD PTR [esi+16]
  00041	0f 11 47 10	 movups	 XMMWORD PTR [edi+16], xmm0

; 207  : 	return m_strHorzScaleName;

  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 173  : {

  0004b	8d 4f 24	 lea	 ecx, DWORD PTR [edi+36]
  0004e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 851  : {

  00055	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@VCSubGraphViewData@@AAV1@@@6B@

; 852  : 	ASSERT(nBlockSize > 0);
; 853  : 
; 854  : 	m_nCount = 0;

  0005b	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0

; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  00062	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00069	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00070	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 856  : 	m_pBlocks = NULL;

  00077	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 857  : 	m_nBlockSize = nBlockSize;

  0007e	c7 41 18 0a 00
	00 00		 mov	 DWORD PTR [ecx+24], 10	; 0000000aH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 174  : 	m_subGraphViewDataList = rowViewData.GetSubGraphViewDataList();

  00085	8d 46 24	 lea	 eax, DWORD PTR [esi+36]
  00088	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ??4CSubGraphViewDataList@@QAEAAV0@ABV0@@Z ; CSubGraphViewDataList::operator=

; 175  : }

  00092	8b c7		 mov	 eax, edi
  00094	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00097	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009e	59		 pop	 ecx
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CRowViewData@@QAE@ABV0@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 20	 add	 ecx, 32			; 00000020H
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$??0CRowViewData@@QAE@ABV0@@Z$1:
  0000c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 24	 add	 ecx, 36			; 00000024H
  00012	e9 00 00 00 00	 jmp	 ??1CSubGraphViewDataList@@QAE@XZ
  00017	cc		 int	 3
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
__ehhandler$??0CRowViewData@@QAE@ABV0@@Z:
  0001c	90		 npad	 1
  0001d	90		 npad	 1
  0001e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00022	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00025	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00028	33 c8		 xor	 ecx, eax
  0002a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CRowViewData@@QAE@ABV0@@Z
  00034	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CRowViewData@@QAE@ABV0@@Z ENDP			; CRowViewData::CRowViewData
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ??0CRowViewData@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CRowViewData@@QAE@XZ PROC				; CRowViewData::CRowViewData, COMDAT
; _this$ = ecx

; 166  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 540  : 	left = l;

  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 166  : {

  00010	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 541  : 	top = t;

  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 542  : 	right = r;

  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 543  : 	bottom = b;

  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 540  : 	left = l;

  00028	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 541  : 	top = t;

  0002f	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 542  : 	right = r;

  00036	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0

; 543  : 	bottom = b;

  0003d	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 166  : {

  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 851  : {

  0004a	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], OFFSET ??_7?$CList@VCSubGraphViewData@@AAV1@@@6B@
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 167  : }

  00051	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 854  : 	m_nCount = 0;

  00053	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], 0

; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  0005a	c7 46 34 00 00
	00 00		 mov	 DWORD PTR [esi+52], 0
  00061	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0
  00068	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0

; 856  : 	m_pBlocks = NULL;

  0006f	c7 46 38 00 00
	00 00		 mov	 DWORD PTR [esi+56], 0

; 857  : 	m_nBlockSize = nBlockSize;

  00076	c7 46 3c 0a 00
	00 00		 mov	 DWORD PTR [esi+60], 10	; 0000000aH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 167  : }

  0007d	5e		 pop	 esi
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c3		 ret	 0
??0CRowViewData@@QAE@XZ ENDP				; CRowViewData::CRowViewData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ??4CRowViewData@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_rowViewData$ = 8					; size = 4
??4CRowViewData@@QAEAAV0@ABV0@@Z PROC			; CRowViewData::operator=, COMDAT
; _this$ = ecx

; 151  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??4CRowViewData@@QAEAAV0@ABV0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx

; 152  : 	if(this == &rowViewData)

  00026	8b 7d 08	 mov	 edi, DWORD PTR _rowViewData$[ebp]
  00029	3b f7		 cmp	 esi, edi
  0002b	74 4b		 je	 SHORT $LN14@operator

; 197  : 	return m_graphRegion;

  0002d	0f 10 07	 movups	 xmm0, XMMWORD PTR [edi]

; 207  : 	return m_strHorzScaleName;

  00030	8d 47 20	 lea	 eax, DWORD PTR [edi+32]
  00033	50		 push	 eax

; 153  : 		return *this;
; 154  : 
; 155  : 	m_graphRegion = rowViewData.GetGraphRegion();

  00034	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0

; 207  : 	return m_strHorzScaleName;

  00037	8d 4d 08	 lea	 ecx, DWORD PTR $T2[ebp]

; 156  : 	m_drawingGraphRegion = rowViewData.GetDrawingGraphRegion();

  0003a	0f 10 47 10	 movups	 xmm0, XMMWORD PTR [edi+16]
  0003e	0f 11 46 10	 movups	 XMMWORD PTR [esi+16], xmm0

; 207  : 	return m_strHorzScaleName;

  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 157  : 	m_strHorzScaleName = rowViewData.GetHorzScaleName();

  00048	8d 45 08	 lea	 eax, DWORD PTR $T2[ebp]
  0004b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00052	50		 push	 eax
  00053	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  0005c	8d 4d 08	 lea	 ecx, DWORD PTR $T2[ebp]
  0005f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 158  : 	m_subGraphViewDataList = rowViewData.GetSubGraphViewDataList();

  0006c	8d 47 24	 lea	 eax, DWORD PTR [edi+36]
  0006f	50		 push	 eax
  00070	8d 4e 24	 lea	 ecx, DWORD PTR [esi+36]
  00073	e8 00 00 00 00	 call	 ??4CSubGraphViewDataList@@QAEAAV0@ABV0@@Z ; CSubGraphViewDataList::operator=
$LN14@operator:

; 159  : 	return *this;
; 160  : }

  00078	8b c6		 mov	 eax, esi
  0007a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00084	59		 pop	 ecx
  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4CRowViewData@@QAEAAV0@ABV0@@Z$0:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
__ehhandler$??4CRowViewData@@QAEAAV0@ABV0@@Z:
  0000e	90		 npad	 1
  0000f	90		 npad	 1
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??4CRowViewData@@QAEAAV0@ABV0@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??4CRowViewData@@QAEAAV0@ABV0@@Z ENDP			; CRowViewData::operator=
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??1CSubGraphViewDataList@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CSubGraphViewDataList@@QAE@XZ PROC			; CSubGraphViewDataList::~CSubGraphViewDataList, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CSubGraphViewDataList@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 878  : {

  00022	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00029	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@VCSubGraphViewData@@AAV1@@@6B@

; 879  : 	RemoveAll();

  0002f	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@VCSubGraphViewData@@AAV1@@@QAEXXZ ; CList<CSubGraphViewData,CSubGraphViewData &>::RemoveAll
  00034	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00037	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0003e	59		 pop	 ecx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
  00043	cc		 int	 3
  00044	cc		 int	 3
  00045	cc		 int	 3
  00046	cc		 int	 3
  00047	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CSubGraphViewDataList@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CSubGraphViewDataList@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CSubGraphViewDataList@@QAE@XZ ENDP			; CSubGraphViewDataList::~CSubGraphViewDataList
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_G?$CList@VCSubGraphViewData@@AAV1@@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CList@VCSubGraphViewData@@AAV1@@@UAEPAXI@Z PROC	; CList<CSubGraphViewData,CSubGraphViewData &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CList@VCSubGraphViewData@@AAV1@@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 878  : {

  00025	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CList@VCSubGraphViewData@@AAV1@@@6B@

; 879  : 	RemoveAll();

  00032	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@VCSubGraphViewData@@AAV1@@@QAEXXZ ; CList<CSubGraphViewData,CSubGraphViewData &>::RemoveAll
  00037	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0003a	a8 01		 test	 al, 1
  0003c	74 2c		 je	 SHORT $LN12@scalar
  0003e	a8 04		 test	 al, 4
  00040	75 1d		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  00042	56		 push	 esi
  00043	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00048	83 c4 04	 add	 esp, 4
  0004b	8b c6		 mov	 eax, esi
  0004d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00050	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00057	59		 pop	 ecx
  00058	5e		 pop	 esi
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
$LN3@scalar:
  0005f	6a 1c		 push	 28			; 0000001cH
  00061	56		 push	 esi
  00062	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00067	83 c4 08	 add	 esp, 8
$LN12@scalar:
  0006a	8b c6		 mov	 eax, esi
  0006c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00076	59		 pop	 ecx
  00077	5e		 pop	 esi
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
  0007e	cc		 int	 3
  0007f	cc		 int	 3
  00080	cc		 int	 3
  00081	cc		 int	 3
  00082	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CList@VCSubGraphViewData@@AAV1@@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CList@VCSubGraphViewData@@AAV1@@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CList@VCSubGraphViewData@@AAV1@@@UAEPAXI@Z ENDP	; CList<CSubGraphViewData,CSubGraphViewData &>::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CList@VCSubGraphViewData@@AAV1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_newData$2 = -44					; size = 20
_nNewCount$1$ = -24					; size = 4
_pData$1$ = -20						; size = 4
_pData$1$ = -20						; size = 4
_pNode$1$ = -20						; size = 4
_nCount$1$ = -16					; size = 4
_nElementsLeft$1$ = -16					; size = 4
_this$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ar$ = 8						; size = 4
?Serialize@?$CList@VCSubGraphViewData@@AAV1@@@UAEXAAVCArchive@@@Z PROC ; CList<CSubGraphViewData,CSubGraphViewData &>::Serialize, COMDAT
; _this$ = ecx

; 1169 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Serialize@?$CList@VCSubGraphViewData@@AAV1@@@UAEXAAVCArchive@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00030	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00033	f7 d0		 not	 eax
  00035	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1174 : 	if (ar.IsStoring())

  00037	0f 84 b6 00 00
	00		 je	 $LN7@Serialize

; 1175 : 	{
; 1176 : 		ar.WriteCount(m_nCount);

  0003d	ff 73 0c	 push	 DWORD PTR [ebx+12]
  00040	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1177 : 		for (CNode* pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  00045	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00048	89 45 ec	 mov	 DWORD PTR _pNode$1$[ebp], eax
  0004b	85 c0		 test	 eax, eax
  0004d	0f 84 77 01 00
	00		 je	 $LN69@Serialize
$LL4@Serialize:

; 1178 : 		{
; 1179 : 			ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1180 : 			TYPE* pData;
; 1181 : 			/*
; 1182 : 			 * in some cases the & operator might be overloaded, and we cannot use it to obtain
; 1183 : 			 * the address of a given object.  We then use the following trick to get the address
; 1184 : 			 */
; 1185 : 			pData = reinterpret_cast< TYPE* >( &reinterpret_cast< int& >( static_cast< TYPE& >( pNode->data ) ) );

  00053	8d 70 08	 lea	 esi, DWORD PTR [eax+8]

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00056	85 f6		 test	 esi, esi
  00058	0f 84 89 01 00
	00		 je	 $LN61@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  0005e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00061	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00064	f7 d0		 not	 eax
  00066	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  00068	74 32		 je	 SHORT $LN22@Serialize

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0006a	b8 01 00 00 00	 mov	 eax, 1
  0006f	89 45 f0	 mov	 DWORD PTR _nElementsLeft$1$[ebp], eax
$LL17@Serialize:

; 79   : 		pData = pElements;
; 80   : 		while( nElementsLeft > 0 )
; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00072	bb 66 66 66 06	 mov	 ebx, 107374182		; 06666666H
  00077	3b c3		 cmp	 eax, ebx
  00079	0f 42 d8	 cmovb	 ebx, eax

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0007c	8d 3c 9b	 lea	 edi, DWORD PTR [ebx+ebx*4]
  0007f	c1 e7 02	 shl	 edi, 2
  00082	57		 push	 edi
  00083	56		 push	 esi
  00084	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  00089	8b 45 f0	 mov	 eax, DWORD PTR _nElementsLeft$1$[ebp]

; 87   : 			pData += nElementsToWrite;

  0008c	03 f7		 add	 esi, edi
  0008e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00091	2b c3		 sub	 eax, ebx
  00093	89 45 f0	 mov	 DWORD PTR _nElementsLeft$1$[ebp], eax
  00096	85 c0		 test	 eax, eax
  00098	75 d8		 jne	 SHORT $LL17@Serialize

; 88   : 		}
; 89   : 	}

  0009a	eb 33		 jmp	 SHORT $LN2@Serialize
$LN22@Serialize:

; 90   : 	else
; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  0009c	bf 01 00 00 00	 mov	 edi, 1
$LL19@Serialize:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000a1	bb 66 66 66 06	 mov	 ebx, 107374182		; 06666666H
  000a6	3b fb		 cmp	 edi, ebx
  000a8	0f 42 df	 cmovb	 ebx, edi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  000ab	8d 04 9b	 lea	 eax, DWORD PTR [ebx+ebx*4]
  000ae	c1 e0 02	 shl	 eax, 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  000b1	50		 push	 eax
  000b2	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  000b3	89 45 f0	 mov	 DWORD PTR _nCount$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  000b6	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  000bb	8b 4d f0	 mov	 ecx, DWORD PTR _nCount$1$[ebp]
  000be	3b c1		 cmp	 eax, ecx
  000c0	0f 85 18 01 00
	00		 jne	 $LN60@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  000c6	03 f1		 add	 esi, ecx
  000c8	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;

  000cb	2b fb		 sub	 edi, ebx
  000cd	75 d2		 jne	 SHORT $LL19@Serialize
$LN2@Serialize:

; 1177 : 		for (CNode* pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  000cf	8b 45 ec	 mov	 eax, DWORD PTR _pNode$1$[ebp]
  000d2	8b 00		 mov	 eax, DWORD PTR [eax]
  000d4	89 45 ec	 mov	 DWORD PTR _pNode$1$[ebp], eax
  000d7	85 c0		 test	 eax, eax
  000d9	0f 85 74 ff ff
	ff		 jne	 $LL4@Serialize

; 1198 : 	}
; 1199 : }

  000df	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e9	59		 pop	 ecx
  000ea	5f		 pop	 edi
  000eb	5e		 pop	 esi
  000ec	5b		 pop	 ebx
  000ed	8b e5		 mov	 esp, ebp
  000ef	5d		 pop	 ebp
  000f0	c2 04 00	 ret	 4
$LN7@Serialize:

; 1186 : 			SerializeElements<TYPE>(ar, pData, 1);
; 1187 : 		}
; 1188 : 	}
; 1189 : 	else
; 1190 : 	{
; 1191 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000f3	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount

; 1192 : 		while (nNewCount--)

  000f8	85 c0		 test	 eax, eax
  000fa	0f 84 ca 00 00
	00		 je	 $LN69@Serialize
$LL5@Serialize:

; 1194 : 			TYPE newData[1];

  00100	68 00 00 00 00	 push	 OFFSET ??1CSubGraphViewData@@QAE@XZ
  00105	68 00 00 00 00	 push	 OFFSET ??0CSubGraphViewData@@QAE@XZ ; CSubGraphViewData::CSubGraphViewData
  0010a	48		 dec	 eax
  0010b	6a 01		 push	 1
  0010d	89 45 e8	 mov	 DWORD PTR _nNewCount$1$[ebp], eax
  00110	8d 45 d4	 lea	 eax, DWORD PTR _newData$2[ebp]
  00113	6a 14		 push	 20			; 00000014H
  00115	50		 push	 eax
  00116	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  0011b	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1194 : 			TYPE newData[1];

  0011e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00125	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00128	f7 d0		 not	 eax
  0012a	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  0012c	8d 45 d4	 lea	 eax, DWORD PTR _newData$2[ebp]
  0012f	89 45 ec	 mov	 DWORD PTR _pData$1$[ebp], eax
  00132	74 34		 je	 SHORT $LN43@Serialize

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  00134	bb 01 00 00 00	 mov	 ebx, 1
  00139	0f 1f 80 00 00
	00 00		 npad	 7
$LL38@Serialize:

; 79   : 		pData = pElements;
; 80   : 		while( nElementsLeft > 0 )
; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00140	bf 66 66 66 06	 mov	 edi, 107374182		; 06666666H
  00145	3b df		 cmp	 ebx, edi
  00147	0f 42 fb	 cmovb	 edi, ebx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0014a	8d 34 bf	 lea	 esi, DWORD PTR [edi+edi*4]
  0014d	c1 e6 02	 shl	 esi, 2
  00150	56		 push	 esi
  00151	50		 push	 eax
  00152	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 87   : 			pData += nElementsToWrite;

  00157	8b 45 ec	 mov	 eax, DWORD PTR _pData$1$[ebp]
  0015a	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0015d	03 c6		 add	 eax, esi
  0015f	89 45 ec	 mov	 DWORD PTR _pData$1$[ebp], eax
  00162	2b df		 sub	 ebx, edi
  00164	75 da		 jne	 SHORT $LL38@Serialize

; 88   : 		}
; 89   : 	}

  00166	eb 32		 jmp	 SHORT $LN41@Serialize
$LN43@Serialize:

; 90   : 	else
; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  00168	be 01 00 00 00	 mov	 esi, 1
  0016d	0f 1f 00	 npad	 3
$LL40@Serialize:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00170	bf 66 66 66 06	 mov	 edi, 107374182		; 06666666H
  00175	3b f7		 cmp	 esi, edi
  00177	0f 42 fe	 cmovb	 edi, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0017a	8d 1c bf	 lea	 ebx, DWORD PTR [edi+edi*4]
  0017d	c1 e3 02	 shl	 ebx, 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00180	53		 push	 ebx
  00181	50		 push	 eax
  00182	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  00187	3b c3		 cmp	 eax, ebx
  00189	75 53		 jne	 SHORT $LN60@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  0018b	8b 45 ec	 mov	 eax, DWORD PTR _pData$1$[ebp]
  0018e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]

; 104  : 			pData += nElementsToRead;

  00191	03 c3		 add	 eax, ebx
  00193	89 45 ec	 mov	 DWORD PTR _pData$1$[ebp], eax
  00196	2b f7		 sub	 esi, edi
  00198	75 d6		 jne	 SHORT $LL40@Serialize
$LN41@Serialize:

; 1195 : 			SerializeElements<TYPE>(ar, newData, 1);
; 1196 : 			AddTail(newData[0]);

  0019a	8b 4d f0	 mov	 ecx, DWORD PTR _this$1$[ebp]
  0019d	8d 45 d4	 lea	 eax, DWORD PTR _newData$2[ebp]
  001a0	50		 push	 eax
  001a1	e8 00 00 00 00	 call	 ?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z ; CList<CSubGraphViewData,CSubGraphViewData &>::AddTail

; 1197 : 		}

  001a6	68 00 00 00 00	 push	 OFFSET ??1CSubGraphViewData@@QAE@XZ
  001ab	6a 01		 push	 1
  001ad	6a 14		 push	 20			; 00000014H
  001af	8d 45 d4	 lea	 eax, DWORD PTR _newData$2[ebp]
  001b2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001b9	50		 push	 eax
  001ba	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  001bf	8b 45 e8	 mov	 eax, DWORD PTR _nNewCount$1$[ebp]
  001c2	85 c0		 test	 eax, eax
  001c4	0f 85 36 ff ff
	ff		 jne	 $LL5@Serialize
$LN69@Serialize:

; 1198 : 	}
; 1199 : }

  001ca	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001cd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001d4	59		 pop	 ecx
  001d5	5f		 pop	 edi
  001d6	5e		 pop	 esi
  001d7	5b		 pop	 ebx
  001d8	8b e5		 mov	 esp, ebp
  001da	5d		 pop	 ebp
  001db	c2 04 00	 ret	 4
$LN60@Serialize:
  001de	6a 00		 push	 0
  001e0	6a 03		 push	 3
  001e2	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN61@Serialize:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  001e7	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN87@Serialize:
  001ec	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Serialize@?$CList@VCSubGraphViewData@@AAV1@@@UAEXAAVCArchive@@@Z$0:
  00000	68 00 00 00 00	 push	 OFFSET ??1CSubGraphViewData@@QAE@XZ
  00005	6a 01		 push	 1
  00007	6a 14		 push	 20			; 00000014H
  00009	8d 45 d4	 lea	 eax, DWORD PTR _newData$2[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00012	c3		 ret	 0
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
  00017	cc		 int	 3
__ehhandler$?Serialize@?$CList@VCSubGraphViewData@@AAV1@@@UAEXAAVCArchive@@@Z:
  00018	90		 npad	 1
  00019	90		 npad	 1
  0001a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00021	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Serialize@?$CList@VCSubGraphViewData@@AAV1@@@UAEXAAVCArchive@@@Z
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Serialize@?$CList@VCSubGraphViewData@@AAV1@@@UAEXAAVCArchive@@@Z ENDP ; CList<CSubGraphViewData,CSubGraphViewData &>::Serialize
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CList@VCSubGraphViewData@@AAV1@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CList@VCSubGraphViewData@@AAV1@@@UAE@XZ PROC	; CList<CSubGraphViewData,CSubGraphViewData &>::~CList<CSubGraphViewData,CSubGraphViewData &>, COMDAT
; _this$ = ecx

; 878  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CList@VCSubGraphViewData@@AAV1@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00022	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@VCSubGraphViewData@@AAV1@@@6B@

; 879  : 	RemoveAll();

  00028	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@VCSubGraphViewData@@AAV1@@@QAEXXZ ; CList<CSubGraphViewData,CSubGraphViewData &>::RemoveAll

; 880  : 	ASSERT(m_nCount == 0);
; 881  : }

  0002d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00030	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00037	59		 pop	 ecx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
  0003c	cc		 int	 3
  0003d	cc		 int	 3
  0003e	cc		 int	 3
  0003f	cc		 int	 3
  00040	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CList@VCSubGraphViewData@@AAV1@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CList@VCSubGraphViewData@@AAV1@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CList@VCSubGraphViewData@@AAV1@@@UAE@XZ ENDP	; CList<CSubGraphViewData,CSubGraphViewData &>::~CList<CSubGraphViewData,CSubGraphViewData &>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\BlockBaseData.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?NewNode@?$CList@VCSubGraphViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_pPrev$ = 8						; size = 4
_pNext$ = 12						; size = 4
?NewNode@?$CList@VCSubGraphViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z PROC ; CList<CSubGraphViewData,CSubGraphViewData &>::NewNode, COMDAT
; _this$ = ecx

; 901  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?NewNode@?$CList@VCSubGraphViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx

; 902  : 	if (m_pNodeFree == NULL)

  00026	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0002a	75 35		 jne	 SHORT $LN7@NewNode

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  0002c	6a 1c		 push	 28			; 0000001cH
  0002e	ff 76 18	 push	 DWORD PTR [esi+24]
  00031	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  0003a	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  0003d	8d 0c d5 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*8]
  00044	2b ca		 sub	 ecx, edx
  00046	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00049	83 c0 ec	 add	 eax, -20		; ffffffecH

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  0004c	83 c2 ff	 add	 edx, -1
  0004f	78 10		 js	 SHORT $LN7@NewNode
$LL4@NewNode:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00051	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00054	89 08		 mov	 DWORD PTR [eax], ecx

; 915  : 			m_pNodeFree = pNode;

  00056	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00059	83 e8 1c	 sub	 eax, 28			; 0000001cH
  0005c	83 ea 01	 sub	 edx, 1
  0005f	79 f0		 jns	 SHORT $LL4@NewNode
$LN7@NewNode:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00061	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  00064	85 ff		 test	 edi, edi
  00066	74 70		 je	 SHORT $LN25@NewNode

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  00068	8b 07		 mov	 eax, DWORD PTR [edi]
  0006a	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 922  : 	pNode->pPrev = pPrev;

  0006d	8b 45 08	 mov	 eax, DWORD PTR _pPrev$[ebp]
  00070	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 923  : 	pNode->pNext = pNext;

  00073	8b 45 0c	 mov	 eax, DWORD PTR _pNext$[ebp]
  00076	89 07		 mov	 DWORD PTR [edi], eax

; 924  : 	m_nCount++;

  00078	ff 46 0c	 inc	 DWORD PTR [esi+12]

; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;

  0007b	8d 77 08	 lea	 esi, DWORD PTR [edi+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 32   : 	m_strTitle(""),

  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00083	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;

  00086	89 75 08	 mov	 DWORD PTR $T2[ebp], esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 30   : 	m_TYPEGraph(CGraphBaseData::GTNONE),

  00089	c7 06 ff ff ff
	ff		 mov	 DWORD PTR [esi], -1
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\BlockBaseData.h

; 43   : 	CGraphStyle(const int style) { m_nStyle = style; };

  0008f	c7 46 04 ff ff
	ff ff		 mov	 DWORD PTR [esi+4], -1
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 32   : 	m_strTitle(""),

  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z

; 33   : 	m_strPacketNames(""),

  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  000a1	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  000a4	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z

; 34   : 	m_strRQ("DEFAULT")

  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_07MGCPDNLD@DEFAULT@
  000b6	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  000b9	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 931  : 	return pNode;

  000c3	8b c7		 mov	 eax, edi

; 932  : }

  000c5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000cf	59		 pop	 ecx
  000d0	5f		 pop	 edi
  000d1	5e		 pop	 esi
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c2 08 00	 ret	 8
$LN25@NewNode:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  000d8	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN23@NewNode:
  000dd	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NewNode@?$CList@VCSubGraphViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z$0:
  00000	8b 4d 08	 mov	 ecx, DWORD PTR $T2[ebp]
  00003	83 c1 08	 add	 ecx, 8
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?NewNode@?$CList@VCSubGraphViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z$1:
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR $T2[ebp]
  0000f	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
__ehhandler$?NewNode@?$CList@VCSubGraphViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z:
  0001d	90		 npad	 1
  0001e	90		 npad	 1
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?NewNode@?$CList@VCSubGraphViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?NewNode@?$CList@VCSubGraphViewData@@AAV1@@@IAEPAUCNode@1@PAU21@0@Z ENDP ; CList<CSubGraphViewData,CSubGraphViewData &>::NewNode
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?FindIndex@?$CList@VCSubGraphViewData@@AAV1@@@QBEPAU__POSITION@@H@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
?FindIndex@?$CList@VCSubGraphViewData@@AAV1@@@QBEPAU__POSITION@@H@Z PROC ; CList<CSubGraphViewData,CSubGraphViewData &>::FindIndex, COMDAT
; _this$ = ecx

; 1130 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1131 : 	ASSERT_VALID(this);
; 1132 : 
; 1133 : 	if (nIndex >= m_nCount || nIndex < 0)

  00003	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00006	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00009	7d 14		 jge	 SHORT $LN5@FindIndex
  0000b	85 d2		 test	 edx, edx
  0000d	78 10		 js	 SHORT $LN5@FindIndex

; 1135 : 
; 1136 : 	CNode* pNode = m_pNodeHead;

  0000f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1137 : 	while (nIndex--)

  00012	74 0d		 je	 SHORT $LN1@FindIndex
$LL2@FindIndex:

; 1138 : 	{
; 1139 : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1140 : 		pNode = pNode->pNext;

  00014	8b 00		 mov	 eax, DWORD PTR [eax]
  00016	83 ea 01	 sub	 edx, 1
  00019	75 f9		 jne	 SHORT $LL2@FindIndex

; 1141 : 	}
; 1142 : 	return (POSITION) pNode;
; 1143 : }

  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
$LN5@FindIndex:

; 1134 : 		return NULL;  // went too far

  0001f	33 c0		 xor	 eax, eax
$LN1@FindIndex:

; 1141 : 	}
; 1142 : 	return (POSITION) pNode;
; 1143 : }

  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?FindIndex@?$CList@VCSubGraphViewData@@AAV1@@@QBEPAU__POSITION@@H@Z ENDP ; CList<CSubGraphViewData,CSubGraphViewData &>::FindIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CList@VCSubGraphViewData@@AAV1@@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CList@VCSubGraphViewData@@AAV1@@@QAEXXZ PROC ; CList<CSubGraphViewData,CSubGraphViewData &>::RemoveAll, COMDAT
; _this$ = ecx

; 862  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 863  : 	ASSERT_VALID(this);
; 864  : 
; 865  : 	// destroy elements
; 866  : 	CNode* pNode;
; 867  : 	for (pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  00004	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00007	85 f6		 test	 esi, esi
  00009	74 26		 je	 SHORT $LN3@RemoveAll
  0000b	0f 1f 44 00 00	 npad	 5
$LL4@RemoveAll:

; 868  : 		pNode->data.~TYPE();

  00010	8d 4e 18	 lea	 ecx, DWORD PTR [esi+24]
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00019	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00022	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0002b	8b 36		 mov	 esi, DWORD PTR [esi]
  0002d	85 f6		 test	 esi, esi
  0002f	75 df		 jne	 SHORT $LL4@RemoveAll
$LN3@RemoveAll:

; 869  : 
; 870  : 	m_nCount = 0;
; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;
; 872  : 	m_pBlocks->FreeDataChain();

  00031	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00034	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
  0003b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  00042	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00049	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  00050	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 873  : 	m_pBlocks = NULL;

  00055	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0
  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi

; 874  : }

  0005e	c3		 ret	 0
?RemoveAll@?$CList@VCSubGraphViewData@@AAV1@@@QAEXXZ ENDP ; CList<CSubGraphViewData,CSubGraphViewData &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\BlockBaseData.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z
_TEXT	SEGMENT
tv384 = -24						; size = 4
tv385 = -20						; size = 4
$T2 = -20						; size = 4
$T3 = -16						; size = 4
$T4 = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T5 = 8							; size = 4
_newElement$ = 8					; size = 4
?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z PROC ; CList<CSubGraphViewData,CSubGraphViewData &>::AddTail, COMDAT
; _this$ = ecx

; 965  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx

; 902  : 	if (m_pNodeFree == NULL)

  0002a	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0

; 966  : 	ASSERT_VALID(this);
; 967  : 
; 968  : 	CNode* pNewNode = NewNode(m_pNodeTail, NULL);

  0002e	8b 5e 08	 mov	 ebx, DWORD PTR [esi+8]

; 902  : 	if (m_pNodeFree == NULL)

  00031	75 35		 jne	 SHORT $LN11@AddTail

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  00033	6a 1c		 push	 28			; 0000001cH
  00035	ff 76 18	 push	 DWORD PTR [esi+24]
  00038	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  00041	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  00044	8d 0c d5 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*8]
  0004b	2b ca		 sub	 ecx, edx
  0004d	83 c1 fb	 add	 ecx, -5			; fffffffbH

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  00050	83 c2 ff	 add	 edx, -1
  00053	8d 0c 88	 lea	 ecx, DWORD PTR [eax+ecx*4]
  00056	78 10		 js	 SHORT $LN11@AddTail
$LL8@AddTail:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00058	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0005b	89 01		 mov	 DWORD PTR [ecx], eax

; 915  : 			m_pNodeFree = pNode;

  0005d	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
  00060	83 e9 1c	 sub	 ecx, 28			; 0000001cH
  00063	83 ea 01	 sub	 edx, 1
  00066	79 f0		 jns	 SHORT $LL8@AddTail
$LN11@AddTail:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00068	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  0006b	85 ff		 test	 edi, edi
  0006d	0f 84 35 01 00
	00		 je	 $LN50@AddTail

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 922  : 	pNode->pPrev = pPrev;

  00078	89 5f 04	 mov	 DWORD PTR [edi+4], ebx

; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;

  0007b	8d 5f 08	 lea	 ebx, DWORD PTR [edi+8]
  0007e	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 32   : 	m_strTitle(""),

  00084	8d 4b 08	 lea	 ecx, DWORD PTR [ebx+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 924  : 	m_nCount++;

  00087	ff 46 0c	 inc	 DWORD PTR [esi+12]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 32   : 	m_strTitle(""),

  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;

  0008f	89 5d f0	 mov	 DWORD PTR $T4[ebp], ebx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 30   : 	m_TYPEGraph(CGraphBaseData::GTNONE),

  00092	c7 03 ff ff ff
	ff		 mov	 DWORD PTR [ebx], -1
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\BlockBaseData.h

; 43   : 	CGraphStyle(const int style) { m_nStyle = style; };

  00098	c7 43 04 ff ff
	ff ff		 mov	 DWORD PTR [ebx+4], -1
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 32   : 	m_strTitle(""),

  0009f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z

; 33   : 	m_strPacketNames(""),

  000a5	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  000a8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  000b4	8b c8		 mov	 ecx, eax
  000b6	89 45 ec	 mov	 DWORD PTR tv385[ebp], eax
  000b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z

; 34   : 	m_strRQ("DEFAULT")

  000bf	8d 43 10	 lea	 eax, DWORD PTR [ebx+16]
  000c2	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_07MGCPDNLD@DEFAULT@
  000cb	8b c8		 mov	 ecx, eax
  000cd	89 45 e8	 mov	 DWORD PTR tv384[ebp], eax
  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z

; 17   : 	if(this == &subGraphViewData)

  000d6	8b 4d 08	 mov	 ecx, DWORD PTR _newElement$[ebp]

; 36   : }

  000d9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 17   : 	if(this == &subGraphViewData)

  000e0	3b d9		 cmp	 ebx, ecx
  000e2	0f 84 99 00 00
	00		 je	 $LN23@AddTail

; 18   : 		return *this;
; 19   : 
; 20   : 	m_TYPEGraph = subGraphViewData.GetGraphType();

  000e8	8b 01		 mov	 eax, DWORD PTR [ecx]
  000ea	89 03		 mov	 DWORD PTR [ebx], eax

; 63   : 	return m_graphStyle;

  000ec	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 21   : 	m_graphStyle = subGraphViewData.GetGraphStyle();

  000ef	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 68   : 	return m_strTitle;

  000f2	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  000f5	50		 push	 eax
  000f6	8d 4d f0	 lea	 ecx, DWORD PTR $T3[ebp]
  000f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 22   : 	m_strTitle = subGraphViewData.GetTitle();

  000ff	8d 45 f0	 lea	 eax, DWORD PTR $T3[ebp]
  00102	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00109	50		 push	 eax
  0010a	8d 4b 08	 lea	 ecx, DWORD PTR [ebx+8]
  0010d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  00113	8d 4d f0	 lea	 ecx, DWORD PTR $T3[ebp]
  00116	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0011d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 73   : 	return m_strPacketNames;

  00123	8b 5d 08	 mov	 ebx, DWORD PTR _newElement$[ebp]
  00126	8d 4d 08	 lea	 ecx, DWORD PTR $T5[ebp]
  00129	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  0012c	50		 push	 eax
  0012d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 23   : 	m_strPacketNames = subGraphViewData.GetPacketNames();

  00133	8b 4d ec	 mov	 ecx, DWORD PTR tv385[ebp]
  00136	8d 45 08	 lea	 eax, DWORD PTR $T5[ebp]
  00139	50		 push	 eax
  0013a	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  00141	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  00147	8d 4d 08	 lea	 ecx, DWORD PTR $T5[ebp]
  0014a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00151	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 78   : 	return m_strRQ;

  00157	8d 43 10	 lea	 eax, DWORD PTR [ebx+16]
  0015a	50		 push	 eax
  0015b	8d 4d ec	 lea	 ecx, DWORD PTR $T2[ebp]
  0015e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 24   : 	m_strRQ = subGraphViewData.GetRQ();

  00164	8b 4d e8	 mov	 ecx, DWORD PTR tv384[ebp]
  00167	8d 45 ec	 lea	 eax, DWORD PTR $T2[ebp]
  0016a	50		 push	 eax
  0016b	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  00172	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  00178	8d 4d ec	 lea	 ecx, DWORD PTR $T2[ebp]
  0017b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN23@AddTail:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 970  : 	if (m_pNodeTail != NULL)

  00181	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00184	85 c0		 test	 eax, eax
  00186	74 04		 je	 SHORT $LN2@AddTail

; 971  : 		m_pNodeTail->pNext = pNewNode;

  00188	89 38		 mov	 DWORD PTR [eax], edi
  0018a	eb 03		 jmp	 SHORT $LN3@AddTail
$LN2@AddTail:

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;

  0018c	89 7e 04	 mov	 DWORD PTR [esi+4], edi
$LN3@AddTail:

; 974  : 	m_pNodeTail = pNewNode;

  0018f	89 7e 08	 mov	 DWORD PTR [esi+8], edi

; 975  : 	return (POSITION) pNewNode;

  00192	8b c7		 mov	 eax, edi

; 976  : }

  00194	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00197	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0019e	59		 pop	 ecx
  0019f	5f		 pop	 edi
  001a0	5e		 pop	 esi
  001a1	5b		 pop	 ebx
  001a2	8b e5		 mov	 esp, ebp
  001a4	5d		 pop	 ebp
  001a5	c2 04 00	 ret	 4
$LN50@AddTail:

; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  001a8	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN48@AddTail:
  001ad	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR $T4[ebp]
  00003	83 c1 08	 add	 ecx, 8
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z$1:
  0000c	8b 4d f0	 mov	 ecx, DWORD PTR $T4[ebp]
  0000f	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z$3:
  00018	8d 4d f0	 lea	 ecx, DWORD PTR $T3[ebp]
  0001b	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z$4:
  00021	8d 4d 08	 lea	 ecx, DWORD PTR $T5[ebp]
  00024	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z$5:
  0002a	8d 4d ec	 lea	 ecx, DWORD PTR $T2[ebp]
  0002d	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00033	cc		 int	 3
  00034	cc		 int	 3
  00035	cc		 int	 3
  00036	cc		 int	 3
  00037	cc		 int	 3
__ehhandler$?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z:
  00038	90		 npad	 1
  00039	90		 npad	 1
  0003a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00041	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00044	33 c8		 xor	 ecx, eax
  00046	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z
  00050	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z ENDP ; CList<CSubGraphViewData,CSubGraphViewData &>::AddTail
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CList@VCSubGraphViewData@@AAV1@@@QAE@H@Z
_TEXT	SEGMENT
_nBlockSize$ = 8					; size = 4
??0?$CList@VCSubGraphViewData@@AAV1@@@QAE@H@Z PROC	; CList<CSubGraphViewData,CSubGraphViewData &>::CList<CSubGraphViewData,CSubGraphViewData &>, COMDAT
; _this$ = ecx

; 851  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 852  : 	ASSERT(nBlockSize > 0);
; 853  : 
; 854  : 	m_nCount = 0;
; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;
; 856  : 	m_pBlocks = NULL;
; 857  : 	m_nBlockSize = nBlockSize;

  00003	8b 45 08	 mov	 eax, DWORD PTR _nBlockSize$[ebp]
  00006	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 858  : }

  00009	8b c1		 mov	 eax, ecx
  0000b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@VCSubGraphViewData@@AAV1@@@6B@
  00011	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00018	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  0001f	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00026	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0002d	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
??0?$CList@VCSubGraphViewData@@AAV1@@@QAE@H@Z ENDP	; CList<CSubGraphViewData,CSubGraphViewData &>::CList<CSubGraphViewData,CSubGraphViewData &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetCount@CSubGraphViewDataList@@QBEHXZ
_TEXT	SEGMENT
?GetCount@CSubGraphViewDataList@@QBEHXZ PROC		; CSubGraphViewDataList::GetCount, COMDAT
; _this$ = ecx

; 143  : 	return m_subGraphViewDataList.GetCount();

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]

; 144  : }

  00003	c3		 ret	 0
?GetCount@CSubGraphViewDataList@@QBEHXZ ENDP		; CSubGraphViewDataList::GetCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetAt@CSubGraphViewDataList@@QBE?AVCSubGraphViewData@@H@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_nIndex$ = 12						; size = 4
?GetAt@CSubGraphViewDataList@@QBE?AVCSubGraphViewData@@H@Z PROC ; CSubGraphViewDataList::GetAt, COMDAT
; _this$ = ecx

; 135  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetAt@CSubGraphViewDataList@@QBE?AVCSubGraphViewData@@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 136  : 	POSITION pos = m_subGraphViewDataList.FindIndex(nIndex);

  00024	8b 45 0c	 mov	 eax, DWORD PTR _nIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1133 : 	if (nIndex >= m_nCount || nIndex < 0)

  00027	3b 41 0c	 cmp	 eax, DWORD PTR [ecx+12]
  0002a	7d 12		 jge	 SHORT $LN9@GetAt
  0002c	85 c0		 test	 eax, eax
  0002e	78 0e		 js	 SHORT $LN9@GetAt

; 1135 : 
; 1136 : 	CNode* pNode = m_pNodeHead;

  00030	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]

; 1137 : 	while (nIndex--)

  00033	74 0b		 je	 SHORT $LN5@GetAt
$LL6@GetAt:

; 1138 : 	{
; 1139 : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1140 : 		pNode = pNode->pNext;

  00035	8b 3f		 mov	 edi, DWORD PTR [edi]
  00037	83 e8 01	 sub	 eax, 1
  0003a	75 f9		 jne	 SHORT $LL6@GetAt

; 1141 : 	}
; 1142 : 	return (POSITION) pNode;

  0003c	eb 02		 jmp	 SHORT $LN5@GetAt
$LN9@GetAt:

; 1134 : 		return NULL;  // went too far

  0003e	33 ff		 xor	 edi, edi
$LN5@GetAt:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 138  : 	return m_subGraphViewDataList.GetAt(pos);

  00040	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  00043	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00046	89 06		 mov	 DWORD PTR [esi], eax
  00048	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  0004b	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  0004e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00051	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
  00054	50		 push	 eax
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0005b	8d 47 14	 lea	 eax, DWORD PTR [edi+20]
  0005e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00065	50		 push	 eax
  00066	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0006f	8d 4f 18	 lea	 ecx, DWORD PTR [edi+24]
  00072	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00076	51		 push	 ecx
  00077	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00080	8b c6		 mov	 eax, esi

; 139  : }

  00082	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00085	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008c	59		 pop	 ecx
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetAt@CSubGraphViewDataList@@QBE?AVCSubGraphViewData@@H@Z$1:
  00000	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00003	83 c1 08	 add	 ecx, 8
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?GetAt@CSubGraphViewDataList@@QBE?AVCSubGraphViewData@@H@Z$2:
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000f	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
__ehhandler$?GetAt@CSubGraphViewDataList@@QBE?AVCSubGraphViewData@@H@Z:
  0001d	90		 npad	 1
  0001e	90		 npad	 1
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetAt@CSubGraphViewDataList@@QBE?AVCSubGraphViewData@@H@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetAt@CSubGraphViewDataList@@QBE?AVCSubGraphViewData@@H@Z ENDP ; CSubGraphViewDataList::GetAt
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetAt@CSubGraphViewDataList@@QAEAAVCSubGraphViewData@@H@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
?GetAt@CSubGraphViewDataList@@QAEAAVCSubGraphViewData@@H@Z PROC ; CSubGraphViewDataList::GetAt, COMDAT
; _this$ = ecx

; 128  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 129  : 	POSITION pos = m_subGraphViewDataList.FindIndex(nIndex);

  00003	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1133 : 	if (nIndex >= m_nCount || nIndex < 0)

  00006	3b 41 0c	 cmp	 eax, DWORD PTR [ecx+12]
  00009	7d 17		 jge	 SHORT $LN7@GetAt
  0000b	85 c0		 test	 eax, eax
  0000d	78 13		 js	 SHORT $LN7@GetAt

; 1135 : 
; 1136 : 	CNode* pNode = m_pNodeHead;

  0000f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 1137 : 	while (nIndex--)

  00012	74 07		 je	 SHORT $LN10@GetAt
$LL4@GetAt:

; 1138 : 	{
; 1139 : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1140 : 		pNode = pNode->pNext;

  00014	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00016	83 e8 01	 sub	 eax, 1
  00019	75 f9		 jne	 SHORT $LL4@GetAt
$LN10@GetAt:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 131  : 	return m_subGraphViewDataList.GetAt(pos);

  0001b	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]

; 132  : }

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
$LN7@GetAt:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1134 : 		return NULL;  // went too far

  00022	33 c0		 xor	 eax, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 131  : 	return m_subGraphViewDataList.GetAt(pos);

  00024	b8 08 00 00 00	 mov	 eax, 8

; 132  : }

  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?GetAt@CSubGraphViewDataList@@QAEAAVCSubGraphViewData@@H@Z ENDP ; CSubGraphViewDataList::GetAt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetNext@CSubGraphViewDataList@@QAEAAVCSubGraphViewData@@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
_pos$ = 8						; size = 4
?GetNext@CSubGraphViewDataList@@QAEAAVCSubGraphViewData@@AAPAU__POSITION@@@Z PROC ; CSubGraphViewDataList::GetNext, COMDAT
; _this$ = ecx

; 123  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 811  : 	{ CNode* pNode = (CNode*) rPosition;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pos$[ebp]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]

; 812  : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 813  : 		rPosition = (POSITION) pNode->pNext;

  00008	8b 02		 mov	 eax, DWORD PTR [edx]
  0000a	89 01		 mov	 DWORD PTR [ecx], eax

; 814  : 		return pNode->data; }

  0000c	8d 42 08	 lea	 eax, DWORD PTR [edx+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 125  : }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?GetNext@CSubGraphViewDataList@@QAEAAVCSubGraphViewData@@AAPAU__POSITION@@@Z ENDP ; CSubGraphViewDataList::GetNext
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetHeadPosition@CSubGraphViewDataList@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
?GetHeadPosition@CSubGraphViewDataList@@QBEPAU__POSITION@@XZ PROC ; CSubGraphViewDataList::GetHeadPosition, COMDAT
; _this$ = ecx

; 119  : 	return m_subGraphViewDataList.GetHeadPosition();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 120  : }

  00003	c3		 ret	 0
?GetHeadPosition@CSubGraphViewDataList@@QBEPAU__POSITION@@XZ ENDP ; CSubGraphViewDataList::GetHeadPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetSubGraphViewDataList@CSubGraphViewDataList@@QBEABV?$CList@VCSubGraphViewData@@AAV1@@@XZ
_TEXT	SEGMENT
?GetSubGraphViewDataList@CSubGraphViewDataList@@QBEABV?$CList@VCSubGraphViewData@@AAV1@@@XZ PROC ; CSubGraphViewDataList::GetSubGraphViewDataList, COMDAT
; _this$ = ecx

; 114  : 	return m_subGraphViewDataList;

  00000	8b c1		 mov	 eax, ecx

; 115  : }

  00002	c3		 ret	 0
?GetSubGraphViewDataList@CSubGraphViewDataList@@QBEABV?$CList@VCSubGraphViewData@@AAV1@@@XZ ENDP ; CSubGraphViewDataList::GetSubGraphViewDataList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetSubGraphViewDataList@CSubGraphViewDataList@@QAEAAV?$CList@VCSubGraphViewData@@AAV1@@@XZ
_TEXT	SEGMENT
?GetSubGraphViewDataList@CSubGraphViewDataList@@QAEAAV?$CList@VCSubGraphViewData@@AAV1@@@XZ PROC ; CSubGraphViewDataList::GetSubGraphViewDataList, COMDAT
; _this$ = ecx

; 109  : 	return m_subGraphViewDataList;

  00000	8b c1		 mov	 eax, ecx

; 110  : }

  00002	c3		 ret	 0
?GetSubGraphViewDataList@CSubGraphViewDataList@@QAEAAV?$CList@VCSubGraphViewData@@AAV1@@@XZ ENDP ; CSubGraphViewDataList::GetSubGraphViewDataList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?RemoveAll@CSubGraphViewDataList@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@CSubGraphViewDataList@@QAEXXZ PROC		; CSubGraphViewDataList::RemoveAll, COMDAT
; _this$ = ecx

; 103  : 	m_subGraphViewDataList.RemoveAll();

  00000	e9 00 00 00 00	 jmp	 ?RemoveAll@?$CList@VCSubGraphViewData@@AAV1@@@QAEXXZ ; CList<CSubGraphViewData,CSubGraphViewData &>::RemoveAll
?RemoveAll@CSubGraphViewDataList@@QAEXXZ ENDP		; CSubGraphViewDataList::RemoveAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?AddTail@CSubGraphViewDataList@@QAEXVCSubGraphViewData@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_subGraphViewData$ = 8					; size = 20
?AddTail@CSubGraphViewDataList@@QAEXVCSubGraphViewData@@@Z PROC ; CSubGraphViewDataList::AddTail, COMDAT
; _this$ = ecx

; 97   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddTail@CSubGraphViewDataList@@QAEXVCSubGraphViewData@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 98   : 	m_subGraphViewDataList.AddTail(subGraphViewData);

  00022	8d 45 08	 lea	 eax, DWORD PTR _subGraphViewData$[ebp]
  00025	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z ; CList<CSubGraphViewData,CSubGraphViewData &>::AddTail
  00032	8d 4d 18	 lea	 ecx, DWORD PTR _subGraphViewData$[ebp+16]
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0003b	8d 4d 14	 lea	 ecx, DWORD PTR _subGraphViewData$[ebp+12]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00044	8d 4d 10	 lea	 ecx, DWORD PTR _subGraphViewData$[ebp+8]
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 99   : }

  0004d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00050	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00057	59		 pop	 ecx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddTail@CSubGraphViewDataList@@QAEXVCSubGraphViewData@@@Z$0:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _subGraphViewData$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CSubGraphViewData@@QAE@XZ
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?AddTail@CSubGraphViewDataList@@QAEXVCSubGraphViewData@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddTail@CSubGraphViewDataList@@QAEXVCSubGraphViewData@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddTail@CSubGraphViewDataList@@QAEXVCSubGraphViewData@@@Z ENDP ; CSubGraphViewDataList::AddTail
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ??4CSubGraphViewDataList@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
$T2 = -36						; size = 20
_this$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_subGraphViewDataList$ = 8				; size = 4
??4CSubGraphViewDataList@@QAEAAV0@ABV0@@Z PROC		; CSubGraphViewDataList::operator=, COMDAT
; _this$ = ecx

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??4CSubGraphViewDataList@@QAEAAV0@ABV0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
  0002a	89 75 f0	 mov	 DWORD PTR _this$1$[ebp], esi

; 85   : 	if(this == &subGraphViewDataList)

  0002d	8b 5d 08	 mov	 ebx, DWORD PTR _subGraphViewDataList$[ebp]
  00030	3b f3		 cmp	 esi, ebx
  00032	0f 84 a8 00 00
	00		 je	 $LN36@operator

; 86   : 		return *this;
; 87   : 
; 88   : 	for(int nIndex = 0; nIndex < subGraphViewDataList.GetCount(); nIndex++){

  00038	8b 53 0c	 mov	 edx, DWORD PTR [ebx+12]
  0003b	33 ff		 xor	 edi, edi
  0003d	85 d2		 test	 edx, edx
  0003f	0f 8e 9b 00 00
	00		 jle	 $LN36@operator
$LL4@operator:

; 136  : 	POSITION pos = m_subGraphViewDataList.FindIndex(nIndex);

  00045	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1133 : 	if (nIndex >= m_nCount || nIndex < 0)

  00047	3b fa		 cmp	 edi, edx
  00049	7d 12		 jge	 SHORT $LN16@operator
  0004b	85 ff		 test	 edi, edi
  0004d	78 0e		 js	 SHORT $LN16@operator

; 1135 : 
; 1136 : 	CNode* pNode = m_pNodeHead;

  0004f	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]

; 1137 : 	while (nIndex--)

  00052	74 0b		 je	 SHORT $LN12@operator
$LL13@operator:

; 1138 : 	{
; 1139 : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1140 : 		pNode = pNode->pNext;

  00054	8b 36		 mov	 esi, DWORD PTR [esi]
  00056	83 e8 01	 sub	 eax, 1
  00059	75 f9		 jne	 SHORT $LL13@operator

; 1141 : 	}
; 1142 : 	return (POSITION) pNode;

  0005b	eb 02		 jmp	 SHORT $LN12@operator
$LN16@operator:

; 1134 : 		return NULL;  // went too far

  0005d	33 f6		 xor	 esi, esi
$LN12@operator:
  0005f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00062	8d 4d e4	 lea	 ecx, DWORD PTR $T2[ebp+8]
  00065	89 45 dc	 mov	 DWORD PTR $T2[ebp], eax
  00068	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0006b	89 45 e0	 mov	 DWORD PTR $T2[ebp+4], eax
  0006e	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00071	50		 push	 eax
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00078	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  0007b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00082	50		 push	 eax
  00083	8d 4d e8	 lea	 ecx, DWORD PTR $T2[ebp+12]
  00086	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0008c	83 c6 18	 add	 esi, 24			; 00000018H
  0008f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00093	56		 push	 esi
  00094	8d 4d ec	 lea	 ecx, DWORD PTR $T2[ebp+16]
  00097	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 89   : 		m_subGraphViewDataList.AddTail(subGraphViewDataList.GetAt(nIndex));

  0009d	8b 75 f0	 mov	 esi, DWORD PTR _this$1$[ebp]
  000a0	8d 45 dc	 lea	 eax, DWORD PTR $T2[ebp]
  000a3	50		 push	 eax
  000a4	8b ce		 mov	 ecx, esi
  000a6	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  000ad	e8 00 00 00 00	 call	 ?AddTail@?$CList@VCSubGraphViewData@@AAV1@@@QAEPAU__POSITION@@AAVCSubGraphViewData@@@Z ; CList<CSubGraphViewData,CSubGraphViewData &>::AddTail
  000b2	8d 4d ec	 lea	 ecx, DWORD PTR $T2[ebp+16]
  000b5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000c2	8d 4d e8	 lea	 ecx, DWORD PTR $T2[ebp+12]
  000c5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000cb	8d 4d e4	 lea	 ecx, DWORD PTR $T2[ebp+8]
  000ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000d4	8b 53 0c	 mov	 edx, DWORD PTR [ebx+12]
  000d7	47		 inc	 edi
  000d8	3b fa		 cmp	 edi, edx
  000da	0f 8c 65 ff ff
	ff		 jl	 $LL4@operator
$LN36@operator:

; 90   : 	}
; 91   : 
; 92   : 	return *this;
; 93   : }

  000e0	8b c6		 mov	 eax, esi
  000e2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ec	59		 pop	 ecx
  000ed	5f		 pop	 edi
  000ee	5e		 pop	 esi
  000ef	5b		 pop	 ebx
  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4CSubGraphViewDataList@@QAEAAV0@ABV0@@Z$2:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR $T2[ebp+8]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$??4CSubGraphViewDataList@@QAEAAV0@ABV0@@Z$3:
  00009	8d 4d e8	 lea	 ecx, DWORD PTR $T2[ebp+12]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$??4CSubGraphViewDataList@@QAEAAV0@ABV0@@Z$0:
  00012	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1CSubGraphViewData@@QAE@XZ
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$??4CSubGraphViewDataList@@QAEAAV0@ABV0@@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??4CSubGraphViewDataList@@QAEAAV0@ABV0@@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??4CSubGraphViewDataList@@QAEAAV0@ABV0@@Z ENDP		; CSubGraphViewDataList::operator=
; Function compile flags: /Ogtp
;	COMDAT ??1CSubGraphViewData@@QAE@XZ
_TEXT	SEGMENT
??1CSubGraphViewData@@QAE@XZ PROC			; CSubGraphViewData::~CSubGraphViewData, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000c	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00015	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  00018	5e		 pop	 esi
  00019	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
??1CSubGraphViewData@@QAE@XZ ENDP			; CSubGraphViewData::~CSubGraphViewData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetRQ@CSubGraphViewData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetRQ@CSubGraphViewData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC ; CSubGraphViewData::GetRQ, COMDAT
; _this$ = ecx

; 77   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 78   : 	return m_strRQ;

  00003	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00009	50		 push	 eax
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00010	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 79   : }

  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
?GetRQ@CSubGraphViewData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CSubGraphViewData::GetRQ
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetPacketNames@CSubGraphViewData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetPacketNames@CSubGraphViewData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC ; CSubGraphViewData::GetPacketNames, COMDAT
; _this$ = ecx

; 72   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 73   : 	return m_strPacketNames;

  00003	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00009	50		 push	 eax
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00010	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 74   : }

  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
?GetPacketNames@CSubGraphViewData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CSubGraphViewData::GetPacketNames
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetTitle@CSubGraphViewData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetTitle@CSubGraphViewData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC ; CSubGraphViewData::GetTitle, COMDAT
; _this$ = ecx

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 	return m_strTitle;

  00003	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00009	50		 push	 eax
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00010	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 69   : }

  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
?GetTitle@CSubGraphViewData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CSubGraphViewData::GetTitle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetGraphStyle@CSubGraphViewData@@QBE?AVCGraphStyle@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetGraphStyle@CSubGraphViewData@@QBE?AVCGraphStyle@@XZ PROC ; CSubGraphViewData::GetGraphStyle, COMDAT
; _this$ = ecx

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	return m_graphStyle;

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 64   : }

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?GetGraphStyle@CSubGraphViewData@@QBE?AVCGraphStyle@@XZ ENDP ; CSubGraphViewData::GetGraphStyle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?GetGraphType@CSubGraphViewData@@QBE?AW4GRAPHTYPE@CGraphBaseData@@XZ
_TEXT	SEGMENT
?GetGraphType@CSubGraphViewData@@QBE?AW4GRAPHTYPE@CGraphBaseData@@XZ PROC ; CSubGraphViewData::GetGraphType, COMDAT
; _this$ = ecx

; 58   : 	return m_TYPEGraph;

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 59   : }

  00002	c3		 ret	 0
?GetGraphType@CSubGraphViewData@@QBE?AW4GRAPHTYPE@CGraphBaseData@@XZ ENDP ; CSubGraphViewData::GetGraphType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@22@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 4
_style$ = 12						; size = 4
_title$ = 16						; size = 4
_packetNames$ = 20					; size = 4
_strRQ$ = 24						; size = 4
??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@22@Z PROC ; CSubGraphViewData::CSubGraphViewData, COMDAT
; _this$ = ecx

; 53   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@22@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 48   : 	m_TYPEGraph(type),

  00029	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]

; 49   : 	m_graphStyle(style),
; 50   : 	m_strTitle(title),

  0002c	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  0002f	ff 75 10	 push	 DWORD PTR _title$[ebp]
  00032	89 06		 mov	 DWORD PTR [esi], eax
  00034	8b 45 0c	 mov	 eax, DWORD PTR _style$[ebp]
  00037	8b 00		 mov	 eax, DWORD PTR [eax]
  00039	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 51   : 	m_strPacketNames(packetNames),

  00042	ff 75 14	 push	 DWORD PTR _packetNames$[ebp]
  00045	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00048	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 52   : 	m_strRQ(strRQ)

  00055	ff 75 18	 push	 DWORD PTR _strRQ$[ebp]
  00058	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  0005b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 54   : }

  00065	8b c6		 mov	 eax, esi
  00067	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00071	59		 pop	 ecx
  00072	5e		 pop	 esi
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@22@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 08	 add	 ecx, 8
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@22@Z$1:
  0000c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
__ehhandler$??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@22@Z:
  0001d	90		 npad	 1
  0001e	90		 npad	 1
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@22@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@22@Z ENDP ; CSubGraphViewData::CSubGraphViewData
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@2@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 4
_style$ = 12						; size = 4
_title$ = 16						; size = 4
_packetNames$ = 20					; size = 4
??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@2@Z PROC ; CSubGraphViewData::CSubGraphViewData, COMDAT
; _this$ = ecx

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@2@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 39   : 	m_TYPEGraph(type),

  00029	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]

; 40   : 	m_graphStyle(style),
; 41   : 	m_strTitle(title),

  0002c	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  0002f	ff 75 10	 push	 DWORD PTR _title$[ebp]
  00032	89 06		 mov	 DWORD PTR [esi], eax
  00034	8b 45 0c	 mov	 eax, DWORD PTR _style$[ebp]
  00037	8b 00		 mov	 eax, DWORD PTR [eax]
  00039	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 42   : 	m_strPacketNames(packetNames),

  00042	ff 75 14	 push	 DWORD PTR _packetNames$[ebp]
  00045	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00048	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 43   : 	m_strRQ("DEFAULT")

  00055	68 00 00 00 00	 push	 OFFSET ??_C@_07MGCPDNLD@DEFAULT@
  0005a	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  0005d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z

; 45   : }

  00067	8b c6		 mov	 eax, esi
  00069	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00073	59		 pop	 ecx
  00074	5e		 pop	 esi
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@2@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 08	 add	 ecx, 8
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@2@Z$1:
  0000c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
__ehhandler$??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@2@Z:
  0001d	90		 npad	 1
  0001e	90		 npad	 1
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@2@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CSubGraphViewData@@QAE@W4GRAPHTYPE@CGraphBaseData@@ABVCGraphStyle@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@2@Z ENDP ; CSubGraphViewData::CSubGraphViewData
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\BlockBaseData.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ??0CSubGraphViewData@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CSubGraphViewData@@QAE@XZ PROC			; CSubGraphViewData::CSubGraphViewData, COMDAT
; _this$ = ecx

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CSubGraphViewData@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 30   : 	m_TYPEGraph(CGraphBaseData::GTNONE),

  00029	c7 06 ff ff ff
	ff		 mov	 DWORD PTR [esi], -1

; 32   : 	m_strTitle(""),

  0002f	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\BlockBaseData.h

; 43   : 	CGraphStyle(const int style) { m_nStyle = style; };

  00037	c7 46 04 ff ff
	ff ff		 mov	 DWORD PTR [esi+4], -1
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp

; 32   : 	m_strTitle(""),

  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z

; 33   : 	m_strPacketNames(""),

  00044	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00049	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z

; 34   : 	m_strRQ("DEFAULT")

  00059	68 00 00 00 00	 push	 OFFSET ??_C@_07MGCPDNLD@DEFAULT@
  0005e	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00061	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z

; 36   : }

  0006b	8b c6		 mov	 eax, esi
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00077	59		 pop	 ecx
  00078	5e		 pop	 esi
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CSubGraphViewData@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 08	 add	 ecx, 8
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$??0CSubGraphViewData@@QAE@XZ$1:
  0000c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
__ehhandler$??0CSubGraphViewData@@QAE@XZ:
  0001d	90		 npad	 1
  0001e	90		 npad	 1
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CSubGraphViewData@@QAE@XZ
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CSubGraphViewData@@QAE@XZ ENDP			; CSubGraphViewData::CSubGraphViewData
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ??4CSubGraphViewData@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T3 = 8							; size = 4
$T4 = 8							; size = 4
_subGraphViewData$ = 8					; size = 4
??4CSubGraphViewData@@QAEAAV0@ABV0@@Z PROC		; CSubGraphViewData::operator=, COMDAT
; _this$ = ecx

; 16   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??4CSubGraphViewData@@QAEAAV0@ABV0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx

; 17   : 	if(this == &subGraphViewData)

  00027	8b 7d 08	 mov	 edi, DWORD PTR _subGraphViewData$[ebp]
  0002a	3b f7		 cmp	 esi, edi
  0002c	0f 84 96 00 00
	00		 je	 $LN22@operator

; 18   : 		return *this;
; 19   : 
; 20   : 	m_TYPEGraph = subGraphViewData.GetGraphType();

  00032	8b 07		 mov	 eax, DWORD PTR [edi]

; 68   : 	return m_strTitle;

  00034	8d 4d 08	 lea	 ecx, DWORD PTR $T4[ebp]

; 18   : 		return *this;
; 19   : 
; 20   : 	m_TYPEGraph = subGraphViewData.GetGraphType();

  00037	89 06		 mov	 DWORD PTR [esi], eax

; 63   : 	return m_graphStyle;

  00039	8b 47 04	 mov	 eax, DWORD PTR [edi+4]

; 21   : 	m_graphStyle = subGraphViewData.GetGraphStyle();

  0003c	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 68   : 	return m_strTitle;

  0003f	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  00042	50		 push	 eax
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 22   : 	m_strTitle = subGraphViewData.GetTitle();

  00049	8d 45 08	 lea	 eax, DWORD PTR $T4[ebp]
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00053	50		 push	 eax
  00054	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  0005d	8d 4d 08	 lea	 ecx, DWORD PTR $T4[ebp]
  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00067	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 73   : 	return m_strPacketNames;

  0006d	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  00070	50		 push	 eax
  00071	8d 4d 08	 lea	 ecx, DWORD PTR $T3[ebp]
  00074	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 23   : 	m_strPacketNames = subGraphViewData.GetPacketNames();

  0007a	8d 45 08	 lea	 eax, DWORD PTR $T3[ebp]
  0007d	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00084	50		 push	 eax
  00085	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00088	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  0008e	8d 4d 08	 lea	 ecx, DWORD PTR $T3[ebp]
  00091	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 78   : 	return m_strRQ;

  0009e	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
  000a1	50		 push	 eax
  000a2	8d 4d f0	 lea	 ecx, DWORD PTR $T2[ebp]
  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 24   : 	m_strRQ = subGraphViewData.GetRQ();

  000ab	8d 45 f0	 lea	 eax, DWORD PTR $T2[ebp]
  000ae	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  000b5	50		 push	 eax
  000b6	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  000b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  000bf	8d 4d f0	 lea	 ecx, DWORD PTR $T2[ebp]
  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN22@operator:

; 25   : 	return *this;
; 26   : }

  000c8	8b c6		 mov	 eax, esi
  000ca	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d4	59		 pop	 ecx
  000d5	5f		 pop	 edi
  000d6	5e		 pop	 esi
  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4CSubGraphViewData@@QAEAAV0@ABV0@@Z$0:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$??4CSubGraphViewData@@QAEAAV0@ABV0@@Z$1:
  00009	8d 4d 08	 lea	 ecx, DWORD PTR $T3[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$??4CSubGraphViewData@@QAEAAV0@ABV0@@Z$2:
  00012	8d 4d f0	 lea	 ecx, DWORD PTR $T2[ebp]
  00015	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
  0001f	cc		 int	 3
__ehhandler$??4CSubGraphViewData@@QAEAAV0@ABV0@@Z:
  00020	90		 npad	 1
  00021	90		 npad	 1
  00022	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00026	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00029	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0002c	33 c8		 xor	 ecx, eax
  0002e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00033	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??4CSubGraphViewData@@QAEAAV0@ABV0@@Z
  00038	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??4CSubGraphViewData@@QAEAAV0@ABV0@@Z ENDP		; CSubGraphViewData::operator=
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC		; CObject::Dump, COMDAT
; _this$ = ecx

; 122  : 	{ /* no dumping in release builds */ }

  00000	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
?AssertValid@CObject@@UBEXXZ PROC			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 120  : 	{ /* no asserts in release builds */ }

  00000	c2 00 00	 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC		; CObject::Serialize, COMDAT
; _this$ = ecx

; 106  : 	{ /* CObject does not serialize anything by default */ }

  00000	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT
??1CObject@@UAE@XZ PROC					; CObject::~CObject, COMDAT
; _this$ = ecx

; 104  : 	{ }

  00000	c2 00 00	 ret	 0
??1CObject@@UAE@XZ ENDP					; CObject::~CObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\ViewData.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
