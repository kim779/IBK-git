; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\CompareChart\SortStringArray.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?Sort@CSortStringArray@@QAEXXZ			; CSortStringArray::Sort
PUBLIC	?CompareAndCStringSwap@CSortStringArray@@AAEHH@Z ; CSortStringArray::CompareAndCStringSwap
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_?CompareNoCase@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CompareAndCStringSwap@CSortStringArray@@AAEHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CompareAndCStringSwap@CSortStringArray@@AAEHH@Z$0
__ehfuncinfo$?CompareAndCStringSwap@CSortStringArray@@AAEHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CompareAndCStringSwap@CSortStringArray@@AAEHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Sort@CSortStringArray@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Sort@CSortStringArray@@QAEXXZ$0
__ehfuncinfo$?Sort@CSortStringArray@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Sort@CSortStringArray@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp
;	COMDAT ?CompareAndCStringSwap@CSortStringArray@@AAEHH@Z
_TEXT	SEGMENT
_vc_b$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
tv244 = 8						; size = 4
_pos$ = 8						; size = 4
?CompareAndCStringSwap@CSortStringArray@@AAEHH@Z PROC	; CSortStringArray::CompareAndCStringSwap, COMDAT
; _this$ = ecx

; 32   : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CompareAndCStringSwap@CSortStringArray@@AAEHH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx

; 33   :     CString vc_b; 

  00028	8d 4d f0	 lea	 ecx, DWORD PTR _vc_b$[ebp]
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 34   :     int posFirst = pos; 
; 35   :     int posNext = pos + 1; 

  00031	8b 7d 08	 mov	 edi, DWORD PTR _pos$[ebp]
  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003b	8d 5f 01	 lea	 ebx, DWORD PTR [edi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 289  : 		if( nIndex < 0 || nIndex >= m_nSize )

  0003e	85 db		 test	 ebx, ebx
  00040	0f 88 b8 00 00
	00		 js	 $LN8@CompareAnd
  00046	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00049	3b d8		 cmp	 ebx, eax
  0004b	0f 8d ad 00 00
	00		 jge	 $LN8@CompareAnd
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 377  : 		return( m_pszData );

  00051	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 291  : 		return m_pData[nIndex]; }

  00054	8d 0c 9d 00 00
	00 00		 lea	 ecx, DWORD PTR [ebx*4]

; 289  : 		if( nIndex < 0 || nIndex >= m_nSize )

  0005b	85 ff		 test	 edi, edi
  0005d	0f 88 9b 00 00
	00		 js	 $LN8@CompareAnd
  00063	3b f8		 cmp	 edi, eax
  00065	0f 8d 93 00 00
	00		 jge	 $LN8@CompareAnd
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp

; 37   :     if (GetAt(posFirst).CompareNoCase(GetAt(posNext)) > 0) 

  0006b	ff 34 0a	 push	 DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 291  : 		return m_pData[nIndex]; }

  0006e	8d 04 bd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*4]
  00075	8d 0c 10	 lea	 ecx, DWORD PTR [eax+edx]
  00078	89 45 08	 mov	 DWORD PTR tv244[ebp], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp

; 37   :     if (GetAt(posFirst).CompareNoCase(GetAt(posNext)) > 0) 

  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CompareNoCase@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
  00081	85 c0		 test	 eax, eax
  00083	7e 58		 jle	 SHORT $LN2@CompareAnd
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 289  : 		if( nIndex < 0 || nIndex >= m_nSize )

  00085	3b 7e 08	 cmp	 edi, DWORD PTR [esi+8]
  00088	7d 74		 jge	 SHORT $LN8@CompareAnd

; 291  : 		return m_pData[nIndex]; }

  0008a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0008d	8d 0c bd 00 00
	00 00		 lea	 ecx, DWORD PTR [edi*4]
  00094	03 c1		 add	 eax, ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp

; 39   :         vc_b = GetAt(posFirst); 

  00096	8d 4d f0	 lea	 ecx, DWORD PTR _vc_b$[ebp]
  00099	50		 push	 eax
  0009a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 289  : 		if( nIndex < 0 || nIndex >= m_nSize )

  000a0	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000a3	3b d8		 cmp	 ebx, eax
  000a5	7d 57		 jge	 SHORT $LN8@CompareAnd

; 300  : 		if( nIndex < 0 || nIndex >= m_nSize )

  000a7	3b f8		 cmp	 edi, eax
  000a9	7d 53		 jge	 SHORT $LN8@CompareAnd

; 291  : 		return m_pData[nIndex]; }

  000ab	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ae	8d 3c 9d 00 00
	00 00		 lea	 edi, DWORD PTR [ebx*4]
  000b5	8d 04 39	 lea	 eax, DWORD PTR [ecx+edi]

; 302  : 		m_pData[nIndex] = newElement; }

  000b8	03 4d 08	 add	 ecx, DWORD PTR tv244[ebp]
  000bb	50		 push	 eax
  000bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z

; 300  : 		if( nIndex < 0 || nIndex >= m_nSize )

  000c2	3b 5e 08	 cmp	 ebx, DWORD PTR [esi+8]
  000c5	7d 37		 jge	 SHORT $LN8@CompareAnd

; 301  : 			AfxThrowInvalidArgException();
; 302  : 		m_pData[nIndex] = newElement; }

  000c7	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ca	8d 45 f0	 lea	 eax, DWORD PTR _vc_b$[ebp]
  000cd	50		 push	 eax
  000ce	03 cf		 add	 ecx, edi
  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  000d6	be 01 00 00 00	 mov	 esi, 1
  000db	eb 02		 jmp	 SHORT $LN5@CompareAnd
$LN2@CompareAnd:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp

; 44   :     return FALSE;     

  000dd	33 f6		 xor	 esi, esi
$LN5@CompareAnd:
  000df	8d 4d f0	 lea	 ecx, DWORD PTR _vc_b$[ebp]
  000e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000e8	8b c6		 mov	 eax, esi

; 45   : } 

  000ea	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ed	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f4	59		 pop	 ecx
  000f5	5f		 pop	 edi
  000f6	5e		 pop	 esi
  000f7	5b		 pop	 ebx
  000f8	8b e5		 mov	 esp, ebp
  000fa	5d		 pop	 ebp
  000fb	c2 04 00	 ret	 4
$LN8@CompareAnd:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 290  : 			AfxThrowInvalidArgException();

  000fe	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN34@CompareAnd:
  00103	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CompareAndCStringSwap@CSortStringArray@@AAEHH@Z$0:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _vc_b$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
__ehhandler$?CompareAndCStringSwap@CSortStringArray@@AAEHH@Z:
  0000e	90		 npad	 1
  0000f	90		 npad	 1
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CompareAndCStringSwap@CSortStringArray@@AAEHH@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CompareAndCStringSwap@CSortStringArray@@AAEHH@Z ENDP	; CSortStringArray::CompareAndCStringSwap
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp
;	COMDAT ?Sort@CSortStringArray@@QAEXXZ
_TEXT	SEGMENT
_bNotDone$1$ = -24					; size = 4
tv349 = -20						; size = 4
_vc_b$2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Sort@CSortStringArray@@QAEXXZ PROC			; CSortStringArray::Sort, COMDAT
; _this$ = ecx

; 20   : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Sort@CSortStringArray@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
  0002a	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0002d	0f 1f 00	 npad	 3
$LL2@Sort:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 284  : 	{ return m_nSize-1; }

  00030	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp

; 25   :         bNotDone = FALSE; 

  00033	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _bNotDone$1$[ebp], 0

; 26   :         for(int pos = 0;pos < GetUpperBound();pos++) 

  0003a	33 ff		 xor	 edi, edi
  0003c	85 c0		 test	 eax, eax
  0003e	0f 8e f5 00 00
	00		 jle	 $LN3@Sort
$LL6@Sort:

; 33   :     CString vc_b; 

  00044	8d 4d f0	 lea	 ecx, DWORD PTR _vc_b$2[ebp]
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 289  : 		if( nIndex < 0 || nIndex >= m_nSize )

  0004d	8d 5f 01	 lea	 ebx, DWORD PTR [edi+1]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp

; 33   :     CString vc_b; 

  00050	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 289  : 		if( nIndex < 0 || nIndex >= m_nSize )

  00057	85 db		 test	 ebx, ebx
  00059	0f 88 ec 00 00
	00		 js	 $LN16@Sort
  0005f	3b 5e 08	 cmp	 ebx, DWORD PTR [esi+8]
  00062	0f 8d e3 00 00
	00		 jge	 $LN16@Sort

; 291  : 		return m_pData[nIndex]; }

  00068	8d 0c bd 00 00
	00 00		 lea	 ecx, DWORD PTR [edi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 377  : 		return( m_pszData );

  0006f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 291  : 		return m_pData[nIndex]; }

  00072	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  00075	89 55 ec	 mov	 DWORD PTR tv349[ebp], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 377  : 		return( m_pszData );

  00078	8b 14 02	 mov	 edx, DWORD PTR [edx+eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 289  : 		if( nIndex < 0 || nIndex >= m_nSize )

  0007b	3b 7e 08	 cmp	 edi, DWORD PTR [esi+8]
  0007e	0f 8d c7 00 00
	00		 jge	 $LN16@Sort

; 291  : 		return m_pData[nIndex]; }

  00084	03 c8		 add	 ecx, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp

; 37   :     if (GetAt(posFirst).CompareNoCase(GetAt(posNext)) > 0) 

  00086	52		 push	 edx
  00087	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CompareNoCase@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
  0008d	85 c0		 test	 eax, eax
  0008f	7e 76		 jle	 SHORT $LN11@Sort
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 289  : 		if( nIndex < 0 || nIndex >= m_nSize )

  00091	3b 7e 08	 cmp	 edi, DWORD PTR [esi+8]
  00094	0f 8d b1 00 00
	00		 jge	 $LN16@Sort

; 291  : 		return m_pData[nIndex]; }

  0009a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0009d	8d 0c bd 00 00
	00 00		 lea	 ecx, DWORD PTR [edi*4]
  000a4	03 c1		 add	 eax, ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp

; 39   :         vc_b = GetAt(posFirst); 

  000a6	8d 4d f0	 lea	 ecx, DWORD PTR _vc_b$2[ebp]
  000a9	50		 push	 eax
  000aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 289  : 		if( nIndex < 0 || nIndex >= m_nSize )

  000b0	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b3	3b d8		 cmp	 ebx, eax
  000b5	0f 8d 90 00 00
	00		 jge	 $LN16@Sort

; 291  : 		return m_pData[nIndex]; }

  000bb	8b 55 ec	 mov	 edx, DWORD PTR tv349[ebp]
  000be	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000c1	03 d1		 add	 edx, ecx

; 300  : 		if( nIndex < 0 || nIndex >= m_nSize )

  000c3	3b f8		 cmp	 edi, eax
  000c5	0f 8d 80 00 00
	00		 jge	 $LN16@Sort

; 301  : 			AfxThrowInvalidArgException();
; 302  : 		m_pData[nIndex] = newElement; }

  000cb	8d 04 bd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*4]
  000d2	52		 push	 edx
  000d3	03 c8		 add	 ecx, eax
  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z

; 300  : 		if( nIndex < 0 || nIndex >= m_nSize )

  000db	3b 5e 08	 cmp	 ebx, DWORD PTR [esi+8]
  000de	7d 6b		 jge	 SHORT $LN16@Sort

; 301  : 			AfxThrowInvalidArgException();
; 302  : 		m_pData[nIndex] = newElement; }

  000e0	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000e3	8d 45 f0	 lea	 eax, DWORD PTR _vc_b$2[ebp]
  000e6	03 4d ec	 add	 ecx, DWORD PTR tv349[ebp]
  000e9	50		 push	 eax
  000ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp

; 42   :         return TRUE; 

  000f0	8d 4d f0	 lea	 ecx, DWORD PTR _vc_b$2[ebp]
  000f3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00100	b8 01 00 00 00	 mov	 eax, 1
  00105	eb 12		 jmp	 SHORT $LN10@Sort
$LN11@Sort:

; 43   :     } 
; 44   :     return FALSE;     

  00107	8d 4d f0	 lea	 ecx, DWORD PTR _vc_b$2[ebp]
  0010a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00111	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00117	33 c0		 xor	 eax, eax
$LN10@Sort:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 284  : 	{ return m_nSize-1; }

  00119	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp

; 26   :         for(int pos = 0;pos < GetUpperBound();pos++) 

  0011c	8b fb		 mov	 edi, ebx

; 27   :             bNotDone |= CompareAndCStringSwap(pos); 

  0011e	8b 55 e8	 mov	 edx, DWORD PTR _bNotDone$1$[ebp]
  00121	0b d0		 or	 edx, eax
  00123	89 55 e8	 mov	 DWORD PTR _bNotDone$1$[ebp], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 284  : 	{ return m_nSize-1; }

  00126	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp

; 26   :         for(int pos = 0;pos < GetUpperBound();pos++) 

  00129	3b f8		 cmp	 edi, eax
  0012b	0f 8c 13 ff ff
	ff		 jl	 $LL6@Sort

; 21   :     BOOL bNotDone = TRUE; 
; 22   :     
; 23   :     while (bNotDone) 

  00131	85 d2		 test	 edx, edx
  00133	0f 85 f7 fe ff
	ff		 jne	 $LL2@Sort
$LN3@Sort:

; 29   : } 

  00139	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0013c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00143	59		 pop	 ecx
  00144	5f		 pop	 edi
  00145	5e		 pop	 esi
  00146	5b		 pop	 ebx
  00147	8b e5		 mov	 esp, ebp
  00149	5d		 pop	 ebp
  0014a	c3		 ret	 0
$LN16@Sort:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 290  : 			AfxThrowInvalidArgException();

  0014b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN58@Sort:
  00150	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Sort@CSortStringArray@@QAEXXZ$0:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _vc_b$2[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
__ehhandler$?Sort@CSortStringArray@@QAEXXZ:
  0000e	90		 npad	 1
  0000f	90		 npad	 1
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Sort@CSortStringArray@@QAEXXZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Sort@CSortStringArray@@QAEXXZ ENDP			; CSortStringArray::Sort
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\SortStringArray.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
