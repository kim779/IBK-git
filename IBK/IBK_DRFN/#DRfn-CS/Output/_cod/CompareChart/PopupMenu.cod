; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30148.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\CompareChart\PopupMenu.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1CObject@@UAE@XZ				; CObject::~CObject
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	??1CGdiObject@@UAE@XZ				; CGdiObject::~CGdiObject
PUBLIC	??_GCGdiObject@@UAEPAXI@Z			; CGdiObject::`scalar deleting destructor'
PUBLIC	??1CBrush@@UAE@XZ				; CBrush::~CBrush
PUBLIC	??_GCBrush@@UAEPAXI@Z				; CBrush::`scalar deleting destructor'
PUBLIC	??1CBitmap@@UAE@XZ				; CBitmap::~CBitmap
PUBLIC	??_GCBitmap@@UAEPAXI@Z				; CBitmap::`scalar deleting destructor'
PUBLIC	??1CMenu@@UAE@XZ				; CMenu::~CMenu
PUBLIC	??_GCMenu@@UAEPAXI@Z				; CMenu::`scalar deleting destructor'
PUBLIC	??0CPopUpMenu@@QAE@XZ				; CPopUpMenu::CPopUpMenu
PUBLIC	?AddBmpCool@CPopUpMenu@@QAEXH@Z			; CPopUpMenu::AddBmpCool
PUBLIC	?AddBmpHot@CPopUpMenu@@QAEXH@Z			; CPopUpMenu::AddBmpHot
PUBLIC	??0?$CArray@HH@@QAE@XZ				; CArray<int,int>::CArray<int,int>
PUBLIC	?SetSize@?$CArray@HH@@QAEXHH@Z			; CArray<int,int>::SetSize
PUBLIC	?SetAtGrow@?$CArray@HH@@QAEXHH@Z		; CArray<int,int>::SetAtGrow
PUBLIC	??1?$CArray@HH@@UAE@XZ				; CArray<int,int>::~CArray<int,int>
PUBLIC	?Serialize@?$CArray@HH@@UAEXAAVCArchive@@@Z	; CArray<int,int>::Serialize
PUBLIC	??_G?$CArray@HH@@UAEPAXI@Z			; CArray<int,int>::`scalar deleting destructor'
PUBLIC	?DrawItem@CPopUpMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z ; CPopUpMenu::DrawItem
PUBLIC	?MeasureItem@CPopUpMenu@@UAEXPAUtagMEASUREITEMSTRUCT@@@Z ; CPopUpMenu::MeasureItem
PUBLIC	??1CPopUpMenu@@UAE@XZ				; CPopUpMenu::~CPopUpMenu
PUBLIC	??_GCPopUpMenu@@UAEPAXI@Z			; CPopUpMenu::`scalar deleting destructor'
PUBLIC	??$SerializeElements@H@@YGXAAVCArchive@@PAHH@Z	; SerializeElements<int>
PUBLIC	??_R0PAVCException@@@8				; CException * `RTTI Type Descriptor'
PUBLIC	??_7CGdiObject@@6B@				; CGdiObject::`vftable'
PUBLIC	??_7CBrush@@6B@					; CBrush::`vftable'
PUBLIC	??_7CBitmap@@6B@				; CBitmap::`vftable'
PUBLIC	??_7CMenu@@6B@					; CMenu::`vftable'
PUBLIC	??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@ ; `string'
PUBLIC	??_C@_0BB@HBOOMJBF@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ?6?$CFTs@ ; `string'
PUBLIC	??_C@_0N@OMEMOKLE@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ@ ; `string'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CGdiObject@@6B@				; CGdiObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGdiObject@@@8				; CGdiObject `RTTI Type Descriptor'
PUBLIC	??_R3CGdiObject@@8				; CGdiObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGdiObject@@8				; CGdiObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGdiObject@@8			; CGdiObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CBrush@@6B@				; CBrush::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBrush@@@8				; CBrush `RTTI Type Descriptor'
PUBLIC	??_R3CBrush@@8					; CBrush::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBrush@@8					; CBrush::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBrush@@8				; CBrush::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CBitmap@@6B@				; CBitmap::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBitmap@@@8				; CBitmap `RTTI Type Descriptor'
PUBLIC	??_R3CBitmap@@8					; CBitmap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBitmap@@8					; CBitmap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBitmap@@8			; CBitmap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CMenu@@6B@					; CMenu::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMenu@@@8				; CMenu `RTTI Type Descriptor'
PUBLIC	??_R3CMenu@@8					; CMenu::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMenu@@8					; CMenu::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMenu@@8				; CMenu::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CArray@HH@@6B@				; CArray<int,int>::`vftable'
PUBLIC	??_7CPopUpMenu@@6B@				; CPopUpMenu::`vftable'
PUBLIC	??_R4CPopUpMenu@@6B@				; CPopUpMenu::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCPopUpMenu@@@8				; CPopUpMenu `RTTI Type Descriptor'
PUBLIC	??_R3CPopUpMenu@@8				; CPopUpMenu::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CPopUpMenu@@8				; CPopUpMenu::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CPopUpMenu@@8			; CPopUpMenu::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CArray@HH@@6B@				; CArray<int,int>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CArray@HH@@@8				; CArray<int,int> `RTTI Type Descriptor'
PUBLIC	??_R3?$CArray@HH@@8				; CArray<int,int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CArray@HH@@8				; CArray<int,int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CArray@HH@@8			; CArray<int,int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	___std_terminate:PROC
EXTRN	__imp___invalid_parameter_noinfo:PROC
EXTRN	__imp___errno:PROC
EXTRN	__imp__BitBlt@36:PROC
EXTRN	__imp__CreateCompatibleDC@4:PROC
EXTRN	__imp__CreateSolidBrush@4:PROC
EXTRN	__imp__FillRect@12:PROC
EXTRN	__imp__FrameRect@12:PROC
EXTRN	__imp__LoadBitmapW@8:PROC
EXTRN	?AfxThrowMemoryException@@YGXXZ:PROC		; AfxThrowMemoryException
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?AfxThrowArchiveException@@YGXHPBD@Z:PROC	; AfxThrowArchiveException
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CObject::GetRuntimeClass
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ:PROC
EXTRN	?Read@CArchive@@QAEIPAXI@Z:PROC			; CArchive::Read
EXTRN	?Write@CArchive@@QAEXPBXI@Z:PROC		; CArchive::Write
EXTRN	?ReadCount@CArchive@@QAEKXZ:PROC		; CArchive::ReadCount
EXTRN	?WriteCount@CArchive@@QAEXK@Z:PROC		; CArchive::WriteCount
EXTRN	?GetRuntimeClass@CGdiObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CGdiObject::GetRuntimeClass
EXTRN	?Attach@CGdiObject@@QAEHPAX@Z:PROC		; CGdiObject::Attach
EXTRN	?DeleteObject@CGdiObject@@QAEHXZ:PROC		; CGdiObject::DeleteObject
EXTRN	??_ECGdiObject@@UAEPAXI@Z:PROC			; CGdiObject::`vector deleting destructor'
EXTRN	?GetRuntimeClass@CBrush@@UBEPAUCRuntimeClass@@XZ:PROC ; CBrush::GetRuntimeClass
EXTRN	??_ECBrush@@UAEPAXI@Z:PROC			; CBrush::`vector deleting destructor'
EXTRN	?GetRuntimeClass@CBitmap@@UBEPAUCRuntimeClass@@XZ:PROC ; CBitmap::GetRuntimeClass
EXTRN	??_ECBitmap@@UAEPAXI@Z:PROC			; CBitmap::`vector deleting destructor'
EXTRN	?FromHandle@CDC@@SGPAV1@PAUHDC__@@@Z:PROC	; CDC::FromHandle
EXTRN	?Attach@CDC@@QAEHPAUHDC__@@@Z:PROC		; CDC::Attach
EXTRN	??0CDC@@QAE@XZ:PROC				; CDC::CDC
EXTRN	?DeleteDC@CDC@@QAEHXZ:PROC			; CDC::DeleteDC
EXTRN	?SelectObject@CDC@@QAEPAVCBrush@@PAV2@@Z:PROC	; CDC::SelectObject
EXTRN	??1CDC@@UAE@XZ:PROC				; CDC::~CDC
EXTRN	?SelectGdiObject@CDC@@KGPAVCGdiObject@@PAUHDC__@@PAX@Z:PROC ; CDC::SelectGdiObject
EXTRN	?GetRuntimeClass@CMenu@@UBEPAUCRuntimeClass@@XZ:PROC ; CMenu::GetRuntimeClass
EXTRN	?DestroyMenu@CMenu@@QAEHXZ:PROC			; CMenu::DestroyMenu
EXTRN	?DrawItem@CMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z:PROC ; CMenu::DrawItem
EXTRN	?MeasureItem@CMenu@@UAEXPAUtagMEASUREITEMSTRUCT@@@Z:PROC ; CMenu::MeasureItem
EXTRN	??_ECMenu@@UAEPAXI@Z:PROC			; CMenu::`vector deleting destructor'
EXTRN	?AfxFindResourceHandle@@YGPAUHINSTANCE__@@PBD0@Z:PROC ; AfxFindResourceHandle
EXTRN	?AfxMessageBox@@YGHPBDII@Z:PROC			; AfxMessageBox
EXTRN	??_E?$CArray@HH@@UAEPAXI@Z:PROC			; CArray<int,int>::`vector deleting destructor'
EXTRN	??_ECPopUpMenu@@UAEPAXI@Z:PROC			; CPopUpMenu::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@?$CArray@HH@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CArray@HH@@8 DD FLAT:??_R0?AV?$CArray@HH@@@8 ; CArray<int,int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CArray@HH@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CArray@HH@@8
rdata$r	SEGMENT
??_R2?$CArray@HH@@8 DD FLAT:??_R1A@?0A@EA@?$CArray@HH@@8 ; CArray<int,int>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CArray@HH@@8
rdata$r	SEGMENT
??_R3?$CArray@HH@@8 DD 00H				; CArray<int,int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CArray@HH@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CArray@HH@@@8
data$rs	SEGMENT
??_R0?AV?$CArray@HH@@@8 DD FLAT:??_7type_info@@6B@	; CArray<int,int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CArray@HH@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CArray@HH@@6B@
rdata$r	SEGMENT
??_R4?$CArray@HH@@6B@ DD 00H				; CArray<int,int>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CArray@HH@@@8
	DD	FLAT:??_R3?$CArray@HH@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CPopUpMenu@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CPopUpMenu@@8 DD FLAT:??_R0?AVCPopUpMenu@@@8 ; CPopUpMenu::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CPopUpMenu@@8
rdata$r	ENDS
;	COMDAT ??_R2CPopUpMenu@@8
rdata$r	SEGMENT
??_R2CPopUpMenu@@8 DD FLAT:??_R1A@?0A@EA@CPopUpMenu@@8	; CPopUpMenu::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CMenu@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CPopUpMenu@@8
rdata$r	SEGMENT
??_R3CPopUpMenu@@8 DD 00H				; CPopUpMenu::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CPopUpMenu@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCPopUpMenu@@@8
data$rs	SEGMENT
??_R0?AVCPopUpMenu@@@8 DD FLAT:??_7type_info@@6B@	; CPopUpMenu `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCPopUpMenu@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CPopUpMenu@@6B@
rdata$r	SEGMENT
??_R4CPopUpMenu@@6B@ DD 00H				; CPopUpMenu::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCPopUpMenu@@@8
	DD	FLAT:??_R3CPopUpMenu@@8
rdata$r	ENDS
;	COMDAT ??_7CPopUpMenu@@6B@
CONST	SEGMENT
??_7CPopUpMenu@@6B@ DD FLAT:??_R4CPopUpMenu@@6B@	; CPopUpMenu::`vftable'
	DD	FLAT:?GetRuntimeClass@CMenu@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECPopUpMenu@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?DrawItem@CPopUpMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
	DD	FLAT:?MeasureItem@CPopUpMenu@@UAEXPAUtagMEASUREITEMSTRUCT@@@Z
CONST	ENDS
;	COMDAT ??_7?$CArray@HH@@6B@
CONST	SEGMENT
??_7?$CArray@HH@@6B@ DD FLAT:??_R4?$CArray@HH@@6B@	; CArray<int,int>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CArray@HH@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CArray@HH@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CMenu@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMenu@@8 DD FLAT:??_R0?AVCMenu@@@8	; CMenu::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMenu@@8
rdata$r	ENDS
;	COMDAT ??_R2CMenu@@8
rdata$r	SEGMENT
??_R2CMenu@@8 DD FLAT:??_R1A@?0A@EA@CMenu@@8		; CMenu::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CMenu@@8
rdata$r	SEGMENT
??_R3CMenu@@8 DD 00H					; CMenu::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CMenu@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMenu@@@8
data$rs	SEGMENT
??_R0?AVCMenu@@@8 DD FLAT:??_7type_info@@6B@		; CMenu `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMenu@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CMenu@@6B@
rdata$r	SEGMENT
??_R4CMenu@@6B@ DD 00H					; CMenu::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMenu@@@8
	DD	FLAT:??_R3CMenu@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBitmap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBitmap@@8 DD FLAT:??_R0?AVCBitmap@@@8	; CBitmap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBitmap@@8
rdata$r	ENDS
;	COMDAT ??_R2CBitmap@@8
rdata$r	SEGMENT
??_R2CBitmap@@8 DD FLAT:??_R1A@?0A@EA@CBitmap@@8	; CBitmap::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGdiObject@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CBitmap@@8
rdata$r	SEGMENT
??_R3CBitmap@@8 DD 00H					; CBitmap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CBitmap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBitmap@@@8
data$rs	SEGMENT
??_R0?AVCBitmap@@@8 DD FLAT:??_7type_info@@6B@		; CBitmap `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBitmap@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CBitmap@@6B@
rdata$r	SEGMENT
??_R4CBitmap@@6B@ DD 00H				; CBitmap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBitmap@@@8
	DD	FLAT:??_R3CBitmap@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBrush@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBrush@@8 DD FLAT:??_R0?AVCBrush@@@8	; CBrush::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBrush@@8
rdata$r	ENDS
;	COMDAT ??_R2CBrush@@8
rdata$r	SEGMENT
??_R2CBrush@@8 DD FLAT:??_R1A@?0A@EA@CBrush@@8		; CBrush::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGdiObject@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CBrush@@8
rdata$r	SEGMENT
??_R3CBrush@@8 DD 00H					; CBrush::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CBrush@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBrush@@@8
data$rs	SEGMENT
??_R0?AVCBrush@@@8 DD FLAT:??_7type_info@@6B@		; CBrush `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBrush@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CBrush@@6B@
rdata$r	SEGMENT
??_R4CBrush@@6B@ DD 00H					; CBrush::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBrush@@@8
	DD	FLAT:??_R3CBrush@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGdiObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGdiObject@@8 DD FLAT:??_R0?AVCGdiObject@@@8 ; CGdiObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGdiObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CGdiObject@@8
rdata$r	SEGMENT
??_R2CGdiObject@@8 DD FLAT:??_R1A@?0A@EA@CGdiObject@@8	; CGdiObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CGdiObject@@8
rdata$r	SEGMENT
??_R3CGdiObject@@8 DD 00H				; CGdiObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGdiObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGdiObject@@@8
data$rs	SEGMENT
??_R0?AVCGdiObject@@@8 DD FLAT:??_7type_info@@6B@	; CGdiObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGdiObject@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CGdiObject@@6B@
rdata$r	SEGMENT
??_R4CGdiObject@@6B@ DD 00H				; CGdiObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGdiObject@@@8
	DD	FLAT:??_R3CGdiObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$rs	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$rs	ENDS
;	COMDAT ??_C@_0N@OMEMOKLE@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ@
CONST	SEGMENT
??_C@_0N@OMEMOKLE@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ@ DB '%Ts (%Ts:%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HBOOMJBF@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ?6?$CFTs@
CONST	SEGMENT
??_C@_0BB@HBOOMJBF@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ?6?$CFTs@ DB '%Ts (%Ts:%d'
	DB	')', 0aH, '%Ts', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@
CONST	SEGMENT
??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@ DB 'Exception throw'
	DB	'n in destructor', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.29.30133\atlmfc\include\afxwin1.inl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CMenu@@6B@
CONST	SEGMENT
??_7CMenu@@6B@ DD FLAT:??_R4CMenu@@6B@			; CMenu::`vftable'
	DD	FLAT:?GetRuntimeClass@CMenu@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECMenu@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?DrawItem@CMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
	DD	FLAT:?MeasureItem@CMenu@@UAEXPAUtagMEASUREITEMSTRUCT@@@Z
CONST	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT
??_7CBitmap@@6B@ DD FLAT:??_R4CBitmap@@6B@		; CBitmap::`vftable'
	DD	FLAT:?GetRuntimeClass@CBitmap@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECBitmap@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CBrush@@6B@
CONST	SEGMENT
??_7CBrush@@6B@ DD FLAT:??_R4CBrush@@6B@		; CBrush::`vftable'
	DD	FLAT:?GetRuntimeClass@CBrush@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECBrush@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT
??_7CGdiObject@@6B@ DD FLAT:??_R4CGdiObject@@6B@	; CGdiObject::`vftable'
	DD	FLAT:?GetRuntimeClass@CGdiObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECGdiObject@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_R0PAVCException@@@8
data$r	SEGMENT
??_R0PAVCException@@@8 DD FLAT:??_7type_info@@6B@	; CException * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAVCException@@', 00H
data$r	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GCPopUpMenu@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_GCPopUpMenu@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_GCPopUpMenu@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CPopUpMenu@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1CPopUpMenu@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CPopUpMenu@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DrawItem@CPopUpMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DrawItem@CPopUpMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DrawItem@CPopUpMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DrawItem@CPopUpMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?DrawItem@CPopUpMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z$3
__ehfuncinfo$?DrawItem@CPopUpMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?DrawItem@CPopUpMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CPopUpMenu@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CPopUpMenu@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CPopUpMenu@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CPopUpMenu@@QAE@XZ$2
__ehfuncinfo$??0CPopUpMenu@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CPopUpMenu@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GCMenu@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_GCMenu@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_GCMenu@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CMenu@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??1CGdiObject@@UAE@XZ$3 DD 00H
	DD	FLAT:??_R0PAVCException@@@8
	DD	0fffffde4H
	DD	FLAT:__catch$??1CGdiObject@@UAE@XZ$0
__tryblocktable$??1CGdiObject@@UAE@XZ DD 00H
	DD	00H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??1CGdiObject@@UAE@XZ$3
__unwindtable$??1CGdiObject@@UAE@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$??1CGdiObject@@UAE@XZ$2
__ehfuncinfo$??1CGdiObject@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1CGdiObject@@UAE@XZ
	DD	01H
	DD	FLAT:__tryblocktable$??1CGdiObject@@UAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@H@@YGXAAVCArchive@@PAHH@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@H@@YGXAAVCArchive@@PAHH@Z PROC	; SerializeElements<int>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b 75 10	 mov	 esi, DWORD PTR _nCount$[ebp]
  0000b	57		 push	 edi
  0000c	85 f6		 test	 esi, esi
  0000e	74 08		 je	 SHORT $LN2@SerializeE
  00010	85 c9		 test	 ecx, ecx
  00012	0f 84 89 00 00
	00		 je	 $LN34@SerializeE
$LN2@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00018	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  0001b	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0001e	f7 d0		 not	 eax
  00020	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  00022	74 3c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;
; 79   : 		pData = pElements;
; 80   : 		while( nElementsLeft > 0 )

  00024	85 f6		 test	 esi, esi
  00026	74 31		 je	 SHORT $LN8@SerializeE
  00028	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL5@SerializeE:

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00030	bb ff ff ff 1f	 mov	 ebx, 536870911		; 1fffffffH
  00035	3b f3		 cmp	 esi, ebx
  00037	0f 42 de	 cmovb	 ebx, esi

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0003a	8d 3c 9d 00 00
	00 00		 lea	 edi, DWORD PTR [ebx*4]
  00041	57		 push	 edi
  00042	51		 push	 ecx
  00043	8b ca		 mov	 ecx, edx
  00045	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;
; 87   : 			pData += nElementsToWrite;

  0004a	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00050	03 cf		 add	 ecx, edi
  00052	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  00055	2b f3		 sub	 esi, ebx
  00057	75 d7		 jne	 SHORT $LL5@SerializeE
$LN8@SerializeE:
  00059	5f		 pop	 edi

; 105  : 		}
; 106  : 	}
; 107  : }

  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	5d		 pop	 ebp
  0005d	c2 0c 00	 ret	 12			; 0000000cH
$LN10@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  00060	85 f6		 test	 esi, esi
  00062	74 f5		 je	 SHORT $LN8@SerializeE
$LL7@SerializeE:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00064	bf ff ff ff 1f	 mov	 edi, 536870911		; 1fffffffH
  00069	3b f7		 cmp	 esi, edi
  0006b	0f 42 fe	 cmovb	 edi, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0006e	8d 1c bd 00 00
	00 00		 lea	 ebx, DWORD PTR [edi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00075	53		 push	 ebx
  00076	51		 push	 ecx
  00077	8b ca		 mov	 ecx, edx
  00079	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0007e	3b c3		 cmp	 eax, ebx
  00080	75 16		 jne	 SHORT $LN23@SerializeE
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  00082	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00085	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;
; 104  : 			pData += nElementsToRead;

  00088	03 cb		 add	 ecx, ebx
  0008a	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  0008d	2b f7		 sub	 esi, edi
  0008f	75 d3		 jne	 SHORT $LL7@SerializeE

; 105  : 		}
; 106  : 	}
; 107  : }

  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	5d		 pop	 ebp
  00095	c2 0c 00	 ret	 12			; 0000000cH
$LN23@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 402  : 		AfxThrowArchiveException(CArchiveException::endOfFile);

  00098	6a 00		 push	 0
  0009a	6a 03		 push	 3
  0009c	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN34@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  000a1	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN32@SerializeE:
  000a6	cc		 int	 3
??$SerializeElements@H@@YGXAAVCArchive@@PAHH@Z ENDP	; SerializeElements<int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCPopUpMenu@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GCPopUpMenu@@UAEPAXI@Z PROC				; CPopUpMenu::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GCPopUpMenu@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 25   : {

  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CPopUpMenu@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 358  : 	if (m_pData != NULL)

  0002b	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0002e	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], OFFSET ??_7?$CArray@HH@@6B@
  00035	85 c0		 test	 eax, eax
  00037	74 10		 je	 SHORT $LN14@scalar

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )

  00039	83 7e 28 00	 cmp	 DWORD PTR [esi+40], 0
  0003d	0f 4f c0	 cmovg	 eax, eax

; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00046	83 c4 04	 add	 esp, 4
$LN14@scalar:

; 358  : 	if (m_pData != NULL)

  00049	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0004c	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CArray@HH@@6B@
  00053	85 c0		 test	 eax, eax
  00055	74 10		 je	 SHORT $LN21@scalar

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )

  00057	83 7e 14 00	 cmp	 DWORD PTR [esi+20], 0
  0005b	0f 4f c0	 cmovg	 eax, eax

; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00064	83 c4 04	 add	 esp, 4
$LN21@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 905  : 	{ DestroyMenu(); }

  00067	8b ce		 mov	 ecx, esi
  00069	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00070	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMenu@@6B@
  00076	e8 00 00 00 00	 call	 ?DestroyMenu@CMenu@@QAEHXZ ; CMenu::DestroyMenu
  0007b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0007e	a8 01		 test	 al, 1
  00080	74 2c		 je	 SHORT $LN37@scalar
  00082	a8 04		 test	 al, 4
  00084	75 1d		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  00086	56		 push	 esi
  00087	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0008c	83 c4 04	 add	 esp, 4
  0008f	8b c6		 mov	 eax, esi
  00091	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00094	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009b	59		 pop	 ecx
  0009c	5e		 pop	 esi
  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c2 04 00	 ret	 4
$LN3@scalar:
  000a3	6a 34		 push	 52			; 00000034H
  000a5	56		 push	 esi
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN37@scalar:
  000ae	8b c6		 mov	 eax, esi
  000b0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ba	59		 pop	 ecx
  000bb	5e		 pop	 esi
  000bc	8b e5		 mov	 esp, ebp
  000be	5d		 pop	 ebp
  000bf	c2 04 00	 ret	 4
  000c2	cc		 int	 3
  000c3	cc		 int	 3
  000c4	cc		 int	 3
  000c5	cc		 int	 3
  000c6	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_GCPopUpMenu@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GCPopUpMenu@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GCPopUpMenu@@UAEPAXI@Z ENDP				; CPopUpMenu::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
;	COMDAT ??1CPopUpMenu@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CPopUpMenu@@UAE@XZ PROC				; CPopUpMenu::~CPopUpMenu, COMDAT
; _this$ = ecx

; 25   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CPopUpMenu@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CPopUpMenu@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 358  : 	if (m_pData != NULL)

  0002b	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0002e	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], OFFSET ??_7?$CArray@HH@@6B@
  00035	85 c0		 test	 eax, eax
  00037	74 10		 je	 SHORT $LN7@CPopUpMenu

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )

  00039	83 7e 28 00	 cmp	 DWORD PTR [esi+40], 0
  0003d	0f 4f c0	 cmovg	 eax, eax

; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00046	83 c4 04	 add	 esp, 4
$LN7@CPopUpMenu:

; 358  : 	if (m_pData != NULL)

  00049	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0004c	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CArray@HH@@6B@
  00053	85 c0		 test	 eax, eax
  00055	74 10		 je	 SHORT $LN14@CPopUpMenu

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )

  00057	83 7e 14 00	 cmp	 DWORD PTR [esi+20], 0
  0005b	0f 4f c0	 cmovg	 eax, eax

; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00064	83 c4 04	 add	 esp, 4
$LN14@CPopUpMenu:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 905  : 	{ DestroyMenu(); }

  00067	8b ce		 mov	 ecx, esi
  00069	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00070	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMenu@@6B@
  00076	e8 00 00 00 00	 call	 ?DestroyMenu@CMenu@@QAEHXZ ; CMenu::DestroyMenu
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 26   : }

  0007b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00085	59		 pop	 ecx
  00086	5e		 pop	 esi
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c3		 ret	 0
  0008b	cc		 int	 3
  0008c	cc		 int	 3
  0008d	cc		 int	 3
  0008e	cc		 int	 3
  0008f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CPopUpMenu@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CPopUpMenu@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CPopUpMenu@@UAE@XZ ENDP				; CPopUpMenu::~CPopUpMenu
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
;	COMDAT ?MeasureItem@CPopUpMenu@@UAEXPAUtagMEASUREITEMSTRUCT@@@Z
_TEXT	SEGMENT
_lpMIS$ = 8						; size = 4
?MeasureItem@CPopUpMenu@@UAEXPAUtagMEASUREITEMSTRUCT@@@Z PROC ; CPopUpMenu::MeasureItem, COMDAT
; _this$ = ecx

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 32   : 	// all items are of fixed size
; 33   : 	lpMIS->itemWidth	= 18;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpMIS$[ebp]
  00006	c7 40 0c 12 00
	00 00		 mov	 DWORD PTR [eax+12], 18	; 00000012H

; 34   : 	lpMIS->itemHeight	= 26;

  0000d	c7 40 10 1a 00
	00 00		 mov	 DWORD PTR [eax+16], 26	; 0000001aH

; 35   : 
; 36   : 	if (m_bBitMap)	{

  00014	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  00018	74 0e		 je	 SHORT $LN2@MeasureIte

; 37   : 		lpMIS->itemWidth	= 16;

  0001a	c7 40 0c 10 00
	00 00		 mov	 DWORD PTR [eax+12], 16	; 00000010H

; 38   : 		lpMIS->itemHeight	= 20;

  00021	c7 40 10 14 00
	00 00		 mov	 DWORD PTR [eax+16], 20	; 00000014H
$LN2@MeasureIte:

; 39   : 	}
; 40   : }

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?MeasureItem@CPopUpMenu@@UAEXPAUtagMEASUREITEMSTRUCT@@@Z ENDP ; CPopUpMenu::MeasureItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
;	COMDAT ?DrawItem@CPopUpMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
_TEXT	SEGMENT
_mDC$2 = -60						; size = 16
_bitMap$3 = -44						; size = 8
_brAction$ = -36					; size = 8
_br$ = -28						; size = 8
_pOldBrush$1$ = -20					; size = 4
_pOldBitmap$1$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
tv612 = 8						; size = 4
_lpDIS$ = 8						; size = 4
?DrawItem@CPopUpMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z PROC	; CPopUpMenu::DrawItem, COMDAT
; _this$ = ecx

; 43   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DrawItem@CPopUpMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx

; 44   : 	CDC* pDC = CDC::FromHandle(lpDIS->hDC);

  0002a	8b 45 08	 mov	 eax, DWORD PTR _lpDIS$[ebp]
  0002d	ff 70 18	 push	 DWORD PTR [eax+24]
  00030	e8 00 00 00 00	 call	 ?FromHandle@CDC@@SGPAV1@PAUHDC__@@@Z ; CDC::FromHandle
  00035	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 70   : 	{ m_hObject = NULL; }

  00037	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _br$[ebp+4], 0

; 128  : 	{ }

  0003e	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _br$[ebp], OFFSET ??_7CBrush@@6B@
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 48   : 	CBrush br, brAction, *pOldBrush;

  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 70   : 	{ m_hObject = NULL; }

  0004c	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _brAction$[ebp+4], 0

; 128  : 	{ }

  00053	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _brAction$[ebp], OFFSET ??_7CBrush@@6B@

; 132  : 	{ return Attach(::CreateSolidBrush(crColor)); }

  0005a	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__CreateSolidBrush@4
  00060	68 c0 c0 c0 00	 push	 12632256		; 00c0c0c0H
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 48   : 	CBrush br, brAction, *pOldBrush;

  00065	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 132  : 	{ return Attach(::CreateSolidBrush(crColor)); }

  00069	ff d6		 call	 esi
  0006b	50		 push	 eax
  0006c	8d 4d e4	 lea	 ecx, DWORD PTR _br$[ebp]
  0006f	e8 00 00 00 00	 call	 ?Attach@CGdiObject@@QAEHPAX@Z ; CGdiObject::Attach
  00074	68 3f 3f 3f 00	 push	 4144959			; 003f3f3fH
  00079	ff d6		 call	 esi
  0007b	50		 push	 eax
  0007c	8d 4d dc	 lea	 ecx, DWORD PTR _brAction$[ebp]
  0007f	e8 00 00 00 00	 call	 ?Attach@CGdiObject@@QAEHPAX@Z ; CGdiObject::Attach
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 51   : 	pOldBrush = pDC->SelectObject(&br);

  00084	8d 45 e4	 lea	 eax, DWORD PTR _br$[ebp]
  00087	8b cf		 mov	 ecx, edi
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCBrush@@PAV2@@Z ; CDC::SelectObject

; 52   : 
; 53   : 	if (lpDIS->itemAction & ODA_DRAWENTIRE)

  0008f	8b 75 08	 mov	 esi, DWORD PTR _lpDIS$[ebp]
  00092	89 45 ec	 mov	 DWORD PTR _pOldBrush$1$[ebp], eax
  00095	f6 46 0c 01	 test	 BYTE PTR [esi+12], 1
  00099	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  0009c	74 10		 je	 SHORT $LN91@DrawItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 476  : 	{ ASSERT(m_hDC != NULL); ::FillRect(m_hDC, lpRect, (HBRUSH)pBrush->GetSafeHandle()); }

  0009e	ff 75 e8	 push	 DWORD PTR _br$[ebp+4]
  000a1	51		 push	 ecx
  000a2	ff 77 04	 push	 DWORD PTR [edi+4]
  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FillRect@12
  000ab	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
$LN91@DrawItem:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 59   : 	if ((lpDIS->itemState & ODS_SELECTED) &&

  000ae	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000b1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp__FrameRect@12
  000b7	a8 01		 test	 al, 1
  000b9	74 1c		 je	 SHORT $LN97@DrawItem
  000bb	f6 46 0c 03	 test	 BYTE PTR [esi+12], 3
  000bf	74 12		 je	 SHORT $LN6@DrawItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 478  : 	{ ASSERT(m_hDC != NULL); ::FrameRect(m_hDC, lpRect, (HBRUSH)pBrush->GetSafeHandle()); }

  000c1	ff 75 e0	 push	 DWORD PTR _brAction$[ebp+4]
  000c4	51		 push	 ecx
  000c5	ff 77 04	 push	 DWORD PTR [edi+4]
  000c8	ff d2		 call	 edx
  000ca	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000cd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp__FrameRect@12
$LN6@DrawItem:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 66   : 	if (!(lpDIS->itemState & ODS_SELECTED) &&

  000d3	a8 01		 test	 al, 1
  000d5	75 12		 jne	 SHORT $LN7@DrawItem
$LN97@DrawItem:
  000d7	f6 46 0c 02	 test	 BYTE PTR [esi+12], 2
  000db	74 0c		 je	 SHORT $LN7@DrawItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 478  : 	{ ASSERT(m_hDC != NULL); ::FrameRect(m_hDC, lpRect, (HBRUSH)pBrush->GetSafeHandle()); }

  000dd	ff 75 e8	 push	 DWORD PTR _br$[ebp+4]
  000e0	8d 46 1c	 lea	 eax, DWORD PTR [esi+28]
  000e3	50		 push	 eax
  000e4	ff 77 04	 push	 DWORD PTR [edi+4]
  000e7	ff d2		 call	 edx
$LN7@DrawItem:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 73   : 	if(m_bBitMap)

  000e9	83 7b 08 00	 cmp	 DWORD PTR [ebx+8], 0
  000ed	0f 84 ee 00 00
	00		 je	 $LN93@DrawItem

; 75   : 		for (int i = 0; i < m_CoolBmp.GetSize(); i++)	{

  000f3	33 f6		 xor	 esi, esi
  000f5	39 73 14	 cmp	 DWORD PTR [ebx+20], esi
  000f8	0f 8e e3 00 00
	00		 jle	 $LN93@DrawItem
  000fe	89 75 08	 mov	 DWORD PTR tv612[ebp], esi
$LL4@DrawItem:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 70   : 	{ m_hObject = NULL; }

  00101	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _bitMap$3[ebp+4], 0

; 177  : 	{ }

  00108	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _bitMap$3[ebp], OFFSET ??_7CBitmap@@6B@
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 77   : 			CDC mDC;

  0010f	8d 4d c4	 lea	 ecx, DWORD PTR _mDC$2[ebp]
  00112	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00116	e8 00 00 00 00	 call	 ??0CDC@@QAE@XZ		; CDC::CDC
  0011b	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 316  : 	{ return this == NULL ? NULL : m_hDC; }

  0011f	85 ff		 test	 edi, edi
  00121	75 04		 jne	 SHORT $LN53@DrawItem
  00123	33 c0		 xor	 eax, eax
  00125	eb 03		 jmp	 SHORT $LN54@DrawItem
$LN53@DrawItem:
  00127	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
$LN54@DrawItem:

; 330  : 	{ return Attach(::CreateCompatibleDC(pDC->GetSafeHdc())); }

  0012a	50		 push	 eax
  0012b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateCompatibleDC@4
  00131	50		 push	 eax
  00132	8d 4d c4	 lea	 ecx, DWORD PTR _mDC$2[ebp]
  00135	e8 00 00 00 00	 call	 ?Attach@CDC@@QAEHPAUHDC__@@@Z ; CDC::Attach
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 78   : 			if (mDC.CreateCompatibleDC(pDC))	{

  0013a	85 c0		 test	 eax, eax
  0013c	74 72		 je	 SHORT $LN9@DrawItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 288  : 	if(nIndex >= 0 && nIndex < m_nSize)

  0013e	85 f6		 test	 esi, esi
  00140	0f 88 e7 00 00
	00		 js	 $LN56@DrawItem
  00146	3b 73 14	 cmp	 esi, DWORD PTR [ebx+20]
  00149	0f 8d de 00 00
	00		 jge	 $LN56@DrawItem

; 289  : 		return m_pData[nIndex];

  0014f	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 79   : 				bitMap.LoadBitmap(m_CoolBmp.GetAt(i));

  00152	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 212  : 	{ return Attach(::LoadBitmapW(AfxFindResourceHandle(

  00155	0f b7 c0	 movzx	 eax, ax
  00158	50		 push	 eax
  00159	6a 02		 push	 2
  0015b	50		 push	 eax
  0015c	e8 00 00 00 00	 call	 ?AfxFindResourceHandle@@YGPAUHINSTANCE__@@PBD0@Z ; AfxFindResourceHandle
  00161	50		 push	 eax
  00162	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadBitmapW@8
  00168	50		 push	 eax
  00169	8d 4d d4	 lea	 ecx, DWORD PTR _bitMap$3[ebp]
  0016c	e8 00 00 00 00	 call	 ?Attach@CGdiObject@@QAEHPAX@Z ; CGdiObject::Attach

; 361  : 	{ ASSERT(m_hDC != NULL); return (CBitmap*) SelectGdiObject(m_hDC, pBitmap->GetSafeHandle()); }

  00171	ff 75 d8	 push	 DWORD PTR _bitMap$3[ebp+4]
  00174	ff 75 c8	 push	 DWORD PTR _mDC$2[ebp+4]
  00177	e8 00 00 00 00	 call	 ?SelectGdiObject@CDC@@KGPAVCGdiObject@@PAUHDC__@@PAX@Z ; CDC::SelectGdiObject

; 552  : 	{ ASSERT(m_hDC != NULL); return ::BitBlt(m_hDC, x, y, nWidth, nHeight,

  0017c	68 20 00 cc 00	 push	 13369376		; 00cc0020H
  00181	6a 00		 push	 0
  00183	6a 00		 push	 0
  00185	ff 75 c8	 push	 DWORD PTR _mDC$2[ebp+4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 80   : 				pOldBitmap = mDC.SelectObject(&bitMap);

  00188	89 45 f0	 mov	 DWORD PTR _pOldBitmap$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 552  : 	{ ASSERT(m_hDC != NULL); return ::BitBlt(m_hDC, x, y, nWidth, nHeight,

  0018b	6a 12		 push	 18			; 00000012H
  0018d	6a 1b		 push	 27			; 0000001bH
  0018f	ff 75 08	 push	 DWORD PTR tv612[ebp]
  00192	6a 01		 push	 1
  00194	ff 77 04	 push	 DWORD PTR [edi+4]
  00197	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__BitBlt@36

; 68   : 	{ return this == NULL ? NULL : m_hObject; }

  0019d	8b 45 f0	 mov	 eax, DWORD PTR _pOldBitmap$1$[ebp]
  001a0	85 c0		 test	 eax, eax
  001a2	74 03		 je	 SHORT $LN78@DrawItem
$LN77@DrawItem:
  001a4	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
$LN78@DrawItem:

; 361  : 	{ ASSERT(m_hDC != NULL); return (CBitmap*) SelectGdiObject(m_hDC, pBitmap->GetSafeHandle()); }

  001a7	50		 push	 eax
  001a8	ff 75 c8	 push	 DWORD PTR _mDC$2[ebp+4]
  001ab	e8 00 00 00 00	 call	 ?SelectGdiObject@CDC@@KGPAVCGdiObject@@PAUHDC__@@PAX@Z ; CDC::SelectGdiObject
$LN9@DrawItem:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 84   : 			mDC.DeleteDC();

  001b0	8d 4d c4	 lea	 ecx, DWORD PTR _mDC$2[ebp]
  001b3	e8 00 00 00 00	 call	 ?DeleteDC@CDC@@QAEHXZ	; CDC::DeleteDC

; 85   : 		}

  001b8	8d 4d c4	 lea	 ecx, DWORD PTR _mDC$2[ebp]
  001bb	e8 00 00 00 00	 call	 ??1CDC@@UAE@XZ		; CDC::~CDC
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 179  : 	{ }

  001c0	8d 4d d4	 lea	 ecx, DWORD PTR _bitMap$3[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 85   : 		}

  001c3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 179  : 	{ }

  001c7	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _bitMap$3[ebp], OFFSET ??_7CBitmap@@6B@
  001ce	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 75   : 		for (int i = 0; i < m_CoolBmp.GetSize(); i++)	{

  001d3	83 45 08 14	 add	 DWORD PTR tv612[ebp], 20 ; 00000014H
  001d7	46		 inc	 esi
  001d8	3b 73 14	 cmp	 esi, DWORD PTR [ebx+20]
  001db	0f 8c 20 ff ff
	ff		 jl	 $LL4@DrawItem
$LN93@DrawItem:

; 86   : 	}
; 87   : 
; 88   : 	pDC->SelectObject(pOldBrush);

  001e1	ff 75 ec	 push	 DWORD PTR _pOldBrush$1$[ebp]
  001e4	8b cf		 mov	 ecx, edi
  001e6	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCBrush@@PAV2@@Z ; CDC::SelectObject

; 89   : 
; 90   : 	br.DeleteObject();			//shc 20021113

  001eb	8d 4d e4	 lea	 ecx, DWORD PTR _br$[ebp]
  001ee	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject

; 91   : 	brAction.DeleteObject();	//shc 20021113

  001f3	8d 4d dc	 lea	 ecx, DWORD PTR _brAction$[ebp]
  001f6	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 130  : 	{ }

  001fb	8d 4d dc	 lea	 ecx, DWORD PTR _brAction$[ebp]
  001fe	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _brAction$[ebp], OFFSET ??_7CBrush@@6B@
  00205	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  0020a	8d 4d e4	 lea	 ecx, DWORD PTR _br$[ebp]
  0020d	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _br$[ebp], OFFSET ??_7CBrush@@6B@
  00214	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 92   : }

  00219	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0021c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00223	59		 pop	 ecx
  00224	5f		 pop	 edi
  00225	5e		 pop	 esi
  00226	5b		 pop	 ebx
  00227	8b e5		 mov	 esp, ebp
  00229	5d		 pop	 ebp
  0022a	c2 04 00	 ret	 4
$LN56@DrawItem:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 290  : 	AfxThrowInvalidArgException();

  0022d	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN95@DrawItem:
  00232	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DrawItem@CPopUpMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR _br$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CBrush@@UAE@XZ	; CBrush::~CBrush
__unwindfunclet$?DrawItem@CPopUpMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z$1:
  00008	8d 4d dc	 lea	 ecx, DWORD PTR _brAction$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1CBrush@@UAE@XZ	; CBrush::~CBrush
__unwindfunclet$?DrawItem@CPopUpMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z$2:
  00010	8d 4d d4	 lea	 ecx, DWORD PTR _bitMap$3[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1CBitmap@@UAE@XZ	; CBitmap::~CBitmap
__unwindfunclet$?DrawItem@CPopUpMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z$3:
  00018	8d 4d c4	 lea	 ecx, DWORD PTR _mDC$2[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1CDC@@UAE@XZ		; CDC::~CDC
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
__ehhandler$?DrawItem@CPopUpMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z:
  00025	90		 npad	 1
  00026	90		 npad	 1
  00027	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002e	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00031	33 c8		 xor	 ecx, eax
  00033	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00038	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DrawItem@CPopUpMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
  0003d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DrawItem@CPopUpMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z ENDP	; CPopUpMenu::DrawItem
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_G?$CArray@HH@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CArray@HH@@UAEPAXI@Z PROC				; CArray<int,int>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 355  : {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 356  : 	ASSERT_VALID(this);
; 357  : 
; 358  : 	if (m_pData != NULL)

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CArray@HH@@6B@
  0000f	85 c0		 test	 eax, eax
  00011	74 09		 je	 SHORT $LN11@scalar

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )
; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00019	83 c4 04	 add	 esp, 4
$LN11@scalar:
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	a8 01		 test	 al, 1
  00021	74 1f		 je	 SHORT $LN20@scalar
  00023	a8 04		 test	 al, 4
  00025	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002d	83 c4 04	 add	 esp, 4
  00030	8b c6		 mov	 eax, esi
  00032	5e		 pop	 esi
  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
$LN3@scalar:
  00037	6a 14		 push	 20			; 00000014H
  00039	56		 push	 esi
  0003a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003f	83 c4 08	 add	 esp, 8
$LN20@scalar:
  00042	8b c6		 mov	 eax, esi
  00044	5e		 pop	 esi
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??_G?$CArray@HH@@UAEPAXI@Z ENDP				; CArray<int,int>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CArray@HH@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_pData$1$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CArray@HH@@UAEXAAVCArchive@@@Z PROC	; CArray<int,int>::Serialize, COMDAT
; _this$ = ecx

; 633  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00009	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0000c	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  0000f	f7 d0		 not	 eax
  00011	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 637  : 	if (ar.IsStoring())

  00013	74 0a		 je	 SHORT $LN2@Serialize

; 638  : 	{
; 639  : 		ar.WriteCount(m_nSize);

  00015	ff 77 08	 push	 DWORD PTR [edi+8]
  00018	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 640  : 	}

  0001d	eb 0f		 jmp	 SHORT $LN3@Serialize
$LN2@Serialize:

; 641  : 	else
; 642  : 	{
; 643  : 		DWORD_PTR nOldSize = ar.ReadCount();

  0001f	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount

; 644  : 		SetSize(nOldSize, -1);

  00024	6a ff		 push	 -1
  00026	50		 push	 eax
  00027	8b cf		 mov	 ecx, edi
  00029	e8 00 00 00 00	 call	 ?SetSize@?$CArray@HH@@QAEXHH@Z ; CArray<int,int>::SetSize
$LN3@Serialize:

; 645  : 	}
; 646  : 	SerializeElements<TYPE>(ar, m_pData, m_nSize);

  0002e	8b 77 08	 mov	 esi, DWORD PTR [edi+8]
  00031	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00034	89 4d fc	 mov	 DWORD PTR _pData$1$[ebp], ecx

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00037	85 f6		 test	 esi, esi
  00039	74 08		 je	 SHORT $LN8@Serialize
  0003b	85 c9		 test	 ecx, ecx
  0003d	0f 84 8c 00 00
	00		 je	 $LN40@Serialize
$LN8@Serialize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00043	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00046	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00049	f7 d0		 not	 eax
  0004b	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  0004d	74 36		 je	 SHORT $LN16@Serialize

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;
; 79   : 		pData = pElements;
; 80   : 		while( nElementsLeft > 0 )

  0004f	85 f6		 test	 esi, esi
  00051	74 29		 je	 SHORT $LN14@Serialize
$LL11@Serialize:

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00053	bb ff ff ff 1f	 mov	 ebx, 536870911		; 1fffffffH
  00058	3b f3		 cmp	 esi, ebx
  0005a	0f 42 de	 cmovb	 ebx, esi

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0005d	8d 3c 9d 00 00
	00 00		 lea	 edi, DWORD PTR [ebx*4]
  00064	57		 push	 edi
  00065	51		 push	 ecx
  00066	8b ca		 mov	 ecx, edx
  00068	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;
; 87   : 			pData += nElementsToWrite;

  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _pData$1$[ebp]
  00070	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00073	03 cf		 add	 ecx, edi
  00075	89 4d fc	 mov	 DWORD PTR _pData$1$[ebp], ecx
  00078	2b f3		 sub	 esi, ebx
  0007a	75 d7		 jne	 SHORT $LL11@Serialize
$LN14@Serialize:
  0007c	5f		 pop	 edi

; 647  : }

  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
$LN16@Serialize:

; 97   : 		while( nElementsLeft > 0 )

  00085	85 f6		 test	 esi, esi
  00087	74 f3		 je	 SHORT $LN14@Serialize
  00089	0f 1f 80 00 00
	00 00		 npad	 7
$LL13@Serialize:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00090	bf ff ff ff 1f	 mov	 edi, 536870911		; 1fffffffH
  00095	3b f7		 cmp	 esi, edi
  00097	0f 42 fe	 cmovb	 edi, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0009a	8d 1c bd 00 00
	00 00		 lea	 ebx, DWORD PTR [edi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  000a1	53		 push	 ebx
  000a2	51		 push	 ecx
  000a3	8b ca		 mov	 ecx, edx
  000a5	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  000aa	3b c3		 cmp	 eax, ebx
  000ac	75 18		 jne	 SHORT $LN30@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  000ae	8b 4d fc	 mov	 ecx, DWORD PTR _pData$1$[ebp]
  000b1	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;
; 104  : 			pData += nElementsToRead;

  000b4	03 cb		 add	 ecx, ebx
  000b6	89 4d fc	 mov	 DWORD PTR _pData$1$[ebp], ecx
  000b9	2b f7		 sub	 esi, edi
  000bb	75 d3		 jne	 SHORT $LL13@Serialize

; 647  : }

  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 04 00	 ret	 4
$LN30@Serialize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 402  : 		AfxThrowArchiveException(CArchiveException::endOfFile);

  000c6	6a 00		 push	 0
  000c8	6a 03		 push	 3
  000ca	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN40@Serialize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  000cf	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN38@Serialize:
  000d4	cc		 int	 3
?Serialize@?$CArray@HH@@UAEXAAVCArchive@@@Z ENDP	; CArray<int,int>::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CArray@HH@@UAE@XZ
_TEXT	SEGMENT
??1?$CArray@HH@@UAE@XZ PROC				; CArray<int,int>::~CArray<int,int>, COMDAT
; _this$ = ecx

; 356  : 	ASSERT_VALID(this);
; 357  : 
; 358  : 	if (m_pData != NULL)

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CArray@HH@@6B@
  00009	85 c0		 test	 eax, eax
  0000b	74 07		 je	 SHORT $LN5@CArray

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )
; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00013	59		 pop	 ecx
$LN5@CArray:

; 363  : 	}
; 364  : }

  00014	c3		 ret	 0
??1?$CArray@HH@@UAE@XZ ENDP				; CArray<int,int>::~CArray<int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?SetAtGrow@?$CArray@HH@@QAEXHH@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CArray@HH@@QAEXHH@Z PROC			; CArray<int,int>::SetAtGrow, COMDAT
; _this$ = ecx

; 534  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 535  : 	ASSERT_VALID(this);
; 536  : 	ASSERT(nIndex >= 0);
; 537  : 
; 538  : 	if(nIndex < 0)

  00004	8b 75 08	 mov	 esi, DWORD PTR _nIndex$[ebp]
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	85 f6		 test	 esi, esi
  0000c	78 1f		 js	 SHORT $LN7@SetAtGrow

; 540  : 
; 541  : 	if (nIndex >= m_nSize)

  0000e	3b 77 08	 cmp	 esi, DWORD PTR [edi+8]
  00011	7c 0b		 jl	 SHORT $LN3@SetAtGrow

; 542  : 		SetSize(nIndex+1, -1);

  00013	6a ff		 push	 -1
  00015	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?SetSize@?$CArray@HH@@QAEXHH@Z ; CArray<int,int>::SetSize
$LN3@SetAtGrow:

; 543  : 	m_pData[nIndex] = newElement;

  0001e	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00021	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  00024	5f		 pop	 edi
  00025	89 04 b1	 mov	 DWORD PTR [ecx+esi*4], eax
  00028	5e		 pop	 esi

; 544  : }

  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
$LN7@SetAtGrow:

; 539  : 		AfxThrowInvalidArgException();

  0002d	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@SetAtGrow:
  00032	cc		 int	 3
?SetAtGrow@?$CArray@HH@@QAEXHH@Z ENDP			; CArray<int,int>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?SetSize@?$CArray@HH@@QAEXHH@Z
_TEXT	SEGMENT
__N$1$ = -8						; size = 4
__S1max$1$ = -4						; size = 4
__S2$1$ = 8						; size = 4
_nNewSize$ = 8						; size = 4
_pNewData$1$ = 12					; size = 4
_nGrowBy$ = 12						; size = 4
?SetSize@?$CArray@HH@@QAEXHH@Z PROC			; CArray<int,int>::SetSize, COMDAT
; _this$ = ecx

; 368  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 369  : 	ASSERT_VALID(this);
; 370  : 	ASSERT(nNewSize >= 0);
; 371  : 
; 372  : 	if(nNewSize < 0 )

  00008	8b 75 08	 mov	 esi, DWORD PTR _nNewSize$[ebp]
  0000b	8b d9		 mov	 ebx, ecx
  0000d	57		 push	 edi
  0000e	85 f6		 test	 esi, esi
  00010	0f 88 9a 01 00
	00		 js	 $LN56@SetSize

; 373  : 		AfxThrowInvalidArgException();
; 374  : 
; 375  : 	if (nGrowBy >= 0)

  00016	8b 45 0c	 mov	 eax, DWORD PTR _nGrowBy$[ebp]
  00019	85 c0		 test	 eax, eax
  0001b	78 03		 js	 SHORT $LN82@SetSize

; 376  : 		m_nGrowBy = nGrowBy;  // set new size

  0001d	89 43 10	 mov	 DWORD PTR [ebx+16], eax
$LN82@SetSize:

; 377  : 
; 378  : 	if (nNewSize == 0)

  00020	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00023	85 f6		 test	 esi, esi
  00025	75 27		 jne	 SHORT $LN19@SetSize

; 379  : 	{
; 380  : 		// shrink to nothing
; 381  : 		if (m_pData != NULL)

  00027	85 c9		 test	 ecx, ecx
  00029	74 0c		 je	 SHORT $LN21@SetSize

; 382  : 		{
; 383  : 			for( int i = 0; i < m_nSize; i++ )
; 384  : 				(m_pData + i)->~TYPE();
; 385  : 			delete[] (BYTE*)m_pData;

  0002b	51		 push	 ecx
  0002c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00031	83 c4 04	 add	 esp, 4

; 386  : 			m_pData = NULL;

  00034	89 73 04	 mov	 DWORD PTR [ebx+4], esi
$LN21@SetSize:

; 475  : }

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	c7 43 0c 00 00
	00 00		 mov	 DWORD PTR [ebx+12], 0
  00040	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 08 00	 ret	 8
$LN19@SetSize:

; 387  : 		}
; 388  : 		m_nSize = m_nMaxSize = 0;
; 389  : 	}
; 390  : 	else if (m_pData == NULL)

  0004e	85 c9		 test	 ecx, ecx
  00050	75 36		 jne	 SHORT $LN22@SetSize

; 391  : 	{
; 392  : 		// create buffer big enough to hold number of requested elements or
; 393  : 		// m_nGrowBy elements, whichever is larger.
; 394  : #ifdef SIZE_T_MAX
; 395  : 		ASSERT(nNewSize <= SIZE_T_MAX/sizeof(TYPE));    // no overflow
; 396  : #endif
; 397  : 		size_t nAllocSize = __max(nNewSize, m_nGrowBy);

  00052	8b 7b 10	 mov	 edi, DWORD PTR [ebx+16]
  00055	3b f7		 cmp	 esi, edi
  00057	0f 4f fe	 cmovg	 edi, esi

; 398  : 		m_pData = (TYPE*) new BYTE[(size_t)nAllocSize * sizeof(TYPE)];

  0005a	8d 34 bd 00 00
	00 00		 lea	 esi, DWORD PTR [edi*4]
  00061	56		 push	 esi
  00062	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]

; 399  : 		memset((void*)m_pData, 0, (size_t)nAllocSize * sizeof(TYPE));

  00067	56		 push	 esi
  00068	6a 00		 push	 0
  0006a	50		 push	 eax
  0006b	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  0006e	e8 00 00 00 00	 call	 _memset

; 400  : 		for( int i = 0; i < nNewSize; i++ )
; 401  : #pragma push_macro("new")
; 402  : #undef new
; 403  : 			::new( (void*)( m_pData + i ) ) TYPE;
; 404  : #pragma pop_macro("new")
; 405  : 		m_nSize = nNewSize;

  00073	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00076	83 c4 10	 add	 esp, 16			; 00000010H

; 475  : }

  00079	89 7b 0c	 mov	 DWORD PTR [ebx+12], edi
  0007c	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
$LN22@SetSize:

; 406  : 		m_nMaxSize = nAllocSize;
; 407  : 	}
; 408  : 	else if (nNewSize <= m_nMaxSize)

  00088	8b 7b 0c	 mov	 edi, DWORD PTR [ebx+12]
  0008b	3b f7		 cmp	 esi, edi
  0008d	7f 29		 jg	 SHORT $LN24@SetSize

; 409  : 	{
; 410  : 		// it fits
; 411  : 		if (nNewSize > m_nSize)

  0008f	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00092	3b f2		 cmp	 esi, edx
  00094	7e 16		 jle	 SHORT $LN26@SetSize

; 412  : 		{
; 413  : 			// initialize the new elements
; 414  : 			memset((void*)(m_pData + m_nSize), 0, (size_t)(nNewSize-m_nSize) * sizeof(TYPE));

  00096	8b c6		 mov	 eax, esi
  00098	2b c2		 sub	 eax, edx
  0009a	c1 e0 02	 shl	 eax, 2
  0009d	50		 push	 eax
  0009e	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000a1	6a 00		 push	 0
  000a3	50		 push	 eax
  000a4	e8 00 00 00 00	 call	 _memset
  000a9	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN26@SetSize:

; 415  : 			for( int i = 0; i < nNewSize-m_nSize; i++ )
; 416  : #pragma push_macro("new")
; 417  : #undef new
; 418  : 				::new( (void*)( m_pData + m_nSize + i ) ) TYPE;
; 419  : #pragma pop_macro("new")
; 420  : 		}
; 421  : 		else if (m_nSize > nNewSize)
; 422  : 		{
; 423  : 			// destroy the old elements
; 424  : 			for( int i = 0; i < m_nSize-nNewSize; i++ )
; 425  : 				(m_pData + nNewSize + i)->~TYPE();
; 426  : 		}
; 427  : 		m_nSize = nNewSize;

  000ac	5f		 pop	 edi
  000ad	89 73 08	 mov	 DWORD PTR [ebx+8], esi

; 475  : }

  000b0	5e		 pop	 esi
  000b1	5b		 pop	 ebx
  000b2	8b e5		 mov	 esp, ebp
  000b4	5d		 pop	 ebp
  000b5	c2 08 00	 ret	 8
$LN24@SetSize:

; 428  : 	}
; 429  : 	else
; 430  : 	{
; 431  : 		// otherwise, grow array
; 432  : 		nGrowBy = m_nGrowBy;

  000b8	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]

; 433  : 		if (nGrowBy == 0)

  000bb	85 c0		 test	 eax, eax
  000bd	75 22		 jne	 SHORT $LN37@SetSize

; 434  : 		{
; 435  : 			// heuristically determine growth when nGrowBy == 0
; 436  : 			//  (this avoids heap fragmentation in many situations)
; 437  : 			nGrowBy = m_nSize / 8;

  000bf	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  000c2	99		 cdq
  000c3	83 e2 07	 and	 edx, 7
  000c6	03 c2		 add	 eax, edx
  000c8	c1 f8 03	 sar	 eax, 3

; 438  : 			nGrowBy = (nGrowBy < 4) ? 4 : ((nGrowBy > 1024) ? 1024 : nGrowBy);

  000cb	83 f8 04	 cmp	 eax, 4
  000ce	7d 07		 jge	 SHORT $LN36@SetSize
  000d0	b8 04 00 00 00	 mov	 eax, 4
  000d5	eb 0a		 jmp	 SHORT $LN37@SetSize
$LN36@SetSize:
  000d7	b9 00 04 00 00	 mov	 ecx, 1024		; 00000400H
  000dc	3b c1		 cmp	 eax, ecx
  000de	0f 4f c1	 cmovg	 eax, ecx
$LN37@SetSize:

; 439  : 		}
; 440  : 		INT_PTR nNewMax;
; 441  : 		if (nNewSize < m_nMaxSize + nGrowBy)

  000e1	03 f8		 add	 edi, eax
  000e3	3b f7		 cmp	 esi, edi
  000e5	7d 0b		 jge	 SHORT $LN30@SetSize

; 445  : 
; 446  : 		ASSERT(nNewMax >= m_nMaxSize);  // no wrap around
; 447  : 
; 448  : 		if(nNewMax  < m_nMaxSize)

  000e7	3b 7b 0c	 cmp	 edi, DWORD PTR [ebx+12]
  000ea	0f 8c c0 00 00
	00		 jl	 $LN56@SetSize
  000f0	eb 02		 jmp	 SHORT $LN32@SetSize
$LN30@SetSize:

; 442  : 			nNewMax = m_nMaxSize + nGrowBy;  // granularity
; 443  : 		else
; 444  : 			nNewMax = nNewSize;  // no slush

  000f2	8b fe		 mov	 edi, esi
$LN32@SetSize:

; 449  : 			AfxThrowInvalidArgException();
; 450  : 
; 451  : #ifdef SIZE_T_MAX
; 452  : 		ASSERT(nNewMax <= SIZE_T_MAX/sizeof(TYPE)); // no overflow
; 453  : #endif
; 454  : 		TYPE* pNewData = (TYPE*) new BYTE[(size_t)nNewMax * sizeof(TYPE)];

  000f4	8d 04 bd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*4]
  000fb	50		 push	 eax
  000fc	89 45 fc	 mov	 DWORD PTR __S1max$1$[ebp], eax
  000ff	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]

; 455  : 
; 456  : 		// copy new data from old
; 457  : 		::ATL::Checked::memcpy_s(pNewData, (size_t)nNewMax * sizeof(TYPE),

  00104	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00107	83 c4 04	 add	 esp, 4
  0010a	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  0010d	c1 e1 02	 shl	 ecx, 2
  00110	89 45 0c	 mov	 DWORD PTR _pNewData$1$[ebp], eax
  00113	89 4d f8	 mov	 DWORD PTR __N$1$[ebp], ecx
  00116	89 55 08	 mov	 DWORD PTR __S2$1$[ebp], edx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h

; 46   :         if (_SourceSize == 0)

  00119	85 c9		 test	 ecx, ecx
  0011b	74 20		 je	 SHORT $LN54@SetSize

; 47   :         {
; 48   :             return 0;
; 49   :         }
; 50   : 
; 51   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  0011d	85 c0		 test	 eax, eax
  0011f	74 7d		 je	 SHORT $LN84@SetSize

; 52   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  00121	85 d2		 test	 edx, edx
  00123	74 51		 je	 SHORT $LN76@SetSize
  00125	8d 14 bd 00 00
	00 00		 lea	 edx, DWORD PTR [edi*4]
  0012c	3b d1		 cmp	 edx, ecx
  0012e	72 46		 jb	 SHORT $LN76@SetSize

; 58   : 
; 59   :             // Unreachable, but required to suppress /analyze warnings:
; 60   :             return EINVAL;
; 61   :         }
; 62   :         memcpy(_Destination, _Source, _SourceSize);

  00130	51		 push	 ecx
  00131	ff 75 08	 push	 DWORD PTR __S2$1$[ebp]
  00134	50		 push	 eax
  00135	e8 00 00 00 00	 call	 _memcpy
  0013a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN54@SetSize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 462  : 		memset((void*)(pNewData + m_nSize), 0, (size_t)(nNewSize-m_nSize) * sizeof(TYPE));

  0013d	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00140	8b c6		 mov	 eax, esi
  00142	2b c1		 sub	 eax, ecx
  00144	c1 e0 02	 shl	 eax, 2
  00147	50		 push	 eax
  00148	8b 45 0c	 mov	 eax, DWORD PTR _pNewData$1$[ebp]
  0014b	6a 00		 push	 0
  0014d	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00150	50		 push	 eax
  00151	e8 00 00 00 00	 call	 _memset

; 463  : 		for( int i = 0; i < nNewSize-m_nSize; i++ )
; 464  : #pragma push_macro("new")
; 465  : #undef new
; 466  : 			::new( (void*)( pNewData + m_nSize + i ) ) TYPE;
; 467  : #pragma pop_macro("new")
; 468  : 
; 469  : 		// get rid of old stuff (note: no destructors called)
; 470  : 		delete[] (BYTE*)m_pData;

  00156	ff 73 04	 push	 DWORD PTR [ebx+4]
  00159	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]

; 471  : 		m_pData = pNewData;

  0015e	8b 45 0c	 mov	 eax, DWORD PTR _pNewData$1$[ebp]
  00161	83 c4 10	 add	 esp, 16			; 00000010H

; 475  : }

  00164	89 7b 0c	 mov	 DWORD PTR [ebx+12], edi
  00167	89 73 08	 mov	 DWORD PTR [ebx+8], esi
  0016a	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  0016d	5f		 pop	 edi
  0016e	5e		 pop	 esi
  0016f	5b		 pop	 ebx
  00170	8b e5		 mov	 esp, ebp
  00172	5d		 pop	 ebp
  00173	c2 08 00	 ret	 8
$LN76@SetSize:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h

; 54   :             memset(_Destination, 0, _DestinationSize);

  00176	8b 5d fc	 mov	 ebx, DWORD PTR __S1max$1$[ebp]
  00179	53		 push	 ebx
  0017a	6a 00		 push	 0
  0017c	50		 push	 eax
  0017d	e8 00 00 00 00	 call	 _memset
  00182	83 c4 0c	 add	 esp, 12			; 0000000cH

; 55   : 
; 56   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);

  00185	83 7d 08 00	 cmp	 DWORD PTR __S2$1$[ebp], 0
  00189	74 13		 je	 SHORT $LN84@SetSize

; 57   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);

  0018b	3b 5d f8	 cmp	 ebx, DWORD PTR __N$1$[ebp]
  0018e	73 20		 jae	 SHORT $LN56@SetSize
  00190	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___errno
  00196	c7 00 22 00 00
	00		 mov	 DWORD PTR [eax], 34	; 00000022H
  0019c	eb 0c		 jmp	 SHORT $LN85@SetSize
$LN84@SetSize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.h

; 517  : 		AfxThrowInvalidArgException();

  0019e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___errno
  001a4	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
$LN85@SetSize:
  001aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter_noinfo
$LN56@SetSize:
  001b0	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN83@SetSize:
  001b5	cc		 int	 3
?SetSize@?$CArray@HH@@QAEXHH@Z ENDP			; CArray<int,int>::SetSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CArray@HH@@QAE@XZ
_TEXT	SEGMENT
??0?$CArray@HH@@QAE@XZ PROC				; CArray<int,int>::CArray<int,int>, COMDAT
; _this$ = ecx

; 348  : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CArray@HH@@6B@

; 349  : 	m_pData = NULL;
; 350  : 	m_nSize = m_nMaxSize = m_nGrowBy = 0;
; 351  : }

  00006	8b c1		 mov	 eax, ecx
  00008	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0000f	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00016	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  0001d	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00024	c3		 ret	 0
??0?$CArray@HH@@QAE@XZ ENDP				; CArray<int,int>::CArray<int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
;	COMDAT ?AddBmpHot@CPopUpMenu@@QAEXH@Z
_TEXT	SEGMENT
_nRes$ = 8						; size = 4
?AddBmpHot@CPopUpMenu@@QAEXH@Z PROC			; CPopUpMenu::AddBmpHot, COMDAT
; _this$ = ecx

; 99   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 100  : 	m_HotBmp.Add(nRes);

  00004	8d 71 20	 lea	 esi, DWORD PTR [ecx+32]
  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  00008	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]

; 538  : 	if(nIndex < 0)

  0000b	85 ff		 test	 edi, edi
  0000d	78 1c		 js	 SHORT $LN13@AddBmpHot

; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  0000f	6a ff		 push	 -1
  00011	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  00014	8b ce		 mov	 ecx, esi
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?SetSize@?$CArray@HH@@QAEXHH@Z ; CArray<int,int>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  0001c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001f	8b 45 08	 mov	 eax, DWORD PTR _nRes$[ebp]
  00022	89 04 b9	 mov	 DWORD PTR [ecx+edi*4], eax
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 101  : }

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
$LN13@AddBmpHot:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 539  : 		AfxThrowInvalidArgException();

  0002b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN11@AddBmpHot:
  00030	cc		 int	 3
?AddBmpHot@CPopUpMenu@@QAEXH@Z ENDP			; CPopUpMenu::AddBmpHot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
;	COMDAT ?AddBmpCool@CPopUpMenu@@QAEXH@Z
_TEXT	SEGMENT
_nRes$ = 8						; size = 4
?AddBmpCool@CPopUpMenu@@QAEXH@Z PROC			; CPopUpMenu::AddBmpCool, COMDAT
; _this$ = ecx

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 96   : 	m_CoolBmp.Add(nRes);

  00004	8d 71 0c	 lea	 esi, DWORD PTR [ecx+12]
  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  00008	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]

; 538  : 	if(nIndex < 0)

  0000b	85 ff		 test	 edi, edi
  0000d	78 1c		 js	 SHORT $LN13@AddBmpCool

; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  0000f	6a ff		 push	 -1
  00011	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  00014	8b ce		 mov	 ecx, esi
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?SetSize@?$CArray@HH@@QAEXHH@Z ; CArray<int,int>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  0001c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001f	8b 45 08	 mov	 eax, DWORD PTR _nRes$[ebp]
  00022	89 04 b9	 mov	 DWORD PTR [ecx+edi*4], eax
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 97   : }

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
$LN13@AddBmpCool:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 539  : 		AfxThrowInvalidArgException();

  0002b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN11@AddBmpCool:
  00030	cc		 int	 3
?AddBmpCool@CPopUpMenu@@QAEXH@Z ENDP			; CPopUpMenu::AddBmpCool
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
;	COMDAT ??0CPopUpMenu@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CPopUpMenu@@QAE@XZ PROC				; CPopUpMenu::CPopUpMenu, COMDAT
; _this$ = ecx

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CPopUpMenu@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 903  : 	{ m_hMenu = NULL; }

  00029	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 18   : {

  00030	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CPopUpMenu@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 348  : {

  00036	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CArray@HH@@6B@

; 349  : 	m_pData = NULL;

  0003d	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 350  : 	m_nSize = m_nMaxSize = m_nGrowBy = 0;

  00044	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
  0004b	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  00052	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 348  : {

  00059	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], OFFSET ??_7?$CArray@HH@@6B@

; 349  : 	m_pData = NULL;

  00060	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0

; 350  : 	m_nSize = m_nMaxSize = m_nGrowBy = 0;

  00067	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], 0
  0006e	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0
  00075	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 19   : 	m_bBitMap = FALSE;

  0007c	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 381  : 		if (m_pData != NULL)

  00083	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00086	85 c0		 test	 eax, eax
  00088	74 17		 je	 SHORT $LN34@CPopUpMenu

; 382  : 		{
; 383  : 			for( int i = 0; i < m_nSize; i++ )

  0008a	83 7e 14 00	 cmp	 DWORD PTR [esi+20], 0
  0008e	0f 4f c0	 cmovg	 eax, eax

; 384  : 				(m_pData + i)->~TYPE();
; 385  : 			delete[] (BYTE*)m_pData;

  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00097	83 c4 04	 add	 esp, 4

; 386  : 			m_pData = NULL;

  0009a	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
$LN34@CPopUpMenu:

; 388  : 		m_nSize = m_nMaxSize = 0;

  000a1	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  000a8	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 381  : 		if (m_pData != NULL)

  000af	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  000b2	85 c0		 test	 eax, eax
  000b4	74 17		 je	 SHORT $LN97@CPopUpMenu

; 382  : 		{
; 383  : 			for( int i = 0; i < m_nSize; i++ )

  000b6	83 7e 28 00	 cmp	 DWORD PTR [esi+40], 0
  000ba	0f 4f c0	 cmovg	 eax, eax

; 384  : 				(m_pData + i)->~TYPE();
; 385  : 			delete[] (BYTE*)m_pData;

  000bd	50		 push	 eax
  000be	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000c3	83 c4 04	 add	 esp, 4

; 386  : 			m_pData = NULL;

  000c6	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
$LN97@CPopUpMenu:

; 388  : 		m_nSize = m_nMaxSize = 0;

  000cd	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 22   : }

  000d4	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 388  : 		m_nSize = m_nMaxSize = 0;

  000d6	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp

; 22   : }

  000dd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e7	59		 pop	 ecx
  000e8	5e		 pop	 esi
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CPopUpMenu@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CMenu@@UAE@XZ	; CMenu::~CMenu
__unwindfunclet$??0CPopUpMenu@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0000e	e9 00 00 00 00	 jmp	 ??1?$CArray@HH@@UAE@XZ	; CArray<int,int>::~CArray<int,int>
__unwindfunclet$??0CPopUpMenu@@QAE@XZ$2:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 20	 add	 ecx, 32			; 00000020H
  00019	e9 00 00 00 00	 jmp	 ??1?$CArray@HH@@UAE@XZ	; CArray<int,int>::~CArray<int,int>
  0001e	cc		 int	 3
  0001f	cc		 int	 3
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
__ehhandler$??0CPopUpMenu@@QAE@XZ:
  00023	90		 npad	 1
  00024	90		 npad	 1
  00025	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00029	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002c	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0002f	33 c8		 xor	 ecx, eax
  00031	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00036	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CPopUpMenu@@QAE@XZ
  0003b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CPopUpMenu@@QAE@XZ ENDP				; CPopUpMenu::CPopUpMenu
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCMenu@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GCMenu@@UAEPAXI@Z PROC				; CMenu::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GCMenu@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 905  : 	{ DestroyMenu(); }

  00025	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMenu@@6B@
  00032	e8 00 00 00 00	 call	 ?DestroyMenu@CMenu@@QAEHXZ ; CMenu::DestroyMenu
  00037	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0003a	a8 01		 test	 al, 1
  0003c	74 2c		 je	 SHORT $LN12@scalar
  0003e	a8 04		 test	 al, 4
  00040	75 1d		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  00042	56		 push	 esi
  00043	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00048	83 c4 04	 add	 esp, 4
  0004b	8b c6		 mov	 eax, esi
  0004d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00050	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00057	59		 pop	 ecx
  00058	5e		 pop	 esi
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
$LN3@scalar:
  0005f	6a 08		 push	 8
  00061	56		 push	 esi
  00062	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00067	83 c4 08	 add	 esp, 8
$LN12@scalar:
  0006a	8b c6		 mov	 eax, esi
  0006c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00076	59		 pop	 ecx
  00077	5e		 pop	 esi
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
  0007e	cc		 int	 3
  0007f	cc		 int	 3
  00080	cc		 int	 3
  00081	cc		 int	 3
  00082	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_GCMenu@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GCMenu@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GCMenu@@UAEPAXI@Z ENDP				; CMenu::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ??1CMenu@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CMenu@@UAE@XZ PROC					; CMenu::~CMenu, COMDAT
; _this$ = ecx

; 905  : 	{ DestroyMenu(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CMenu@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00022	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CMenu@@6B@
  00028	e8 00 00 00 00	 call	 ?DestroyMenu@CMenu@@QAEHXZ ; CMenu::DestroyMenu
  0002d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00030	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00037	59		 pop	 ecx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
  0003c	cc		 int	 3
  0003d	cc		 int	 3
  0003e	cc		 int	 3
  0003f	cc		 int	 3
  00040	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CMenu@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CMenu@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CMenu@@UAE@XZ ENDP					; CMenu::~CMenu
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBitmap@@UAEPAXI@Z PROC				; CBitmap::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 179  : 	{ }

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBitmap@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  00011	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00014	a8 01		 test	 al, 1
  00016	74 1f		 je	 SHORT $LN12@scalar
  00018	a8 04		 test	 al, 4
  0001a	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
$LN3@scalar:
  0002c	6a 08		 push	 8
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00034	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00037	8b c6		 mov	 eax, esi
  00039	5e		 pop	 esi
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
??_GCBitmap@@UAEPAXI@Z ENDP				; CBitmap::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT
??1CBitmap@@UAE@XZ PROC					; CBitmap::~CBitmap, COMDAT
; _this$ = ecx

; 179  : 	{ }

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBitmap@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
??1CBitmap@@UAE@XZ ENDP					; CBitmap::~CBitmap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCBrush@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBrush@@UAEPAXI@Z PROC				; CBrush::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 130  : 	{ }

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBrush@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  00011	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00014	a8 01		 test	 al, 1
  00016	74 1f		 je	 SHORT $LN12@scalar
  00018	a8 04		 test	 al, 4
  0001a	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
$LN3@scalar:
  0002c	6a 08		 push	 8
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00034	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00037	8b c6		 mov	 eax, esi
  00039	5e		 pop	 esi
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
??_GCBrush@@UAEPAXI@Z ENDP				; CBrush::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ??1CBrush@@UAE@XZ
_TEXT	SEGMENT
??1CBrush@@UAE@XZ PROC					; CBrush::~CBrush, COMDAT
; _this$ = ecx

; 130  : 	{ }

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBrush@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
??1CBrush@@UAE@XZ ENDP					; CBrush::~CBrush
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGdiObject@@UAEPAXI@Z PROC				; CGdiObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  0000b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0000e	a8 01		 test	 al, 1
  00010	74 1f		 je	 SHORT $LN9@scalar
  00012	a8 04		 test	 al, 4
  00014	75 10		 jne	 SHORT $LN3@scalar

; 112  : 	{ ::operator delete(p); }

  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001c	83 c4 04	 add	 esp, 4
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
$LN3@scalar:
  00026	6a 08		 push	 8
  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002e	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00031	8b c6		 mov	 eax, esi
  00033	5e		 pop	 esi
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
??_GCGdiObject@@UAEPAXI@Z ENDP				; CGdiObject::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT
_pException$2 = -540					; size = 4
_strMsg$3 = -536					; size = 4
_szErrorMessage$4 = -532				; size = 512
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
??1CGdiObject@@UAE@XZ PROC				; CGdiObject::~CGdiObject, COMDAT
; _this$ = ecx

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGdiObject@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 10 02 00
	00		 sub	 esp, 528		; 00000210H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00031	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CGdiObject@@6B@

; 75   : 	AFX_BEGIN_DESTRUCTOR

  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 76   : 	DeleteObject();

  0003e	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject
$LN18@CGdiObject:

; 78   : }

  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00054	33 cd		 xor	 ecx, ebp
  00056	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
__catch$??1CGdiObject@@UAE@XZ$0:

; 77   : 	AFX_END_DESTRUCTOR

  0005f	8d 8d e8 fd ff
	ff		 lea	 ecx, DWORD PTR _strMsg$3[ebp]
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0006b	8b b5 e4 fd ff
	ff		 mov	 esi, DWORD PTR _pException$2[ebp]
  00071	8d 8d ec fd ff
	ff		 lea	 ecx, DWORD PTR _szErrorMessage$4[ebp]
  00077	6a 00		 push	 0
  00079	68 00 02 00 00	 push	 512			; 00000200H
  0007e	51		 push	 ecx
  0007f	8b 06		 mov	 eax, DWORD PTR [esi]
  00081	8b ce		 mov	 ecx, esi
  00083	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00087	ff 50 14	 call	 DWORD PTR [eax+20]
  0008a	85 c0		 test	 eax, eax
  0008c	74 2a		 je	 SHORT $LN9@CGdiObject
  0008e	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _szErrorMessage$4[ebp]
  00094	50		 push	 eax
  00095	6a 4d		 push	 77			; 0000004dH
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@
  000a1	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _strMsg$3[ebp]
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HBOOMJBF@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ?6?$CFTs@
  000ac	50		 push	 eax
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  000b3	83 c4 18	 add	 esp, 24			; 00000018H
  000b6	eb 21		 jmp	 SHORT $LN10@CGdiObject
$LN9@CGdiObject:
  000b8	6a 4d		 push	 77			; 0000004dH
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@
  000c4	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _strMsg$3[ebp]
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OMEMOKLE@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ@
  000cf	50		 push	 eax
  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  000d6	83 c4 14	 add	 esp, 20			; 00000014H
$LN10@CGdiObject:
  000d9	6a 00		 push	 0
  000db	6a 00		 push	 0
  000dd	ff b5 e8 fd ff
	ff		 push	 DWORD PTR _strMsg$3[ebp]
  000e3	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox
  000e8	8d 8d e8 fd ff
	ff		 lea	 ecx, DWORD PTR _strMsg$3[ebp]
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000f4	8b 06		 mov	 eax, DWORD PTR [esi]
  000f6	8b ce		 mov	 ecx, esi
  000f8	6a 01		 push	 1
  000fa	ff 50 04	 call	 DWORD PTR [eax+4]
  000fd	b8 00 00 00 00	 mov	 eax, $LN18@CGdiObject
  00102	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CGdiObject@@UAE@XZ$2:
  00000	8d 8d e8 fd ff
	ff		 lea	 ecx, DWORD PTR _strMsg$3[ebp]
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$??1CGdiObject@@UAE@XZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 8a e0 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-544]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGdiObject@@UAE@XZ
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGdiObject@@UAE@XZ ENDP				; CGdiObject::~CGdiObject
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC		; CObject::Dump, COMDAT
; _this$ = ecx

; 122  : 	{ /* no dumping in release builds */ }

  00000	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
?AssertValid@CObject@@UBEXXZ PROC			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 120  : 	{ /* no asserts in release builds */ }

  00000	c2 00 00	 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC		; CObject::Serialize, COMDAT
; _this$ = ecx

; 106  : 	{ /* CObject does not serialize anything by default */ }

  00000	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT
??1CObject@@UAE@XZ PROC					; CObject::~CObject, COMDAT
; _this$ = ecx

; 104  : 	{ }

  00000	c2 00 00	 ret	 0
??1CObject@@UAE@XZ ENDP					; CObject::~CObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\comparechart\control\PopupMenu.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
