; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\ExControl\ExResizeRect.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0CExResizeRect@@QAE@XZ			; CExResizeRect::CExResizeRect
PUBLIC	??0CExResizeRect@@QAE@MMMM@Z			; CExResizeRect::CExResizeRect
PUBLIC	??4CExResizeRect@@QAEAAV0@ABUtagRECT@@@Z	; CExResizeRect::operator=
PUBLIC	??4CExResizeRect@@QAEAAV0@ABUEX_RESIZERECT@@@Z	; CExResizeRect::operator=
PUBLIC	??YCExResizeRect@@QAEAAV0@ABUEX_RESIZERECT@@@Z	; CExResizeRect::operator+=
PUBLIC	??ICExResizeRect@@QAE?AV0@ABUEX_RESIZERECT@@@Z	; CExResizeRect::operator&
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResizeRect.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\ExResizeRect.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResizeRect.cpp
;	COMDAT ??ICExResizeRect@@QAE?AV0@ABUEX_RESIZERECT@@@Z
_TEXT	SEGMENT
$T1 = -20						; size = 16
$T2 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_rrc$ = 12						; size = 4
??ICExResizeRect@@QAE?AV0@ABUEX_RESIZERECT@@@Z PROC	; CExResizeRect::operator&, COMDAT
; _this$ = ecx

; 62   : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _rrc$[ebp]

; 63   : 	ASSERT(IsNormalized() && ((CExResizeRect&) rrc).IsNormalized());
; 64   : 
; 65   : 	CExResizeRect rrcI(

  00013	f3 0f 10 59 08	 movss	 xmm3, DWORD PTR [ecx+8]
  00018	f3 0f 10 11	 movss	 xmm2, DWORD PTR [ecx]
  0001c	f3 0f 10 49 0c	 movss	 xmm1, DWORD PTR [ecx+12]
  00021	f3 0f 5d 58 08	 minss	 xmm3, DWORD PTR [eax+8]
  00026	f3 0f 5f 10	 maxss	 xmm2, DWORD PTR [eax]
  0002a	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  0002f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00032	f3 0f 5d 48 0c	 minss	 xmm1, DWORD PTR [eax+12]
  00037	f3 0f 5f 40 04	 maxss	 xmm0, DWORD PTR [eax+4]

; 28   : 	bottom = b;

  0003c	0f 2f da	 comiss	 xmm3, xmm2
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\ExResizeRect.h

; 57   : 	return ((left <= right) && (top <= bottom));

  0003f	72 1b		 jb	 SHORT $LN11@operator
  00041	0f 2f c8	 comiss	 xmm1, xmm0
  00044	72 16		 jb	 SHORT $LN11@operator
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResizeRect.cpp

; 72   : 	return (rrcI.IsNormalized()) ? rrcI : CExResizeRect(0,0,0,0);

  00046	f3 0f 11 55 ec	 movss	 DWORD PTR $T2[ebp], xmm2
  0004b	f3 0f 11 45 f0	 movss	 DWORD PTR $T2[ebp+4], xmm0
  00050	f3 0f 11 5d f4	 movss	 DWORD PTR $T2[ebp+8], xmm3
  00055	f3 0f 11 4d f8	 movss	 DWORD PTR $T2[ebp+12], xmm1
  0005a	eb 07		 jmp	 SHORT $LN44@operator
$LN11@operator:
  0005c	0f 57 c0	 xorps	 xmm0, xmm0

; 25   : 	left   = l;

  0005f	0f 11 45 ec	 movups	 XMMWORD PTR $T1[ebp], xmm0
$LN44@operator:

; 73   : }

  00063	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00066	8d 45 ec	 lea	 eax, DWORD PTR $T1[ebp]
  00069	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  0006c	33 cd		 xor	 ecx, ebp
  0006e	8b c2		 mov	 eax, edx
  00070	0f 11 02	 movups	 XMMWORD PTR [edx], xmm0
  00073	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 08 00	 ret	 8
??ICExResizeRect@@QAE?AV0@ABUEX_RESIZERECT@@@Z ENDP	; CExResizeRect::operator&
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResizeRect.cpp
;	COMDAT ??YCExResizeRect@@QAEAAV0@ABUEX_RESIZERECT@@@Z
_TEXT	SEGMENT
_rrc$ = 8						; size = 4
??YCExResizeRect@@QAEAAV0@ABUEX_RESIZERECT@@@Z PROC	; CExResizeRect::operator+=, COMDAT
; _this$ = ecx

; 52   : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 53   : 	left   += rrc.left; 

  00003	8b 45 08	 mov	 eax, DWORD PTR _rrc$[ebp]
  00006	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0000a	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  0000e	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 54   : 	top    += rrc.top; 

  00012	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00017	f3 0f 58 41 04	 addss	 xmm0, DWORD PTR [ecx+4]
  0001c	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 55   : 	right  += rrc.right; 

  00021	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00026	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]
  0002b	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 56   : 	bottom += rrc.bottom; 

  00030	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]

; 57   : 
; 58   : 	return *this;

  00035	8b c1		 mov	 eax, ecx
  00037	f3 0f 58 41 0c	 addss	 xmm0, DWORD PTR [ecx+12]
  0003c	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0

; 59   : }

  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??YCExResizeRect@@QAEAAV0@ABUEX_RESIZERECT@@@Z ENDP	; CExResizeRect::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResizeRect.cpp
;	COMDAT ??4CExResizeRect@@QAEAAV0@ABUEX_RESIZERECT@@@Z
_TEXT	SEGMENT
_rrc$ = 8						; size = 4
??4CExResizeRect@@QAEAAV0@ABUEX_RESIZERECT@@@Z PROC	; CExResizeRect::operator=, COMDAT
; _this$ = ecx

; 42   : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 43   : 	left   = rrc.left; 

  00003	8b 55 08	 mov	 edx, DWORD PTR _rrc$[ebp]
  00006	8b 02		 mov	 eax, DWORD PTR [edx]
  00008	89 01		 mov	 DWORD PTR [ecx], eax

; 44   : 	top    = rrc.top; 

  0000a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0000d	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 45   : 	right  = rrc.right; 

  00010	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00013	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 46   : 	bottom = rrc.bottom; 

  00016	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00019	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 47   : 
; 48   : 	return *this;

  0001c	8b c1		 mov	 eax, ecx

; 49   : }

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??4CExResizeRect@@QAEAAV0@ABUEX_RESIZERECT@@@Z ENDP	; CExResizeRect::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResizeRect.cpp
;	COMDAT ??4CExResizeRect@@QAEAAV0@ABUtagRECT@@@Z
_TEXT	SEGMENT
_rc$ = 8						; size = 4
??4CExResizeRect@@QAEAAV0@ABUtagRECT@@@Z PROC		; CExResizeRect::operator=, COMDAT
; _this$ = ecx

; 32   : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 33   : 	left   = (EX_RESIZE) rc.left; 

  00003	8b 45 08	 mov	 eax, DWORD PTR _rc$[ebp]
  00006	66 0f 6e 00	 movd	 xmm0, DWORD PTR [eax]
  0000a	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0000d	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0
  00011	66 0f 6e 40 04	 movd	 xmm0, DWORD PTR [eax+4]

; 34   : 	top    = (EX_RESIZE) rc.top; 

  00016	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00019	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0
  0001e	66 0f 6e 40 08	 movd	 xmm0, DWORD PTR [eax+8]

; 35   : 	right  = (EX_RESIZE) rc.right; 

  00023	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00026	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0
  0002b	66 0f 6e 40 0c	 movd	 xmm0, DWORD PTR [eax+12]

; 36   : 	bottom = (EX_RESIZE) rc.bottom; 
; 37   : 
; 38   : 	return *this;

  00030	8b c1		 mov	 eax, ecx
  00032	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00035	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0

; 39   : }

  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
??4CExResizeRect@@QAEAAV0@ABUtagRECT@@@Z ENDP		; CExResizeRect::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResizeRect.cpp
;	COMDAT ??0CExResizeRect@@QAE@MMMM@Z
_TEXT	SEGMENT
_l$ = 8							; size = 4
_t$ = 12						; size = 4
_r$ = 16						; size = 4
_b$ = 20						; size = 4
??0CExResizeRect@@QAE@MMMM@Z PROC			; CExResizeRect::CExResizeRect, COMDAT
; _this$ = ecx

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 25   : 	left   = l;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _l$[ebp]

; 26   : 	top    = t;
; 27   : 	right  = r;
; 28   : 	bottom = b;
; 29   : }

  00008	8b c1		 mov	 eax, ecx
  0000a	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0
  0000e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _t$[ebp]
  00013	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0
  00018	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _r$[ebp]
  0001d	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0
  00022	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _b$[ebp]
  00027	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0
  0002c	5d		 pop	 ebp
  0002d	c2 10 00	 ret	 16			; 00000010H
??0CExResizeRect@@QAE@MMMM@Z ENDP			; CExResizeRect::CExResizeRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResizeRect.cpp
;	COMDAT ??0CExResizeRect@@QAE@XZ
_TEXT	SEGMENT
??0CExResizeRect@@QAE@XZ PROC				; CExResizeRect::CExResizeRect, COMDAT
; _this$ = ecx

; 20   : 
; 21   : }

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0CExResizeRect@@QAE@XZ ENDP				; CExResizeRect::CExResizeRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResizeRect.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResizeRect.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
