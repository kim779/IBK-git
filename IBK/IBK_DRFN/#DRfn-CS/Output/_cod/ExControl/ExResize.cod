; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\ExControl\ExResize.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?AfxCrtErrorCheck@@YAHH@Z			; AfxCrtErrorCheck
PUBLIC	??1CObject@@UAE@XZ				; CObject::~CObject
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	??1CGdiObject@@UAE@XZ				; CGdiObject::~CGdiObject
PUBLIC	??_GCGdiObject@@UAEPAXI@Z			; CGdiObject::`scalar deleting destructor'
PUBLIC	??1CBitmap@@UAE@XZ				; CBitmap::~CBitmap
PUBLIC	??_GCBitmap@@UAEPAXI@Z				; CBitmap::`scalar deleting destructor'
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
PUBLIC	??_GCStatic@@UAEPAXI@Z				; CStatic::`scalar deleting destructor'
PUBLIC	??0CExSizeIcon@@QAE@XZ				; CExSizeIcon::CExSizeIcon
PUBLIC	?OnSetCursor@CExSizeIcon@@IAEHPAVCWnd@@II@Z	; CExSizeIcon::OnSetCursor
PUBLIC	?OnCreate@CExSizeIcon@@IAEHPAUtagCREATESTRUCTA@@@Z ; CExSizeIcon::OnCreate
PUBLIC	?OnMouseMove@CExSizeIcon@@IAEXIVCPoint@@@Z	; CExSizeIcon::OnMouseMove
PUBLIC	?OnLButtonDown@CExSizeIcon@@IAEXIVCPoint@@@Z	; CExSizeIcon::OnLButtonDown
PUBLIC	?GetThisMessageMap@CExSizeIcon@@KGPBUAFX_MSGMAP@@XZ ; CExSizeIcon::GetThisMessageMap
PUBLIC	?GetMessageMap@CExSizeIcon@@MBEPBUAFX_MSGMAP@@XZ ; CExSizeIcon::GetMessageMap
PUBLIC	??_GCExSizeIcon@@UAEPAXI@Z			; CExSizeIcon::`scalar deleting destructor'
PUBLIC	??0CExItem@@QAE@PAVCWnd@@ABVCExResizeRect@@AAVCRect@@H@Z ; CExItem::CExItem
PUBLIC	??1CExItem@@UAE@XZ				; CExItem::~CExItem
PUBLIC	??_GCExItem@@UAEPAXI@Z				; CExItem::`scalar deleting destructor'
PUBLIC	??0CExResize@@QAE@PAVCWnd@@I@Z			; CExResize::CExResize
PUBLIC	??1CExResize@@UAE@XZ				; CExResize::~CExResize
PUBLIC	?SetResize@CExResize@@QAEXIQAUHWND__@@ABUEX_RESIZERECT@@@Z ; CExResize::SetResize
PUBLIC	?SetResize@CExResize@@QAEXQAUEX_SIZING@@@Z	; CExResize::SetResize
PUBLIC	?SavePlacement@CExResize@@QAEXPBD@Z		; CExResize::SavePlacement
PUBLIC	?LoadPlacement@CExResize@@QAEXPBD@Z		; CExResize::LoadPlacement
PUBLIC	?AutoLoadPlacement@CExResize@@QAEXPBD@Z		; CExResize::AutoLoadPlacement
PUBLIC	?SetResize@CExResize@@IAEXPAVCWnd@@ABVCExResizeRect@@VCRect@@@Z ; CExResize::SetResize
PUBLIC	?RemoveResize@CExResize@@IAEHI@Z		; CExResize::RemoveResize
PUBLIC	?RemoveAllControls@CExResize@@IAEXXZ		; CExResize::RemoveAllControls
PUBLIC	?Init@CExResize@@IAEXXZ				; CExResize::Init
PUBLIC	?Size@CExResize@@IAEXXZ				; CExResize::Size
PUBLIC	?Reset@CExResize@@IAEXXZ			; CExResize::Reset
PUBLIC	?GetMinMaxInfo@CExResize@@IAEXPAUtagMINMAXINFO@@@Z ; CExResize::GetMinMaxInfo
PUBLIC	?SetFlag@CExResize@@IAEXW4EFlags@1@@Z		; CExResize::SetFlag
PUBLIC	?Defer@CExResize@@IAEHAAPAXPAVCExItem@@HH@Z	; CExResize::Defer
PUBLIC	??0?$CArray@PAVCExItem@@AAPAV1@@@QAE@XZ		; CArray<CExItem *,CExItem * &>::CArray<CExItem *,CExItem * &>
PUBLIC	?SetSize@?$CArray@PAVCExItem@@AAPAV1@@@QAEXHH@Z	; CArray<CExItem *,CExItem * &>::SetSize
PUBLIC	?SetAtGrow@?$CArray@PAVCExItem@@AAPAV1@@@QAEXHAAPAVCExItem@@@Z ; CArray<CExItem *,CExItem * &>::SetAtGrow
PUBLIC	?RemoveAt@?$CArray@PAVCExItem@@AAPAV1@@@QAEXHH@Z ; CArray<CExItem *,CExItem * &>::RemoveAt
PUBLIC	??1?$CArray@PAVCExItem@@AAPAV1@@@UAE@XZ		; CArray<CExItem *,CExItem * &>::~CArray<CExItem *,CExItem * &>
PUBLIC	?Serialize@?$CArray@PAVCExItem@@AAPAV1@@@UAEXAAVCArchive@@@Z ; CArray<CExItem *,CExItem * &>::Serialize
PUBLIC	??_G?$CArray@PAVCExItem@@AAPAV1@@@UAEPAXI@Z	; CArray<CExItem *,CExItem * &>::`scalar deleting destructor'
PUBLIC	??_GCExResize@@UAEPAXI@Z			; CExResize::`scalar deleting destructor'
PUBLIC	??$SerializeElements@PAVCExItem@@@@YGXAAVCArchive@@PAPAVCExItem@@H@Z ; SerializeElements<CExItem *>
PUBLIC	??_R0PAVCException@@@8				; CException * `RTTI Type Descriptor'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_7CGdiObject@@6B@				; CGdiObject::`vftable'
PUBLIC	??_7CBitmap@@6B@				; CBitmap::`vftable'
PUBLIC	??_7CStatic@@6B@				; CStatic::`vftable'
PUBLIC	??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@ ; `string'
PUBLIC	??_C@_0BB@HBOOMJBF@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ?6?$CFTs@ ; `string'
PUBLIC	??_C@_0N@OMEMOKLE@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ@ ; `string'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CGdiObject@@6B@				; CGdiObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGdiObject@@@8				; CGdiObject `RTTI Type Descriptor'
PUBLIC	??_R3CGdiObject@@8				; CGdiObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGdiObject@@8				; CGdiObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGdiObject@@8			; CGdiObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CBitmap@@6B@				; CBitmap::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBitmap@@@8				; CBitmap `RTTI Type Descriptor'
PUBLIC	??_R3CBitmap@@8					; CBitmap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBitmap@@8					; CBitmap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBitmap@@8			; CBitmap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CStatic@@6B@				; CStatic::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCStatic@@@8				; CStatic `RTTI Type Descriptor'
PUBLIC	??_R3CStatic@@8					; CStatic::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CStatic@@8					; CStatic::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CStatic@@8			; CStatic::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R3CWnd@@8					; CWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWnd@@8					; CWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R3CCmdTarget@@8				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCmdTarget@@8				; CCmdTarget::`RTTI Base Class Array'
PUBLIC	??_7CExSizeIcon@@6B@				; CExSizeIcon::`vftable'
PUBLIC	??_7CExItem@@6B@				; CExItem::`vftable'
PUBLIC	??_7?$CArray@PAVCExItem@@AAPAV1@@@6B@		; CArray<CExItem *,CExItem * &>::`vftable'
PUBLIC	??_7CExResize@@6B@				; CExResize::`vftable'
PUBLIC	??_C@_06LKBCGDFD@Button@			; `string'
PUBLIC	??_C@_0BA@IPFOHKAG@WindowPlacement@		; `string'
PUBLIC	??_R4CExSizeIcon@@6B@				; CExSizeIcon::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCExSizeIcon@@@8				; CExSizeIcon `RTTI Type Descriptor'
PUBLIC	??_R3CExSizeIcon@@8				; CExSizeIcon::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CExSizeIcon@@8				; CExSizeIcon::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CExSizeIcon@@8			; CExSizeIcon::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CExItem@@6B@				; CExItem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCExItem@@@8				; CExItem `RTTI Type Descriptor'
PUBLIC	??_R3CExItem@@8					; CExItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CExItem@@8					; CExItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CExItem@@8			; CExItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CExResize@@6B@				; CExResize::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCExResize@@@8				; CExResize `RTTI Type Descriptor'
PUBLIC	??_R3CExResize@@8				; CExResize::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CExResize@@8				; CExResize::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CExResize@@8			; CExResize::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CArray@PAVCExItem@@AAPAV1@@@6B@		; CArray<CExItem *,CExItem * &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CArray@PAVCExItem@@AAPAV1@@@@8	; CArray<CExItem *,CExItem * &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CArray@PAVCExItem@@AAPAV1@@@8		; CArray<CExItem *,CExItem * &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CArray@PAVCExItem@@AAPAV1@@@8		; CArray<CExItem *,CExItem * &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CArray@PAVCExItem@@AAPAV1@@@8	; CArray<CExItem *,CExItem * &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__xmm@00000010000000100000000000000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	___std_terminate:PROC
EXTRN	__imp___invalid_parameter_noinfo:PROC
EXTRN	__imp___errno:PROC
EXTRN	__imp__SendMessageA@16:PROC
EXTRN	__imp__IsWindow@4:PROC
EXTRN	__imp__BeginDeferWindowPos@4:PROC
EXTRN	__imp__DeferWindowPos@32:PROC
EXTRN	__imp__EndDeferWindowPos@4:PROC
EXTRN	__imp__EnableWindow@8:PROC
EXTRN	__imp__InvalidateRect@12:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__GetWindowRect@8:PROC
EXTRN	__imp__SetCursor@4:PROC
EXTRN	__imp__GetCursor@0:PROC
EXTRN	__imp__ClientToScreen@8:PROC
EXTRN	__imp__GetWindowLongA@8:PROC
EXTRN	__imp__GetParent@4:PROC
EXTRN	__imp__GetClassNameA@12:PROC
EXTRN	__imp__LoadBitmapW@8:PROC
EXTRN	__imp__LoadCursorA@8:PROC
EXTRN	__imp___mbsicmp:PROC
EXTRN	?AfxThrowMemoryException@@YGXXZ:PROC		; AfxThrowMemoryException
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?AfxThrowArchiveException@@YGXHPBD@Z:PROC	; AfxThrowArchiveException
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CObject::GetRuntimeClass
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z:PROC
EXTRN	__imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ:PROC
EXTRN	?Read@CArchive@@QAEIPAXI@Z:PROC			; CArchive::Read
EXTRN	?Write@CArchive@@QAEXPBXI@Z:PROC		; CArchive::Write
EXTRN	?ReadCount@CArchive@@QAEKXZ:PROC		; CArchive::ReadCount
EXTRN	?WriteCount@CArchive@@QAEXK@Z:PROC		; CArchive::WriteCount
EXTRN	?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ:PROC ; AfxGetModuleState
EXTRN	?GetRuntimeClass@CGdiObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CGdiObject::GetRuntimeClass
EXTRN	?Attach@CGdiObject@@QAEHPAX@Z:PROC		; CGdiObject::Attach
EXTRN	?DeleteObject@CGdiObject@@QAEHXZ:PROC		; CGdiObject::DeleteObject
EXTRN	??_ECGdiObject@@UAEPAXI@Z:PROC			; CGdiObject::`vector deleting destructor'
EXTRN	?GetRuntimeClass@CBitmap@@UBEPAUCRuntimeClass@@XZ:PROC ; CBitmap::GetRuntimeClass
EXTRN	??_ECBitmap@@UAEPAXI@Z:PROC			; CBitmap::`vector deleting destructor'
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:PROC ; CCmdTarget::OnCmdMsg
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:PROC	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:PROC ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:PROC	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:PROC ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:PROC ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:PROC ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:PROC ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:PROC ; CCmdTarget::GetConnectionMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:PROC ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:PROC	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:PROC ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:PROC ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:PROC ; CCmdTarget::GetConnectionHook
EXTRN	?ModifyStyle@CWnd@@QAEHKKI@Z:PROC		; CWnd::ModifyStyle
EXTRN	??0CWnd@@QAE@XZ:PROC				; CWnd::CWnd
EXTRN	?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z:PROC	; CWnd::FromHandle
EXTRN	?FromHandlePermanent@CWnd@@SGPAV1@PAUHWND__@@@Z:PROC ; CWnd::FromHandlePermanent
EXTRN	?Attach@CWnd@@QAEHPAUHWND__@@@Z:PROC		; CWnd::Attach
EXTRN	?Detach@CWnd@@QAEPAUHWND__@@XZ:PROC		; CWnd::Detach
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:PROC		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:PROC ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:PROC ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:PROC ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:PROC		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:PROC ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:PROC	; CWnd::CalcWindowRect
EXTRN	?GetDlgCtrlID@CWnd@@QBEHXZ:PROC			; CWnd::GetDlgCtrlID
EXTRN	?GetDlgItem@CWnd@@QBEPAV1@H@Z:PROC		; CWnd::GetDlgItem
EXTRN	?GetMenu@CWnd@@UBEPAVCMenu@@XZ:PROC		; CWnd::GetMenu
EXTRN	?SetMenu@CWnd@@UAEHPAVCMenu@@@Z:PROC		; CWnd::SetMenu
EXTRN	?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z:PROC	; CWnd::SetWindowPos
EXTRN	?GetWindowPlacement@CWnd@@QBEHPAUtagWINDOWPLACEMENT@@@Z:PROC ; CWnd::GetWindowPlacement
EXTRN	?SetWindowPlacement@CWnd@@QAEHPBUtagWINDOWPLACEMENT@@@Z:PROC ; CWnd::SetWindowPlacement
EXTRN	?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z:PROC	; CWnd::ScreenToClient
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:PROC ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:PROC ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:PROC		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:PROC		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:PROC		; CWnd::EndModalLoop
EXTRN	?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z:PROC ; CWnd::OnDrawIconicThumbnailOrLivePreview
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:PROC ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:PROC			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:PROC ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:PROC		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:PROC ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDescription
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:PROC ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDefaultAction
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:PROC	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:PROC ; CWnd::accLocation
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:PROC	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:PROC ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:PROC ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:PROC	; CWnd::CreateAccessibleProxy
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:PROC			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:PROC		; CWnd::OnNotify
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:PROC ; CWnd::GetSuperWndProcAddr
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:PROC ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:PROC ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:PROC		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnWndMsg
EXTRN	?Default@CWnd@@IAEJXZ:PROC			; CWnd::Default
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:PROC		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:PROC		; CWnd::PostNcDestroy
EXTRN	?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInputs
EXTRN	?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInput
EXTRN	?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z:PROC	; CWnd::GetGestureStatus
EXTRN	?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z:PROC	; CWnd::OnGestureZoom
EXTRN	?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z:PROC	; CWnd::OnGesturePan
EXTRN	?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z:PROC	; CWnd::OnGestureRotate
EXTRN	?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z:PROC ; CWnd::OnGestureTwoFingerTap
EXTRN	?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z:PROC ; CWnd::OnGesturePressAndTap
EXTRN	?ResizeDynamicLayout@CWnd@@MAEXXZ:PROC		; CWnd::ResizeDynamicLayout
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:PROC		; CWnd::CheckAutoCenter
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:PROC			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:PROC		; CWnd::OnFinalRelease
EXTRN	?ModifyStyleEx@CWnd@@SGHPAUHWND__@@KKI@Z:PROC	; CWnd::ModifyStyleEx
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:PROC ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:PROC ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:PROC ; CWnd::SetOccDialogInfo
EXTRN	?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ:PROC ; CWnd::GetOccDialogInfo
EXTRN	?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ:PROC ; CWnd::GetThisMessageMap
EXTRN	?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ:PROC	; CWnd::GetMessageMap
EXTRN	?GetRuntimeClass@CStatic@@UBEPAUCRuntimeClass@@XZ:PROC ; CStatic::GetRuntimeClass
EXTRN	?Create@CStatic@@UAEHPBDKABUtagRECT@@PAVCWnd@@I@Z:PROC ; CStatic::Create
EXTRN	?DrawItem@CStatic@@UAEXPAUtagDRAWITEMSTRUCT@@@Z:PROC ; CStatic::DrawItem
EXTRN	??1CStatic@@UAE@XZ:PROC				; CStatic::~CStatic
EXTRN	?OnChildNotify@CStatic@@MAEHIIJPAJ@Z:PROC	; CStatic::OnChildNotify
EXTRN	??_ECStatic@@UAEPAXI@Z:PROC			; CStatic::`vector deleting destructor'
EXTRN	?AfxMessageBox@@YGHPBDII@Z:PROC			; AfxMessageBox
EXTRN	??0CExResizeRect@@QAE@XZ:PROC			; CExResizeRect::CExResizeRect
EXTRN	??0CExResizeRect@@QAE@MMMM@Z:PROC		; CExResizeRect::CExResizeRect
EXTRN	??4CExResizeRect@@QAEAAV0@ABUtagRECT@@@Z:PROC	; CExResizeRect::operator=
EXTRN	??4CExResizeRect@@QAEAAV0@ABUEX_RESIZERECT@@@Z:PROC ; CExResizeRect::operator=
EXTRN	??YCExResizeRect@@QAEAAV0@ABUEX_RESIZERECT@@@Z:PROC ; CExResizeRect::operator+=
EXTRN	??_ECExSizeIcon@@UAEPAXI@Z:PROC			; CExSizeIcon::`vector deleting destructor'
EXTRN	??_ECExItem@@UAEPAXI@Z:PROC			; CExItem::`vector deleting destructor'
EXTRN	??_E?$CArray@PAVCExItem@@AAPAV1@@@UAEPAXI@Z:PROC ; CArray<CExItem *,CExItem * &>::`vector deleting destructor'
EXTRN	??_ECExResize@@UAEPAXI@Z:PROC			; CExResize::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__imp_?wndTop@CWnd@@2V1@B:BYTE
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __xmm@00000010000000100000000000000000
CONST	SEGMENT
__xmm@00000010000000100000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 010H, 00H, 00H, 00H, 010H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CArray@PAVCExItem@@AAPAV1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CArray@PAVCExItem@@AAPAV1@@@8 DD FLAT:??_R0?AV?$CArray@PAVCExItem@@AAPAV1@@@@8 ; CArray<CExItem *,CExItem * &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CArray@PAVCExItem@@AAPAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CArray@PAVCExItem@@AAPAV1@@@8
rdata$r	SEGMENT
??_R2?$CArray@PAVCExItem@@AAPAV1@@@8 DD FLAT:??_R1A@?0A@EA@?$CArray@PAVCExItem@@AAPAV1@@@8 ; CArray<CExItem *,CExItem * &>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CArray@PAVCExItem@@AAPAV1@@@8
rdata$r	SEGMENT
??_R3?$CArray@PAVCExItem@@AAPAV1@@@8 DD 00H		; CArray<CExItem *,CExItem * &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CArray@PAVCExItem@@AAPAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CArray@PAVCExItem@@AAPAV1@@@@8
data$rs	SEGMENT
??_R0?AV?$CArray@PAVCExItem@@AAPAV1@@@@8 DD FLAT:??_7type_info@@6B@ ; CArray<CExItem *,CExItem * &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CArray@PAVCExItem@@AAPAV1@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CArray@PAVCExItem@@AAPAV1@@@6B@
rdata$r	SEGMENT
??_R4?$CArray@PAVCExItem@@AAPAV1@@@6B@ DD 00H		; CArray<CExItem *,CExItem * &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CArray@PAVCExItem@@AAPAV1@@@@8
	DD	FLAT:??_R3?$CArray@PAVCExItem@@AAPAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CExResize@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CExResize@@8 DD FLAT:??_R0?AVCExResize@@@8 ; CExResize::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CExResize@@8
rdata$r	ENDS
;	COMDAT ??_R2CExResize@@8
rdata$r	SEGMENT
??_R2CExResize@@8 DD FLAT:??_R1A@?0A@EA@CExResize@@8	; CExResize::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CExResize@@8
rdata$r	SEGMENT
??_R3CExResize@@8 DD 00H				; CExResize::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CExResize@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCExResize@@@8
data$rs	SEGMENT
??_R0?AVCExResize@@@8 DD FLAT:??_7type_info@@6B@	; CExResize `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCExResize@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CExResize@@6B@
rdata$r	SEGMENT
??_R4CExResize@@6B@ DD 00H				; CExResize::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCExResize@@@8
	DD	FLAT:??_R3CExResize@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CExItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CExItem@@8 DD FLAT:??_R0?AVCExItem@@@8	; CExItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CExItem@@8
rdata$r	ENDS
;	COMDAT ??_R2CExItem@@8
rdata$r	SEGMENT
??_R2CExItem@@8 DD FLAT:??_R1A@?0A@EA@CExItem@@8	; CExItem::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CExItem@@8
rdata$r	SEGMENT
??_R3CExItem@@8 DD 00H					; CExItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CExItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCExItem@@@8
data$rs	SEGMENT
??_R0?AVCExItem@@@8 DD FLAT:??_7type_info@@6B@		; CExItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCExItem@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CExItem@@6B@
rdata$r	SEGMENT
??_R4CExItem@@6B@ DD 00H				; CExItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCExItem@@@8
	DD	FLAT:??_R3CExItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CExSizeIcon@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CExSizeIcon@@8 DD FLAT:??_R0?AVCExSizeIcon@@@8 ; CExSizeIcon::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CExSizeIcon@@8
rdata$r	ENDS
;	COMDAT ??_R2CExSizeIcon@@8
rdata$r	SEGMENT
??_R2CExSizeIcon@@8 DD FLAT:??_R1A@?0A@EA@CExSizeIcon@@8 ; CExSizeIcon::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CStatic@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CExSizeIcon@@8
rdata$r	SEGMENT
??_R3CExSizeIcon@@8 DD 00H				; CExSizeIcon::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CExSizeIcon@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCExSizeIcon@@@8
data$rs	SEGMENT
??_R0?AVCExSizeIcon@@@8 DD FLAT:??_7type_info@@6B@	; CExSizeIcon `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCExSizeIcon@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CExSizeIcon@@6B@
rdata$r	SEGMENT
??_R4CExSizeIcon@@6B@ DD 00H				; CExSizeIcon::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCExSizeIcon@@@8
	DD	FLAT:??_R3CExSizeIcon@@8
rdata$r	ENDS
;	COMDAT ?messageMap@?1??GetThisMessageMap@CExSizeIcon@@KGPBUAFX_MSGMAP@@XZ@4U3@B
CONST	SEGMENT
?messageMap@?1??GetThisMessageMap@CExSizeIcon@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ ; `CExSizeIcon::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CExSizeIcon@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
;	COMDAT ?_messageEntries@?1??GetThisMessageMap@CExSizeIcon@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@?1??GetThisMessageMap@CExSizeIcon@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 020H ; `CExSizeIcon::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	05H
	DD	FLAT:?OnSetCursor@CExSizeIcon@@IAEHPAVCWnd@@II@Z
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	0dH
	DD	FLAT:?OnCreate@CExSizeIcon@@IAEHPAUtagCREATESTRUCTA@@@Z
	DD	0200H
	DD	00H
	DD	00H
	DD	00H
	DD	036H
	DD	FLAT:?OnMouseMove@CExSizeIcon@@IAEXIVCPoint@@@Z
	DD	0201H
	DD	00H
	DD	00H
	DD	00H
	DD	036H
	DD	FLAT:?OnLButtonDown@CExSizeIcon@@IAEXIVCPoint@@@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_C@_0BA@IPFOHKAG@WindowPlacement@
CONST	SEGMENT
??_C@_0BA@IPFOHKAG@WindowPlacement@ DB 'WindowPlacement', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LKBCGDFD@Button@
CONST	SEGMENT
??_C@_06LKBCGDFD@Button@ DB 'Button', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CExResize@@6B@
CONST	SEGMENT
??_7CExResize@@6B@ DD FLAT:??_R4CExResize@@6B@		; CExResize::`vftable'
	DD	FLAT:??_ECExResize@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CArray@PAVCExItem@@AAPAV1@@@6B@
CONST	SEGMENT
??_7?$CArray@PAVCExItem@@AAPAV1@@@6B@ DD FLAT:??_R4?$CArray@PAVCExItem@@AAPAV1@@@6B@ ; CArray<CExItem *,CExItem * &>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CArray@PAVCExItem@@AAPAV1@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CArray@PAVCExItem@@AAPAV1@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CExItem@@6B@
CONST	SEGMENT
??_7CExItem@@6B@ DD FLAT:??_R4CExItem@@6B@		; CExItem::`vftable'
	DD	FLAT:??_ECExItem@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CExSizeIcon@@6B@
CONST	SEGMENT
??_7CExSizeIcon@@6B@ DD FLAT:??_R4CExSizeIcon@@6B@	; CExSizeIcon::`vftable'
	DD	FLAT:?GetRuntimeClass@CStatic@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECExSizeIcon@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CExSizeIcon@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CStatic@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CStatic@@UAEHPBDKABUtagRECT@@PAVCWnd@@I@Z
	DD	FLAT:?DrawItem@CStatic@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
CONST	ENDS
;	COMDAT ??_R2CCmdTarget@@8
rdata$r	SEGMENT
??_R2CCmdTarget@@8 DD FLAT:??_R1A@?0A@EA@CCmdTarget@@8	; CCmdTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CCmdTarget@@8
rdata$r	SEGMENT
??_R3CCmdTarget@@8 DD 00H				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
data$rs	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R2CWnd@@8
rdata$r	SEGMENT
??_R2CWnd@@8 DD	FLAT:??_R1A@?0A@EA@CWnd@@8		; CWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWnd@@8
rdata$r	SEGMENT
??_R3CWnd@@8 DD	00H					; CWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
data$rs	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CStatic@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CStatic@@8 DD FLAT:??_R0?AVCStatic@@@8	; CStatic::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CStatic@@8
rdata$r	ENDS
;	COMDAT ??_R2CStatic@@8
rdata$r	SEGMENT
??_R2CStatic@@8 DD FLAT:??_R1A@?0A@EA@CStatic@@8	; CStatic::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CStatic@@8
rdata$r	SEGMENT
??_R3CStatic@@8 DD 00H					; CStatic::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CStatic@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCStatic@@@8
data$rs	SEGMENT
??_R0?AVCStatic@@@8 DD FLAT:??_7type_info@@6B@		; CStatic `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCStatic@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CStatic@@6B@
rdata$r	SEGMENT
??_R4CStatic@@6B@ DD 00H				; CStatic::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCStatic@@@8
	DD	FLAT:??_R3CStatic@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBitmap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBitmap@@8 DD FLAT:??_R0?AVCBitmap@@@8	; CBitmap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBitmap@@8
rdata$r	ENDS
;	COMDAT ??_R2CBitmap@@8
rdata$r	SEGMENT
??_R2CBitmap@@8 DD FLAT:??_R1A@?0A@EA@CBitmap@@8	; CBitmap::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGdiObject@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CBitmap@@8
rdata$r	SEGMENT
??_R3CBitmap@@8 DD 00H					; CBitmap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CBitmap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBitmap@@@8
data$rs	SEGMENT
??_R0?AVCBitmap@@@8 DD FLAT:??_7type_info@@6B@		; CBitmap `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBitmap@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CBitmap@@6B@
rdata$r	SEGMENT
??_R4CBitmap@@6B@ DD 00H				; CBitmap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBitmap@@@8
	DD	FLAT:??_R3CBitmap@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGdiObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGdiObject@@8 DD FLAT:??_R0?AVCGdiObject@@@8 ; CGdiObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGdiObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CGdiObject@@8
rdata$r	SEGMENT
??_R2CGdiObject@@8 DD FLAT:??_R1A@?0A@EA@CGdiObject@@8	; CGdiObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CGdiObject@@8
rdata$r	SEGMENT
??_R3CGdiObject@@8 DD 00H				; CGdiObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGdiObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGdiObject@@@8
data$rs	SEGMENT
??_R0?AVCGdiObject@@@8 DD FLAT:??_7type_info@@6B@	; CGdiObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGdiObject@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CGdiObject@@6B@
rdata$r	SEGMENT
??_R4CGdiObject@@6B@ DD 00H				; CGdiObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGdiObject@@@8
	DD	FLAT:??_R3CGdiObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$rs	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$rs	ENDS
;	COMDAT ??_C@_0N@OMEMOKLE@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ@
CONST	SEGMENT
??_C@_0N@OMEMOKLE@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ@ DB '%Ts (%Ts:%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HBOOMJBF@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ?6?$CFTs@
CONST	SEGMENT
??_C@_0BB@HBOOMJBF@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ?6?$CFTs@ DB '%Ts (%Ts:%d'
	DB	')', 0aH, '%Ts', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@
CONST	SEGMENT
??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@ DB 'Exception throw'
	DB	'n in destructor', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.29.30133\atlmfc\include\afxwin1.inl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CStatic@@6B@
CONST	SEGMENT
??_7CStatic@@6B@ DD FLAT:??_R4CStatic@@6B@		; CStatic::`vftable'
	DD	FLAT:?GetRuntimeClass@CStatic@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECStatic@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CStatic@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CStatic@@UAEHPBDKABUtagRECT@@PAVCWnd@@I@Z
	DD	FLAT:?DrawItem@CStatic@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
CONST	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT
??_7CBitmap@@6B@ DD FLAT:??_R4CBitmap@@6B@		; CBitmap::`vftable'
	DD	FLAT:?GetRuntimeClass@CBitmap@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECBitmap@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT
??_7CGdiObject@@6B@ DD FLAT:??_R4CGdiObject@@6B@	; CGdiObject::`vftable'
	DD	FLAT:?GetRuntimeClass@CGdiObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECGdiObject@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_R0PAVCException@@@8
data$r	SEGMENT
??_R0PAVCException@@@8 DD FLAT:??_7type_info@@6B@	; CException * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAVCException@@', 00H
data$r	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GCExResize@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_GCExResize@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_GCExResize@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetResize@CExResize@@IAEXPAVCWnd@@ABVCExResizeRect@@VCRect@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetResize@CExResize@@IAEXPAVCWnd@@ABVCExResizeRect@@VCRect@@@Z$0
__ehfuncinfo$?SetResize@CExResize@@IAEXPAVCWnd@@ABVCExResizeRect@@VCRect@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetResize@CExResize@@IAEXPAVCWnd@@ABVCExResizeRect@@VCRect@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetResize@CExResize@@QAEXIQAUHWND__@@ABUEX_RESIZERECT@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetResize@CExResize@@QAEXIQAUHWND__@@ABUEX_RESIZERECT@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SetResize@CExResize@@QAEXIQAUHWND__@@ABUEX_RESIZERECT@@@Z$1
__ehfuncinfo$?SetResize@CExResize@@QAEXIQAUHWND__@@ABUEX_RESIZERECT@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetResize@CExResize@@QAEXIQAUHWND__@@ABUEX_RESIZERECT@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CExResize@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CExResize@@QAE@PAVCWnd@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CExResize@@QAE@PAVCWnd@@I@Z$0
__ehfuncinfo$??0CExResize@@QAE@PAVCWnd@@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CExResize@@QAE@PAVCWnd@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GCExItem@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_GCExItem@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_GCExItem@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CExItem@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??1CGdiObject@@UAE@XZ$3 DD 00H
	DD	FLAT:??_R0PAVCException@@@8
	DD	0fffffde4H
	DD	FLAT:__catch$??1CGdiObject@@UAE@XZ$0
__tryblocktable$??1CGdiObject@@UAE@XZ DD 00H
	DD	00H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??1CGdiObject@@UAE@XZ$3
__unwindtable$??1CGdiObject@@UAE@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$??1CGdiObject@@UAE@XZ$2
__ehfuncinfo$??1CGdiObject@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1CGdiObject@@UAE@XZ
	DD	01H
	DD	FLAT:__tryblocktable$??1CGdiObject@@UAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@PAVCExItem@@@@YGXAAVCArchive@@PAPAVCExItem@@H@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@PAVCExItem@@@@YGXAAVCArchive@@PAPAVCExItem@@H@Z PROC ; SerializeElements<CExItem *>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b 75 10	 mov	 esi, DWORD PTR _nCount$[ebp]
  0000b	57		 push	 edi
  0000c	85 f6		 test	 esi, esi
  0000e	74 08		 je	 SHORT $LN2@SerializeE
  00010	85 c9		 test	 ecx, ecx
  00012	0f 84 89 00 00
	00		 je	 $LN34@SerializeE
$LN2@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00018	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  0001b	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0001e	f7 d0		 not	 eax
  00020	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  00022	74 3c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;
; 79   : 		pData = pElements;
; 80   : 		while( nElementsLeft > 0 )

  00024	85 f6		 test	 esi, esi
  00026	74 31		 je	 SHORT $LN8@SerializeE
  00028	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL5@SerializeE:

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00030	bb ff ff ff 1f	 mov	 ebx, 536870911		; 1fffffffH
  00035	3b f3		 cmp	 esi, ebx
  00037	0f 42 de	 cmovb	 ebx, esi

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0003a	8d 3c 9d 00 00
	00 00		 lea	 edi, DWORD PTR [ebx*4]
  00041	57		 push	 edi
  00042	51		 push	 ecx
  00043	8b ca		 mov	 ecx, edx
  00045	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;
; 87   : 			pData += nElementsToWrite;

  0004a	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00050	03 cf		 add	 ecx, edi
  00052	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  00055	2b f3		 sub	 esi, ebx
  00057	75 d7		 jne	 SHORT $LL5@SerializeE
$LN8@SerializeE:
  00059	5f		 pop	 edi

; 105  : 		}
; 106  : 	}
; 107  : }

  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	5d		 pop	 ebp
  0005d	c2 0c 00	 ret	 12			; 0000000cH
$LN10@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  00060	85 f6		 test	 esi, esi
  00062	74 f5		 je	 SHORT $LN8@SerializeE
$LL7@SerializeE:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00064	bf ff ff ff 1f	 mov	 edi, 536870911		; 1fffffffH
  00069	3b f7		 cmp	 esi, edi
  0006b	0f 42 fe	 cmovb	 edi, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0006e	8d 1c bd 00 00
	00 00		 lea	 ebx, DWORD PTR [edi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00075	53		 push	 ebx
  00076	51		 push	 ecx
  00077	8b ca		 mov	 ecx, edx
  00079	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0007e	3b c3		 cmp	 eax, ebx
  00080	75 16		 jne	 SHORT $LN23@SerializeE
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  00082	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00085	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;
; 104  : 			pData += nElementsToRead;

  00088	03 cb		 add	 ecx, ebx
  0008a	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  0008d	2b f7		 sub	 esi, edi
  0008f	75 d3		 jne	 SHORT $LL7@SerializeE

; 105  : 		}
; 106  : 	}
; 107  : }

  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	5d		 pop	 ebp
  00095	c2 0c 00	 ret	 12			; 0000000cH
$LN23@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 402  : 		AfxThrowArchiveException(CArchiveException::endOfFile);

  00098	6a 00		 push	 0
  0009a	6a 03		 push	 3
  0009c	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN34@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  000a1	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN32@SerializeE:
  000a6	cc		 int	 3
??$SerializeElements@PAVCExItem@@@@YGXAAVCArchive@@PAPAVCExItem@@H@Z ENDP ; SerializeElements<CExItem *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ??_GCExResize@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GCExResize@@UAEPAXI@Z PROC				; CExResize::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GCExResize@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f9		 mov	 edi, ecx

; 38   : {

  00026	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002d	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CExResize@@6B@

; 39   : 	RemoveAllControls();

  00033	e8 00 00 00 00	 call	 ?RemoveAllControls@CExResize@@IAEXXZ ; CExResize::RemoveAllControls
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 358  : 	if (m_pData != NULL)

  00038	8b 87 dc 00 00
	00		 mov	 eax, DWORD PTR [edi+220]
  0003e	c7 87 d8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+216], OFFSET ??_7?$CArray@PAVCExItem@@AAPAV1@@@6B@
  00048	85 c0		 test	 eax, eax
  0004a	74 13		 je	 SHORT $LN11@scalar

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )

  0004c	83 bf e0 00 00
	00 00		 cmp	 DWORD PTR [edi+224], 0
  00053	0f 4f c0	 cmovg	 eax, eax

; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0005c	83 c4 04	 add	 esp, 4
$LN11@scalar:
  0005f	8d 8f cc 00 00
	00		 lea	 ecx, DWORD PTR [edi+204]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 179  : 	{ }

  00065	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBitmap@@6B@
  0006b	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  00070	8d 4f 48	 lea	 ecx, DWORD PTR [edi+72]
  00073	e8 00 00 00 00	 call	 ??1CStatic@@UAE@XZ	; CStatic::~CStatic
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 40   : }

  00078	8d 4f 40	 lea	 ecx, DWORD PTR [edi+64]
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00081	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00085	74 0e		 je	 SHORT $LN24@scalar
  00087	68 f0 00 00 00	 push	 240			; 000000f0H
  0008c	57		 push	 edi
  0008d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00092	83 c4 08	 add	 esp, 8
$LN24@scalar:
  00095	8b c7		 mov	 eax, edi
  00097	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a1	59		 pop	 ecx
  000a2	5f		 pop	 edi
  000a3	5e		 pop	 esi
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 04 00	 ret	 4
  000aa	cc		 int	 3
  000ab	cc		 int	 3
  000ac	cc		 int	 3
  000ad	cc		 int	 3
  000ae	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_GCExResize@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GCExResize@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GCExResize@@UAEPAXI@Z ENDP				; CExResize::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_G?$CArray@PAVCExItem@@AAPAV1@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CArray@PAVCExItem@@AAPAV1@@@UAEPAXI@Z PROC	; CArray<CExItem *,CExItem * &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 355  : {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 356  : 	ASSERT_VALID(this);
; 357  : 
; 358  : 	if (m_pData != NULL)

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CArray@PAVCExItem@@AAPAV1@@@6B@
  0000f	85 c0		 test	 eax, eax
  00011	74 09		 je	 SHORT $LN11@scalar

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )
; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00019	83 c4 04	 add	 esp, 4
$LN11@scalar:
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	a8 01		 test	 al, 1
  00021	74 1f		 je	 SHORT $LN20@scalar
  00023	a8 04		 test	 al, 4
  00025	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002d	83 c4 04	 add	 esp, 4
  00030	8b c6		 mov	 eax, esi
  00032	5e		 pop	 esi
  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
$LN3@scalar:
  00037	6a 14		 push	 20			; 00000014H
  00039	56		 push	 esi
  0003a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003f	83 c4 08	 add	 esp, 8
$LN20@scalar:
  00042	8b c6		 mov	 eax, esi
  00044	5e		 pop	 esi
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??_G?$CArray@PAVCExItem@@AAPAV1@@@UAEPAXI@Z ENDP	; CArray<CExItem *,CExItem * &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CArray@PAVCExItem@@AAPAV1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_pData$1$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CArray@PAVCExItem@@AAPAV1@@@UAEXAAVCArchive@@@Z PROC ; CArray<CExItem *,CExItem * &>::Serialize, COMDAT
; _this$ = ecx

; 633  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00009	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0000c	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  0000f	f7 d0		 not	 eax
  00011	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 637  : 	if (ar.IsStoring())

  00013	74 0a		 je	 SHORT $LN2@Serialize

; 638  : 	{
; 639  : 		ar.WriteCount(m_nSize);

  00015	ff 77 08	 push	 DWORD PTR [edi+8]
  00018	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 640  : 	}

  0001d	eb 0f		 jmp	 SHORT $LN3@Serialize
$LN2@Serialize:

; 641  : 	else
; 642  : 	{
; 643  : 		DWORD_PTR nOldSize = ar.ReadCount();

  0001f	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount

; 644  : 		SetSize(nOldSize, -1);

  00024	6a ff		 push	 -1
  00026	50		 push	 eax
  00027	8b cf		 mov	 ecx, edi
  00029	e8 00 00 00 00	 call	 ?SetSize@?$CArray@PAVCExItem@@AAPAV1@@@QAEXHH@Z ; CArray<CExItem *,CExItem * &>::SetSize
$LN3@Serialize:

; 645  : 	}
; 646  : 	SerializeElements<TYPE>(ar, m_pData, m_nSize);

  0002e	8b 77 08	 mov	 esi, DWORD PTR [edi+8]
  00031	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00034	89 4d fc	 mov	 DWORD PTR _pData$1$[ebp], ecx

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00037	85 f6		 test	 esi, esi
  00039	74 08		 je	 SHORT $LN8@Serialize
  0003b	85 c9		 test	 ecx, ecx
  0003d	0f 84 8c 00 00
	00		 je	 $LN40@Serialize
$LN8@Serialize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00043	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00046	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00049	f7 d0		 not	 eax
  0004b	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  0004d	74 36		 je	 SHORT $LN16@Serialize

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;
; 79   : 		pData = pElements;
; 80   : 		while( nElementsLeft > 0 )

  0004f	85 f6		 test	 esi, esi
  00051	74 29		 je	 SHORT $LN14@Serialize
$LL11@Serialize:

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00053	bb ff ff ff 1f	 mov	 ebx, 536870911		; 1fffffffH
  00058	3b f3		 cmp	 esi, ebx
  0005a	0f 42 de	 cmovb	 ebx, esi

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0005d	8d 3c 9d 00 00
	00 00		 lea	 edi, DWORD PTR [ebx*4]
  00064	57		 push	 edi
  00065	51		 push	 ecx
  00066	8b ca		 mov	 ecx, edx
  00068	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;
; 87   : 			pData += nElementsToWrite;

  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _pData$1$[ebp]
  00070	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00073	03 cf		 add	 ecx, edi
  00075	89 4d fc	 mov	 DWORD PTR _pData$1$[ebp], ecx
  00078	2b f3		 sub	 esi, ebx
  0007a	75 d7		 jne	 SHORT $LL11@Serialize
$LN14@Serialize:
  0007c	5f		 pop	 edi

; 647  : }

  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
$LN16@Serialize:

; 97   : 		while( nElementsLeft > 0 )

  00085	85 f6		 test	 esi, esi
  00087	74 f3		 je	 SHORT $LN14@Serialize
  00089	0f 1f 80 00 00
	00 00		 npad	 7
$LL13@Serialize:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00090	bf ff ff ff 1f	 mov	 edi, 536870911		; 1fffffffH
  00095	3b f7		 cmp	 esi, edi
  00097	0f 42 fe	 cmovb	 edi, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0009a	8d 1c bd 00 00
	00 00		 lea	 ebx, DWORD PTR [edi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  000a1	53		 push	 ebx
  000a2	51		 push	 ecx
  000a3	8b ca		 mov	 ecx, edx
  000a5	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  000aa	3b c3		 cmp	 eax, ebx
  000ac	75 18		 jne	 SHORT $LN30@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  000ae	8b 4d fc	 mov	 ecx, DWORD PTR _pData$1$[ebp]
  000b1	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;
; 104  : 			pData += nElementsToRead;

  000b4	03 cb		 add	 ecx, ebx
  000b6	89 4d fc	 mov	 DWORD PTR _pData$1$[ebp], ecx
  000b9	2b f7		 sub	 esi, edi
  000bb	75 d3		 jne	 SHORT $LL13@Serialize

; 647  : }

  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 04 00	 ret	 4
$LN30@Serialize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 402  : 		AfxThrowArchiveException(CArchiveException::endOfFile);

  000c6	6a 00		 push	 0
  000c8	6a 03		 push	 3
  000ca	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN40@Serialize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  000cf	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN38@Serialize:
  000d4	cc		 int	 3
?Serialize@?$CArray@PAVCExItem@@AAPAV1@@@UAEXAAVCArchive@@@Z ENDP ; CArray<CExItem *,CExItem * &>::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CArray@PAVCExItem@@AAPAV1@@@UAE@XZ
_TEXT	SEGMENT
??1?$CArray@PAVCExItem@@AAPAV1@@@UAE@XZ PROC		; CArray<CExItem *,CExItem * &>::~CArray<CExItem *,CExItem * &>, COMDAT
; _this$ = ecx

; 356  : 	ASSERT_VALID(this);
; 357  : 
; 358  : 	if (m_pData != NULL)

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CArray@PAVCExItem@@AAPAV1@@@6B@
  00009	85 c0		 test	 eax, eax
  0000b	74 07		 je	 SHORT $LN5@CArray

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )
; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00013	59		 pop	 ecx
$LN5@CArray:

; 363  : 	}
; 364  : }

  00014	c3		 ret	 0
??1?$CArray@PAVCExItem@@AAPAV1@@@UAE@XZ ENDP		; CArray<CExItem *,CExItem * &>::~CArray<CExItem *,CExItem * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlchecked.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlchecked.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAt@?$CArray@PAVCExItem@@AAPAV1@@@QAEXHH@Z
_TEXT	SEGMENT
__N$1$ = 8						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CArray@PAVCExItem@@AAPAV1@@@QAEXHH@Z PROC	; CArray<CExItem *,CExItem * &>::RemoveAt, COMDAT
; _this$ = ecx

; 590  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 591  : 	ASSERT_VALID(this);
; 592  : 	ASSERT(nIndex >= 0);
; 593  : 	ASSERT(nCount >= 0);
; 594  : 	INT_PTR nUpperBound = nIndex + nCount;

  00005	8b 75 0c	 mov	 esi, DWORD PTR _nCount$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	57		 push	 edi
  0000b	8b 7d 08	 mov	 edi, DWORD PTR _nIndex$[ebp]
  0000e	8d 14 37	 lea	 edx, DWORD PTR [edi+esi]

; 595  : 	ASSERT(nUpperBound <= m_nSize && nUpperBound >= nIndex && nUpperBound >= nCount);
; 596  : 
; 597  : 	if(nIndex < 0 || nCount < 0 || (nUpperBound > m_nSize) || (nUpperBound < nIndex) || (nUpperBound < nCount))

  00011	85 ff		 test	 edi, edi
  00013	78 79		 js	 SHORT $LN6@RemoveAt
  00015	85 f6		 test	 esi, esi
  00017	78 75		 js	 SHORT $LN6@RemoveAt
  00019	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0001c	3b d0		 cmp	 edx, eax
  0001e	7f 6e		 jg	 SHORT $LN6@RemoveAt
  00020	3b d7		 cmp	 edx, edi
  00022	7c 6a		 jl	 SHORT $LN6@RemoveAt
  00024	3b d6		 cmp	 edx, esi
  00026	7c 66		 jl	 SHORT $LN6@RemoveAt

; 599  : 
; 600  : 	// just remove a range
; 601  : 	INT_PTR nMoveCount = m_nSize - (nUpperBound);

  00028	8b c8		 mov	 ecx, eax
  0002a	2b ca		 sub	 ecx, edx

; 602  : 	for( int i = 0; i < nCount; i++ )
; 603  : 		(m_pData + nIndex + i)->~TYPE();
; 604  : 	if (nMoveCount)

  0002c	74 54		 je	 SHORT $LN7@RemoveAt

; 606  : 		::ATL::Checked::memmove_s(m_pData + nIndex, (size_t)nMoveCount * sizeof(TYPE),

  0002e	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00035	89 45 08	 mov	 DWORD PTR __N$1$[ebp], eax
  00038	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0003b	8d 0c 90	 lea	 ecx, DWORD PTR [eax+edx*4]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h

; 74   :         if (_SourceSize == 0)

  0003e	8b 55 08	 mov	 edx, DWORD PTR __N$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 606  : 		::ATL::Checked::memmove_s(m_pData + nIndex, (size_t)nMoveCount * sizeof(TYPE),

  00041	8d 04 b8	 lea	 eax, DWORD PTR [eax+edi*4]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h

; 74   :         if (_SourceSize == 0)

  00044	85 d2		 test	 edx, edx
  00046	74 2c		 je	 SHORT $LN22@RemoveAt

; 75   :         {
; 76   :             return 0;
; 77   :         }
; 78   : 
; 79   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL,            EINVAL);

  00048	85 c0		 test	 eax, eax
  0004a	75 19		 jne	 SHORT $LN13@RemoveAt
$LN23@RemoveAt:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlchecked.h

; 87   : 	ATLMFC_CRT_ERRORCHECK(::memmove_s(_S1, _S1max, _S2, _N));

  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___errno
  00052	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter_noinfo
  0005e	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  00063	eb 11		 jmp	 SHORT $LN11@RemoveAt
$LN13@RemoveAt:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h

; 80   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);

  00065	85 c9		 test	 ecx, ecx
  00067	74 e3		 je	 SHORT $LN23@RemoveAt

; 81   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);
; 82   : 
; 83   :         memmove(_Destination, _Source, _SourceSize);

  00069	52		 push	 edx
  0006a	51		 push	 ecx
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 _memmove
  00071	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN22@RemoveAt:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlchecked.h

; 87   : 	ATLMFC_CRT_ERRORCHECK(::memmove_s(_S1, _S1max, _S2, _N));

  00074	33 c0		 xor	 eax, eax
$LN11@RemoveAt:
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 ?AfxCrtErrorCheck@@YAHH@Z ; AfxCrtErrorCheck
  0007c	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0007f	83 c4 04	 add	 esp, 4
$LN7@RemoveAt:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 609  : 	m_nSize -= nCount;

  00082	5f		 pop	 edi
  00083	2b c6		 sub	 eax, esi
  00085	5e		 pop	 esi
  00086	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  00089	5b		 pop	 ebx

; 610  : }

  0008a	5d		 pop	 ebp
  0008b	c2 08 00	 ret	 8
$LN6@RemoveAt:

; 598  : 		AfxThrowInvalidArgException();

  0008e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN21@RemoveAt:
  00093	cc		 int	 3
?RemoveAt@?$CArray@PAVCExItem@@AAPAV1@@@QAEXHH@Z ENDP	; CArray<CExItem *,CExItem * &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?SetAtGrow@?$CArray@PAVCExItem@@AAPAV1@@@QAEXHAAPAVCExItem@@@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CArray@PAVCExItem@@AAPAV1@@@QAEXHAAPAVCExItem@@@Z PROC ; CArray<CExItem *,CExItem * &>::SetAtGrow, COMDAT
; _this$ = ecx

; 534  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 535  : 	ASSERT_VALID(this);
; 536  : 	ASSERT(nIndex >= 0);
; 537  : 
; 538  : 	if(nIndex < 0)

  00004	8b 75 08	 mov	 esi, DWORD PTR _nIndex$[ebp]
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	85 f6		 test	 esi, esi
  0000c	78 21		 js	 SHORT $LN7@SetAtGrow

; 540  : 
; 541  : 	if (nIndex >= m_nSize)

  0000e	3b 77 08	 cmp	 esi, DWORD PTR [edi+8]
  00011	7c 0b		 jl	 SHORT $LN3@SetAtGrow

; 542  : 		SetSize(nIndex+1, -1);

  00013	6a ff		 push	 -1
  00015	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?SetSize@?$CArray@PAVCExItem@@AAPAV1@@@QAEXHH@Z ; CArray<CExItem *,CExItem * &>::SetSize
$LN3@SetAtGrow:

; 543  : 	m_pData[nIndex] = newElement;

  0001e	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00021	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  00024	5f		 pop	 edi
  00025	8b 00		 mov	 eax, DWORD PTR [eax]
  00027	89 04 b1	 mov	 DWORD PTR [ecx+esi*4], eax
  0002a	5e		 pop	 esi

; 544  : }

  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
$LN7@SetAtGrow:

; 539  : 		AfxThrowInvalidArgException();

  0002f	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@SetAtGrow:
  00034	cc		 int	 3
?SetAtGrow@?$CArray@PAVCExItem@@AAPAV1@@@QAEXHAAPAVCExItem@@@Z ENDP ; CArray<CExItem *,CExItem * &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlchecked.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlchecked.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?SetSize@?$CArray@PAVCExItem@@AAPAV1@@@QAEXHH@Z
_TEXT	SEGMENT
__N$1$ = -4						; size = 4
__S2$1$ = 8						; size = 4
_nNewSize$ = 8						; size = 4
_pNewData$1$ = 12					; size = 4
_nGrowBy$ = 12						; size = 4
?SetSize@?$CArray@PAVCExItem@@AAPAV1@@@QAEXHH@Z PROC	; CArray<CExItem *,CExItem * &>::SetSize, COMDAT
; _this$ = ecx

; 368  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi

; 369  : 	ASSERT_VALID(this);
; 370  : 	ASSERT(nNewSize >= 0);
; 371  : 
; 372  : 	if(nNewSize < 0 )

  00006	8b 75 08	 mov	 esi, DWORD PTR _nNewSize$[ebp]
  00009	8b d9		 mov	 ebx, ecx
  0000b	57		 push	 edi
  0000c	85 f6		 test	 esi, esi
  0000e	0f 88 c2 01 00
	00		 js	 $LN70@SetSize

; 373  : 		AfxThrowInvalidArgException();
; 374  : 
; 375  : 	if (nGrowBy >= 0)

  00014	8b 45 0c	 mov	 eax, DWORD PTR _nGrowBy$[ebp]
  00017	85 c0		 test	 eax, eax
  00019	78 03		 js	 SHORT $LN69@SetSize

; 376  : 		m_nGrowBy = nGrowBy;  // set new size

  0001b	89 43 10	 mov	 DWORD PTR [ebx+16], eax
$LN69@SetSize:

; 377  : 
; 378  : 	if (nNewSize == 0)

  0001e	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00021	85 f6		 test	 esi, esi
  00023	75 27		 jne	 SHORT $LN19@SetSize

; 379  : 	{
; 380  : 		// shrink to nothing
; 381  : 		if (m_pData != NULL)

  00025	85 c9		 test	 ecx, ecx
  00027	74 0c		 je	 SHORT $LN21@SetSize

; 382  : 		{
; 383  : 			for( int i = 0; i < m_nSize; i++ )
; 384  : 				(m_pData + i)->~TYPE();
; 385  : 			delete[] (BYTE*)m_pData;

  00029	51		 push	 ecx
  0002a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0002f	83 c4 04	 add	 esp, 4

; 386  : 			m_pData = NULL;

  00032	89 73 04	 mov	 DWORD PTR [ebx+4], esi
$LN21@SetSize:

; 472  : 		m_nSize = nNewSize;
; 473  : 		m_nMaxSize = nNewMax;
; 474  : 	}
; 475  : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	c7 43 0c 00 00
	00 00		 mov	 DWORD PTR [ebx+12], 0
  0003e	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 08 00	 ret	 8
$LN19@SetSize:

; 387  : 		}
; 388  : 		m_nSize = m_nMaxSize = 0;
; 389  : 	}
; 390  : 	else if (m_pData == NULL)

  0004c	85 c9		 test	 ecx, ecx
  0004e	75 36		 jne	 SHORT $LN22@SetSize

; 391  : 	{
; 392  : 		// create buffer big enough to hold number of requested elements or
; 393  : 		// m_nGrowBy elements, whichever is larger.
; 394  : #ifdef SIZE_T_MAX
; 395  : 		ASSERT(nNewSize <= SIZE_T_MAX/sizeof(TYPE));    // no overflow
; 396  : #endif
; 397  : 		size_t nAllocSize = __max(nNewSize, m_nGrowBy);

  00050	8b 7b 10	 mov	 edi, DWORD PTR [ebx+16]
  00053	3b f7		 cmp	 esi, edi
  00055	0f 4f fe	 cmovg	 edi, esi

; 398  : 		m_pData = (TYPE*) new BYTE[(size_t)nAllocSize * sizeof(TYPE)];

  00058	8d 34 bd 00 00
	00 00		 lea	 esi, DWORD PTR [edi*4]
  0005f	56		 push	 esi
  00060	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]

; 399  : 		memset((void*)m_pData, 0, (size_t)nAllocSize * sizeof(TYPE));

  00065	56		 push	 esi
  00066	6a 00		 push	 0
  00068	50		 push	 eax
  00069	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  0006c	e8 00 00 00 00	 call	 _memset

; 400  : 		for( int i = 0; i < nNewSize; i++ )
; 401  : #pragma push_macro("new")
; 402  : #undef new
; 403  : 			::new( (void*)( m_pData + i ) ) TYPE;
; 404  : #pragma pop_macro("new")
; 405  : 		m_nSize = nNewSize;

  00071	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00074	83 c4 10	 add	 esp, 16			; 00000010H

; 472  : 		m_nSize = nNewSize;
; 473  : 		m_nMaxSize = nNewMax;
; 474  : 	}
; 475  : }

  00077	89 7b 0c	 mov	 DWORD PTR [ebx+12], edi
  0007a	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  0007d	5f		 pop	 edi
  0007e	5e		 pop	 esi
  0007f	5b		 pop	 ebx
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 08 00	 ret	 8
$LN22@SetSize:

; 406  : 		m_nMaxSize = nAllocSize;
; 407  : 	}
; 408  : 	else if (nNewSize <= m_nMaxSize)

  00086	8b 7b 0c	 mov	 edi, DWORD PTR [ebx+12]
  00089	3b f7		 cmp	 esi, edi
  0008b	7f 29		 jg	 SHORT $LN24@SetSize

; 409  : 	{
; 410  : 		// it fits
; 411  : 		if (nNewSize > m_nSize)

  0008d	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00090	3b f2		 cmp	 esi, edx
  00092	7e 16		 jle	 SHORT $LN26@SetSize

; 412  : 		{
; 413  : 			// initialize the new elements
; 414  : 			memset((void*)(m_pData + m_nSize), 0, (size_t)(nNewSize-m_nSize) * sizeof(TYPE));

  00094	8b c6		 mov	 eax, esi
  00096	2b c2		 sub	 eax, edx
  00098	c1 e0 02	 shl	 eax, 2
  0009b	50		 push	 eax
  0009c	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  0009f	6a 00		 push	 0
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 _memset
  000a7	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN26@SetSize:

; 415  : 			for( int i = 0; i < nNewSize-m_nSize; i++ )
; 416  : #pragma push_macro("new")
; 417  : #undef new
; 418  : 				::new( (void*)( m_pData + m_nSize + i ) ) TYPE;
; 419  : #pragma pop_macro("new")
; 420  : 		}
; 421  : 		else if (m_nSize > nNewSize)
; 422  : 		{
; 423  : 			// destroy the old elements
; 424  : 			for( int i = 0; i < m_nSize-nNewSize; i++ )
; 425  : 				(m_pData + nNewSize + i)->~TYPE();
; 426  : 		}
; 427  : 		m_nSize = nNewSize;

  000aa	5f		 pop	 edi
  000ab	89 73 08	 mov	 DWORD PTR [ebx+8], esi

; 472  : 		m_nSize = nNewSize;
; 473  : 		m_nMaxSize = nNewMax;
; 474  : 	}
; 475  : }

  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 08 00	 ret	 8
$LN24@SetSize:

; 428  : 	}
; 429  : 	else
; 430  : 	{
; 431  : 		// otherwise, grow array
; 432  : 		nGrowBy = m_nGrowBy;

  000b6	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]

; 433  : 		if (nGrowBy == 0)

  000b9	85 c0		 test	 eax, eax
  000bb	75 22		 jne	 SHORT $LN37@SetSize

; 434  : 		{
; 435  : 			// heuristically determine growth when nGrowBy == 0
; 436  : 			//  (this avoids heap fragmentation in many situations)
; 437  : 			nGrowBy = m_nSize / 8;

  000bd	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  000c0	99		 cdq
  000c1	83 e2 07	 and	 edx, 7
  000c4	03 c2		 add	 eax, edx
  000c6	c1 f8 03	 sar	 eax, 3

; 438  : 			nGrowBy = (nGrowBy < 4) ? 4 : ((nGrowBy > 1024) ? 1024 : nGrowBy);

  000c9	83 f8 04	 cmp	 eax, 4
  000cc	7d 07		 jge	 SHORT $LN36@SetSize
  000ce	b8 04 00 00 00	 mov	 eax, 4
  000d3	eb 0a		 jmp	 SHORT $LN37@SetSize
$LN36@SetSize:
  000d5	b9 00 04 00 00	 mov	 ecx, 1024		; 00000400H
  000da	3b c1		 cmp	 eax, ecx
  000dc	0f 4f c1	 cmovg	 eax, ecx
$LN37@SetSize:

; 439  : 		}
; 440  : 		INT_PTR nNewMax;
; 441  : 		if (nNewSize < m_nMaxSize + nGrowBy)

  000df	03 f8		 add	 edi, eax
  000e1	3b f7		 cmp	 esi, edi
  000e3	7d 0b		 jge	 SHORT $LN30@SetSize

; 445  : 
; 446  : 		ASSERT(nNewMax >= m_nMaxSize);  // no wrap around
; 447  : 
; 448  : 		if(nNewMax  < m_nMaxSize)

  000e5	3b 7b 0c	 cmp	 edi, DWORD PTR [ebx+12]
  000e8	0f 8c e8 00 00
	00		 jl	 $LN70@SetSize
  000ee	eb 02		 jmp	 SHORT $LN32@SetSize
$LN30@SetSize:

; 442  : 			nNewMax = m_nMaxSize + nGrowBy;  // granularity
; 443  : 		else
; 444  : 			nNewMax = nNewSize;  // no slush

  000f0	8b fe		 mov	 edi, esi
$LN32@SetSize:

; 450  : 
; 451  : #ifdef SIZE_T_MAX
; 452  : 		ASSERT(nNewMax <= SIZE_T_MAX/sizeof(TYPE)); // no overflow
; 453  : #endif
; 454  : 		TYPE* pNewData = (TYPE*) new BYTE[(size_t)nNewMax * sizeof(TYPE)];

  000f2	8d 04 bd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*4]
  000f9	50		 push	 eax
  000fa	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]

; 455  : 
; 456  : 		// copy new data from old
; 457  : 		::ATL::Checked::memcpy_s(pNewData, (size_t)nNewMax * sizeof(TYPE),

  000ff	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  00102	8b c8		 mov	 ecx, eax
  00104	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00107	83 c4 04	 add	 esp, 4
  0010a	c1 e0 02	 shl	 eax, 2
  0010d	89 4d 0c	 mov	 DWORD PTR _pNewData$1$[ebp], ecx
  00110	89 45 fc	 mov	 DWORD PTR __N$1$[ebp], eax
  00113	89 55 08	 mov	 DWORD PTR __S2$1$[ebp], edx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h

; 46   :         if (_SourceSize == 0)

  00116	85 c0		 test	 eax, eax
  00118	74 76		 je	 SHORT $LN74@SetSize

; 47   :         {
; 48   :             return 0;
; 49   :         }
; 50   : 
; 51   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  0011a	85 c9		 test	 ecx, ecx
  0011c	75 56		 jne	 SHORT $LN42@SetSize
$LN73@SetSize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlchecked.h

; 69   : 	ATLMFC_CRT_ERRORCHECK(::memcpy_s(_S1, _S1max, _S2, _N));

  0011e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___errno
  00124	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  0012a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter_noinfo
$LN46@SetSize:
  00130	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
$LN40@SetSize:
  00135	50		 push	 eax
  00136	e8 00 00 00 00	 call	 ?AfxCrtErrorCheck@@YAHH@Z ; AfxCrtErrorCheck
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 462  : 		memset((void*)(pNewData + m_nSize), 0, (size_t)(nNewSize-m_nSize) * sizeof(TYPE));

  0013b	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0013e	8b c6		 mov	 eax, esi
  00140	2b c1		 sub	 eax, ecx
  00142	c1 e0 02	 shl	 eax, 2
  00145	50		 push	 eax
  00146	8b 45 0c	 mov	 eax, DWORD PTR _pNewData$1$[ebp]
  00149	6a 00		 push	 0
  0014b	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  0014e	50		 push	 eax
  0014f	e8 00 00 00 00	 call	 _memset

; 463  : 		for( int i = 0; i < nNewSize-m_nSize; i++ )
; 464  : #pragma push_macro("new")
; 465  : #undef new
; 466  : 			::new( (void*)( pNewData + m_nSize + i ) ) TYPE;
; 467  : #pragma pop_macro("new")
; 468  : 
; 469  : 		// get rid of old stuff (note: no destructors called)
; 470  : 		delete[] (BYTE*)m_pData;

  00154	ff 73 04	 push	 DWORD PTR [ebx+4]
  00157	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]

; 471  : 		m_pData = pNewData;

  0015c	8b 45 0c	 mov	 eax, DWORD PTR _pNewData$1$[ebp]
  0015f	83 c4 14	 add	 esp, 20			; 00000014H

; 472  : 		m_nSize = nNewSize;
; 473  : 		m_nMaxSize = nNewMax;
; 474  : 	}
; 475  : }

  00162	89 7b 0c	 mov	 DWORD PTR [ebx+12], edi
  00165	89 73 08	 mov	 DWORD PTR [ebx+8], esi
  00168	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  0016b	5f		 pop	 edi
  0016c	5e		 pop	 esi
  0016d	5b		 pop	 ebx
  0016e	8b e5		 mov	 esp, ebp
  00170	5d		 pop	 ebp
  00171	c2 08 00	 ret	 8
$LN42@SetSize:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h

; 52   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  00174	85 d2		 test	 edx, edx
  00176	8d 14 bd 00 00
	00 00		 lea	 edx, DWORD PTR [edi*4]
  0017d	74 15		 je	 SHORT $LN44@SetSize
  0017f	3b d0		 cmp	 edx, eax
  00181	72 11		 jb	 SHORT $LN44@SetSize

; 58   : 
; 59   :             // Unreachable, but required to suppress /analyze warnings:
; 60   :             return EINVAL;
; 61   :         }
; 62   :         memcpy(_Destination, _Source, _SourceSize);

  00183	50		 push	 eax
  00184	ff 75 08	 push	 DWORD PTR __S2$1$[ebp]
  00187	51		 push	 ecx
  00188	e8 00 00 00 00	 call	 _memcpy
  0018d	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN74@SetSize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlchecked.h

; 69   : 	ATLMFC_CRT_ERRORCHECK(::memcpy_s(_S1, _S1max, _S2, _N));

  00190	33 c0		 xor	 eax, eax
  00192	eb a1		 jmp	 SHORT $LN40@SetSize
$LN44@SetSize:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h

; 54   :             memset(_Destination, 0, _DestinationSize);

  00194	52		 push	 edx
  00195	6a 00		 push	 0
  00197	51		 push	 ecx
  00198	e8 00 00 00 00	 call	 _memset
  0019d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 55   : 
; 56   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);

  001a0	83 7d 08 00	 cmp	 DWORD PTR __S2$1$[ebp], 0
  001a4	0f 84 74 ff ff
	ff		 je	 $LN73@SetSize

; 57   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);

  001aa	8d 04 bd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*4]
  001b1	3b 45 fc	 cmp	 eax, DWORD PTR __N$1$[ebp]
  001b4	0f 83 76 ff ff
	ff		 jae	 $LN46@SetSize
  001ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___errno
  001c0	c7 00 22 00 00
	00		 mov	 DWORD PTR [eax], 34	; 00000022H
  001c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter_noinfo
  001cc	b8 22 00 00 00	 mov	 eax, 34			; 00000022H
  001d1	e9 5f ff ff ff	 jmp	 $LN40@SetSize
$LN70@SetSize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 449  : 			AfxThrowInvalidArgException();

  001d6	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN72@SetSize:
  001db	cc		 int	 3
?SetSize@?$CArray@PAVCExItem@@AAPAV1@@@QAEXHH@Z ENDP	; CArray<CExItem *,CExItem * &>::SetSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CArray@PAVCExItem@@AAPAV1@@@QAE@XZ
_TEXT	SEGMENT
??0?$CArray@PAVCExItem@@AAPAV1@@@QAE@XZ PROC		; CArray<CExItem *,CExItem * &>::CArray<CExItem *,CExItem * &>, COMDAT
; _this$ = ecx

; 348  : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CArray@PAVCExItem@@AAPAV1@@@6B@

; 349  : 	m_pData = NULL;
; 350  : 	m_nSize = m_nMaxSize = m_nGrowBy = 0;
; 351  : }

  00006	8b c1		 mov	 eax, ecx
  00008	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0000f	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00016	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  0001d	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00024	c3		 ret	 0
??0?$CArray@PAVCExItem@@AAPAV1@@@QAE@XZ ENDP		; CArray<CExItem *,CExItem * &>::CArray<CExItem *,CExItem * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\ExResizeRect.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\ExResizeRect.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\ExResizeRect.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\ExResizeRect.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?Defer@CExResize@@IAEHAAPAXPAVCExItem@@HH@Z
_TEXT	SEGMENT
_hDWP$GSCopy$1$ = -72					; size = 4
_hWnd$1$ = -68						; size = 4
_x$1$ = -64						; size = 4
_cx$1$ = -60						; size = 4
_cy$1$ = -56						; size = 4
tv778 = -52						; size = 4
_pItem$GSCopy$1$ = -48					; size = 4
_rrcItem$3 = -44					; size = 16
tv798 = -28						; size = 4
tv777 = -24						; size = 4
_rOld$4 = -20						; size = 16
_rcWindow$5 = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_hDWP$ = 8						; size = 4
_pItem$ = 12						; size = 4
_dx$ = 16						; size = 4
_dy$ = 20						; size = 4
?Defer@CExResize@@IAEHAAPAXPAVCExItem@@HH@Z PROC	; CExResize::Defer, COMDAT
; _this$ = ecx

; 256  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _hDWP$[ebp]
  00013	56		 push	 esi
  00014	8b 75 0c	 mov	 esi, DWORD PTR _pItem$[ebp]
  00017	89 45 b8	 mov	 DWORD PTR _hDWP$GSCopy$1$[ebp], eax
  0001a	57		 push	 edi
  0001b	8b f9		 mov	 edi, ecx
  0001d	89 75 d0	 mov	 DWORD PTR _pItem$GSCopy$1$[ebp], esi

; 257  : 	HWND hWnd = pItem->m_pwnd->m_hWnd;

  00020	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00023	8b 40 20	 mov	 eax, DWORD PTR [eax+32]

; 258  : 	if (::IsWindow(hWnd))

  00026	50		 push	 eax
  00027	89 45 bc	 mov	 DWORD PTR _hWnd$1$[ebp], eax
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  00030	85 c0		 test	 eax, eax
  00032	0f 84 ae 01 00
	00		 je	 $LN4@Defer

; 259  : 	{
; 260  : 		if (!pItem->m_bInitialSize)

  00038	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0003c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp__GetWindowRect@8
  00042	75 3a		 jne	 SHORT $LN58@Defer
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00044	8d 45 ec	 lea	 eax, DWORD PTR _rcWindow$5[ebp]
  00047	0f 57 c0	 xorps	 xmm0, xmm0
  0004a	50		 push	 eax
  0004b	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  0004e	0f 11 45 ec	 movups	 XMMWORD PTR _rcWindow$5[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00052	ff 70 20	 push	 DWORD PTR [eax+32]
  00055	ff d2		 call	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  00057	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  0005a	2b 47 28	 sub	 eax, DWORD PTR [edi+40]

; 581  : 	return bottom - top;

  0005d	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  00060	2b 4f 2c	 sub	 ecx, DWORD PTR [edi+44]

; 576  : 	return right - left;

  00063	2b 45 ec	 sub	 eax, DWORD PTR _rcWindow$5[ebp]

; 581  : 	return bottom - top;

  00066	2b 4d f0	 sub	 ecx, DWORD PTR _rcWindow$5[ebp+4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 265  : 			dx = rcWindow.Width()  - m_rcInitWindow.Width();

  00069	03 45 f4	 add	 eax, DWORD PTR _rcWindow$5[ebp+8]

; 266  : 			dy = rcWindow.Height() - m_rcInitWindow.Height();

  0006c	03 4d f8	 add	 ecx, DWORD PTR _rcWindow$5[ebp+12]
  0006f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp__GetWindowRect@8

; 267  : 
; 268  : 			pItem->m_bInitialSize = TRUE;

  00075	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  0007c	eb 06		 jmp	 SHORT $LN3@Defer
$LN58@Defer:

; 259  : 	{
; 260  : 		if (!pItem->m_bInitialSize)

  0007e	8b 4d 14	 mov	 ecx, DWORD PTR _dy$[ebp]
  00081	8b 45 10	 mov	 eax, DWORD PTR _dx$[ebp]
$LN3@Defer:

; 271  : 		CExResizeRect rrcItem = pItem->m_rrcWindow;

  00084	0f 10 46 20	 movups	 xmm0, XMMWORD PTR [esi+32]
  00088	66 0f 6e d0	 movd	 xmm2, eax

; 273  : 		rrcItem.left   += dx * pItem->m_rrcSizing.left;

  0008c	0f 5b d2	 cvtdq2ps xmm2, xmm2
  0008f	66 0f 6e c9	 movd	 xmm1, ecx
  00093	0f 28 e2	 movaps	 xmm4, xmm2

; 275  : 		rrcItem.right  += dx * pItem->m_rrcSizing.right;

  00096	f3 0f 59 56 18	 mulss	 xmm2, DWORD PTR [esi+24]
  0009b	f3 0f 59 66 10	 mulss	 xmm4, DWORD PTR [esi+16]
  000a0	0f 5b c9	 cvtdq2ps xmm1, xmm1
  000a3	f3 0f 58 e0	 addss	 xmm4, xmm0
  000a7	0f 28 d9	 movaps	 xmm3, xmm1

; 276  : 		rrcItem.bottom += dy * pItem->m_rrcSizing.bottom;

  000aa	f3 0f 59 4e 1c	 mulss	 xmm1, DWORD PTR [esi+28]
  000af	f3 0f 59 5e 14	 mulss	 xmm3, DWORD PTR [esi+20]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\ExResizeRect.h

; 60   : 	return left==rrc.left && top==rrc.top && right==rrc.right && bottom==rrc.bottom; 

  000b4	0f 2e 66 20	 ucomiss xmm4, DWORD PTR [esi+32]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 271  : 		CExResizeRect rrcItem = pItem->m_rrcWindow;

  000b8	0f 11 45 d4	 movups	 XMMWORD PTR _rrcItem$3[ebp], xmm0

; 274  : 		rrcItem.top    += dy * pItem->m_rrcSizing.top;

  000bc	f3 0f 58 5d d8	 addss	 xmm3, DWORD PTR _rrcItem$3[ebp+4]

; 275  : 		rrcItem.right  += dx * pItem->m_rrcSizing.right;

  000c1	f3 0f 58 55 dc	 addss	 xmm2, DWORD PTR _rrcItem$3[ebp+8]

; 276  : 		rrcItem.bottom += dy * pItem->m_rrcSizing.bottom;

  000c6	f3 0f 58 4d e0	 addss	 xmm1, DWORD PTR _rrcItem$3[ebp+12]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\ExResizeRect.h

; 60   : 	return left==rrc.left && top==rrc.top && right==rrc.right && bottom==rrc.bottom; 

  000cb	9f		 lahf
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 273  : 		rrcItem.left   += dx * pItem->m_rrcSizing.left;

  000cc	f3 0f 11 65 d4	 movss	 DWORD PTR _rrcItem$3[ebp], xmm4

; 274  : 		rrcItem.top    += dy * pItem->m_rrcSizing.top;

  000d1	f3 0f 11 5d d8	 movss	 DWORD PTR _rrcItem$3[ebp+4], xmm3

; 275  : 		rrcItem.right  += dx * pItem->m_rrcSizing.right;

  000d6	f3 0f 11 55 dc	 movss	 DWORD PTR _rrcItem$3[ebp+8], xmm2

; 276  : 		rrcItem.bottom += dy * pItem->m_rrcSizing.bottom;

  000db	f3 0f 11 4d e0	 movss	 DWORD PTR _rrcItem$3[ebp+12], xmm1
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\ExResizeRect.h

; 60   : 	return left==rrc.left && top==rrc.top && right==rrc.right && bottom==rrc.bottom; 

  000e0	f6 c4 44	 test	 ah, 68			; 00000044H
  000e3	7a 22		 jp	 SHORT $LN26@Defer
  000e5	0f 2e 5e 24	 ucomiss xmm3, DWORD PTR [esi+36]
  000e9	9f		 lahf
  000ea	f6 c4 44	 test	 ah, 68			; 00000044H
  000ed	7a 18		 jp	 SHORT $LN26@Defer
  000ef	0f 2e 56 28	 ucomiss xmm2, DWORD PTR [esi+40]
  000f3	9f		 lahf
  000f4	f6 c4 44	 test	 ah, 68			; 00000044H
  000f7	7a 0e		 jp	 SHORT $LN26@Defer
  000f9	0f 2e 4e 2c	 ucomiss xmm1, DWORD PTR [esi+44]
  000fd	9f		 lahf
  000fe	f6 c4 44	 test	 ah, 68			; 00000044H
  00101	0f 8b df 00 00
	00		 jnp	 $LN4@Defer
$LN26@Defer:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 280  : 			int x  = (int) rrcItem.left;

  00107	f3 0f 2c c4	 cvttss2si eax, xmm4
  0010b	53		 push	 ebx

; 281  : 			int y  = (int) rrcItem.top;

  0010c	0f 28 c2	 movaps	 xmm0, xmm2
  0010f	f3 0f 5c c4	 subss	 xmm0, xmm4
  00113	89 45 c0	 mov	 DWORD PTR _x$1$[ebp], eax
  00116	f3 0f 2c db	 cvttss2si ebx, xmm3

; 282  : 			int cx = (int) rrcItem.Width();

  0011a	f3 0f 2c c0	 cvttss2si eax, xmm0
  0011e	0f 28 c1	 movaps	 xmm0, xmm1
  00121	f3 0f 5c c3	 subss	 xmm0, xmm3
  00125	89 45 c4	 mov	 DWORD PTR _cx$1$[ebp], eax

; 283  : 			int cy = (int) rrcItem.Height();

  00128	f3 0f 2c c0	 cvttss2si eax, xmm0
  0012c	0f 57 c0	 xorps	 xmm0, xmm0
  0012f	89 45 c8	 mov	 DWORD PTR _cy$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 531  : 	bottom = 0;

  00132	f3 0f 2c c4	 cvttss2si eax, xmm4
  00136	0f 11 45 ec	 movups	 XMMWORD PTR _rOld$4[ebp], xmm0
  0013a	89 45 e4	 mov	 DWORD PTR tv798[ebp], eax
  0013d	f3 0f 2c c2	 cvttss2si eax, xmm2
  00141	89 45 e8	 mov	 DWORD PTR tv777[ebp], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\ExResizeRect.h

; 66   : 	return CRect((int) left, (int) top, (int) right, (int) bottom); 

  00144	f3 0f 2c c1	 cvttss2si eax, xmm1
  00148	89 45 cc	 mov	 DWORD PTR tv778[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0014b	8d 45 ec	 lea	 eax, DWORD PTR _rOld$4[ebp]
  0014e	50		 push	 eax
  0014f	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00152	ff 70 20	 push	 DWORD PTR [eax+32]
  00155	ff d2		 call	 edx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 293  : 			m_pwnd->ScreenToClient(&rOld);

  00157	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0015a	8d 45 ec	 lea	 eax, DWORD PTR _rOld$4[ebp]
  0015d	50		 push	 eax
  0015e	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 294  : 
; 295  : 			// if the x-y coordinates have not changed, there is no reason
; 296  : 			// to move the dialog item.
; 297  : 			if (rNew.TopLeft() == rOld.TopLeft())

  00163	8b 55 ec	 mov	 edx, DWORD PTR _rOld$4[ebp]
  00166	39 55 e4	 cmp	 DWORD PTR tv798[ebp], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 458  : 	return (x == point.x && y == point.y);

  00169	75 11		 jne	 SHORT $LN42@Defer
  0016b	3b 5d f0	 cmp	 ebx, DWORD PTR _rOld$4[ebp+4]
  0016e	75 0c		 jne	 SHORT $LN42@Defer
  00170	bf 16 03 00 00	 mov	 edi, 790		; 00000316H
  00175	b9 17 02 00 00	 mov	 ecx, 535		; 00000217H
  0017a	eb 0a		 jmp	 SHORT $LN43@Defer
$LN42@Defer:
  0017c	bf 14 03 00 00	 mov	 edi, 788		; 00000314H
  00181	b9 15 02 00 00	 mov	 ecx, 533		; 00000215H
$LN43@Defer:

; 586  : 	return CSize(right - left, bottom - top);

  00186	8b 45 f4	 mov	 eax, DWORD PTR _rOld$4[ebp+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 303  : 			if (rNew.Size() == rOld.Size())

  00189	8b 75 e4	 mov	 esi, DWORD PTR tv798[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 586  : 	return CSize(right - left, bottom - top);

  0018c	2b c2		 sub	 eax, edx
  0018e	8b 55 f8	 mov	 edx, DWORD PTR _rOld$4[ebp+12]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 303  : 			if (rNew.Size() == rOld.Size())

  00191	29 75 e8	 sub	 DWORD PTR tv777[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 586  : 	return CSize(right - left, bottom - top);

  00194	2b 55 f0	 sub	 edx, DWORD PTR _rOld$4[ebp+4]

; 334  : 	return (cx == size.cx && cy == size.cy);

  00197	8b 75 d0	 mov	 esi, DWORD PTR _pItem$GSCopy$1$[ebp]

; 313  : 	cy = initCY;

  0019a	39 45 e8	 cmp	 DWORD PTR tv777[ebp], eax

; 334  : 	return (cx == size.cx && cy == size.cy);

  0019d	75 09		 jne	 SHORT $LN6@Defer

; 312  : 	cx = initCX;

  0019f	8b 45 cc	 mov	 eax, DWORD PTR tv778[ebp]
  001a2	2b c3		 sub	 eax, ebx

; 334  : 	return (cx == size.cx && cy == size.cy);

  001a4	3b c2		 cmp	 eax, edx
  001a6	74 02		 je	 SHORT $LN7@Defer
$LN6@Defer:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 306  : 				uFlags |= SWP_NOCOPYBITS;

  001a8	8b cf		 mov	 ecx, edi
$LN7@Defer:

; 307  : 			
; 308  : 			hDWP = ::DeferWindowPos(hDWP, hWnd, 0, x, y, cx, cy, uFlags);

  001aa	8b 7d b8	 mov	 edi, DWORD PTR _hDWP$GSCopy$1$[ebp]
  001ad	51		 push	 ecx
  001ae	ff 75 c8	 push	 DWORD PTR _cy$1$[ebp]
  001b1	ff 75 c4	 push	 DWORD PTR _cx$1$[ebp]
  001b4	53		 push	 ebx
  001b5	ff 75 c0	 push	 DWORD PTR _x$1$[ebp]
  001b8	6a 00		 push	 0
  001ba	ff 75 bc	 push	 DWORD PTR _hWnd$1$[ebp]
  001bd	ff 37		 push	 DWORD PTR [edi]
  001bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeferWindowPos@32
  001c5	89 07		 mov	 DWORD PTR [edi], eax
  001c7	5b		 pop	 ebx

; 309  : 			if (hDWP ==  NULL)

  001c8	85 c0		 test	 eax, eax
  001ca	75 12		 jne	 SHORT $LN8@Defer

; 315  : 		}
; 316  : 	}
; 317  : 	return TRUE;
; 318  : }

  001cc	5f		 pop	 edi
  001cd	5e		 pop	 esi
  001ce	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001d1	33 cd		 xor	 ecx, ebp
  001d3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001d8	8b e5		 mov	 esp, ebp
  001da	5d		 pop	 ebp
  001db	c2 10 00	 ret	 16			; 00000010H
$LN8@Defer:

; 310  : 			{
; 311  : 				TRACE(_T("DeferWindowPos failed for ID %i\n"), GetDlgCtrlID(hWnd));
; 312  : 				return FALSE;
; 313  : 			}
; 314  : 			pItem->m_rrcWindow = rrcItem;

  001de	0f 10 45 d4	 movups	 xmm0, XMMWORD PTR _rrcItem$3[ebp]
  001e2	0f 11 46 20	 movups	 XMMWORD PTR [esi+32], xmm0
$LN4@Defer:

; 315  : 		}
; 316  : 	}
; 317  : 	return TRUE;
; 318  : }

  001e6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001e9	b8 01 00 00 00	 mov	 eax, 1
  001ee	5f		 pop	 edi
  001ef	33 cd		 xor	 ecx, ebp
  001f1	5e		 pop	 esi
  001f2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f7	8b e5		 mov	 esp, ebp
  001f9	5d		 pop	 ebp
  001fa	c2 10 00	 ret	 16			; 00000010H
?Defer@CExResize@@IAEHAAPAXPAVCExItem@@HH@Z ENDP	; CExResize::Defer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?SetFlag@CExResize@@IAEXW4EFlags@1@@Z
_TEXT	SEGMENT
_eFlag$ = 8						; size = 4
?SetFlag@CExResize@@IAEXW4EFlags@1@@Z PROC		; CExResize::SetFlag, COMDAT
; _this$ = ecx

; 377  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 378  : 	m_nFlagsXX &= (eFlag^0xFFFFFFFF);

  00003	8b 55 08	 mov	 edx, DWORD PTR _eFlag$[ebp]
  00006	f7 d2		 not	 edx
  00008	23 51 08	 and	 edx, DWORD PTR [ecx+8]

; 379  : 	m_nFlagsXX |= eFlag;

  0000b	0b 55 08	 or	 edx, DWORD PTR _eFlag$[ebp]
  0000e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 380  : }

  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?SetFlag@CExResize@@IAEXW4EFlags@1@@Z ENDP		; CExResize::SetFlag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\ExResize.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?GetMinMaxInfo@CExResize@@IAEXPAUtagMINMAXINFO@@@Z
_TEXT	SEGMENT
_pMMI$ = 8						; size = 4
?GetMinMaxInfo@CExResize@@IAEXPAUtagMINMAXINFO@@@Z PROC	; CExResize::GetMinMaxInfo, COMDAT
; _this$ = ecx

; 321  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 643  : 	return (left == 0 && right == 0 && top == 0 && bottom == 0);

  00003	83 79 10 00	 cmp	 DWORD PTR [ecx+16], 0
  00007	8b 55 08	 mov	 edx, DWORD PTR _pMMI$[ebp]
  0000a	75 12		 jne	 SHORT $LN12@GetMinMaxI
  0000c	83 79 18 00	 cmp	 DWORD PTR [ecx+24], 0
  00010	75 0c		 jne	 SHORT $LN12@GetMinMaxI
  00012	83 79 14 00	 cmp	 DWORD PTR [ecx+20], 0
  00016	75 06		 jne	 SHORT $LN12@GetMinMaxI
  00018	83 79 1c 00	 cmp	 DWORD PTR [ecx+28], 0
  0001c	74 26		 je	 SHORT $LN4@GetMinMaxI
$LN12@GetMinMaxI:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\ExResize.h

; 131  : 	return (m_nFlagsXX & eFlag) != 0;

  0001e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 324  : 		if (HasFlag(SZ_NOHORISONTAL))

  00021	a8 02		 test	 al, 2
  00023	74 0f		 je	 SHORT $LN3@GetMinMaxI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  00025	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00028	2b 41 10	 sub	 eax, DWORD PTR [ecx+16]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 326  : 			pMMI->ptMaxTrackSize.x = pMMI->ptMaxSize.x = m_rcWindow.Width();

  0002b	89 42 08	 mov	 DWORD PTR [edx+8], eax
  0002e	89 42 20	 mov	 DWORD PTR [edx+32], eax
  00031	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
$LN3@GetMinMaxI:

; 327  : 		}
; 328  : 		if (HasFlag(SZ_NOVERTICAL))

  00034	a8 04		 test	 al, 4
  00036	74 0c		 je	 SHORT $LN4@GetMinMaxI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 581  : 	return bottom - top;

  00038	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  0003b	2b 41 14	 sub	 eax, DWORD PTR [ecx+20]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 330  : 			pMMI->ptMaxTrackSize.y = pMMI->ptMaxSize.y = m_rcWindow.Height();

  0003e	89 42 0c	 mov	 DWORD PTR [edx+12], eax
  00041	89 42 24	 mov	 DWORD PTR [edx+36], eax
$LN4@GetMinMaxI:

; 331  : 		}
; 332  : 	}
; 333  : 	if (m_szMin.cx != 0) pMMI->ptMinTrackSize.x = m_szMin.cx;

  00044	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  00047	85 c0		 test	 eax, eax
  00049	74 03		 je	 SHORT $LN5@GetMinMaxI
  0004b	89 42 18	 mov	 DWORD PTR [edx+24], eax
$LN5@GetMinMaxI:

; 334  : 	if (m_szMin.cy != 0) pMMI->ptMinTrackSize.y = m_szMin.cy;

  0004e	8b 41 34	 mov	 eax, DWORD PTR [ecx+52]
  00051	85 c0		 test	 eax, eax
  00053	74 03		 je	 SHORT $LN6@GetMinMaxI
  00055	89 42 1c	 mov	 DWORD PTR [edx+28], eax
$LN6@GetMinMaxI:

; 335  : 	if (m_szMax.cx != 0) pMMI->ptMaxTrackSize.x = m_szMax.cx;

  00058	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  0005b	85 c0		 test	 eax, eax
  0005d	74 03		 je	 SHORT $LN7@GetMinMaxI
  0005f	89 42 20	 mov	 DWORD PTR [edx+32], eax
$LN7@GetMinMaxI:

; 336  : 	if (m_szMax.cy != 0) pMMI->ptMaxTrackSize.y = m_szMax.cy;

  00062	8b 41 3c	 mov	 eax, DWORD PTR [ecx+60]
  00065	85 c0		 test	 eax, eax
  00067	74 03		 je	 SHORT $LN8@GetMinMaxI
  00069	89 42 24	 mov	 DWORD PTR [edx+36], eax
$LN8@GetMinMaxI:

; 337  : }

  0006c	5d		 pop	 ebp
  0006d	c2 04 00	 ret	 4
?GetMinMaxInfo@CExResize@@IAEXPAUtagMINMAXINFO@@@Z ENDP	; CExResize::GetMinMaxInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?Reset@CExResize@@IAEXXZ
_TEXT	SEGMENT
?Reset@CExResize@@IAEXXZ PROC				; CExResize::Reset, COMDAT
; _this$ = ecx

; 244  : {

  00000	8b d1		 mov	 edx, ecx

; 245  : 	int iSize = m_arrItems.GetSize();
; 246  : 	int i;
; 247  : 	for (i = 0; i < iSize; i++)

  00002	33 c0		 xor	 eax, eax
  00004	56		 push	 esi
  00005	8b b2 e0 00 00
	00		 mov	 esi, DWORD PTR [edx+224]
  0000b	85 f6		 test	 esi, esi
  0000d	7e 2a		 jle	 SHORT $LN3@Reset
  0000f	90		 npad	 1
$LL4@Reset:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 321  : 	if(nIndex >= 0 && nIndex < m_nSize)

  00010	85 c0		 test	 eax, eax
  00012	78 27		 js	 SHORT $LN9@Reset
  00014	3b 82 e0 00 00
	00		 cmp	 eax, DWORD PTR [edx+224]
  0001a	7d 1f		 jge	 SHORT $LN9@Reset
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 249  : 		CExItem* pItem = m_arrItems[i];

  0001c	8b 8a dc 00 00
	00		 mov	 ecx, DWORD PTR [edx+220]
  00022	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  00025	40		 inc	 eax

; 250  : 		pItem->m_bInitialSize = FALSE;

  00026	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 251  : 		pItem->m_rrcWindow = pItem->m_rrcInitWindow;

  0002d	0f 10 41 30	 movups	 xmm0, XMMWORD PTR [ecx+48]
  00031	0f 11 41 20	 movups	 XMMWORD PTR [ecx+32], xmm0
  00035	3b c6		 cmp	 eax, esi
  00037	7c d7		 jl	 SHORT $LL4@Reset
$LN3@Reset:
  00039	5e		 pop	 esi

; 253  : }

  0003a	c3		 ret	 0
$LN9@Reset:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 323  : 	AfxThrowInvalidArgException();

  0003b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN17@Reset:
  00040	cc		 int	 3
?Reset@CExResize@@IAEXXZ ENDP				; CExResize::Reset
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\tchar.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?Size@CExResize@@IAEXXZ
_TEXT	SEGMENT
_hDWP$1 = -36						; size = 4
_hWnd$1$ = -32						; size = 4
_dx$1$ = -32						; size = 4
_rcWindow$2 = -28					; size = 16
_szClass$3 = -12					; size = 8
_dy$1$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?Size@CExResize@@IAEXXZ PROC				; CExResize::Size, COMDAT
; _this$ = ecx

; 208  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	57		 push	 edi
  00011	8b f9		 mov	 edi, ecx

; 209  : 	if (m_arrItems.GetSize() > 0)

  00013	83 bf e0 00 00
	00 00		 cmp	 DWORD PTR [edi+224], 0
  0001a	0f 8e 2f 01 00
	00		 jle	 $LN8@Size
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00020	53		 push	 ebx
  00021	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00022	8d 45 e4	 lea	 eax, DWORD PTR _rcWindow$2[ebp]
  00025	0f 57 c0	 xorps	 xmm0, xmm0
  00028	50		 push	 eax
  00029	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  0002c	0f 11 45 e4	 movups	 XMMWORD PTR _rcWindow$2[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00030	ff 70 20	 push	 DWORD PTR [eax+32]
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  00039	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 217  : 		BOOL bDefered = FALSE;

  0003c	33 db		 xor	 ebx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  0003e	2b 47 18	 sub	 eax, DWORD PTR [edi+24]
  00041	2b 45 e4	 sub	 eax, DWORD PTR _rcWindow$2[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 214  : 		int dx = rcWindow.Width()  - m_rcWindow.Width();

  00044	03 45 ec	 add	 eax, DWORD PTR _rcWindow$2[ebp+8]

; 218  : 		HDWP hDWP = ::BeginDeferWindowPos(m_arrItems.GetSize());

  00047	ff b7 e0 00 00
	00		 push	 DWORD PTR [edi+224]
  0004d	89 45 e0	 mov	 DWORD PTR _dx$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 581  : 	return bottom - top;

  00050	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  00053	2b 47 1c	 sub	 eax, DWORD PTR [edi+28]
  00056	2b 45 e8	 sub	 eax, DWORD PTR _rcWindow$2[ebp+4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 215  : 		int dy = rcWindow.Height() - m_rcWindow.Height();

  00059	03 45 f0	 add	 eax, DWORD PTR _rcWindow$2[ebp+12]
  0005c	89 45 f8	 mov	 DWORD PTR _dy$1$[ebp], eax

; 218  : 		HDWP hDWP = ::BeginDeferWindowPos(m_arrItems.GetSize());

  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__BeginDeferWindowPos@4

; 219  : 		
; 220  : 		int i;
; 221  : 		for (i = 0; i < m_arrItems.GetSize(); i++)

  00065	8b 97 e0 00 00
	00		 mov	 edx, DWORD PTR [edi+224]
  0006b	33 f6		 xor	 esi, esi
  0006d	89 45 dc	 mov	 DWORD PTR _hDWP$1[ebp], eax
  00070	8b ca		 mov	 ecx, edx
  00072	85 d2		 test	 edx, edx
  00074	7e 44		 jle	 SHORT $LN3@Size
$LL4@Size:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 321  : 	if(nIndex >= 0 && nIndex < m_nSize)

  00076	85 f6		 test	 esi, esi
  00078	0f 88 e0 00 00
	00		 js	 $LN35@Size
  0007e	3b f1		 cmp	 esi, ecx
  00080	0f 8d d8 00 00
	00		 jge	 $LN35@Size
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 223  : 			if (Defer(hDWP, m_arrItems[i], dx, dy))

  00086	ff 75 f8	 push	 DWORD PTR _dy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 322  : 		return m_pData[nIndex];

  00089	8b 87 dc 00 00
	00		 mov	 eax, DWORD PTR [edi+220]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 223  : 			if (Defer(hDWP, m_arrItems[i], dx, dy))

  0008f	8b cf		 mov	 ecx, edi
  00091	ff 75 e0	 push	 DWORD PTR _dx$1$[ebp]
  00094	ff 34 b0	 push	 DWORD PTR [eax+esi*4]
  00097	8d 45 dc	 lea	 eax, DWORD PTR _hDWP$1[ebp]
  0009a	50		 push	 eax
  0009b	e8 00 00 00 00	 call	 ?Defer@CExResize@@IAEHAAPAXPAVCExItem@@HH@Z ; CExResize::Defer
  000a0	8b 97 e0 00 00
	00		 mov	 edx, DWORD PTR [edi+224]
  000a6	85 c0		 test	 eax, eax
  000a8	b8 01 00 00 00	 mov	 eax, 1
  000ad	8b ca		 mov	 ecx, edx
  000af	0f 45 d8	 cmovne	 ebx, eax
  000b2	46		 inc	 esi
  000b3	3b f2		 cmp	 esi, edx
  000b5	7c bf		 jl	 SHORT $LL4@Size

; 219  : 		
; 220  : 		int i;
; 221  : 		for (i = 0; i < m_arrItems.GetSize(); i++)

  000b7	8b 45 dc	 mov	 eax, DWORD PTR _hDWP$1[ebp]
$LN3@Size:

; 224  : 				bDefered = TRUE;
; 225  : 		}
; 226  : 
; 227  : 		if (bDefered)

  000ba	85 db		 test	 ebx, ebx
  000bc	74 0f		 je	 SHORT $LN10@Size

; 228  : 			::EndDeferWindowPos(hDWP);

  000be	50		 push	 eax
  000bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDeferWindowPos@4
  000c5	8b 97 e0 00 00
	00		 mov	 edx, DWORD PTR [edi+224]
  000cb	8b ca		 mov	 ecx, edx
$LN10@Size:

; 230  : 		for (i = 0; i < m_arrItems.GetSize(); i++)

  000cd	33 f6		 xor	 esi, esi
  000cf	85 d2		 test	 edx, edx
  000d1	7e 72		 jle	 SHORT $LN6@Size
$LL7@Size:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 321  : 	if(nIndex >= 0 && nIndex < m_nSize)

  000d3	85 f6		 test	 esi, esi
  000d5	0f 88 83 00 00
	00		 js	 $LN35@Size
  000db	3b f1		 cmp	 esi, ecx
  000dd	7d 7f		 jge	 SHORT $LN35@Size
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 232  : 			CWnd* pWnd = m_arrItems[i]->m_pwnd;

  000df	8b 87 dc 00 00
	00		 mov	 eax, DWORD PTR [edi+220]
  000e5	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]
  000e8	8b 58 0c	 mov	 ebx, DWORD PTR [eax+12]

; 233  : 			if (pWnd && _IsGroupBox(pWnd->m_hWnd))

  000eb	85 db		 test	 ebx, ebx
  000ed	74 4b		 je	 SHORT $LN5@Size
  000ef	8b 43 20	 mov	 eax, DWORD PTR [ebx+32]

; 83   : 	::GetClassName( hWnd, szClass, 8 );

  000f2	8d 4d f4	 lea	 ecx, DWORD PTR _szClass$3[ebp]
  000f5	6a 08		 push	 8
  000f7	51		 push	 ecx
  000f8	50		 push	 eax

; 233  : 			if (pWnd && _IsGroupBox(pWnd->m_hWnd))

  000f9	89 45 e0	 mov	 DWORD PTR _hWnd$1$[ebp], eax

; 83   : 	::GetClassName( hWnd, szClass, 8 );

  000fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClassNameA@12
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\tchar.h

; 1634 :     return _mbsicmp((const unsigned char *)_String1,(const unsigned char *)_String2);

  00102	8d 45 f4	 lea	 eax, DWORD PTR _szClass$3[ebp]
  00105	68 00 00 00 00	 push	 OFFSET ??_C@_06LKBCGDFD@Button@
  0010a	50		 push	 eax
  0010b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___mbsicmp
  00111	83 c4 08	 add	 esp, 8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 85   : 	if ( _tcsicmp( szClass, _T( "Button" ) ) == 0 )

  00114	85 c0		 test	 eax, eax
  00116	75 22		 jne	 SHORT $LN5@Size

; 86   : 	{
; 87   : 		DWORD dwStyle = ::GetWindowLong( hWnd, GWL_STYLE );

  00118	6a f0		 push	 -16			; fffffff0H
  0011a	ff 75 e0	 push	 DWORD PTR _hWnd$1$[ebp]
  0011d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongA@8

; 88   : 		if ( ( dwStyle & ( BS_GROUPBOX|WS_TABSTOP ) ) == BS_GROUPBOX )

  00123	25 07 00 01 00	 and	 eax, 65543		; 00010007H
  00128	83 f8 07	 cmp	 eax, 7
  0012b	75 0d		 jne	 SHORT $LN5@Size
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 114  : 	{ ASSERT(::IsWindow(m_hWnd)); ::InvalidateRect(m_hWnd, NULL, bErase); }

  0012d	6a 01		 push	 1
  0012f	6a 00		 push	 0
  00131	ff 73 20	 push	 DWORD PTR [ebx+32]
  00134	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InvalidateRect@12
$LN5@Size:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 230  : 		for (i = 0; i < m_arrItems.GetSize(); i++)

  0013a	8b 8f e0 00 00
	00		 mov	 ecx, DWORD PTR [edi+224]
  00140	46		 inc	 esi
  00141	3b f1		 cmp	 esi, ecx
  00143	7c 8e		 jl	 SHORT $LL7@Size
$LN6@Size:

; 234  : 			{
; 235  : 				pWnd->Invalidate();
; 236  : 			}
; 237  : 		}
; 238  : 
; 239  : 		m_rcWindow = rcWindow;

  00145	0f 10 45 e4	 movups	 xmm0, XMMWORD PTR _rcWindow$2[ebp]
  00149	5e		 pop	 esi
  0014a	5b		 pop	 ebx
  0014b	0f 11 47 10	 movups	 XMMWORD PTR [edi+16], xmm0
$LN8@Size:

; 241  : }

  0014f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00152	33 cd		 xor	 ecx, ebp
  00154	5f		 pop	 edi
  00155	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0015a	8b e5		 mov	 esp, ebp
  0015c	5d		 pop	 ebp
  0015d	c3		 ret	 0
$LN35@Size:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 323  : 	AfxThrowInvalidArgException();

  0015e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN55@Size:
  00163	cc		 int	 3
?Size@CExResize@@IAEXXZ ENDP				; CExResize::Size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\ExResize.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\ExResize.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\ExResize.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?Init@CExResize@@IAEXXZ
_TEXT	SEGMENT
$T1 = -52						; size = 16
$T2 = -52						; size = 16
_rcClient$3 = -36					; size = 16
_rcIcon$4 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?Init@CExResize@@IAEXXZ PROC				; CExResize::Init, COMDAT
; _this$ = ecx

; 164  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	57		 push	 edi
  00011	8b f9		 mov	 edi, ecx

; 165  : 	if(m_pwnd == NULL)

  00013	83 7f 0c 00	 cmp	 DWORD PTR [edi+12], 0
  00017	0f 84 17 01 00
	00		 je	 $LN5@Init

; 166  : 		return;
; 167  : 
; 168  : 	// clear the control list when initializing.  The reason for this is we may have a
; 169  : 	// static window that calls Init() multiple times for example CDialog::DoModal().
; 170  : 	RemoveAllControls();

  0001d	56		 push	 esi
  0001e	e8 00 00 00 00	 call	 ?RemoveAllControls@CExResize@@IAEXXZ ; CExResize::RemoveAllControls
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00023	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 173  : 	m_pwnd->GetWindowRect(m_rcInitWindow);

  00026	8d 77 20	 lea	 esi, DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00029	56		 push	 esi
  0002a	ff 70 20	 push	 DWORD PTR [eax+32]
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 174  : 	m_rcWindow = m_rcInitWindow;

  00033	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\ExResize.h

; 131  : 	return (m_nFlagsXX & eFlag) != 0;

  00036	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 174  : 	m_rcWindow = m_rcInitWindow;

  00039	0f 11 47 10	 movups	 XMMWORD PTR [edi+16], xmm0

; 175  : 
; 176  : 	if (!HasFlag(SZ_NOMINSIZE)) 

  0003d	f6 c1 08	 test	 cl, 8
  00040	75 12		 jne	 SHORT $LN3@Init
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  00042	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00045	2b 47 10	 sub	 eax, DWORD PTR [edi+16]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 179  : 		m_szMin.cx = m_rcWindow.Width(); 

  00048	89 47 30	 mov	 DWORD PTR [edi+48], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 581  : 	return bottom - top;

  0004b	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  0004e	2b 47 14	 sub	 eax, DWORD PTR [edi+20]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 180  : 		m_szMin.cy = m_rcWindow.Height(); 

  00051	89 47 34	 mov	 DWORD PTR [edi+52], eax
$LN3@Init:

; 181  : 	}
; 182  : 
; 183  : 	// set the clip children style to prevent flickering
; 184  : 	if (!HasFlag(SZ_NOCLIPCHILDREN)) 

  00054	f6 c1 10	 test	 cl, 16			; 00000010H
  00057	75 14		 jne	 SHORT $LN4@Init

; 185  : 	{
; 186  : 		m_pwnd->ModifyStyle(0, WS_CLIPCHILDREN);

  00059	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0005c	6a 00		 push	 0
  0005e	68 00 00 00 02	 push	 33554432		; 02000000H
  00063	6a 00		 push	 0
  00065	e8 00 00 00 00	 call	 ?ModifyStyle@CWnd@@QAEHKKI@Z ; CWnd::ModifyStyle
  0006a	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
$LN4@Init:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\ExResize.h

; 131  : 	return (m_nFlagsXX & eFlag) != 0;

  0006d	f6 c1 01	 test	 cl, 1
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 190  : 	if (!HasFlag(SZ_NOSIZEICON))

  00070	0f 85 bd 00 00
	00		 jne	 $LN41@Init

; 193  : 		if (!m_scSizeIcon.GetSafeHwnd())

  00076	53		 push	 ebx
  00077	8d 5f 48	 lea	 ebx, DWORD PTR [edi+72]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 25   : 	{ return this == NULL ? NULL : m_hWnd; }

  0007a	85 db		 test	 ebx, ebx
  0007c	74 06		 je	 SHORT $LN40@Init
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 193  : 		if (!m_scSizeIcon.GetSafeHwnd())

  0007e	83 7b 20 00	 cmp	 DWORD PTR [ebx+32], 0
  00082	75 28		 jne	 SHORT $LN6@Init
$LN40@Init:

; 194  : 			m_scSizeIcon.Create(0, WS_CHILD | WS_VISIBLE | SS_BITMAP | SS_NOTIFY, CRect(0,0,16,16), m_pwnd, IDC_SIZEICON);

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 540  : 	left = l;

  00089	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@00000010000000100000000000000000
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 194  : 			m_scSizeIcon.Create(0, WS_CHILD | WS_VISIBLE | SS_BITMAP | SS_NOTIFY, CRect(0,0,16,16), m_pwnd, IDC_SIZEICON);

  00090	68 ff 7f 00 00	 push	 32767			; 00007fffH
  00095	ff 77 0c	 push	 DWORD PTR [edi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 540  : 	left = l;

  00098	0f 11 45 cc	 movups	 XMMWORD PTR $T2[ebp], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 194  : 			m_scSizeIcon.Create(0, WS_CHILD | WS_VISIBLE | SS_BITMAP | SS_NOTIFY, CRect(0,0,16,16), m_pwnd, IDC_SIZEICON);

  0009c	51		 push	 ecx
  0009d	68 0e 01 00 50	 push	 1342177550		; 5000010eH
  000a2	6a 00		 push	 0
  000a4	8b cb		 mov	 ecx, ebx
  000a6	ff 90 6c 01 00
	00		 call	 DWORD PTR [eax+364]
$LN6@Init:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 86   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetClientRect(m_hWnd, lpRect); }

  000ac	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetClientRect@8
  000b2	8d 45 dc	 lea	 eax, DWORD PTR _rcClient$3[ebp]
  000b5	50		 push	 eax
  000b6	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  000b9	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  000bc	0f 11 45 ec	 movups	 XMMWORD PTR _rcIcon$4[ebp], xmm0
  000c0	0f 11 45 dc	 movups	 XMMWORD PTR _rcClient$3[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 86   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetClientRect(m_hWnd, lpRect); }

  000c4	ff 70 20	 push	 DWORD PTR [eax+32]
  000c7	ff d6		 call	 esi
  000c9	8d 45 ec	 lea	 eax, DWORD PTR _rcIcon$4[ebp]
  000cc	50		 push	 eax
  000cd	ff 77 68	 push	 DWORD PTR [edi+104]
  000d0	ff d6		 call	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 200  : 		m_scSizeIcon.SetWindowPos(&CWnd::wndTop, rcClient.right-rcIcon.Width(),

  000d2	8b 45 f0	 mov	 eax, DWORD PTR _rcIcon$4[ebp+4]
  000d5	8b cb		 mov	 ecx, ebx
  000d7	2b 45 f8	 sub	 eax, DWORD PTR _rcIcon$4[ebp+12]
  000da	03 45 e8	 add	 eax, DWORD PTR _rcClient$3[ebp+12]
  000dd	6a 01		 push	 1
  000df	6a 00		 push	 0
  000e1	6a 00		 push	 0
  000e3	50		 push	 eax
  000e4	8b 45 ec	 mov	 eax, DWORD PTR _rcIcon$4[ebp]
  000e7	2b 45 f4	 sub	 eax, DWORD PTR _rcIcon$4[ebp+8]
  000ea	03 45 e4	 add	 eax, DWORD PTR _rcClient$3[ebp+8]
  000ed	50		 push	 eax
  000ee	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?wndTop@CWnd@@2V1@B
  000f4	e8 00 00 00 00	 call	 ?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z ; CWnd::SetWindowPos

; 201  : 			rcClient.bottom-rcIcon.Height(), 0, 0, SWP_NOSIZE);
; 202  : 
; 203  : 		SetResize(IDC_SIZEICON, SZ_REPOS(1));

  000f9	83 ec 10	 sub	 esp, 16			; 00000010H
  000fc	8d 4d cc	 lea	 ecx, DWORD PTR $T1[ebp]
  000ff	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00107	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0010f	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00117	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0011e	e8 00 00 00 00	 call	 ??0CExResizeRect@@QAE@MMMM@Z ; CExResizeRect::CExResizeRect
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\ExResize.h

; 137  : 	SetResize(nID,NULL,rrcSizing);

  00123	50		 push	 eax
  00124	6a 00		 push	 0
  00126	68 ff 7f 00 00	 push	 32767			; 00007fffH
  0012b	8b cf		 mov	 ecx, edi
  0012d	e8 00 00 00 00	 call	 ?SetResize@CExResize@@QAEXIQAUHWND__@@ABUEX_RESIZERECT@@@Z ; CExResize::SetResize
  00132	5b		 pop	 ebx
$LN41@Init:
  00133	5e		 pop	 esi
$LN5@Init:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 205  : }

  00134	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00137	33 cd		 xor	 ecx, ebp
  00139	5f		 pop	 edi
  0013a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013f	8b e5		 mov	 esp, ebp
  00141	5d		 pop	 ebp
  00142	c3		 ret	 0
?Init@CExResize@@IAEXXZ ENDP				; CExResize::Init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?RemoveAllControls@CExResize@@IAEXXZ
_TEXT	SEGMENT
?RemoveAllControls@CExResize@@IAEXXZ PROC		; CExResize::RemoveAllControls, COMDAT
; _this$ = ecx

; 67   : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 68   : 	// free allocated memory
; 69   : 	int iIndex;
; 70   : 	for (iIndex = 0; iIndex < m_arrItems.GetSize(); ++iIndex)

  00004	33 f6		 xor	 esi, esi
  00006	8b 87 e0 00 00
	00		 mov	 eax, DWORD PTR [edi+224]
  0000c	85 c0		 test	 eax, eax
  0000e	7e 26		 jle	 SHORT $LN3@RemoveAllC
$LL4@RemoveAllC:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 288  : 	if(nIndex >= 0 && nIndex < m_nSize)

  00010	85 f6		 test	 esi, esi
  00012	78 56		 js	 SHORT $LN10@RemoveAllC
  00014	3b f0		 cmp	 esi, eax
  00016	7d 52		 jge	 SHORT $LN10@RemoveAllC
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 72   : 		CExItem* pItem = m_arrItems.GetAt(iIndex);

  00018	8b 87 dc 00 00
	00		 mov	 eax, DWORD PTR [edi+220]
  0001e	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]

; 73   : 		SAFE_DELETE( pItem );

  00021	85 c9		 test	 ecx, ecx
  00023	74 06		 je	 SHORT $LN2@RemoveAllC
  00025	8b 01		 mov	 eax, DWORD PTR [ecx]
  00027	6a 01		 push	 1
  00029	ff 10		 call	 DWORD PTR [eax]
$LN2@RemoveAllC:

; 68   : 	// free allocated memory
; 69   : 	int iIndex;
; 70   : 	for (iIndex = 0; iIndex < m_arrItems.GetSize(); ++iIndex)

  0002b	8b 87 e0 00 00
	00		 mov	 eax, DWORD PTR [edi+224]
  00031	46		 inc	 esi
  00032	3b f0		 cmp	 esi, eax
  00034	7c da		 jl	 SHORT $LL4@RemoveAllC
$LN3@RemoveAllC:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 381  : 		if (m_pData != NULL)

  00036	8b 87 dc 00 00
	00		 mov	 eax, DWORD PTR [edi+220]
  0003c	85 c0		 test	 eax, eax
  0003e	74 13		 je	 SHORT $LN35@RemoveAllC

; 382  : 		{
; 383  : 			for( int i = 0; i < m_nSize; i++ )
; 384  : 				(m_pData + i)->~TYPE();
; 385  : 			delete[] (BYTE*)m_pData;

  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00046	83 c4 04	 add	 esp, 4

; 386  : 			m_pData = NULL;

  00049	c7 87 dc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+220], 0
$LN35@RemoveAllC:

; 387  : 		}
; 388  : 		m_nSize = m_nMaxSize = 0;

  00053	c7 87 e4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+228], 0
  0005d	c7 87 e0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+224], 0
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 78   : }

  00069	c3		 ret	 0
$LN10@RemoveAllC:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 290  : 	AfxThrowInvalidArgException();

  0006a	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN71@RemoveAllC:
  0006f	cc		 int	 3
?RemoveAllControls@CExResize@@IAEXXZ ENDP		; CExResize::RemoveAllControls
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlchecked.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlchecked.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?RemoveResize@CExResize@@IAEHI@Z
_TEXT	SEGMENT
_pItem$1$ = -4						; size = 4
_nID$ = 8						; size = 4
?RemoveResize@CExResize@@IAEHI@Z PROC			; CExResize::RemoveResize, COMDAT
; _this$ = ecx

; 43   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx

; 44   : 	// search for an item with the given id
; 45   : 	int iItem;
; 46   : 	for (iItem = m_arrItems.GetSize(); iItem--; )

  00009	8b b7 e0 00 00
	00		 mov	 esi, DWORD PTR [edi+224]
  0000f	85 f6		 test	 esi, esi
  00011	74 52		 je	 SHORT $LN43@RemoveResi
$LL2@RemoveResi:
  00013	8b de		 mov	 ebx, esi
  00015	83 ee 01	 sub	 esi, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 321  : 	if(nIndex >= 0 && nIndex < m_nSize)

  00018	0f 88 d2 00 00
	00		 js	 $LN14@RemoveResi
  0001e	3b b7 e0 00 00
	00		 cmp	 esi, DWORD PTR [edi+224]
  00024	0f 8d c6 00 00
	00		 jge	 $LN14@RemoveResi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 48   : 		CWnd* pWnd = m_arrItems[iItem]->m_pwnd;

  0002a	8b 87 dc 00 00
	00		 mov	 eax, DWORD PTR [edi+220]
  00030	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]

; 49   : 		ASSERT_VALID(pWnd);
; 50   : 
; 51   : 		if (pWnd->GetDlgCtrlID() == (int) nID)

  00033	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00036	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID
  0003b	3b 45 08	 cmp	 eax, DWORD PTR _nID$[ebp]
  0003e	75 21		 jne	 SHORT $LN50@RemoveResi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 321  : 	if(nIndex >= 0 && nIndex < m_nSize)

  00040	8b 87 e0 00 00
	00		 mov	 eax, DWORD PTR [edi+224]
  00046	3b f0		 cmp	 esi, eax
  00048	0f 8d a2 00 00
	00		 jge	 $LN14@RemoveResi

; 322  : 		return m_pData[nIndex];

  0004e	8b 8f dc 00 00
	00		 mov	 ecx, DWORD PTR [edi+220]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 53   : 			CExItem* pItem = m_arrItems[iItem];

  00054	8b 14 b1	 mov	 edx, DWORD PTR [ecx+esi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 322  : 		return m_pData[nIndex];

  00057	8d 0c b1	 lea	 ecx, DWORD PTR [ecx+esi*4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 53   : 			CExItem* pItem = m_arrItems[iItem];

  0005a	89 55 fc	 mov	 DWORD PTR _pItem$1$[ebp], edx

; 54   : 			if (pItem != NULL)

  0005d	85 d2		 test	 edx, edx
  0005f	75 0f		 jne	 SHORT $LN42@RemoveResi
$LN50@RemoveResi:

; 44   : 	// search for an item with the given id
; 45   : 	int iItem;
; 46   : 	for (iItem = m_arrItems.GetSize(); iItem--; )

  00061	85 f6		 test	 esi, esi
  00063	75 ae		 jne	 SHORT $LL2@RemoveResi
$LN43@RemoveResi:
  00065	5f		 pop	 edi

; 64   : }

  00066	5e		 pop	 esi
  00067	33 c0		 xor	 eax, eax
  00069	5b		 pop	 ebx
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c2 04 00	 ret	 4
$LN42@RemoveResi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 597  : 	if(nIndex < 0 || nCount < 0 || (nUpperBound > m_nSize) || (nUpperBound < nIndex) || (nUpperBound < nCount))

  00070	3b d8		 cmp	 ebx, eax
  00072	7f 7c		 jg	 SHORT $LN14@RemoveResi
  00074	3b de		 cmp	 ebx, esi
  00076	7c 78		 jl	 SHORT $LN14@RemoveResi
  00078	83 fb 01	 cmp	 ebx, 1
  0007b	7c 73		 jl	 SHORT $LN14@RemoveResi

; 598  : 		AfxThrowInvalidArgException();
; 599  : 
; 600  : 	// just remove a range
; 601  : 	INT_PTR nMoveCount = m_nSize - (nUpperBound);

  0007d	8b f0		 mov	 esi, eax
  0007f	2b f3		 sub	 esi, ebx

; 602  : 	for( int i = 0; i < nCount; i++ )
; 603  : 		(m_pData + nIndex + i)->~TYPE();
; 604  : 	if (nMoveCount)

  00081	74 50		 je	 SHORT $LN30@RemoveResi

; 605  : 	{
; 606  : 		::ATL::Checked::memmove_s(m_pData + nIndex, (size_t)nMoveCount * sizeof(TYPE),

  00083	8b 87 dc 00 00
	00		 mov	 eax, DWORD PTR [edi+220]
  00089	c1 e6 02	 shl	 esi, 2
  0008c	8d 04 98	 lea	 eax, DWORD PTR [eax+ebx*4]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h

; 74   :         if (_SourceSize == 0)

  0008f	85 f6		 test	 esi, esi
  00091	74 2c		 je	 SHORT $LN53@RemoveResi

; 75   :         {
; 76   :             return 0;
; 77   :         }
; 78   : 
; 79   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL,            EINVAL);

  00093	85 c9		 test	 ecx, ecx
  00095	75 19		 jne	 SHORT $LN36@RemoveResi
$LN54@RemoveResi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlchecked.h

; 87   : 	ATLMFC_CRT_ERRORCHECK(::memmove_s(_S1, _S1max, _S2, _N));

  00097	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___errno
  0009d	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter_noinfo
  000a9	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  000ae	eb 11		 jmp	 SHORT $LN34@RemoveResi
$LN36@RemoveResi:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h

; 80   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);

  000b0	85 c0		 test	 eax, eax
  000b2	74 e3		 je	 SHORT $LN54@RemoveResi

; 81   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);
; 82   : 
; 83   :         memmove(_Destination, _Source, _SourceSize);

  000b4	56		 push	 esi
  000b5	50		 push	 eax
  000b6	51		 push	 ecx
  000b7	e8 00 00 00 00	 call	 _memmove
  000bc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN53@RemoveResi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlchecked.h

; 87   : 	ATLMFC_CRT_ERRORCHECK(::memmove_s(_S1, _S1max, _S2, _N));

  000bf	33 c0		 xor	 eax, eax
$LN34@RemoveResi:
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 ?AfxCrtErrorCheck@@YAHH@Z ; AfxCrtErrorCheck
  000c7	8b 87 e0 00 00
	00		 mov	 eax, DWORD PTR [edi+224]
  000cd	83 c4 04	 add	 esp, 4
  000d0	8b 55 fc	 mov	 edx, DWORD PTR _pItem$1$[ebp]
$LN30@RemoveResi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 609  : 	m_nSize -= nCount;

  000d3	48		 dec	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 57   : 				SAFE_DELETE( pItem );

  000d4	8b ca		 mov	 ecx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 609  : 	m_nSize -= nCount;

  000d6	89 87 e0 00 00
	00		 mov	 DWORD PTR [edi+224], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 57   : 				SAFE_DELETE( pItem );

  000dc	8b 02		 mov	 eax, DWORD PTR [edx]
  000de	6a 01		 push	 1
  000e0	ff 10		 call	 DWORD PTR [eax]
  000e2	5f		 pop	 edi

; 64   : }

  000e3	5e		 pop	 esi
  000e4	b8 01 00 00 00	 mov	 eax, 1
  000e9	5b		 pop	 ebx
  000ea	8b e5		 mov	 esp, ebp
  000ec	5d		 pop	 ebp
  000ed	c2 04 00	 ret	 4
$LN14@RemoveResi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 323  : 	AfxThrowInvalidArgException();

  000f0	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN52@RemoveResi:
  000f5	cc		 int	 3
?RemoveResize@CExResize@@IAEHI@Z ENDP			; CExResize::RemoveResize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?SetResize@CExResize@@IAEXPAVCWnd@@ABVCExResizeRect@@VCRect@@@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pwnd$ = 8						; size = 4
_rrcSizing$ = 12					; size = 4
_rcWindow$ = 16						; size = 16
?SetResize@CExResize@@IAEXPAVCWnd@@ABVCExResizeRect@@VCRect@@@Z PROC ; CExResize::SetResize, COMDAT
; _this$ = ecx

; 383  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetResize@CExResize@@IAEXPAVCWnd@@ABVCExResizeRect@@VCRect@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx

; 384  : 	CExItem *pItem = new CExItem(pwnd, rrcSizing, rcWindow, FALSE);

  00028	6a 40		 push	 64			; 00000040H
  0002a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002f	83 c4 04	 add	 esp, 4
  00032	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	85 c0		 test	 eax, eax
  0003e	74 17		 je	 SHORT $LN3@SetResize
  00040	6a 00		 push	 0
  00042	8d 4d 10	 lea	 ecx, DWORD PTR _rcWindow$[ebp]
  00045	51		 push	 ecx
  00046	ff 75 0c	 push	 DWORD PTR _rrcSizing$[ebp]
  00049	8b c8		 mov	 ecx, eax
  0004b	ff 75 08	 push	 DWORD PTR _pwnd$[ebp]
  0004e	e8 00 00 00 00	 call	 ??0CExItem@@QAE@PAVCWnd@@ABVCExResizeRect@@AAVCRect@@H@Z ; CExItem::CExItem
  00053	8b d8		 mov	 ebx, eax
  00055	eb 02		 jmp	 SHORT $LN4@SetResize
$LN3@SetResize:
  00057	33 db		 xor	 ebx, ebx
$LN4@SetResize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  00059	8b be e0 00 00
	00		 mov	 edi, DWORD PTR [esi+224]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 384  : 	CExItem *pItem = new CExItem(pwnd, rrcSizing, rcWindow, FALSE);

  0005f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 538  : 	if(nIndex < 0)

  00066	85 ff		 test	 edi, edi
  00068	78 2e		 js	 SHORT $LN17@SetResize

; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  0006a	6a ff		 push	 -1
  0006c	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  0006f	50		 push	 eax
  00070	8d 8e d8 00 00
	00		 lea	 ecx, DWORD PTR [esi+216]
  00076	e8 00 00 00 00	 call	 ?SetSize@?$CArray@PAVCExItem@@AAPAV1@@@QAEXHH@Z ; CArray<CExItem *,CExItem * &>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  0007b	8b 86 dc 00 00
	00		 mov	 eax, DWORD PTR [esi+220]
  00081	89 1c b8	 mov	 DWORD PTR [eax+edi*4], ebx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 386  : }

  00084	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00087	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008e	59		 pop	 ecx
  0008f	5f		 pop	 edi
  00090	5e		 pop	 esi
  00091	5b		 pop	 ebx
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 18 00	 ret	 24			; 00000018H
$LN17@SetResize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 539  : 		AfxThrowInvalidArgException();

  00098	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN15@SetResize:
  0009d	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetResize@CExResize@@IAEXPAVCWnd@@ABVCExResizeRect@@VCRect@@@Z$0:
  00000	6a 40		 push	 64			; 00000040H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?SetResize@CExResize@@IAEXPAVCWnd@@ABVCExResizeRect@@VCRect@@@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetResize@CExResize@@IAEXPAVCWnd@@ABVCExResizeRect@@VCRect@@@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetResize@CExResize@@IAEXPAVCWnd@@ABVCExResizeRect@@VCRect@@@Z ENDP ; CExResize::SetResize
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?AutoLoadPlacement@CExResize@@QAEXPBD@Z
_TEXT	SEGMENT
_pBytes$1 = -4						; size = 4
_nBytes$2 = 8						; size = 4
_pszSection$ = 8					; size = 4
?AutoLoadPlacement@CExResize@@QAEXPBD@Z PROC		; CExResize::AutoLoadPlacement, COMDAT
; _this$ = ecx

; 340  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 341  : 	m_strSection = pszSection;

  00006	ff 75 08	 push	 DWORD PTR _pszSection$[ebp]
  00009	8b f9		 mov	 edi, ecx
  0000b	8d 4f 40	 lea	 ecx, DWORD PTR [edi+64]
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 377  : 		return( m_pszData );

  00014	8b 77 40	 mov	 esi, DWORD PTR [edi+64]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 348  : 	UINT nBytes = 0;

  00017	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _nBytes$2[ebp], 0

; 349  : 	BYTE* pBytes = 0;

  0001e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pBytes$1[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 19   : 	{ return afxCurrentWinApp; }

  00025	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 350  : 	AfxGetApp()->GetProfileBinary(pszSection, ENTRY_WINDOWPLACEMENT, &pBytes, &nBytes);

  0002a	8d 55 08	 lea	 edx, DWORD PTR _nBytes$2[ebp]
  0002d	52		 push	 edx
  0002e	8d 55 fc	 lea	 edx, DWORD PTR _pBytes$1[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 19   : 	{ return afxCurrentWinApp; }

  00031	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 350  : 	AfxGetApp()->GetProfileBinary(pszSection, ENTRY_WINDOWPLACEMENT, &pBytes, &nBytes);

  00034	52		 push	 edx
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IPFOHKAG@WindowPlacement@
  0003a	56		 push	 esi
  0003b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0003d	ff 90 94 00 00
	00		 call	 DWORD PTR [eax+148]

; 351  : 	if (nBytes == sizeof(WINDOWPLACEMENT))

  00043	8b 4d 08	 mov	 ecx, DWORD PTR _nBytes$2[ebp]
  00046	83 f9 2c	 cmp	 ecx, 44			; 0000002cH
  00049	75 0e		 jne	 SHORT $LN6@AutoLoadPl

; 352  : 	{
; 353  : 		m_pwnd->SetWindowPlacement((WINDOWPLACEMENT*) pBytes);

  0004b	ff 75 fc	 push	 DWORD PTR _pBytes$1[ebp]
  0004e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00051	e8 00 00 00 00	 call	 ?SetWindowPlacement@CWnd@@QAEHPBUtagWINDOWPLACEMENT@@@Z ; CWnd::SetWindowPlacement
  00056	8b 4d 08	 mov	 ecx, DWORD PTR _nBytes$2[ebp]
$LN6@AutoLoadPl:

; 354  : 	}
; 355  : 	if (pBytes && nBytes) delete[] pBytes;

  00059	8b 45 fc	 mov	 eax, DWORD PTR _pBytes$1[ebp]
  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	85 c0		 test	 eax, eax
  00060	74 0d		 je	 SHORT $LN7@AutoLoadPl
  00062	85 c9		 test	 ecx, ecx
  00064	74 09		 je	 SHORT $LN7@AutoLoadPl
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0006c	83 c4 04	 add	 esp, 4
$LN7@AutoLoadPl:

; 342  : 	ASSERT(!m_strSection.IsEmpty());
; 343  : 	LoadPlacement(m_strSection);
; 344  : }

  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c2 04 00	 ret	 4
?AutoLoadPlacement@CExResize@@QAEXPBD@Z ENDP		; CExResize::AutoLoadPlacement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?LoadPlacement@CExResize@@QAEXPBD@Z
_TEXT	SEGMENT
_pBytes$ = -8						; size = 4
_nBytes$ = -4						; size = 4
_pszSection$ = 8					; size = 4
?LoadPlacement@CExResize@@QAEXPBD@Z PROC		; CExResize::LoadPlacement, COMDAT
; _this$ = ecx

; 347  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 348  : 	UINT nBytes = 0;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _nBytes$[ebp], 0

; 349  : 	BYTE* pBytes = 0;

  00010	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pBytes$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 19   : 	{ return afxCurrentWinApp; }

  00017	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 350  : 	AfxGetApp()->GetProfileBinary(pszSection, ENTRY_WINDOWPLACEMENT, &pBytes, &nBytes);

  0001c	8d 55 fc	 lea	 edx, DWORD PTR _nBytes$[ebp]
  0001f	52		 push	 edx
  00020	8d 55 f8	 lea	 edx, DWORD PTR _pBytes$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 19   : 	{ return afxCurrentWinApp; }

  00023	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 350  : 	AfxGetApp()->GetProfileBinary(pszSection, ENTRY_WINDOWPLACEMENT, &pBytes, &nBytes);

  00026	52		 push	 edx
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IPFOHKAG@WindowPlacement@
  0002c	ff 75 08	 push	 DWORD PTR _pszSection$[ebp]
  0002f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00031	ff 90 94 00 00
	00		 call	 DWORD PTR [eax+148]

; 351  : 	if (nBytes == sizeof(WINDOWPLACEMENT))

  00037	8b 4d fc	 mov	 ecx, DWORD PTR _nBytes$[ebp]
  0003a	83 f9 2c	 cmp	 ecx, 44			; 0000002cH
  0003d	75 0e		 jne	 SHORT $LN2@LoadPlacem

; 352  : 	{
; 353  : 		m_pwnd->SetWindowPlacement((WINDOWPLACEMENT*) pBytes);

  0003f	ff 75 f8	 push	 DWORD PTR _pBytes$[ebp]
  00042	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00045	e8 00 00 00 00	 call	 ?SetWindowPlacement@CWnd@@QAEHPBUtagWINDOWPLACEMENT@@@Z ; CWnd::SetWindowPlacement
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _nBytes$[ebp]
$LN2@LoadPlacem:

; 354  : 	}
; 355  : 	if (pBytes && nBytes) delete[] pBytes;

  0004d	8b 45 f8	 mov	 eax, DWORD PTR _pBytes$[ebp]
  00050	5e		 pop	 esi
  00051	85 c0		 test	 eax, eax
  00053	74 0d		 je	 SHORT $LN3@LoadPlacem
  00055	85 c9		 test	 ecx, ecx
  00057	74 09		 je	 SHORT $LN3@LoadPlacem
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0005f	83 c4 04	 add	 esp, 4
$LN3@LoadPlacem:

; 356  : 
; 357  : }

  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 04 00	 ret	 4
?LoadPlacement@CExResize@@QAEXPBD@Z ENDP		; CExResize::LoadPlacement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?SavePlacement@CExResize@@QAEXPBD@Z
_TEXT	SEGMENT
_wp$ = -48						; size = 44
__$ArrayPad$ = -4					; size = 4
_pszSection$ = 8					; size = 4
?SavePlacement@CExResize@@QAEXPBD@Z PROC		; CExResize::SavePlacement, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 361  : 	WINDOWPLACEMENT wp;
; 362  : 	m_pwnd->GetWindowPlacement(&wp);

  00010	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  00013	8d 45 d0	 lea	 eax, DWORD PTR _wp$[ebp]
  00016	56		 push	 esi
  00017	8b 75 08	 mov	 esi, DWORD PTR _pszSection$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ?GetWindowPlacement@CWnd@@QBEHPAUtagWINDOWPLACEMENT@@@Z ; CWnd::GetWindowPlacement
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 19   : 	{ return afxCurrentWinApp; }

  00020	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 363  : 	AfxGetApp()->WriteProfileBinary(pszSection, ENTRY_WINDOWPLACEMENT, (BYTE*) &wp, sizeof(wp));

  00025	6a 2c		 push	 44			; 0000002cH
  00027	8d 55 d0	 lea	 edx, DWORD PTR _wp$[ebp]
  0002a	52		 push	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 19   : 	{ return afxCurrentWinApp; }

  0002b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 363  : 	AfxGetApp()->WriteProfileBinary(pszSection, ENTRY_WINDOWPLACEMENT, (BYTE*) &wp, sizeof(wp));

  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IPFOHKAG@WindowPlacement@
  00033	56		 push	 esi
  00034	8b 01		 mov	 eax, DWORD PTR [ecx]
  00036	ff 90 98 00 00
	00		 call	 DWORD PTR [eax+152]

; 364  : }

  0003c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0003f	33 cd		 xor	 ecx, ebp
  00041	5e		 pop	 esi
  00042	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
?SavePlacement@CExResize@@QAEXPBD@Z ENDP		; CExResize::SavePlacement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?SetResize@CExResize@@QAEXQAUEX_SIZING@@@Z
_TEXT	SEGMENT
_arr$ = 8						; size = 4
?SetResize@CExResize@@QAEXQAUEX_SIZING@@@Z PROC		; CExResize::SetResize, COMDAT
; _this$ = ecx

; 368  : 	int i;
; 369  : 	for (i=0; i < sizeof(arr)/sizeof(arr[0]); i++)
; 370  : 	{
; 371  : 		EX_SIZING& sz = arr[i];
; 372  : 		SetResize(sz.id, sz.rrc.left, sz.rrc.top, sz.rrc.right, sz.rrc.bottom);
; 373  : 	}
; 374  : }

  00000	c2 04 00	 ret	 4
?SetResize@CExResize@@QAEXQAUEX_SIZING@@@Z ENDP		; CExResize::SetResize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\ExResizeRect.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\tchar.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?SetResize@CExResize@@QAEXIQAUHWND__@@ABUEX_RESIZERECT@@@Z
_TEXT	SEGMENT
_rrcSizing$GSCopy$1$ = -76				; size = 4
_hWndChild$1$ = -72					; size = 4
$T2 = -68						; size = 4
_pWnd$1$ = -68						; size = 4
_pWnd$1$ = -68						; size = 4
$T3 = -68						; size = 4
_pWnd$1$ = -64						; size = 4
_pItem$1$ = -64						; size = 4
_nID$GSCopy$1$ = -60					; size = 4
$T4 = -60						; size = 4
$T5 = -56						; size = 16
_rcWindow$6 = -40					; size = 16
_szClass$7 = -24					; size = 8
_this$GSCopy$1$ = -20					; size = 4
_nIndex$1$ = -20					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_nID$ = 8						; size = 4
_hWnd$ = 12						; size = 4
_rrcSizing$ = 16					; size = 4
?SetResize@CExResize@@QAEXIQAUHWND__@@ABUEX_RESIZERECT@@@Z PROC ; CExResize::SetResize, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetResize@CExResize@@QAEXIQAUHWND__@@ABUEX_RESIZERECT@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 40	 sub	 esp, 64			; 00000040H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f9		 mov	 edi, ecx
  0002c	89 7d ec	 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi
  0002f	8b 45 0c	 mov	 eax, DWORD PTR _hWnd$[ebp]

; 99   : 	CExItem* pItem = 0;
; 100  : 	
; 101  : 	// search for an item with the given id
; 102  : 	int i;
; 103  : 	for ( i = m_arrItems.GetSize(); i--; )

  00032	8b b7 e0 00 00
	00		 mov	 esi, DWORD PTR [edi+224]
  00038	8b 4d 08	 mov	 ecx, DWORD PTR _nID$[ebp]
  0003b	89 45 b8	 mov	 DWORD PTR _hWndChild$1$[ebp], eax
  0003e	8b 45 10	 mov	 eax, DWORD PTR _rrcSizing$[ebp]
  00041	89 4d c4	 mov	 DWORD PTR _nID$GSCopy$1$[ebp], ecx
  00044	89 45 b4	 mov	 DWORD PTR _rrcSizing$GSCopy$1$[ebp], eax
  00047	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _pItem$1$[ebp], 0
  0004e	85 f6		 test	 esi, esi
  00050	0f 84 8f 00 00
	00		 je	 $LN74@SetResize
$LL2@SetResize:
  00056	83 ee 01	 sub	 esi, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 321  : 	if(nIndex >= 0 && nIndex < m_nSize)

  00059	0f 88 46 02 00
	00		 js	 $LN23@SetResize
  0005f	3b b7 e0 00 00
	00		 cmp	 esi, DWORD PTR [edi+224]
  00065	0f 8d 3a 02 00
	00		 jge	 $LN23@SetResize

; 322  : 		return m_pData[nIndex];

  0006b	8b 87 dc 00 00
	00		 mov	 eax, DWORD PTR [edi+220]
  00071	8d 0c b5 00 00
	00 00		 lea	 ecx, DWORD PTR [esi*4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 105  : 		CWnd* pWnd = m_arrItems[i]->m_pwnd;

  00078	8b 04 08	 mov	 eax, DWORD PTR [eax+ecx]
  0007b	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0007e	89 45 bc	 mov	 DWORD PTR _pWnd$1$[ebp], eax

; 106  : 		if (pWnd && ::IsWindow( pWnd->m_hWnd ) && ( pWnd->GetDlgCtrlID( ) == ( int )nID ) )

  00081	85 c0		 test	 eax, eax
  00083	74 42		 je	 SHORT $LN78@SetResize
  00085	ff 70 20	 push	 DWORD PTR [eax+32]
  00088	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  0008e	85 c0		 test	 eax, eax
  00090	74 35		 je	 SHORT $LN78@SetResize
  00092	8b 4d bc	 mov	 ecx, DWORD PTR _pWnd$1$[ebp]
  00095	e8 00 00 00 00	 call	 ?GetDlgCtrlID@CWnd@@QBEHXZ ; CWnd::GetDlgCtrlID
  0009a	8b 4d c4	 mov	 ecx, DWORD PTR _nID$GSCopy$1$[ebp]
  0009d	3b c1		 cmp	 eax, ecx
  0009f	75 21		 jne	 SHORT $LN76@SetResize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 321  : 	if(nIndex >= 0 && nIndex < m_nSize)

  000a1	3b b7 e0 00 00
	00		 cmp	 esi, DWORD PTR [edi+224]
  000a7	0f 8d f8 01 00
	00		 jge	 $LN23@SetResize

; 322  : 		return m_pData[nIndex];

  000ad	8b 87 dc 00 00
	00		 mov	 eax, DWORD PTR [edi+220]
  000b3	8d 0c b5 00 00
	00 00		 lea	 ecx, DWORD PTR [esi*4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 108  : 			pItem = m_arrItems[i];

  000ba	8b 04 08	 mov	 eax, DWORD PTR [eax+ecx]
  000bd	89 45 c0	 mov	 DWORD PTR _pItem$1$[ebp], eax
  000c0	eb 08		 jmp	 SHORT $LN81@SetResize
$LN76@SetResize:

; 106  : 		if (pWnd && ::IsWindow( pWnd->m_hWnd ) && ( pWnd->GetDlgCtrlID( ) == ( int )nID ) )

  000c2	8b 45 c0	 mov	 eax, DWORD PTR _pItem$1$[ebp]
  000c5	eb 06		 jmp	 SHORT $LN5@SetResize
$LN78@SetResize:

; 99   : 	CExItem* pItem = 0;
; 100  : 	
; 101  : 	// search for an item with the given id
; 102  : 	int i;
; 103  : 	for ( i = m_arrItems.GetSize(); i--; )

  000c7	8b 45 c0	 mov	 eax, DWORD PTR _pItem$1$[ebp]
$LN81@SetResize:
  000ca	8b 4d c4	 mov	 ecx, DWORD PTR _nID$GSCopy$1$[ebp]
$LN5@SetResize:
  000cd	85 f6		 test	 esi, esi
  000cf	75 85		 jne	 SHORT $LL2@SetResize

; 109  : 		}
; 110  : 	}
; 111  : 
; 112  : 	// if we didn't find it then create one
; 113  : 	if (pItem == 0)

  000d1	85 c0		 test	 eax, eax
  000d3	74 10		 je	 SHORT $LN74@SetResize

; 150  : 					SWP_NOMOVE|SWP_NOSIZE|SWP_NOZORDER|SWP_NOACTIVATE );
; 151  : 			}
; 152  : 		} 
; 153  : 	}
; 154  : 	else
; 155  : 	{
; 156  : 		// the item already exists, just add the new sizing option
; 157  : 		pItem->m_rrcSizing += rrcSizing;

  000d5	ff 75 b4	 push	 DWORD PTR _rrcSizing$GSCopy$1$[ebp]
  000d8	8d 48 10	 lea	 ecx, DWORD PTR [eax+16]
  000db	e8 00 00 00 00	 call	 ??YCExResizeRect@@QAEAAV0@ABUEX_RESIZERECT@@@Z ; CExResizeRect::operator+=
  000e0	e9 a3 01 00 00	 jmp	 $LN7@SetResize
$LN74@SetResize:

; 114  : 	{
; 115  : 		HWND hWndChild = hWnd;
; 116  : 		if ( hWndChild == NULL )

  000e5	8b 75 b8	 mov	 esi, DWORD PTR _hWndChild$1$[ebp]
  000e8	85 f6		 test	 esi, esi
  000ea	75 26		 jne	 SHORT $LN9@SetResize

; 117  : 		{
; 118  : 			CWnd* pWnd = m_pwnd->GetDlgItem( nID );

  000ec	51		 push	 ecx
  000ed	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000f0	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000f5	89 45 bc	 mov	 DWORD PTR _pWnd$1$[ebp], eax

; 119  : 			if ( pWnd &&  ::IsWindow( pWnd->m_hWnd ) )

  000f8	85 c0		 test	 eax, eax
  000fa	74 16		 je	 SHORT $LN9@SetResize
  000fc	ff 70 20	 push	 DWORD PTR [eax+32]
  000ff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  00105	85 c0		 test	 eax, eax
  00107	74 09		 je	 SHORT $LN9@SetResize

; 120  : 			{
; 121  : 				hWndChild = pWnd->m_hWnd;

  00109	8b 75 bc	 mov	 esi, DWORD PTR _pWnd$1$[ebp]
  0010c	8b 76 20	 mov	 esi, DWORD PTR [esi+32]
  0010f	89 75 b8	 mov	 DWORD PTR _hWndChild$1$[ebp], esi
$LN9@SetResize:

; 122  : 			}
; 123  : 		}
; 124  : 
; 125  : 		bool bDelete = false;
; 126  : 
; 127  : 		CWnd* pWnd = m_pwnd->FromHandlePermanent( hWndChild );

  00112	56		 push	 esi
  00113	e8 00 00 00 00	 call	 ?FromHandlePermanent@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandlePermanent
  00118	8b f0		 mov	 esi, eax
  0011a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  00121	89 75 c0	 mov	 DWORD PTR _pWnd$1$[ebp], esi

; 128  : 		if ( pWnd == NULL )

  00124	85 f6		 test	 esi, esi
  00126	75 43		 jne	 SHORT $LN10@SetResize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 116  : 	{ return ::operator new(nSize); }

  00128	68 80 00 00 00	 push	 128			; 00000080H
  0012d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00132	83 c4 04	 add	 esp, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 131  : 			pWnd = new CWnd; // CExItem handles the delete

  00135	89 45 bc	 mov	 DWORD PTR $T3[ebp], eax
  00138	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
  0013b	85 c0		 test	 eax, eax
  0013d	74 0e		 je	 SHORT $LN14@SetResize
  0013f	8b c8		 mov	 ecx, eax
  00141	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd
  00146	8b f0		 mov	 esi, eax
  00148	89 45 c0	 mov	 DWORD PTR _pWnd$1$[ebp], eax
  0014b	eb 05		 jmp	 SHORT $LN15@SetResize
$LN14@SetResize:
  0014d	33 f6		 xor	 esi, esi
  0014f	89 75 c0	 mov	 DWORD PTR _pWnd$1$[ebp], esi
$LN15@SetResize:

; 132  : 			pWnd->Attach( hWndChild );

  00152	8b 45 b8	 mov	 eax, DWORD PTR _hWndChild$1$[ebp]
  00155	8b ce		 mov	 ecx, esi
  00157	50		 push	 eax
  00158	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0015f	e8 00 00 00 00	 call	 ?Attach@CWnd@@QAEHPAUHWND__@@@Z ; CWnd::Attach

; 133  : 		
; 134  : 			bDelete = true;

  00164	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR $T2[ebp], 1
$LN10@SetResize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  0016b	8d 45 d8	 lea	 eax, DWORD PTR _rcWindow$6[ebp]
  0016e	0f 57 c0	 xorps	 xmm0, xmm0
  00171	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00172	0f 11 45 d8	 movups	 XMMWORD PTR _rcWindow$6[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 84   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00176	ff 76 20	 push	 DWORD PTR [esi+32]
  00179	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 139  : 		m_pwnd->ScreenToClient( rcWindow );

  0017f	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00182	8d 45 d8	 lea	 eax, DWORD PTR _rcWindow$6[ebp]
  00185	50		 push	 eax
  00186	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 140  : 
; 141  : 		pItem = new CExItem( pWnd, rrcSizing, rcWindow, bDelete );

  0018b	6a 40		 push	 64			; 00000040H
  0018d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00192	8b f0		 mov	 esi, eax
  00194	83 c4 04	 add	 esp, 4
  00197	89 75 c4	 mov	 DWORD PTR $T4[ebp], esi
  0019a	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  001a1	85 f6		 test	 esi, esi
  001a3	74 67		 je	 SHORT $LN16@SetResize
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\ExResizeRect.h

; 51   : 	(operator =)(rrc);

  001a5	ff 75 b4	 push	 DWORD PTR _rrcSizing$GSCopy$1$[ebp]
  001a8	8d 4d c8	 lea	 ecx, DWORD PTR $T5[ebp]
  001ab	e8 00 00 00 00	 call	 ??4CExResizeRect@@QAEAAV0@ABUEX_RESIZERECT@@@Z ; CExResizeRect::operator=
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 458  : {

  001b0	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  001b3	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CExItem@@6B@
  001b9	e8 00 00 00 00	 call	 ??0CExResizeRect@@QAE@XZ ; CExResizeRect::CExResizeRect
  001be	8b fe		 mov	 edi, esi
  001c0	8d 4f 20	 lea	 ecx, DWORD PTR [edi+32]
  001c3	e8 00 00 00 00	 call	 ??0CExResizeRect@@QAE@XZ ; CExResizeRect::CExResizeRect
  001c8	8b ce		 mov	 ecx, esi
  001ca	8d 49 30	 lea	 ecx, DWORD PTR [ecx+48]
  001cd	e8 00 00 00 00	 call	 ??0CExResizeRect@@QAE@XZ ; CExResizeRect::CExResizeRect

; 459  : 	m_pwnd          = pwnd;

  001d2	8b 45 c0	 mov	 eax, DWORD PTR _pWnd$1$[ebp]
  001d5	8b ce		 mov	 ecx, esi
  001d7	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 460  : 	m_rrcSizing	    = rrcSizing;
; 461  : 	m_rrcWindow     = rcWindow;

  001da	8d 45 d8	 lea	 eax, DWORD PTR _rcWindow$6[ebp]
  001dd	0f 10 45 c8	 movups	 xmm0, XMMWORD PTR $T5[ebp]
  001e1	50		 push	 eax
  001e2	8d 4f 20	 lea	 ecx, DWORD PTR [edi+32]
  001e5	0f 11 46 10	 movups	 XMMWORD PTR [esi+16], xmm0
  001e9	e8 00 00 00 00	 call	 ??4CExResizeRect@@QAEAAV0@ABUtagRECT@@@Z ; CExResizeRect::operator=

; 462  : 	m_rrcInitWindow = rcWindow;

  001ee	8d 45 d8	 lea	 eax, DWORD PTR _rcWindow$6[ebp]
  001f1	50		 push	 eax
  001f2	8d 4e 30	 lea	 ecx, DWORD PTR [esi+48]
  001f5	e8 00 00 00 00	 call	 ??4CExResizeRect@@QAEAAV0@ABUtagRECT@@@Z ; CExResizeRect::operator=

; 463  : 	m_bDeleteWnd    = bDeleteWnd;

  001fa	8b 45 bc	 mov	 eax, DWORD PTR $T2[ebp]

; 140  : 
; 141  : 		pItem = new CExItem( pWnd, rrcSizing, rcWindow, bDelete );

  001fd	8b 7d ec	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]

; 463  : 	m_bDeleteWnd    = bDeleteWnd;

  00200	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 464  : 	m_bInitialSize  = FALSE;

  00203	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 140  : 
; 141  : 		pItem = new CExItem( pWnd, rrcSizing, rcWindow, bDelete );

  0020a	eb 02		 jmp	 SHORT $LN17@SetResize
$LN16@SetResize:
  0020c	33 f6		 xor	 esi, esi
$LN17@SetResize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  0020e	8b 87 e0 00 00
	00		 mov	 eax, DWORD PTR [edi+224]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 142  : 		m_arrItems.Add( pItem );

  00214	8d 8f d8 00 00
	00		 lea	 ecx, DWORD PTR [edi+216]
  0021a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  00221	89 45 ec	 mov	 DWORD PTR _nIndex$1$[ebp], eax

; 538  : 	if(nIndex < 0)

  00224	85 c0		 test	 eax, eax
  00226	78 7d		 js	 SHORT $LN23@SetResize

; 539  : 		AfxThrowInvalidArgException();
; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  00228	6a ff		 push	 -1
  0022a	40		 inc	 eax
  0022b	50		 push	 eax
  0022c	e8 00 00 00 00	 call	 ?SetSize@?$CArray@PAVCExItem@@AAPAV1@@@QAEXHH@Z ; CArray<CExItem *,CExItem * &>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  00231	8b 87 dc 00 00
	00		 mov	 eax, DWORD PTR [edi+220]
  00237	8b 4d ec	 mov	 ecx, DWORD PTR _nIndex$1$[ebp]
  0023a	89 34 88	 mov	 DWORD PTR [eax+ecx*4], esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 144  : 		if ( !HasFlag( SZ_NOTRANSPARENTGROUP ) )

  0023d	f6 47 08 20	 test	 BYTE PTR [edi+8], 32	; 00000020H
  00241	75 45		 jne	 SHORT $LN7@SetResize

; 83   : 	::GetClassName( hWnd, szClass, 8 );

  00243	8b 75 b8	 mov	 esi, DWORD PTR _hWndChild$1$[ebp]
  00246	8d 45 e8	 lea	 eax, DWORD PTR _szClass$7[ebp]
  00249	6a 08		 push	 8
  0024b	50		 push	 eax
  0024c	56		 push	 esi
  0024d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClassNameA@12
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\tchar.h

; 1634 :     return _mbsicmp((const unsigned char *)_String1,(const unsigned char *)_String2);

  00253	8d 45 e8	 lea	 eax, DWORD PTR _szClass$7[ebp]
  00256	68 00 00 00 00	 push	 OFFSET ??_C@_06LKBCGDFD@Button@
  0025b	50		 push	 eax
  0025c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___mbsicmp
  00262	83 c4 08	 add	 esp, 8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 85   : 	if ( _tcsicmp( szClass, _T( "Button" ) ) == 0 )

  00265	85 c0		 test	 eax, eax
  00267	75 1f		 jne	 SHORT $LN7@SetResize

; 86   : 	{
; 87   : 		DWORD dwStyle = ::GetWindowLong( hWnd, GWL_STYLE );

  00269	6a f0		 push	 -16			; fffffff0H
  0026b	56		 push	 esi
  0026c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongA@8

; 88   : 		if ( ( dwStyle & ( BS_GROUPBOX|WS_TABSTOP ) ) == BS_GROUPBOX )

  00272	25 07 00 01 00	 and	 eax, 65543		; 00010007H
  00277	83 f8 07	 cmp	 eax, 7
  0027a	75 0c		 jne	 SHORT $LN7@SetResize

; 145  : 		{
; 146  : 			// if the control is a group box, then make it transparent
; 147  : 			if ( _IsGroupBox( hWndChild ) )
; 148  : 			{
; 149  : 				CWnd::ModifyStyleEx( hWndChild, 0, WS_EX_TRANSPARENT,

  0027c	6a 17		 push	 23			; 00000017H
  0027e	6a 20		 push	 32			; 00000020H
  00280	6a 00		 push	 0
  00282	56		 push	 esi
  00283	e8 00 00 00 00	 call	 ?ModifyStyleEx@CWnd@@SGHPAUHWND__@@KKI@Z ; CWnd::ModifyStyleEx
$LN7@SetResize:

; 158  : 	}
; 159  : 	// we should only allow sizing within the rect {0,0,1,1}
; 160  : 	ASSERT((CExResizeRect(0,0,1,1) & pItem->m_rrcSizing) == pItem->m_rrcSizing);
; 161  : }

  00288	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0028b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00292	59		 pop	 ecx
  00293	5f		 pop	 edi
  00294	5e		 pop	 esi
  00295	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00298	33 cd		 xor	 ecx, ebp
  0029a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0029f	8b e5		 mov	 esp, ebp
  002a1	5d		 pop	 ebp
  002a2	c2 0c 00	 ret	 12			; 0000000cH
$LN23@SetResize:
  002a5	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN80@SetResize:
  002aa	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetResize@CExResize@@QAEXIQAUHWND__@@ABUEX_RESIZERECT@@@Z$0:
  00000	8b 45 bc	 mov	 eax, DWORD PTR $T3[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00009	c3		 ret	 0
__unwindfunclet$?SetResize@CExResize@@QAEXIQAUHWND__@@ABUEX_RESIZERECT@@@Z$1:
  0000a	6a 40		 push	 64			; 00000040H
  0000c	8b 45 c4	 mov	 eax, DWORD PTR $T4[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00015	83 c4 08	 add	 esp, 8
  00018	c3		 ret	 0
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
__ehhandler$?SetResize@CExResize@@QAEXIQAUHWND__@@ABUEX_RESIZERECT@@@Z:
  0001e	90		 npad	 1
  0001f	90		 npad	 1
  00020	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00024	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00027	8b 4a b4	 mov	 ecx, DWORD PTR [edx-76]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00034	33 c8		 xor	 ecx, eax
  00036	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetResize@CExResize@@QAEXIQAUHWND__@@ABUEX_RESIZERECT@@@Z
  00040	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetResize@CExResize@@QAEXIQAUHWND__@@ABUEX_RESIZERECT@@@Z ENDP ; CExResize::SetResize
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ??1CExResize@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CExResize@@UAE@XZ PROC				; CExResize::~CExResize, COMDAT
; _this$ = ecx

; 38   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CExResize@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f9		 mov	 edi, ecx
  00026	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CExResize@@6B@

; 39   : 	RemoveAllControls();

  0002c	e8 00 00 00 00	 call	 ?RemoveAllControls@CExResize@@IAEXXZ ; CExResize::RemoveAllControls
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 358  : 	if (m_pData != NULL)

  00031	8b 87 dc 00 00
	00		 mov	 eax, DWORD PTR [edi+220]
  00037	c7 87 d8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+216], OFFSET ??_7?$CArray@PAVCExItem@@AAPAV1@@@6B@
  00041	85 c0		 test	 eax, eax
  00043	74 13		 je	 SHORT $LN7@CExResize

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )

  00045	83 bf e0 00 00
	00 00		 cmp	 DWORD PTR [edi+224], 0
  0004c	0f 4f c0	 cmovg	 eax, eax

; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00055	83 c4 04	 add	 esp, 4
$LN7@CExResize:
  00058	8d 8f cc 00 00
	00		 lea	 ecx, DWORD PTR [edi+204]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 179  : 	{ }

  0005e	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBitmap@@6B@
  00064	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  00069	8d 4f 48	 lea	 ecx, DWORD PTR [edi+72]
  0006c	e8 00 00 00 00	 call	 ??1CStatic@@UAE@XZ	; CStatic::~CStatic
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 40   : }

  00071	8d 4f 40	 lea	 ecx, DWORD PTR [edi+64]
  00074	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0007a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00084	59		 pop	 ecx
  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c3		 ret	 0
  0008b	cc		 int	 3
  0008c	cc		 int	 3
  0008d	cc		 int	 3
  0008e	cc		 int	 3
  0008f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CExResize@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CExResize@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CExResize@@UAE@XZ ENDP				; CExResize::~CExResize
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ??0CExResize@@QAE@PAVCWnd@@I@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pwnd$ = 8						; size = 4
_this$ = 12						; size = 4
_nFlags$ = 12						; size = 4
??0CExResize@@QAE@PAVCWnd@@I@Z PROC			; CExResize::CExResize, COMDAT
; _this$ = ecx

; 33   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CExResize@@QAE@PAVCWnd@@I@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi

; 28   : 	m_nFlagsXX(nFlags),

  0002a	8b 45 0c	 mov	 eax, DWORD PTR _nFlags$[ebp]

; 32   : 	m_strSection(_T(""))

  0002d	8d 4f 40	 lea	 ecx, DWORD PTR [edi+64]
  00030	89 47 08	 mov	 DWORD PTR [edi+8], eax
  00033	8b 45 08	 mov	 eax, DWORD PTR _pwnd$[ebp]
  00036	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CExResize@@6B@
  0003c	89 47 0c	 mov	 DWORD PTR [edi+12], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 540  : 	left = l;

  0003f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0

; 541  : 	top = t;

  00046	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 542  : 	right = r;

  0004d	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0

; 543  : 	bottom = b;

  00054	c7 47 1c 00 00
	00 00		 mov	 DWORD PTR [edi+28], 0

; 528  : 	left = 0;

  0005b	c7 47 20 00 00
	00 00		 mov	 DWORD PTR [edi+32], 0

; 529  : 	top = 0;

  00062	c7 47 24 00 00
	00 00		 mov	 DWORD PTR [edi+36], 0

; 530  : 	right = 0;

  00069	c7 47 28 00 00
	00 00		 mov	 DWORD PTR [edi+40], 0

; 531  : 	bottom = 0;

  00070	c7 47 2c 00 00
	00 00		 mov	 DWORD PTR [edi+44], 0

; 312  : 	cx = initCX;

  00077	c7 47 30 00 00
	00 00		 mov	 DWORD PTR [edi+48], 0

; 313  : 	cy = initCY;

  0007e	c7 47 34 00 00
	00 00		 mov	 DWORD PTR [edi+52], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 32   : 	m_strSection(_T(""))

  00085	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 312  : 	cx = initCX;

  0008a	c7 47 38 00 00
	00 00		 mov	 DWORD PTR [edi+56], 0

; 313  : 	cy = initCY;

  00091	c7 47 3c 00 00
	00 00		 mov	 DWORD PTR [edi+60], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 32   : 	m_strSection(_T(""))

  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z

; 33   : {

  0009e	8d 77 48	 lea	 esi, DWORD PTR [edi+72]
  000a1	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 603  : 	{ }

  000a8	8b ce		 mov	 ecx, esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 33   : {

  000aa	89 75 0c	 mov	 DWORD PTR _this$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 603  : 	{ }

  000ad	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 395  : 	m_hCursor = ::LoadCursor(NULL, IDC_SIZENWSE);

  000b2	68 82 7f 00 00	 push	 32642			; 00007f82H
  000b7	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CExSizeIcon@@6B@
  000bd	6a 00		 push	 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 70   : 	{ m_hObject = NULL; }

  000bf	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0

; 177  : 	{ }

  000c9	c7 86 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+132], OFFSET ??_7CBitmap@@6B@
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 395  : 	m_hCursor = ::LoadCursor(NULL, IDC_SIZENWSE);

  000d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  000d9	89 86 80 00 00
	00		 mov	 DWORD PTR [esi+128], eax

; 35   : }

  000df	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 348  : {

  000e1	c7 87 d8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+216], OFFSET ??_7?$CArray@PAVCExItem@@AAPAV1@@@6B@

; 349  : 	m_pData = NULL;

  000eb	c7 87 dc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+220], 0

; 350  : 	m_nSize = m_nMaxSize = m_nGrowBy = 0;

  000f5	c7 87 e8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+232], 0
  000ff	c7 87 e4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+228], 0
  00109	c7 87 e0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+224], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 35   : }

  00113	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00116	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011d	59		 pop	 ecx
  0011e	5f		 pop	 edi
  0011f	5e		 pop	 esi
  00120	8b e5		 mov	 esp, ebp
  00122	5d		 pop	 ebp
  00123	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CExResize@@QAE@PAVCWnd@@I@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 40	 add	 ecx, 64			; 00000040H
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$??0CExResize@@QAE@PAVCWnd@@I@Z:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CExResize@@QAE@PAVCWnd@@I@Z
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CExResize@@QAE@PAVCWnd@@I@Z ENDP			; CExResize::CExResize
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ??_GCExItem@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GCExItem@@UAEPAXI@Z PROC				; CExItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GCExItem@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 469  : 	if (m_bDeleteWnd)

  00025	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  00029	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00030	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CExItem@@6B@
  00036	74 1d		 je	 SHORT $LN6@scalar

; 470  : 	{
; 471  : 		m_pwnd->Detach();

  00038	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0003b	e8 00 00 00 00	 call	 ?Detach@CWnd@@QAEPAUHWND__@@XZ ; CWnd::Detach

; 472  : 		_delete( m_pwnd );

  00040	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00043	85 c9		 test	 ecx, ecx
  00045	74 0e		 je	 SHORT $LN6@scalar
  00047	8b 01		 mov	 eax, DWORD PTR [ecx]
  00049	6a 01		 push	 1
  0004b	ff 50 04	 call	 DWORD PTR [eax+4]
  0004e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN6@scalar:
  00055	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00059	74 0b		 je	 SHORT $LN11@scalar
  0005b	6a 40		 push	 64			; 00000040H
  0005d	56		 push	 esi
  0005e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00063	83 c4 08	 add	 esp, 8
$LN11@scalar:
  00066	8b c6		 mov	 eax, esi
  00068	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00072	59		 pop	 ecx
  00073	5e		 pop	 esi
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
  0007a	cc		 int	 3
  0007b	cc		 int	 3
  0007c	cc		 int	 3
  0007d	cc		 int	 3
  0007e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_GCExItem@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GCExItem@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GCExItem@@UAEPAXI@Z ENDP				; CExItem::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ??1CExItem@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CExItem@@UAE@XZ PROC					; CExItem::~CExItem, COMDAT
; _this$ = ecx

; 468  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CExItem@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 469  : 	if (m_bDeleteWnd)

  00025	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CExItem@@6B@
  0002f	74 1d		 je	 SHORT $LN3@CExItem

; 470  : 	{
; 471  : 		m_pwnd->Detach();

  00031	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00034	e8 00 00 00 00	 call	 ?Detach@CWnd@@QAEPAUHWND__@@XZ ; CWnd::Detach

; 472  : 		_delete( m_pwnd );

  00039	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0003c	85 c9		 test	 ecx, ecx
  0003e	74 0e		 je	 SHORT $LN3@CExItem
  00040	8b 01		 mov	 eax, DWORD PTR [ecx]
  00042	6a 01		 push	 1
  00044	ff 50 04	 call	 DWORD PTR [eax+4]
  00047	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN3@CExItem:

; 473  : 	} 
; 474  : }

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	5e		 pop	 esi
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
  0005e	cc		 int	 3
  0005f	cc		 int	 3
  00060	cc		 int	 3
  00061	cc		 int	 3
  00062	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CExItem@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CExItem@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CExItem@@UAE@XZ ENDP					; CExItem::~CExItem
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ??0CExItem@@QAE@PAVCWnd@@ABVCExResizeRect@@AAVCRect@@H@Z
_TEXT	SEGMENT
_pwnd$ = 8						; size = 4
_rrcSizing$ = 12					; size = 4
_rcWindow$ = 16						; size = 4
_bDeleteWnd$ = 20					; size = 4
??0CExItem@@QAE@PAVCWnd@@ABVCExResizeRect@@AAVCRect@@H@Z PROC ; CExItem::CExItem, COMDAT
; _this$ = ecx

; 458  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	8b d9		 mov	 ebx, ecx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8d 4b 10	 lea	 ecx, DWORD PTR [ebx+16]
  0000c	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CExItem@@6B@
  00012	e8 00 00 00 00	 call	 ??0CExResizeRect@@QAE@XZ ; CExResizeRect::CExResizeRect
  00017	8d 4b 20	 lea	 ecx, DWORD PTR [ebx+32]
  0001a	e8 00 00 00 00	 call	 ??0CExResizeRect@@QAE@XZ ; CExResizeRect::CExResizeRect
  0001f	8d 4b 30	 lea	 ecx, DWORD PTR [ebx+48]
  00022	e8 00 00 00 00	 call	 ??0CExResizeRect@@QAE@XZ ; CExResizeRect::CExResizeRect

; 459  : 	m_pwnd          = pwnd;

  00027	8b 45 08	 mov	 eax, DWORD PTR _pwnd$[ebp]
  0002a	8b cb		 mov	 ecx, ebx

; 460  : 	m_rrcSizing	    = rrcSizing;
; 461  : 	m_rrcWindow     = rcWindow;

  0002c	8b 75 10	 mov	 esi, DWORD PTR _rcWindow$[ebp]
  0002f	56		 push	 esi
  00030	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  00033	8d 4b 20	 lea	 ecx, DWORD PTR [ebx+32]
  00036	8b 45 0c	 mov	 eax, DWORD PTR _rrcSizing$[ebp]
  00039	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  0003c	0f 11 43 10	 movups	 XMMWORD PTR [ebx+16], xmm0
  00040	e8 00 00 00 00	 call	 ??4CExResizeRect@@QAEAAV0@ABUtagRECT@@@Z ; CExResizeRect::operator=

; 462  : 	m_rrcInitWindow = rcWindow;

  00045	56		 push	 esi
  00046	8d 4b 30	 lea	 ecx, DWORD PTR [ebx+48]
  00049	e8 00 00 00 00	 call	 ??4CExResizeRect@@QAEAAV0@ABUtagRECT@@@Z ; CExResizeRect::operator=

; 463  : 	m_bDeleteWnd    = bDeleteWnd;

  0004e	8b 45 14	 mov	 eax, DWORD PTR _bDeleteWnd$[ebp]
  00051	8b cb		 mov	 ecx, ebx

; 464  : 	m_bInitialSize  = FALSE;
; 465  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00059	8b c1		 mov	 eax, ecx
  0005b	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 10 00	 ret	 16			; 00000010H
??0CExItem@@QAE@PAVCWnd@@ABVCExResizeRect@@AAVCRect@@H@Z ENDP ; CExItem::CExItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCExSizeIcon@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCExSizeIcon@@UAEPAXI@Z PROC				; CExSizeIcon::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 179  : 	{ }

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8d 8e 84 00 00
	00		 lea	 ecx, DWORD PTR [esi+132]
  0000c	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBitmap@@6B@
  00012	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  00017	8b ce		 mov	 ecx, esi
  00019	e8 00 00 00 00	 call	 ??1CStatic@@UAE@XZ	; CStatic::~CStatic
  0001e	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00021	a8 01		 test	 al, 1
  00023	74 22		 je	 SHORT $LN15@scalar
  00025	a8 04		 test	 al, 4
  00027	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002f	83 c4 04	 add	 esp, 4
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
$LN3@scalar:
  00039	68 90 00 00 00	 push	 144			; 00000090H
  0003e	56		 push	 esi
  0003f	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00044	83 c4 08	 add	 esp, 8
$LN15@scalar:
  00047	8b c6		 mov	 eax, esi
  00049	5e		 pop	 esi
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
??_GCExSizeIcon@@UAEPAXI@Z ENDP				; CExSizeIcon::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?GetMessageMap@CExSizeIcon@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetMessageMap@CExSizeIcon@@MBEPBUAFX_MSGMAP@@XZ PROC	; CExSizeIcon::GetMessageMap, COMDAT
; _this$ = ecx

; 398  : BEGIN_MESSAGE_MAP(CExSizeIcon, CStatic)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CExSizeIcon@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  00005	c3		 ret	 0
?GetMessageMap@CExSizeIcon@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CExSizeIcon::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?GetThisMessageMap@CExSizeIcon@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CExSizeIcon@@KGPBUAFX_MSGMAP@@XZ PROC ; CExSizeIcon::GetThisMessageMap, COMDAT

; 399  : 	//{{AFX_MSG_MAP(CExSizeIcon)
; 400  : 	ON_WM_SETCURSOR()
; 401  : 	ON_WM_CREATE()
; 402  : 	ON_WM_MOUSEMOVE()
; 403  : 	ON_WM_LBUTTONDOWN()
; 404  : 	//}}AFX_MSG_MAP
; 405  : END_MESSAGE_MAP()

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CExSizeIcon@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  00005	c3		 ret	 0
?GetThisMessageMap@CExSizeIcon@@KGPBUAFX_MSGMAP@@XZ ENDP ; CExSizeIcon::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?OnLButtonDown@CExSizeIcon@@IAEXIVCPoint@@@Z
_TEXT	SEGMENT
_pt$ = -8						; size = 8
_nFlags$ = 8						; size = 4
_point$ = 12						; size = 8
?OnLButtonDown@CExSizeIcon@@IAEXIVCPoint@@@Z PROC	; CExSizeIcon::OnLButtonDown, COMDAT
; _this$ = ecx

; 443  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 432  : 	{ Default(); }

  00009	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default

; 92   : 	{ ASSERT(::IsWindow(m_hWnd)); ::ClientToScreen(m_hWnd, lpPoint); }

  0000e	8d 45 f8	 lea	 eax, DWORD PTR _pt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 400  : 	x = 0;

  00011	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pt$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 92   : 	{ ASSERT(::IsWindow(m_hWnd)); ::ClientToScreen(m_hWnd, lpPoint); }

  00018	50		 push	 eax
  00019	ff 76 20	 push	 DWORD PTR [esi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 401  : 	y = 0;

  0001c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pt$[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 92   : 	{ ASSERT(::IsWindow(m_hWnd)); ::ClientToScreen(m_hWnd, lpPoint); }

  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ClientToScreen@8

; 213  : 	{ ASSERT(::IsWindow(m_hWnd)); return CWnd::FromHandle(::GetParent(m_hWnd)); }

  00029	ff 76 20	 push	 DWORD PTR [esi+32]
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetParent@4
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 449  : 	GetParent()->SendMessage( WM_NCLBUTTONDOWN, HTBOTTOMRIGHT,

  00038	8b 55 fc	 mov	 edx, DWORD PTR _pt$[ebp+4]
  0003b	0f b7 4d f8	 movzx	 ecx, WORD PTR _pt$[ebp]
  0003f	81 e2 00 00 ff
	ff		 and	 edx, -65536		; ffff0000H
  00045	0b d1		 or	 edx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 32   : 	{ ASSERT(::IsWindow(m_hWnd)); return ::SendMessage(m_hWnd, message, wParam, lParam); }

  00047	52		 push	 edx
  00048	6a 11		 push	 17			; 00000011H
  0004a	68 a1 00 00 00	 push	 161			; 000000a1H
  0004f	ff 70 20	 push	 DWORD PTR [eax+32]
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00058	5e		 pop	 esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 451  : }

  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
?OnLButtonDown@CExSizeIcon@@IAEXIVCPoint@@@Z ENDP	; CExSizeIcon::OnLButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?OnMouseMove@CExSizeIcon@@IAEXIVCPoint@@@Z
_TEXT	SEGMENT
_nFlags$ = 8						; size = 4
_point$ = 12						; size = 8
?OnMouseMove@CExSizeIcon@@IAEXIVCPoint@@@Z PROC		; CExSizeIcon::OnMouseMove, COMDAT
; _this$ = ecx

; 433  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 454  : 	{ Default(); }

  00003	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 437  : 	if (::GetCursor() != m_hCursor) {

  00008	8b b6 80 00 00
	00		 mov	 esi, DWORD PTR [esi+128]
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCursor@0
  00014	3b c6		 cmp	 eax, esi
  00016	74 07		 je	 SHORT $LN2@OnMouseMov

; 438  : 		::SetCursor(m_hCursor);

  00018	56		 push	 esi
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4
$LN2@OnMouseMov:

; 439  : 	}
; 440  : }

  0001f	5e		 pop	 esi
  00020	c2 0c 00	 ret	 12			; 0000000cH
?OnMouseMove@CExSizeIcon@@IAEXIVCPoint@@@Z ENDP		; CExSizeIcon::OnMouseMove
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?OnCreate@CExSizeIcon@@IAEHPAUtagCREATESTRUCTA@@@Z
_TEXT	SEGMENT
_lpCreateStruct$ = 8					; size = 4
?OnCreate@CExSizeIcon@@IAEHPAUtagCREATESTRUCTA@@@Z PROC	; CExSizeIcon::OnCreate, COMDAT
; _this$ = ecx

; 419  : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 296  : 	{ return (int)Default(); }

  00003	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 420  : 	if (CStatic::OnCreate(lpCreateStruct) == -1)

  00008	83 f8 ff	 cmp	 eax, -1
  0000b	75 06		 jne	 SHORT $LN2@OnCreate

; 421  : 		return -1;

  0000d	0b c0		 or	 eax, eax
  0000f	5f		 pop	 edi

; 430  : }

  00010	c2 04 00	 ret	 4
$LN2@OnCreate:
  00013	56		 push	 esi

; 424  : 	if(!m_bmSizeIcon.GetSafeHandle())

  00014	8d b7 84 00 00
	00		 lea	 esi, DWORD PTR [edi+132]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 68   : 	{ return this == NULL ? NULL : m_hObject; }

  0001a	85 f6		 test	 esi, esi
  0001c	74 06		 je	 SHORT $LN19@OnCreate
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 424  : 	if(!m_bmSizeIcon.GetSafeHandle())

  0001e	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  00022	75 15		 jne	 SHORT $LN3@OnCreate
$LN19@OnCreate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 215  : 	{ return Attach(::LoadBitmapW(NULL, MAKEINTRESOURCEW(nIDBitmap))); }

  00024	68 fe 7f 00 00	 push	 32766			; 00007ffeH
  00029	6a 00		 push	 0
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadBitmapW@8
  00031	50		 push	 eax
  00032	8b ce		 mov	 ecx, esi
  00034	e8 00 00 00 00	 call	 ?Attach@CGdiObject@@QAEHPAX@Z ; CGdiObject::Attach
$LN3@OnCreate:

; 173  : 	{ return (HBITMAP)(this == NULL ? NULL : m_hObject); }

  00039	85 f6		 test	 esi, esi
  0003b	75 04		 jne	 SHORT $LN15@OnCreate
  0003d	33 c0		 xor	 eax, eax
  0003f	eb 03		 jmp	 SHORT $LN16@OnCreate
$LN15@OnCreate:
  00041	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
$LN16@OnCreate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 613  : 	{ ASSERT(::IsWindow(m_hWnd)); return (HBITMAP)::SendMessage(m_hWnd, STM_SETIMAGE, IMAGE_BITMAP, (LPARAM)hBitmap); }

  00044	50		 push	 eax
  00045	6a 00		 push	 0
  00047	68 72 01 00 00	 push	 370			; 00000172H
  0004c	ff 77 20	 push	 DWORD PTR [edi+32]
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 429  : 	return 0;

  00055	5e		 pop	 esi
  00056	33 c0		 xor	 eax, eax
  00058	5f		 pop	 edi

; 430  : }

  00059	c2 04 00	 ret	 4
?OnCreate@CExSizeIcon@@IAEHPAUtagCREATESTRUCTA@@@Z ENDP	; CExSizeIcon::OnCreate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?OnSetCursor@CExSizeIcon@@IAEHPAVCWnd@@II@Z
_TEXT	SEGMENT
_pWnd$ = 8						; size = 4
_nHitTest$ = 12						; size = 4
_message$ = 16						; size = 4
?OnSetCursor@CExSizeIcon@@IAEHPAVCWnd@@II@Z PROC	; CExSizeIcon::OnSetCursor, COMDAT
; _this$ = ecx

; 409  : 	UNREFERENCED_PARAMETER(pWnd);
; 410  : 	UNREFERENCED_PARAMETER(nHitTest);
; 411  : 	UNREFERENCED_PARAMETER(message);
; 412  : 
; 413  : 	// Set the cursor to the size cursor.
; 414  : 	::SetCursor(m_hCursor);

  00000	ff b1 80 00 00
	00		 push	 DWORD PTR [ecx+128]
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4

; 415  : 	return TRUE;

  0000c	b8 01 00 00 00	 mov	 eax, 1

; 416  : }

  00011	c2 0c 00	 ret	 12			; 0000000cH
?OnSetCursor@CExSizeIcon@@IAEHPAVCWnd@@II@Z ENDP	; CExSizeIcon::OnSetCursor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ??0CExSizeIcon@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CExSizeIcon@@QAE@XZ PROC				; CExSizeIcon::CExSizeIcon, COMDAT
; _this$ = ecx

; 393  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 603  : 	{ }

  0000a	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 395  : 	m_hCursor = ::LoadCursor(NULL, IDC_SIZENWSE);

  0000f	68 82 7f 00 00	 push	 32642			; 00007f82H
  00014	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CExSizeIcon@@6B@
  0001a	6a 00		 push	 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 70   : 	{ m_hObject = NULL; }

  0001c	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0

; 177  : 	{ }

  00026	c7 86 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+132], OFFSET ??_7CBitmap@@6B@
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp

; 395  : 	m_hCursor = ::LoadCursor(NULL, IDC_SIZENWSE);

  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00036	89 86 80 00 00
	00		 mov	 DWORD PTR [esi+128], eax

; 396  : }

  0003c	8b c6		 mov	 eax, esi
  0003e	5e		 pop	 esi
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
??0CExSizeIcon@@QAE@XZ ENDP				; CExSizeIcon::CExSizeIcon
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCStatic@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCStatic@@UAEPAXI@Z PROC				; CStatic::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CStatic@@UAE@XZ	; CStatic::~CStatic
  0000b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0000e	a8 01		 test	 al, 1
  00010	74 22		 je	 SHORT $LN9@scalar
  00012	a8 04		 test	 al, 4
  00014	75 10		 jne	 SHORT $LN3@scalar

; 112  : 	{ ::operator delete(p); }

  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001c	83 c4 04	 add	 esp, 4
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
$LN3@scalar:
  00026	68 80 00 00 00	 push	 128			; 00000080H
  0002b	56		 push	 esi
  0002c	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00031	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00034	8b c6		 mov	 eax, esi
  00036	5e		 pop	 esi
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
??_GCStatic@@UAEPAXI@Z ENDP				; CStatic::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
?EndModalState@CWnd@@UAEXXZ PROC			; CWnd::EndModalState, COMDAT
; _this$ = ecx

; 567  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	6a 01		 push	 1
  00002	ff 71 20	 push	 DWORD PTR [ecx+32]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  0000b	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
?BeginModalState@CWnd@@UAEXXZ PROC			; CWnd::BeginModalState, COMDAT
; _this$ = ecx

; 565  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	6a 00		 push	 0
  00002	ff 71 20	 push	 DWORD PTR [ecx+32]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  0000b	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC	; CWnd::DoDataExchange, COMDAT
; _this$ = ecx

; 561  : 	{ } // default does nothing

  00000	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBitmap@@UAEPAXI@Z PROC				; CBitmap::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 179  : 	{ }

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBitmap@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  00011	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00014	a8 01		 test	 al, 1
  00016	74 1f		 je	 SHORT $LN12@scalar
  00018	a8 04		 test	 al, 4
  0001a	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
$LN3@scalar:
  0002c	6a 08		 push	 8
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00034	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00037	8b c6		 mov	 eax, esi
  00039	5e		 pop	 esi
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
??_GCBitmap@@UAEPAXI@Z ENDP				; CBitmap::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT
??1CBitmap@@UAE@XZ PROC					; CBitmap::~CBitmap, COMDAT
; _this$ = ecx

; 179  : 	{ }

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBitmap@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
??1CBitmap@@UAE@XZ ENDP					; CBitmap::~CBitmap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGdiObject@@UAEPAXI@Z PROC				; CGdiObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  0000b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0000e	a8 01		 test	 al, 1
  00010	74 1f		 je	 SHORT $LN9@scalar
  00012	a8 04		 test	 al, 4
  00014	75 10		 jne	 SHORT $LN3@scalar

; 112  : 	{ ::operator delete(p); }

  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001c	83 c4 04	 add	 esp, 4
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
$LN3@scalar:
  00026	6a 08		 push	 8
  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002e	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00031	8b c6		 mov	 eax, esi
  00033	5e		 pop	 esi
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
??_GCGdiObject@@UAEPAXI@Z ENDP				; CGdiObject::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT
_pException$2 = -540					; size = 4
_strMsg$3 = -536					; size = 4
_szErrorMessage$4 = -532				; size = 512
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
??1CGdiObject@@UAE@XZ PROC				; CGdiObject::~CGdiObject, COMDAT
; _this$ = ecx

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGdiObject@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 10 02 00
	00		 sub	 esp, 528		; 00000210H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00031	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CGdiObject@@6B@

; 75   : 	AFX_BEGIN_DESTRUCTOR

  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 76   : 	DeleteObject();

  0003e	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject
$LN18@CGdiObject:

; 78   : }

  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00054	33 cd		 xor	 ecx, ebp
  00056	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
__catch$??1CGdiObject@@UAE@XZ$0:

; 77   : 	AFX_END_DESTRUCTOR

  0005f	8d 8d e8 fd ff
	ff		 lea	 ecx, DWORD PTR _strMsg$3[ebp]
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0006b	8b b5 e4 fd ff
	ff		 mov	 esi, DWORD PTR _pException$2[ebp]
  00071	8d 8d ec fd ff
	ff		 lea	 ecx, DWORD PTR _szErrorMessage$4[ebp]
  00077	6a 00		 push	 0
  00079	68 00 02 00 00	 push	 512			; 00000200H
  0007e	51		 push	 ecx
  0007f	8b 06		 mov	 eax, DWORD PTR [esi]
  00081	8b ce		 mov	 ecx, esi
  00083	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00087	ff 50 14	 call	 DWORD PTR [eax+20]
  0008a	85 c0		 test	 eax, eax
  0008c	74 2a		 je	 SHORT $LN9@CGdiObject
  0008e	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _szErrorMessage$4[ebp]
  00094	50		 push	 eax
  00095	6a 4d		 push	 77			; 0000004dH
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@
  000a1	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _strMsg$3[ebp]
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HBOOMJBF@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ?6?$CFTs@
  000ac	50		 push	 eax
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  000b3	83 c4 18	 add	 esp, 24			; 00000018H
  000b6	eb 21		 jmp	 SHORT $LN10@CGdiObject
$LN9@CGdiObject:
  000b8	6a 4d		 push	 77			; 0000004dH
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@
  000c4	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _strMsg$3[ebp]
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OMEMOKLE@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ@
  000cf	50		 push	 eax
  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  000d6	83 c4 14	 add	 esp, 20			; 00000014H
$LN10@CGdiObject:
  000d9	6a 00		 push	 0
  000db	6a 00		 push	 0
  000dd	ff b5 e8 fd ff
	ff		 push	 DWORD PTR _strMsg$3[ebp]
  000e3	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox
  000e8	8d 8d e8 fd ff
	ff		 lea	 ecx, DWORD PTR _strMsg$3[ebp]
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000f4	8b 06		 mov	 eax, DWORD PTR [esi]
  000f6	8b ce		 mov	 ecx, esi
  000f8	6a 01		 push	 1
  000fa	ff 50 04	 call	 DWORD PTR [eax+4]
  000fd	b8 00 00 00 00	 mov	 eax, $LN18@CGdiObject
  00102	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CGdiObject@@UAE@XZ$2:
  00000	8d 8d e8 fd ff
	ff		 lea	 ecx, DWORD PTR _strMsg$3[ebp]
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$??1CGdiObject@@UAE@XZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 8a e0 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-544]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGdiObject@@UAE@XZ
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGdiObject@@UAE@XZ ENDP				; CGdiObject::~CGdiObject
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC		; CObject::Dump, COMDAT
; _this$ = ecx

; 122  : 	{ /* no dumping in release builds */ }

  00000	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
?AssertValid@CObject@@UBEXXZ PROC			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 120  : 	{ /* no asserts in release builds */ }

  00000	c2 00 00	 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC		; CObject::Serialize, COMDAT
; _this$ = ecx

; 106  : 	{ /* CObject does not serialize anything by default */ }

  00000	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CObject@@SGXPAX@Z PROC				; CObject::operator delete, COMDAT

; 112  : 	{ ::operator delete(p); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 08	 push	 DWORD PTR _p$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	83 c4 04	 add	 esp, 4
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT
??1CObject@@UAE@XZ PROC					; CObject::~CObject, COMDAT
; _this$ = ecx

; 104  : 	{ }

  00000	c2 00 00	 ret	 0
??1CObject@@UAE@XZ ENDP					; CObject::~CObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.h
;	COMDAT ?AfxCrtErrorCheck@@YAHH@Z
_TEXT	SEGMENT
_error$ = 8						; size = 4
?AfxCrtErrorCheck@@YAHH@Z PROC				; AfxCrtErrorCheck, COMDAT

; 503  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 504  : 	switch(error)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _error$[ebp]
  00006	83 f9 50	 cmp	 ecx, 80			; 00000050H
  00009	77 17		 ja	 SHORT $LN9@AfxCrtErro
  0000b	0f b6 81 00 00
	00 00		 movzx	 eax, BYTE PTR $LN11@AfxCrtErro[ecx]
  00012	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN12@AfxCrtErro[eax*4]
$LN4@AfxCrtErro:

; 505  : 	{
; 506  : 	case ENOMEM:
; 507  : 		AfxThrowMemoryException();

  00019	e9 00 00 00 00	 jmp	 ?AfxThrowMemoryException@@YGXXZ ; AfxThrowMemoryException
$LN7@AfxCrtErro:

; 518  : 		break;
; 519  : 	}
; 520  : 	return error;

  0001e	8b c1		 mov	 eax, ecx

; 521  : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
$LN9@AfxCrtErro:

; 508  : 		break;
; 509  : 	case EINVAL:
; 510  : 	case ERANGE:
; 511  : 		AfxThrowInvalidArgException();
; 512  : 		break;
; 513  : 	case STRUNCATE:
; 514  : 	case 0:
; 515  : 		break;
; 516  : 	default:
; 517  : 		AfxThrowInvalidArgException();

  00022	e9 00 00 00 00	 jmp	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
  00027	90		 npad	 1
$LN12@AfxCrtErro:

; 521  : }

  00028	00 00 00 00	 DD	 $LN7@AfxCrtErro
  0002c	00 00 00 00	 DD	 $LN4@AfxCrtErro
  00030	00 00 00 00	 DD	 $LN9@AfxCrtErro
  00034	00 00 00 00	 DD	 $LN9@AfxCrtErro
$LN11@AfxCrtErro:
  00038	00		 DB	 0
  00039	03		 DB	 3
  0003a	03		 DB	 3
  0003b	03		 DB	 3
  0003c	03		 DB	 3
  0003d	03		 DB	 3
  0003e	03		 DB	 3
  0003f	03		 DB	 3
  00040	03		 DB	 3
  00041	03		 DB	 3
  00042	03		 DB	 3
  00043	03		 DB	 3
  00044	01		 DB	 1
  00045	03		 DB	 3
  00046	03		 DB	 3
  00047	03		 DB	 3
  00048	03		 DB	 3
  00049	03		 DB	 3
  0004a	03		 DB	 3
  0004b	03		 DB	 3
  0004c	03		 DB	 3
  0004d	03		 DB	 3
  0004e	02		 DB	 2
  0004f	03		 DB	 3
  00050	03		 DB	 3
  00051	03		 DB	 3
  00052	03		 DB	 3
  00053	03		 DB	 3
  00054	03		 DB	 3
  00055	03		 DB	 3
  00056	03		 DB	 3
  00057	03		 DB	 3
  00058	03		 DB	 3
  00059	03		 DB	 3
  0005a	02		 DB	 2
  0005b	03		 DB	 3
  0005c	03		 DB	 3
  0005d	03		 DB	 3
  0005e	03		 DB	 3
  0005f	03		 DB	 3
  00060	03		 DB	 3
  00061	03		 DB	 3
  00062	03		 DB	 3
  00063	03		 DB	 3
  00064	03		 DB	 3
  00065	03		 DB	 3
  00066	03		 DB	 3
  00067	03		 DB	 3
  00068	03		 DB	 3
  00069	03		 DB	 3
  0006a	03		 DB	 3
  0006b	03		 DB	 3
  0006c	03		 DB	 3
  0006d	03		 DB	 3
  0006e	03		 DB	 3
  0006f	03		 DB	 3
  00070	03		 DB	 3
  00071	03		 DB	 3
  00072	03		 DB	 3
  00073	03		 DB	 3
  00074	03		 DB	 3
  00075	03		 DB	 3
  00076	03		 DB	 3
  00077	03		 DB	 3
  00078	03		 DB	 3
  00079	03		 DB	 3
  0007a	03		 DB	 3
  0007b	03		 DB	 3
  0007c	03		 DB	 3
  0007d	03		 DB	 3
  0007e	03		 DB	 3
  0007f	03		 DB	 3
  00080	03		 DB	 3
  00081	03		 DB	 3
  00082	03		 DB	 3
  00083	03		 DB	 3
  00084	03		 DB	 3
  00085	03		 DB	 3
  00086	03		 DB	 3
  00087	03		 DB	 3
  00088	00		 DB	 0
?AfxCrtErrorCheck@@YAHH@Z ENDP				; AfxCrtErrorCheck
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\ExResize.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
