; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\ExControl\CtlSharedData.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0P@BKKCOCLK@RMSG_INTERFACE@		; `string'
PUBLIC	??_C@_0BB@GOOPDKI@RMSG_GETPCTRDATA@		; `string'
PUBLIC	??_C@_0BB@JPACFCL@RMSG_SETPCTRDATA@		; `string'
;	COMDAT ??_C@_0BB@JPACFCL@RMSG_SETPCTRDATA@
CONST	SEGMENT
??_C@_0BB@JPACFCL@RMSG_SETPCTRDATA@ DB 'RMSG_SETPCTRDATA', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GOOPDKI@RMSG_GETPCTRDATA@
CONST	SEGMENT
??_C@_0BB@GOOPDKI@RMSG_GETPCTRDATA@ DB 'RMSG_GETPCTRDATA', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BKKCOCLK@RMSG_INTERFACE@
CONST	SEGMENT
??_C@_0P@BKKCOCLK@RMSG_INTERFACE@ DB 'RMSG_INTERFACE', 00H ; `string'
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0ST_LSHAREDFORMAT@@QAE@XZ			; ST_LSHAREDFORMAT::ST_LSHAREDFORMAT
PUBLIC	??1ST_LSHAREDFORMAT@@QAE@XZ			; ST_LSHAREDFORMAT::~ST_LSHAREDFORMAT
PUBLIC	?AddTail@?$CList@UST_LSHAREDFORMAT@@U1@@@QAEPAU__POSITION@@UST_LSHAREDFORMAT@@@Z ; CList<ST_LSHAREDFORMAT,ST_LSHAREDFORMAT>::AddTail
PUBLIC	?NewNode@?$CList@UST_LSHAREDFORMAT@@U1@@@IAEPAUCNode@1@PAU21@0@Z ; CList<ST_LSHAREDFORMAT,ST_LSHAREDFORMAT>::NewNode
PUBLIC	?InitLSharedData@CExOCXDLL@@QAEHXZ		; CExOCXDLL::InitLSharedData
PUBLIC	?InitStart@CExOCXDLL@@QAEHPBDAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CExOCXDLL::InitStart
PUBLIC	?InitSet@CExOCXDLL@@QAEHXZ			; CExOCXDLL::InitSet
PUBLIC	?InitGet@CExOCXDLL@@QAEHPBD@Z			; CExOCXDLL::InitGet
PUBLIC	?ChangedLShareData@CExOCXDLL@@QAEHPBD0@Z	; CExOCXDLL::ChangedLShareData
PUBLIC	?ParedShareDataChange@CExOCXDLL@@QAEHPBD0@Z	; CExOCXDLL::ParedShareDataChange
PUBLIC	??_C@_01ICJEACDI@?$DL@				; `string'
EXTRN	__imp__RegisterWindowMessageA@4:PROC
EXTRN	__imp__IsWindow@4:PROC
EXTRN	__imp__atoi:PROC
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	__imp_??A?$CSimpleStringT@D$00@ATL@@QBEDH@Z:PROC
EXTRN	__imp_?Empty@?$CSimpleStringT@D$00@ATL@@QAEXXZ:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z:PROC
EXTRN	__imp_??Y?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z:PROC
EXTRN	__imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z:PROC
EXTRN	__imp_?Find@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBDH@Z:PROC
EXTRN	__imp_?Mid@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z:PROC
EXTRN	__imp_?Left@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z:PROC
EXTRN	?Create@CPlex@@SGPAU1@AAPAU1@II@Z:PROC		; CPlex::Create
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?RMSG_INTERFACE@@3IB DD 01H DUP (?)			; RMSG_INTERFACE
?RMSG_GETPCTRDATA@@3IB DD 01H DUP (?)			; RMSG_GETPCTRDATA
?RMSG_SETPCTRDATA@@3IB DD 01H DUP (?)			; RMSG_SETPCTRDATA
_BSS	ENDS
CRT$XCU	SEGMENT
?RMSG_INTERFACE$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_INTERFACE@@YAXXZ ; RMSG_INTERFACE$initializer$
CRT$XCU	ENDS
;	COMDAT ??_C@_01ICJEACDI@?$DL@
CONST	SEGMENT
??_C@_01ICJEACDI@?$DL@ DB ';', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ParedShareDataChange@CExOCXDLL@@QAEHPBD0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ParedShareDataChange@CExOCXDLL@@QAEHPBD0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ParedShareDataChange@CExOCXDLL@@QAEHPBD0@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?ParedShareDataChange@CExOCXDLL@@QAEHPBD0@Z$5
__ehfuncinfo$?ParedShareDataChange@CExOCXDLL@@QAEHPBD0@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?ParedShareDataChange@CExOCXDLL@@QAEHPBD0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?InitLSharedData@CExOCXDLL@@QAEHXZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?InitLSharedData@CExOCXDLL@@QAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?InitLSharedData@CExOCXDLL@@QAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitLSharedData@CExOCXDLL@@QAEHXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?InitLSharedData@CExOCXDLL@@QAEHXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?InitLSharedData@CExOCXDLL@@QAEHXZ$2
	DD	01H
	DD	FLAT:__unwindfunclet$?InitLSharedData@CExOCXDLL@@QAEHXZ$3
	DD	01H
	DD	FLAT:__unwindfunclet$?InitLSharedData@CExOCXDLL@@QAEHXZ$4
	DD	01H
	DD	FLAT:__unwindfunclet$?InitLSharedData@CExOCXDLL@@QAEHXZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$?InitLSharedData@CExOCXDLL@@QAEHXZ$9
	DD	05H
	DD	FLAT:__unwindfunclet$?InitLSharedData@CExOCXDLL@@QAEHXZ$7
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetAt@?$CList@UST_LSHAREDFORMAT@@U1@@@QAEXPAU__POSITION@@UST_LSHAREDFORMAT@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetAt@?$CList@UST_LSHAREDFORMAT@@U1@@@QAEXPAU__POSITION@@UST_LSHAREDFORMAT@@@Z$0
__ehfuncinfo$?SetAt@?$CList@UST_LSHAREDFORMAT@@U1@@@QAEXPAU__POSITION@@UST_LSHAREDFORMAT@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetAt@?$CList@UST_LSHAREDFORMAT@@U1@@@QAEXPAU__POSITION@@UST_LSHAREDFORMAT@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddTail@?$CList@UST_LSHAREDFORMAT@@U1@@@QAEPAU__POSITION@@UST_LSHAREDFORMAT@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddTail@?$CList@UST_LSHAREDFORMAT@@U1@@@QAEPAU__POSITION@@UST_LSHAREDFORMAT@@@Z$0
__ehfuncinfo$?AddTail@?$CList@UST_LSHAREDFORMAT@@U1@@@QAEPAU__POSITION@@UST_LSHAREDFORMAT@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddTail@?$CList@UST_LSHAREDFORMAT@@U1@@@QAEPAU__POSITION@@UST_LSHAREDFORMAT@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ST_LSHAREDFORMAT@@QAE@ABU0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ST_LSHAREDFORMAT@@QAE@ABU0@@Z$0
__ehfuncinfo$??0ST_LSHAREDFORMAT@@QAE@ABU0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ST_LSHAREDFORMAT@@QAE@ABU0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
?RMSG_GETPCTRDATA$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_GETPCTRDATA@@YAXXZ ; RMSG_GETPCTRDATA$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_SETPCTRDATA$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_SETPCTRDATA@@YAXXZ ; RMSG_SETPCTRDATA$initializer$
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp
;	COMDAT ?ParedShareDataChange@CExOCXDLL@@QAEHPBD0@Z
_TEXT	SEGMENT
$T2 = -64						; size = 20
_LSDF$ = -44						; size = 20
_this$ = -24						; size = 4
_this$1$ = -20						; size = 4
_tmpPos$1$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_szSharedName$ = 8					; size = 4
_szData$ = 12						; size = 4
?ParedShareDataChange@CExOCXDLL@@QAEHPBD0@Z PROC	; CExOCXDLL::ParedShareDataChange, COMDAT
; _this$ = ecx

; 123  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ParedShareDataChange@CExOCXDLL@@QAEHPBD0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
  0002a	89 75 ec	 mov	 DWORD PTR _this$1$[ebp], esi
  0002d	8d 4d d4	 lea	 ecx, DWORD PTR _LSDF$[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00036	8d 4d d8	 lea	 ecx, DWORD PTR _LSDF$[ebp+4]
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 124  : //	TRACE("CHtcInputExCtrl::ParedShareDataChange ==> ShareName[%s] Value[%s]\n", szSharedName, szData);
; 125  : 
; 126  : 	ST_LSHAREDFORMAT LSDF;
; 127  : 	POSITION tmpPos;
; 128  : 	for(POSITION pos=m_ListLShare.GetHeadPosition(); pos; )

  0003f	8b b6 58 02 00
	00		 mov	 esi, DWORD PTR [esi+600]
  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004c	85 f6		 test	 esi, esi
  0004e	0f 84 f8 00 00
	00		 je	 $LN3@ParedShare
$LL2@ParedShare:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 811  : 	{ CNode* pNode = (CNode*) rPosition;

  00054	8b fe		 mov	 edi, esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp

; 130  : 		tmpPos = pos;

  00056	89 75 f0	 mov	 DWORD PTR _tmpPos$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 813  : 		rPosition = (POSITION) pNode->pNext;

  00059	8b 36		 mov	 esi, DWORD PTR [esi]
  0005b	8d 4d d4	 lea	 ecx, DWORD PTR _LSDF$[ebp]

; 814  : 		return pNode->data; }

  0005e	83 c7 08	 add	 edi, 8
  00061	57		 push	 edi
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  00068	8d 5f 04	 lea	 ebx, DWORD PTR [edi+4]
  0006b	53		 push	 ebx
  0006c	8d 4d d8	 lea	 ecx, DWORD PTR _LSDF$[ebp+4]
  0006f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  00075	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00078	89 4d dc	 mov	 DWORD PTR _LSDF$[ebp+8], ecx
  0007b	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  0007e	89 45 e0	 mov	 DWORD PTR _LSDF$[ebp+12], eax
  00081	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00084	89 45 e4	 mov	 DWORD PTR _LSDF$[ebp+16], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp

; 131  : 		LSDF = m_ListLShare.GetNext(pos);

  00087	85 c0		 test	 eax, eax

; 132  : 		if(LSDF.m_bGet || LSDF.m_bStart)

  00089	75 08		 jne	 SHORT $LN6@ParedShare
  0008b	85 c9		 test	 ecx, ecx
  0008d	0f 84 b1 00 00
	00		 je	 $LN7@ParedShare
$LN6@ParedShare:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h

; 2486 : 		return(str1.Compare(psz2) == 0);

  00093	ff 75 08	 push	 DWORD PTR _szSharedName$[ebp]
  00096	8d 4d d4	 lea	 ecx, DWORD PTR _LSDF$[ebp]
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
  0009f	85 c0		 test	 eax, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp

; 134  : 			if(LSDF.m_szSharedName==szSharedName)

  000a1	0f 85 9d 00 00
	00		 jne	 $LN7@ParedShare

; 135  : 			{
; 136  : 				LSDF.m_szData = szData;		//Added by Kay Seo, 2000/11/22

  000a7	ff 75 0c	 push	 DWORD PTR _szData$[ebp]
  000aa	8d 4d d8	 lea	 ecx, DWORD PTR _LSDF$[ebp+4]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z

; 137  : 
; 138  : 				TRACE("Output List --> SharedName[%s],Value[%s]\n", LSDF.m_szSharedName, LSDF.m_szData);
; 139  : 				
; 140  : 				m_ListLShare.SetAt(tmpPos,LSDF);

  000b3	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  000b6	89 45 e8	 mov	 DWORD PTR _this$[ebp], eax
  000b9	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  000bc	8d 45 d4	 lea	 eax, DWORD PTR _LSDF$[ebp]
  000bf	50		 push	 eax
  000c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  000c6	8d 45 d8	 lea	 eax, DWORD PTR _LSDF$[ebp+4]
  000c9	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000cd	50		 push	 eax
  000ce	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp+4]
  000d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  000d7	8b 45 dc	 mov	 eax, DWORD PTR _LSDF$[ebp+8]
  000da	89 45 c8	 mov	 DWORD PTR $T2[ebp+8], eax
  000dd	8b 45 e0	 mov	 eax, DWORD PTR _LSDF$[ebp+12]
  000e0	89 45 cc	 mov	 DWORD PTR $T2[ebp+12], eax
  000e3	8b 45 e4	 mov	 eax, DWORD PTR _LSDF$[ebp+16]
  000e6	89 45 d0	 mov	 DWORD PTR $T2[ebp+16], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 847  : 		pNode->data = newElement; }

  000e9	8b 7d f0	 mov	 edi, DWORD PTR _tmpPos$1$[ebp]
  000ec	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  000ef	50		 push	 eax

; 815  : template<class TYPE, class ARG_TYPE>
; 816  : AFX_INLINE const TYPE& CList<TYPE, ARG_TYPE>::GetNext(POSITION& rPosition) const // return *Position++
; 817  : 	{ CNode* pNode = (CNode*) rPosition;
; 818  : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 819  : 		rPosition = (POSITION) pNode->pNext;
; 820  : 		return pNode->data; }
; 821  : template<class TYPE, class ARG_TYPE>
; 822  : AFX_INLINE TYPE& CList<TYPE, ARG_TYPE>::GetPrev(POSITION& rPosition) // return *Position--
; 823  : 	{ CNode* pNode = (CNode*) rPosition;
; 824  : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 825  : 		rPosition = (POSITION) pNode->pPrev;
; 826  : 		return pNode->data; }
; 827  : template<class TYPE, class ARG_TYPE>
; 828  : AFX_INLINE const TYPE& CList<TYPE, ARG_TYPE>::GetPrev(POSITION& rPosition) const // return *Position--
; 829  : 	{ CNode* pNode = (CNode*) rPosition;
; 830  : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 831  : 		rPosition = (POSITION) pNode->pPrev;
; 832  : 		return pNode->data; }
; 833  : template<class TYPE, class ARG_TYPE>
; 834  : AFX_INLINE TYPE& CList<TYPE, ARG_TYPE>::GetAt(POSITION position)
; 835  : 	{ CNode* pNode = (CNode*) position;
; 836  : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 837  : 		return pNode->data; }
; 838  : template<class TYPE, class ARG_TYPE>
; 839  : AFX_INLINE const TYPE& CList<TYPE, ARG_TYPE>::GetAt(POSITION position) const
; 840  : 	{ CNode* pNode = (CNode*) position;
; 841  : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 842  : 		return pNode->data; }
; 843  : template<class TYPE, class ARG_TYPE>
; 844  : AFX_INLINE void CList<TYPE, ARG_TYPE>::SetAt(POSITION pos, ARG_TYPE newElement)
; 845  : 	{ CNode* pNode = (CNode*) pos;

  000f0	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000f4	8d 4f 08	 lea	 ecx, DWORD PTR [edi+8]
  000f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  000fd	8d 45 c4	 lea	 eax, DWORD PTR $T2[ebp+4]
  00100	8b cb		 mov	 ecx, ebx
  00102	50		 push	 eax
  00103	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  00109	8b 45 c8	 mov	 eax, DWORD PTR $T2[ebp+8]
  0010c	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp+4]
  0010f	89 47 10	 mov	 DWORD PTR [edi+16], eax
  00112	8b 45 cc	 mov	 eax, DWORD PTR $T2[ebp+12]
  00115	89 47 14	 mov	 DWORD PTR [edi+20], eax
  00118	8b 45 d0	 mov	 eax, DWORD PTR $T2[ebp+16]
  0011b	89 47 18	 mov	 DWORD PTR [edi+24], eax

; 847  : 		pNode->data = newElement; }

  0011e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00122	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00128	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  0012b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp

; 142  : 				OnLSharedDataChange(szSharedName, szData, FALSE);

  00131	8b 4d ec	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00134	6a 00		 push	 0
  00136	ff 75 0c	 push	 DWORD PTR _szData$[ebp]
  00139	8b 01		 mov	 eax, DWORD PTR [ecx]
  0013b	ff 75 08	 push	 DWORD PTR _szSharedName$[ebp]
  0013e	ff 90 f4 01 00
	00		 call	 DWORD PTR [eax+500]
$LN7@ParedShare:

; 124  : //	TRACE("CHtcInputExCtrl::ParedShareDataChange ==> ShareName[%s] Value[%s]\n", szSharedName, szData);
; 125  : 
; 126  : 	ST_LSHAREDFORMAT LSDF;
; 127  : 	POSITION tmpPos;
; 128  : 	for(POSITION pos=m_ListLShare.GetHeadPosition(); pos; )

  00144	85 f6		 test	 esi, esi
  00146	0f 85 08 ff ff
	ff		 jne	 $LL2@ParedShare
$LN3@ParedShare:
  0014c	8d 4d d8	 lea	 ecx, DWORD PTR _LSDF$[ebp+4]
  0014f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00155	8d 4d d4	 lea	 ecx, DWORD PTR _LSDF$[ebp]
  00158	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 143  : 			}
; 144  : 		}
; 145  : 	}
; 146  : 
; 147  : 	return TRUE;

  0015e	b8 01 00 00 00	 mov	 eax, 1

; 148  : }

  00163	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00166	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0016d	59		 pop	 ecx
  0016e	5f		 pop	 edi
  0016f	5e		 pop	 esi
  00170	5b		 pop	 ebx
  00171	8b e5		 mov	 esp, ebp
  00173	5d		 pop	 ebp
  00174	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ParedShareDataChange@CExOCXDLL@@QAEHPBD0@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _LSDF$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ST_LSHAREDFORMAT@@QAE@XZ
__unwindfunclet$?ParedShareDataChange@CExOCXDLL@@QAEHPBD0@Z$3:
  00008	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?ParedShareDataChange@CExOCXDLL@@QAEHPBD0@Z$5:
  00011	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  00014	e9 00 00 00 00	 jmp	 ??1ST_LSHAREDFORMAT@@QAE@XZ
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
__ehhandler$?ParedShareDataChange@CExOCXDLL@@QAEHPBD0@Z:
  0001e	90		 npad	 1
  0001f	90		 npad	 1
  00020	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00024	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00027	8b 4a bc	 mov	 ecx, DWORD PTR [edx-68]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ParedShareDataChange@CExOCXDLL@@QAEHPBD0@Z
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ParedShareDataChange@CExOCXDLL@@QAEHPBD0@Z ENDP	; CExOCXDLL::ParedShareDataChange
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp
;	COMDAT ?ChangedLShareData@CExOCXDLL@@QAEHPBD0@Z
_TEXT	SEGMENT
_szShareName$ = 8					; size = 4
_szValue$ = 12						; size = 4
?ChangedLShareData@CExOCXDLL@@QAEHPBD0@Z PROC		; CExOCXDLL::ChangedLShareData, COMDAT
; _this$ = ecx

; 116  : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 117  : 	if(m_pILSharedData)

  00003	8b 91 28 02 00
	00		 mov	 edx, DWORD PTR [ecx+552]
  00009	85 d2		 test	 edx, edx
  0000b	74 13		 je	 SHORT $LN2@ChangedLSh

; 118  : 		return m_pILSharedData->SetData(m_hWnd, szShareName, szValue);

  0000d	ff 75 0c	 push	 DWORD PTR _szValue$[ebp]
  00010	8b 02		 mov	 eax, DWORD PTR [edx]
  00012	ff 75 08	 push	 DWORD PTR _szShareName$[ebp]
  00015	ff 71 20	 push	 DWORD PTR [ecx+32]
  00018	52		 push	 edx
  00019	ff 50 18	 call	 DWORD PTR [eax+24]

; 120  : }	

  0001c	5d		 pop	 ebp
  0001d	c2 08 00	 ret	 8
$LN2@ChangedLSh:

; 119  : 	return FALSE;

  00020	33 c0		 xor	 eax, eax

; 120  : }	

  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
?ChangedLShareData@CExOCXDLL@@QAEHPBD0@Z ENDP		; CExOCXDLL::ChangedLShareData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp
;	COMDAT ?InitGet@CExOCXDLL@@QAEHPBD@Z
_TEXT	SEGMENT
_szShareName$ = 8					; size = 4
?InitGet@CExOCXDLL@@QAEHPBD@Z PROC			; CExOCXDLL::InitGet, COMDAT
; _this$ = ecx

; 106  : //	if(m_pILSharedData)
; 107  : //	{
; 108  : //		m_pILSharedData->DAdvise(&m_xLAdviseSink, szShareName);
; 109  : //		return m_pILSharedData->DAdvise(&m_xLAdviseSink, szShareName);
; 110  : //	}
; 111  : 	return FALSE;

  00000	33 c0		 xor	 eax, eax

; 112  : }	

  00002	c2 04 00	 ret	 4
?InitGet@CExOCXDLL@@QAEHPBD@Z ENDP			; CExOCXDLL::InitGet
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp
;	COMDAT ?InitSet@CExOCXDLL@@QAEHXZ
_TEXT	SEGMENT
?InitSet@CExOCXDLL@@QAEHXZ PROC				; CExOCXDLL::InitSet, COMDAT
; _this$ = ecx

; 99   : 	return TRUE;

  00000	b8 01 00 00 00	 mov	 eax, 1

; 100  : }	

  00005	c3		 ret	 0
?InitSet@CExOCXDLL@@QAEHXZ ENDP				; CExOCXDLL::InitSet
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp
;	COMDAT ?InitStart@CExOCXDLL@@QAEHPBDAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_szShareName$ = 8					; size = 4
_szValue$ = 12						; size = 4
?InitStart@CExOCXDLL@@QAEHPBDAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC ; CExOCXDLL::InitStart, COMDAT
; _this$ = ecx

; 82   : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 83   : 	if(m_pILSharedData)

  00006	8b 96 28 02 00
	00		 mov	 edx, DWORD PTR [esi+552]
  0000c	85 d2		 test	 edx, edx
  0000e	74 36		 je	 SHORT $LN2@InitStart

; 84   : 	{
; 85   : 		BOOL bRet = m_pILSharedData->GetData(szShareName, szValue);

  00010	8b 02		 mov	 eax, DWORD PTR [edx]
  00012	57		 push	 edi
  00013	8b 7d 0c	 mov	 edi, DWORD PTR _szValue$[ebp]
  00016	57		 push	 edi
  00017	ff 75 08	 push	 DWORD PTR _szShareName$[ebp]
  0001a	52		 push	 edx
  0001b	ff 50 10	 call	 DWORD PTR [eax+16]

; 86   : 		if(!bRet)

  0001e	85 c0		 test	 eax, eax
  00020	75 08		 jne	 SHORT $LN3@InitStart

; 87   : 			szValue.Empty();

  00022	8b cf		 mov	 ecx, edi
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Empty@?$CSimpleStringT@D$00@ATL@@QAEXXZ
$LN3@InitStart:

; 88   : 
; 89   : 		OnLSharedDataChange(szShareName, szValue, TRUE);

  0002a	8b 06		 mov	 eax, DWORD PTR [esi]
  0002c	8b ce		 mov	 ecx, esi
  0002e	6a 01		 push	 1
  00030	ff 37		 push	 DWORD PTR [edi]
  00032	ff 75 08	 push	 DWORD PTR _szShareName$[ebp]
  00035	ff 90 f4 01 00
	00		 call	 DWORD PTR [eax+500]

; 90   : //		ParedShareDataChange(szShareName,szValue);		//Added by KaySeo, 2000/11/22
; 91   : 	
; 92   : 		return TRUE;

  0003b	5f		 pop	 edi
  0003c	b8 01 00 00 00	 mov	 eax, 1
  00041	5e		 pop	 esi

; 95   : }

  00042	5d		 pop	 ebp
  00043	c2 08 00	 ret	 8
$LN2@InitStart:

; 93   : 	}
; 94   : 	return FALSE;

  00046	33 c0		 xor	 eax, eax
  00048	5e		 pop	 esi

; 95   : }

  00049	5d		 pop	 ebp
  0004a	c2 08 00	 ret	 8
?InitStart@CExOCXDLL@@QAEHPBDAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CExOCXDLL::InitStart
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp
;	COMDAT ?InitLSharedData@CExOCXDLL@@QAEHXZ
_TEXT	SEGMENT
_LSDF$2 = -64						; size = 20
_this$ = -44						; size = 4
$T3 = -40						; size = 4
$T4 = -36						; size = 4
$T5 = -32						; size = 4
_szValue$6 = -28					; size = 4
_szData$ = -24						; size = 4
_szShareName$ = -20					; size = 4
_aTmp$ = -16						; size = 2
__$EHRec$ = -12						; size = 12
?InitLSharedData@CExOCXDLL@@QAEHXZ PROC			; CExOCXDLL::InitLSharedData, COMDAT
; _this$ = ecx

; 8    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?InitLSharedData@CExOCXDLL@@QAEHXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx

; 9    : 	if(!m_pBaseDesk)	return FALSE;

  0002a	8b 8e f8 01 00
	00		 mov	 ecx, DWORD PTR [esi+504]
  00030	85 c9		 test	 ecx, ecx
  00032	0f 84 59 02 00
	00		 je	 $LN56@InitLShare

; 10   : 	HWND hWnd = (HWND)DGetBaseDeskHWnd();

  00038	8b 01		 mov	 eax, DWORD PTR [ecx]
  0003a	ff 50 04	 call	 DWORD PTR [eax+4]

; 11   : 	if(!hWnd && !IsWindow(hWnd)) return FALSE;

  0003d	85 c0		 test	 eax, eax
  0003f	75 0f		 jne	 SHORT $LN5@InitLShare
  00041	50		 push	 eax
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  00048	85 c0		 test	 eax, eax
  0004a	0f 84 41 02 00
	00		 je	 $LN56@InitLShare
$LN5@InitLShare:

; 12   : 
; 13   : 	ILSharedData* pLSharedData = (ILSharedData*)m_pBaseDesk->GetLSharedData();

  00050	8b 8e f8 01 00
	00		 mov	 ecx, DWORD PTR [esi+504]
  00056	8b 01		 mov	 eax, DWORD PTR [ecx]
  00058	ff 50 24	 call	 DWORD PTR [eax+36]

; 14   : 	
; 15   : 	if(pLSharedData == NULL) 

  0005b	85 c0		 test	 eax, eax
  0005d	0f 84 2e 02 00
	00		 je	 $LN56@InitLShare

; 19   : 	}
; 20   : 
; 21   : 	m_pILSharedData = pLSharedData;

  00063	89 86 28 02 00
	00		 mov	 DWORD PTR [esi+552], eax

; 23   : 	CString szData = m_sLocalSharedList;

  00069	8d 4d e8	 lea	 ecx, DWORD PTR _szData$[ebp]
  0006c	8d 86 24 02 00
	00		 lea	 eax, DWORD PTR [esi+548]
  00072	50		 push	 eax
  00073	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

  00079	8b 45 e8	 mov	 eax, DWORD PTR _szData$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp

; 23   : 	CString szData = m_sLocalSharedList;

  0007c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 24   : 	if(szData.GetLength()==0)	return TRUE;

  00083	83 78 f4 00	 cmp	 DWORD PTR [eax-12], 0
  00087	0f 84 e4 01 00
	00		 je	 $LN23@InitLShare

; 25   : 
; 26   : 	szData += ";";

  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_01ICJEACDI@?$DL@
  00092	8d 4d e8	 lea	 ecx, DWORD PTR _szData$[ebp]
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??Y?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z

; 27   : 	int nIndex = szData.Find(";");

  0009b	6a 00		 push	 0
  0009d	68 00 00 00 00	 push	 OFFSET ??_C@_01ICJEACDI@?$DL@
  000a2	8d 4d e8	 lea	 ecx, DWORD PTR _szData$[ebp]
  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Find@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBDH@Z

; 28   : 	CString szShareName;

  000ab	8d 4d ec	 lea	 ecx, DWORD PTR _szShareName$[ebp]
  000ae	8b f8		 mov	 edi, eax
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 29   : 	BOOL	bGet, bSet, bStart;
; 30   : 	char	aTmp[2]={0,};

  000b6	33 c0		 xor	 eax, eax
  000b8	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000bc	66 89 45 f0	 mov	 WORD PTR _aTmp$[ebp], ax

; 31   : 	int		nLen, nCnt=0, nTmp;
; 32   : 
; 33   : 	while(nIndex>0)

  000c0	85 ff		 test	 edi, edi
  000c2	0f 8e a0 01 00
	00		 jle	 $LN3@InitLShare
$LL2@InitLShare:

; 34   : 	{
; 35   : 		bGet = bSet = bStart = FALSE;
; 36   : 		szShareName = szData.Left(nIndex);

  000c8	57		 push	 edi
  000c9	8d 45 e0	 lea	 eax, DWORD PTR $T5[ebp]
  000cc	50		 push	 eax
  000cd	8d 4d e8	 lea	 ecx, DWORD PTR _szData$[ebp]
  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Left@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z
  000d6	50		 push	 eax
  000d7	8d 4d ec	 lea	 ecx, DWORD PTR _szShareName$[ebp]
  000da	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  000e4	8d 4d e0	 lea	 ecx, DWORD PTR $T5[ebp]
  000e7	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 37   : 		szData = szData.Mid(nIndex+1);

  000f1	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  000f4	50		 push	 eax
  000f5	8d 45 dc	 lea	 eax, DWORD PTR $T4[ebp]
  000f8	50		 push	 eax
  000f9	8d 4d e8	 lea	 ecx, DWORD PTR _szData$[ebp]
  000fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Mid@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z
  00102	50		 push	 eax
  00103	8d 4d e8	 lea	 ecx, DWORD PTR _szData$[ebp]
  00106	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0010a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  00110	8d 4d dc	 lea	 ecx, DWORD PTR $T4[ebp]
  00113	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00117	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

  0011d	8b 45 ec	 mov	 eax, DWORD PTR _szShareName$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp

; 40   : 		aTmp[0] = szShareName[nLen-1];

  00120	8d 4d ec	 lea	 ecx, DWORD PTR _szShareName$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

  00123	8b 78 f4	 mov	 edi, DWORD PTR [eax-12]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp

; 40   : 		aTmp[0] = szShareName[nLen-1];

  00126	4f		 dec	 edi
  00127	57		 push	 edi
  00128	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??A?$CSimpleStringT@D$00@ATL@@QBEDH@Z
  0012e	88 45 f0	 mov	 BYTE PTR _aTmp$[ebp], al

; 41   : 		szShareName = szShareName.Left(nLen-1);

  00131	8d 4d ec	 lea	 ecx, DWORD PTR _szShareName$[ebp]
  00134	57		 push	 edi
  00135	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00138	50		 push	 eax
  00139	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Left@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z
  0013f	50		 push	 eax
  00140	8d 4d ec	 lea	 ecx, DWORD PTR _szShareName$[ebp]
  00143	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00147	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  0014d	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 42   : 
; 43   : 		nTmp = atoi(aTmp);

  00156	8d 45 f0	 lea	 eax, DWORD PTR _aTmp$[ebp]
  00159	50		 push	 eax
  0015a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00160	8b f8		 mov	 edi, eax
  00162	8d 4d c0	 lea	 ecx, DWORD PTR _LSDF$2[ebp]
  00165	83 c4 04	 add	 esp, 4

; 44   : 		if(nTmp & 1) bStart = TRUE;

  00168	8b df		 mov	 ebx, edi
  0016a	83 e3 01	 and	 ebx, 1
  0016d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00173	8d 4d c4	 lea	 ecx, DWORD PTR _LSDF$2[ebp+4]
  00176	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 45   : 		if(nTmp & 2) bSet=TRUE;
; 46   : 		if(nTmp & 4) bGet=TRUE;
; 47   : 
; 48   : 		ST_LSHAREDFORMAT LSDF;

  0017c	8b cf		 mov	 ecx, edi
  0017e	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00182	c1 e9 02	 shr	 ecx, 2

; 49   : 		LSDF.m_bGet = bGet;
; 50   : 		LSDF.m_bSet = bSet;
; 51   : 		LSDF.m_bStart = bStart;
; 52   : 		LSDF.m_szSharedName = szShareName;

  00185	8d 45 ec	 lea	 eax, DWORD PTR _szShareName$[ebp]
  00188	83 e1 01	 and	 ecx, 1
  0018b	d1 ef		 shr	 edi, 1
  0018d	89 4d d0	 mov	 DWORD PTR _LSDF$2[ebp+16], ecx
  00190	83 e7 01	 and	 edi, 1
  00193	50		 push	 eax
  00194	8d 4d c0	 lea	 ecx, DWORD PTR _LSDF$2[ebp]
  00197	89 7d cc	 mov	 DWORD PTR _LSDF$2[ebp+12], edi
  0019a	89 5d c8	 mov	 DWORD PTR _LSDF$2[ebp+8], ebx
  0019d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z

; 53   : 		m_ListLShare.AddTail(LSDF);

  001a3	83 ec 14	 sub	 esp, 20			; 00000014H
  001a6	8d 45 c0	 lea	 eax, DWORD PTR _LSDF$2[ebp]
  001a9	8b fc		 mov	 edi, esp
  001ab	8b cf		 mov	 ecx, edi
  001ad	89 7d d4	 mov	 DWORD PTR _this$[ebp], edi
  001b0	50		 push	 eax
  001b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  001b7	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  001bb	8d 45 c4	 lea	 eax, DWORD PTR _LSDF$2[ebp+4]
  001be	50		 push	 eax
  001bf	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  001c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  001c8	8b 45 c8	 mov	 eax, DWORD PTR _LSDF$2[ebp+8]
  001cb	8d 8e 54 02 00
	00		 lea	 ecx, DWORD PTR [esi+596]
  001d1	89 47 08	 mov	 DWORD PTR [edi+8], eax
  001d4	8b 45 cc	 mov	 eax, DWORD PTR _LSDF$2[ebp+12]
  001d7	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  001da	8b 45 d0	 mov	 eax, DWORD PTR _LSDF$2[ebp+16]
  001dd	89 47 10	 mov	 DWORD PTR [edi+16], eax
  001e0	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  001e4	e8 00 00 00 00	 call	 ?AddTail@?$CList@UST_LSHAREDFORMAT@@U1@@@QAEPAU__POSITION@@UST_LSHAREDFORMAT@@@Z ; CList<ST_LSHAREDFORMAT,ST_LSHAREDFORMAT>::AddTail

; 54   : 
; 55   : 		if(bStart) 

  001e9	85 db		 test	 ebx, ebx
  001eb	74 4b		 je	 SHORT $LN11@InitLShare

; 57   : 			CString szValue;

  001ed	8d 4d e4	 lea	 ecx, DWORD PTR _szValue$6[ebp]
  001f0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 83   : 	if(m_pILSharedData)

  001f6	8b 8e 28 02 00
	00		 mov	 ecx, DWORD PTR [esi+552]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 377  : 		return( m_pszData );

  001fc	8b 7d ec	 mov	 edi, DWORD PTR _szShareName$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp

; 57   : 			CString szValue;

  001ff	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7

; 83   : 	if(m_pILSharedData)

  00203	85 c9		 test	 ecx, ecx
  00205	74 28		 je	 SHORT $LN42@InitLShare

; 84   : 	{
; 85   : 		BOOL bRet = m_pILSharedData->GetData(szShareName, szValue);

  00207	8b 01		 mov	 eax, DWORD PTR [ecx]
  00209	8d 55 e4	 lea	 edx, DWORD PTR _szValue$6[ebp]
  0020c	52		 push	 edx
  0020d	57		 push	 edi
  0020e	51		 push	 ecx
  0020f	ff 50 10	 call	 DWORD PTR [eax+16]

; 86   : 		if(!bRet)

  00212	85 c0		 test	 eax, eax
  00214	75 09		 jne	 SHORT $LN43@InitLShare

; 87   : 			szValue.Empty();

  00216	8d 4d e4	 lea	 ecx, DWORD PTR _szValue$6[ebp]
  00219	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Empty@?$CSimpleStringT@D$00@ATL@@QAEXXZ
$LN43@InitLShare:

; 88   : 
; 89   : 		OnLSharedDataChange(szShareName, szValue, TRUE);

  0021f	8b 06		 mov	 eax, DWORD PTR [esi]
  00221	8b ce		 mov	 ecx, esi
  00223	6a 01		 push	 1
  00225	ff 75 e4	 push	 DWORD PTR _szValue$6[ebp]
  00228	57		 push	 edi
  00229	ff 90 f4 01 00
	00		 call	 DWORD PTR [eax+500]
$LN42@InitLShare:

; 58   : 			InitStart(szShareName, szValue);
; 59   : 		}

  0022f	8d 4d e4	 lea	 ecx, DWORD PTR _szValue$6[ebp]
  00232	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN11@InitLShare:

; 60   : 
; 61   : 		if(bSet) 
; 62   : 		{
; 63   : 		
; 64   : 		}
; 65   : 
; 66   : 		if(bGet) 
; 67   : 		{
; 68   : 			InitGet(szShareName);
; 69   : 		}
; 70   : 
; 71   : 		nCnt++;
; 72   : 
; 73   : 		nIndex = szData.Find(";");

  00238	6a 00		 push	 0
  0023a	68 00 00 00 00	 push	 OFFSET ??_C@_01ICJEACDI@?$DL@
  0023f	8d 4d e8	 lea	 ecx, DWORD PTR _szData$[ebp]
  00242	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Find@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBDH@Z
  00248	8d 4d c4	 lea	 ecx, DWORD PTR _LSDF$2[ebp+4]

; 74   : 	}

  0024b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0024f	8b f8		 mov	 edi, eax
  00251	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00257	8d 4d c0	 lea	 ecx, DWORD PTR _LSDF$2[ebp]
  0025a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00260	85 ff		 test	 edi, edi
  00262	0f 8f 60 fe ff
	ff		 jg	 $LL2@InitLShare
$LN3@InitLShare:

; 75   : 	return TRUE;

  00268	8d 4d ec	 lea	 ecx, DWORD PTR _szShareName$[ebp]
  0026b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN23@InitLShare:
  00271	8d 4d e8	 lea	 ecx, DWORD PTR _szData$[ebp]
  00274	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0027a	b8 01 00 00 00	 mov	 eax, 1

; 76   : }

  0027f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00282	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00289	59		 pop	 ecx
  0028a	5f		 pop	 edi
  0028b	5e		 pop	 esi
  0028c	5b		 pop	 ebx
  0028d	8b e5		 mov	 esp, ebp
  0028f	5d		 pop	 ebp
  00290	c3		 ret	 0
$LN56@InitLShare:

; 16   : 	{
; 17   : 		TRACE("ERROR : CExOCXDLL::InitLSharedData()\n");
; 18   : 		return FALSE;

  00291	33 c0		 xor	 eax, eax

; 76   : }

  00293	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00296	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0029d	59		 pop	 ecx
  0029e	5f		 pop	 edi
  0029f	5e		 pop	 esi
  002a0	5b		 pop	 ebx
  002a1	8b e5		 mov	 esp, ebp
  002a3	5d		 pop	 ebp
  002a4	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InitLSharedData@CExOCXDLL@@QAEHXZ$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR _szData$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?InitLSharedData@CExOCXDLL@@QAEHXZ$1:
  00009	8d 4d ec	 lea	 ecx, DWORD PTR _szShareName$[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?InitLSharedData@CExOCXDLL@@QAEHXZ$2:
  00012	8d 4d e0	 lea	 ecx, DWORD PTR $T5[ebp]
  00015	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?InitLSharedData@CExOCXDLL@@QAEHXZ$3:
  0001b	8d 4d dc	 lea	 ecx, DWORD PTR $T4[ebp]
  0001e	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?InitLSharedData@CExOCXDLL@@QAEHXZ$4:
  00024	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00027	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?InitLSharedData@CExOCXDLL@@QAEHXZ$5:
  0002d	8d 4d c0	 lea	 ecx, DWORD PTR _LSDF$2[ebp]
  00030	e9 00 00 00 00	 jmp	 ??1ST_LSHAREDFORMAT@@QAE@XZ
__unwindfunclet$?InitLSharedData@CExOCXDLL@@QAEHXZ$9:
  00035	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?InitLSharedData@CExOCXDLL@@QAEHXZ$7:
  0003e	8d 4d e4	 lea	 ecx, DWORD PTR _szValue$6[ebp]
  00041	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
  0004b	cc		 int	 3
__ehhandler$?InitLSharedData@CExOCXDLL@@QAEHXZ:
  0004c	90		 npad	 1
  0004d	90		 npad	 1
  0004e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00052	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00055	8b 4a bc	 mov	 ecx, DWORD PTR [edx-68]
  00058	33 c8		 xor	 ecx, eax
  0005a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InitLSharedData@CExOCXDLL@@QAEHXZ
  00064	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InitLSharedData@CExOCXDLL@@QAEHXZ ENDP			; CExOCXDLL::InitLSharedData
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?NewNode@?$CList@UST_LSHAREDFORMAT@@U1@@@IAEPAUCNode@1@PAU21@0@Z
_TEXT	SEGMENT
_pPrev$ = 8						; size = 4
_pNext$ = 12						; size = 4
?NewNode@?$CList@UST_LSHAREDFORMAT@@U1@@@IAEPAUCNode@1@PAU21@0@Z PROC ; CList<ST_LSHAREDFORMAT,ST_LSHAREDFORMAT>::NewNode, COMDAT
; _this$ = ecx

; 901  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi

; 902  : 	if (m_pNodeFree == NULL)

  00007	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0000b	75 38		 jne	 SHORT $LN7@NewNode

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  0000d	6a 1c		 push	 28			; 0000001cH
  0000f	ff 76 18	 push	 DWORD PTR [esi+24]
  00012	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  0001b	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  0001e	83 c0 08	 add	 eax, 8
  00021	8d 0c d5 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*8]
  00028	2b ca		 sub	 ecx, edx
  0002a	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  0002d	83 c0 e4	 add	 eax, -28		; ffffffe4H

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  00030	83 c2 ff	 add	 edx, -1
  00033	78 10		 js	 SHORT $LN7@NewNode
$LL4@NewNode:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00035	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00038	89 08		 mov	 DWORD PTR [eax], ecx

; 915  : 			m_pNodeFree = pNode;

  0003a	89 46 10	 mov	 DWORD PTR [esi+16], eax
  0003d	83 e8 1c	 sub	 eax, 28			; 0000001cH
  00040	83 ea 01	 sub	 edx, 1
  00043	79 f0		 jns	 SHORT $LL4@NewNode
$LN7@NewNode:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00045	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  00048	85 ff		 test	 edi, edi
  0004a	74 2d		 je	 SHORT $LN20@NewNode

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  0004c	8b 07		 mov	 eax, DWORD PTR [edi]

; 922  : 	pNode->pPrev = pPrev;
; 923  : 	pNode->pNext = pNext;

  0004e	8b 4d 0c	 mov	 ecx, DWORD PTR _pNext$[ebp]
  00051	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00054	8b 45 08	 mov	 eax, DWORD PTR _pPrev$[ebp]
  00057	89 0f		 mov	 DWORD PTR [edi], ecx
  00059	8d 4f 08	 lea	 ecx, DWORD PTR [edi+8]
  0005c	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 924  : 	m_nCount++;

  0005f	ff 46 0c	 inc	 DWORD PTR [esi+12]
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00068	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 925  : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 926  : 
; 927  : #pragma push_macro("new")
; 928  : #undef new
; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;
; 930  : #pragma pop_macro("new")
; 931  : 	return pNode;

  00071	8b c7		 mov	 eax, edi
  00073	5f		 pop	 edi
  00074	5e		 pop	 esi

; 932  : }

  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
$LN20@NewNode:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00079	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN18@NewNode:
  0007e	cc		 int	 3
?NewNode@?$CList@UST_LSHAREDFORMAT@@U1@@@IAEPAUCNode@1@PAU21@0@Z ENDP ; CList<ST_LSHAREDFORMAT,ST_LSHAREDFORMAT>::NewNode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?AddTail@?$CList@UST_LSHAREDFORMAT@@U1@@@QAEPAU__POSITION@@UST_LSHAREDFORMAT@@@Z
_TEXT	SEGMENT
_pNode$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_newElement$ = 8					; size = 20
?AddTail@?$CList@UST_LSHAREDFORMAT@@U1@@@QAEPAU__POSITION@@UST_LSHAREDFORMAT@@@Z PROC ; CList<ST_LSHAREDFORMAT,ST_LSHAREDFORMAT>::AddTail, COMDAT
; _this$ = ecx

; 965  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddTail@?$CList@UST_LSHAREDFORMAT@@U1@@@QAEPAU__POSITION@@UST_LSHAREDFORMAT@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx

; 902  : 	if (m_pNodeFree == NULL)

  00028	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0

; 966  : 	ASSERT_VALID(this);
; 967  : 
; 968  : 	CNode* pNewNode = NewNode(m_pNodeTail, NULL);

  0002c	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  0002f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 902  : 	if (m_pNodeFree == NULL)

  00036	75 38		 jne	 SHORT $LN12@AddTail

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  00038	6a 1c		 push	 28			; 0000001cH
  0003a	ff 76 18	 push	 DWORD PTR [esi+24]
  0003d	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  00046	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  00049	83 c0 08	 add	 eax, 8
  0004c	8d 0c d5 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*8]
  00053	2b ca		 sub	 ecx, edx
  00055	83 c1 f9	 add	 ecx, -7			; fffffff9H

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  00058	83 c2 ff	 add	 edx, -1
  0005b	8d 0c 88	 lea	 ecx, DWORD PTR [eax+ecx*4]
  0005e	78 10		 js	 SHORT $LN12@AddTail
$LL9@AddTail:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00060	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00063	89 01		 mov	 DWORD PTR [ecx], eax

; 915  : 			m_pNodeFree = pNode;

  00065	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
  00068	83 e9 1c	 sub	 ecx, 28			; 0000001cH
  0006b	83 ea 01	 sub	 edx, 1
  0006e	79 f0		 jns	 SHORT $LL9@AddTail
$LN12@AddTail:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00070	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00073	89 4d f0	 mov	 DWORD PTR _pNode$1$[ebp], ecx
  00076	85 c9		 test	 ecx, ecx
  00078	0f 84 8c 00 00
	00		 je	 $LN32@AddTail

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  0007e	8b 01		 mov	 eax, DWORD PTR [ecx]

; 925  : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 926  : 
; 927  : #pragma push_macro("new")
; 928  : #undef new
; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;

  00080	8d 59 08	 lea	 ebx, DWORD PTR [ecx+8]
  00083	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00086	89 79 04	 mov	 DWORD PTR [ecx+4], edi
  00089	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  0008f	8b cb		 mov	 ecx, ebx

; 922  : 	pNode->pPrev = pPrev;
; 923  : 	pNode->pNext = pNext;
; 924  : 	m_nCount++;

  00091	ff 46 0c	 inc	 DWORD PTR [esi+12]
  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0009a	8d 4b 04	 lea	 ecx, DWORD PTR [ebx+4]
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000a3	8d 45 08	 lea	 eax, DWORD PTR _newElement$[ebp]
  000a6	8b cb		 mov	 ecx, ebx
  000a8	50		 push	 eax
  000a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  000af	8d 45 0c	 lea	 eax, DWORD PTR _newElement$[ebp+4]
  000b2	50		 push	 eax
  000b3	8d 4b 04	 lea	 ecx, DWORD PTR [ebx+4]
  000b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  000bc	8b 45 10	 mov	 eax, DWORD PTR _newElement$[ebp+8]

; 969  : 	pNewNode->data = newElement;
; 970  : 	if (m_pNodeTail != NULL)

  000bf	8b 7d f0	 mov	 edi, DWORD PTR _pNode$1$[ebp]
  000c2	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  000c5	8b 45 14	 mov	 eax, DWORD PTR _newElement$[ebp+12]
  000c8	89 43 0c	 mov	 DWORD PTR [ebx+12], eax
  000cb	8b 45 18	 mov	 eax, DWORD PTR _newElement$[ebp+16]
  000ce	89 43 10	 mov	 DWORD PTR [ebx+16], eax
  000d1	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000d4	85 c0		 test	 eax, eax
  000d6	74 04		 je	 SHORT $LN2@AddTail

; 971  : 		m_pNodeTail->pNext = pNewNode;

  000d8	89 38		 mov	 DWORD PTR [eax], edi
  000da	eb 03		 jmp	 SHORT $LN3@AddTail
$LN2@AddTail:

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;

  000dc	89 7e 04	 mov	 DWORD PTR [esi+4], edi
$LN3@AddTail:
  000df	8d 4d 0c	 lea	 ecx, DWORD PTR _newElement$[ebp+4]

; 974  : 	m_pNodeTail = pNewNode;

  000e2	89 7e 08	 mov	 DWORD PTR [esi+8], edi
  000e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000eb	8d 4d 08	 lea	 ecx, DWORD PTR _newElement$[ebp]
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 975  : 	return (POSITION) pNewNode;

  000f4	8b c7		 mov	 eax, edi

; 976  : }

  000f6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00100	59		 pop	 ecx
  00101	5f		 pop	 edi
  00102	5e		 pop	 esi
  00103	5b		 pop	 ebx
  00104	8b e5		 mov	 esp, ebp
  00106	5d		 pop	 ebp
  00107	c2 14 00	 ret	 20			; 00000014H
$LN32@AddTail:

; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  0010a	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN30@AddTail:
  0010f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddTail@?$CList@UST_LSHAREDFORMAT@@U1@@@QAEPAU__POSITION@@UST_LSHAREDFORMAT@@@Z$0:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _newElement$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ST_LSHAREDFORMAT@@QAE@XZ
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?AddTail@?$CList@UST_LSHAREDFORMAT@@U1@@@QAEPAU__POSITION@@UST_LSHAREDFORMAT@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddTail@?$CList@UST_LSHAREDFORMAT@@U1@@@QAEPAU__POSITION@@UST_LSHAREDFORMAT@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddTail@?$CList@UST_LSHAREDFORMAT@@U1@@@QAEPAU__POSITION@@UST_LSHAREDFORMAT@@@Z ENDP ; CList<ST_LSHAREDFORMAT,ST_LSHAREDFORMAT>::AddTail
; Function compile flags: /Ogtp
;	COMDAT ??1ST_LSHAREDFORMAT@@QAE@XZ
_TEXT	SEGMENT
??1ST_LSHAREDFORMAT@@QAE@XZ PROC			; ST_LSHAREDFORMAT::~ST_LSHAREDFORMAT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000c	8b ce		 mov	 ecx, esi
  0000e	5e		 pop	 esi
  0000f	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
??1ST_LSHAREDFORMAT@@QAE@XZ ENDP			; ST_LSHAREDFORMAT::~ST_LSHAREDFORMAT
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0ST_LSHAREDFORMAT@@QAE@XZ
_TEXT	SEGMENT
??0ST_LSHAREDFORMAT@@QAE@XZ PROC			; ST_LSHAREDFORMAT::ST_LSHAREDFORMAT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00009	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00012	8b c6		 mov	 eax, esi
  00014	5e		 pop	 esi
  00015	c3		 ret	 0
??0ST_LSHAREDFORMAT@@QAE@XZ ENDP			; ST_LSHAREDFORMAT::ST_LSHAREDFORMAT
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\IBaseDefine.h
;	COMDAT ??__ERMSG_SETPCTRDATA@@YAXXZ
text$di	SEGMENT
??__ERMSG_SETPCTRDATA@@YAXXZ PROC			; `dynamic initializer for 'RMSG_SETPCTRDATA'', COMDAT

; 172  : const UINT RMSG_SETPCTRDATA = ::RegisterWindowMessage("RMSG_SETPCTRDATA");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@JPACFCL@RMSG_SETPCTRDATA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_SETPCTRDATA@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_SETPCTRDATA@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_SETPCTRDATA''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\IBaseDefine.h
;	COMDAT ??__ERMSG_GETPCTRDATA@@YAXXZ
text$di	SEGMENT
??__ERMSG_GETPCTRDATA@@YAXXZ PROC			; `dynamic initializer for 'RMSG_GETPCTRDATA'', COMDAT

; 171  : const UINT RMSG_GETPCTRDATA = ::RegisterWindowMessage("RMSG_GETPCTRDATA");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GOOPDKI@RMSG_GETPCTRDATA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_GETPCTRDATA@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_GETPCTRDATA@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_GETPCTRDATA''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Inc\IBaseDefine.h
;	COMDAT ??__ERMSG_INTERFACE@@YAXXZ
text$di	SEGMENT
??__ERMSG_INTERFACE@@YAXXZ PROC				; `dynamic initializer for 'RMSG_INTERFACE'', COMDAT

; 170  : const UINT RMSG_INTERFACE = ::RegisterWindowMessage("RMSG_INTERFACE");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BKKCOCLK@RMSG_INTERFACE@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_INTERFACE@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_INTERFACE@@YAXXZ ENDP				; `dynamic initializer for 'RMSG_INTERFACE''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\CtlSharedData.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
