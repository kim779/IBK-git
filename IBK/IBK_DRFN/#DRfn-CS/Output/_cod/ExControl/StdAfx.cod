; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\ExControl\StdAfx.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	___@@_PchSym_@00@UtrgUhixUrypUrypPwiumUKxwwiumRxhUPlyqUvcxlmgiloUhgwzucOlyq@4B2008FD98C1DD4
PUBLIC	??_C@_0P@LNEGBOLO@atlTraceSnapin@		; `string'
PUBLIC	??_C@_0BA@MCBFIDIC@atlTraceNotImpl@		; `string'
PUBLIC	??_C@_0BD@PJPCCAKP@atlTraceAllocation@		; `string'
PUBLIC	??_C@_0BC@PGMFNIFA@atlTraceException@		; `string'
PUBLIC	??_C@_0N@BNNILHBE@atlTraceTime@			; `string'
PUBLIC	??_C@_0O@MEOJAOKK@atlTraceCache@		; `string'
PUBLIC	??_C@_0BA@IDBKCKK@atlTraceStencil@		; `string'
PUBLIC	??_C@_0P@MBNHGHMI@atlTraceString@		; `string'
PUBLIC	??_C@_0M@IOBBMAHG@atlTraceMap@			; `string'
PUBLIC	??_C@_0N@FEAAACHD@atlTraceUtil@			; `string'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_C@_0BB@DNJDADMG@atlTraceSecurity@		; `string'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CWin32Heap@ATL@@6B@			; ATL::CWin32Heap::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCWin32Heap@ATL@@@8			; ATL::CWin32Heap `RTTI Type Descriptor'
PUBLIC	??_R3CWin32Heap@ATL@@8				; ATL::CWin32Heap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWin32Heap@ATL@@8				; ATL::CWin32Heap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWin32Heap@ATL@@8			; ATL::CWin32Heap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_C@_0N@KLPNCFEE@atlTraceSync@			; `string'
PUBLIC	??_R1A@?0A@EA@IAtlMemMgr@ATL@@8			; ATL::IAtlMemMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIAtlMemMgr@ATL@@@8			; ATL::IAtlMemMgr `RTTI Type Descriptor'
PUBLIC	??_R3IAtlMemMgr@ATL@@8				; ATL::IAtlMemMgr::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IAtlMemMgr@ATL@@8				; ATL::IAtlMemMgr::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IAtlStringMgr@ATL@@8		; ATL::IAtlStringMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIAtlStringMgr@ATL@@@8			; ATL::IAtlStringMgr `RTTI Type Descriptor'
PUBLIC	??_R3IAtlStringMgr@ATL@@8			; ATL::IAtlStringMgr::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IAtlStringMgr@ATL@@8			; ATL::IAtlStringMgr::`RTTI Base Class Array'
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	??_C@_0O@KHOBHOBJ@atlTraceISAPI@		; `string'
PUBLIC	??_R4CAtlStringMgr@ATL@@6B@			; ATL::CAtlStringMgr::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCAtlStringMgr@ATL@@@8			; ATL::CAtlStringMgr `RTTI Type Descriptor'
PUBLIC	??_R3CAtlStringMgr@ATL@@8			; ATL::CAtlStringMgr::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAtlStringMgr@ATL@@8			; ATL::CAtlStringMgr::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAtlStringMgr@ATL@@8		; ATL::CAtlStringMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?chDirSep@ATL@@3DB				; ATL::chDirSep
PUBLIC	?chRightBracket@ATL@@3DB			; ATL::chRightBracket
PUBLIC	?chLeftBracket@ATL@@3DB				; ATL::chLeftBracket
PUBLIC	?chQuote@ATL@@3DB				; ATL::chQuote
PUBLIC	?chEquals@ATL@@3DB				; ATL::chEquals
PUBLIC	?szStringVal@ATL@@3QBDB				; ATL::szStringVal
PUBLIC	??_C@_01CPLAODJH@S@				; `string'
PUBLIC	?multiszStringVal@ATL@@3QBDB			; ATL::multiszStringVal
PUBLIC	??_C@_01PLPBNMEI@M@				; `string'
PUBLIC	?szDwordVal@ATL@@3QBDB				; ATL::szDwordVal
PUBLIC	??_C@_01CKDDGHAB@D@				; `string'
PUBLIC	?szBinaryVal@ATL@@3QBDB				; ATL::szBinaryVal
PUBLIC	??_C@_01HMGJMAIH@B@				; `string'
PUBLIC	?szValToken@ATL@@3QBDB				; ATL::szValToken
PUBLIC	??_C@_03LAIAPFCB@Val@				; `string'
PUBLIC	?szForceRemove@ATL@@3QBDB			; ATL::szForceRemove
PUBLIC	??_C@_0M@DBGDLGLL@ForceRemove@			; `string'
PUBLIC	?szNoRemove@ATL@@3QBDB				; ATL::szNoRemove
PUBLIC	??_C@_08KAAPDIAN@NoRemove@			; `string'
PUBLIC	?szDelete@ATL@@3QBDB				; ATL::szDelete
PUBLIC	??_C@_06JBKGCNBB@Delete@			; `string'
PUBLIC	__pIncludeInitManaged
PUBLIC	??_C@_0P@BKKCOCLK@RMSG_INTERFACE@		; `string'
PUBLIC	??_C@_0BB@GOOPDKI@RMSG_GETPCTRDATA@		; `string'
PUBLIC	??_C@_0BB@JPACFCL@RMSG_SETPCTRDATA@		; `string'
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z ; ATL::CAtlStringMgr::Allocate
PUBLIC	?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z ; ATL::CAtlStringMgr::Free
PUBLIC	?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z ; ATL::CAtlStringMgr::Reallocate
PUBLIC	?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ ; ATL::CAtlStringMgr::GetNilString
PUBLIC	?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ ; ATL::CAtlStringMgr::Clone
PUBLIC	??_7CAtlStringMgr@ATL@@6B@			; ATL::CAtlStringMgr::`vftable'
PUBLIC	??_GCAtlStringMgr@ATL@@UAEPAXI@Z		; ATL::CAtlStringMgr::`scalar deleting destructor'
PUBLIC	?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strHeap
PUBLIC	?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; `ATL::CAtlStringMgr::GetInstance'::`2'::$TSS0
PUBLIC	?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strMgr
PUBLIC	?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; `ATL::CAtlStringMgr::GetInstance'::`2'::$TSS1
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	_IID_IAxWinHostWindowLic
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	_IID_IAxWinAmbientDispatchEx
PUBLIC	_IID_IInternalConnection
PUBLIC	?szInvalidDateTime@ATL@@3QBDB			; ATL::szInvalidDateTime
PUBLIC	??_C@_0BB@KEKMKJPM@Invalid?5DateTime@		; `string'
PUBLIC	?szInvalidDateTimeSpan@ATL@@3QBDB		; ATL::szInvalidDateTimeSpan
PUBLIC	??_C@_0BF@GPPHKJFN@Invalid?5DateTimeSpan@	; `string'
PUBLIC	??_C@_0BK@FBLMOCPF@RMSG_FORMINITIALCOMPLETED@	; `string'
PUBLIC	??_C@_0BF@JNMMFBNP@RMSG_EVENT_CODEINPUT@	; `string'
PUBLIC	??_C@_0BF@LEGBOMJF@RMSG_EVENT_ACCTINPUT@	; `string'
PUBLIC	??_C@_0BF@FABJBMLM@RMSG_EVENT_SPININPUT@	; `string'
PUBLIC	??_C@_0BC@PGMEIMOI@RMSG_EVENT_SIGNAL@		; `string'
PUBLIC	??_C@_0BF@FPLDPAEH@RMSG_FORMSTATECHANGE@	; `string'
PUBLIC	??_C@_0N@IMGBDGND@RMSG_TABSTOP@			; `string'
PUBLIC	??_C@_0BC@MMIGKJED@RMSG_LBTNDBLCLICK@		; `string'
PUBLIC	??_C@_0O@DGNCFOOP@RMSG_LBTNDOWN@		; `string'
PUBLIC	??_C@_0BC@EMMLKNDL@RMSG_ENDSCROLLPOS@		; `string'
PUBLIC	??_C@_0BE@IEJDDJPC@RMSG_LSHAREDCHANGED@		; `string'
PUBLIC	?_AfxInitManaged@@YAHXZ				; _AfxInitManaged
PUBLIC	?CLSID_WinFormsControl@@3U_GUID@@B		; CLSID_WinFormsControl
PUBLIC	_c_DwmMaxQueuedBuffers
PUBLIC	_c_DwmMaxMonitors
PUBLIC	_c_DwmMaxAdapters
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	?Serialize@?$CArray@PAXPAX@@UAEXAAVCArchive@@@Z	; CArray<void *,void *>::Serialize
PUBLIC	??_7?$CArray@PAXPAX@@6B@			; CArray<void *,void *>::`vftable'
PUBLIC	??_G?$CArray@PAXPAX@@UAEPAXI@Z			; CArray<void *,void *>::`scalar deleting destructor'
PUBLIC	_LIBID_ATLLib
PUBLIC	?Allocate@CWin32Heap@ATL@@UAEPAXI@Z		; ATL::CWin32Heap::Allocate
PUBLIC	?Free@CWin32Heap@ATL@@UAEXPAX@Z			; ATL::CWin32Heap::Free
PUBLIC	?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z	; ATL::CWin32Heap::Reallocate
PUBLIC	?GetSize@CWin32Heap@ATL@@UAEIPAX@Z		; ATL::CWin32Heap::GetSize
PUBLIC	??_7CWin32Heap@ATL@@6B@				; ATL::CWin32Heap::`vftable'
PUBLIC	??_GCWin32Heap@ATL@@UAEPAXI@Z			; ATL::CWin32Heap::`scalar deleting destructor'
PUBLIC	___pobjMapEntryFirst
PUBLIC	___pobjMapEntryLast
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA	; ATL::_pPerfRegFunc
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZA			; ATL::_pPerfUnRegFunc
PUBLIC	?_AtlRegisterPerUser@ATL@@3_NA			; ATL::_AtlRegisterPerUser
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	??_R4?$CArray@PAXPAX@@6B@			; CArray<void *,void *>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CArray@PAXPAX@@@8			; CArray<void *,void *> `RTTI Type Descriptor'
PUBLIC	??_R3?$CArray@PAXPAX@@8				; CArray<void *,void *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CArray@PAXPAX@@8				; CArray<void *,void *>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CArray@PAXPAX@@8		; CArray<void *,void *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	??_C@_0BA@MKMIKKJB@atlTraceGeneral@		; `string'
PUBLIC	??_C@_0M@DGPFJEBB@atlTraceCOM@			; `string'
PUBLIC	??_C@_0L@LHELAKBP@atlTraceQI@			; `string'
PUBLIC	??_C@_0BC@MALHFBAO@atlTraceRegistrar@		; `string'
PUBLIC	??_C@_0BB@ILPPDKFL@atlTraceRefcount@		; `string'
PUBLIC	??_C@_0BC@DGHHNKDC@atlTraceWindowing@		; `string'
PUBLIC	?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A ; ATL::_pAtlAutoThreadModule
PUBLIC	??_C@_0BB@GHKJKKIE@atlTraceControls@		; `string'
PUBLIC	??_C@_0BA@DKOAAGGM@atlTraceHosting@		; `string'
PUBLIC	??_C@_0BB@BEBMGMDO@atlTraceDBClient@		; `string'
PUBLIC	??_C@_0BD@KOADKDIA@atlTraceDBProvider@		; `string'
EXTRN	__Init_thread_epoch:DWORD
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CObject::GetRuntimeClass
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECAtlStringMgr@ATL@@UAEPAXI@Z:PROC		; ATL::CAtlStringMgr::`vector deleting destructor'
EXTRN	?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A:BYTE	; ATL::_AtlBaseModule
EXTRN	??_E?$CArray@PAXPAX@@UAEPAXI@Z:PROC		; CArray<void *,void *>::`vector deleting destructor'
EXTRN	___ImageBase:ZWORD
EXTRN	??_ECWin32Heap@ATL@@UAEPAXI@Z:PROC		; ATL::CWin32Heap::`vector deleting destructor'
;	COMDAT ___@@_PchSym_@00@UtrgUhixUrypUrypPwiumUKxwwiumRxhUPlyqUvcxlmgiloUhgwzucOlyq@4B2008FD98C1DD4
_BSS	SEGMENT
___@@_PchSym_@00@UtrgUhixUrypUrypPwiumUKxwwiumRxhUPlyqUvcxlmgiloUhgwzucOlyq@4B2008FD98C1DD4 DD 01H DUP (?)
_BSS	ENDS
;	COMDAT ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A
_BSS	SEGMENT
?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A DB 0cH DUP (?) ; `ATL::CAtlStringMgr::GetInstance'::`2'::strHeap
_BSS	ENDS
;	COMDAT ?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA DD 01H DUP (?) ; `ATL::CAtlStringMgr::GetInstance'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A
_BSS	SEGMENT
?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A DB 01cH DUP (?) ; `ATL::CAtlStringMgr::GetInstance'::`2'::strMgr
_BSS	ENDS
;	COMDAT ?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA
_BSS	SEGMENT
?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA DD 01H DUP (?) ; `ATL::CAtlStringMgr::GetInstance'::`2'::$TSS1
_BSS	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA DD 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZA DD 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?_AtlRegisterPerUser@ATL@@3_NA
_BSS	SEGMENT
?_AtlRegisterPerUser@ATL@@3_NA DB 01H DUP (?)		; ATL::_AtlRegisterPerUser
_BSS	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A
_BSS	SEGMENT
?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A DD 01H DUP (?) ; ATL::_pAtlAutoThreadModule
_BSS	ENDS
;	COMDAT ??_C@_0BD@KOADKDIA@atlTraceDBProvider@
CONST	SEGMENT
??_C@_0BD@KOADKDIA@atlTraceDBProvider@ DB 'atlTraceDBProvider', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BEBMGMDO@atlTraceDBClient@
CONST	SEGMENT
??_C@_0BB@BEBMGMDO@atlTraceDBClient@ DB 'atlTraceDBClient', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DKOAAGGM@atlTraceHosting@
CONST	SEGMENT
??_C@_0BA@DKOAAGGM@atlTraceHosting@ DB 'atlTraceHosting', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GHKJKKIE@atlTraceControls@
CONST	SEGMENT
??_C@_0BB@GHKJKKIE@atlTraceControls@ DB 'atlTraceControls', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DGHHNKDC@atlTraceWindowing@
CONST	SEGMENT
??_C@_0BC@DGHHNKDC@atlTraceWindowing@ DB 'atlTraceWindowing', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ILPPDKFL@atlTraceRefcount@
CONST	SEGMENT
??_C@_0BB@ILPPDKFL@atlTraceRefcount@ DB 'atlTraceRefcount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MALHFBAO@atlTraceRegistrar@
CONST	SEGMENT
??_C@_0BC@MALHFBAO@atlTraceRegistrar@ DB 'atlTraceRegistrar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LHELAKBP@atlTraceQI@
CONST	SEGMENT
??_C@_0L@LHELAKBP@atlTraceQI@ DB 'atlTraceQI', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DGPFJEBB@atlTraceCOM@
CONST	SEGMENT
??_C@_0M@DGPFJEBB@atlTraceCOM@ DB 'atlTraceCOM', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MKMIKKJB@atlTraceGeneral@
CONST	SEGMENT
??_C@_0BA@MKMIKKJB@atlTraceGeneral@ DB 'atlTraceGeneral', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CArray@PAXPAX@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CArray@PAXPAX@@8 DD FLAT:??_R0?AV?$CArray@PAXPAX@@@8 ; CArray<void *,void *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CArray@PAXPAX@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CArray@PAXPAX@@8
rdata$r	SEGMENT
??_R2?$CArray@PAXPAX@@8 DD FLAT:??_R1A@?0A@EA@?$CArray@PAXPAX@@8 ; CArray<void *,void *>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CArray@PAXPAX@@8
rdata$r	SEGMENT
??_R3?$CArray@PAXPAX@@8 DD 00H				; CArray<void *,void *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CArray@PAXPAX@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CArray@PAXPAX@@@8
data$rs	SEGMENT
??_R0?AV?$CArray@PAXPAX@@@8 DD FLAT:??_7type_info@@6B@	; CArray<void *,void *> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CArray@PAXPAX@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CArray@PAXPAX@@6B@
rdata$r	SEGMENT
??_R4?$CArray@PAXPAX@@6B@ DD 00H			; CArray<void *,void *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CArray@PAXPAX@@@8
	DD	FLAT:??_R3?$CArray@PAXPAX@@8
rdata$r	ENDS
;	COMDAT ___pobjMapEntryLast
ATL$__z	SEGMENT
___pobjMapEntryLast DD 00H
ATL$__z	ENDS
;	COMDAT ___pobjMapEntryFirst
ATL$__a	SEGMENT
___pobjMapEntryFirst DD 00H
ATL$__a	ENDS
;	COMDAT ??_7CWin32Heap@ATL@@6B@
CONST	SEGMENT
??_7CWin32Heap@ATL@@6B@ DD FLAT:??_R4CWin32Heap@ATL@@6B@ ; ATL::CWin32Heap::`vftable'
	DD	FLAT:?Allocate@CWin32Heap@ATL@@UAEPAXI@Z
	DD	FLAT:?Free@CWin32Heap@ATL@@UAEXPAX@Z
	DD	FLAT:?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z
	DD	FLAT:?GetSize@CWin32Heap@ATL@@UAEIPAX@Z
	DD	FLAT:??_ECWin32Heap@ATL@@UAEPAXI@Z
CONST	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT ??_7?$CArray@PAXPAX@@6B@
CONST	SEGMENT
??_7?$CArray@PAXPAX@@6B@ DD FLAT:??_R4?$CArray@PAXPAX@@6B@ ; CArray<void *,void *>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CArray@PAXPAX@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CArray@PAXPAX@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT _c_DwmMaxAdapters
CONST	SEGMENT
_c_DwmMaxAdapters DD 010H
CONST	ENDS
;	COMDAT _c_DwmMaxMonitors
CONST	SEGMENT
_c_DwmMaxMonitors DD 010H
CONST	ENDS
;	COMDAT _c_DwmMaxQueuedBuffers
CONST	SEGMENT
_c_DwmMaxQueuedBuffers DD 08H
CONST	ENDS
;	COMDAT ?CLSID_WinFormsControl@@3U_GUID@@B
CONST	SEGMENT
?CLSID_WinFormsControl@@3U_GUID@@B DD 0b7e7a666H	; CLSID_WinFormsControl
	DW	0d623H
	DW	0457fH
	DB	0a3H
	DB	0aH
	DB	06aH
	DB	049H
	DB	0a3H
	DB	0e5H
	DB	0b4H
	DB	070H
CONST	ENDS
;	COMDAT ??_C@_0BE@IEJDDJPC@RMSG_LSHAREDCHANGED@
CONST	SEGMENT
??_C@_0BE@IEJDDJPC@RMSG_LSHAREDCHANGED@ DB 'RMSG_LSHAREDCHANGED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EMMLKNDL@RMSG_ENDSCROLLPOS@
CONST	SEGMENT
??_C@_0BC@EMMLKNDL@RMSG_ENDSCROLLPOS@ DB 'RMSG_ENDSCROLLPOS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DGNCFOOP@RMSG_LBTNDOWN@
CONST	SEGMENT
??_C@_0O@DGNCFOOP@RMSG_LBTNDOWN@ DB 'RMSG_LBTNDOWN', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MMIGKJED@RMSG_LBTNDBLCLICK@
CONST	SEGMENT
??_C@_0BC@MMIGKJED@RMSG_LBTNDBLCLICK@ DB 'RMSG_LBTNDBLCLICK', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IMGBDGND@RMSG_TABSTOP@
CONST	SEGMENT
??_C@_0N@IMGBDGND@RMSG_TABSTOP@ DB 'RMSG_TABSTOP', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FPLDPAEH@RMSG_FORMSTATECHANGE@
CONST	SEGMENT
??_C@_0BF@FPLDPAEH@RMSG_FORMSTATECHANGE@ DB 'RMSG_FORMSTATECHANGE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PGMEIMOI@RMSG_EVENT_SIGNAL@
CONST	SEGMENT
??_C@_0BC@PGMEIMOI@RMSG_EVENT_SIGNAL@ DB 'RMSG_EVENT_SIGNAL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FABJBMLM@RMSG_EVENT_SPININPUT@
CONST	SEGMENT
??_C@_0BF@FABJBMLM@RMSG_EVENT_SPININPUT@ DB 'RMSG_EVENT_SPININPUT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LEGBOMJF@RMSG_EVENT_ACCTINPUT@
CONST	SEGMENT
??_C@_0BF@LEGBOMJF@RMSG_EVENT_ACCTINPUT@ DB 'RMSG_EVENT_ACCTINPUT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JNMMFBNP@RMSG_EVENT_CODEINPUT@
CONST	SEGMENT
??_C@_0BF@JNMMFBNP@RMSG_EVENT_CODEINPUT@ DB 'RMSG_EVENT_CODEINPUT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FBLMOCPF@RMSG_FORMINITIALCOMPLETED@
CONST	SEGMENT
??_C@_0BK@FBLMOCPF@RMSG_FORMINITIALCOMPLETED@ DB 'RMSG_FORMINITIALCOMPLET'
	DB	'ED', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GPPHKJFN@Invalid?5DateTimeSpan@
CONST	SEGMENT
??_C@_0BF@GPPHKJFN@Invalid?5DateTimeSpan@ DB 'Invalid DateTimeSpan', 00H ; `string'
CONST	ENDS
;	COMDAT ?szInvalidDateTimeSpan@ATL@@3QBDB
CONST	SEGMENT
?szInvalidDateTimeSpan@ATL@@3QBDB DD FLAT:??_C@_0BF@GPPHKJFN@Invalid?5DateTimeSpan@ ; ATL::szInvalidDateTimeSpan
CONST	ENDS
;	COMDAT ??_C@_0BB@KEKMKJPM@Invalid?5DateTime@
CONST	SEGMENT
??_C@_0BB@KEKMKJPM@Invalid?5DateTime@ DB 'Invalid DateTime', 00H ; `string'
CONST	ENDS
;	COMDAT ?szInvalidDateTime@ATL@@3QBDB
CONST	SEGMENT
?szInvalidDateTime@ATL@@3QBDB DD FLAT:??_C@_0BB@KEKMKJPM@Invalid?5DateTime@ ; ATL::szInvalidDateTime
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatchEx
CONST	SEGMENT
_IID_IAxWinAmbientDispatchEx DD 0b2d0778bH
	DW	0ac99H
	DW	04c58H
	DB	0a5H
	DB	0c8H
	DB	0e7H
	DB	072H
	DB	04eH
	DB	053H
	DB	016H
	DB	0b5H
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindowLic
CONST	SEGMENT
_IID_IAxWinHostWindowLic DD 03935bda8H
	DW	04ed9H
	DW	0495cH
	DB	086H
	DB	050H
	DB	0e0H
	DB	01fH
	DB	0c1H
	DB	0e3H
	DB	08aH
	DB	04bH
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT ??_7CAtlStringMgr@ATL@@6B@
CONST	SEGMENT
??_7CAtlStringMgr@ATL@@6B@ DD FLAT:??_R4CAtlStringMgr@ATL@@6B@ ; ATL::CAtlStringMgr::`vftable'
	DD	FLAT:?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z
	DD	FLAT:?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z
	DD	FLAT:?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z
	DD	FLAT:?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ
	DD	FLAT:?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ
	DD	FLAT:??_ECAtlStringMgr@ATL@@UAEPAXI@Z
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT ??_C@_0BB@JPACFCL@RMSG_SETPCTRDATA@
CONST	SEGMENT
??_C@_0BB@JPACFCL@RMSG_SETPCTRDATA@ DB 'RMSG_SETPCTRDATA', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GOOPDKI@RMSG_GETPCTRDATA@
CONST	SEGMENT
??_C@_0BB@GOOPDKI@RMSG_GETPCTRDATA@ DB 'RMSG_GETPCTRDATA', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BKKCOCLK@RMSG_INTERFACE@
CONST	SEGMENT
??_C@_0P@BKKCOCLK@RMSG_INTERFACE@ DB 'RMSG_INTERFACE', 00H ; `string'
CONST	ENDS
;	COMDAT __pIncludeInitManaged
_DATA	SEGMENT
__pIncludeInitManaged DD FLAT:?_AfxInitManaged@@YAHXZ
_DATA	ENDS
;	COMDAT ??_C@_06JBKGCNBB@Delete@
CONST	SEGMENT
??_C@_06JBKGCNBB@Delete@ DB 'Delete', 00H		; `string'
CONST	ENDS
;	COMDAT ?szDelete@ATL@@3QBDB
CONST	SEGMENT
?szDelete@ATL@@3QBDB DD FLAT:??_C@_06JBKGCNBB@Delete@	; ATL::szDelete
CONST	ENDS
;	COMDAT ??_C@_08KAAPDIAN@NoRemove@
CONST	SEGMENT
??_C@_08KAAPDIAN@NoRemove@ DB 'NoRemove', 00H		; `string'
CONST	ENDS
;	COMDAT ?szNoRemove@ATL@@3QBDB
CONST	SEGMENT
?szNoRemove@ATL@@3QBDB DD FLAT:??_C@_08KAAPDIAN@NoRemove@ ; ATL::szNoRemove
CONST	ENDS
;	COMDAT ??_C@_0M@DBGDLGLL@ForceRemove@
CONST	SEGMENT
??_C@_0M@DBGDLGLL@ForceRemove@ DB 'ForceRemove', 00H	; `string'
CONST	ENDS
;	COMDAT ?szForceRemove@ATL@@3QBDB
CONST	SEGMENT
?szForceRemove@ATL@@3QBDB DD FLAT:??_C@_0M@DBGDLGLL@ForceRemove@ ; ATL::szForceRemove
CONST	ENDS
;	COMDAT ??_C@_03LAIAPFCB@Val@
CONST	SEGMENT
??_C@_03LAIAPFCB@Val@ DB 'Val', 00H			; `string'
CONST	ENDS
;	COMDAT ?szValToken@ATL@@3QBDB
CONST	SEGMENT
?szValToken@ATL@@3QBDB DD FLAT:??_C@_03LAIAPFCB@Val@	; ATL::szValToken
CONST	ENDS
;	COMDAT ??_C@_01HMGJMAIH@B@
CONST	SEGMENT
??_C@_01HMGJMAIH@B@ DB 'B', 00H				; `string'
CONST	ENDS
;	COMDAT ?szBinaryVal@ATL@@3QBDB
CONST	SEGMENT
?szBinaryVal@ATL@@3QBDB DD FLAT:??_C@_01HMGJMAIH@B@	; ATL::szBinaryVal
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D@
CONST	SEGMENT
??_C@_01CKDDGHAB@D@ DB 'D', 00H				; `string'
CONST	ENDS
;	COMDAT ?szDwordVal@ATL@@3QBDB
CONST	SEGMENT
?szDwordVal@ATL@@3QBDB DD FLAT:??_C@_01CKDDGHAB@D@	; ATL::szDwordVal
CONST	ENDS
;	COMDAT ??_C@_01PLPBNMEI@M@
CONST	SEGMENT
??_C@_01PLPBNMEI@M@ DB 'M', 00H				; `string'
CONST	ENDS
;	COMDAT ?multiszStringVal@ATL@@3QBDB
CONST	SEGMENT
?multiszStringVal@ATL@@3QBDB DD FLAT:??_C@_01PLPBNMEI@M@ ; ATL::multiszStringVal
CONST	ENDS
;	COMDAT ??_C@_01CPLAODJH@S@
CONST	SEGMENT
??_C@_01CPLAODJH@S@ DB 'S', 00H				; `string'
CONST	ENDS
;	COMDAT ?szStringVal@ATL@@3QBDB
CONST	SEGMENT
?szStringVal@ATL@@3QBDB DD FLAT:??_C@_01CPLAODJH@S@	; ATL::szStringVal
CONST	ENDS
;	COMDAT ?chEquals@ATL@@3DB
CONST	SEGMENT
?chEquals@ATL@@3DB DB 03dH				; ATL::chEquals
CONST	ENDS
;	COMDAT ?chQuote@ATL@@3DB
CONST	SEGMENT
?chQuote@ATL@@3DB DB 027H				; ATL::chQuote
CONST	ENDS
;	COMDAT ?chLeftBracket@ATL@@3DB
CONST	SEGMENT
?chLeftBracket@ATL@@3DB DB 07bH				; ATL::chLeftBracket
CONST	ENDS
;	COMDAT ?chRightBracket@ATL@@3DB
CONST	SEGMENT
?chRightBracket@ATL@@3DB DB 07dH			; ATL::chRightBracket
CONST	ENDS
;	COMDAT ?chDirSep@ATL@@3DB
CONST	SEGMENT
?chDirSep@ATL@@3DB DB 05cH				; ATL::chDirSep
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAtlStringMgr@ATL@@8 DD FLAT:??_R0?AVCAtlStringMgr@ATL@@@8 ; ATL::CAtlStringMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2CAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R2CAtlStringMgr@ATL@@8 DD FLAT:??_R1A@?0A@EA@CAtlStringMgr@ATL@@8 ; ATL::CAtlStringMgr::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R3CAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R3CAtlStringMgr@ATL@@8 DD 00H			; ATL::CAtlStringMgr::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAtlStringMgr@ATL@@@8
data$rs	SEGMENT
??_R0?AVCAtlStringMgr@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CAtlStringMgr `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAtlStringMgr@ATL@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CAtlStringMgr@ATL@@6B@
rdata$r	SEGMENT
??_R4CAtlStringMgr@ATL@@6B@ DD 00H			; ATL::CAtlStringMgr::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCAtlStringMgr@ATL@@@8
	DD	FLAT:??_R3CAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_C@_0O@KHOBHOBJ@atlTraceISAPI@
CONST	SEGMENT
??_C@_0O@KHOBHOBJ@atlTraceISAPI@ DB 'atlTraceISAPI', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R2IAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R2IAtlStringMgr@ATL@@8 DD FLAT:??_R1A@?0A@EA@IAtlStringMgr@ATL@@8 ; ATL::IAtlStringMgr::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R3IAtlStringMgr@ATL@@8 DD 00H			; ATL::IAtlStringMgr::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIAtlStringMgr@ATL@@@8
data$rs	SEGMENT
??_R0?AUIAtlStringMgr@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::IAtlStringMgr `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIAtlStringMgr@ATL@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@IAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IAtlStringMgr@ATL@@8 DD FLAT:??_R0?AUIAtlStringMgr@ATL@@@8 ; ATL::IAtlStringMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2IAtlMemMgr@ATL@@8
rdata$r	SEGMENT
??_R2IAtlMemMgr@ATL@@8 DD FLAT:??_R1A@?0A@EA@IAtlMemMgr@ATL@@8 ; ATL::IAtlMemMgr::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IAtlMemMgr@ATL@@8
rdata$r	SEGMENT
??_R3IAtlMemMgr@ATL@@8 DD 00H				; ATL::IAtlMemMgr::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IAtlMemMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIAtlMemMgr@ATL@@@8
data$rs	SEGMENT
??_R0?AUIAtlMemMgr@ATL@@@8 DD FLAT:??_7type_info@@6B@	; ATL::IAtlMemMgr `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIAtlMemMgr@ATL@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@IAtlMemMgr@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IAtlMemMgr@ATL@@8 DD FLAT:??_R0?AUIAtlMemMgr@ATL@@@8 ; ATL::IAtlMemMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IAtlMemMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_C@_0N@KLPNCFEE@atlTraceSync@
CONST	SEGMENT
??_C@_0N@KLPNCFEE@atlTraceSync@ DB 'atlTraceSync', 00H	; `string'
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CWin32Heap@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWin32Heap@ATL@@8 DD FLAT:??_R0?AVCWin32Heap@ATL@@@8 ; ATL::CWin32Heap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWin32Heap@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2CWin32Heap@ATL@@8
rdata$r	SEGMENT
??_R2CWin32Heap@ATL@@8 DD FLAT:??_R1A@?0A@EA@CWin32Heap@ATL@@8 ; ATL::CWin32Heap::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IAtlMemMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R3CWin32Heap@ATL@@8
rdata$r	SEGMENT
??_R3CWin32Heap@ATL@@8 DD 00H				; ATL::CWin32Heap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CWin32Heap@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWin32Heap@ATL@@@8
data$rs	SEGMENT
??_R0?AVCWin32Heap@ATL@@@8 DD FLAT:??_7type_info@@6B@	; ATL::CWin32Heap `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWin32Heap@ATL@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CWin32Heap@ATL@@6B@
rdata$r	SEGMENT
??_R4CWin32Heap@ATL@@6B@ DD 00H				; ATL::CWin32Heap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCWin32Heap@ATL@@@8
	DD	FLAT:??_R3CWin32Heap@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_C@_0BB@DNJDADMG@atlTraceSecurity@
CONST	SEGMENT
??_C@_0BB@DNJDADMG@atlTraceSecurity@ DB 'atlTraceSecurity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$rs	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$rs	ENDS
;	COMDAT ??_C@_0N@FEAAACHD@atlTraceUtil@
CONST	SEGMENT
??_C@_0N@FEAAACHD@atlTraceUtil@ DB 'atlTraceUtil', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IOBBMAHG@atlTraceMap@
CONST	SEGMENT
??_C@_0M@IOBBMAHG@atlTraceMap@ DB 'atlTraceMap', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MBNHGHMI@atlTraceString@
CONST	SEGMENT
??_C@_0P@MBNHGHMI@atlTraceString@ DB 'atlTraceString', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IDBKCKK@atlTraceStencil@
CONST	SEGMENT
??_C@_0BA@IDBKCKK@atlTraceStencil@ DB 'atlTraceStencil', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MEOJAOKK@atlTraceCache@
CONST	SEGMENT
??_C@_0O@MEOJAOKK@atlTraceCache@ DB 'atlTraceCache', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BNNILHBE@atlTraceTime@
CONST	SEGMENT
??_C@_0N@BNNILHBE@atlTraceTime@ DB 'atlTraceTime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PGMFNIFA@atlTraceException@
CONST	SEGMENT
??_C@_0BC@PGMFNIFA@atlTraceException@ DB 'atlTraceException', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PJPCCAKP@atlTraceAllocation@
CONST	SEGMENT
??_C@_0BD@PJPCCAKP@atlTraceAllocation@ DB 'atlTraceAllocation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MCBFIDIC@atlTraceNotImpl@
CONST	SEGMENT
??_C@_0BA@MCBFIDIC@atlTraceNotImpl@ DB 'atlTraceNotImpl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LNEGBOLO@atlTraceSnapin@
CONST	SEGMENT
??_C@_0P@LNEGBOLO@atlTraceSnapin@ DB 'atlTraceSnapin', 00H ; `string'
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	___local_stdio_printf_options
PUBLIC	_sprintf
PUBLIC	?AfxCrtErrorCheck@@YAHH@Z			; AfxCrtErrorCheck
PUBLIC	??1CObject@@UAE@XZ				; CObject::~CObject
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?_AtlRaiseException@ATL@@YAXKK@Z		; ATL::_AtlRaiseException
PUBLIC	?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z ; ATL::_AtlInitializeCriticalSectionEx
PUBLIC	??1CWin32Heap@ATL@@UAE@XZ			; ATL::CWin32Heap::~CWin32Heap
PUBLIC	?CreateObject@?$CThreadLocal@VAFX_MODULE_THREAD_STATE@@@@SGPAVCNoTrackObject@@XZ ; CThreadLocal<AFX_MODULE_THREAD_STATE>::CreateObject
PUBLIC	??1CAtlStringMgr@ATL@@UAE@XZ			; ATL::CAtlStringMgr::~CAtlStringMgr
PUBLIC	??__FstrHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strHeap''
PUBLIC	??__FstrMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strMgr''
PUBLIC	?EnsureLinked@CAtlStringMgrStaticInitializer@ATLImplementationDetails@ATL@@QAEPAXXZ ; ATL::ATLImplementationDetails::CAtlStringMgrStaticInitializer::EnsureLinked
PUBLIC	?CompareParamter@@YAHPADV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CompareParamter
PUBLIC	?GetParamterValue@@YAXPBDAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@Z ; GetParamterValue
PUBLIC	?SetPermanentHandle@@YAXPAXPAVCObject@@@Z	; SetPermanentHandle
PUBLIC	?RemovePermanentHandle@@YAXPAX@Z		; RemovePermanentHandle
PUBLIC	??0?$CArray@PAXPAX@@QAE@XZ			; CArray<void *,void *>::CArray<void *,void *>
PUBLIC	?SetSize@?$CArray@PAXPAX@@QAEXHH@Z		; CArray<void *,void *>::SetSize
PUBLIC	?SetAtGrow@?$CArray@PAXPAX@@QAEXHPAX@Z		; CArray<void *,void *>::SetAtGrow
PUBLIC	??1?$CArray@PAXPAX@@UAE@XZ			; CArray<void *,void *>::~CArray<void *,void *>
PUBLIC	??$SerializeElements@PAX@@YGXAAVCArchive@@PAPAXH@Z ; SerializeElements<void *>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
PUBLIC	?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
PUBLIC	?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A ; ATL::atlTraceQI
PUBLIC	?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
PUBLIC	?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A ; ATL::atlTraceRefcount
PUBLIC	?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
PUBLIC	?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
PUBLIC	?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A ; ATL::atlTraceHosting
PUBLIC	?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A ; ATL::atlTraceDBClient
PUBLIC	?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A ; ATL::atlTraceDBProvider
PUBLIC	?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A ; ATL::atlTraceSnapin
PUBLIC	?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
PUBLIC	?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A ; ATL::atlTraceAllocation
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A ; ATL::atlTraceTime
PUBLIC	?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A ; ATL::atlTraceCache
PUBLIC	?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A ; ATL::atlTraceStencil
PUBLIC	?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
PUBLIC	?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A ; ATL::atlTraceMap
PUBLIC	?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A ; ATL::atlTraceUtil
PUBLIC	?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A ; ATL::atlTraceSecurity
PUBLIC	?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A ; ATL::atlTraceSync
PUBLIC	?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A ; ATL::atlTraceISAPI
PUBLIC	?_AtlComModule@ATL@@3VCAtlComModule@1@A		; ATL::_AtlComModule
PUBLIC	?_AtlWinModule@ATL@@3VCAtlWinModule@1@A		; ATL::_AtlWinModule
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	?isInitialized@CAtlStringMgr@ATL@@0_NA		; ATL::CAtlStringMgr::isInitialized
PUBLIC	?InitializeCAtlStringMgr@ATLImplementationDetails@ATL@@3UCAtlStringMgrStaticInitializer@12@A ; ATL::ATLImplementationDetails::InitializeCAtlStringMgr
PUBLIC	?m_arPermanentHandle@@3V?$CArray@PAXPAX@@A	; m_arPermanentHandle
PUBLIC	??_C@_01CLKCMJKC@?5@				; `string'
PUBLIC	??_C@_0BN@HFGHFFIN@SetPermanentHandle?5?$CF08X?$DN?$CF0X?6@ ; `string'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	___std_terminate:PROC
EXTRN	__imp___invalid_parameter_noinfo:PROC
EXTRN	__imp___errno:PROC
EXTRN	__imp__OutputDebugStringA@4:PROC
EXTRN	__imp__DecodePointer@4:PROC
EXTRN	__imp__RaiseException@16:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__HeapDestroy@4:PROC
EXTRN	__imp__HeapAlloc@12:PROC
EXTRN	__imp__HeapReAlloc@16:PROC
EXTRN	__imp__HeapFree@12:PROC
EXTRN	__imp__HeapSize@12:PROC
EXTRN	__imp__GetProcessHeap@0:PROC
EXTRN	__imp__InitializeCriticalSectionEx@12:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	__imp__RegisterWindowMessageA@4:PROC
EXTRN	__imp__UnregisterClassA@8:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	__imp__free:PROC
EXTRN	?AfxThrowMemoryException@@YGXXZ:PROC		; AfxThrowMemoryException
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?AfxThrowArchiveException@@YGXHPBD@Z:PROC	; AfxThrowArchiveException
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_?CompareNoCase@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z:PROC
EXTRN	__imp_?Replace@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPBD0@Z:PROC
EXTRN	?Read@CArchive@@QAEIPAXI@Z:PROC			; CArchive::Read
EXTRN	?Write@CArchive@@QAEXPBXI@Z:PROC		; CArchive::Write
EXTRN	?ReadCount@CArchive@@QAEKXZ:PROC		; CArchive::ReadCount
EXTRN	?WriteCount@CArchive@@QAEXK@Z:PROC		; CArchive::WriteCount
EXTRN	??ACMapPtrToPtr@@QAEAAPAXPAX@Z:PROC		; CMapPtrToPtr::operator[]
EXTRN	?RemoveKey@CMapPtrToPtr@@QAEHPAX@Z:PROC		; CMapPtrToPtr::RemoveKey
EXTRN	??2CNoTrackObject@@SGPAXI@Z:PROC		; CNoTrackObject::operator new
EXTRN	??3CNoTrackObject@@SGXPAX@Z:PROC		; CNoTrackObject::operator delete
EXTRN	?GetData@CThreadLocalObject@@QAEPAVCNoTrackObject@@P6GPAV2@XZ@Z:PROC ; CThreadLocalObject::GetData
EXTRN	??0AFX_MODULE_THREAD_STATE@@QAE@XZ:PROC		; AFX_MODULE_THREAD_STATE::AFX_MODULE_THREAD_STATE
EXTRN	?AfxGetAppModuleState@@YGPAVAFX_MODULE_STATE@@XZ:PROC ; AfxGetAppModuleState
EXTRN	?AfxExtractSubString@@YGHAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDHD@Z:PROC ; AfxExtractSubString
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A
_BSS	SEGMENT
?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceGeneral
_BSS	ENDS
;	COMDAT ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A
_BSS	SEGMENT
?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCOM
_BSS	ENDS
;	COMDAT ?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A
_BSS	SEGMENT
?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceQI
_BSS	ENDS
;	COMDAT ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A
_BSS	SEGMENT
?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRegistrar
_BSS	ENDS
;	COMDAT ?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A
_BSS	SEGMENT
?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRefcount
_BSS	ENDS
;	COMDAT ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A
_BSS	SEGMENT
?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceWindowing
_BSS	ENDS
;	COMDAT ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A
_BSS	SEGMENT
?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceControls
_BSS	ENDS
;	COMDAT ?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A
_BSS	SEGMENT
?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceHosting
_BSS	ENDS
;	COMDAT ?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBClient
_BSS	ENDS
;	COMDAT ?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBProvider
_BSS	ENDS
;	COMDAT ?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSnapin
_BSS	ENDS
;	COMDAT ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceNotImpl
_BSS	ENDS
;	COMDAT ?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceAllocation
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceTime
_BSS	ENDS
;	COMDAT ?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCache
_BSS	ENDS
;	COMDAT ?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceStencil
_BSS	ENDS
;	COMDAT ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceString
_BSS	ENDS
;	COMDAT ?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceMap
_BSS	ENDS
;	COMDAT ?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceUtil
_BSS	ENDS
;	COMDAT ?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSecurity
_BSS	ENDS
;	COMDAT ?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSync
_BSS	ENDS
;	COMDAT ?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceISAPI
_BSS	ENDS
;	COMDAT ?isInitialized@CAtlStringMgr@ATL@@0_NA
_BSS	SEGMENT
?isInitialized@CAtlStringMgr@ATL@@0_NA DB 01H DUP (?)	; ATL::CAtlStringMgr::isInitialized
_BSS	ENDS
;	COMDAT ?InitializeCAtlStringMgr@ATLImplementationDetails@ATL@@3UCAtlStringMgrStaticInitializer@12@A
_BSS	SEGMENT
?InitializeCAtlStringMgr@ATLImplementationDetails@ATL@@3UCAtlStringMgrStaticInitializer@12@A DB 01H DUP (?) ; ATL::ATLImplementationDetails::InitializeCAtlStringMgr
_BSS	ENDS
_BSS	SEGMENT
?RMSG_FORMINITIALCOMPLETED@@3IB DD 01H DUP (?)		; RMSG_FORMINITIALCOMPLETED
?RMSG_EVENT_CODEINPUT@@3IB DD 01H DUP (?)		; RMSG_EVENT_CODEINPUT
?RMSG_EVENT_ACCTINPUT@@3IB DD 01H DUP (?)		; RMSG_EVENT_ACCTINPUT
?RMSG_EVENT_SPININPUT@@3IB DD 01H DUP (?)		; RMSG_EVENT_SPININPUT
?RMSG_EVENT_SIGNAL@@3IB DD 01H DUP (?)			; RMSG_EVENT_SIGNAL
?RMSG_FORMSTATECHANGE@@3IB DD 01H DUP (?)		; RMSG_FORMSTATECHANGE
?RMSG_TABSTOP@@3IB DD 01H DUP (?)			; RMSG_TABSTOP
?RMSG_LBTNDBLCLICK@@3IB DD 01H DUP (?)			; RMSG_LBTNDBLCLICK
?RMSG_LBTNDOWN@@3IB DD 01H DUP (?)			; RMSG_LBTNDOWN
?RMSG_ENDSCROLLPOS@@3IB DD 01H DUP (?)			; RMSG_ENDSCROLLPOS
?RMSG_LSHAREDCHANGED@@3IB DD 01H DUP (?)		; RMSG_LSHAREDCHANGED
?RMSG_INTERFACE@@3IB DD 01H DUP (?)			; RMSG_INTERFACE
?RMSG_GETPCTRDATA@@3IB DD 01H DUP (?)			; RMSG_GETPCTRDATA
?RMSG_SETPCTRDATA@@3IB DD 01H DUP (?)			; RMSG_SETPCTRDATA
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlComModule$initializer$@ATL@@3P6AXXZA DD FLAT:??__E_AtlComModule@ATL@@YAXXZ ; ATL::_AtlComModule$initializer$
CRT$XCU	ENDS
;	COMDAT ??_C@_0BN@HFGHFFIN@SetPermanentHandle?5?$CF08X?$DN?$CF0X?6@
CONST	SEGMENT
??_C@_0BN@HFGHFFIN@SetPermanentHandle?5?$CF08X?$DN?$CF0X?6@ DB 'SetPerman'
	DB	'entHandle %08X=%0X', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5@ DB ' ', 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
?m_arPermanentHandle@@3V?$CArray@PAXPAX@@A DD FLAT:??_7?$CArray@PAXPAX@@6B@ ; m_arPermanentHandle
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
_DATA	SEGMENT
?_AtlWinModule@ATL@@3VCAtlWinModule@1@A DD 02cH		; ATL::_AtlWinModule
	DB	24 DUP(00H)
	DD	00H
_DATA	ENDS
;	COMDAT ?_AtlComModule@ATL@@3VCAtlComModule@1@A
_DATA	SEGMENT
?_AtlComModule@ATL@@3VCAtlComModule@1@A DB 04H DUP (?)
	DD	FLAT:___ImageBase			; ATL::_AtlComModule
	DD	FLAT:___pobjMapEntryFirst+4
	DD	FLAT:___pobjMapEntryLast
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetParamterValue@@YAXPBDAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetParamterValue@@YAXPBDAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetParamterValue@@YAXPBDAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?GetParamterValue@@YAXPBDAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@Z$2
__ehfuncinfo$?GetParamterValue@@YAXPBDAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetParamterValue@@YAXPBDAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CompareParamter@@YAHPADV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CompareParamter@@YAHPADV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CompareParamter@@YAHPADV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$1
__ehfuncinfo$?CompareParamter@@YAHPADV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CompareParamter@@YAHPADV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??__F_AtlComModule@ATL@@YAXXZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??__F_AtlComModule@ATL@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??__F_AtlComModule@ATL@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CAtlComModule@ATL@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateObject@?$CThreadLocal@VAFX_MODULE_THREAD_STATE@@@@SGPAVCNoTrackObject@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateObject@?$CThreadLocal@VAFX_MODULE_THREAD_STATE@@@@SGPAVCNoTrackObject@@XZ$0
__ehfuncinfo$?CreateObject@?$CThreadLocal@VAFX_MODULE_THREAD_STATE@@@@SGPAVCNoTrackObject@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateObject@?$CThreadLocal@VAFX_MODULE_THREAD_STATE@@@@SGPAVCNoTrackObject@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlWinModule$initializer$@ATL@@3P6AXXZA DD FLAT:??__E_AtlWinModule@ATL@@YAXXZ ; ATL::_AtlWinModule$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?InitializeCAtlStringMgr$initializer$@ATLImplementationDetails@ATL@@3P6AXXZA DD FLAT:??__EInitializeCAtlStringMgr@ATLImplementationDetails@ATL@@YAXXZ ; ATL::ATLImplementationDetails::InitializeCAtlStringMgr$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??isInitialized$initializer$@CAtlStringMgr@ATL@@0P6AXXZA@@3P6AXXZA DD FLAT:??__E?isInitialized@CAtlStringMgr@ATL@@0_NA@@YAXXZ ; ??isInitialized$initializer$@CAtlStringMgr@ATL@@0P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_FORMINITIALCOMPLETED$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_FORMINITIALCOMPLETED@@YAXXZ ; RMSG_FORMINITIALCOMPLETED$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_EVENT_CODEINPUT$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_EVENT_CODEINPUT@@YAXXZ ; RMSG_EVENT_CODEINPUT$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_EVENT_ACCTINPUT$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_EVENT_ACCTINPUT@@YAXXZ ; RMSG_EVENT_ACCTINPUT$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_EVENT_SPININPUT$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_EVENT_SPININPUT@@YAXXZ ; RMSG_EVENT_SPININPUT$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_EVENT_SIGNAL$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_EVENT_SIGNAL@@YAXXZ ; RMSG_EVENT_SIGNAL$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_FORMSTATECHANGE$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_FORMSTATECHANGE@@YAXXZ ; RMSG_FORMSTATECHANGE$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_TABSTOP$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_TABSTOP@@YAXXZ ; RMSG_TABSTOP$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_LBTNDBLCLICK$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_LBTNDBLCLICK@@YAXXZ ; RMSG_LBTNDBLCLICK$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_LBTNDOWN$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_LBTNDOWN@@YAXXZ ; RMSG_LBTNDOWN$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_ENDSCROLLPOS$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_ENDSCROLLPOS@@YAXXZ ; RMSG_ENDSCROLLPOS$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_LSHAREDCHANGED$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_LSHAREDCHANGED@@YAXXZ ; RMSG_LSHAREDCHANGED$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_INTERFACE$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_INTERFACE@@YAXXZ ; RMSG_INTERFACE$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_GETPCTRDATA$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_GETPCTRDATA@@YAXXZ ; RMSG_GETPCTRDATA$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RMSG_SETPCTRDATA$initializer$@@3P6AXXZA DD FLAT:??__ERMSG_SETPCTRDATA@@YAXXZ ; RMSG_SETPCTRDATA$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?m_arPermanentHandle$initializer$@@3P6AXXZA DD FLAT:??__Em_arPermanentHandle@@YAXXZ ; m_arPermanentHandle$initializer$
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@PAX@@YGXAAVCArchive@@PAPAXH@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@PAX@@YGXAAVCArchive@@PAPAXH@Z PROC	; SerializeElements<void *>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b 75 10	 mov	 esi, DWORD PTR _nCount$[ebp]
  0000b	57		 push	 edi
  0000c	85 f6		 test	 esi, esi
  0000e	74 08		 je	 SHORT $LN2@SerializeE
  00010	85 c9		 test	 ecx, ecx
  00012	0f 84 89 00 00
	00		 je	 $LN34@SerializeE
$LN2@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00018	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  0001b	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0001e	f7 d0		 not	 eax
  00020	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  00022	74 3c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;
; 79   : 		pData = pElements;
; 80   : 		while( nElementsLeft > 0 )

  00024	85 f6		 test	 esi, esi
  00026	74 31		 je	 SHORT $LN8@SerializeE
  00028	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL5@SerializeE:

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00030	bb ff ff ff 1f	 mov	 ebx, 536870911		; 1fffffffH
  00035	3b f3		 cmp	 esi, ebx
  00037	0f 42 de	 cmovb	 ebx, esi

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0003a	8d 3c 9d 00 00
	00 00		 lea	 edi, DWORD PTR [ebx*4]
  00041	57		 push	 edi
  00042	51		 push	 ecx
  00043	8b ca		 mov	 ecx, edx
  00045	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;
; 87   : 			pData += nElementsToWrite;

  0004a	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00050	03 cf		 add	 ecx, edi
  00052	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  00055	2b f3		 sub	 esi, ebx
  00057	75 d7		 jne	 SHORT $LL5@SerializeE
$LN8@SerializeE:
  00059	5f		 pop	 edi

; 105  : 		}
; 106  : 	}
; 107  : }

  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	5d		 pop	 ebp
  0005d	c2 0c 00	 ret	 12			; 0000000cH
$LN10@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  00060	85 f6		 test	 esi, esi
  00062	74 f5		 je	 SHORT $LN8@SerializeE
$LL7@SerializeE:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00064	bf ff ff ff 1f	 mov	 edi, 536870911		; 1fffffffH
  00069	3b f7		 cmp	 esi, edi
  0006b	0f 42 fe	 cmovb	 edi, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0006e	8d 1c bd 00 00
	00 00		 lea	 ebx, DWORD PTR [edi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00075	53		 push	 ebx
  00076	51		 push	 ecx
  00077	8b ca		 mov	 ecx, edx
  00079	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0007e	3b c3		 cmp	 eax, ebx
  00080	75 16		 jne	 SHORT $LN23@SerializeE
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  00082	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00085	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;
; 104  : 			pData += nElementsToRead;

  00088	03 cb		 add	 ecx, ebx
  0008a	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  0008d	2b f7		 sub	 esi, edi
  0008f	75 d3		 jne	 SHORT $LL7@SerializeE

; 105  : 		}
; 106  : 	}
; 107  : }

  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	5d		 pop	 ebp
  00095	c2 0c 00	 ret	 12			; 0000000cH
$LN23@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 402  : 		AfxThrowArchiveException(CArchiveException::endOfFile);

  00098	6a 00		 push	 0
  0009a	6a 03		 push	 3
  0009c	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN34@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  000a1	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN32@SerializeE:
  000a6	cc		 int	 3
??$SerializeElements@PAX@@YGXAAVCArchive@@PAPAXH@Z ENDP	; SerializeElements<void *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??__Fm_arPermanentHandle@@YAXXZ
text$yd	SEGMENT
??__Fm_arPermanentHandle@@YAXXZ PROC			; `dynamic atexit destructor for 'm_arPermanentHandle'', COMDAT

; 358  : 	if (m_pData != NULL)

  00000	a1 04 00 00 00	 mov	 eax, DWORD PTR ?m_arPermanentHandle@@3V?$CArray@PAXPAX@@A+4
  00005	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_arPermanentHandle@@3V?$CArray@PAXPAX@@A, OFFSET ??_7?$CArray@PAXPAX@@6B@
  0000f	85 c0		 test	 eax, eax
  00011	74 07		 je	 SHORT $LN7@dynamic

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )
; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00019	59		 pop	 ecx
$LN7@dynamic:
  0001a	c3		 ret	 0
??__Fm_arPermanentHandle@@YAXXZ ENDP			; `dynamic atexit destructor for 'm_arPermanentHandle''
text$yd	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp
;	COMDAT ??__Em_arPermanentHandle@@YAXXZ
text$di	SEGMENT
??__Em_arPermanentHandle@@YAXXZ PROC			; `dynamic initializer for 'm_arPermanentHandle'', COMDAT

; 16   : CArray<HANDLE, HANDLE>		m_arPermanentHandle;

  00000	68 00 00 00 00	 push	 OFFSET ??__Fm_arPermanentHandle@@YAXXZ ; `dynamic atexit destructor for 'm_arPermanentHandle''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__Em_arPermanentHandle@@YAXXZ ENDP			; `dynamic initializer for 'm_arPermanentHandle''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_G?$CArray@PAXPAX@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CArray@PAXPAX@@UAEPAXI@Z PROC			; CArray<void *,void *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 355  : {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 356  : 	ASSERT_VALID(this);
; 357  : 
; 358  : 	if (m_pData != NULL)

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CArray@PAXPAX@@6B@
  0000f	85 c0		 test	 eax, eax
  00011	74 09		 je	 SHORT $LN11@scalar

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )
; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00019	83 c4 04	 add	 esp, 4
$LN11@scalar:
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	a8 01		 test	 al, 1
  00021	74 1f		 je	 SHORT $LN20@scalar
  00023	a8 04		 test	 al, 4
  00025	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002d	83 c4 04	 add	 esp, 4
  00030	8b c6		 mov	 eax, esi
  00032	5e		 pop	 esi
  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
$LN3@scalar:
  00037	6a 14		 push	 20			; 00000014H
  00039	56		 push	 esi
  0003a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003f	83 c4 08	 add	 esp, 8
$LN20@scalar:
  00042	8b c6		 mov	 eax, esi
  00044	5e		 pop	 esi
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??_G?$CArray@PAXPAX@@UAEPAXI@Z ENDP			; CArray<void *,void *>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CArray@PAXPAX@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_pData$1$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CArray@PAXPAX@@UAEXAAVCArchive@@@Z PROC	; CArray<void *,void *>::Serialize, COMDAT
; _this$ = ecx

; 633  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00009	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0000c	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  0000f	f7 d0		 not	 eax
  00011	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 637  : 	if (ar.IsStoring())

  00013	74 0a		 je	 SHORT $LN2@Serialize

; 638  : 	{
; 639  : 		ar.WriteCount(m_nSize);

  00015	ff 77 08	 push	 DWORD PTR [edi+8]
  00018	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 640  : 	}

  0001d	eb 0f		 jmp	 SHORT $LN3@Serialize
$LN2@Serialize:

; 641  : 	else
; 642  : 	{
; 643  : 		DWORD_PTR nOldSize = ar.ReadCount();

  0001f	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount

; 644  : 		SetSize(nOldSize, -1);

  00024	6a ff		 push	 -1
  00026	50		 push	 eax
  00027	8b cf		 mov	 ecx, edi
  00029	e8 00 00 00 00	 call	 ?SetSize@?$CArray@PAXPAX@@QAEXHH@Z ; CArray<void *,void *>::SetSize
$LN3@Serialize:

; 645  : 	}
; 646  : 	SerializeElements<TYPE>(ar, m_pData, m_nSize);

  0002e	8b 77 08	 mov	 esi, DWORD PTR [edi+8]
  00031	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00034	89 4d fc	 mov	 DWORD PTR _pData$1$[ebp], ecx

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00037	85 f6		 test	 esi, esi
  00039	74 08		 je	 SHORT $LN8@Serialize
  0003b	85 c9		 test	 ecx, ecx
  0003d	0f 84 8c 00 00
	00		 je	 $LN40@Serialize
$LN8@Serialize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00043	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00046	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00049	f7 d0		 not	 eax
  0004b	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  0004d	74 36		 je	 SHORT $LN16@Serialize

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;
; 79   : 		pData = pElements;
; 80   : 		while( nElementsLeft > 0 )

  0004f	85 f6		 test	 esi, esi
  00051	74 29		 je	 SHORT $LN14@Serialize
$LL11@Serialize:

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00053	bb ff ff ff 1f	 mov	 ebx, 536870911		; 1fffffffH
  00058	3b f3		 cmp	 esi, ebx
  0005a	0f 42 de	 cmovb	 ebx, esi

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0005d	8d 3c 9d 00 00
	00 00		 lea	 edi, DWORD PTR [ebx*4]
  00064	57		 push	 edi
  00065	51		 push	 ecx
  00066	8b ca		 mov	 ecx, edx
  00068	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;
; 87   : 			pData += nElementsToWrite;

  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _pData$1$[ebp]
  00070	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00073	03 cf		 add	 ecx, edi
  00075	89 4d fc	 mov	 DWORD PTR _pData$1$[ebp], ecx
  00078	2b f3		 sub	 esi, ebx
  0007a	75 d7		 jne	 SHORT $LL11@Serialize
$LN14@Serialize:
  0007c	5f		 pop	 edi

; 647  : }

  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
$LN16@Serialize:

; 97   : 		while( nElementsLeft > 0 )

  00085	85 f6		 test	 esi, esi
  00087	74 f3		 je	 SHORT $LN14@Serialize
  00089	0f 1f 80 00 00
	00 00		 npad	 7
$LL13@Serialize:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00090	bf ff ff ff 1f	 mov	 edi, 536870911		; 1fffffffH
  00095	3b f7		 cmp	 esi, edi
  00097	0f 42 fe	 cmovb	 edi, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0009a	8d 1c bd 00 00
	00 00		 lea	 ebx, DWORD PTR [edi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  000a1	53		 push	 ebx
  000a2	51		 push	 ecx
  000a3	8b ca		 mov	 ecx, edx
  000a5	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  000aa	3b c3		 cmp	 eax, ebx
  000ac	75 18		 jne	 SHORT $LN30@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  000ae	8b 4d fc	 mov	 ecx, DWORD PTR _pData$1$[ebp]
  000b1	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;
; 104  : 			pData += nElementsToRead;

  000b4	03 cb		 add	 ecx, ebx
  000b6	89 4d fc	 mov	 DWORD PTR _pData$1$[ebp], ecx
  000b9	2b f7		 sub	 esi, edi
  000bb	75 d3		 jne	 SHORT $LL13@Serialize

; 647  : }

  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 04 00	 ret	 4
$LN30@Serialize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 402  : 		AfxThrowArchiveException(CArchiveException::endOfFile);

  000c6	6a 00		 push	 0
  000c8	6a 03		 push	 3
  000ca	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN40@Serialize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  000cf	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN38@Serialize:
  000d4	cc		 int	 3
?Serialize@?$CArray@PAXPAX@@UAEXAAVCArchive@@@Z ENDP	; CArray<void *,void *>::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CArray@PAXPAX@@UAE@XZ
_TEXT	SEGMENT
??1?$CArray@PAXPAX@@UAE@XZ PROC				; CArray<void *,void *>::~CArray<void *,void *>, COMDAT
; _this$ = ecx

; 356  : 	ASSERT_VALID(this);
; 357  : 
; 358  : 	if (m_pData != NULL)

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CArray@PAXPAX@@6B@
  00009	85 c0		 test	 eax, eax
  0000b	74 07		 je	 SHORT $LN5@CArray

; 359  : 	{
; 360  : 		for( int i = 0; i < m_nSize; i++ )
; 361  : 			(m_pData + i)->~TYPE();
; 362  : 		delete[] (BYTE*)m_pData;

  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00013	59		 pop	 ecx
$LN5@CArray:

; 363  : 	}
; 364  : }

  00014	c3		 ret	 0
??1?$CArray@PAXPAX@@UAE@XZ ENDP				; CArray<void *,void *>::~CArray<void *,void *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?SetAtGrow@?$CArray@PAXPAX@@QAEXHPAX@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CArray@PAXPAX@@QAEXHPAX@Z PROC		; CArray<void *,void *>::SetAtGrow, COMDAT
; _this$ = ecx

; 534  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 535  : 	ASSERT_VALID(this);
; 536  : 	ASSERT(nIndex >= 0);
; 537  : 
; 538  : 	if(nIndex < 0)

  00004	8b 75 08	 mov	 esi, DWORD PTR _nIndex$[ebp]
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	85 f6		 test	 esi, esi
  0000c	78 1f		 js	 SHORT $LN7@SetAtGrow

; 540  : 
; 541  : 	if (nIndex >= m_nSize)

  0000e	3b 77 08	 cmp	 esi, DWORD PTR [edi+8]
  00011	7c 0b		 jl	 SHORT $LN3@SetAtGrow

; 542  : 		SetSize(nIndex+1, -1);

  00013	6a ff		 push	 -1
  00015	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?SetSize@?$CArray@PAXPAX@@QAEXHH@Z ; CArray<void *,void *>::SetSize
$LN3@SetAtGrow:

; 543  : 	m_pData[nIndex] = newElement;

  0001e	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00021	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  00024	5f		 pop	 edi
  00025	89 04 b1	 mov	 DWORD PTR [ecx+esi*4], eax
  00028	5e		 pop	 esi

; 544  : }

  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
$LN7@SetAtGrow:

; 539  : 		AfxThrowInvalidArgException();

  0002d	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@SetAtGrow:
  00032	cc		 int	 3
?SetAtGrow@?$CArray@PAXPAX@@QAEXHPAX@Z ENDP		; CArray<void *,void *>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlchecked.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlchecked.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?SetSize@?$CArray@PAXPAX@@QAEXHH@Z
_TEXT	SEGMENT
__N$1$ = -4						; size = 4
__S2$1$ = 8						; size = 4
_nNewSize$ = 8						; size = 4
_pNewData$1$ = 12					; size = 4
_nGrowBy$ = 12						; size = 4
?SetSize@?$CArray@PAXPAX@@QAEXHH@Z PROC			; CArray<void *,void *>::SetSize, COMDAT
; _this$ = ecx

; 368  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi

; 369  : 	ASSERT_VALID(this);
; 370  : 	ASSERT(nNewSize >= 0);
; 371  : 
; 372  : 	if(nNewSize < 0 )

  00006	8b 75 08	 mov	 esi, DWORD PTR _nNewSize$[ebp]
  00009	8b d9		 mov	 ebx, ecx
  0000b	57		 push	 edi
  0000c	85 f6		 test	 esi, esi
  0000e	0f 88 c2 01 00
	00		 js	 $LN70@SetSize

; 373  : 		AfxThrowInvalidArgException();
; 374  : 
; 375  : 	if (nGrowBy >= 0)

  00014	8b 45 0c	 mov	 eax, DWORD PTR _nGrowBy$[ebp]
  00017	85 c0		 test	 eax, eax
  00019	78 03		 js	 SHORT $LN69@SetSize

; 376  : 		m_nGrowBy = nGrowBy;  // set new size

  0001b	89 43 10	 mov	 DWORD PTR [ebx+16], eax
$LN69@SetSize:

; 377  : 
; 378  : 	if (nNewSize == 0)

  0001e	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00021	85 f6		 test	 esi, esi
  00023	75 27		 jne	 SHORT $LN19@SetSize

; 379  : 	{
; 380  : 		// shrink to nothing
; 381  : 		if (m_pData != NULL)

  00025	85 c9		 test	 ecx, ecx
  00027	74 0c		 je	 SHORT $LN21@SetSize

; 382  : 		{
; 383  : 			for( int i = 0; i < m_nSize; i++ )
; 384  : 				(m_pData + i)->~TYPE();
; 385  : 			delete[] (BYTE*)m_pData;

  00029	51		 push	 ecx
  0002a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0002f	83 c4 04	 add	 esp, 4

; 386  : 			m_pData = NULL;

  00032	89 73 04	 mov	 DWORD PTR [ebx+4], esi
$LN21@SetSize:

; 472  : 		m_nSize = nNewSize;
; 473  : 		m_nMaxSize = nNewMax;
; 474  : 	}
; 475  : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	c7 43 0c 00 00
	00 00		 mov	 DWORD PTR [ebx+12], 0
  0003e	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 08 00	 ret	 8
$LN19@SetSize:

; 387  : 		}
; 388  : 		m_nSize = m_nMaxSize = 0;
; 389  : 	}
; 390  : 	else if (m_pData == NULL)

  0004c	85 c9		 test	 ecx, ecx
  0004e	75 36		 jne	 SHORT $LN22@SetSize

; 391  : 	{
; 392  : 		// create buffer big enough to hold number of requested elements or
; 393  : 		// m_nGrowBy elements, whichever is larger.
; 394  : #ifdef SIZE_T_MAX
; 395  : 		ASSERT(nNewSize <= SIZE_T_MAX/sizeof(TYPE));    // no overflow
; 396  : #endif
; 397  : 		size_t nAllocSize = __max(nNewSize, m_nGrowBy);

  00050	8b 7b 10	 mov	 edi, DWORD PTR [ebx+16]
  00053	3b f7		 cmp	 esi, edi
  00055	0f 4f fe	 cmovg	 edi, esi

; 398  : 		m_pData = (TYPE*) new BYTE[(size_t)nAllocSize * sizeof(TYPE)];

  00058	8d 34 bd 00 00
	00 00		 lea	 esi, DWORD PTR [edi*4]
  0005f	56		 push	 esi
  00060	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]

; 399  : 		memset((void*)m_pData, 0, (size_t)nAllocSize * sizeof(TYPE));

  00065	56		 push	 esi
  00066	6a 00		 push	 0
  00068	50		 push	 eax
  00069	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  0006c	e8 00 00 00 00	 call	 _memset

; 400  : 		for( int i = 0; i < nNewSize; i++ )
; 401  : #pragma push_macro("new")
; 402  : #undef new
; 403  : 			::new( (void*)( m_pData + i ) ) TYPE;
; 404  : #pragma pop_macro("new")
; 405  : 		m_nSize = nNewSize;

  00071	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00074	83 c4 10	 add	 esp, 16			; 00000010H

; 472  : 		m_nSize = nNewSize;
; 473  : 		m_nMaxSize = nNewMax;
; 474  : 	}
; 475  : }

  00077	89 7b 0c	 mov	 DWORD PTR [ebx+12], edi
  0007a	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  0007d	5f		 pop	 edi
  0007e	5e		 pop	 esi
  0007f	5b		 pop	 ebx
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 08 00	 ret	 8
$LN22@SetSize:

; 406  : 		m_nMaxSize = nAllocSize;
; 407  : 	}
; 408  : 	else if (nNewSize <= m_nMaxSize)

  00086	8b 7b 0c	 mov	 edi, DWORD PTR [ebx+12]
  00089	3b f7		 cmp	 esi, edi
  0008b	7f 29		 jg	 SHORT $LN24@SetSize

; 409  : 	{
; 410  : 		// it fits
; 411  : 		if (nNewSize > m_nSize)

  0008d	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00090	3b f2		 cmp	 esi, edx
  00092	7e 16		 jle	 SHORT $LN26@SetSize

; 412  : 		{
; 413  : 			// initialize the new elements
; 414  : 			memset((void*)(m_pData + m_nSize), 0, (size_t)(nNewSize-m_nSize) * sizeof(TYPE));

  00094	8b c6		 mov	 eax, esi
  00096	2b c2		 sub	 eax, edx
  00098	c1 e0 02	 shl	 eax, 2
  0009b	50		 push	 eax
  0009c	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  0009f	6a 00		 push	 0
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 _memset
  000a7	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN26@SetSize:

; 415  : 			for( int i = 0; i < nNewSize-m_nSize; i++ )
; 416  : #pragma push_macro("new")
; 417  : #undef new
; 418  : 				::new( (void*)( m_pData + m_nSize + i ) ) TYPE;
; 419  : #pragma pop_macro("new")
; 420  : 		}
; 421  : 		else if (m_nSize > nNewSize)
; 422  : 		{
; 423  : 			// destroy the old elements
; 424  : 			for( int i = 0; i < m_nSize-nNewSize; i++ )
; 425  : 				(m_pData + nNewSize + i)->~TYPE();
; 426  : 		}
; 427  : 		m_nSize = nNewSize;

  000aa	5f		 pop	 edi
  000ab	89 73 08	 mov	 DWORD PTR [ebx+8], esi

; 472  : 		m_nSize = nNewSize;
; 473  : 		m_nMaxSize = nNewMax;
; 474  : 	}
; 475  : }

  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 08 00	 ret	 8
$LN24@SetSize:

; 428  : 	}
; 429  : 	else
; 430  : 	{
; 431  : 		// otherwise, grow array
; 432  : 		nGrowBy = m_nGrowBy;

  000b6	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]

; 433  : 		if (nGrowBy == 0)

  000b9	85 c0		 test	 eax, eax
  000bb	75 22		 jne	 SHORT $LN37@SetSize

; 434  : 		{
; 435  : 			// heuristically determine growth when nGrowBy == 0
; 436  : 			//  (this avoids heap fragmentation in many situations)
; 437  : 			nGrowBy = m_nSize / 8;

  000bd	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  000c0	99		 cdq
  000c1	83 e2 07	 and	 edx, 7
  000c4	03 c2		 add	 eax, edx
  000c6	c1 f8 03	 sar	 eax, 3

; 438  : 			nGrowBy = (nGrowBy < 4) ? 4 : ((nGrowBy > 1024) ? 1024 : nGrowBy);

  000c9	83 f8 04	 cmp	 eax, 4
  000cc	7d 07		 jge	 SHORT $LN36@SetSize
  000ce	b8 04 00 00 00	 mov	 eax, 4
  000d3	eb 0a		 jmp	 SHORT $LN37@SetSize
$LN36@SetSize:
  000d5	b9 00 04 00 00	 mov	 ecx, 1024		; 00000400H
  000da	3b c1		 cmp	 eax, ecx
  000dc	0f 4f c1	 cmovg	 eax, ecx
$LN37@SetSize:

; 439  : 		}
; 440  : 		INT_PTR nNewMax;
; 441  : 		if (nNewSize < m_nMaxSize + nGrowBy)

  000df	03 f8		 add	 edi, eax
  000e1	3b f7		 cmp	 esi, edi
  000e3	7d 0b		 jge	 SHORT $LN30@SetSize

; 445  : 
; 446  : 		ASSERT(nNewMax >= m_nMaxSize);  // no wrap around
; 447  : 
; 448  : 		if(nNewMax  < m_nMaxSize)

  000e5	3b 7b 0c	 cmp	 edi, DWORD PTR [ebx+12]
  000e8	0f 8c e8 00 00
	00		 jl	 $LN70@SetSize
  000ee	eb 02		 jmp	 SHORT $LN32@SetSize
$LN30@SetSize:

; 442  : 			nNewMax = m_nMaxSize + nGrowBy;  // granularity
; 443  : 		else
; 444  : 			nNewMax = nNewSize;  // no slush

  000f0	8b fe		 mov	 edi, esi
$LN32@SetSize:

; 450  : 
; 451  : #ifdef SIZE_T_MAX
; 452  : 		ASSERT(nNewMax <= SIZE_T_MAX/sizeof(TYPE)); // no overflow
; 453  : #endif
; 454  : 		TYPE* pNewData = (TYPE*) new BYTE[(size_t)nNewMax * sizeof(TYPE)];

  000f2	8d 04 bd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*4]
  000f9	50		 push	 eax
  000fa	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]

; 455  : 
; 456  : 		// copy new data from old
; 457  : 		::ATL::Checked::memcpy_s(pNewData, (size_t)nNewMax * sizeof(TYPE),

  000ff	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  00102	8b c8		 mov	 ecx, eax
  00104	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00107	83 c4 04	 add	 esp, 4
  0010a	c1 e0 02	 shl	 eax, 2
  0010d	89 4d 0c	 mov	 DWORD PTR _pNewData$1$[ebp], ecx
  00110	89 45 fc	 mov	 DWORD PTR __N$1$[ebp], eax
  00113	89 55 08	 mov	 DWORD PTR __S2$1$[ebp], edx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h

; 46   :         if (_SourceSize == 0)

  00116	85 c0		 test	 eax, eax
  00118	74 76		 je	 SHORT $LN74@SetSize

; 47   :         {
; 48   :             return 0;
; 49   :         }
; 50   : 
; 51   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  0011a	85 c9		 test	 ecx, ecx
  0011c	75 56		 jne	 SHORT $LN42@SetSize
$LN73@SetSize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlchecked.h

; 69   : 	ATLMFC_CRT_ERRORCHECK(::memcpy_s(_S1, _S1max, _S2, _N));

  0011e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___errno
  00124	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  0012a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter_noinfo
$LN46@SetSize:
  00130	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
$LN40@SetSize:
  00135	50		 push	 eax
  00136	e8 00 00 00 00	 call	 ?AfxCrtErrorCheck@@YAHH@Z ; AfxCrtErrorCheck
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 462  : 		memset((void*)(pNewData + m_nSize), 0, (size_t)(nNewSize-m_nSize) * sizeof(TYPE));

  0013b	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0013e	8b c6		 mov	 eax, esi
  00140	2b c1		 sub	 eax, ecx
  00142	c1 e0 02	 shl	 eax, 2
  00145	50		 push	 eax
  00146	8b 45 0c	 mov	 eax, DWORD PTR _pNewData$1$[ebp]
  00149	6a 00		 push	 0
  0014b	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  0014e	50		 push	 eax
  0014f	e8 00 00 00 00	 call	 _memset

; 463  : 		for( int i = 0; i < nNewSize-m_nSize; i++ )
; 464  : #pragma push_macro("new")
; 465  : #undef new
; 466  : 			::new( (void*)( pNewData + m_nSize + i ) ) TYPE;
; 467  : #pragma pop_macro("new")
; 468  : 
; 469  : 		// get rid of old stuff (note: no destructors called)
; 470  : 		delete[] (BYTE*)m_pData;

  00154	ff 73 04	 push	 DWORD PTR [ebx+4]
  00157	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]

; 471  : 		m_pData = pNewData;

  0015c	8b 45 0c	 mov	 eax, DWORD PTR _pNewData$1$[ebp]
  0015f	83 c4 14	 add	 esp, 20			; 00000014H

; 472  : 		m_nSize = nNewSize;
; 473  : 		m_nMaxSize = nNewMax;
; 474  : 	}
; 475  : }

  00162	89 7b 0c	 mov	 DWORD PTR [ebx+12], edi
  00165	89 73 08	 mov	 DWORD PTR [ebx+8], esi
  00168	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  0016b	5f		 pop	 edi
  0016c	5e		 pop	 esi
  0016d	5b		 pop	 ebx
  0016e	8b e5		 mov	 esp, ebp
  00170	5d		 pop	 ebp
  00171	c2 08 00	 ret	 8
$LN42@SetSize:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h

; 52   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  00174	85 d2		 test	 edx, edx
  00176	8d 14 bd 00 00
	00 00		 lea	 edx, DWORD PTR [edi*4]
  0017d	74 15		 je	 SHORT $LN44@SetSize
  0017f	3b d0		 cmp	 edx, eax
  00181	72 11		 jb	 SHORT $LN44@SetSize

; 58   : 
; 59   :             // Unreachable, but required to suppress /analyze warnings:
; 60   :             return EINVAL;
; 61   :         }
; 62   :         memcpy(_Destination, _Source, _SourceSize);

  00183	50		 push	 eax
  00184	ff 75 08	 push	 DWORD PTR __S2$1$[ebp]
  00187	51		 push	 ecx
  00188	e8 00 00 00 00	 call	 _memcpy
  0018d	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN74@SetSize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlchecked.h

; 69   : 	ATLMFC_CRT_ERRORCHECK(::memcpy_s(_S1, _S1max, _S2, _N));

  00190	33 c0		 xor	 eax, eax
  00192	eb a1		 jmp	 SHORT $LN40@SetSize
$LN44@SetSize:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_memcpy_s.h

; 54   :             memset(_Destination, 0, _DestinationSize);

  00194	52		 push	 edx
  00195	6a 00		 push	 0
  00197	51		 push	 ecx
  00198	e8 00 00 00 00	 call	 _memset
  0019d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 55   : 
; 56   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);

  001a0	83 7d 08 00	 cmp	 DWORD PTR __S2$1$[ebp], 0
  001a4	0f 84 74 ff ff
	ff		 je	 $LN73@SetSize

; 57   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);

  001aa	8d 04 bd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*4]
  001b1	3b 45 fc	 cmp	 eax, DWORD PTR __N$1$[ebp]
  001b4	0f 83 76 ff ff
	ff		 jae	 $LN46@SetSize
  001ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___errno
  001c0	c7 00 22 00 00
	00		 mov	 DWORD PTR [eax], 34	; 00000022H
  001c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter_noinfo
  001cc	b8 22 00 00 00	 mov	 eax, 34			; 00000022H
  001d1	e9 5f ff ff ff	 jmp	 $LN40@SetSize
$LN70@SetSize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 449  : 			AfxThrowInvalidArgException();

  001d6	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN72@SetSize:
  001db	cc		 int	 3
?SetSize@?$CArray@PAXPAX@@QAEXHH@Z ENDP			; CArray<void *,void *>::SetSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CArray@PAXPAX@@QAE@XZ
_TEXT	SEGMENT
??0?$CArray@PAXPAX@@QAE@XZ PROC				; CArray<void *,void *>::CArray<void *,void *>, COMDAT
; _this$ = ecx

; 348  : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CArray@PAXPAX@@6B@

; 349  : 	m_pData = NULL;
; 350  : 	m_nSize = m_nMaxSize = m_nGrowBy = 0;
; 351  : }

  00006	8b c1		 mov	 eax, ecx
  00008	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0000f	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00016	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  0001d	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00024	c3		 ret	 0
??0?$CArray@PAXPAX@@QAE@XZ ENDP				; CArray<void *,void *>::CArray<void *,void *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\IBaseDefine.h
;	COMDAT ??__ERMSG_SETPCTRDATA@@YAXXZ
text$di	SEGMENT
??__ERMSG_SETPCTRDATA@@YAXXZ PROC			; `dynamic initializer for 'RMSG_SETPCTRDATA'', COMDAT

; 172  : const UINT RMSG_SETPCTRDATA = ::RegisterWindowMessage("RMSG_SETPCTRDATA");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@JPACFCL@RMSG_SETPCTRDATA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_SETPCTRDATA@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_SETPCTRDATA@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_SETPCTRDATA''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\IBaseDefine.h
;	COMDAT ??__ERMSG_GETPCTRDATA@@YAXXZ
text$di	SEGMENT
??__ERMSG_GETPCTRDATA@@YAXXZ PROC			; `dynamic initializer for 'RMSG_GETPCTRDATA'', COMDAT

; 171  : const UINT RMSG_GETPCTRDATA = ::RegisterWindowMessage("RMSG_GETPCTRDATA");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GOOPDKI@RMSG_GETPCTRDATA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_GETPCTRDATA@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_GETPCTRDATA@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_GETPCTRDATA''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\IBaseDefine.h
;	COMDAT ??__ERMSG_INTERFACE@@YAXXZ
text$di	SEGMENT
??__ERMSG_INTERFACE@@YAXXZ PROC				; `dynamic initializer for 'RMSG_INTERFACE'', COMDAT

; 170  : const UINT RMSG_INTERFACE = ::RegisterWindowMessage("RMSG_INTERFACE");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BKKCOCLK@RMSG_INTERFACE@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_INTERFACE@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_INTERFACE@@YAXXZ ENDP				; `dynamic initializer for 'RMSG_INTERFACE''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtls_.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtls_.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\winhand_.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp
;	COMDAT ?RemovePermanentHandle@@YAXPAX@Z
_TEXT	SEGMENT
_h$ = 8							; size = 4
?RemovePermanentHandle@@YAXPAX@Z PROC			; RemovePermanentHandle, COMDAT

; 91   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 92   : // 	HWND hMainWnd;// = AfxGetMainWnd()->GetSafeHwnd();
; 93   : // 	AfxGetHanaroMainWnd(hMainWnd);
; 94   : // 
; 95   : // 	IMainExInfoManager* pMainEx = (IMainExInfoManager*)::SendMessage(hMainWnd, RMSG_INTERFACE, 22, 0);
; 96   : // 	if(!pMainEx)
; 97   : // 		return;
; 98   : // 
; 99   : // 	COleVariant* pVar = pMainEx->GetData(4);
; 100  : // 	if(!pVar)
; 101  : // 		return;
; 102  : // 
; 103  : // 	AFX_MODULE_STATE* pState = (AFX_MODULE_STATE*)pVar->lVal;
; 104  : // 	if(!pState)
; 105  : // 		return;
; 106  : 
; 107  : 	AFX_MODULE_STATE* pState = AfxGetAppModuleState();

  00003	e8 00 00 00 00	 call	 ?AfxGetAppModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetAppModuleState

; 108  : 	if(!pState)		return;

  00008	85 c0		 test	 eax, eax
  0000a	74 2a		 je	 SHORT $LN3@RemovePerm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtls_.h

; 179  : 		TYPE* pData = (TYPE*)CThreadLocalObject::GetData(&CreateObject);

  0000c	68 00 00 00 00	 push	 OFFSET ?CreateObject@?$CThreadLocal@VAFX_MODULE_THREAD_STATE@@@@SGPAVCNoTrackObject@@XZ ; CThreadLocal<AFX_MODULE_THREAD_STATE>::CreateObject
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp

; 110  : 	AFX_MODULE_THREAD_STATE* pThread = pState->m_thread.GetData();

  00011	8d 88 90 00 00
	00		 lea	 ecx, DWORD PTR [eax+144]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtls_.h

; 179  : 		TYPE* pData = (TYPE*)CThreadLocalObject::GetData(&CreateObject);

  00017	e8 00 00 00 00	 call	 ?GetData@CThreadLocalObject@@QAEPAVCNoTrackObject@@P6GPAV2@XZ@Z ; CThreadLocalObject::GetData

; 180  : 		ENSURE(pData != NULL);

  0001c	85 c0		 test	 eax, eax
  0001e	0f 84 00 00 00
	00		 je	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp

; 111  : 	if(pThread && pThread->m_pmapHWND)

  00024	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00027	85 c9		 test	 ecx, ecx
  00029	74 0b		 je	 SHORT $LN3@RemovePerm
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\winhand_.h

; 109  : 	m_permanentMap.RemoveKey((LPVOID)h);

  0002b	ff 75 08	 push	 DWORD PTR _h$[ebp]
  0002e	83 c1 18	 add	 ecx, 24			; 00000018H
  00031	e8 00 00 00 00	 call	 ?RemoveKey@CMapPtrToPtr@@QAEHPAX@Z ; CMapPtrToPtr::RemoveKey
$LN3@RemovePerm:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp

; 113  : }

  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?RemovePermanentHandle@@YAXPAX@Z ENDP			; RemovePermanentHandle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtls_.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtls_.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\winhand_.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp
;	COMDAT ?SetPermanentHandle@@YAXPAXPAVCObject@@@Z
_TEXT	SEGMENT
_aDebug$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
_h$ = 8							; size = 4
_permOb$ = 12						; size = 4
?SetPermanentHandle@@YAXPAXPAVCObject@@@Z PROC		; SetPermanentHandle, COMDAT

; 59   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 0c	 mov	 ebx, DWORD PTR _permOb$[ebp]
  00017	56		 push	 esi
  00018	8b 75 08	 mov	 esi, DWORD PTR _h$[ebp]

; 60   : // 	HWND hMainWnd;// = AfxGetMainWnd()->GetSafeHwnd();
; 61   : // 	AfxGetHanaroMainWnd(hMainWnd);
; 62   : // 
; 63   : // 	IMainExInfoManager* pMainEx = (IMainExInfoManager*)::SendMessage(hMainWnd, RMSG_INTERFACE, 22, 0);
; 64   : // 	if(!pMainEx)
; 65   : // 		return;
; 66   : // 
; 67   : // 	COleVariant* pVar = pMainEx->GetData(4);
; 68   : // 	if(!pVar)
; 69   : // 		return;
; 70   : // 
; 71   : // 	AFX_MODULE_STATE* pState = (AFX_MODULE_STATE*)pVar->lVal;
; 72   : // 	if(!pState)
; 73   : // 		return;
; 74   : 
; 75   : 	AFX_MODULE_STATE* pState = AfxGetAppModuleState();

  0001b	e8 00 00 00 00	 call	 ?AfxGetAppModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetAppModuleState

; 76   : 	if(!pState)		return;

  00020	85 c0		 test	 eax, eax
  00022	0f 84 85 00 00
	00		 je	 $LN3@SetPermane
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtls_.h

; 179  : 		TYPE* pData = (TYPE*)CThreadLocalObject::GetData(&CreateObject);

  00028	57		 push	 edi
  00029	68 00 00 00 00	 push	 OFFSET ?CreateObject@?$CThreadLocal@VAFX_MODULE_THREAD_STATE@@@@SGPAVCNoTrackObject@@XZ ; CThreadLocal<AFX_MODULE_THREAD_STATE>::CreateObject
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp

; 78   : 	AFX_MODULE_THREAD_STATE* pThread = pState->m_thread.GetData();

  0002e	8d 88 90 00 00
	00		 lea	 ecx, DWORD PTR [eax+144]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtls_.h

; 179  : 		TYPE* pData = (TYPE*)CThreadLocalObject::GetData(&CreateObject);

  00034	e8 00 00 00 00	 call	 ?GetData@CThreadLocalObject@@QAEPAVCNoTrackObject@@P6GPAV2@XZ@Z ; CThreadLocalObject::GetData
  00039	8b f8		 mov	 edi, eax

; 180  : 		ENSURE(pData != NULL);

  0003b	85 ff		 test	 edi, edi
  0003d	74 7e		 je	 SHORT $LN21@SetPermane
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp

; 79   : 	char aDebug[MAX_PATH]={0,};

  0003f	68 04 01 00 00	 push	 260			; 00000104H
  00044	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _aDebug$[ebp]
  0004a	6a 00		 push	 0
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 _memset

; 80   : 	if(pThread && pThread->m_pmapHWND)

  00052	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00055	83 c4 0c	 add	 esp, 12			; 0000000cH
  00058	85 c9		 test	 ecx, ecx
  0005a	74 50		 je	 SHORT $LN22@SetPermane
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\winhand_.h

; 103  : 	{ m_permanentMap[(LPVOID)h] = permOb; }

  0005c	56		 push	 esi
  0005d	83 c1 18	 add	 ecx, 24			; 00000018H
  00060	e8 00 00 00 00	 call	 ??ACMapPtrToPtr@@QAEAAPAXPAX@Z ; CMapPtrToPtr::operator[]
  00065	89 18		 mov	 DWORD PTR [eax], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 333  : 	{ INT_PTR nIndex = m_nSize;

  00067	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?m_arPermanentHandle@@3V?$CArray@PAXPAX@@A+8

; 538  : 	if(nIndex < 0)

  0006d	85 ff		 test	 edi, edi
  0006f	78 4c		 js	 SHORT $LN21@SetPermane

; 540  : 
; 541  : 	if (nIndex >= m_nSize)
; 542  : 		SetSize(nIndex+1, -1);

  00071	6a ff		 push	 -1
  00073	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  00076	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_arPermanentHandle@@3V?$CArray@PAXPAX@@A ; m_arPermanentHandle
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ?SetSize@?$CArray@PAXPAX@@QAEXHH@Z ; CArray<void *,void *>::SetSize

; 543  : 	m_pData[nIndex] = newElement;

  00081	a1 04 00 00 00	 mov	 eax, DWORD PTR ?m_arPermanentHandle@@3V?$CArray@PAXPAX@@A+4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp

; 85   : 		sprintf(aDebug, "SetPermanentHandle %08X=%0X\n", permOb, h);

  00086	56		 push	 esi
  00087	53		 push	 ebx
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@HFGHFFIN@SetPermanentHandle?5?$CF08X?$DN?$CF0X?6@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 543  : 	m_pData[nIndex] = newElement;

  0008d	89 34 b8	 mov	 DWORD PTR [eax+edi*4], esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp

; 85   : 		sprintf(aDebug, "SetPermanentHandle %08X=%0X\n", permOb, h);

  00090	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _aDebug$[ebp]
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 _sprintf
  0009c	83 c4 10	 add	 esp, 16			; 00000010H

; 86   : 		OutputDebugString(aDebug);

  0009f	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _aDebug$[ebp]
  000a5	50		 push	 eax
  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OutputDebugStringA@4
$LN22@SetPermane:
  000ac	5f		 pop	 edi
$LN3@SetPermane:

; 88   : }

  000ad	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b0	5e		 pop	 esi
  000b1	33 cd		 xor	 ecx, ebp
  000b3	5b		 pop	 ebx
  000b4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c3		 ret	 0
$LN21@SetPermane:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 539  : 		AfxThrowInvalidArgException();

  000bd	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN23@SetPermane:
  000c2	cc		 int	 3
?SetPermanentHandle@@YAXPAXPAVCObject@@@Z ENDP		; SetPermanentHandle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp
;	COMDAT ?GetParamterValue@@YAXPBDAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@Z
_TEXT	SEGMENT
_strParam$ = -20					; size = 4
_strKey$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_lpszKey$ = 8						; size = 4
_strValue$ = 12						; size = 4
_strParamter$ = 16					; size = 4
?GetParamterValue@@YAXPBDAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@Z PROC ; GetParamterValue, COMDAT

; 37   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetParamterValue@@YAXPBDAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 38   : 	int nIndex = 0;	
; 39   : 	CString strParam, strKey;

  00027	8d 4d ec	 lea	 ecx, DWORD PTR _strParam$[ebp]
  0002a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00031	33 f6		 xor	 esi, esi
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00039	8d 4d f0	 lea	 ecx, DWORD PTR _strKey$[ebp]
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 41   : 	while(AfxExtractSubString(strParam, strParamter, nIndex++, _T(';')))

  00042	6a 3b		 push	 59			; 0000003bH
  00044	56		 push	 esi
  00045	ff 75 10	 push	 DWORD PTR _strParamter$[ebp]
  00048	8d 45 ec	 lea	 eax, DWORD PTR _strParam$[ebp]
  0004b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ?AfxExtractSubString@@YGHAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDHD@Z ; AfxExtractSubString
  00055	85 c0		 test	 eax, eax
  00057	74 5c		 je	 SHORT $LN37@GetParamte
  00059	8b 7d 08	 mov	 edi, DWORD PTR _lpszKey$[ebp]
  0005c	0f 1f 40 00	 npad	 4
$LL2@GetParamte:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 533  : 		return( GetLength() == 0 );

  00060	8b 45 ec	 mov	 eax, DWORD PTR _strParam$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp

; 41   : 	while(AfxExtractSubString(strParam, strParamter, nIndex++, _T(';')))

  00063	46		 inc	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 533  : 		return( GetLength() == 0 );

  00064	83 78 f4 00	 cmp	 DWORD PTR [eax-12], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp

; 43   : 		if(strParam.IsEmpty())

  00068	74 27		 je	 SHORT $LN6@GetParamte

; 44   : 			continue;
; 45   : 		
; 46   : 		AfxExtractSubString(strKey, strParamter, 0, _T('='));

  0006a	6a 3d		 push	 61			; 0000003dH
  0006c	6a 00		 push	 0
  0006e	ff 75 10	 push	 DWORD PTR _strParamter$[ebp]
  00071	8d 45 f0	 lea	 eax, DWORD PTR _strKey$[ebp]
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ?AfxExtractSubString@@YGHAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDHD@Z ; AfxExtractSubString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 533  : 		return( GetLength() == 0 );

  0007a	8b 45 f0	 mov	 eax, DWORD PTR _strKey$[ebp]
  0007d	83 78 f4 00	 cmp	 DWORD PTR [eax-12], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp

; 47   : 		if(strKey.IsEmpty())

  00081	74 0e		 je	 SHORT $LN6@GetParamte

; 48   : 			continue;
; 49   : 		
; 50   : 		if(!strKey.CompareNoCase(lpszKey))

  00083	57		 push	 edi
  00084	8d 4d f0	 lea	 ecx, DWORD PTR _strKey$[ebp]
  00087	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CompareNoCase@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
  0008d	85 c0		 test	 eax, eax
  0008f	74 15		 je	 SHORT $LN33@GetParamte
$LN6@GetParamte:

; 41   : 	while(AfxExtractSubString(strParam, strParamter, nIndex++, _T(';')))

  00091	6a 3b		 push	 59			; 0000003bH
  00093	56		 push	 esi
  00094	ff 75 10	 push	 DWORD PTR _strParamter$[ebp]
  00097	8d 45 ec	 lea	 eax, DWORD PTR _strParam$[ebp]
  0009a	50		 push	 eax
  0009b	e8 00 00 00 00	 call	 ?AfxExtractSubString@@YGHAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDHD@Z ; AfxExtractSubString
  000a0	85 c0		 test	 eax, eax
  000a2	75 bc		 jne	 SHORT $LL2@GetParamte
  000a4	eb 0f		 jmp	 SHORT $LN37@GetParamte
$LN33@GetParamte:

; 51   : 		{
; 52   : 			AfxExtractSubString(strValue, strParamter, 1, _T('='));

  000a6	6a 3d		 push	 61			; 0000003dH
  000a8	6a 01		 push	 1
  000aa	ff 75 10	 push	 DWORD PTR _strParamter$[ebp]
  000ad	ff 75 0c	 push	 DWORD PTR _strValue$[ebp]
  000b0	e8 00 00 00 00	 call	 ?AfxExtractSubString@@YGHAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDHD@Z ; AfxExtractSubString
$LN37@GetParamte:

; 53   : 			return;
; 54   : 		}
; 55   : 	}
; 56   : }

  000b5	8d 4d f0	 lea	 ecx, DWORD PTR _strKey$[ebp]
  000b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000be	8d 4d ec	 lea	 ecx, DWORD PTR _strParam$[ebp]
  000c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000c7	8d 4d 10	 lea	 ecx, DWORD PTR _strParamter$[ebp]
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000d0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000da	59		 pop	 ecx
  000db	5f		 pop	 edi
  000dc	5e		 pop	 esi
  000dd	8b e5		 mov	 esp, ebp
  000df	5d		 pop	 ebp
  000e0	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetParamterValue@@YAXPBDAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@Z$0:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strParamter$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?GetParamterValue@@YAXPBDAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@Z$1:
  00009	8d 4d ec	 lea	 ecx, DWORD PTR _strParam$[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?GetParamterValue@@YAXPBDAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@Z$2:
  00012	8d 4d f0	 lea	 ecx, DWORD PTR _strKey$[ebp]
  00015	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
  0001f	cc		 int	 3
__ehhandler$?GetParamterValue@@YAXPBDAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@Z:
  00020	90		 npad	 1
  00021	90		 npad	 1
  00022	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00026	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00029	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0002c	33 c8		 xor	 ecx, eax
  0002e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00033	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetParamterValue@@YAXPBDAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@Z
  00038	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetParamterValue@@YAXPBDAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@Z ENDP ; GetParamterValue
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp
;	COMDAT ?CompareParamter@@YAHPADV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_strParam$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_lpszCompare$ = 8					; size = 4
_strParamter$ = 12					; size = 4
?CompareParamter@@YAHPADV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC ; CompareParamter, COMDAT

; 19   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CompareParamter@@YAHPADV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 20   : 	int nIndex = 0;
; 21   : 	CString strParam;

  00025	8d 4d f0	 lea	 ecx, DWORD PTR _strParam$[ebp]
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002f	33 f6		 xor	 esi, esi
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 23   : 	while(AfxExtractSubString(strParam, strParamter, nIndex++, _T(';')))

  00037	6a 3b		 push	 59			; 0000003bH
  00039	56		 push	 esi
  0003a	ff 75 0c	 push	 DWORD PTR _strParamter$[ebp]
  0003d	8d 45 f0	 lea	 eax, DWORD PTR _strParam$[ebp]
  00040	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?AfxExtractSubString@@YGHAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDHD@Z ; AfxExtractSubString
  0004a	85 c0		 test	 eax, eax
  0004c	74 41		 je	 SHORT $LN24@ComparePar
  0004e	8b 7d 08	 mov	 edi, DWORD PTR _lpszCompare$[ebp]
$LL2@ComparePar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 533  : 		return( GetLength() == 0 );

  00051	8b 45 f0	 mov	 eax, DWORD PTR _strParam$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp

; 23   : 	while(AfxExtractSubString(strParam, strParamter, nIndex++, _T(';')))

  00054	46		 inc	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 533  : 		return( GetLength() == 0 );

  00055	83 78 f4 00	 cmp	 DWORD PTR [eax-12], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp

; 25   : 		if(strParam.IsEmpty())

  00059	74 21		 je	 SHORT $LN5@ComparePar

; 26   : 			continue;
; 27   : 
; 28   : 		strParam.Replace(_T(" "), _T(""));

  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_01CLKCMJKC@?5@
  00065	8d 4d f0	 lea	 ecx, DWORD PTR _strParam$[ebp]
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Replace@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPBD0@Z

; 29   : 		if(!strParam.CompareNoCase(lpszCompare))

  0006e	57		 push	 edi
  0006f	8d 4d f0	 lea	 ecx, DWORD PTR _strParam$[ebp]
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CompareNoCase@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
  00078	85 c0		 test	 eax, eax
  0007a	74 3a		 je	 SHORT $LN20@ComparePar
$LN5@ComparePar:

; 23   : 	while(AfxExtractSubString(strParam, strParamter, nIndex++, _T(';')))

  0007c	6a 3b		 push	 59			; 0000003bH
  0007e	56		 push	 esi
  0007f	ff 75 0c	 push	 DWORD PTR _strParamter$[ebp]
  00082	8d 45 f0	 lea	 eax, DWORD PTR _strParam$[ebp]
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ?AfxExtractSubString@@YGHAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDHD@Z ; AfxExtractSubString
  0008b	85 c0		 test	 eax, eax
  0008d	75 c2		 jne	 SHORT $LL2@ComparePar
$LN24@ComparePar:

; 30   : 			return TRUE;
; 31   : 	}
; 32   : 
; 33   : 	return FALSE;

  0008f	33 f6		 xor	 esi, esi
$LN9@ComparePar:
  00091	8d 4d f0	 lea	 ecx, DWORD PTR _strParam$[ebp]
  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0009a	8d 4d 0c	 lea	 ecx, DWORD PTR _strParamter$[ebp]
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000a3	8b c6		 mov	 eax, esi

; 34   : }

  000a5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000af	59		 pop	 ecx
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	8b e5		 mov	 esp, ebp
  000b4	5d		 pop	 ebp
  000b5	c3		 ret	 0
$LN20@ComparePar:
  000b6	be 01 00 00 00	 mov	 esi, 1
  000bb	eb d4		 jmp	 SHORT $LN9@ComparePar
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CompareParamter@@YAHPADV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$0:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strParamter$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?CompareParamter@@YAHPADV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$1:
  00009	8d 4d f0	 lea	 ecx, DWORD PTR _strParam$[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?CompareParamter@@YAHPADV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CompareParamter@@YAHPADV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CompareParamter@@YAHPADV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CompareParamter
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\ExCommonHeader.h
;	COMDAT ??__ERMSG_LSHAREDCHANGED@@YAXXZ
text$di	SEGMENT
??__ERMSG_LSHAREDCHANGED@@YAXXZ PROC			; `dynamic initializer for 'RMSG_LSHAREDCHANGED'', COMDAT

; 116  : const UINT RMSG_LSHAREDCHANGED = ::RegisterWindowMessage("RMSG_LSHAREDCHANGED");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@IEJDDJPC@RMSG_LSHAREDCHANGED@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_LSHAREDCHANGED@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_LSHAREDCHANGED@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_LSHAREDCHANGED''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\ExCommonHeader.h
;	COMDAT ??__ERMSG_ENDSCROLLPOS@@YAXXZ
text$di	SEGMENT
??__ERMSG_ENDSCROLLPOS@@YAXXZ PROC			; `dynamic initializer for 'RMSG_ENDSCROLLPOS'', COMDAT

; 114  : const UINT RMSG_ENDSCROLLPOS = ::RegisterWindowMessage(_T("RMSG_ENDSCROLLPOS"));

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@EMMLKNDL@RMSG_ENDSCROLLPOS@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_ENDSCROLLPOS@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_ENDSCROLLPOS@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_ENDSCROLLPOS''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\ExCommonHeader.h
;	COMDAT ??__ERMSG_LBTNDOWN@@YAXXZ
text$di	SEGMENT
??__ERMSG_LBTNDOWN@@YAXXZ PROC				; `dynamic initializer for 'RMSG_LBTNDOWN'', COMDAT

; 111  : const UINT RMSG_LBTNDOWN = ::RegisterWindowMessage(_T("RMSG_LBTNDOWN"));

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DGNCFOOP@RMSG_LBTNDOWN@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_LBTNDOWN@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_LBTNDOWN@@YAXXZ ENDP				; `dynamic initializer for 'RMSG_LBTNDOWN''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\ExCommonHeader.h
;	COMDAT ??__ERMSG_LBTNDBLCLICK@@YAXXZ
text$di	SEGMENT
??__ERMSG_LBTNDBLCLICK@@YAXXZ PROC			; `dynamic initializer for 'RMSG_LBTNDBLCLICK'', COMDAT

; 108  : const UINT RMSG_LBTNDBLCLICK = ::RegisterWindowMessage(_T("RMSG_LBTNDBLCLICK"));

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MMIGKJED@RMSG_LBTNDBLCLICK@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_LBTNDBLCLICK@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_LBTNDBLCLICK@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_LBTNDBLCLICK''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\ExCommonHeader.h
;	COMDAT ??__ERMSG_TABSTOP@@YAXXZ
text$di	SEGMENT
??__ERMSG_TABSTOP@@YAXXZ PROC				; `dynamic initializer for 'RMSG_TABSTOP'', COMDAT

; 104  : const UINT RMSG_TABSTOP = ::RegisterWindowMessage(_T("RMSG_TABSTOP"));

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0N@IMGBDGND@RMSG_TABSTOP@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_TABSTOP@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_TABSTOP@@YAXXZ ENDP				; `dynamic initializer for 'RMSG_TABSTOP''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\ExCommonHeader.h
;	COMDAT ??__ERMSG_FORMSTATECHANGE@@YAXXZ
text$di	SEGMENT
??__ERMSG_FORMSTATECHANGE@@YAXXZ PROC			; `dynamic initializer for 'RMSG_FORMSTATECHANGE'', COMDAT

; 103  : const UINT RMSG_FORMSTATECHANGE = ::RegisterWindowMessage(_T("RMSG_FORMSTATECHANGE"));

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FPLDPAEH@RMSG_FORMSTATECHANGE@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_FORMSTATECHANGE@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_FORMSTATECHANGE@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_FORMSTATECHANGE''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\ExCommonHeader.h
;	COMDAT ??__ERMSG_EVENT_SIGNAL@@YAXXZ
text$di	SEGMENT
??__ERMSG_EVENT_SIGNAL@@YAXXZ PROC			; `dynamic initializer for 'RMSG_EVENT_SIGNAL'', COMDAT

; 101  : const UINT RMSG_EVENT_SIGNAL = ::RegisterWindowMessage(_T("RMSG_EVENT_SIGNAL"));

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PGMEIMOI@RMSG_EVENT_SIGNAL@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_EVENT_SIGNAL@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_EVENT_SIGNAL@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_EVENT_SIGNAL''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\ExCommonHeader.h
;	COMDAT ??__ERMSG_EVENT_SPININPUT@@YAXXZ
text$di	SEGMENT
??__ERMSG_EVENT_SPININPUT@@YAXXZ PROC			; `dynamic initializer for 'RMSG_EVENT_SPININPUT'', COMDAT

; 100  : const UINT RMSG_EVENT_SPININPUT = ::RegisterWindowMessage(_T("RMSG_EVENT_SPININPUT"));

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FABJBMLM@RMSG_EVENT_SPININPUT@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_EVENT_SPININPUT@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_EVENT_SPININPUT@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_EVENT_SPININPUT''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\ExCommonHeader.h
;	COMDAT ??__ERMSG_EVENT_ACCTINPUT@@YAXXZ
text$di	SEGMENT
??__ERMSG_EVENT_ACCTINPUT@@YAXXZ PROC			; `dynamic initializer for 'RMSG_EVENT_ACCTINPUT'', COMDAT

; 99   : const UINT RMSG_EVENT_ACCTINPUT = ::RegisterWindowMessage(_T("RMSG_EVENT_ACCTINPUT"));

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@LEGBOMJF@RMSG_EVENT_ACCTINPUT@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_EVENT_ACCTINPUT@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_EVENT_ACCTINPUT@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_EVENT_ACCTINPUT''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\ExCommonHeader.h
;	COMDAT ??__ERMSG_EVENT_CODEINPUT@@YAXXZ
text$di	SEGMENT
??__ERMSG_EVENT_CODEINPUT@@YAXXZ PROC			; `dynamic initializer for 'RMSG_EVENT_CODEINPUT'', COMDAT

; 98   : const UINT RMSG_EVENT_CODEINPUT = ::RegisterWindowMessage(_T("RMSG_EVENT_CODEINPUT"));

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@JNMMFBNP@RMSG_EVENT_CODEINPUT@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_EVENT_CODEINPUT@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_EVENT_CODEINPUT@@YAXXZ ENDP			; `dynamic initializer for 'RMSG_EVENT_CODEINPUT''
text$di	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\inc\ExCommonHeader.h
;	COMDAT ??__ERMSG_FORMINITIALCOMPLETED@@YAXXZ
text$di	SEGMENT
??__ERMSG_FORMINITIALCOMPLETED@@YAXXZ PROC		; `dynamic initializer for 'RMSG_FORMINITIALCOMPLETED'', COMDAT

; 73   : const UINT RMSG_FORMINITIALCOMPLETED = ::RegisterWindowMessage(_T("RMSG_FORMINITIALCOMPLETED"));

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@FBLMOCPF@RMSG_FORMINITIALCOMPLETED@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterWindowMessageA@4
  0000b	a3 00 00 00 00	 mov	 DWORD PTR ?RMSG_FORMINITIALCOMPLETED@@3IB, eax
  00010	c3		 ret	 0
??__ERMSG_FORMINITIALCOMPLETED@@YAXXZ ENDP		; `dynamic initializer for 'RMSG_FORMINITIALCOMPLETED''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
;	COMDAT ??__E?isInitialized@CAtlStringMgr@ATL@@0_NA@@YAXXZ
text$di	SEGMENT
??__E?isInitialized@CAtlStringMgr@ATL@@0_NA@@YAXXZ PROC	; `dynamic initializer for 'ATL::CAtlStringMgr::isInitialized'', COMDAT

; 178  : __declspec(selectany) bool CAtlStringMgr::isInitialized = ATLImplementationDetails::InitializeCAtlStringMgr.EnsureLinked() != nullptr;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?InitializeCAtlStringMgr@ATLImplementationDetails@ATL@@3UCAtlStringMgrStaticInitializer@12@A ; ATL::ATLImplementationDetails::InitializeCAtlStringMgr
  00005	e8 00 00 00 00	 call	 ?EnsureLinked@CAtlStringMgrStaticInitializer@ATLImplementationDetails@ATL@@QAEPAXXZ ; ATL::ATLImplementationDetails::CAtlStringMgrStaticInitializer::EnsureLinked
  0000a	85 c0		 test	 eax, eax
  0000c	0f 95 05 00 00
	00 00		 setne	 BYTE PTR ?isInitialized@CAtlStringMgr@ATL@@0_NA ; ATL::CAtlStringMgr::isInitialized
  00013	c3		 ret	 0
??__E?isInitialized@CAtlStringMgr@ATL@@0_NA@@YAXXZ ENDP	; `dynamic initializer for 'ATL::CAtlStringMgr::isInitialized''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlmem.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
;	COMDAT ??__EInitializeCAtlStringMgr@ATLImplementationDetails@ATL@@YAXXZ
text$di	SEGMENT
??__EInitializeCAtlStringMgr@ATLImplementationDetails@ATL@@YAXXZ PROC ; ATL::ATLImplementationDetails::`dynamic initializer for 'InitializeCAtlStringMgr'', COMDAT

; 57   : 		static CWin32Heap strHeap( ::GetProcessHeap() );

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00006	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index

; 175  : __declspec(selectany) CAtlStringMgrStaticInitializer InitializeCAtlStringMgr;

  0000c	56		 push	 esi

; 57   : 		static CWin32Heap strHeap( ::GetProcessHeap() );

  0000d	8b 34 88	 mov	 esi, DWORD PTR [eax+ecx*4]
  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; `ATL::CAtlStringMgr::GetInstance'::`2'::$TSS0
  00015	3b 86 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[esi]
  0001b	7f 0f		 jg	 SHORT $LN16@dynamic
$LN6@dynamic:

; 58   : 		static CAtlStringMgr strMgr(&strHeap);

  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; `ATL::CAtlStringMgr::GetInstance'::`2'::$TSS1
  00022	3b 86 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[esi]
  00028	5e		 pop	 esi
  00029	7f 4c		 jg	 SHORT $LN17@dynamic
$LN7@dynamic:

; 175  : __declspec(selectany) CAtlStringMgrStaticInitializer InitializeCAtlStringMgr;

  0002b	c3		 ret	 0
$LN16@dynamic:

; 57   : 		static CWin32Heap strHeap( ::GetProcessHeap() );

  0002c	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; `ATL::CAtlStringMgr::GetInstance'::`2'::$TSS0
  00031	e8 00 00 00 00	 call	 __Init_thread_header
  00036	83 c4 04	 add	 esp, 4
  00039	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA, -1 ; `ATL::CAtlStringMgr::GetInstance'::`2'::$TSS0
  00040	75 db		 jne	 SHORT $LN6@dynamic
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcessHeap@0
  00048	68 00 00 00 00	 push	 OFFSET ??__FstrHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strHeap''
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlmem.h

; 89   : 	{

  0004d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A, OFFSET ??_7CWin32Heap@ATL@@6B@
  00057	a3 04 00 00 00	 mov	 DWORD PTR ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A+4, eax
  0005c	c6 05 08 00 00
	00 00		 mov	 BYTE PTR ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A+8, 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h

; 57   : 		static CWin32Heap strHeap( ::GetProcessHeap() );

  00063	e8 00 00 00 00	 call	 _atexit
  00068	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; `ATL::CAtlStringMgr::GetInstance'::`2'::$TSS0
  0006d	e8 00 00 00 00	 call	 __Init_thread_footer
  00072	83 c4 08	 add	 esp, 8
  00075	eb a6		 jmp	 SHORT $LN6@dynamic
$LN17@dynamic:

; 58   : 		static CAtlStringMgr strMgr(&strHeap);

  00077	68 00 00 00 00	 push	 OFFSET ?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; `ATL::CAtlStringMgr::GetInstance'::`2'::$TSS1
  0007c	e8 00 00 00 00	 call	 __Init_thread_header
  00081	83 c4 04	 add	 esp, 4
  00084	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA, -1 ; `ATL::CAtlStringMgr::GetInstance'::`2'::$TSS1
  0008b	75 9e		 jne	 SHORT $LN7@dynamic
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 118  : 		achNil[0] = 0;

  0008d	33 c0		 xor	 eax, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h

; 40   : 	{

  0008f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A, OFFSET ??_7CAtlStringMgr@ATL@@6B@

; 58   : 		static CAtlStringMgr strMgr(&strHeap);

  00099	68 00 00 00 00	 push	 OFFSET ??__FstrMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strMgr''

; 39   : 		m_pMemMgr( pMemMgr )

  0009e	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A+4, OFFSET ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strHeap
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 115  : 		nRefs = 2;  // Never gets freed by IAtlStringMgr

  000a8	c7 05 14 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A+20, 2

; 116  : 		nDataLength = 0;

  000b2	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A+12, 0

; 117  : 		nAllocLength = 0;

  000bc	c7 05 10 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A+16, 0

; 118  : 		achNil[0] = 0;

  000c6	a3 18 00 00 00	 mov	 DWORD PTR ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A+24, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h

; 41   : 		m_nil.SetManager( this );

  000cb	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A+8, OFFSET ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strMgr

; 58   : 		static CAtlStringMgr strMgr(&strHeap);

  000d5	e8 00 00 00 00	 call	 _atexit
  000da	68 00 00 00 00	 push	 OFFSET ?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; `ATL::CAtlStringMgr::GetInstance'::`2'::$TSS1
  000df	e8 00 00 00 00	 call	 __Init_thread_footer
  000e4	83 c4 08	 add	 esp, 8
  000e7	e9 3f ff ff ff	 jmp	 $LN7@dynamic
??__EInitializeCAtlStringMgr@ATLImplementationDetails@ATL@@YAXXZ ENDP ; ATL::ATLImplementationDetails::`dynamic initializer for 'InitializeCAtlStringMgr''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
;	COMDAT ?EnsureLinked@CAtlStringMgrStaticInitializer@ATLImplementationDetails@ATL@@QAEPAXXZ
_TEXT	SEGMENT
?EnsureLinked@CAtlStringMgrStaticInitializer@ATLImplementationDetails@ATL@@QAEPAXXZ PROC ; ATL::ATLImplementationDetails::CAtlStringMgrStaticInitializer::EnsureLinked, COMDAT
; _this$ = ecx

; 171  : 		return this;

  00000	8b c1		 mov	 eax, ecx

; 172  : 	}

  00002	c3		 ret	 0
?EnsureLinked@CAtlStringMgrStaticInitializer@ATLImplementationDetails@ATL@@QAEPAXXZ ENDP ; ATL::ATLImplementationDetails::CAtlStringMgrStaticInitializer::EnsureLinked
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
;	COMDAT ??__FstrMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ
text$yd	SEGMENT
??__FstrMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ PROC ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strMgr'', COMDAT

; 44   : 	{

  00000	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A, OFFSET ??_7CAtlStringMgr@ATL@@6B@

; 45   : 		isInitialized = false;

  0000a	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?isInitialized@CAtlStringMgr@ATL@@0_NA, 0 ; ATL::CAtlStringMgr::isInitialized
  00011	c3		 ret	 0
??__FstrMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ENDP ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strMgr''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlmem.h
;	COMDAT ??__FstrHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ
text$yd	SEGMENT
??__FstrHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ PROC ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strHeap'', COMDAT

; 111  : 		if( m_bOwnHeap && (m_hHeap != NULL) )

  00000	80 3d 08 00 00
	00 00		 cmp	 BYTE PTR ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A+8, 0
  00007	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A, OFFSET ??_7CWin32Heap@ATL@@6B@
  00011	74 10		 je	 SHORT $LN4@dynamic
  00013	a1 04 00 00 00	 mov	 eax, DWORD PTR ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A+4
  00018	85 c0		 test	 eax, eax
  0001a	74 07		 je	 SHORT $LN4@dynamic

; 112  : 		{
; 113  : 			BOOL bSuccess;
; 114  : 
; 115  : 			bSuccess = ::HeapDestroy( m_hHeap );

  0001c	50		 push	 eax
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapDestroy@4
$LN4@dynamic:
  00023	c3		 ret	 0
??__FstrHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ENDP ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strHeap''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
;	COMDAT ??_GCAtlStringMgr@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCAtlStringMgr@ATL@@UAEPAXI@Z PROC			; ATL::CAtlStringMgr::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1

; 44   : 	{

  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CAtlStringMgr@ATL@@6B@

; 45   : 		isInitialized = false;

  00010	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?isInitialized@CAtlStringMgr@ATL@@0_NA, 0 ; ATL::CAtlStringMgr::isInitialized
  00017	74 0b		 je	 SHORT $LN6@scalar
  00019	6a 1c		 push	 28			; 0000001cH
  0001b	56		 push	 esi
  0001c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00021	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00024	8b c6		 mov	 eax, esi
  00026	5e		 pop	 esi
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCAtlStringMgr@ATL@@UAEPAXI@Z ENDP			; ATL::CAtlStringMgr::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
;	COMDAT ?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT
?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ PROC	; ATL::CAtlStringMgr::Clone, COMDAT
; _this$ = ecx

; 148  : 		return this;

  00000	8b c1		 mov	 eax, ecx

; 149  : 	}

  00002	c3		 ret	 0
?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ ENDP	; ATL::CAtlStringMgr::Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
;	COMDAT ?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ
_TEXT	SEGMENT
?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ PROC ; ATL::CAtlStringMgr::GetNilString, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 65   : 		_InterlockedIncrement(&nRefs);

  00000	f0 ff 41 14	 lock	  inc	 DWORD PTR [ecx+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h

; 144  : 		return &m_nil;

  00004	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]

; 145  : 	}

  00007	c3		 ret	 0
?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ ENDP ; ATL::CAtlStringMgr::GetNilString
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlalloc.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlmem.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlalloc.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlalloc.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
;	COMDAT ?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z
_TEXT	SEGMENT
_pData$ = 8						; size = 4
_nChars$ = 12						; size = 4
_nCharSize$ = 16					; size = 4
?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z PROC ; ATL::CAtlStringMgr::Reallocate, COMDAT
; _this$ = ecx

; 111  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 112  : 		ATLENSURE_RETURN_VAL( nChars>=0, NULL );

  00003	8b 55 0c	 mov	 edx, DWORD PTR _nChars$[ebp]
  00006	56		 push	 esi
  00007	85 d2		 test	 edx, edx
  00009	78 4a		 js	 SHORT $LN12@Reallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlalloc.h

; 85   : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  0000b	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00010	2b c2		 sub	 eax, edx
  00012	83 f8 01	 cmp	 eax, 1
  00015	7c 3e		 jl	 SHORT $LN12@Reallocate

; 89   : 	*ptResult= tLeft + tRight;

  00017	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlmem.h

; 29   : 	return( N( (n+(nAlign-1))&~(N( nAlign )-1) ) );

  00018	8d 72 07	 lea	 esi, DWORD PTR [edx+7]
  0001b	83 e6 f8	 and	 esi, -8			; fffffff8H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h

; 125  : 		ATLENSURE_RETURN_VAL( nChars<=nAlignedChars, NULL );

  0001e	3b d6		 cmp	 edx, esi
  00020	7f 33		 jg	 SHORT $LN12@Reallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlalloc.h

; 166  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00022	8b c6		 mov	 eax, esi
  00024	f7 65 10	 mul	 DWORD PTR _nCharSize$[ebp]

; 167  : 	if(i64Result>ULONG_MAX)

  00027	85 d2		 test	 edx, edx
  00029	77 2a		 ja	 SHORT $LN12@Reallocate
  0002b	72 05		 jb	 SHORT $LN41@Reallocate
  0002d	83 f8 ff	 cmp	 eax, -1
  00030	77 23		 ja	 SHORT $LN12@Reallocate
$LN41@Reallocate:

; 85   : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  00032	83 f8 ef	 cmp	 eax, -17		; ffffffefH
  00035	77 1e		 ja	 SHORT $LN12@Reallocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h

; 132  : 		pNewData = static_cast< CStringData* >( m_pMemMgr->Reallocate( pData, nTotalSize ) );

  00037	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlalloc.h

; 89   : 	*ptResult= tLeft + tRight;

  0003a	83 c0 10	 add	 eax, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h

; 132  : 		pNewData = static_cast< CStringData* >( m_pMemMgr->Reallocate( pData, nTotalSize ) );

  0003d	50		 push	 eax
  0003e	ff 75 08	 push	 DWORD PTR _pData$[ebp]
  00041	8b 11		 mov	 edx, DWORD PTR [ecx]
  00043	ff 52 08	 call	 DWORD PTR [edx+8]

; 133  : 		if( pNewData == NULL )

  00046	85 c0		 test	 eax, eax
  00048	74 0b		 je	 SHORT $LN12@Reallocate

; 134  : 		{
; 135  : 			return NULL;
; 136  : 		}
; 137  : 		pNewData->nAllocLength = nAlignedChars - 1;

  0004a	8d 4e ff	 lea	 ecx, DWORD PTR [esi-1]
  0004d	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00050	5e		 pop	 esi

; 138  : 
; 139  : 		return pNewData;
; 140  : 	}

  00051	5d		 pop	 ebp
  00052	c2 0c 00	 ret	 12			; 0000000cH
$LN12@Reallocate:

; 126  : 
; 127  : 		if(	FAILED(::ATL::AtlMultiply(&nDataBytes, static_cast<ULONG>(nAlignedChars), static_cast<ULONG>(nCharSize))) ||
; 128  : 			FAILED(::ATL::AtlAdd(&nTotalSize, static_cast<ULONG>(sizeof( CStringData )), nDataBytes)))
; 129  : 		{
; 130  : 			return NULL;

  00055	33 c0		 xor	 eax, eax
  00057	5e		 pop	 esi

; 138  : 
; 139  : 		return pNewData;
; 140  : 	}

  00058	5d		 pop	 ebp
  00059	c2 0c 00	 ret	 12			; 0000000cH
?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z ENDP ; ATL::CAtlStringMgr::Reallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
;	COMDAT ?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z
_TEXT	SEGMENT
_pData$ = 8						; size = 4
?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z PROC	; ATL::CAtlStringMgr::Free, COMDAT
; _this$ = ecx

; 101  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 102  : 		ATLASSUME(pData != NULL);
; 103  : 		ATLASSERT(pData->pStringMgr == this);
; 104  : 
; 105  : 		m_pMemMgr->Free( pData );

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]

; 106  : 	}

  00008	5d		 pop	 ebp

; 102  : 		ATLASSUME(pData != NULL);
; 103  : 		ATLASSERT(pData->pStringMgr == this);
; 104  : 
; 105  : 		m_pMemMgr->Free( pData );

  00009	ff 60 04	 jmp	 DWORD PTR [eax+4]
?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z ENDP	; ATL::CAtlStringMgr::Free
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlalloc.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlmem.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlalloc.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlalloc.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
;	COMDAT ?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z
_TEXT	SEGMENT
_nChars$ = 8						; size = 4
_nCharSize$ = 12					; size = 4
?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z PROC ; ATL::CAtlStringMgr::Allocate, COMDAT
; _this$ = ecx

; 68   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 69   : 		ATLENSURE_RETURN_VAL( nChars>=0, NULL );

  00003	8b 55 08	 mov	 edx, DWORD PTR _nChars$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	85 d2		 test	 edx, edx
  0000c	78 57		 js	 SHORT $LN12@Allocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlalloc.h

; 85   : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  0000e	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00013	2b c2		 sub	 eax, edx
  00015	83 f8 01	 cmp	 eax, 1
  00018	7c 4b		 jl	 SHORT $LN12@Allocate

; 89   : 	*ptResult= tLeft + tRight;

  0001a	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlmem.h

; 29   : 	return( N( (n+(nAlign-1))&~(N( nAlign )-1) ) );

  0001b	8d 72 07	 lea	 esi, DWORD PTR [edx+7]
  0001e	83 e6 f8	 and	 esi, -8			; fffffff8H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h

; 81   : 		ATLENSURE_RETURN_VAL( nChars<=nAlignedChars, NULL );

  00021	3b d6		 cmp	 edx, esi
  00023	7f 40		 jg	 SHORT $LN12@Allocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlalloc.h

; 136  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00025	8b c6		 mov	 eax, esi
  00027	f7 65 0c	 mul	 DWORD PTR _nCharSize$[ebp]

; 137  : 	if(i64Result>UINT_MAX)

  0002a	85 d2		 test	 edx, edx
  0002c	77 37		 ja	 SHORT $LN12@Allocate
  0002e	72 05		 jb	 SHORT $LN41@Allocate
  00030	83 f8 ff	 cmp	 eax, -1
  00033	77 30		 ja	 SHORT $LN12@Allocate
$LN41@Allocate:

; 85   : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  00035	83 f8 ef	 cmp	 eax, -17		; ffffffefH
  00038	77 2b		 ja	 SHORT $LN12@Allocate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h

; 88   : 		pData = static_cast< CStringData* >( m_pMemMgr->Allocate( nTotalSize ) );

  0003a	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlalloc.h

; 89   : 	*ptResult= tLeft + tRight;

  0003d	8d 50 10	 lea	 edx, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h

; 88   : 		pData = static_cast< CStringData* >( m_pMemMgr->Allocate( nTotalSize ) );

  00040	52		 push	 edx
  00041	8b 01		 mov	 eax, DWORD PTR [ecx]
  00043	ff 10		 call	 DWORD PTR [eax]

; 89   : 		if( pData == NULL )

  00045	85 c0		 test	 eax, eax
  00047	74 1c		 je	 SHORT $LN12@Allocate

; 90   : 		{
; 91   : 			return( NULL );
; 92   : 		}
; 93   : 		pData->pStringMgr = this;

  00049	89 38		 mov	 DWORD PTR [eax], edi

; 94   : 		pData->nRefs = 1;
; 95   : 		pData->nAllocLength = nAlignedChars - 1;

  0004b	8d 4e ff	 lea	 ecx, DWORD PTR [esi-1]
  0004e	5f		 pop	 edi
  0004f	c7 40 0c 01 00
	00 00		 mov	 DWORD PTR [eax+12], 1
  00056	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 96   : 		pData->nDataLength = 0;

  00059	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 97   : 
; 98   : 		return( pData );
; 99   : 	}

  00060	5e		 pop	 esi
  00061	5d		 pop	 ebp
  00062	c2 08 00	 ret	 8
$LN12@Allocate:
  00065	5f		 pop	 edi

; 82   : 
; 83   : 		if(	FAILED(::ATL::AtlMultiply(&nDataBytes, static_cast<size_t>(nAlignedChars), static_cast<size_t>(nCharSize))) ||
; 84   : 			FAILED(::ATL::AtlAdd(&nTotalSize, static_cast<size_t>(sizeof( CStringData )), nDataBytes)))
; 85   : 		{
; 86   : 			return NULL;

  00066	33 c0		 xor	 eax, eax

; 97   : 
; 98   : 		return( pData );
; 99   : 	}

  00068	5e		 pop	 esi
  00069	5d		 pop	 ebp
  0006a	c2 08 00	 ret	 8
?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z ENDP ; ATL::CAtlStringMgr::Allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlstr.h
;	COMDAT ??1CAtlStringMgr@ATL@@UAE@XZ
_TEXT	SEGMENT
??1CAtlStringMgr@ATL@@UAE@XZ PROC			; ATL::CAtlStringMgr::~CAtlStringMgr, COMDAT
; _this$ = ecx

; 44   : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CAtlStringMgr@ATL@@6B@

; 45   : 		isInitialized = false;

  00006	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?isInitialized@CAtlStringMgr@ATL@@0_NA, 0 ; ATL::CAtlStringMgr::isInitialized

; 46   : 	}

  0000d	c3		 ret	 0
??1CAtlStringMgr@ATL@@UAE@XZ ENDP			; ATL::CAtlStringMgr::~CAtlStringMgr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlbase.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpcoll.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlbase.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpcoll.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlcore.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpcoll.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlcore.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlbase.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpcoll.h
;	COMDAT ??__F_AtlWinModule@ATL@@YAXXZ
text$yd	SEGMENT
??__F_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlWinModule'', COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlbase.h

; 7655 : 	if (pWinModule->cbSize == 0)

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
  00005	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp__free

; 2957 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

  0000b	57		 push	 edi
  0000c	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4

; 7655 : 	if (pWinModule->cbSize == 0)

  00012	85 c0		 test	 eax, eax
  00014	0f 84 93 00 00
	00		 je	 $LN8@dynamic

; 7656 : 		return S_OK;
; 7657 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

  0001a	83 f8 2c	 cmp	 eax, 44			; 0000002cH
  0001d	0f 85 8a 00 00
	00		 jne	 $LN8@dynamic

; 7658 : 		return E_INVALIDARG;
; 7659 : 
; 7660 : 	for (int i = 0; i < pWinModule->m_rgWindowClassAtoms.GetSize(); i++)

  00023	a1 24 00 00 00	 mov	 eax, DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+36
  00028	56		 push	 esi
  00029	33 f6		 xor	 esi, esi
  0002b	85 c0		 test	 eax, eax
  0002d	7e 35		 jle	 SHORT $LN10@dynamic
  0002f	53		 push	 ebx
  00030	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__UnregisterClassA@8
$LL11@dynamic:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpcoll.h

; 238  : 		if(nIndex < 0 || nIndex >= m_nSize)

  00036	85 f6		 test	 esi, esi
  00038	0f 88 9e 00 00
	00		 js	 $LN46@dynamic
  0003e	3b f0		 cmp	 esi, eax
  00040	0f 8d 96 00 00
	00		 jge	 $LN46@dynamic
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlbase.h

; 7661 : 		UnregisterClass((LPCTSTR)pWinModule->m_rgWindowClassAtoms[i], hInst);

  00046	a1 20 00 00 00	 mov	 eax, DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+32
  0004b	57		 push	 edi
  0004c	0f b7 04 70	 movzx	 eax, WORD PTR [eax+esi*2]
  00050	50		 push	 eax
  00051	ff d3		 call	 ebx
  00053	a1 24 00 00 00	 mov	 eax, DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+36
  00058	46		 inc	 esi
  00059	3b f0		 cmp	 esi, eax
  0005b	7c d9		 jl	 SHORT $LL11@dynamic
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpcoll.h

; 238  : 		if(nIndex < 0 || nIndex >= m_nSize)

  0005d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp__free
  00063	5b		 pop	 ebx
$LN10@dynamic:

; 216  : 		if(m_aT != NULL)

  00064	a1 20 00 00 00	 mov	 eax, DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+32
  00069	5e		 pop	 esi
  0006a	85 c0		 test	 eax, eax
  0006c	74 10		 je	 SHORT $LN25@dynamic

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)
; 219  : 				m_aT[i].~T();
; 220  : 			free(m_aT);

  0006e	50		 push	 eax
  0006f	ff d1		 call	 ecx
  00071	83 c4 04	 add	 esp, 4

; 221  : 			m_aT = NULL;

  00074	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+32, 0
$LN25@dynamic:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlcore.h

; 155  : 		DeleteCriticalSection(&m_sec);

  0007e	68 04 00 00 00	 push	 OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpcoll.h

; 223  : 		m_nSize = 0;

  00083	c7 05 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+36, 0

; 224  : 		m_nAllocSize = 0;

  0008d	c7 05 28 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+40, 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlcore.h

; 155  : 		DeleteCriticalSection(&m_sec);

  00097	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlbase.h

; 7664 : 	pWinModule->cbSize = 0;

  0009d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp__free
  000a3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A, 0
$LN8@dynamic:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpcoll.h

; 216  : 		if(m_aT != NULL)

  000ad	a1 20 00 00 00	 mov	 eax, DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+32
  000b2	5f		 pop	 edi
  000b3	85 c0		 test	 eax, eax
  000b5	74 10		 je	 SHORT $LN40@dynamic

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)
; 219  : 				m_aT[i].~T();
; 220  : 			free(m_aT);

  000b7	50		 push	 eax
  000b8	ff d1		 call	 ecx
  000ba	83 c4 04	 add	 esp, 4

; 221  : 			m_aT = NULL;

  000bd	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+32, 0
$LN40@dynamic:

; 223  : 		m_nSize = 0;

  000c7	c7 05 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+36, 0

; 224  : 		m_nAllocSize = 0;

  000d1	c7 05 28 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+40, 0
  000db	c3		 ret	 0
$LN46@dynamic:

; 240  : 			_AtlRaiseException((DWORD)EXCEPTION_ARRAY_BOUNDS_EXCEEDED);

  000dc	6a 01		 push	 1
  000de	68 8c 00 00 c0	 push	 -1073741684		; c000008cH
  000e3	e8 00 00 00 00	 call	 ?_AtlRaiseException@ATL@@YAXKK@Z ; ATL::_AtlRaiseException
$LN56@dynamic:
  000e8	cc		 int	 3
??__F_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlWinModule''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlbase.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlwinverapi.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlcore.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\shared\winerror.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlWinModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlWinModule'', COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

  00000	6a 00		 push	 0
  00002	6a 00		 push	 0
  00004	68 04 00 00 00	 push	 OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+4
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSectionEx@12
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlcore.h

; 145  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

  0000f	85 c0		 test	 eax, eax
  00011	75 27		 jne	 SHORT $LN4@dynamic

; 146  : 		{
; 147  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\shared\winerror.h

; 29673: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  00019	85 c0		 test	 eax, eax
  0001b	7e 0a		 jle	 SHORT $LN26@dynamic
  0001d	0f b7 c0	 movzx	 eax, ax
  00020	0d 00 00 07 80	 or	 eax, -2147024896	; 80070000H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlbase.h

; 2941 : 		if (FAILED(hr))

  00025	85 c0		 test	 eax, eax
$LN26@dynamic:
  00027	79 11		 jns	 SHORT $LN4@dynamic

; 2942 : 		{
; 2943 : 			ATLASSERT(0);
; 2944 : 			CAtlBaseModule::m_bInitFailed = true;

  00029	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2945 : 			cbSize = 0;

  00030	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A, 0
$LN4@dynamic:

; 2972 : __declspec(selectany) CAtlWinModule _AtlWinModule;

  0003a	68 00 00 00 00	 push	 OFFSET ??__F_AtlWinModule@ATL@@YAXXZ ; ATL::`dynamic atexit destructor for '_AtlWinModule''
  0003f	e8 00 00 00 00	 call	 _atexit
  00044	59		 pop	 ecx
  00045	c3		 ret	 0
??__E_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlWinModule''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlbase.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlcore.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlbase.h
;	COMDAT ??__F_AtlComModule@ATL@@YAXXZ
text$yd	SEGMENT
__$EHRec$ = -12						; size = 12
??__F_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlComModule'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??__F_AtlComModule@ATL@@YAXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 2614 : 		if (cbSize == 0)

  00025	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A, 0

; 2607 : 	{

  0002c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2614 : 		if (cbSize == 0)

  00033	74 5b		 je	 SHORT $LN6@dynamic

; 2615 : 			return;
; 2616 : 
; 2617 : 		for (_ATL_OBJMAP_ENTRY_EX** ppEntry = m_ppAutoObjMapFirst; ppEntry < m_ppAutoObjMapLast; ppEntry++)

  00035	8b 35 08 00 00
	00		 mov	 esi, DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A+8
  0003b	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A+12
  00041	3b f1		 cmp	 esi, ecx
  00043	73 36		 jae	 SHORT $LN8@dynamic
  00045	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__DecodePointer@4
  0004b	0f 1f 44 00 00	 npad	 5
$LL9@dynamic:

; 2618 : 		{
; 2619 : 			if (*ppEntry != NULL)

  00050	8b 06		 mov	 eax, DWORD PTR [esi]
  00052	85 c0		 test	 eax, eax
  00054	74 1e		 je	 SHORT $LN7@dynamic

; 2620 : 			{
; 2621 : 				_ATL_OBJMAP_CACHE* pCache = (**ppEntry).pCache;

  00056	8b 78 10	 mov	 edi, DWORD PTR [eax+16]

; 2622 : 
; 2623 : 				if (pCache->pCF != NULL)

  00059	8b 07		 mov	 eax, DWORD PTR [edi]
  0005b	85 c0		 test	 eax, eax
  0005d	74 15		 je	 SHORT $LN7@dynamic

; 2624 : 				{
; 2625 : 					// Decode factory pointer if it's not null
; 2626 : 					IUnknown *factory = reinterpret_cast<IUnknown*>(::DecodePointer(pCache->pCF));

  0005f	50		 push	 eax
  00060	ff d3		 call	 ebx

; 2627 : 					_Analysis_assume_(factory != nullptr);
; 2628 : 					factory->Release();

  00062	50		 push	 eax
  00063	8b 08		 mov	 ecx, DWORD PTR [eax]
  00065	ff 51 08	 call	 DWORD PTR [ecx+8]

; 2629 : 					pCache->pCF = NULL;

  00068	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  0006e	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A+12
$LN7@dynamic:

; 2615 : 			return;
; 2616 : 
; 2617 : 		for (_ATL_OBJMAP_ENTRY_EX** ppEntry = m_ppAutoObjMapFirst; ppEntry < m_ppAutoObjMapLast; ppEntry++)

  00074	83 c6 04	 add	 esi, 4
  00077	3b f1		 cmp	 esi, ecx
  00079	72 d5		 jb	 SHORT $LL9@dynamic
$LN8@dynamic:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlcore.h

; 155  : 		DeleteCriticalSection(&m_sec);

  0007b	68 10 00 00 00	 push	 OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A+16
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlbase.h

; 2637 : 		cbSize = 0;

  00086	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A, 0
$LN6@dynamic:
  00090	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00093	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009a	59		 pop	 ecx
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	5b		 pop	 ebx
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c3		 ret	 0
  000a2	cc		 int	 3
  000a3	cc		 int	 3
  000a4	cc		 int	 3
  000a5	cc		 int	 3
  000a6	cc		 int	 3
text$yd	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??__F_AtlComModule@ATL@@YAXXZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??__F_AtlComModule@ATL@@YAXXZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??__F_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlComModule''
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlbase.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlwinverapi.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlcore.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\shared\winerror.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlComModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlComModule'', COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

  00000	6a 00		 push	 0
  00002	6a 00		 push	 0
  00004	68 10 00 00 00	 push	 OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A+16
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSectionEx@12
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlcore.h

; 145  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

  0000f	85 c0		 test	 eax, eax
  00011	75 29		 jne	 SHORT $LN4@dynamic

; 146  : 		{
; 147  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\shared\winerror.h

; 29673: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  00019	85 c0		 test	 eax, eax
  0001b	7e 0a		 jle	 SHORT $LN20@dynamic
  0001d	0f b7 c0	 movzx	 eax, ax
  00020	0d 00 00 07 80	 or	 eax, -2147024896	; 80070000H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlbase.h

; 2595 : 		if (FAILED(m_csObjMap.Init()))

  00025	85 c0		 test	 eax, eax
$LN20@dynamic:
  00027	79 13		 jns	 SHORT $LN4@dynamic

; 2716 : __declspec(selectany) CAtlComModule _AtlComModule;

  00029	68 00 00 00 00	 push	 OFFSET ??__F_AtlComModule@ATL@@YAXXZ ; ATL::`dynamic atexit destructor for '_AtlComModule''

; 2599 : 			CAtlBaseModule::m_bInitFailed = true;

  0002e	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2716 : __declspec(selectany) CAtlComModule _AtlComModule;

  00035	e8 00 00 00 00	 call	 _atexit
  0003a	59		 pop	 ecx
  0003b	c3		 ret	 0
$LN4@dynamic:
  0003c	68 00 00 00 00	 push	 OFFSET ??__F_AtlComModule@ATL@@YAXXZ ; ATL::`dynamic atexit destructor for '_AtlComModule''

; 2603 : 		cbSize = sizeof(_ATL_COM_MODULE);

  00041	c7 05 00 00 00
	00 28 00 00 00	 mov	 DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A, 40 ; 00000028H

; 2716 : __declspec(selectany) CAtlComModule _AtlComModule;

  0004b	e8 00 00 00 00	 call	 _atexit
  00050	59		 pop	 ecx
  00051	c3		 ret	 0
??__E_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlComModule''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtls_.h
;	COMDAT ?CreateObject@?$CThreadLocal@VAFX_MODULE_THREAD_STATE@@@@SGPAVCNoTrackObject@@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateObject@?$CThreadLocal@VAFX_MODULE_THREAD_STATE@@@@SGPAVCNoTrackObject@@XZ PROC ; CThreadLocal<AFX_MODULE_THREAD_STATE>::CreateObject, COMDAT

; 200  : 		{ return new TYPE; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateObject@?$CThreadLocal@VAFX_MODULE_THREAD_STATE@@@@SGPAVCNoTrackObject@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	68 9c 00 00 00	 push	 156			; 0000009cH
  00028	e8 00 00 00 00	 call	 ??2CNoTrackObject@@SGPAXI@Z ; CNoTrackObject::operator new
  0002d	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	85 c0		 test	 eax, eax
  00039	74 16		 je	 SHORT $LN3@CreateObje
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ??0AFX_MODULE_THREAD_STATE@@QAE@XZ ; AFX_MODULE_THREAD_STATE::AFX_MODULE_THREAD_STATE
  00042	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00045	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004c	59		 pop	 ecx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
$LN3@CreateObje:
  00051	33 c0		 xor	 eax, eax
  00053	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00056	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005d	59		 pop	 ecx
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateObject@?$CThreadLocal@VAFX_MODULE_THREAD_STATE@@@@SGPAVCNoTrackObject@@XZ$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3CNoTrackObject@@SGXPAX@Z ; CNoTrackObject::operator delete
  00009	c3		 ret	 0
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
__ehhandler$?CreateObject@?$CThreadLocal@VAFX_MODULE_THREAD_STATE@@@@SGPAVCNoTrackObject@@XZ:
  0000f	90		 npad	 1
  00010	90		 npad	 1
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateObject@?$CThreadLocal@VAFX_MODULE_THREAD_STATE@@@@SGPAVCNoTrackObject@@XZ
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateObject@?$CThreadLocal@VAFX_MODULE_THREAD_STATE@@@@SGPAVCNoTrackObject@@XZ ENDP ; CThreadLocal<AFX_MODULE_THREAD_STATE>::CreateObject
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?_AfxInitManaged@@YAHXZ
_TEXT	SEGMENT
?_AfxInitManaged@@YAHXZ PROC				; _AfxInitManaged, COMDAT

; 87   : 	return 0;

  00000	33 c0		 xor	 eax, eax

; 88   : }

  00002	c3		 ret	 0
?_AfxInitManaged@@YAHXZ ENDP				; _AfxInitManaged
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlmem.h
;	COMDAT ??_GCWin32Heap@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCWin32Heap@ATL@@UAEPAXI@Z PROC			; ATL::CWin32Heap::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 109  : 	{

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 110  : #ifdef _ATL_USE_WINAPI_FAMILY_DESKTOP_APP
; 111  : 		if( m_bOwnHeap && (m_hHeap != NULL) )

  00006	80 7e 08 00	 cmp	 BYTE PTR [esi+8], 0
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CWin32Heap@ATL@@6B@
  00010	74 0e		 je	 SHORT $LN5@scalar
  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	85 c0		 test	 eax, eax
  00017	74 07		 je	 SHORT $LN5@scalar

; 112  : 		{
; 113  : 			BOOL bSuccess;
; 114  : 
; 115  : 			bSuccess = ::HeapDestroy( m_hHeap );

  00019	50		 push	 eax
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapDestroy@4
$LN5@scalar:
  00020	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00024	74 0b		 je	 SHORT $LN7@scalar
  00026	6a 0c		 push	 12			; 0000000cH
  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002e	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00031	8b c6		 mov	 eax, esi
  00033	5e		 pop	 esi
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
??_GCWin32Heap@ATL@@UAEPAXI@Z ENDP			; ATL::CWin32Heap::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlmem.h
;	COMDAT ?GetSize@CWin32Heap@ATL@@UAEIPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?GetSize@CWin32Heap@ATL@@UAEIPAX@Z PROC			; ATL::CWin32Heap::GetSize, COMDAT
; _this$ = ecx

; 175  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 176  : 		return( ::HeapSize( m_hHeap, 0, p ) );

  00003	ff 75 08	 push	 DWORD PTR _p$[ebp]
  00006	6a 00		 push	 0
  00008	ff 71 04	 push	 DWORD PTR [ecx+4]
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapSize@12

; 177  : 	}

  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?GetSize@CWin32Heap@ATL@@UAEIPAX@Z ENDP			; ATL::CWin32Heap::GetSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlmem.h
;	COMDAT ?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_nBytes$ = 12						; size = 4
?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z PROC		; ATL::CWin32Heap::Reallocate, COMDAT
; _this$ = ecx

; 160  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 161  : 		if( p == NULL )

  00003	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	75 0b		 jne	 SHORT $LN2@Reallocate

; 162  : 		{
; 163  : 			return( Allocate( nBytes ) );

  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	ff 75 0c	 push	 DWORD PTR _nBytes$[ebp]
  0000f	ff 10		 call	 DWORD PTR [eax]

; 173  : 	}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
$LN2@Reallocate:

; 164  : 		}
; 165  : 
; 166  : 		if (nBytes==0)

  00015	8b 45 0c	 mov	 eax, DWORD PTR _nBytes$[ebp]
  00018	85 c0		 test	 eax, eax
  0001a	75 0c		 jne	 SHORT $LN3@Reallocate

; 167  : 		{
; 168  : 			  Free(p);

  0001c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001e	52		 push	 edx
  0001f	ff 50 04	 call	 DWORD PTR [eax+4]

; 169  : 			  return NULL;

  00022	33 c0		 xor	 eax, eax

; 173  : 	}

  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
$LN3@Reallocate:

; 170  : 		}
; 171  : 
; 172  : 		return( ::HeapReAlloc( m_hHeap, 0, p, nBytes ) );

  00028	50		 push	 eax
  00029	52		 push	 edx
  0002a	6a 00		 push	 0
  0002c	ff 71 04	 push	 DWORD PTR [ecx+4]
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapReAlloc@16

; 173  : 	}

  00035	5d		 pop	 ebp
  00036	c2 08 00	 ret	 8
?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z ENDP		; ATL::CWin32Heap::Reallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlmem.h
;	COMDAT ?Free@CWin32Heap@ATL@@UAEXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Free@CWin32Heap@ATL@@UAEXPAX@Z PROC			; ATL::CWin32Heap::Free, COMDAT
; _this$ = ecx

; 148  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 149  : 		if( p != NULL )

  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0c		 je	 SHORT $LN2@Free

; 150  : 		{
; 151  : 			BOOL bSuccess;
; 152  : 
; 153  : 			bSuccess = ::HeapFree( m_hHeap, 0, p );

  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	ff 71 04	 push	 DWORD PTR [ecx+4]
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapFree@12
$LN2@Free:

; 154  : 			ATLASSERT( bSuccess );
; 155  : 		}
; 156  : 	}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?Free@CWin32Heap@ATL@@UAEXPAX@Z ENDP			; ATL::CWin32Heap::Free
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlmem.h
;	COMDAT ?Allocate@CWin32Heap@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_nBytes$ = 8						; size = 4
?Allocate@CWin32Heap@ATL@@UAEPAXI@Z PROC		; ATL::CWin32Heap::Allocate, COMDAT
; _this$ = ecx

; 144  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 145  : 		return( ::HeapAlloc( m_hHeap, 0, nBytes ) );

  00003	ff 75 08	 push	 DWORD PTR _nBytes$[ebp]
  00006	6a 00		 push	 0
  00008	ff 71 04	 push	 DWORD PTR [ecx+4]
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapAlloc@12

; 146  : 	}

  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?Allocate@CWin32Heap@ATL@@UAEPAXI@Z ENDP		; ATL::CWin32Heap::Allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlmem.h
;	COMDAT ??1CWin32Heap@ATL@@UAE@XZ
_TEXT	SEGMENT
??1CWin32Heap@ATL@@UAE@XZ PROC				; ATL::CWin32Heap::~CWin32Heap, COMDAT
; _this$ = ecx

; 110  : #ifdef _ATL_USE_WINAPI_FAMILY_DESKTOP_APP
; 111  : 		if( m_bOwnHeap && (m_hHeap != NULL) )

  00000	80 79 08 00	 cmp	 BYTE PTR [ecx+8], 0
  00004	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CWin32Heap@ATL@@6B@
  0000a	74 0e		 je	 SHORT $LN2@CWin32Heap
  0000c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000f	85 c0		 test	 eax, eax
  00011	74 07		 je	 SHORT $LN2@CWin32Heap

; 112  : 		{
; 113  : 			BOOL bSuccess;
; 114  : 
; 115  : 			bSuccess = ::HeapDestroy( m_hHeap );

  00013	50		 push	 eax
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapDestroy@4
$LN2@CWin32Heap:

; 116  : 			ATLASSERT( bSuccess );
; 117  : 		}
; 118  : #endif
; 119  : 	}

  0001a	c3		 ret	 0
??1CWin32Heap@ATL@@UAE@XZ ENDP				; ATL::CWin32Heap::~CWin32Heap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlwinverapi.h
;	COMDAT ?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z
_TEXT	SEGMENT
_lpCriticalSection$ = 8					; size = 4
_dwSpinCount$ = 12					; size = 4
_Flags$ = 16						; size = 4
?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z PROC ; ATL::_AtlInitializeCriticalSectionEx, COMDAT

; 727  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 728  : #if (NTDDI_VERSION >= NTDDI_VISTA) && !defined(_USING_V110_SDK71_) && !defined(_ATL_XP_TARGETING)
; 729  : 	// InitializeCriticalSectionEx is available in Vista or later, desktop or store apps
; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

  00003	ff 75 10	 push	 DWORD PTR _Flags$[ebp]
  00006	ff 75 0c	 push	 DWORD PTR _dwSpinCount$[ebp]
  00009	ff 75 08	 push	 DWORD PTR _lpCriticalSection$[ebp]
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSectionEx@12

; 731  : #else
; 732  : 	UNREFERENCED_PARAMETER(Flags);
; 733  : 
; 734  : 	// ...otherwise fall back to using InitializeCriticalSectionAndSpinCount.
; 735  : 	return ::InitializeCriticalSectionAndSpinCount(lpCriticalSection, dwSpinCount);
; 736  : #endif
; 737  : }

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z ENDP ; ATL::_AtlInitializeCriticalSectionEx
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlexcept.h
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT
_dwExceptionCode$ = 8					; size = 4
_dwExceptionFlags$ = 12					; size = 4
?_AtlRaiseException@ATL@@YAXKK@Z PROC			; ATL::_AtlRaiseException, COMDAT

; 30   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	RaiseException( dwExceptionCode, dwExceptionFlags, 0, NULL );

  00003	6a 00		 push	 0
  00005	6a 00		 push	 0
  00007	ff 75 0c	 push	 DWORD PTR _dwExceptionFlags$[ebp]
  0000a	ff 75 08	 push	 DWORD PTR _dwExceptionCode$[ebp]
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RaiseException@16

; 32   : }

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_AtlRaiseException@ATL@@YAXKK@Z ENDP			; ATL::_AtlRaiseException
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC		; CObject::Dump, COMDAT
; _this$ = ecx

; 122  : 	{ /* no dumping in release builds */ }

  00000	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
?AssertValid@CObject@@UBEXXZ PROC			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 120  : 	{ /* no asserts in release builds */ }

  00000	c2 00 00	 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC		; CObject::Serialize, COMDAT
; _this$ = ecx

; 106  : 	{ /* CObject does not serialize anything by default */ }

  00000	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT
??1CObject@@UAE@XZ PROC					; CObject::~CObject, COMDAT
; _this$ = ecx

; 104  : 	{ }

  00000	c2 00 00	 ret	 0
??1CObject@@UAE@XZ ENDP					; CObject::~CObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.h
;	COMDAT ?AfxCrtErrorCheck@@YAHH@Z
_TEXT	SEGMENT
_error$ = 8						; size = 4
?AfxCrtErrorCheck@@YAHH@Z PROC				; AfxCrtErrorCheck, COMDAT

; 503  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 504  : 	switch(error)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _error$[ebp]
  00006	83 f9 50	 cmp	 ecx, 80			; 00000050H
  00009	77 17		 ja	 SHORT $LN9@AfxCrtErro
  0000b	0f b6 81 00 00
	00 00		 movzx	 eax, BYTE PTR $LN11@AfxCrtErro[ecx]
  00012	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN12@AfxCrtErro[eax*4]
$LN4@AfxCrtErro:

; 505  : 	{
; 506  : 	case ENOMEM:
; 507  : 		AfxThrowMemoryException();

  00019	e9 00 00 00 00	 jmp	 ?AfxThrowMemoryException@@YGXXZ ; AfxThrowMemoryException
$LN7@AfxCrtErro:

; 518  : 		break;
; 519  : 	}
; 520  : 	return error;

  0001e	8b c1		 mov	 eax, ecx

; 521  : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
$LN9@AfxCrtErro:

; 508  : 		break;
; 509  : 	case EINVAL:
; 510  : 	case ERANGE:
; 511  : 		AfxThrowInvalidArgException();
; 512  : 		break;
; 513  : 	case STRUNCATE:
; 514  : 	case 0:
; 515  : 		break;
; 516  : 	default:
; 517  : 		AfxThrowInvalidArgException();

  00022	e9 00 00 00 00	 jmp	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
  00027	90		 npad	 1
$LN12@AfxCrtErro:

; 521  : }

  00028	00 00 00 00	 DD	 $LN7@AfxCrtErro
  0002c	00 00 00 00	 DD	 $LN4@AfxCrtErro
  00030	00 00 00 00	 DD	 $LN9@AfxCrtErro
  00034	00 00 00 00	 DD	 $LN9@AfxCrtErro
$LN11@AfxCrtErro:
  00038	00		 DB	 0
  00039	03		 DB	 3
  0003a	03		 DB	 3
  0003b	03		 DB	 3
  0003c	03		 DB	 3
  0003d	03		 DB	 3
  0003e	03		 DB	 3
  0003f	03		 DB	 3
  00040	03		 DB	 3
  00041	03		 DB	 3
  00042	03		 DB	 3
  00043	03		 DB	 3
  00044	01		 DB	 1
  00045	03		 DB	 3
  00046	03		 DB	 3
  00047	03		 DB	 3
  00048	03		 DB	 3
  00049	03		 DB	 3
  0004a	03		 DB	 3
  0004b	03		 DB	 3
  0004c	03		 DB	 3
  0004d	03		 DB	 3
  0004e	02		 DB	 2
  0004f	03		 DB	 3
  00050	03		 DB	 3
  00051	03		 DB	 3
  00052	03		 DB	 3
  00053	03		 DB	 3
  00054	03		 DB	 3
  00055	03		 DB	 3
  00056	03		 DB	 3
  00057	03		 DB	 3
  00058	03		 DB	 3
  00059	03		 DB	 3
  0005a	02		 DB	 2
  0005b	03		 DB	 3
  0005c	03		 DB	 3
  0005d	03		 DB	 3
  0005e	03		 DB	 3
  0005f	03		 DB	 3
  00060	03		 DB	 3
  00061	03		 DB	 3
  00062	03		 DB	 3
  00063	03		 DB	 3
  00064	03		 DB	 3
  00065	03		 DB	 3
  00066	03		 DB	 3
  00067	03		 DB	 3
  00068	03		 DB	 3
  00069	03		 DB	 3
  0006a	03		 DB	 3
  0006b	03		 DB	 3
  0006c	03		 DB	 3
  0006d	03		 DB	 3
  0006e	03		 DB	 3
  0006f	03		 DB	 3
  00070	03		 DB	 3
  00071	03		 DB	 3
  00072	03		 DB	 3
  00073	03		 DB	 3
  00074	03		 DB	 3
  00075	03		 DB	 3
  00076	03		 DB	 3
  00077	03		 DB	 3
  00078	03		 DB	 3
  00079	03		 DB	 3
  0007a	03		 DB	 3
  0007b	03		 DB	 3
  0007c	03		 DB	 3
  0007d	03		 DB	 3
  0007e	03		 DB	 3
  0007f	03		 DB	 3
  00080	03		 DB	 3
  00081	03		 DB	 3
  00082	03		 DB	 3
  00083	03		 DB	 3
  00084	03		 DB	 3
  00085	03		 DB	 3
  00086	03		 DB	 3
  00087	03		 DB	 3
  00088	00		 DB	 0
?AfxCrtErrorCheck@@YAHH@Z ENDP				; AfxCrtErrorCheck
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1771 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1392 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	6a ff		 push	 -1
  0000e	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00011	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	ff 70 04	 push	 DWORD PTR [eax+4]
  0001b	83 c9 01	 or	 ecx, 1
  0001e	51		 push	 ecx
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf

; 1393 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1394 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1395 : 
; 1396 :         return _Result < 0 ? -1 : _Result;

  00025	83 c9 ff	 or	 ecx, -1
  00028	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002b	85 c0		 test	 eax, eax
  0002d	0f 48 c1	 cmovs	 eax, ecx

; 1772 :         int _Result;
; 1773 :         va_list _ArgList;
; 1774 :         __crt_va_start(_ArgList, _Format);
; 1775 : 
; 1776 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
; 1777 : 
; 1778 :         __crt_va_end(_ArgList);
; 1779 :         return _Result;
; 1780 :     }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\ExControl\StdAfx.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
