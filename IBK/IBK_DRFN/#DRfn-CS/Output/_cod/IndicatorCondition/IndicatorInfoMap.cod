; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\IndicatorCondition\IndicatorInfoMap.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1CObject@@UAE@XZ				; CObject::~CObject
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	??0CIndicatorList@@QAE@ABV0@@Z			; CIndicatorList::CIndicatorList
PUBLIC	??4CIndicatorList@@QAEAAV0@ABV0@@Z		; CIndicatorList::operator=
PUBLIC	??_GCIndicatorList@@UAEPAXI@Z			; CIndicatorList::`scalar deleting destructor'
PUBLIC	??_ECIndicatorList@@UAEPAXI@Z			; CIndicatorList::`vector deleting destructor'
PUBLIC	??1?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@UAE@XZ ; CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *>::~CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *>
PUBLIC	??_G?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@UAEPAXI@Z ; CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *>::`scalar deleting destructor'
PUBLIC	??0CIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z ; CIndicatorInfoMap::CIndicatorInfoMap
PUBLIC	??1CIndicatorInfoMap@@UAE@XZ			; CIndicatorInfoMap::~CIndicatorInfoMap
PUBLIC	?Delete@CIndicatorInfoMap@@QAEHPAVCIndicatorInfo@@@Z ; CIndicatorInfoMap::Delete
PUBLIC	?DeleteAll@CIndicatorInfoMap@@QAEHXZ		; CIndicatorInfoMap::DeleteAll
PUBLIC	?GetIndicatorNameList@CIndicatorInfoMap@@QBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z ; CIndicatorInfoMap::GetIndicatorNameList
PUBLIC	?RemoveAllIndicator@CIndicatorInfoMap@@UAEHPBD@Z ; CIndicatorInfoMap::RemoveAllIndicator
PUBLIC	?GetFirstIndicatorInfo@CIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@W4CHART_MODE@CChartInfo@@@Z ; CIndicatorInfoMap::GetFirstIndicatorInfo
PUBLIC	?GetNextIndicatorInfo@CIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z ; CIndicatorInfoMap::GetNextIndicatorInfo
PUBLIC	?GetGraphNameList@CIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z ; CIndicatorInfoMap::GetGraphNameList
PUBLIC	?GetAllIndicatorNameWithGroupName@CIndicatorInfoMap@@UBEHAAVCIndicatorGroupDataList@@W4CHART_MODE@CChartInfo@@@Z ; CIndicatorInfoMap::GetAllIndicatorNameWithGroupName
PUBLIC	?GetIndicatorInfo@CIndicatorInfoMap@@QAEPAVCIndicatorInfo@@PBDW4CHART_MODE@CChartInfo@@@Z ; CIndicatorInfoMap::GetIndicatorInfo
PUBLIC	??_GCIndicatorInfoMap@@UAEPAXI@Z		; CIndicatorInfoMap::`scalar deleting destructor'
PUBLIC	??0CDefaultIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z ; CDefaultIndicatorInfoMap::CDefaultIndicatorInfoMap
PUBLIC	??1CDefaultIndicatorInfoMap@@UAE@XZ		; CDefaultIndicatorInfoMap::~CDefaultIndicatorInfoMap
PUBLIC	?AddIndicatorInfo@CDefaultIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z ; CDefaultIndicatorInfoMap::AddIndicatorInfo
PUBLIC	?GetAllIndicatorNameWithGroupName@CDefaultIndicatorInfoMap@@UBEHAAVCIndicatorGroupDataList@@W4CHART_MODE@CChartInfo@@@Z ; CDefaultIndicatorInfoMap::GetAllIndicatorNameWithGroupName
PUBLIC	??_GCDefaultIndicatorInfoMap@@UAEPAXI@Z		; CDefaultIndicatorInfoMap::`scalar deleting destructor'
PUBLIC	??0CGraphIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z ; CGraphIndicatorInfoMap::CGraphIndicatorInfoMap
PUBLIC	??1CGraphIndicatorInfoMap@@UAE@XZ		; CGraphIndicatorInfoMap::~CGraphIndicatorInfoMap
PUBLIC	?AddIndicatorInfo@CGraphIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z ; CGraphIndicatorInfoMap::AddIndicatorInfo
PUBLIC	?RemoveAllIndicator@CGraphIndicatorInfoMap@@UAEHPBD@Z ; CGraphIndicatorInfoMap::RemoveAllIndicator
PUBLIC	?GetFirstIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z ; CGraphIndicatorInfoMap::GetFirstIndicatorInfo
PUBLIC	?GetNextIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z ; CGraphIndicatorInfoMap::GetNextIndicatorInfo
PUBLIC	?GetGraphNameList@CGraphIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z ; CGraphIndicatorInfoMap::GetGraphNameList
PUBLIC	??_GCGraphIndicatorInfoMap@@UAEPAXI@Z		; CGraphIndicatorInfoMap::`scalar deleting destructor'
PUBLIC	??0CIndicatorInfo@@QAE@ABV0@@Z			; CIndicatorInfo::CIndicatorInfo
PUBLIC	??4CIndicatorInfo@@QAEAAV0@ABV0@@Z		; CIndicatorInfo::operator=
PUBLIC	??_GCIndicatorInfo@@UAEPAXI@Z			; CIndicatorInfo::`scalar deleting destructor'
PUBLIC	??_ECIndicatorInfo@@UAEPAXI@Z			; CIndicatorInfo::`vector deleting destructor'
PUBLIC	?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::AddTail
PUBLIC	?NewNode@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@IAEPAUCNode@1@PAU21@0@Z ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::NewNode
PUBLIC	??_FCIndicatorGroupData@@QAEXXZ			; CIndicatorGroupData::`default constructor closure'
PUBLIC	??0?$CList@PAVCIndicatorGroupData@@PAV1@@@QAE@H@Z ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::CList<CIndicatorGroupData *,CIndicatorGroupData *>
PUBLIC	?AddTail@?$CList@PAVCIndicatorGroupData@@PAV1@@@QAEPAU__POSITION@@PAVCIndicatorGroupData@@@Z ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::AddTail
PUBLIC	?RemoveAll@?$CList@PAVCIndicatorGroupData@@PAV1@@@QAEXXZ ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::RemoveAll
PUBLIC	?NewNode@?$CList@PAVCIndicatorGroupData@@PAV1@@@IAEPAUCNode@1@PAU21@0@Z ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::NewNode
PUBLIC	??1?$CList@PAVCIndicatorGroupData@@PAV1@@@UAE@XZ ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::~CList<CIndicatorGroupData *,CIndicatorGroupData *>
PUBLIC	?Serialize@?$CList@PAVCIndicatorGroupData@@PAV1@@@UAEXAAVCArchive@@@Z ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::Serialize
PUBLIC	??_G?$CList@PAVCIndicatorGroupData@@PAV1@@@UAEPAXI@Z ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::`scalar deleting destructor'
PUBLIC	??0CIndicatorGroupDataList@@QAE@XZ		; CIndicatorGroupDataList::CIndicatorGroupDataList
PUBLIC	??_GCIndicatorGroupDataList@@UAEPAXI@Z		; CIndicatorGroupDataList::`scalar deleting destructor'
PUBLIC	??_ECIndicatorGroupDataList@@UAEPAXI@Z		; CIndicatorGroupDataList::`vector deleting destructor'
PUBLIC	??$SerializeElements@PAVCIndicatorGroupData@@@@YGXAAVCArchive@@PAPAVCIndicatorGroupData@@H@Z ; SerializeElements<CIndicatorGroupData *>
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7CIndicatorList@@6B@				; CIndicatorList::`vftable'
PUBLIC	??_7?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@6B@ ; CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *>::`vftable'
PUBLIC	??_7CIndicatorInfoMap@@6B@			; CIndicatorInfoMap::`vftable'
PUBLIC	??_7CDefaultIndicatorInfoMap@@6B@		; CDefaultIndicatorInfoMap::`vftable'
PUBLIC	??_7CGraphIndicatorInfoMap@@6B@			; CGraphIndicatorInfoMap::`vftable'
PUBLIC	??_7CIndicatorInfo@@6B@				; CIndicatorInfo::`vftable'
PUBLIC	??_7?$CList@PAVCIndicatorGroupData@@PAV1@@@6B@	; CList<CIndicatorGroupData *,CIndicatorGroupData *>::`vftable'
PUBLIC	??_7CIndicatorGroupDataList@@6B@		; CIndicatorGroupDataList::`vftable'
PUBLIC	??_R4CIndicatorInfo@@6B@			; CIndicatorInfo::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCIndicatorInfo@@@8			; CIndicatorInfo `RTTI Type Descriptor'
PUBLIC	??_R3CIndicatorInfo@@8				; CIndicatorInfo::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CIndicatorInfo@@8				; CIndicatorInfo::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CIndicatorInfo@@8			; CIndicatorInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CIndicatorGroupDataList@@6B@		; CIndicatorGroupDataList::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCIndicatorGroupDataList@@@8		; CIndicatorGroupDataList `RTTI Type Descriptor'
PUBLIC	??_R3CIndicatorGroupDataList@@8			; CIndicatorGroupDataList::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CIndicatorGroupDataList@@8			; CIndicatorGroupDataList::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CIndicatorGroupDataList@@8	; CIndicatorGroupDataList::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CIndicatorList@@6B@			; CIndicatorList::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCIndicatorList@@@8			; CIndicatorList `RTTI Type Descriptor'
PUBLIC	??_R3CIndicatorList@@8				; CIndicatorList::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CIndicatorList@@8				; CIndicatorList::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CIndicatorList@@8			; CIndicatorList::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@6B@ ; CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@@8 ; CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *> `RTTI Type Descriptor'
PUBLIC	??_R3?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@8 ; CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@8 ; CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@8 ; CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CMapStringToPtr@@8		; CMapStringToPtr::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCMapStringToPtr@@@8			; CMapStringToPtr `RTTI Type Descriptor'
PUBLIC	??_R3CMapStringToPtr@@8				; CMapStringToPtr::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMapStringToPtr@@8				; CMapStringToPtr::`RTTI Base Class Array'
PUBLIC	??_R4CIndicatorInfoMap@@6B@			; CIndicatorInfoMap::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCIndicatorInfoMap@@@8			; CIndicatorInfoMap `RTTI Type Descriptor'
PUBLIC	??_R3CIndicatorInfoMap@@8			; CIndicatorInfoMap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CIndicatorInfoMap@@8			; CIndicatorInfoMap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CIndicatorInfoMap@@8		; CIndicatorInfoMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDefaultIndicatorInfoMap@@6B@		; CDefaultIndicatorInfoMap::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDefaultIndicatorInfoMap@@@8		; CDefaultIndicatorInfoMap `RTTI Type Descriptor'
PUBLIC	??_R3CDefaultIndicatorInfoMap@@8		; CDefaultIndicatorInfoMap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDefaultIndicatorInfoMap@@8		; CDefaultIndicatorInfoMap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDefaultIndicatorInfoMap@@8	; CDefaultIndicatorInfoMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CGraphIndicatorInfoMap@@6B@		; CGraphIndicatorInfoMap::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGraphIndicatorInfoMap@@@8		; CGraphIndicatorInfoMap `RTTI Type Descriptor'
PUBLIC	??_R3CGraphIndicatorInfoMap@@8			; CGraphIndicatorInfoMap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphIndicatorInfoMap@@8			; CGraphIndicatorInfoMap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphIndicatorInfoMap@@8		; CGraphIndicatorInfoMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CList@PAVCIndicatorGroupData@@PAV1@@@6B@	; CList<CIndicatorGroupData *,CIndicatorGroupData *>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CList@PAVCIndicatorGroupData@@PAV1@@@@8 ; CList<CIndicatorGroupData *,CIndicatorGroupData *> `RTTI Type Descriptor'
PUBLIC	??_R3?$CList@PAVCIndicatorGroupData@@PAV1@@@8	; CList<CIndicatorGroupData *,CIndicatorGroupData *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CList@PAVCIndicatorGroupData@@PAV1@@@8	; CList<CIndicatorGroupData *,CIndicatorGroupData *>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CList@PAVCIndicatorGroupData@@PAV1@@@8 ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	___std_terminate:PROC
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?AfxThrowArchiveException@@YGXHPBD@Z:PROC	; AfxThrowArchiveException
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CObject::GetRuntimeClass
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z:PROC
EXTRN	?Read@CArchive@@QAEIPAXI@Z:PROC			; CArchive::Read
EXTRN	?Write@CArchive@@QAEXPBXI@Z:PROC		; CArchive::Write
EXTRN	?ReadCount@CArchive@@QAEKXZ:PROC		; CArchive::ReadCount
EXTRN	?WriteCount@CArchive@@QAEXK@Z:PROC		; CArchive::WriteCount
EXTRN	??0CStringList@@QAE@H@Z:PROC			; CStringList::CStringList
EXTRN	?AddTail@CStringList@@QAEPAU__POSITION@@PBD@Z:PROC ; CStringList::AddTail
EXTRN	??1CStringList@@UAE@XZ:PROC			; CStringList::~CStringList
EXTRN	?GetRuntimeClass@CMapStringToPtr@@UBEPAUCRuntimeClass@@XZ:PROC ; CMapStringToPtr::GetRuntimeClass
EXTRN	??0CMapStringToPtr@@QAE@H@Z:PROC		; CMapStringToPtr::CMapStringToPtr
EXTRN	?Lookup@CMapStringToPtr@@QBEHPBDAAPAX@Z:PROC	; CMapStringToPtr::Lookup
EXTRN	??ACMapStringToPtr@@QAEAAPAXPBD@Z:PROC		; CMapStringToPtr::operator[]
EXTRN	?RemoveKey@CMapStringToPtr@@QAEHPBD@Z:PROC	; CMapStringToPtr::RemoveKey
EXTRN	?RemoveAll@CMapStringToPtr@@QAEXXZ:PROC		; CMapStringToPtr::RemoveAll
EXTRN	?GetNextAssoc@CMapStringToPtr@@QBEXAAPAU__POSITION@@AAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAPAX@Z:PROC ; CMapStringToPtr::GetNextAssoc
EXTRN	?InitHashTable@CMapStringToPtr@@QAEXIH@Z:PROC	; CMapStringToPtr::InitHashTable
EXTRN	??1CMapStringToPtr@@UAE@XZ:PROC			; CMapStringToPtr::~CMapStringToPtr
EXTRN	?Create@CPlex@@SGPAU1@AAPAU1@II@Z:PROC		; CPlex::Create
EXTRN	?FreeDataChain@CPlex@@QAEXXZ:PROC		; CPlex::FreeDataChain
EXTRN	??1CIndicatorList@@UAE@XZ:PROC			; CIndicatorList::~CIndicatorList
EXTRN	??_E?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@UAEPAXI@Z:PROC ; CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *>::`vector deleting destructor'
EXTRN	??_ECIndicatorInfoMap@@UAEPAXI@Z:PROC		; CIndicatorInfoMap::`vector deleting destructor'
EXTRN	??_ECDefaultIndicatorInfoMap@@UAEPAXI@Z:PROC	; CDefaultIndicatorInfoMap::`vector deleting destructor'
EXTRN	??_ECGraphIndicatorInfoMap@@UAEPAXI@Z:PROC	; CGraphIndicatorInfoMap::`vector deleting destructor'
EXTRN	??1CIndicatorInfo@@UAE@XZ:PROC			; CIndicatorInfo::~CIndicatorInfo
EXTRN	?GetGroupName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:PROC ; CIndicatorInfo::GetGroupName
EXTRN	?GetIndicatorName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:PROC ; CIndicatorInfo::GetIndicatorName
EXTRN	?GetGraphName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:PROC ; CIndicatorInfo::GetGraphName
EXTRN	??0CIndicatorGroupData@@QAE@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:PROC ; CIndicatorGroupData::CIndicatorGroupData
EXTRN	??1CIndicatorGroupDataList@@UAE@XZ:PROC		; CIndicatorGroupDataList::~CIndicatorGroupDataList
EXTRN	?AddTail_IndiName@CIndicatorGroupDataList@@QAE_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0_N@Z:PROC ; CIndicatorGroupDataList::AddTail_IndiName
EXTRN	??_E?$CList@PAVCIndicatorGroupData@@PAV1@@@UAEPAXI@Z:PROC ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::`vector deleting destructor'
EXTRN	?IsIndicatorInThisMode@IMetaTable@@QAEHPBDW4CHART_MODE@CChartInfo@@@Z:PROC ; IMetaTable::IsIndicatorInThisMode
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?g_iMetaTable@@3VIMetaTable@@A:BYTE		; g_iMetaTable
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@?$CList@PAVCIndicatorGroupData@@PAV1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CList@PAVCIndicatorGroupData@@PAV1@@@8 DD FLAT:??_R0?AV?$CList@PAVCIndicatorGroupData@@PAV1@@@@8 ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CList@PAVCIndicatorGroupData@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CList@PAVCIndicatorGroupData@@PAV1@@@8
rdata$r	SEGMENT
??_R2?$CList@PAVCIndicatorGroupData@@PAV1@@@8 DD FLAT:??_R1A@?0A@EA@?$CList@PAVCIndicatorGroupData@@PAV1@@@8 ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CList@PAVCIndicatorGroupData@@PAV1@@@8
rdata$r	SEGMENT
??_R3?$CList@PAVCIndicatorGroupData@@PAV1@@@8 DD 00H	; CList<CIndicatorGroupData *,CIndicatorGroupData *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CList@PAVCIndicatorGroupData@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CList@PAVCIndicatorGroupData@@PAV1@@@@8
data$rs	SEGMENT
??_R0?AV?$CList@PAVCIndicatorGroupData@@PAV1@@@@8 DD FLAT:??_7type_info@@6B@ ; CList<CIndicatorGroupData *,CIndicatorGroupData *> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CList@PAVCIndicatorGroupData@@PAV1@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CList@PAVCIndicatorGroupData@@PAV1@@@6B@
rdata$r	SEGMENT
??_R4?$CList@PAVCIndicatorGroupData@@PAV1@@@6B@ DD 00H	; CList<CIndicatorGroupData *,CIndicatorGroupData *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CList@PAVCIndicatorGroupData@@PAV1@@@@8
	DD	FLAT:??_R3?$CList@PAVCIndicatorGroupData@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphIndicatorInfoMap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphIndicatorInfoMap@@8 DD FLAT:??_R0?AVCGraphIndicatorInfoMap@@@8 ; CGraphIndicatorInfoMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphIndicatorInfoMap@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphIndicatorInfoMap@@8
rdata$r	SEGMENT
??_R2CGraphIndicatorInfoMap@@8 DD FLAT:??_R1A@?0A@EA@CGraphIndicatorInfoMap@@8 ; CGraphIndicatorInfoMap::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CIndicatorInfoMap@@8
	DD	FLAT:??_R1A@?0A@EA@?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@8
	DD	FLAT:??_R1A@?0A@EA@CMapStringToPtr@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphIndicatorInfoMap@@8
rdata$r	SEGMENT
??_R3CGraphIndicatorInfoMap@@8 DD 00H			; CGraphIndicatorInfoMap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CGraphIndicatorInfoMap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphIndicatorInfoMap@@@8
data$rs	SEGMENT
??_R0?AVCGraphIndicatorInfoMap@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphIndicatorInfoMap `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphIndicatorInfoMap@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CGraphIndicatorInfoMap@@6B@
rdata$r	SEGMENT
??_R4CGraphIndicatorInfoMap@@6B@ DD 00H			; CGraphIndicatorInfoMap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGraphIndicatorInfoMap@@@8
	DD	FLAT:??_R3CGraphIndicatorInfoMap@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDefaultIndicatorInfoMap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDefaultIndicatorInfoMap@@8 DD FLAT:??_R0?AVCDefaultIndicatorInfoMap@@@8 ; CDefaultIndicatorInfoMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDefaultIndicatorInfoMap@@8
rdata$r	ENDS
;	COMDAT ??_R2CDefaultIndicatorInfoMap@@8
rdata$r	SEGMENT
??_R2CDefaultIndicatorInfoMap@@8 DD FLAT:??_R1A@?0A@EA@CDefaultIndicatorInfoMap@@8 ; CDefaultIndicatorInfoMap::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CIndicatorInfoMap@@8
	DD	FLAT:??_R1A@?0A@EA@?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@8
	DD	FLAT:??_R1A@?0A@EA@CMapStringToPtr@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDefaultIndicatorInfoMap@@8
rdata$r	SEGMENT
??_R3CDefaultIndicatorInfoMap@@8 DD 00H			; CDefaultIndicatorInfoMap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CDefaultIndicatorInfoMap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDefaultIndicatorInfoMap@@@8
data$rs	SEGMENT
??_R0?AVCDefaultIndicatorInfoMap@@@8 DD FLAT:??_7type_info@@6B@ ; CDefaultIndicatorInfoMap `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDefaultIndicatorInfoMap@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CDefaultIndicatorInfoMap@@6B@
rdata$r	SEGMENT
??_R4CDefaultIndicatorInfoMap@@6B@ DD 00H		; CDefaultIndicatorInfoMap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDefaultIndicatorInfoMap@@@8
	DD	FLAT:??_R3CDefaultIndicatorInfoMap@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CIndicatorInfoMap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CIndicatorInfoMap@@8 DD FLAT:??_R0?AVCIndicatorInfoMap@@@8 ; CIndicatorInfoMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CIndicatorInfoMap@@8
rdata$r	ENDS
;	COMDAT ??_R2CIndicatorInfoMap@@8
rdata$r	SEGMENT
??_R2CIndicatorInfoMap@@8 DD FLAT:??_R1A@?0A@EA@CIndicatorInfoMap@@8 ; CIndicatorInfoMap::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@8
	DD	FLAT:??_R1A@?0A@EA@CMapStringToPtr@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CIndicatorInfoMap@@8
rdata$r	SEGMENT
??_R3CIndicatorInfoMap@@8 DD 00H			; CIndicatorInfoMap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CIndicatorInfoMap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCIndicatorInfoMap@@@8
data$rs	SEGMENT
??_R0?AVCIndicatorInfoMap@@@8 DD FLAT:??_7type_info@@6B@ ; CIndicatorInfoMap `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCIndicatorInfoMap@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CIndicatorInfoMap@@6B@
rdata$r	SEGMENT
??_R4CIndicatorInfoMap@@6B@ DD 00H			; CIndicatorInfoMap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCIndicatorInfoMap@@@8
	DD	FLAT:??_R3CIndicatorInfoMap@@8
rdata$r	ENDS
;	COMDAT ??_R2CMapStringToPtr@@8
rdata$r	SEGMENT
??_R2CMapStringToPtr@@8 DD FLAT:??_R1A@?0A@EA@CMapStringToPtr@@8 ; CMapStringToPtr::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CMapStringToPtr@@8
rdata$r	SEGMENT
??_R3CMapStringToPtr@@8 DD 00H				; CMapStringToPtr::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CMapStringToPtr@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMapStringToPtr@@@8
data$rs	SEGMENT
??_R0?AVCMapStringToPtr@@@8 DD FLAT:??_7type_info@@6B@	; CMapStringToPtr `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMapStringToPtr@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CMapStringToPtr@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMapStringToPtr@@8 DD FLAT:??_R0?AVCMapStringToPtr@@@8 ; CMapStringToPtr::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMapStringToPtr@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@8 DD FLAT:??_R0?AV?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@@8 ; CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@8
rdata$r	SEGMENT
??_R2?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@8 DD FLAT:??_R1A@?0A@EA@?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@8 ; CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CMapStringToPtr@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@8
rdata$r	SEGMENT
??_R3?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@8 DD 00H ; CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@@8
data$rs	SEGMENT
??_R0?AV?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@@8 DD FLAT:??_7type_info@@6B@ ; CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$Str'
	DB	'TraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo'
	DB	'@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@6B@
rdata$r	SEGMENT
??_R4?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@6B@ DD 00H ; CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@@8
	DD	FLAT:??_R3?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CIndicatorList@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CIndicatorList@@8 DD FLAT:??_R0?AVCIndicatorList@@@8 ; CIndicatorList::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CIndicatorList@@8
rdata$r	ENDS
;	COMDAT ??_R2CIndicatorList@@8
rdata$r	SEGMENT
??_R2CIndicatorList@@8 DD FLAT:??_R1A@?0A@EA@CIndicatorList@@8 ; CIndicatorList::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CIndicatorList@@8
rdata$r	SEGMENT
??_R3CIndicatorList@@8 DD 00H				; CIndicatorList::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CIndicatorList@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCIndicatorList@@@8
data$rs	SEGMENT
??_R0?AVCIndicatorList@@@8 DD FLAT:??_7type_info@@6B@	; CIndicatorList `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCIndicatorList@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CIndicatorList@@6B@
rdata$r	SEGMENT
??_R4CIndicatorList@@6B@ DD 00H				; CIndicatorList::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCIndicatorList@@@8
	DD	FLAT:??_R3CIndicatorList@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CIndicatorGroupDataList@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CIndicatorGroupDataList@@8 DD FLAT:??_R0?AVCIndicatorGroupDataList@@@8 ; CIndicatorGroupDataList::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CIndicatorGroupDataList@@8
rdata$r	ENDS
;	COMDAT ??_R2CIndicatorGroupDataList@@8
rdata$r	SEGMENT
??_R2CIndicatorGroupDataList@@8 DD FLAT:??_R1A@?0A@EA@CIndicatorGroupDataList@@8 ; CIndicatorGroupDataList::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CIndicatorGroupDataList@@8
rdata$r	SEGMENT
??_R3CIndicatorGroupDataList@@8 DD 00H			; CIndicatorGroupDataList::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CIndicatorGroupDataList@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCIndicatorGroupDataList@@@8
data$rs	SEGMENT
??_R0?AVCIndicatorGroupDataList@@@8 DD FLAT:??_7type_info@@6B@ ; CIndicatorGroupDataList `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCIndicatorGroupDataList@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CIndicatorGroupDataList@@6B@
rdata$r	SEGMENT
??_R4CIndicatorGroupDataList@@6B@ DD 00H		; CIndicatorGroupDataList::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCIndicatorGroupDataList@@@8
	DD	FLAT:??_R3CIndicatorGroupDataList@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CIndicatorInfo@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CIndicatorInfo@@8 DD FLAT:??_R0?AVCIndicatorInfo@@@8 ; CIndicatorInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CIndicatorInfo@@8
rdata$r	ENDS
;	COMDAT ??_R2CIndicatorInfo@@8
rdata$r	SEGMENT
??_R2CIndicatorInfo@@8 DD FLAT:??_R1A@?0A@EA@CIndicatorInfo@@8 ; CIndicatorInfo::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CIndicatorInfo@@8
rdata$r	SEGMENT
??_R3CIndicatorInfo@@8 DD 00H				; CIndicatorInfo::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CIndicatorInfo@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCIndicatorInfo@@@8
data$rs	SEGMENT
??_R0?AVCIndicatorInfo@@@8 DD FLAT:??_7type_info@@6B@	; CIndicatorInfo `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCIndicatorInfo@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CIndicatorInfo@@6B@
rdata$r	SEGMENT
??_R4CIndicatorInfo@@6B@ DD 00H				; CIndicatorInfo::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCIndicatorInfo@@@8
	DD	FLAT:??_R3CIndicatorInfo@@8
rdata$r	ENDS
;	COMDAT ??_7CIndicatorGroupDataList@@6B@
CONST	SEGMENT
??_7CIndicatorGroupDataList@@6B@ DD FLAT:??_R4CIndicatorGroupDataList@@6B@ ; CIndicatorGroupDataList::`vftable'
	DD	FLAT:??_ECIndicatorGroupDataList@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CList@PAVCIndicatorGroupData@@PAV1@@@6B@
CONST	SEGMENT
??_7?$CList@PAVCIndicatorGroupData@@PAV1@@@6B@ DD FLAT:??_R4?$CList@PAVCIndicatorGroupData@@PAV1@@@6B@ ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CList@PAVCIndicatorGroupData@@PAV1@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CList@PAVCIndicatorGroupData@@PAV1@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CIndicatorInfo@@6B@
CONST	SEGMENT
??_7CIndicatorInfo@@6B@ DD FLAT:??_R4CIndicatorInfo@@6B@ ; CIndicatorInfo::`vftable'
	DD	FLAT:??_ECIndicatorInfo@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CGraphIndicatorInfoMap@@6B@
CONST	SEGMENT
??_7CGraphIndicatorInfoMap@@6B@ DD FLAT:??_R4CGraphIndicatorInfoMap@@6B@ ; CGraphIndicatorInfoMap::`vftable'
	DD	FLAT:?GetRuntimeClass@CMapStringToPtr@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECGraphIndicatorInfoMap@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?AddIndicatorInfo@CGraphIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z
	DD	FLAT:?RemoveAllIndicator@CGraphIndicatorInfoMap@@UAEHPBD@Z
	DD	FLAT:?GetFirstIndicatorInfo@CIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@W4CHART_MODE@CChartInfo@@@Z
	DD	FLAT:?GetNextIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z
	DD	FLAT:?GetGraphNameList@CGraphIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z
	DD	FLAT:?GetAllIndicatorNameWithGroupName@CIndicatorInfoMap@@UBEHAAVCIndicatorGroupDataList@@W4CHART_MODE@CChartInfo@@@Z
	DD	FLAT:?GetFirstIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z
CONST	ENDS
;	COMDAT ??_7CDefaultIndicatorInfoMap@@6B@
CONST	SEGMENT
??_7CDefaultIndicatorInfoMap@@6B@ DD FLAT:??_R4CDefaultIndicatorInfoMap@@6B@ ; CDefaultIndicatorInfoMap::`vftable'
	DD	FLAT:?GetRuntimeClass@CMapStringToPtr@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDefaultIndicatorInfoMap@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?AddIndicatorInfo@CDefaultIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z
	DD	FLAT:?RemoveAllIndicator@CIndicatorInfoMap@@UAEHPBD@Z
	DD	FLAT:?GetFirstIndicatorInfo@CIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@W4CHART_MODE@CChartInfo@@@Z
	DD	FLAT:?GetNextIndicatorInfo@CIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z
	DD	FLAT:?GetGraphNameList@CIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z
	DD	FLAT:?GetAllIndicatorNameWithGroupName@CDefaultIndicatorInfoMap@@UBEHAAVCIndicatorGroupDataList@@W4CHART_MODE@CChartInfo@@@Z
CONST	ENDS
;	COMDAT ??_7CIndicatorInfoMap@@6B@
CONST	SEGMENT
??_7CIndicatorInfoMap@@6B@ DD FLAT:??_R4CIndicatorInfoMap@@6B@ ; CIndicatorInfoMap::`vftable'
	DD	FLAT:?GetRuntimeClass@CMapStringToPtr@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECIndicatorInfoMap@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:__purecall
	DD	FLAT:?RemoveAllIndicator@CIndicatorInfoMap@@UAEHPBD@Z
	DD	FLAT:?GetFirstIndicatorInfo@CIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@W4CHART_MODE@CChartInfo@@@Z
	DD	FLAT:?GetNextIndicatorInfo@CIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z
	DD	FLAT:?GetGraphNameList@CIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z
	DD	FLAT:?GetAllIndicatorNameWithGroupName@CIndicatorInfoMap@@UBEHAAVCIndicatorGroupDataList@@W4CHART_MODE@CChartInfo@@@Z
CONST	ENDS
;	COMDAT ??_7?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@6B@
CONST	SEGMENT
??_7?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@6B@ DD FLAT:??_R4?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@6B@ ; CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *>::`vftable'
	DD	FLAT:?GetRuntimeClass@CMapStringToPtr@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CIndicatorList@@6B@
CONST	SEGMENT
??_7CIndicatorList@@6B@ DD FLAT:??_R4CIndicatorList@@6B@ ; CIndicatorList::`vftable'
	DD	FLAT:??_ECIndicatorList@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$rs	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$rs	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECIndicatorGroupDataList@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CList@PAVCIndicatorGroupData@@PAV1@@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CList@PAVCIndicatorGroupData@@PAV1@@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$CList@PAVCIndicatorGroupData@@PAV1@@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CList@PAVCIndicatorGroupData@@PAV1@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_FCIndicatorGroupData@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_FCIndicatorGroupData@@QAEXXZ$0
__ehfuncinfo$??_FCIndicatorGroupData@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_FCIndicatorGroupData@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$0
__ehfuncinfo$?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECIndicatorInfo@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetGraphNameList@CGraphIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetGraphNameList@CGraphIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetGraphNameList@CGraphIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetGraphNameList@CGraphIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z$3
__ehfuncinfo$?GetGraphNameList@CGraphIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetGraphNameList@CGraphIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetNextIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetNextIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetNextIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z$1
__ehfuncinfo$?GetNextIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetNextIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetFirstIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetFirstIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetFirstIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z$1
__ehfuncinfo$?GetFirstIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetFirstIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RemoveAllIndicator@CGraphIndicatorInfoMap@@UAEHPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemoveAllIndicator@CGraphIndicatorInfoMap@@UAEHPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RemoveAllIndicator@CGraphIndicatorInfoMap@@UAEHPBD@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?RemoveAllIndicator@CGraphIndicatorInfoMap@@UAEHPBD@Z$3
__ehfuncinfo$?RemoveAllIndicator@CGraphIndicatorInfoMap@@UAEHPBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?RemoveAllIndicator@CGraphIndicatorInfoMap@@UAEHPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddIndicatorInfo@CGraphIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddIndicatorInfo@CGraphIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z$2
__ehfuncinfo$?AddIndicatorInfo@CGraphIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddIndicatorInfo@CGraphIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CGraphIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CGraphIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z$1
__ehfuncinfo$??0CGraphIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CGraphIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetAllIndicatorNameWithGroupName@CDefaultIndicatorInfoMap@@UBEHAAVCIndicatorGroupDataList@@W4CHART_MODE@CChartInfo@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetAllIndicatorNameWithGroupName@CDefaultIndicatorInfoMap@@UBEHAAVCIndicatorGroupDataList@@W4CHART_MODE@CChartInfo@@@Z$0
__ehfuncinfo$?GetAllIndicatorNameWithGroupName@CDefaultIndicatorInfoMap@@UBEHAAVCIndicatorGroupDataList@@W4CHART_MODE@CChartInfo@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetAllIndicatorNameWithGroupName@CDefaultIndicatorInfoMap@@UBEHAAVCIndicatorGroupDataList@@W4CHART_MODE@CChartInfo@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddIndicatorInfo@CDefaultIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddIndicatorInfo@CDefaultIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z$2
__ehfuncinfo$?AddIndicatorInfo@CDefaultIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddIndicatorInfo@CDefaultIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CDefaultIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDefaultIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDefaultIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z$0
__ehfuncinfo$??0CDefaultIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CDefaultIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetIndicatorNameList@CIndicatorInfoMap@@QBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetIndicatorNameList@CIndicatorInfoMap@@QBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetIndicatorNameList@CIndicatorInfoMap@@QBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?GetIndicatorNameList@CIndicatorInfoMap@@QBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z$2
__ehfuncinfo$?GetIndicatorNameList@CIndicatorInfoMap@@QBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetIndicatorNameList@CIndicatorInfoMap@@QBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DeleteAll@CIndicatorInfoMap@@QAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DeleteAll@CIndicatorInfoMap@@QAEHXZ$0
__ehfuncinfo$?DeleteAll@CIndicatorInfoMap@@QAEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DeleteAll@CIndicatorInfoMap@@QAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Delete@CIndicatorInfoMap@@QAEHPAVCIndicatorInfo@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Delete@CIndicatorInfoMap@@QAEHPAVCIndicatorInfo@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Delete@CIndicatorInfoMap@@QAEHPAVCIndicatorInfo@@@Z$2
__ehfuncinfo$?Delete@CIndicatorInfoMap@@QAEHPAVCIndicatorInfo@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Delete@CIndicatorInfoMap@@QAEHPAVCIndicatorInfo@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z$0
__ehfuncinfo$??0CIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RemoveKey@?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@QAEHV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemoveKey@?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@QAEHV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$0
__ehfuncinfo$?RemoveKey@?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@QAEHV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RemoveKey@?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@QAEHV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetAt@?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetAt@?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@Z$0
__ehfuncinfo$?SetAt@?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetAt@?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECIndicatorList@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@PAVCIndicatorGroupData@@@@YGXAAVCArchive@@PAPAVCIndicatorGroupData@@H@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@PAVCIndicatorGroupData@@@@YGXAAVCArchive@@PAPAVCIndicatorGroupData@@H@Z PROC ; SerializeElements<CIndicatorGroupData *>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b 75 10	 mov	 esi, DWORD PTR _nCount$[ebp]
  0000b	57		 push	 edi
  0000c	85 f6		 test	 esi, esi
  0000e	74 08		 je	 SHORT $LN2@SerializeE
  00010	85 c9		 test	 ecx, ecx
  00012	0f 84 89 00 00
	00		 je	 $LN34@SerializeE
$LN2@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00018	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  0001b	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0001e	f7 d0		 not	 eax
  00020	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  00022	74 3c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;
; 79   : 		pData = pElements;
; 80   : 		while( nElementsLeft > 0 )

  00024	85 f6		 test	 esi, esi
  00026	74 31		 je	 SHORT $LN8@SerializeE
  00028	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL5@SerializeE:

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00030	bb ff ff ff 1f	 mov	 ebx, 536870911		; 1fffffffH
  00035	3b f3		 cmp	 esi, ebx
  00037	0f 42 de	 cmovb	 ebx, esi

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0003a	8d 3c 9d 00 00
	00 00		 lea	 edi, DWORD PTR [ebx*4]
  00041	57		 push	 edi
  00042	51		 push	 ecx
  00043	8b ca		 mov	 ecx, edx
  00045	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;
; 87   : 			pData += nElementsToWrite;

  0004a	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00050	03 cf		 add	 ecx, edi
  00052	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  00055	2b f3		 sub	 esi, ebx
  00057	75 d7		 jne	 SHORT $LL5@SerializeE
$LN8@SerializeE:
  00059	5f		 pop	 edi

; 105  : 		}
; 106  : 	}
; 107  : }

  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	5d		 pop	 ebp
  0005d	c2 0c 00	 ret	 12			; 0000000cH
$LN10@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  00060	85 f6		 test	 esi, esi
  00062	74 f5		 je	 SHORT $LN8@SerializeE
$LL7@SerializeE:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00064	bf ff ff ff 1f	 mov	 edi, 536870911		; 1fffffffH
  00069	3b f7		 cmp	 esi, edi
  0006b	0f 42 fe	 cmovb	 edi, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0006e	8d 1c bd 00 00
	00 00		 lea	 ebx, DWORD PTR [edi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00075	53		 push	 ebx
  00076	51		 push	 ecx
  00077	8b ca		 mov	 ecx, edx
  00079	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0007e	3b c3		 cmp	 eax, ebx
  00080	75 16		 jne	 SHORT $LN23@SerializeE
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  00082	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00085	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;
; 104  : 			pData += nElementsToRead;

  00088	03 cb		 add	 ecx, ebx
  0008a	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  0008d	2b f7		 sub	 esi, edi
  0008f	75 d3		 jne	 SHORT $LL7@SerializeE

; 105  : 		}
; 106  : 	}
; 107  : }

  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	5d		 pop	 ebp
  00095	c2 0c 00	 ret	 12			; 0000000cH
$LN23@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 402  : 		AfxThrowArchiveException(CArchiveException::endOfFile);

  00098	6a 00		 push	 0
  0009a	6a 03		 push	 3
  0009c	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN34@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  000a1	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN32@SerializeE:
  000a6	cc		 int	 3
??$SerializeElements@PAVCIndicatorGroupData@@@@YGXAAVCArchive@@PAPAVCIndicatorGroupData@@H@Z ENDP ; SerializeElements<CIndicatorGroupData *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_ECIndicatorGroupDataList@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECIndicatorGroupDataList@@UAEPAXI@Z PROC		; CIndicatorGroupDataList::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECIndicatorGroupDataList@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002a	8b d8		 mov	 ebx, eax
  0002c	83 e3 01	 and	 ebx, 1
  0002f	a8 02		 test	 al, 2
  00031	74 3f		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CIndicatorGroupDataList@@UAE@XZ ; CIndicatorGroupDataList::~CIndicatorGroupDataList
  00038	ff 76 fc	 push	 DWORD PTR [esi-4]
  0003b	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003e	6a 20		 push	 32			; 00000020H
  00040	56		 push	 esi
  00041	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00046	85 db		 test	 ebx, ebx
  00048	74 12		 je	 SHORT $LN3@vector
  0004a	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0004c	c1 e1 05	 shl	 ecx, 5
  0004f	83 c1 04	 add	 ecx, 4
  00052	51		 push	 ecx
  00053	57		 push	 edi
  00054	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00059	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005c	8b c7		 mov	 eax, edi
  0005e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00061	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00068	59		 pop	 ecx
  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	5b		 pop	 ebx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 04 00	 ret	 4
$LN2@vector:
  00072	e8 00 00 00 00	 call	 ??1CIndicatorGroupDataList@@UAE@XZ ; CIndicatorGroupDataList::~CIndicatorGroupDataList
  00077	85 db		 test	 ebx, ebx
  00079	74 0b		 je	 SHORT $LN4@vector
  0007b	6a 20		 push	 32			; 00000020H
  0007d	56		 push	 esi
  0007e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00083	83 c4 08	 add	 esp, 8
$LN4@vector:
  00086	8b c6		 mov	 eax, esi
  00088	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00092	59		 pop	 ecx
  00093	5f		 pop	 edi
  00094	5e		 pop	 esi
  00095	5b		 pop	 ebx
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c2 04 00	 ret	 4
  0009c	cc		 int	 3
  0009d	cc		 int	 3
  0009e	cc		 int	 3
  0009f	cc		 int	 3
  000a0	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECIndicatorGroupDataList@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECIndicatorGroupDataList@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECIndicatorGroupDataList@@UAEPAXI@Z ENDP		; CIndicatorGroupDataList::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??_GCIndicatorGroupDataList@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCIndicatorGroupDataList@@UAEPAXI@Z PROC		; CIndicatorGroupDataList::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CIndicatorGroupDataList@@UAE@XZ ; CIndicatorGroupDataList::~CIndicatorGroupDataList
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 20		 push	 32			; 00000020H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCIndicatorGroupDataList@@UAEPAXI@Z ENDP		; CIndicatorGroupDataList::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??0CIndicatorGroupDataList@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CIndicatorGroupDataList@@QAE@XZ PROC			; CIndicatorGroupDataList::CIndicatorGroupDataList, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CIndicatorGroupDataList@@6B@
  0000a	8b c1		 mov	 eax, ecx
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 851  : {

  0000f	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_7?$CList@PAVCIndicatorGroupData@@PAV1@@@6B@

; 852  : 	ASSERT(nBlockSize > 0);
; 853  : 
; 854  : 	m_nCount = 0;

  00016	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  0001d	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
  00024	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  0002b	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 856  : 	m_pBlocks = NULL;

  00032	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0

; 857  : 	m_nBlockSize = nBlockSize;

  00039	c7 41 1c 0a 00
	00 00		 mov	 DWORD PTR [ecx+28], 10	; 0000000aH
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
??0CIndicatorGroupDataList@@QAE@XZ ENDP			; CIndicatorGroupDataList::CIndicatorGroupDataList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_G?$CList@PAVCIndicatorGroupData@@PAV1@@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CList@PAVCIndicatorGroupData@@PAV1@@@UAEPAXI@Z PROC ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CList@PAVCIndicatorGroupData@@PAV1@@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 872  : 	m_pBlocks->FreeDataChain();

  00025	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]

; 878  : {

  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CList@PAVCIndicatorGroupData@@PAV1@@@6B@

; 870  : 	m_nCount = 0;

  00035	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  0003c	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00043	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0004a	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 872  : 	m_pBlocks->FreeDataChain();

  00051	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 873  : 	m_pBlocks = NULL;

  00056	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00059	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00060	a8 01		 test	 al, 1
  00062	74 2c		 je	 SHORT $LN22@scalar
  00064	a8 04		 test	 al, 4
  00066	75 1d		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  00068	56		 push	 esi
  00069	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006e	83 c4 04	 add	 esp, 4
  00071	8b c6		 mov	 eax, esi
  00073	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00076	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007d	59		 pop	 ecx
  0007e	5e		 pop	 esi
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
$LN3@scalar:
  00085	6a 1c		 push	 28			; 0000001cH
  00087	56		 push	 esi
  00088	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0008d	83 c4 08	 add	 esp, 8
$LN22@scalar:
  00090	8b c6		 mov	 eax, esi
  00092	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00095	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009c	59		 pop	 ecx
  0009d	5e		 pop	 esi
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 04 00	 ret	 4
  000a4	cc		 int	 3
  000a5	cc		 int	 3
  000a6	cc		 int	 3
  000a7	cc		 int	 3
  000a8	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CList@PAVCIndicatorGroupData@@PAV1@@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CList@PAVCIndicatorGroupData@@PAV1@@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CList@PAVCIndicatorGroupData@@PAV1@@@UAEPAXI@Z ENDP ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CList@PAVCIndicatorGroupData@@PAV1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_nNewCount$1$ = -16					; size = 4
_newData$1 = -12					; size = 4
_pData$1$ = -8						; size = 4
_pData$1$ = -8						; size = 4
_pNode$1$ = -8						; size = 4
_nElementsLeft$1$ = -4					; size = 4
_this$1$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CList@PAVCIndicatorGroupData@@PAV1@@@UAEXAAVCArchive@@@Z PROC ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::Serialize, COMDAT
; _this$ = ecx

; 1169 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00009	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1169 : {

  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	89 5d fc	 mov	 DWORD PTR _this$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00011	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00014	f7 d0		 not	 eax
  00016	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1174 : 	if (ar.IsStoring())

  00018	0f 84 ae 00 00
	00		 je	 $LN7@Serialize

; 1175 : 	{
; 1176 : 		ar.WriteCount(m_nCount);

  0001e	ff 73 0c	 push	 DWORD PTR [ebx+12]
  00021	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1177 : 		for (CNode* pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  00026	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00029	89 45 f8	 mov	 DWORD PTR _pNode$1$[ebp], eax
  0002c	85 c0		 test	 eax, eax
  0002e	0f 84 b9 01 00
	00		 je	 $LN86@Serialize
$LL4@Serialize:

; 1178 : 		{
; 1179 : 			ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1180 : 			TYPE* pData;
; 1181 : 			/*
; 1182 : 			 * in some cases the & operator might be overloaded, and we cannot use it to obtain
; 1183 : 			 * the address of a given object.  We then use the following trick to get the address
; 1184 : 			 */
; 1185 : 			pData = reinterpret_cast< TYPE* >( &reinterpret_cast< int& >( static_cast< TYPE& >( pNode->data ) ) );

  00034	8d 70 08	 lea	 esi, DWORD PTR [eax+8]

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00037	85 f6		 test	 esi, esi
  00039	0f 84 c0 01 00
	00		 je	 $LN76@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00042	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00045	f7 d0		 not	 eax
  00047	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  00049	74 33		 je	 SHORT $LN21@Serialize

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0004b	b8 01 00 00 00	 mov	 eax, 1
  00050	89 45 fc	 mov	 DWORD PTR _nElementsLeft$1$[ebp], eax
$LL16@Serialize:

; 80   : 		while( nElementsLeft > 0 )
; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00053	bb ff ff ff 1f	 mov	 ebx, 536870911		; 1fffffffH
  00058	3b c3		 cmp	 eax, ebx
  0005a	0f 42 d8	 cmovb	 ebx, eax

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0005d	8d 3c 9d 00 00
	00 00		 lea	 edi, DWORD PTR [ebx*4]
  00064	57		 push	 edi
  00065	56		 push	 esi
  00066	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  0006b	8b 45 fc	 mov	 eax, DWORD PTR _nElementsLeft$1$[ebp]

; 87   : 			pData += nElementsToWrite;

  0006e	03 f7		 add	 esi, edi
  00070	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00073	2b c3		 sub	 eax, ebx
  00075	89 45 fc	 mov	 DWORD PTR _nElementsLeft$1$[ebp], eax
  00078	85 c0		 test	 eax, eax
  0007a	75 d7		 jne	 SHORT $LL16@Serialize

; 88   : 		}
; 89   : 	}

  0007c	eb 35		 jmp	 SHORT $LN2@Serialize
$LN21@Serialize:

; 90   : 	else
; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  0007e	bf 01 00 00 00	 mov	 edi, 1
$LL18@Serialize:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00083	bb ff ff ff 1f	 mov	 ebx, 536870911		; 1fffffffH
  00088	3b fb		 cmp	 edi, ebx
  0008a	0f 42 df	 cmovb	 ebx, edi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0008d	8d 04 9d 00 00
	00 00		 lea	 eax, DWORD PTR [ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00094	50		 push	 eax
  00095	56		 push	 esi
  00096	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0009b	8d 0c 9d 00 00
	00 00		 lea	 ecx, DWORD PTR [ebx*4]
  000a2	3b c1		 cmp	 eax, ecx
  000a4	0f 85 4c 01 00
	00		 jne	 $LN75@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  000aa	03 f1		 add	 esi, ecx
  000ac	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;

  000af	2b fb		 sub	 edi, ebx
  000b1	75 d0		 jne	 SHORT $LL18@Serialize
$LN2@Serialize:

; 1177 : 		for (CNode* pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  000b3	8b 45 f8	 mov	 eax, DWORD PTR _pNode$1$[ebp]
  000b6	8b 00		 mov	 eax, DWORD PTR [eax]
  000b8	89 45 f8	 mov	 DWORD PTR _pNode$1$[ebp], eax
  000bb	85 c0		 test	 eax, eax
  000bd	0f 85 71 ff ff
	ff		 jne	 $LL4@Serialize

; 1197 : 		}
; 1198 : 	}
; 1199 : }

  000c3	5f		 pop	 edi
  000c4	5e		 pop	 esi
  000c5	5b		 pop	 ebx
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
$LN7@Serialize:

; 1186 : 			SerializeElements<TYPE>(ar, pData, 1);
; 1187 : 		}
; 1188 : 	}
; 1189 : 	else
; 1190 : 	{
; 1191 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000cc	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount

; 1192 : 		while (nNewCount--)

  000d1	85 c0		 test	 eax, eax
  000d3	0f 84 14 01 00
	00		 je	 $LN86@Serialize
  000d9	0f 1f 80 00 00
	00 00		 npad	 7
$LL5@Serialize:
  000e0	48		 dec	 eax
  000e1	89 45 f0	 mov	 DWORD PTR _nNewCount$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  000e4	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  000e7	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000ea	f7 d1		 not	 ecx
  000ec	f6 c1 01	 test	 cl, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  000ef	74 3d		 je	 SHORT $LN42@Serialize

; 79   : 		pData = pElements;

  000f1	8d 4d f4	 lea	 ecx, DWORD PTR _newData$1[ebp]
  000f4	bb 01 00 00 00	 mov	 ebx, 1
  000f9	89 4d f8	 mov	 DWORD PTR _pData$1$[ebp], ecx
  000fc	0f 1f 40 00	 npad	 4
$LL37@Serialize:

; 80   : 		while( nElementsLeft > 0 )
; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00100	bf ff ff ff 1f	 mov	 edi, 536870911		; 1fffffffH
  00105	3b df		 cmp	 ebx, edi
  00107	0f 42 fb	 cmovb	 edi, ebx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0010a	8d 34 bd 00 00
	00 00		 lea	 esi, DWORD PTR [edi*4]
  00111	56		 push	 esi
  00112	51		 push	 ecx
  00113	8b c8		 mov	 ecx, eax
  00115	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 87   : 			pData += nElementsToWrite;

  0011a	8b 4d f8	 mov	 ecx, DWORD PTR _pData$1$[ebp]
  0011d	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00120	03 ce		 add	 ecx, esi
  00122	89 4d f8	 mov	 DWORD PTR _pData$1$[ebp], ecx
  00125	2b df		 sub	 ebx, edi
  00127	75 d7		 jne	 SHORT $LL37@Serialize

; 88   : 		}
; 89   : 	}

  00129	8b 5d fc	 mov	 ebx, DWORD PTR _this$1$[ebp]
  0012c	eb 4a		 jmp	 SHORT $LN40@Serialize
$LN42@Serialize:

; 96   : 		pData = pElements;

  0012e	8d 55 f4	 lea	 edx, DWORD PTR _newData$1[ebp]
  00131	be 01 00 00 00	 mov	 esi, 1
  00136	89 55 f8	 mov	 DWORD PTR _pData$1$[ebp], edx
  00139	0f 1f 80 00 00
	00 00		 npad	 7
$LL39@Serialize:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00140	bf ff ff ff 1f	 mov	 edi, 536870911		; 1fffffffH
  00145	3b f7		 cmp	 esi, edi
  00147	0f 42 fe	 cmovb	 edi, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0014a	8d 0c bd 00 00
	00 00		 lea	 ecx, DWORD PTR [edi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00151	51		 push	 ecx
  00152	52		 push	 edx
  00153	8b c8		 mov	 ecx, eax
  00155	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0015a	8d 0c bd 00 00
	00 00		 lea	 ecx, DWORD PTR [edi*4]
  00161	3b c1		 cmp	 eax, ecx
  00163	0f 85 8d 00 00
	00		 jne	 $LN75@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  00169	8b 55 f8	 mov	 edx, DWORD PTR _pData$1$[ebp]
  0016c	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]

; 104  : 			pData += nElementsToRead;

  0016f	03 d1		 add	 edx, ecx
  00171	89 55 f8	 mov	 DWORD PTR _pData$1$[ebp], edx
  00174	2b f7		 sub	 esi, edi
  00176	75 c8		 jne	 SHORT $LL39@Serialize
$LN40@Serialize:

; 902  : 	if (m_pNodeFree == NULL)

  00178	83 7b 10 00	 cmp	 DWORD PTR [ebx+16], 0

; 1193 : 		{
; 1194 : 			TYPE newData[1];
; 1195 : 			SerializeElements<TYPE>(ar, newData, 1);
; 1196 : 			AddTail(newData[0]);

  0017c	8b 75 f4	 mov	 esi, DWORD PTR _newData$1[ebp]

; 968  : 	CNode* pNewNode = NewNode(m_pNodeTail, NULL);

  0017f	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 902  : 	if (m_pNodeFree == NULL)

  00182	75 32		 jne	 SHORT $LN63@Serialize

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  00184	6a 0c		 push	 12			; 0000000cH
  00186	ff 73 18	 push	 DWORD PTR [ebx+24]
  00189	8d 43 14	 lea	 eax, DWORD PTR [ebx+20]
  0018c	50		 push	 eax
  0018d	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  00192	8b 53 18	 mov	 edx, DWORD PTR [ebx+24]
  00195	83 c0 08	 add	 eax, 8
  00198	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  0019b	83 c2 ff	 add	 edx, -1
  0019e	8d 0c 49	 lea	 ecx, DWORD PTR [ecx+ecx*2]
  001a1	8d 0c 88	 lea	 ecx, DWORD PTR [eax+ecx*4]
  001a4	78 10		 js	 SHORT $LN63@Serialize
$LL60@Serialize:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  001a6	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  001a9	89 01		 mov	 DWORD PTR [ecx], eax

; 915  : 			m_pNodeFree = pNode;

  001ab	89 4b 10	 mov	 DWORD PTR [ebx+16], ecx
  001ae	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  001b1	83 ea 01	 sub	 edx, 1
  001b4	79 f0		 jns	 SHORT $LL60@Serialize
$LN63@Serialize:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  001b6	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  001b9	85 c9		 test	 ecx, ecx
  001bb	74 42		 je	 SHORT $LN76@Serialize

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  001bd	8b 01		 mov	 eax, DWORD PTR [ecx]
  001bf	89 43 10	 mov	 DWORD PTR [ebx+16], eax

; 922  : 	pNode->pPrev = pPrev;

  001c2	89 79 04	 mov	 DWORD PTR [ecx+4], edi

; 923  : 	pNode->pNext = pNext;

  001c5	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 924  : 	m_nCount++;

  001cb	ff 43 0c	 inc	 DWORD PTR [ebx+12]

; 969  : 	pNewNode->data = newElement;

  001ce	89 71 08	 mov	 DWORD PTR [ecx+8], esi

; 970  : 	if (m_pNodeTail != NULL)

  001d1	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  001d4	85 c0		 test	 eax, eax
  001d6	74 04		 je	 SHORT $LN54@Serialize

; 971  : 		m_pNodeTail->pNext = pNewNode;

  001d8	89 08		 mov	 DWORD PTR [eax], ecx
  001da	eb 03		 jmp	 SHORT $LN55@Serialize
$LN54@Serialize:

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;

  001dc	89 4b 04	 mov	 DWORD PTR [ebx+4], ecx
$LN55@Serialize:

; 1192 : 		while (nNewCount--)

  001df	8b 45 f0	 mov	 eax, DWORD PTR _nNewCount$1$[ebp]

; 974  : 	m_pNodeTail = pNewNode;

  001e2	89 4b 08	 mov	 DWORD PTR [ebx+8], ecx

; 1192 : 		while (nNewCount--)

  001e5	85 c0		 test	 eax, eax
  001e7	0f 85 f3 fe ff
	ff		 jne	 $LL5@Serialize
$LN86@Serialize:
  001ed	5f		 pop	 edi

; 1197 : 		}
; 1198 : 	}
; 1199 : }

  001ee	5e		 pop	 esi
  001ef	5b		 pop	 ebx
  001f0	8b e5		 mov	 esp, ebp
  001f2	5d		 pop	 ebp
  001f3	c2 04 00	 ret	 4
$LN75@Serialize:
  001f6	6a 00		 push	 0
  001f8	6a 03		 push	 3
  001fa	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN76@Serialize:
  001ff	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN105@Serialize:
  00204	cc		 int	 3
?Serialize@?$CList@PAVCIndicatorGroupData@@PAV1@@@UAEXAAVCArchive@@@Z ENDP ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CList@PAVCIndicatorGroupData@@PAV1@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CList@PAVCIndicatorGroupData@@PAV1@@@UAE@XZ PROC	; CList<CIndicatorGroupData *,CIndicatorGroupData *>::~CList<CIndicatorGroupData *,CIndicatorGroupData *>, COMDAT
; _this$ = ecx

; 878  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CList@PAVCIndicatorGroupData@@PAV1@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 872  : 	m_pBlocks->FreeDataChain();

  00025	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]

; 878  : {

  00028	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CList@PAVCIndicatorGroupData@@PAV1@@@6B@

; 870  : 	m_nCount = 0;

  0002e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  00035	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0003c	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00043	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 872  : 	m_pBlocks->FreeDataChain();

  0004a	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 873  : 	m_pBlocks = NULL;

  0004f	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 879  : 	RemoveAll();
; 880  : 	ASSERT(m_nCount == 0);
; 881  : }

  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	5e		 pop	 esi
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
  00066	cc		 int	 3
  00067	cc		 int	 3
  00068	cc		 int	 3
  00069	cc		 int	 3
  0006a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CList@PAVCIndicatorGroupData@@PAV1@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CList@PAVCIndicatorGroupData@@PAV1@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CList@PAVCIndicatorGroupData@@PAV1@@@UAE@XZ ENDP	; CList<CIndicatorGroupData *,CIndicatorGroupData *>::~CList<CIndicatorGroupData *,CIndicatorGroupData *>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?NewNode@?$CList@PAVCIndicatorGroupData@@PAV1@@@IAEPAUCNode@1@PAU21@0@Z
_TEXT	SEGMENT
_pPrev$ = 8						; size = 4
_pNext$ = 12						; size = 4
?NewNode@?$CList@PAVCIndicatorGroupData@@PAV1@@@IAEPAUCNode@1@PAU21@0@Z PROC ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::NewNode, COMDAT
; _this$ = ecx

; 901  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 902  : 	if (m_pNodeFree == NULL)

  00006	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0000a	75 34		 jne	 SHORT $LN7@NewNode

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  0000c	6a 0c		 push	 12			; 0000000cH
  0000e	ff 76 18	 push	 DWORD PTR [esi+24]
  00011	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  0001a	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  0001d	83 c0 08	 add	 eax, 8
  00020	8d 0c 52	 lea	 ecx, DWORD PTR [edx+edx*2]
  00023	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00026	83 c0 f4	 add	 eax, -12		; fffffff4H

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  00029	83 c2 ff	 add	 edx, -1
  0002c	78 12		 js	 SHORT $LN7@NewNode
  0002e	66 90		 npad	 2
$LL4@NewNode:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00030	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00033	89 08		 mov	 DWORD PTR [eax], ecx

; 915  : 			m_pNodeFree = pNode;

  00035	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00038	83 e8 0c	 sub	 eax, 12			; 0000000cH
  0003b	83 ea 01	 sub	 edx, 1
  0003e	79 f0		 jns	 SHORT $LL4@NewNode
$LN7@NewNode:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00040	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00043	85 c0		 test	 eax, eax
  00045	74 18		 je	 SHORT $LN17@NewNode

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  00047	8b 08		 mov	 ecx, DWORD PTR [eax]
  00049	89 4e 10	 mov	 DWORD PTR [esi+16], ecx

; 922  : 	pNode->pPrev = pPrev;

  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _pPrev$[ebp]
  0004f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 923  : 	pNode->pNext = pNext;

  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _pNext$[ebp]
  00055	89 08		 mov	 DWORD PTR [eax], ecx

; 924  : 	m_nCount++;

  00057	ff 46 0c	 inc	 DWORD PTR [esi+12]

; 925  : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 926  : 
; 927  : #pragma push_macro("new")
; 928  : #undef new
; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;
; 930  : #pragma pop_macro("new")
; 931  : 	return pNode;

  0005a	5e		 pop	 esi

; 932  : }

  0005b	5d		 pop	 ebp
  0005c	c2 08 00	 ret	 8
$LN17@NewNode:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  0005f	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN15@NewNode:
  00064	cc		 int	 3
?NewNode@?$CList@PAVCIndicatorGroupData@@PAV1@@@IAEPAUCNode@1@PAU21@0@Z ENDP ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::NewNode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CList@PAVCIndicatorGroupData@@PAV1@@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CList@PAVCIndicatorGroupData@@PAV1@@@QAEXXZ PROC ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::RemoveAll, COMDAT
; _this$ = ecx

; 862  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 863  : 	ASSERT_VALID(this);
; 864  : 
; 865  : 	// destroy elements
; 866  : 	CNode* pNode;
; 867  : 	for (pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)
; 868  : 		pNode->data.~TYPE();
; 869  : 
; 870  : 	m_nCount = 0;
; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;
; 872  : 	m_pBlocks->FreeDataChain();

  00003	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00006	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  0000d	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00014	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0001b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00022	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 873  : 	m_pBlocks = NULL;

  00027	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  0002e	5e		 pop	 esi

; 874  : }

  0002f	c3		 ret	 0
?RemoveAll@?$CList@PAVCIndicatorGroupData@@PAV1@@@QAEXXZ ENDP ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?AddTail@?$CList@PAVCIndicatorGroupData@@PAV1@@@QAEPAU__POSITION@@PAVCIndicatorGroupData@@@Z
_TEXT	SEGMENT
_newElement$ = 8					; size = 4
?AddTail@?$CList@PAVCIndicatorGroupData@@PAV1@@@QAEPAU__POSITION@@PAVCIndicatorGroupData@@@Z PROC ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::AddTail, COMDAT
; _this$ = ecx

; 965  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi

; 902  : 	if (m_pNodeFree == NULL)

  00007	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0

; 966  : 	ASSERT_VALID(this);
; 967  : 
; 968  : 	CNode* pNewNode = NewNode(m_pNodeTail, NULL);

  0000b	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]

; 902  : 	if (m_pNodeFree == NULL)

  0000e	75 32		 jne	 SHORT $LN11@AddTail

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  00010	6a 0c		 push	 12			; 0000000cH
  00012	ff 76 18	 push	 DWORD PTR [esi+24]
  00015	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  0001e	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  00021	83 c0 08	 add	 eax, 8
  00024	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  00027	83 c2 ff	 add	 edx, -1
  0002a	8d 0c 49	 lea	 ecx, DWORD PTR [ecx+ecx*2]
  0002d	8d 0c 88	 lea	 ecx, DWORD PTR [eax+ecx*4]
  00030	78 10		 js	 SHORT $LN11@AddTail
$LL8@AddTail:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00032	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00035	89 01		 mov	 DWORD PTR [ecx], eax

; 915  : 			m_pNodeFree = pNode;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
  0003a	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  0003d	83 ea 01	 sub	 edx, 1
  00040	79 f0		 jns	 SHORT $LL8@AddTail
$LN11@AddTail:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00042	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00045	85 c9		 test	 ecx, ecx
  00047	74 39		 je	 SHORT $LN22@AddTail

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  00049	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004b	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 969  : 	pNewNode->data = newElement;

  0004e	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]

; 922  : 	pNode->pPrev = pPrev;

  00051	89 79 04	 mov	 DWORD PTR [ecx+4], edi

; 923  : 	pNode->pNext = pNext;

  00054	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 924  : 	m_nCount++;

  0005a	ff 46 0c	 inc	 DWORD PTR [esi+12]

; 969  : 	pNewNode->data = newElement;

  0005d	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 970  : 	if (m_pNodeTail != NULL)

  00060	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00063	85 c0		 test	 eax, eax
  00065	74 0d		 je	 SHORT $LN2@AddTail

; 971  : 		m_pNodeTail->pNext = pNewNode;

  00067	89 08		 mov	 DWORD PTR [eax], ecx

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;
; 974  : 	m_pNodeTail = pNewNode;
; 975  : 	return (POSITION) pNewNode;

  00069	8b c1		 mov	 eax, ecx
  0006b	5f		 pop	 edi
  0006c	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  0006f	5e		 pop	 esi

; 976  : }

  00070	5d		 pop	 ebp
  00071	c2 04 00	 ret	 4
$LN2@AddTail:

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;
; 974  : 	m_pNodeTail = pNewNode;
; 975  : 	return (POSITION) pNewNode;

  00074	5f		 pop	 edi
  00075	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  00078	8b c1		 mov	 eax, ecx
  0007a	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  0007d	5e		 pop	 esi

; 976  : }

  0007e	5d		 pop	 ebp
  0007f	c2 04 00	 ret	 4
$LN22@AddTail:

; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00082	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN20@AddTail:
  00087	cc		 int	 3
?AddTail@?$CList@PAVCIndicatorGroupData@@PAV1@@@QAEPAU__POSITION@@PAVCIndicatorGroupData@@@Z ENDP ; CList<CIndicatorGroupData *,CIndicatorGroupData *>::AddTail
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CList@PAVCIndicatorGroupData@@PAV1@@@QAE@H@Z
_TEXT	SEGMENT
_nBlockSize$ = 8					; size = 4
??0?$CList@PAVCIndicatorGroupData@@PAV1@@@QAE@H@Z PROC	; CList<CIndicatorGroupData *,CIndicatorGroupData *>::CList<CIndicatorGroupData *,CIndicatorGroupData *>, COMDAT
; _this$ = ecx

; 851  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 852  : 	ASSERT(nBlockSize > 0);
; 853  : 
; 854  : 	m_nCount = 0;
; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;
; 856  : 	m_pBlocks = NULL;
; 857  : 	m_nBlockSize = nBlockSize;

  00003	8b 45 08	 mov	 eax, DWORD PTR _nBlockSize$[ebp]
  00006	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 858  : }

  00009	8b c1		 mov	 eax, ecx
  0000b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@PAVCIndicatorGroupData@@PAV1@@@6B@
  00011	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00018	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  0001f	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00026	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0002d	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
??0?$CList@PAVCIndicatorGroupData@@PAV1@@@QAE@H@Z ENDP	; CList<CIndicatorGroupData *,CIndicatorGroupData *>::CList<CIndicatorGroupData *,CIndicatorGroupData *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_FCIndicatorGroupData@@QAEXXZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??_FCIndicatorGroupData@@QAEXXZ PROC			; CIndicatorGroupData::`default constructor closure', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_FCIndicatorGroupData@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0002b	8d 4d f0	 lea	 ecx, DWORD PTR $T2[ebp]
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  00034	8d 45 f0	 lea	 eax, DWORD PTR $T2[ebp]
  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ??0CIndicatorGroupData@@QAE@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorGroupData::CIndicatorGroupData
  00046	8d 4d f0	 lea	 ecx, DWORD PTR $T2[ebp]
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0004f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00052	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00059	59		 pop	 ecx
  0005a	5e		 pop	 esi
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_FCIndicatorGroupData@@QAEXXZ$0:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
__ehhandler$??_FCIndicatorGroupData@@QAEXXZ:
  0000e	90		 npad	 1
  0000f	90		 npad	 1
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_FCIndicatorGroupData@@QAEXXZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_FCIndicatorGroupData@@QAEXXZ ENDP			; CIndicatorGroupData::`default constructor closure'
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?NewNode@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@IAEPAUCNode@1@PAU21@0@Z
_TEXT	SEGMENT
_pPrev$ = 8						; size = 4
_pNext$ = 12						; size = 4
?NewNode@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@IAEPAUCNode@1@PAU21@0@Z PROC ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::NewNode, COMDAT
; _this$ = ecx

; 901  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi

; 902  : 	if (m_pNodeFree == NULL)

  00007	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0000b	75 33		 jne	 SHORT $LN7@NewNode

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  0000d	6a 0c		 push	 12			; 0000000cH
  0000f	ff 76 18	 push	 DWORD PTR [esi+24]
  00012	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  0001b	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  0001e	83 c0 08	 add	 eax, 8
  00021	8d 0c 52	 lea	 ecx, DWORD PTR [edx+edx*2]
  00024	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00027	83 c0 f4	 add	 eax, -12		; fffffff4H

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  0002a	83 c2 ff	 add	 edx, -1
  0002d	78 11		 js	 SHORT $LN7@NewNode
  0002f	90		 npad	 1
$LL4@NewNode:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00030	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00033	89 08		 mov	 DWORD PTR [eax], ecx

; 915  : 			m_pNodeFree = pNode;

  00035	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00038	83 e8 0c	 sub	 eax, 12			; 0000000cH
  0003b	83 ea 01	 sub	 edx, 1
  0003e	79 f0		 jns	 SHORT $LL4@NewNode
$LN7@NewNode:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00040	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  00043	85 ff		 test	 edi, edi
  00045	74 24		 je	 SHORT $LN17@NewNode

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  00047	8b 07		 mov	 eax, DWORD PTR [edi]

; 922  : 	pNode->pPrev = pPrev;

  00049	8b 4d 08	 mov	 ecx, DWORD PTR _pPrev$[ebp]
  0004c	89 46 10	 mov	 DWORD PTR [esi+16], eax
  0004f	89 4f 04	 mov	 DWORD PTR [edi+4], ecx

; 923  : 	pNode->pNext = pNext;

  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _pNext$[ebp]
  00055	89 0f		 mov	 DWORD PTR [edi], ecx

; 924  : 	m_nCount++;
; 925  : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 926  : 
; 927  : #pragma push_macro("new")
; 928  : #undef new
; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;

  00057	8d 4f 08	 lea	 ecx, DWORD PTR [edi+8]
  0005a	ff 46 0c	 inc	 DWORD PTR [esi+12]
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 930  : #pragma pop_macro("new")
; 931  : 	return pNode;

  00063	8b c7		 mov	 eax, edi
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi

; 932  : }

  00067	5d		 pop	 ebp
  00068	c2 08 00	 ret	 8
$LN17@NewNode:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  0006b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN15@NewNode:
  00070	cc		 int	 3
?NewNode@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@IAEPAUCNode@1@PAU21@0@Z ENDP ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::NewNode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_newElement$ = 8					; size = 4
?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::AddTail, COMDAT
; _this$ = ecx

; 965  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx

; 902  : 	if (m_pNodeFree == NULL)

  00027	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0

; 966  : 	ASSERT_VALID(this);
; 967  : 
; 968  : 	CNode* pNewNode = NewNode(m_pNodeTail, NULL);

  0002b	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  0002e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 902  : 	if (m_pNodeFree == NULL)

  00035	75 39		 jne	 SHORT $LN12@AddTail

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  00037	6a 0c		 push	 12			; 0000000cH
  00039	ff 76 18	 push	 DWORD PTR [esi+24]
  0003c	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  00045	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  00048	83 c0 08	 add	 eax, 8
  0004b	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  0004e	83 c2 ff	 add	 edx, -1
  00051	8d 0c 49	 lea	 ecx, DWORD PTR [ecx+ecx*2]
  00054	8d 0c 88	 lea	 ecx, DWORD PTR [eax+ecx*4]
  00057	78 17		 js	 SHORT $LN12@AddTail
  00059	0f 1f 80 00 00
	00 00		 npad	 7
$LL9@AddTail:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00060	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00063	89 01		 mov	 DWORD PTR [ecx], eax

; 915  : 			m_pNodeFree = pNode;

  00065	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
  00068	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  0006b	83 ea 01	 sub	 edx, 1
  0006e	79 f0		 jns	 SHORT $LL9@AddTail
$LN12@AddTail:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00070	8b 5e 10	 mov	 ebx, DWORD PTR [esi+16]
  00073	85 db		 test	 ebx, ebx
  00075	74 57		 je	 SHORT $LN24@AddTail

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  00077	8b 03		 mov	 eax, DWORD PTR [ebx]

; 922  : 	pNode->pPrev = pPrev;
; 923  : 	pNode->pNext = pNext;
; 924  : 	m_nCount++;
; 925  : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 926  : 
; 927  : #pragma push_macro("new")
; 928  : #undef new
; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;

  00079	8d 4b 08	 lea	 ecx, DWORD PTR [ebx+8]
  0007c	89 46 10	 mov	 DWORD PTR [esi+16], eax
  0007f	89 7b 04	 mov	 DWORD PTR [ebx+4], edi
  00082	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
  00088	ff 46 0c	 inc	 DWORD PTR [esi+12]
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 969  : 	pNewNode->data = newElement;

  00091	8d 45 08	 lea	 eax, DWORD PTR _newElement$[ebp]
  00094	50		 push	 eax
  00095	8d 4b 08	 lea	 ecx, DWORD PTR [ebx+8]
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z

; 970  : 	if (m_pNodeTail != NULL)

  0009e	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000a1	85 c0		 test	 eax, eax
  000a3	74 04		 je	 SHORT $LN2@AddTail

; 971  : 		m_pNodeTail->pNext = pNewNode;

  000a5	89 18		 mov	 DWORD PTR [eax], ebx
  000a7	eb 03		 jmp	 SHORT $LN3@AddTail
$LN2@AddTail:

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;

  000a9	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
$LN3@AddTail:

; 974  : 	m_pNodeTail = pNewNode;
; 975  : 	return (POSITION) pNewNode;

  000ac	8d 4d 08	 lea	 ecx, DWORD PTR _newElement$[ebp]
  000af	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  000b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000b8	8b c3		 mov	 eax, ebx

; 976  : }

  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c4	59		 pop	 ecx
  000c5	5f		 pop	 edi
  000c6	5e		 pop	 esi
  000c7	5b		 pop	 ebx
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 04 00	 ret	 4
$LN24@AddTail:

; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  000ce	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN22@AddTail:
  000d3	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$0:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _newElement$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
__ehhandler$?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:
  0000e	90		 npad	 1
  0000f	90		 npad	 1
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::AddTail
; Function compile flags: /Ogtp
;	COMDAT ??_ECIndicatorInfo@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECIndicatorInfo@@UAEPAXI@Z PROC			; CIndicatorInfo::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECIndicatorInfo@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002a	8b d8		 mov	 ebx, eax
  0002c	83 e3 01	 and	 ebx, 1
  0002f	a8 02		 test	 al, 2
  00031	74 40		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CIndicatorInfo@@UAE@XZ ; CIndicatorInfo::~CIndicatorInfo
  00038	ff 76 fc	 push	 DWORD PTR [esi-4]
  0003b	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003e	6a 08		 push	 8
  00040	56		 push	 esi
  00041	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00046	85 db		 test	 ebx, ebx
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0004c	8d 0c cd 04 00
	00 00		 lea	 ecx, DWORD PTR [ecx*8+4]
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	e8 00 00 00 00	 call	 ??1CIndicatorInfo@@UAE@XZ ; CIndicatorInfo::~CIndicatorInfo
  00078	85 db		 test	 ebx, ebx
  0007a	74 0b		 je	 SHORT $LN4@vector
  0007c	6a 08		 push	 8
  0007e	56		 push	 esi
  0007f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00084	83 c4 08	 add	 esp, 8
$LN4@vector:
  00087	8b c6		 mov	 eax, esi
  00089	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00093	59		 pop	 ecx
  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 04 00	 ret	 4
  0009d	cc		 int	 3
  0009e	cc		 int	 3
  0009f	cc		 int	 3
  000a0	cc		 int	 3
  000a1	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECIndicatorInfo@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECIndicatorInfo@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECIndicatorInfo@@UAEPAXI@Z ENDP			; CIndicatorInfo::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??_GCIndicatorInfo@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCIndicatorInfo@@UAEPAXI@Z PROC			; CIndicatorInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CIndicatorInfo@@UAE@XZ ; CIndicatorInfo::~CIndicatorInfo
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 08		 push	 8
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCIndicatorInfo@@UAEPAXI@Z ENDP			; CIndicatorInfo::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4CIndicatorInfo@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CIndicatorInfo@@QAEAAV0@ABV0@@Z PROC			; CIndicatorInfo::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00009	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0000c	8b c1		 mov	 eax, ecx
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
??4CIndicatorInfo@@QAEAAV0@ABV0@@Z ENDP			; CIndicatorInfo::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0CIndicatorInfo@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0CIndicatorInfo@@QAE@ABV0@@Z PROC			; CIndicatorInfo::CIndicatorInfo, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CIndicatorInfo@@6B@
  0000c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000f	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00012	8b c1		 mov	 eax, ecx
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0CIndicatorInfo@@QAE@ABV0@@Z ENDP			; CIndicatorInfo::CIndicatorInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCGraphIndicatorInfoMap@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGraphIndicatorInfoMap@@UAEPAXI@Z PROC		; CGraphIndicatorInfoMap::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 24   : {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CIndicatorInfoMap@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CMapStringToPtr@@UAE@XZ ; CMapStringToPtr::~CMapStringToPtr
  00011	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00014	a8 01		 test	 al, 1
  00016	74 1f		 je	 SHORT $LN18@scalar
  00018	a8 04		 test	 al, 4
  0001a	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
$LN3@scalar:
  0002c	6a 20		 push	 32			; 00000020H
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00034	83 c4 08	 add	 esp, 8
$LN18@scalar:
  00037	8b c6		 mov	 eax, esi
  00039	5e		 pop	 esi
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
??_GCGraphIndicatorInfoMap@@UAEPAXI@Z ENDP		; CGraphIndicatorInfoMap::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
;	COMDAT ?GetGraphNameList@CGraphIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z
_TEXT	SEGMENT
_this$1$ = -32						; size = 4
$T2 = -28						; size = 4
_psnIndicator$ = -24					; size = 4
_pIndicatorInfo$ = -20					; size = 4
_strKey$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T3 = 8							; size = 4
_dataList$ = 8						; size = 4
_p_eChartMode$ = 12					; size = 4
?GetGraphNameList@CGraphIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z PROC ; CGraphIndicatorInfoMap::GetGraphNameList, COMDAT
; _this$ = ecx

; 227  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetGraphNameList@CGraphIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d e0	 mov	 DWORD PTR _this$1$[ebp], ebx

; 228  : 	if( GetCount() <= 0) return FALSE;

  0002d	83 7b 0c 00	 cmp	 DWORD PTR [ebx+12], 0
  00031	7f 16		 jg	 SHORT $LN4@GetGraphNa
  00033	33 c0		 xor	 eax, eax

; 240  : }

  00035	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00038	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0003f	59		 pop	 ecx
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
$LN4@GetGraphNa:

; 230  : 	CString strKey;

  00049	8d 4d f0	 lea	 ecx, DWORD PTR _strKey$[ebp]
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 630  : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00052	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  00055	8b c1		 mov	 eax, ecx
  00057	f7 d8		 neg	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 230  : 	CString strKey;

  00059	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 231  : 	CIndicatorInfo *pIndicatorInfo = NULL;

  00060	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pIndicatorInfo$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 630  : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00067	1b c0		 sbb	 eax, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 232  : 	POSITION psnIndicator = GetStartPosition();

  00069	89 45 e8	 mov	 DWORD PTR _psnIndicator$[ebp], eax
  0006c	85 c9		 test	 ecx, ecx

; 233  : 	while( psnIndicator)

  0006e	0f 84 f5 00 00
	00		 je	 $LN41@GetGraphNa
  00074	8b 75 08	 mov	 esi, DWORD PTR _dataList$[ebp]
$LL2@GetGraphNa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2068 : 		{ BASE_CLASS::GetNextAssoc(rPosition, (typename BASE_CLASS::BASE_KEY&)rKey,

  00077	8d 45 ec	 lea	 eax, DWORD PTR _pIndicatorInfo$[ebp]
  0007a	8b cb		 mov	 ecx, ebx
  0007c	50		 push	 eax
  0007d	8d 45 f0	 lea	 eax, DWORD PTR _strKey$[ebp]
  00080	50		 push	 eax
  00081	8d 45 e8	 lea	 eax, DWORD PTR _psnIndicator$[ebp]
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 ?GetNextAssoc@CMapStringToPtr@@QBEXAAPAU__POSITION@@AAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAPAX@Z ; CMapStringToPtr::GetNextAssoc
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 236  : 		if( g_iMetaTable.IsIndicatorInThisMode( pIndicatorInfo->GetIndicatorName(), p_eChartMode))

  0008a	8b 4d ec	 mov	 ecx, DWORD PTR _pIndicatorInfo$[ebp]
  0008d	8d 45 e4	 lea	 eax, DWORD PTR $T2[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?GetIndicatorName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfo::GetIndicatorName
  00096	ff 75 0c	 push	 DWORD PTR _p_eChartMode$[ebp]
  00099	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_iMetaTable@@3VIMetaTable@@A ; g_iMetaTable
  0009e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000a2	ff 30		 push	 DWORD PTR [eax]
  000a4	e8 00 00 00 00	 call	 ?IsIndicatorInThisMode@IMetaTable@@QAEHPBDW4CHART_MODE@CChartInfo@@@Z ; IMetaTable::IsIndicatorInThisMode
  000a9	8d 4d e4	 lea	 ecx, DWORD PTR $T2[ebp]
  000ac	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000b0	8b f8		 mov	 edi, eax
  000b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000b8	85 ff		 test	 edi, edi
  000ba	0f 84 9f 00 00
	00		 je	 $LN31@GetGraphNa

; 237  : 			dataList.AddTail( strKey);

  000c0	8d 45 f0	 lea	 eax, DWORD PTR _strKey$[ebp]
  000c3	50		 push	 eax
  000c4	8d 4d 08	 lea	 ecx, DWORD PTR $T3[ebp]
  000c7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 902  : 	if (m_pNodeFree == NULL)

  000cd	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0

; 968  : 	CNode* pNewNode = NewNode(m_pNodeTail, NULL);

  000d1	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  000d4	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 902  : 	if (m_pNodeFree == NULL)

  000d8	75 36		 jne	 SHORT $LN27@GetGraphNa

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  000da	6a 0c		 push	 12			; 0000000cH
  000dc	ff 76 18	 push	 DWORD PTR [esi+24]
  000df	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  000e2	50		 push	 eax
  000e3	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  000e8	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  000eb	8d 0c 55 ff ff
	ff ff		 lea	 ecx, DWORD PTR [edx*2-1]
  000f2	03 ca		 add	 ecx, edx

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  000f4	83 c2 ff	 add	 edx, -1
  000f7	8d 0c 88	 lea	 ecx, DWORD PTR [eax+ecx*4]
  000fa	78 14		 js	 SHORT $LN27@GetGraphNa
  000fc	0f 1f 40 00	 npad	 4
$LL24@GetGraphNa:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00100	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00103	89 01		 mov	 DWORD PTR [ecx], eax

; 915  : 			m_pNodeFree = pNode;

  00105	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
  00108	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  0010b	83 ea 01	 sub	 edx, 1
  0010e	79 f0		 jns	 SHORT $LL24@GetGraphNa
$LN27@GetGraphNa:

; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00110	8b 5e 10	 mov	 ebx, DWORD PTR [esi+16]
  00113	85 db		 test	 ebx, ebx
  00115	74 74		 je	 SHORT $LN35@GetGraphNa

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  00117	8b 03		 mov	 eax, DWORD PTR [ebx]

; 922  : 	pNode->pPrev = pPrev;
; 923  : 	pNode->pNext = pNext;
; 924  : 	m_nCount++;
; 925  : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 926  : 
; 927  : #pragma push_macro("new")
; 928  : #undef new
; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;

  00119	8d 4b 08	 lea	 ecx, DWORD PTR [ebx+8]
  0011c	89 46 10	 mov	 DWORD PTR [esi+16], eax
  0011f	89 7b 04	 mov	 DWORD PTR [ebx+4], edi
  00122	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
  00128	ff 46 0c	 inc	 DWORD PTR [esi+12]
  0012b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 969  : 	pNewNode->data = newElement;

  00131	8d 45 08	 lea	 eax, DWORD PTR $T3[ebp]
  00134	50		 push	 eax
  00135	8d 4b 08	 lea	 ecx, DWORD PTR [ebx+8]
  00138	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z

; 970  : 	if (m_pNodeTail != NULL)

  0013e	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00141	85 c0		 test	 eax, eax
  00143	74 04		 je	 SHORT $LN17@GetGraphNa

; 971  : 		m_pNodeTail->pNext = pNewNode;

  00145	89 18		 mov	 DWORD PTR [eax], ebx
  00147	eb 03		 jmp	 SHORT $LN18@GetGraphNa
$LN17@GetGraphNa:

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;

  00149	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
$LN18@GetGraphNa:

; 974  : 	m_pNodeTail = pNewNode;
; 975  : 	return (POSITION) pNewNode;

  0014c	8d 4d 08	 lea	 ecx, DWORD PTR $T3[ebp]
  0014f	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  00152	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00156	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0015c	8b 5d e0	 mov	 ebx, DWORD PTR _this$1$[ebp]
$LN31@GetGraphNa:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 233  : 	while( psnIndicator)

  0015f	83 7d e8 00	 cmp	 DWORD PTR _psnIndicator$[ebp], 0
  00163	0f 85 0e ff ff
	ff		 jne	 $LL2@GetGraphNa
$LN41@GetGraphNa:

; 238  : 	}
; 239  : 	return TRUE;

  00169	8d 4d f0	 lea	 ecx, DWORD PTR _strKey$[ebp]
  0016c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00172	b8 01 00 00 00	 mov	 eax, 1

; 240  : }

  00177	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0017a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00181	59		 pop	 ecx
  00182	5f		 pop	 edi
  00183	5e		 pop	 esi
  00184	5b		 pop	 ebx
  00185	8b e5		 mov	 esp, ebp
  00187	5d		 pop	 ebp
  00188	c2 08 00	 ret	 8
$LN35@GetGraphNa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  0018b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN43@GetGraphNa:
  00190	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetGraphNameList@CGraphIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z$0:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _strKey$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?GetGraphNameList@CGraphIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z$1:
  00009	8d 4d e4	 lea	 ecx, DWORD PTR $T2[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?GetGraphNameList@CGraphIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z$3:
  00012	8d 4d 08	 lea	 ecx, DWORD PTR $T3[ebp]
  00015	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
  0001f	cc		 int	 3
__ehhandler$?GetGraphNameList@CGraphIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z:
  00020	90		 npad	 1
  00021	90		 npad	 1
  00022	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00026	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00029	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0002c	33 c8		 xor	 ecx, eax
  0002e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00033	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetGraphNameList@CGraphIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z
  00038	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetGraphNameList@CGraphIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z ENDP ; CGraphIndicatorInfoMap::GetGraphNameList
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
;	COMDAT ?GetNextIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z
_TEXT	SEGMENT
_this$1$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strKey$ = 8						; size = 4
_p_szIndicatorName$ = 8					; size = 4
_pIndicatorInfo$ = 12					; size = 4
_p_ppsnIndicator$ = 12					; size = 4
?GetNextIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z PROC ; CGraphIndicatorInfoMap::GetNextIndicatorInfo, COMDAT
; _this$ = ecx

; 207  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetNextIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
  0002a	89 75 ec	 mov	 DWORD PTR _this$1$[ebp], esi

; 208  : 	if( !p_ppsnIndicator) return NULL;

  0002d	8b 7d 0c	 mov	 edi, DWORD PTR _p_ppsnIndicator$[ebp]
  00030	85 ff		 test	 edi, edi
  00032	74 24		 je	 SHORT $LN23@GetNextInd

; 209  : 	if( GetCount() <= 0 || !p_szIndicatorName)		*p_ppsnIndicator = NULL;

  00034	83 7e 0c 00	 cmp	 DWORD PTR [esi+12], 0
  00038	8b 5d 08	 mov	 ebx, DWORD PTR _p_szIndicatorName$[ebp]
  0003b	7e 08		 jle	 SHORT $LN6@GetNextInd
  0003d	85 db		 test	 ebx, ebx
  0003f	74 04		 je	 SHORT $LN6@GetNextInd
  00041	8b 07		 mov	 eax, DWORD PTR [edi]
  00043	eb 08		 jmp	 SHORT $LN5@GetNextInd
$LN6@GetNextInd:
  00045	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  0004b	33 c0		 xor	 eax, eax
$LN5@GetNextInd:

; 210  : 	if( !*p_szIndicatorName)						*p_ppsnIndicator = NULL;

  0004d	80 3b 00	 cmp	 BYTE PTR [ebx], 0
  00050	75 1c		 jne	 SHORT $LN7@GetNextInd
  00052	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
$LN23@GetNextInd:

; 211  : 	if( !*p_ppsnIndicator) return NULL;

  00058	33 c0		 xor	 eax, eax

; 223  : }

  0005a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00064	59		 pop	 ecx
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 08 00	 ret	 8
$LN7@GetNextInd:

; 211  : 	if( !*p_ppsnIndicator) return NULL;

  0006e	85 c0		 test	 eax, eax
  00070	74 e6		 je	 SHORT $LN23@GetNextInd

; 212  : 
; 213  : 	CString strKey;

  00072	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp]
  00075	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 214  : 	CIndicatorInfo *pIndicatorInfo = NULL;
; 215  : 	POSITION &psnIndicator = *p_ppsnIndicator;
; 216  : 	while( psnIndicator)

  0007b	83 3f 00	 cmp	 DWORD PTR [edi], 0
  0007e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00085	c7 45 0c 00 00
	00 00		 mov	 DWORD PTR _pIndicatorInfo$[ebp], 0
  0008c	74 46		 je	 SHORT $LN3@GetNextInd
  0008e	66 90		 npad	 2
$LL2@GetNextInd:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2068 : 		{ BASE_CLASS::GetNextAssoc(rPosition, (typename BASE_CLASS::BASE_KEY&)rKey,

  00090	8d 45 0c	 lea	 eax, DWORD PTR _pIndicatorInfo$[ebp]
  00093	8b ce		 mov	 ecx, esi
  00095	50		 push	 eax
  00096	8d 45 08	 lea	 eax, DWORD PTR _strKey$[ebp]
  00099	50		 push	 eax
  0009a	57		 push	 edi
  0009b	e8 00 00 00 00	 call	 ?GetNextAssoc@CMapStringToPtr@@QBEXAAPAU__POSITION@@AAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAPAX@Z ; CMapStringToPtr::GetNextAssoc
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 219  : 		if( pIndicatorInfo->GetIndicatorName() == p_szIndicatorName) return pIndicatorInfo;

  000a0	8b 4d 0c	 mov	 ecx, DWORD PTR _pIndicatorInfo$[ebp]
  000a3	8d 45 f0	 lea	 eax, DWORD PTR $T2[ebp]
  000a6	50		 push	 eax
  000a7	e8 00 00 00 00	 call	 ?GetIndicatorName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfo::GetIndicatorName
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h

; 2486 : 		return(str1.Compare(psz2) == 0);

  000ac	53		 push	 ebx
  000ad	8b c8		 mov	 ecx, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 219  : 		if( pIndicatorInfo->GetIndicatorName() == p_szIndicatorName) return pIndicatorInfo;

  000af	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h

; 2486 : 		return(str1.Compare(psz2) == 0);

  000b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 219  : 		if( pIndicatorInfo->GetIndicatorName() == p_szIndicatorName) return pIndicatorInfo;

  000b9	8d 4d f0	 lea	 ecx, DWORD PTR $T2[ebp]
  000bc	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h

; 2486 : 		return(str1.Compare(psz2) == 0);

  000c0	8b f0		 mov	 esi, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 219  : 		if( pIndicatorInfo->GetIndicatorName() == p_szIndicatorName) return pIndicatorInfo;

  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000c8	85 f6		 test	 esi, esi
  000ca	74 29		 je	 SHORT $LN19@GetNextInd

; 214  : 	CIndicatorInfo *pIndicatorInfo = NULL;
; 215  : 	POSITION &psnIndicator = *p_ppsnIndicator;
; 216  : 	while( psnIndicator)

  000cc	83 3f 00	 cmp	 DWORD PTR [edi], 0
  000cf	8b 75 ec	 mov	 esi, DWORD PTR _this$1$[ebp]
  000d2	75 bc		 jne	 SHORT $LL2@GetNextInd
$LN3@GetNextInd:

; 220  : 	}
; 221  : 
; 222  : 	return NULL;

  000d4	33 f6		 xor	 esi, esi
$LN13@GetNextInd:
  000d6	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp]
  000d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000df	8b c6		 mov	 eax, esi

; 223  : }

  000e1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000eb	59		 pop	 ecx
  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	5b		 pop	 ebx
  000ef	8b e5		 mov	 esp, ebp
  000f1	5d		 pop	 ebp
  000f2	c2 08 00	 ret	 8
$LN19@GetNextInd:
  000f5	8b 75 0c	 mov	 esi, DWORD PTR _pIndicatorInfo$[ebp]
  000f8	eb dc		 jmp	 SHORT $LN13@GetNextInd
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetNextIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z$0:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?GetNextIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z$1:
  00009	8d 4d f0	 lea	 ecx, DWORD PTR $T2[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?GetNextIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetNextIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetNextIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z ENDP ; CGraphIndicatorInfoMap::GetNextIndicatorInfo
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
;	COMDAT ?GetFirstIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z
_TEXT	SEGMENT
_this$1$ = -24						; size = 4
_psnIndicatorOrg$ = -20					; size = 4
_strKey$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pIndicatorInfo$ = 8					; size = 4
_p_szIndicatorName$ = 8					; size = 4
$T2 = 12						; size = 4
_p_ppsnIndicator$ = 12					; size = 4
?GetFirstIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z PROC ; CGraphIndicatorInfoMap::GetFirstIndicatorInfo, COMDAT
; _this$ = ecx

; 188  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetFirstIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
  0002a	89 75 e8	 mov	 DWORD PTR _this$1$[ebp], esi

; 189  : 	if( GetCount() <= 0 || !p_szIndicatorName) return NULL;

  0002d	83 7e 0c 00	 cmp	 DWORD PTR [esi+12], 0
  00031	0f 8e b6 00 00
	00		 jle	 $LN5@GetFirstIn
  00037	8b 5d 08	 mov	 ebx, DWORD PTR _p_szIndicatorName$[ebp]
  0003a	85 db		 test	 ebx, ebx
  0003c	0f 84 ab 00 00
	00		 je	 $LN5@GetFirstIn

; 190  : 	if( !*p_szIndicatorName) return NULL;

  00042	80 3b 00	 cmp	 BYTE PTR [ebx], 0
  00045	0f 84 a2 00 00
	00		 je	 $LN5@GetFirstIn

; 191  : 
; 192  : 	CString strKey;

  0004b	8d 4d f0	 lea	 ecx, DWORD PTR _strKey$[ebp]
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 195  : 	POSITION &psnIndicator = ( p_ppsnIndicator ? *p_ppsnIndicator : psnIndicatorOrg);

  00054	8b 45 0c	 mov	 eax, DWORD PTR _p_ppsnIndicator$[ebp]
  00057	8d 7d ec	 lea	 edi, DWORD PTR _psnIndicatorOrg$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 630  : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  0005a	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 195  : 	POSITION &psnIndicator = ( p_ppsnIndicator ? *p_ppsnIndicator : psnIndicatorOrg);

  0005d	85 c0		 test	 eax, eax
  0005f	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _psnIndicatorOrg$[ebp], 0
  00066	0f 45 f8	 cmovne	 edi, eax
  00069	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 630  : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00070	8b c1		 mov	 eax, ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 193  : 	CIndicatorInfo *pIndicatorInfo = NULL;

  00072	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _pIndicatorInfo$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 630  : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00079	f7 d8		 neg	 eax
  0007b	1b c0		 sbb	 eax, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 196  : 	psnIndicator = GetStartPosition();

  0007d	89 07		 mov	 DWORD PTR [edi], eax

; 197  : 	while( psnIndicator)

  0007f	85 c9		 test	 ecx, ecx
  00081	74 44		 je	 SHORT $LN3@GetFirstIn
$LL2@GetFirstIn:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2068 : 		{ BASE_CLASS::GetNextAssoc(rPosition, (typename BASE_CLASS::BASE_KEY&)rKey,

  00083	8d 45 08	 lea	 eax, DWORD PTR _pIndicatorInfo$[ebp]
  00086	8b ce		 mov	 ecx, esi
  00088	50		 push	 eax
  00089	8d 45 f0	 lea	 eax, DWORD PTR _strKey$[ebp]
  0008c	50		 push	 eax
  0008d	57		 push	 edi
  0008e	e8 00 00 00 00	 call	 ?GetNextAssoc@CMapStringToPtr@@QBEXAAPAU__POSITION@@AAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAPAX@Z ; CMapStringToPtr::GetNextAssoc
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 200  : 		if( pIndicatorInfo->GetIndicatorName() == p_szIndicatorName) return pIndicatorInfo;

  00093	8b 4d 08	 mov	 ecx, DWORD PTR _pIndicatorInfo$[ebp]
  00096	8d 45 0c	 lea	 eax, DWORD PTR $T2[ebp]
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 ?GetIndicatorName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfo::GetIndicatorName
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h

; 2486 : 		return(str1.Compare(psz2) == 0);

  0009f	53		 push	 ebx
  000a0	8b c8		 mov	 ecx, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 200  : 		if( pIndicatorInfo->GetIndicatorName() == p_szIndicatorName) return pIndicatorInfo;

  000a2	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h

; 2486 : 		return(str1.Compare(psz2) == 0);

  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 200  : 		if( pIndicatorInfo->GetIndicatorName() == p_szIndicatorName) return pIndicatorInfo;

  000ac	8d 4d 0c	 lea	 ecx, DWORD PTR $T2[ebp]
  000af	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h

; 2486 : 		return(str1.Compare(psz2) == 0);

  000b3	8b f0		 mov	 esi, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 200  : 		if( pIndicatorInfo->GetIndicatorName() == p_szIndicatorName) return pIndicatorInfo;

  000b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000bb	85 f6		 test	 esi, esi
  000bd	74 29		 je	 SHORT $LN19@GetFirstIn

; 197  : 	while( psnIndicator)

  000bf	83 3f 00	 cmp	 DWORD PTR [edi], 0
  000c2	8b 75 e8	 mov	 esi, DWORD PTR _this$1$[ebp]
  000c5	75 bc		 jne	 SHORT $LL2@GetFirstIn
$LN3@GetFirstIn:

; 201  : 	}
; 202  : 
; 203  : 	return NULL;

  000c7	33 f6		 xor	 esi, esi
$LN11@GetFirstIn:
  000c9	8d 4d f0	 lea	 ecx, DWORD PTR _strKey$[ebp]
  000cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000d2	8b c6		 mov	 eax, esi

; 204  : }

  000d4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000de	59		 pop	 ecx
  000df	5f		 pop	 edi
  000e0	5e		 pop	 esi
  000e1	5b		 pop	 ebx
  000e2	8b e5		 mov	 esp, ebp
  000e4	5d		 pop	 ebp
  000e5	c2 08 00	 ret	 8
$LN19@GetFirstIn:
  000e8	8b 75 08	 mov	 esi, DWORD PTR _pIndicatorInfo$[ebp]
  000eb	eb dc		 jmp	 SHORT $LN11@GetFirstIn
$LN5@GetFirstIn:

; 189  : 	if( GetCount() <= 0 || !p_szIndicatorName) return NULL;

  000ed	33 c0		 xor	 eax, eax

; 204  : }

  000ef	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f9	59		 pop	 ecx
  000fa	5f		 pop	 edi
  000fb	5e		 pop	 esi
  000fc	5b		 pop	 ebx
  000fd	8b e5		 mov	 esp, ebp
  000ff	5d		 pop	 ebp
  00100	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetFirstIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z$0:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _strKey$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?GetFirstIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z$1:
  00009	8d 4d 0c	 lea	 ecx, DWORD PTR $T2[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?GetFirstIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetFirstIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetFirstIndicatorInfo@CGraphIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z ENDP ; CGraphIndicatorInfoMap::GetFirstIndicatorInfo
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
;	COMDAT ?RemoveAllIndicator@CGraphIndicatorInfoMap@@UAEHPBD@Z
_TEXT	SEGMENT
$T2 = -32						; size = 4
_psnIndicator$ = -28					; size = 4
$T3 = -24						; size = 4
_strKey$ = -20						; size = 4
_pIndicatorInfo$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_p_szIndicatorName$ = 8					; size = 4
?RemoveAllIndicator@CGraphIndicatorInfoMap@@UAEHPBD@Z PROC ; CGraphIndicatorInfoMap::RemoveAllIndicator, COMDAT
; _this$ = ecx

; 165  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RemoveAllIndicator@CGraphIndicatorInfoMap@@UAEHPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 166  : 	if( GetCount() <= 0 || !p_szIndicatorName) return NULL;

  0002a	83 7f 0c 00	 cmp	 DWORD PTR [edi+12], 0
  0002e	0f 8e e1 00 00
	00		 jle	 $LN5@RemoveAllI
  00034	8b 75 08	 mov	 esi, DWORD PTR _p_szIndicatorName$[ebp]
  00037	85 f6		 test	 esi, esi
  00039	0f 84 d6 00 00
	00		 je	 $LN5@RemoveAllI

; 167  : 	if( !*p_szIndicatorName) return NULL;

  0003f	80 3e 00	 cmp	 BYTE PTR [esi], 0
  00042	0f 84 cd 00 00
	00		 je	 $LN5@RemoveAllI

; 170  : 	CString strKey;

  00048	8d 4d ec	 lea	 ecx, DWORD PTR _strKey$[ebp]
  0004b	33 db		 xor	 ebx, ebx
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 630  : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00053	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00056	8b c1		 mov	 eax, ecx
  00058	f7 d8		 neg	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 170  : 	CString strKey;

  0005a	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx

; 171  : 	CIndicatorInfo *pIndicatorInfo = NULL;

  0005d	89 5d f0	 mov	 DWORD PTR _pIndicatorInfo$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 630  : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00060	1b c0		 sbb	 eax, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 172  : 	POSITION psnIndicator = GetStartPosition();

  00062	89 45 e4	 mov	 DWORD PTR _psnIndicator$[ebp], eax
  00065	85 c9		 test	 ecx, ecx

; 173  : 	while( psnIndicator)

  00067	0f 84 89 00 00
	00		 je	 $LN3@RemoveAllI
  0006d	0f 1f 00	 npad	 3
$LL2@RemoveAllI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2068 : 		{ BASE_CLASS::GetNextAssoc(rPosition, (typename BASE_CLASS::BASE_KEY&)rKey,

  00070	8d 45 f0	 lea	 eax, DWORD PTR _pIndicatorInfo$[ebp]
  00073	8b cf		 mov	 ecx, edi
  00075	50		 push	 eax
  00076	8d 45 ec	 lea	 eax, DWORD PTR _strKey$[ebp]
  00079	50		 push	 eax
  0007a	8d 45 e4	 lea	 eax, DWORD PTR _psnIndicator$[ebp]
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ?GetNextAssoc@CMapStringToPtr@@QBEXAAPAU__POSITION@@AAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAPAX@Z ; CMapStringToPtr::GetNextAssoc
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 176  : 		if( pIndicatorInfo->GetIndicatorName() == p_szIndicatorName)

  00083	8b 4d f0	 mov	 ecx, DWORD PTR _pIndicatorInfo$[ebp]
  00086	8d 45 e0	 lea	 eax, DWORD PTR $T2[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ?GetIndicatorName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfo::GetIndicatorName
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h

; 2486 : 		return(str1.Compare(psz2) == 0);

  0008f	56		 push	 esi
  00090	8b c8		 mov	 ecx, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 176  : 		if( pIndicatorInfo->GetIndicatorName() == p_szIndicatorName)

  00092	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h

; 2486 : 		return(str1.Compare(psz2) == 0);

  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 176  : 		if( pIndicatorInfo->GetIndicatorName() == p_szIndicatorName)

  0009c	8d 4d e0	 lea	 ecx, DWORD PTR $T2[ebp]
  0009f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h

; 2486 : 		return(str1.Compare(psz2) == 0);

  000a3	8b f0		 mov	 esi, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 176  : 		if( pIndicatorInfo->GetIndicatorName() == p_szIndicatorName)

  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000ab	85 f6		 test	 esi, esi
  000ad	75 3a		 jne	 SHORT $LN7@RemoveAllI

; 177  : 		{
; 178  : 			RemoveKey( strKey);

  000af	8d 45 ec	 lea	 eax, DWORD PTR _strKey$[ebp]
  000b2	50		 push	 eax
  000b3	8d 4d e8	 lea	 ecx, DWORD PTR $T3[ebp]
  000b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2064 : 		{ return BASE_CLASS::RemoveKey(key); }

  000bc	ff 75 e8	 push	 DWORD PTR $T3[ebp]
  000bf	8b cf		 mov	 ecx, edi
  000c1	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000c5	e8 00 00 00 00	 call	 ?RemoveKey@CMapStringToPtr@@QAEHPBD@Z ; CMapStringToPtr::RemoveKey
  000ca	8d 4d e8	 lea	 ecx, DWORD PTR $T3[ebp]
  000cd	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 179  : 			delete pIndicatorInfo;

  000d7	8b 4d f0	 mov	 ecx, DWORD PTR _pIndicatorInfo$[ebp]
  000da	85 c9		 test	 ecx, ecx
  000dc	74 06		 je	 SHORT $LN9@RemoveAllI
  000de	8b 01		 mov	 eax, DWORD PTR [ecx]
  000e0	6a 01		 push	 1
  000e2	ff 10		 call	 DWORD PTR [eax]
$LN9@RemoveAllI:

; 180  : 			bResult = TRUE;

  000e4	bb 01 00 00 00	 mov	 ebx, 1
$LN7@RemoveAllI:

; 173  : 	while( psnIndicator)

  000e9	83 7d e4 00	 cmp	 DWORD PTR _psnIndicator$[ebp], 0
  000ed	8b 75 08	 mov	 esi, DWORD PTR _p_szIndicatorName$[ebp]
  000f0	0f 85 7a ff ff
	ff		 jne	 $LL2@RemoveAllI
$LN3@RemoveAllI:

; 181  : 		}
; 182  : 	}
; 183  : 
; 184  : 	return bResult;

  000f6	8d 4d ec	 lea	 ecx, DWORD PTR _strKey$[ebp]
  000f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000ff	8b c3		 mov	 eax, ebx

; 185  : }

  00101	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00104	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0010b	59		 pop	 ecx
  0010c	5f		 pop	 edi
  0010d	5e		 pop	 esi
  0010e	5b		 pop	 ebx
  0010f	8b e5		 mov	 esp, ebp
  00111	5d		 pop	 ebp
  00112	c2 04 00	 ret	 4
$LN5@RemoveAllI:

; 166  : 	if( GetCount() <= 0 || !p_szIndicatorName) return NULL;

  00115	33 c0		 xor	 eax, eax

; 185  : }

  00117	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0011a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00121	59		 pop	 ecx
  00122	5f		 pop	 edi
  00123	5e		 pop	 esi
  00124	5b		 pop	 ebx
  00125	8b e5		 mov	 esp, ebp
  00127	5d		 pop	 ebp
  00128	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RemoveAllIndicator@CGraphIndicatorInfoMap@@UAEHPBD@Z$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR _strKey$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?RemoveAllIndicator@CGraphIndicatorInfoMap@@UAEHPBD@Z$1:
  00009	8d 4d e0	 lea	 ecx, DWORD PTR $T2[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?RemoveAllIndicator@CGraphIndicatorInfoMap@@UAEHPBD@Z$3:
  00012	8d 4d e8	 lea	 ecx, DWORD PTR $T3[ebp]
  00015	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
  0001f	cc		 int	 3
__ehhandler$?RemoveAllIndicator@CGraphIndicatorInfoMap@@UAEHPBD@Z:
  00020	90		 npad	 1
  00021	90		 npad	 1
  00022	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00026	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00029	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0002c	33 c8		 xor	 ecx, eax
  0002e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00033	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RemoveAllIndicator@CGraphIndicatorInfoMap@@UAEHPBD@Z
  00038	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RemoveAllIndicator@CGraphIndicatorInfoMap@@UAEHPBD@Z ENDP ; CGraphIndicatorInfoMap::RemoveAllIndicator
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
;	COMDAT ?AddIndicatorInfo@CGraphIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z
_TEXT	SEGMENT
_pIndicatorInfo$ = -20					; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T3 = 8							; size = 4
_p_pIndicatorInfo$ = 8					; size = 4
?AddIndicatorInfo@CGraphIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z PROC ; CGraphIndicatorInfoMap::AddIndicatorInfo, COMDAT
; _this$ = ecx

; 153  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddIndicatorInfo@CGraphIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 154  : 	if( !p_pIndicatorInfo) return FALSE;

  0002a	8b 75 08	 mov	 esi, DWORD PTR _p_pIndicatorInfo$[ebp]
  0002d	85 f6		 test	 esi, esi
  0002f	74 6c		 je	 SHORT $LN18@AddIndicat

; 155  : 	const char *szGraphName = p_pIndicatorInfo->GetGraphName();

  00031	8d 45 f0	 lea	 eax, DWORD PTR $T2[ebp]
  00034	8b ce		 mov	 ecx, esi
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?GetGraphName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfo::GetGraphName
  0003c	8d 4d f0	 lea	 ecx, DWORD PTR $T2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 377  : 		return( m_pszData );

  0003f	8b 18		 mov	 ebx, DWORD PTR [eax]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 155  : 	const char *szGraphName = p_pIndicatorInfo->GetGraphName();

  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  00047	8d 45 ec	 lea	 eax, DWORD PTR _pIndicatorInfo$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 157  : 	CIndicatorInfo *pIndicatorInfo = NULL;

  0004a	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pIndicatorInfo$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  00051	50		 push	 eax
  00052	53		 push	 ebx
  00053	8b cf		 mov	 ecx, edi
  00055	e8 00 00 00 00	 call	 ?Lookup@CMapStringToPtr@@QBEHPBDAAPAX@Z ; CMapStringToPtr::Lookup
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 158  : 	if( Lookup( szGraphName, pIndicatorInfo)) return FALSE;

  0005a	85 c0		 test	 eax, eax
  0005c	75 3f		 jne	 SHORT $LN18@AddIndicat

; 159  : 
; 160  : 	SetAt( szGraphName, p_pIndicatorInfo);

  0005e	53		 push	 ebx
  0005f	8d 4d 08	 lea	 ecx, DWORD PTR $T3[ebp]
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 628  : 	{ (*this)[key] = newValue; }

  00068	ff 75 08	 push	 DWORD PTR $T3[ebp]
  0006b	8b cf		 mov	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2060 : 		{ BASE_CLASS::SetAt(key, newValue); }

  0006d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 628  : 	{ (*this)[key] = newValue; }

  00074	e8 00 00 00 00	 call	 ??ACMapStringToPtr@@QAEAAPAXPBD@Z ; CMapStringToPtr::operator[]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2060 : 		{ BASE_CLASS::SetAt(key, newValue); }

  00079	8d 4d 08	 lea	 ecx, DWORD PTR $T3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 628  : 	{ (*this)[key] = newValue; }

  0007c	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2060 : 		{ BASE_CLASS::SetAt(key, newValue); }

  0007e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 161  : 	return TRUE;

  00084	b8 01 00 00 00	 mov	 eax, 1

; 162  : }

  00089	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00093	59		 pop	 ecx
  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 04 00	 ret	 4
$LN18@AddIndicat:

; 158  : 	if( Lookup( szGraphName, pIndicatorInfo)) return FALSE;

  0009d	33 c0		 xor	 eax, eax

; 162  : }

  0009f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a9	59		 pop	 ecx
  000aa	5f		 pop	 edi
  000ab	5e		 pop	 esi
  000ac	5b		 pop	 ebx
  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddIndicatorInfo@CGraphIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z$2:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
__ehhandler$?AddIndicatorInfo@CGraphIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z:
  0000e	90		 npad	 1
  0000f	90		 npad	 1
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddIndicatorInfo@CGraphIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddIndicatorInfo@CGraphIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z ENDP ; CGraphIndicatorInfoMap::AddIndicatorInfo
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
;	COMDAT ??1CGraphIndicatorInfoMap@@UAE@XZ
_TEXT	SEGMENT
??1CGraphIndicatorInfoMap@@UAE@XZ PROC			; CGraphIndicatorInfoMap::~CGraphIndicatorInfoMap, COMDAT
; _this$ = ecx

; 24   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CIndicatorInfoMap@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CMapStringToPtr@@UAE@XZ ; CMapStringToPtr::~CMapStringToPtr
??1CGraphIndicatorInfoMap@@UAE@XZ ENDP			; CGraphIndicatorInfoMap::~CGraphIndicatorInfoMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
;	COMDAT ??0CGraphIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p_eIndicatorInfoType$ = 8				; size = 4
??0CGraphIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z PROC ; CGraphIndicatorInfoMap::CGraphIndicatorInfoMap, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CGraphIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2048 : 		: BASE_CLASS(nBlockSize) { }

  00029	6a 0a		 push	 10			; 0000000aH
  0002b	e8 00 00 00 00	 call	 ??0CMapStringToPtr@@QAE@H@Z ; CMapStringToPtr::CMapStringToPtr
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 18   : 	m_eIndicatorInfoType = p_eIndicatorInfoType;

  00030	8b 45 08	 mov	 eax, DWORD PTR _p_eIndicatorInfoType$[ebp]

; 19   : 
; 20   : 	InitHashTable( 200);

  00033	8b ce		 mov	 ecx, esi
  00035	6a 01		 push	 1
  00037	68 c8 00 00 00	 push	 200			; 000000c8H
  0003c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00043	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CIndicatorInfoMap@@6B@
  00049	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  0004c	e8 00 00 00 00	 call	 ?InitHashTable@CMapStringToPtr@@QAEXIH@Z ; CMapStringToPtr::InitHashTable

; 143  : {

  00051	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGraphIndicatorInfoMap@@6B@

; 144  : 
; 145  : }

  00057	8b c6		 mov	 eax, esi
  00059	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00063	59		 pop	 ecx
  00064	5e		 pop	 esi
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CGraphIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@UAE@XZ
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0CGraphIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CGraphIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CGraphIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z ENDP ; CGraphIndicatorInfoMap::CGraphIndicatorInfoMap
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCDefaultIndicatorInfoMap@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCDefaultIndicatorInfoMap@@UAEPAXI@Z PROC		; CDefaultIndicatorInfoMap::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 101  : {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 102  : 
; 103  : }

  00006	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDefaultIndicatorInfoMap@@6B@
  0000f	e8 00 00 00 00	 call	 ??1CStringList@@UAE@XZ	; CStringList::~CStringList
  00014	8b ce		 mov	 ecx, esi

; 24   : {

  00016	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CIndicatorInfoMap@@6B@
  0001c	e8 00 00 00 00	 call	 ??1CMapStringToPtr@@UAE@XZ ; CMapStringToPtr::~CMapStringToPtr
  00021	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00024	a8 01		 test	 al, 1
  00026	74 1f		 je	 SHORT $LN18@scalar
  00028	a8 04		 test	 al, 4
  0002a	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  0002c	56		 push	 esi
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00032	83 c4 04	 add	 esp, 4
  00035	8b c6		 mov	 eax, esi
  00037	5e		 pop	 esi
  00038	5d		 pop	 ebp
  00039	c2 04 00	 ret	 4
$LN3@scalar:
  0003c	6a 3c		 push	 60			; 0000003cH
  0003e	56		 push	 esi
  0003f	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00044	83 c4 08	 add	 esp, 8
$LN18@scalar:
  00047	8b c6		 mov	 eax, esi
  00049	5e		 pop	 esi
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
??_GCDefaultIndicatorInfoMap@@UAEPAXI@Z ENDP		; CDefaultIndicatorInfoMap::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
;	COMDAT ?GetAllIndicatorNameWithGroupName@CDefaultIndicatorInfoMap@@UBEHAAVCIndicatorGroupDataList@@W4CHART_MODE@CChartInfo@@@Z
_TEXT	SEGMENT
$T2 = -20						; size = 4
_pIndicatorInfo$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_indiGroupDataList$ = 8					; size = 4
_p_eChartMode$ = 12					; size = 4
?GetAllIndicatorNameWithGroupName@CDefaultIndicatorInfoMap@@UBEHAAVCIndicatorGroupDataList@@W4CHART_MODE@CChartInfo@@@Z PROC ; CDefaultIndicatorInfoMap::GetAllIndicatorNameWithGroupName, COMDAT
; _this$ = ecx

; 120  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetAllIndicatorNameWithGroupName@CDefaultIndicatorInfoMap@@UBEHAAVCIndicatorGroupDataList@@W4CHART_MODE@CChartInfo@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx

; 121  : 	if( GetCount() <= 0) return FALSE;

  0002a	83 7b 0c 00	 cmp	 DWORD PTR [ebx+12], 0
  0002e	7f 16		 jg	 SHORT $LN4@GetAllIndi
  00030	33 c0		 xor	 eax, eax

; 136  : }

  00032	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00035	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0003c	59		 pop	 ecx
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 08 00	 ret	 8
$LN4@GetAllIndi:

; 122  : 
; 123  : 	CIndicatorInfo *pIndicatorInfo = NULL;
; 124  : 	POSITION psnIndicator = m_slIndicatorNameList.GetHeadPosition();

  00046	8b 73 24	 mov	 esi, DWORD PTR [ebx+36]
  00049	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _pIndicatorInfo$[ebp], 0

; 125  : 	while( psnIndicator)

  00050	85 f6		 test	 esi, esi
  00052	74 65		 je	 SHORT $LN3@GetAllIndi
$LL2@GetAllIndi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 508  : 	{ CNode* pNode = (CNode*) rPosition;

  00054	8b fe		 mov	 edi, esi

; 509  : 		ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 510  : 		if( pNode == NULL )
; 511  : 			AfxThrowInvalidArgException();
; 512  : 		rPosition = (POSITION) pNode->pNext;

  00056	8b 36		 mov	 esi, DWORD PTR [esi]

; 513  : 		return pNode->data; }

  00058	83 c7 08	 add	 edi, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

  0005b	8b 07		 mov	 eax, DWORD PTR [edi]

; 533  : 		return( GetLength() == 0 );

  0005d	83 78 f4 00	 cmp	 DWORD PTR [eax-12], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 128  : 		if( strIndicatorName.IsEmpty()) continue;

  00061	74 52		 je	 SHORT $LN31@GetAllIndi

; 129  : 		if( !g_iMetaTable.IsIndicatorInThisMode( strIndicatorName, p_eChartMode)) continue;

  00063	ff 75 0c	 push	 DWORD PTR _p_eChartMode$[ebp]
  00066	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_iMetaTable@@3VIMetaTable@@A ; g_iMetaTable
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?IsIndicatorInThisMode@IMetaTable@@QAEHPBDW4CHART_MODE@CChartInfo@@@Z ; IMetaTable::IsIndicatorInThisMode
  00071	85 c0		 test	 eax, eax
  00073	74 40		 je	 SHORT $LN31@GetAllIndi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  00075	8d 45 f0	 lea	 eax, DWORD PTR _pIndicatorInfo$[ebp]
  00078	8b cb		 mov	 ecx, ebx
  0007a	50		 push	 eax
  0007b	ff 37		 push	 DWORD PTR [edi]
  0007d	e8 00 00 00 00	 call	 ?Lookup@CMapStringToPtr@@QBEHPBDAAPAX@Z ; CMapStringToPtr::Lookup
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 131  : 		if( !Lookup( strIndicatorName, pIndicatorInfo)) continue;

  00082	85 c0		 test	 eax, eax
  00084	74 2f		 je	 SHORT $LN31@GetAllIndi

; 132  : 
; 133  : 		indiGroupDataList.AddTail_IndiName( pIndicatorInfo->GetGroupName(), strIndicatorName);

  00086	8b 4d f0	 mov	 ecx, DWORD PTR _pIndicatorInfo$[ebp]
  00089	8d 45 ec	 lea	 eax, DWORD PTR $T2[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ?GetGroupName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfo::GetGroupName
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _indiGroupDataList$[ebp]
  00095	6a 01		 push	 1
  00097	57		 push	 edi
  00098	50		 push	 eax
  00099	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000a0	e8 00 00 00 00	 call	 ?AddTail_IndiName@CIndicatorGroupDataList@@QAE_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0_N@Z ; CIndicatorGroupDataList::AddTail_IndiName
  000a5	8d 4d ec	 lea	 ecx, DWORD PTR $T2[ebp]
  000a8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN31@GetAllIndi:

; 125  : 	while( psnIndicator)

  000b5	85 f6		 test	 esi, esi
  000b7	75 9b		 jne	 SHORT $LL2@GetAllIndi
$LN3@GetAllIndi:

; 134  : 	}
; 135  : 	return TRUE;

  000b9	b8 01 00 00 00	 mov	 eax, 1

; 136  : }

  000be	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c8	59		 pop	 ecx
  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetAllIndicatorNameWithGroupName@CDefaultIndicatorInfoMap@@UBEHAAVCIndicatorGroupDataList@@W4CHART_MODE@CChartInfo@@@Z$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
__ehhandler$?GetAllIndicatorNameWithGroupName@CDefaultIndicatorInfoMap@@UBEHAAVCIndicatorGroupDataList@@W4CHART_MODE@CChartInfo@@@Z:
  0000e	90		 npad	 1
  0000f	90		 npad	 1
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetAllIndicatorNameWithGroupName@CDefaultIndicatorInfoMap@@UBEHAAVCIndicatorGroupDataList@@W4CHART_MODE@CChartInfo@@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetAllIndicatorNameWithGroupName@CDefaultIndicatorInfoMap@@UBEHAAVCIndicatorGroupDataList@@W4CHART_MODE@CChartInfo@@@Z ENDP ; CDefaultIndicatorInfoMap::GetAllIndicatorNameWithGroupName
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
;	COMDAT ?AddIndicatorInfo@CDefaultIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z
_TEXT	SEGMENT
_pIndicatorInfo$ = -20					; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T3 = 8							; size = 4
_p_pIndicatorInfo$ = 8					; size = 4
?AddIndicatorInfo@CDefaultIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z PROC ; CDefaultIndicatorInfoMap::AddIndicatorInfo, COMDAT
; _this$ = ecx

; 106  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddIndicatorInfo@CDefaultIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 107  : 	if( !p_pIndicatorInfo) return FALSE;

  0002a	8b 75 08	 mov	 esi, DWORD PTR _p_pIndicatorInfo$[ebp]
  0002d	85 f6		 test	 esi, esi
  0002f	74 7c		 je	 SHORT $LN18@AddIndicat

; 108  : 	const char *szIndicatorName = p_pIndicatorInfo->GetIndicatorName();

  00031	8d 45 f0	 lea	 eax, DWORD PTR $T2[ebp]
  00034	8b ce		 mov	 ecx, esi
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?GetIndicatorName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfo::GetIndicatorName
  0003c	8d 4d f0	 lea	 ecx, DWORD PTR $T2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 377  : 		return( m_pszData );

  0003f	8b 18		 mov	 ebx, DWORD PTR [eax]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 108  : 	const char *szIndicatorName = p_pIndicatorInfo->GetIndicatorName();

  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  00047	8d 45 ec	 lea	 eax, DWORD PTR _pIndicatorInfo$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 110  : 	CIndicatorInfo *pIndicatorInfo = NULL;

  0004a	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pIndicatorInfo$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  00051	50		 push	 eax
  00052	53		 push	 ebx
  00053	8b cf		 mov	 ecx, edi
  00055	e8 00 00 00 00	 call	 ?Lookup@CMapStringToPtr@@QBEHPBDAAPAX@Z ; CMapStringToPtr::Lookup
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 111  : 	if( Lookup( szIndicatorName, pIndicatorInfo)) return FALSE;

  0005a	85 c0		 test	 eax, eax
  0005c	75 4f		 jne	 SHORT $LN18@AddIndicat

; 112  : 
; 113  : 	SetAt( szIndicatorName, p_pIndicatorInfo);

  0005e	53		 push	 ebx
  0005f	8d 4d 08	 lea	 ecx, DWORD PTR $T3[ebp]
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 628  : 	{ (*this)[key] = newValue; }

  00068	ff 75 08	 push	 DWORD PTR $T3[ebp]
  0006b	8b cf		 mov	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2060 : 		{ BASE_CLASS::SetAt(key, newValue); }

  0006d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 628  : 	{ (*this)[key] = newValue; }

  00074	e8 00 00 00 00	 call	 ??ACMapStringToPtr@@QAEAAPAXPBD@Z ; CMapStringToPtr::operator[]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2060 : 		{ BASE_CLASS::SetAt(key, newValue); }

  00079	8d 4d 08	 lea	 ecx, DWORD PTR $T3[ebp]
  0007c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 628  : 	{ (*this)[key] = newValue; }

  00083	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2060 : 		{ BASE_CLASS::SetAt(key, newValue); }

  00085	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 114  : 	m_slIndicatorNameList.AddTail( szIndicatorName);

  0008b	53		 push	 ebx
  0008c	8d 4f 20	 lea	 ecx, DWORD PTR [edi+32]
  0008f	e8 00 00 00 00	 call	 ?AddTail@CStringList@@QAEPAU__POSITION@@PBD@Z ; CStringList::AddTail

; 115  : 	return TRUE;

  00094	b8 01 00 00 00	 mov	 eax, 1

; 116  : }

  00099	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a3	59		 pop	 ecx
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 04 00	 ret	 4
$LN18@AddIndicat:

; 111  : 	if( Lookup( szIndicatorName, pIndicatorInfo)) return FALSE;

  000ad	33 c0		 xor	 eax, eax

; 116  : }

  000af	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b9	59		 pop	 ecx
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddIndicatorInfo@CDefaultIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z$2:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
__ehhandler$?AddIndicatorInfo@CDefaultIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z:
  0000e	90		 npad	 1
  0000f	90		 npad	 1
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddIndicatorInfo@CDefaultIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddIndicatorInfo@CDefaultIndicatorInfoMap@@UAEHPAVCIndicatorInfo@@@Z ENDP ; CDefaultIndicatorInfoMap::AddIndicatorInfo
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
;	COMDAT ??1CDefaultIndicatorInfoMap@@UAE@XZ
_TEXT	SEGMENT
??1CDefaultIndicatorInfoMap@@UAE@XZ PROC		; CDefaultIndicatorInfoMap::~CDefaultIndicatorInfoMap, COMDAT
; _this$ = ecx

; 101  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 102  : 
; 103  : }

  00003	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDefaultIndicatorInfoMap@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CStringList@@UAE@XZ	; CStringList::~CStringList

; 24   : {

  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CIndicatorInfoMap@@6B@
  00017	8b ce		 mov	 ecx, esi
  00019	5e		 pop	 esi
  0001a	e9 00 00 00 00	 jmp	 ??1CMapStringToPtr@@UAE@XZ ; CMapStringToPtr::~CMapStringToPtr
??1CDefaultIndicatorInfoMap@@UAE@XZ ENDP		; CDefaultIndicatorInfoMap::~CDefaultIndicatorInfoMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
;	COMDAT ??0CDefaultIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p_eIndicatorInfoType$ = 8				; size = 4
??0CDefaultIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z PROC ; CDefaultIndicatorInfoMap::CDefaultIndicatorInfoMap, COMDAT
; _this$ = ecx

; 96   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CDefaultIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2048 : 		: BASE_CLASS(nBlockSize) { }

  00029	6a 0a		 push	 10			; 0000000aH
  0002b	e8 00 00 00 00	 call	 ??0CMapStringToPtr@@QAE@H@Z ; CMapStringToPtr::CMapStringToPtr
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 18   : 	m_eIndicatorInfoType = p_eIndicatorInfoType;

  00030	8b 45 08	 mov	 eax, DWORD PTR _p_eIndicatorInfoType$[ebp]

; 19   : 
; 20   : 	InitHashTable( 200);

  00033	8b ce		 mov	 ecx, esi
  00035	6a 01		 push	 1
  00037	68 c8 00 00 00	 push	 200			; 000000c8H
  0003c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00043	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CIndicatorInfoMap@@6B@
  00049	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  0004c	e8 00 00 00 00	 call	 ?InitHashTable@CMapStringToPtr@@QAEXIH@Z ; CMapStringToPtr::InitHashTable

; 96   : {

  00051	6a 0a		 push	 10			; 0000000aH
  00053	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  00056	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  0005d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDefaultIndicatorInfoMap@@6B@
  00063	e8 00 00 00 00	 call	 ??0CStringList@@QAE@H@Z	; CStringList::CStringList

; 97   : 
; 98   : }

  00068	8b c6		 mov	 eax, esi
  0006a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00074	59		 pop	 ecx
  00075	5e		 pop	 esi
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDefaultIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z$2:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@UAE@XZ
__unwindfunclet$??0CDefaultIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z$0:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1CIndicatorInfoMap@@UAE@XZ ; CIndicatorInfoMap::~CIndicatorInfoMap
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$??0CDefaultIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CDefaultIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CDefaultIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z ENDP ; CDefaultIndicatorInfoMap::CDefaultIndicatorInfoMap
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCIndicatorInfoMap@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCIndicatorInfoMap@@UAEPAXI@Z PROC			; CIndicatorInfoMap::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 24   : {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CIndicatorInfoMap@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CMapStringToPtr@@UAE@XZ ; CMapStringToPtr::~CMapStringToPtr
  00011	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00014	a8 01		 test	 al, 1
  00016	74 1f		 je	 SHORT $LN15@scalar
  00018	a8 04		 test	 al, 4
  0001a	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
$LN3@scalar:
  0002c	6a 20		 push	 32			; 00000020H
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00034	83 c4 08	 add	 esp, 8
$LN15@scalar:
  00037	8b c6		 mov	 eax, esi
  00039	5e		 pop	 esi
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
??_GCIndicatorInfoMap@@UAEPAXI@Z ENDP			; CIndicatorInfoMap::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
;	COMDAT ?GetIndicatorInfo@CIndicatorInfoMap@@QAEPAVCIndicatorInfo@@PBDW4CHART_MODE@CChartInfo@@@Z
_TEXT	SEGMENT
_pIndicatorInfo$ = 8					; size = 4
_p_szIndicatorKeyName$ = 8				; size = 4
_p_eChartMode$ = 12					; size = 4
?GetIndicatorInfo@CIndicatorInfoMap@@QAEPAVCIndicatorInfo@@PBDW4CHART_MODE@CChartInfo@@@Z PROC ; CIndicatorInfoMap::GetIndicatorInfo, COMDAT
; _this$ = ecx

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 82   : 	if( !p_szIndicatorKeyName) return NULL;

  00004	8b 75 08	 mov	 esi, DWORD PTR _p_szIndicatorKeyName$[ebp]
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	85 f6		 test	 esi, esi
  0000c	74 37		 je	 SHORT $LN9@GetIndicat

; 83   : 	if( !*p_szIndicatorKeyName) return NULL;

  0000e	80 3e 00	 cmp	 BYTE PTR [esi], 0
  00011	74 32		 je	 SHORT $LN9@GetIndicat

; 84   : 	if( !g_iMetaTable.IsIndicatorInThisMode( p_szIndicatorKeyName, p_eChartMode)) return NULL;

  00013	ff 75 0c	 push	 DWORD PTR _p_eChartMode$[ebp]
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_iMetaTable@@3VIMetaTable@@A ; g_iMetaTable
  0001b	56		 push	 esi
  0001c	e8 00 00 00 00	 call	 ?IsIndicatorInThisMode@IMetaTable@@QAEHPBDW4CHART_MODE@CChartInfo@@@Z ; IMetaTable::IsIndicatorInThisMode
  00021	85 c0		 test	 eax, eax
  00023	74 20		 je	 SHORT $LN9@GetIndicat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  00025	8d 45 08	 lea	 eax, DWORD PTR _pIndicatorInfo$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 85   : 	CIndicatorInfo *pIndicatorInfo = NULL;

  00028	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _pIndicatorInfo$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2052 : 		{ return BASE_CLASS::Lookup(key, (typename BASE_CLASS::BASE_VALUE&)rValue); }

  0002f	50		 push	 eax
  00030	56		 push	 esi
  00031	8b cf		 mov	 ecx, edi
  00033	e8 00 00 00 00	 call	 ?Lookup@CMapStringToPtr@@QBEHPBDAAPAX@Z ; CMapStringToPtr::Lookup
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 86   : 	if( !Lookup( p_szIndicatorKeyName, pIndicatorInfo)) return NULL;

  00038	85 c0		 test	 eax, eax
  0003a	74 09		 je	 SHORT $LN9@GetIndicat

; 87   : 	return pIndicatorInfo;

  0003c	8b 45 08	 mov	 eax, DWORD PTR _pIndicatorInfo$[ebp]
  0003f	5f		 pop	 edi

; 88   : }

  00040	5e		 pop	 esi
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
$LN9@GetIndicat:
  00045	5f		 pop	 edi

; 86   : 	if( !Lookup( p_szIndicatorKeyName, pIndicatorInfo)) return NULL;

  00046	33 c0		 xor	 eax, eax

; 88   : }

  00048	5e		 pop	 esi
  00049	5d		 pop	 ebp
  0004a	c2 08 00	 ret	 8
?GetIndicatorInfo@CIndicatorInfoMap@@QAEPAVCIndicatorInfo@@PBDW4CHART_MODE@CChartInfo@@@Z ENDP ; CIndicatorInfoMap::GetIndicatorInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.h
;	COMDAT ?GetAllIndicatorNameWithGroupName@CIndicatorInfoMap@@UBEHAAVCIndicatorGroupDataList@@W4CHART_MODE@CChartInfo@@@Z
_TEXT	SEGMENT
_indiGroupDataList$ = 8					; size = 4
_p_eChartMode$ = 12					; size = 4
?GetAllIndicatorNameWithGroupName@CIndicatorInfoMap@@UBEHAAVCIndicatorGroupDataList@@W4CHART_MODE@CChartInfo@@@Z PROC ; CIndicatorInfoMap::GetAllIndicatorNameWithGroupName, COMDAT
; _this$ = ecx

; 43   : 	virtual BOOL				GetAllIndicatorNameWithGroupName( CIndicatorGroupDataList& indiGroupDataList, CChartInfo::CHART_MODE p_eChartMode)		const	{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 08 00	 ret	 8
?GetAllIndicatorNameWithGroupName@CIndicatorInfoMap@@UBEHAAVCIndicatorGroupDataList@@W4CHART_MODE@CChartInfo@@@Z ENDP ; CIndicatorInfoMap::GetAllIndicatorNameWithGroupName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.h
;	COMDAT ?GetGraphNameList@CIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z
_TEXT	SEGMENT
_dataList$ = 8						; size = 4
_p_eChartMode$ = 12					; size = 4
?GetGraphNameList@CIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z PROC ; CIndicatorInfoMap::GetGraphNameList, COMDAT
; _this$ = ecx

; 42   : 	virtual BOOL				GetGraphNameList( CStringDataList& dataList, CChartInfo::CHART_MODE p_eChartMode)										const	{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 08 00	 ret	 8
?GetGraphNameList@CIndicatorInfoMap@@UBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z ENDP ; CIndicatorInfoMap::GetGraphNameList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.h
;	COMDAT ?GetNextIndicatorInfo@CIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z
_TEXT	SEGMENT
_p_szIndicatorName$ = 8					; size = 4
_p_ppsnIndicator$ = 12					; size = 4
?GetNextIndicatorInfo@CIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z PROC ; CIndicatorInfoMap::GetNextIndicatorInfo, COMDAT
; _this$ = ecx

; 41   : 	virtual CIndicatorInfo *	GetNextIndicatorInfo( const char *p_szIndicatorName, POSITION *p_ppsnIndicator)											const	{	return NULL;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 08 00	 ret	 8
?GetNextIndicatorInfo@CIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@@Z ENDP ; CIndicatorInfoMap::GetNextIndicatorInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.h
;	COMDAT ?GetFirstIndicatorInfo@CIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@W4CHART_MODE@CChartInfo@@@Z
_TEXT	SEGMENT
_p_szIndicatorName$ = 8					; size = 4
_p_ppsnIndicator$ = 12					; size = 4
_p_eChartMode$ = 16					; size = 4
?GetFirstIndicatorInfo@CIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@W4CHART_MODE@CChartInfo@@@Z PROC ; CIndicatorInfoMap::GetFirstIndicatorInfo, COMDAT
; _this$ = ecx

; 40   : 	virtual CIndicatorInfo *	GetFirstIndicatorInfo( const char *p_szIndicatorName, POSITION *p_ppsnIndicator, CChartInfo::CHART_MODE p_eChartMode)	const	{	return NULL;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 0c 00	 ret	 12			; 0000000cH
?GetFirstIndicatorInfo@CIndicatorInfoMap@@UBEPAVCIndicatorInfo@@PBDPAPAU__POSITION@@W4CHART_MODE@CChartInfo@@@Z ENDP ; CIndicatorInfoMap::GetFirstIndicatorInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.h
;	COMDAT ?RemoveAllIndicator@CIndicatorInfoMap@@UAEHPBD@Z
_TEXT	SEGMENT
_p_szIndicatorName$ = 8					; size = 4
?RemoveAllIndicator@CIndicatorInfoMap@@UAEHPBD@Z PROC	; CIndicatorInfoMap::RemoveAllIndicator, COMDAT
; _this$ = ecx

; 39   : 	virtual BOOL				RemoveAllIndicator( const char *p_szIndicatorName)																				{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 04 00	 ret	 4
?RemoveAllIndicator@CIndicatorInfoMap@@UAEHPBD@Z ENDP	; CIndicatorInfoMap::RemoveAllIndicator
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
;	COMDAT ?GetIndicatorNameList@CIndicatorInfoMap@@QBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z
_TEXT	SEGMENT
_strKey$ = -28						; size = 4
_psnIndicator$ = -24					; size = 4
_pIndicatorInfo$ = -20					; size = 4
_strIndicatorName$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
_dataList$ = 8						; size = 4
$T2 = 12						; size = 4
_p_eChartMode$ = 12					; size = 4
?GetIndicatorNameList@CIndicatorInfoMap@@QBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z PROC ; CIndicatorInfoMap::GetIndicatorNameList, COMDAT
; _this$ = ecx

; 63   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetIndicatorNameList@CIndicatorInfoMap@@QBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx

; 64   : 	if( GetCount() <= 0) return FALSE;

  0002a	83 7e 0c 00	 cmp	 DWORD PTR [esi+12], 0
  0002e	7f 16		 jg	 SHORT $LN4@GetIndicat
  00030	33 c0		 xor	 eax, eax

; 77   : }

  00032	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00035	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0003c	59		 pop	 ecx
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 08 00	 ret	 8
$LN4@GetIndicat:

; 66   : 	CString strKey, strIndicatorName;

  00046	8d 4d e4	 lea	 ecx, DWORD PTR _strKey$[ebp]
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0004f	8d 4d f0	 lea	 ecx, DWORD PTR _strIndicatorName$[ebp]
  00052	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 630  : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  0005f	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00062	8b c1		 mov	 eax, ecx
  00064	f7 d8		 neg	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 66   : 	CString strKey, strIndicatorName;

  00066	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 67   : 	CIndicatorInfo *pIndicatorInfo = NULL;

  0006a	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pIndicatorInfo$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 630  : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00071	1b c0		 sbb	 eax, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 68   : 	POSITION psnIndicator = GetStartPosition();

  00073	89 45 e8	 mov	 DWORD PTR _psnIndicator$[ebp], eax
  00076	85 c9		 test	 ecx, ecx

; 69   : 	while( psnIndicator)

  00078	74 6c		 je	 SHORT $LN3@GetIndicat
  0007a	8b 5d 0c	 mov	 ebx, DWORD PTR _p_eChartMode$[ebp]
  0007d	8b 7d 08	 mov	 edi, DWORD PTR _dataList$[ebp]
$LL2@GetIndicat:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2068 : 		{ BASE_CLASS::GetNextAssoc(rPosition, (typename BASE_CLASS::BASE_KEY&)rKey,

  00080	8d 45 ec	 lea	 eax, DWORD PTR _pIndicatorInfo$[ebp]
  00083	8b ce		 mov	 ecx, esi
  00085	50		 push	 eax
  00086	8d 45 e4	 lea	 eax, DWORD PTR _strKey$[ebp]
  00089	50		 push	 eax
  0008a	8d 45 e8	 lea	 eax, DWORD PTR _psnIndicator$[ebp]
  0008d	50		 push	 eax
  0008e	e8 00 00 00 00	 call	 ?GetNextAssoc@CMapStringToPtr@@QBEXAAPAU__POSITION@@AAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAPAX@Z ; CMapStringToPtr::GetNextAssoc
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 72   : 		strIndicatorName = pIndicatorInfo->GetIndicatorName();

  00093	8b 4d ec	 mov	 ecx, DWORD PTR _pIndicatorInfo$[ebp]
  00096	8d 45 0c	 lea	 eax, DWORD PTR $T2[ebp]
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 ?GetIndicatorName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfo::GetIndicatorName
  0009f	50		 push	 eax
  000a0	8d 4d f0	 lea	 ecx, DWORD PTR _strIndicatorName$[ebp]
  000a3	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  000ad	8d 4d 0c	 lea	 ecx, DWORD PTR $T2[ebp]
  000b0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 73   : 		if( g_iMetaTable.IsIndicatorInThisMode( strIndicatorName, p_eChartMode))

  000ba	53		 push	 ebx
  000bb	ff 75 f0	 push	 DWORD PTR _strIndicatorName$[ebp]
  000be	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_iMetaTable@@3VIMetaTable@@A ; g_iMetaTable
  000c3	e8 00 00 00 00	 call	 ?IsIndicatorInThisMode@IMetaTable@@QAEHPBDW4CHART_MODE@CChartInfo@@@Z ; IMetaTable::IsIndicatorInThisMode
  000c8	85 c0		 test	 eax, eax
  000ca	74 14		 je	 SHORT $LN5@GetIndicat

; 74   : 			dataList.AddTail( strIndicatorName);

  000cc	51		 push	 ecx
  000cd	8d 45 f0	 lea	 eax, DWORD PTR _strIndicatorName$[ebp]
  000d0	8b cc		 mov	 ecx, esp
  000d2	50		 push	 eax
  000d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  000d9	8b cf		 mov	 ecx, edi
  000db	e8 00 00 00 00	 call	 ?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::AddTail
$LN5@GetIndicat:

; 69   : 	while( psnIndicator)

  000e0	83 7d e8 00	 cmp	 DWORD PTR _psnIndicator$[ebp], 0
  000e4	75 9a		 jne	 SHORT $LL2@GetIndicat
$LN3@GetIndicat:

; 75   : 	}
; 76   : 	return TRUE;

  000e6	8d 4d f0	 lea	 ecx, DWORD PTR _strIndicatorName$[ebp]
  000e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000ef	8d 4d e4	 lea	 ecx, DWORD PTR _strKey$[ebp]
  000f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000f8	b8 01 00 00 00	 mov	 eax, 1

; 77   : }

  000fd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00100	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00107	59		 pop	 ecx
  00108	5f		 pop	 edi
  00109	5e		 pop	 esi
  0010a	5b		 pop	 ebx
  0010b	8b e5		 mov	 esp, ebp
  0010d	5d		 pop	 ebp
  0010e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetIndicatorNameList@CIndicatorInfoMap@@QBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR _strKey$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?GetIndicatorNameList@CIndicatorInfoMap@@QBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z$1:
  00009	8d 4d f0	 lea	 ecx, DWORD PTR _strIndicatorName$[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?GetIndicatorNameList@CIndicatorInfoMap@@QBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z$2:
  00012	8d 4d 0c	 lea	 ecx, DWORD PTR $T2[ebp]
  00015	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
  0001f	cc		 int	 3
__ehhandler$?GetIndicatorNameList@CIndicatorInfoMap@@QBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z:
  00020	90		 npad	 1
  00021	90		 npad	 1
  00022	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00026	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00029	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  0002c	33 c8		 xor	 ecx, eax
  0002e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00033	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetIndicatorNameList@CIndicatorInfoMap@@QBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z
  00038	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetIndicatorNameList@CIndicatorInfoMap@@QBEHAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@W4CHART_MODE@CChartInfo@@@Z ENDP ; CIndicatorInfoMap::GetIndicatorNameList
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
;	COMDAT ?DeleteAll@CIndicatorInfoMap@@QAEHXZ
_TEXT	SEGMENT
_strKey$ = -24						; size = 4
_psn$ = -20						; size = 4
_pIndicatorInfo2$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?DeleteAll@CIndicatorInfoMap@@QAEHXZ PROC		; CIndicatorInfoMap::DeleteAll, COMDAT
; _this$ = ecx

; 47   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DeleteAll@CIndicatorInfoMap@@QAEHXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	56		 push	 esi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx

; 48   : 	CString strKey;

  00028	8d 4d e8	 lea	 ecx, DWORD PTR _strKey$[ebp]
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 630  : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00031	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  00034	8b c2		 mov	 eax, edx
  00036	f7 d8		 neg	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 48   : 	CString strKey;

  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 49   : 	CIndicatorInfo *pIndicatorInfo2 = NULL;

  0003f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _pIndicatorInfo2$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 630  : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00046	1b c0		 sbb	 eax, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 50   : 	POSITION psn = GetStartPosition();

  00048	89 45 ec	 mov	 DWORD PTR _psn$[ebp], eax
  0004b	85 d2		 test	 edx, edx

; 51   : 	while( psn)

  0004d	74 27		 je	 SHORT $LN3@DeleteAll
  0004f	90		 npad	 1
$LL2@DeleteAll:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2068 : 		{ BASE_CLASS::GetNextAssoc(rPosition, (typename BASE_CLASS::BASE_KEY&)rKey,

  00050	8d 45 f0	 lea	 eax, DWORD PTR _pIndicatorInfo2$[ebp]
  00053	8b ce		 mov	 ecx, esi
  00055	50		 push	 eax
  00056	8d 45 e8	 lea	 eax, DWORD PTR _strKey$[ebp]
  00059	50		 push	 eax
  0005a	8d 45 ec	 lea	 eax, DWORD PTR _psn$[ebp]
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?GetNextAssoc@CMapStringToPtr@@QBEXAAPAU__POSITION@@AAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAPAX@Z ; CMapStringToPtr::GetNextAssoc
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 54   : 		delete pIndicatorInfo2;

  00063	8b 4d f0	 mov	 ecx, DWORD PTR _pIndicatorInfo2$[ebp]
  00066	85 c9		 test	 ecx, ecx
  00068	74 06		 je	 SHORT $LN5@DeleteAll
  0006a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0006c	6a 01		 push	 1
  0006e	ff 10		 call	 DWORD PTR [eax]
$LN5@DeleteAll:

; 51   : 	while( psn)

  00070	83 7d ec 00	 cmp	 DWORD PTR _psn$[ebp], 0
  00074	75 da		 jne	 SHORT $LL2@DeleteAll
$LN3@DeleteAll:

; 55   : 	}
; 56   : 	RemoveAll();

  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?RemoveAll@CMapStringToPtr@@QAEXXZ ; CMapStringToPtr::RemoveAll

; 57   : 
; 58   : 	return TRUE;

  0007d	8d 4d e8	 lea	 ecx, DWORD PTR _strKey$[ebp]
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00086	b8 01 00 00 00	 mov	 eax, 1

; 59   : }

  0008b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00095	59		 pop	 ecx
  00096	5e		 pop	 esi
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DeleteAll@CIndicatorInfoMap@@QAEHXZ$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR _strKey$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
__ehhandler$?DeleteAll@CIndicatorInfoMap@@QAEHXZ:
  0000e	90		 npad	 1
  0000f	90		 npad	 1
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DeleteAll@CIndicatorInfoMap@@QAEHXZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DeleteAll@CIndicatorInfoMap@@QAEHXZ ENDP		; CIndicatorInfoMap::DeleteAll
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
;	COMDAT ?Delete@CIndicatorInfoMap@@QAEHPAVCIndicatorInfo@@@Z
_TEXT	SEGMENT
_psn$ = -24						; size = 4
_strKey$ = -20						; size = 4
_pIndicatorInfo2$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_p_pIndicatorInfo$ = 8					; size = 4
?Delete@CIndicatorInfoMap@@QAEHPAVCIndicatorInfo@@@Z PROC ; CIndicatorInfoMap::Delete, COMDAT
; _this$ = ecx

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Delete@CIndicatorInfoMap@@QAEHPAVCIndicatorInfo@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f1		 mov	 esi, ecx

; 30   : 	CString strKey;

  00029	8d 4d ec	 lea	 ecx, DWORD PTR _strKey$[ebp]
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 630  : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00032	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  00035	8b c2		 mov	 eax, edx
  00037	f7 d8		 neg	 eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 30   : 	CString strKey;

  00039	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 31   : 	CIndicatorInfo *pIndicatorInfo2 = NULL;

  00040	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _pIndicatorInfo2$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 630  : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00047	1b c0		 sbb	 eax, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 32   : 	POSITION psn = GetStartPosition();

  00049	89 45 e8	 mov	 DWORD PTR _psn$[ebp], eax
  0004c	85 d2		 test	 edx, edx

; 33   : 	while( psn)

  0004e	74 21		 je	 SHORT $LN3@Delete
  00050	8b 7d 08	 mov	 edi, DWORD PTR _p_pIndicatorInfo$[ebp]
$LL2@Delete:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2068 : 		{ BASE_CLASS::GetNextAssoc(rPosition, (typename BASE_CLASS::BASE_KEY&)rKey,

  00053	8d 45 f0	 lea	 eax, DWORD PTR _pIndicatorInfo2$[ebp]
  00056	8b ce		 mov	 ecx, esi
  00058	50		 push	 eax
  00059	8d 45 ec	 lea	 eax, DWORD PTR _strKey$[ebp]
  0005c	50		 push	 eax
  0005d	8d 45 e8	 lea	 eax, DWORD PTR _psn$[ebp]
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?GetNextAssoc@CMapStringToPtr@@QBEXAAPAU__POSITION@@AAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAPAX@Z ; CMapStringToPtr::GetNextAssoc
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 36   : 		if( pIndicatorInfo2 == p_pIndicatorInfo)

  00066	39 7d f0	 cmp	 DWORD PTR _pIndicatorInfo2$[ebp], edi
  00069	74 26		 je	 SHORT $LN21@Delete

; 33   : 	while( psn)

  0006b	83 7d e8 00	 cmp	 DWORD PTR _psn$[ebp], 0
  0006f	75 e2		 jne	 SHORT $LL2@Delete
$LN3@Delete:

; 40   : 			return TRUE;
; 41   : 		}
; 42   : 	}
; 43   : 	return FALSE;

  00071	33 f6		 xor	 esi, esi
$LN10@Delete:
  00073	8d 4d ec	 lea	 ecx, DWORD PTR _strKey$[ebp]
  00076	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0007c	8b c6		 mov	 eax, esi

; 44   : }

  0007e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00081	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00088	59		 pop	 ecx
  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c2 04 00	 ret	 4
$LN21@Delete:

; 37   : 		{
; 38   : 			RemoveKey( strKey);

  00091	8d 45 ec	 lea	 eax, DWORD PTR _strKey$[ebp]
  00094	50		 push	 eax
  00095	8d 4d 08	 lea	 ecx, DWORD PTR $T2[ebp]
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2064 : 		{ return BASE_CLASS::RemoveKey(key); }

  0009e	ff 75 08	 push	 DWORD PTR $T2[ebp]
  000a1	8b ce		 mov	 ecx, esi
  000a3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000a7	e8 00 00 00 00	 call	 ?RemoveKey@CMapStringToPtr@@QAEHPBD@Z ; CMapStringToPtr::RemoveKey
  000ac	8d 4d 08	 lea	 ecx, DWORD PTR $T2[ebp]
  000af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 39   : 			delete pIndicatorInfo2;

  000b5	8b 4d f0	 mov	 ecx, DWORD PTR _pIndicatorInfo2$[ebp]
  000b8	85 c9		 test	 ecx, ecx
  000ba	74 06		 je	 SHORT $LN6@Delete
  000bc	8b 01		 mov	 eax, DWORD PTR [ecx]
  000be	6a 01		 push	 1
  000c0	ff 10		 call	 DWORD PTR [eax]
$LN6@Delete:
  000c2	be 01 00 00 00	 mov	 esi, 1
  000c7	eb aa		 jmp	 SHORT $LN10@Delete
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Delete@CIndicatorInfoMap@@QAEHPAVCIndicatorInfo@@@Z$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR _strKey$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?Delete@CIndicatorInfoMap@@QAEHPAVCIndicatorInfo@@@Z$2:
  00009	8d 4d 08	 lea	 ecx, DWORD PTR $T2[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?Delete@CIndicatorInfoMap@@QAEHPAVCIndicatorInfo@@@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Delete@CIndicatorInfoMap@@QAEHPAVCIndicatorInfo@@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Delete@CIndicatorInfoMap@@QAEHPAVCIndicatorInfo@@@Z ENDP ; CIndicatorInfoMap::Delete
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
;	COMDAT ??1CIndicatorInfoMap@@UAE@XZ
_TEXT	SEGMENT
??1CIndicatorInfoMap@@UAE@XZ PROC			; CIndicatorInfoMap::~CIndicatorInfoMap, COMDAT
; _this$ = ecx

; 24   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CIndicatorInfoMap@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CMapStringToPtr@@UAE@XZ ; CMapStringToPtr::~CMapStringToPtr
??1CIndicatorInfoMap@@UAE@XZ ENDP			; CIndicatorInfoMap::~CIndicatorInfoMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
;	COMDAT ??0CIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p_eIndicatorInfoType$ = 8				; size = 4
??0CIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z PROC	; CIndicatorInfoMap::CIndicatorInfoMap, COMDAT
; _this$ = ecx

; 17   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 2048 : 		: BASE_CLASS(nBlockSize) { }

  00029	6a 0a		 push	 10			; 0000000aH
  0002b	e8 00 00 00 00	 call	 ??0CMapStringToPtr@@QAE@H@Z ; CMapStringToPtr::CMapStringToPtr
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp

; 18   : 	m_eIndicatorInfoType = p_eIndicatorInfoType;

  00030	8b 45 08	 mov	 eax, DWORD PTR _p_eIndicatorInfoType$[ebp]

; 19   : 
; 20   : 	InitHashTable( 200);

  00033	8b ce		 mov	 ecx, esi
  00035	6a 01		 push	 1
  00037	68 c8 00 00 00	 push	 200			; 000000c8H
  0003c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00043	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CIndicatorInfoMap@@6B@
  00049	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  0004c	e8 00 00 00 00	 call	 ?InitHashTable@CMapStringToPtr@@QAEXIH@Z ; CMapStringToPtr::InitHashTable

; 21   : }

  00051	8b c6		 mov	 eax, esi
  00053	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00056	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005d	59		 pop	 ecx
  0005e	5e		 pop	 esi
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@UAE@XZ
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0CIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CIndicatorInfoMap@@QAE@W4EIndicatorInfoType@@@Z ENDP	; CIndicatorInfoMap::CIndicatorInfoMap
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_G?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@UAEPAXI@Z PROC ; CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CMapStringToPtr@@UAE@XZ ; CMapStringToPtr::~CMapStringToPtr
  0000b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0000e	a8 01		 test	 al, 1
  00010	74 1f		 je	 SHORT $LN12@scalar
  00012	a8 04		 test	 al, 4
  00014	75 10		 jne	 SHORT $LN3@scalar

; 112  : 	{ ::operator delete(p); }

  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001c	83 c4 04	 add	 esp, 4
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
$LN3@scalar:
  00026	6a 1c		 push	 28			; 0000001cH
  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002e	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00031	8b c6		 mov	 eax, esi
  00033	5e		 pop	 esi
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
??_G?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@UAEPAXI@Z ENDP ; CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@UAE@XZ PROC ; CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *>::~CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *>, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CMapStringToPtr@@UAE@XZ ; CMapStringToPtr::~CMapStringToPtr
??1?$CTypedPtrMap@VCMapStringToPtr@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCIndicatorInfo@@@@UAE@XZ ENDP ; CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *>::~CTypedPtrMap<CMapStringToPtr,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,CIndicatorInfo *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_ECIndicatorList@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECIndicatorList@@UAEPAXI@Z PROC			; CIndicatorList::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECIndicatorList@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002a	8b d8		 mov	 ebx, eax
  0002c	83 e3 01	 and	 ebx, 1
  0002f	a8 02		 test	 al, 2
  00031	74 40		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CIndicatorList@@UAE@XZ ; CIndicatorList::~CIndicatorList
  00038	ff 76 fc	 push	 DWORD PTR [esi-4]
  0003b	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003e	6a 08		 push	 8
  00040	56		 push	 esi
  00041	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00046	85 db		 test	 ebx, ebx
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0004c	8d 0c cd 04 00
	00 00		 lea	 ecx, DWORD PTR [ecx*8+4]
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	e8 00 00 00 00	 call	 ??1CIndicatorList@@UAE@XZ ; CIndicatorList::~CIndicatorList
  00078	85 db		 test	 ebx, ebx
  0007a	74 0b		 je	 SHORT $LN4@vector
  0007c	6a 08		 push	 8
  0007e	56		 push	 esi
  0007f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00084	83 c4 08	 add	 esp, 8
$LN4@vector:
  00087	8b c6		 mov	 eax, esi
  00089	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00093	59		 pop	 ecx
  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 04 00	 ret	 4
  0009d	cc		 int	 3
  0009e	cc		 int	 3
  0009f	cc		 int	 3
  000a0	cc		 int	 3
  000a1	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECIndicatorList@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECIndicatorList@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECIndicatorList@@UAEPAXI@Z ENDP			; CIndicatorList::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??_GCIndicatorList@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCIndicatorList@@UAEPAXI@Z PROC			; CIndicatorList::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CIndicatorList@@UAE@XZ ; CIndicatorList::~CIndicatorList
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 08		 push	 8
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCIndicatorList@@UAEPAXI@Z ENDP			; CIndicatorList::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4CIndicatorList@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CIndicatorList@@QAEAAV0@ABV0@@Z PROC			; CIndicatorList::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00009	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0000c	8b c1		 mov	 eax, ecx
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
??4CIndicatorList@@QAEAAV0@ABV0@@Z ENDP			; CIndicatorList::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0CIndicatorList@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0CIndicatorList@@QAE@ABV0@@Z PROC			; CIndicatorList::CIndicatorList, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CIndicatorList@@6B@
  0000c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000f	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00012	8b c1		 mov	 eax, ecx
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0CIndicatorList@@QAE@ABV0@@Z ENDP			; CIndicatorList::CIndicatorList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC		; CObject::Dump, COMDAT
; _this$ = ecx

; 122  : 	{ /* no dumping in release builds */ }

  00000	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
?AssertValid@CObject@@UBEXXZ PROC			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 120  : 	{ /* no asserts in release builds */ }

  00000	c2 00 00	 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC		; CObject::Serialize, COMDAT
; _this$ = ecx

; 106  : 	{ /* CObject does not serialize anything by default */ }

  00000	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT
??1CObject@@UAE@XZ PROC					; CObject::~CObject, COMDAT
; _this$ = ecx

; 104  : 	{ }

  00000	c2 00 00	 ret	 0
??1CObject@@UAE@XZ ENDP					; CObject::~CObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfoMap.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
