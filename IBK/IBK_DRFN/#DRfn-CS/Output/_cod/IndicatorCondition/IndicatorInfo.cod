; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\IndicatorCondition\IndicatorInfo.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0CIndicatorList@@QAE@ABV0@@Z			; CIndicatorList::CIndicatorList
PUBLIC	??4CIndicatorList@@QAEAAV0@ABV0@@Z		; CIndicatorList::operator=
PUBLIC	??_GCIndicatorList@@UAEPAXI@Z			; CIndicatorList::`scalar deleting destructor'
PUBLIC	??_ECIndicatorList@@UAEPAXI@Z			; CIndicatorList::`vector deleting destructor'
PUBLIC	?Make@CIndicatorInfo@@SAPAV1@PBV1@@Z		; CIndicatorInfo::Make
PUBLIC	??0CIndicatorInfo@@QAE@W4EIndicatorInfoType@@@Z	; CIndicatorInfo::CIndicatorInfo
PUBLIC	??1CIndicatorInfo@@UAE@XZ			; CIndicatorInfo::~CIndicatorInfo
PUBLIC	??0CIndicatorInfo@@IAE@PBV0@@Z			; CIndicatorInfo::CIndicatorInfo
PUBLIC	?GetIndicatorInfoType@CIndicatorInfo@@QBE?AW4EIndicatorInfoType@@XZ ; CIndicatorInfo::GetIndicatorInfoType
PUBLIC	?CopyDataWithVerificationFrom@CIndicatorInfo@@QAE_NABV1@@Z ; CIndicatorInfo::CopyDataWithVerificationFrom
PUBLIC	?GetGroupName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfo::GetGroupName
PUBLIC	?GetIndicatorName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfo::GetIndicatorName
PUBLIC	?GetGraphName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfo::GetGraphName
PUBLIC	?GetGraphPartData@CIndicatorInfo@@QBEPAVCGraphPartData@@XZ ; CIndicatorInfo::GetGraphPartData
PUBLIC	?GetGraphPartData@CIndicatorInfo@@QAEPAVCGraphPartData@@XZ ; CIndicatorInfo::GetGraphPartData
PUBLIC	?GetCommonCalConditionCount@CIndicatorInfo@@QBEHXZ ; CIndicatorInfo::GetCommonCalConditionCount
PUBLIC	?GetDrawConditionCount@CIndicatorInfo@@QBEHXZ	; CIndicatorInfo::GetDrawConditionCount
PUBLIC	?GetBaseLineCount@CIndicatorInfo@@QBEHXZ	; CIndicatorInfo::GetBaseLineCount
PUBLIC	?GetCalConditionCount@CIndicatorInfo@@QBEHH@Z	; CIndicatorInfo::GetCalConditionCount
PUBLIC	?GetCalConditionCount@CIndicatorInfo@@QBEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfo::GetCalConditionCount
PUBLIC	?GetCommonCalConditionList@CIndicatorInfo@@QBEPAV?$CList@NN@@XZ ; CIndicatorInfo::GetCommonCalConditionList
PUBLIC	?GetCommonCalConditionList@CIndicatorInfo@@QAEPAV?$CList@NN@@XZ ; CIndicatorInfo::GetCommonCalConditionList
PUBLIC	?GetDrawConditionList@CIndicatorInfo@@QBEPAV?$CList@NN@@XZ ; CIndicatorInfo::GetDrawConditionList
PUBLIC	?GetDrawConditionList@CIndicatorInfo@@QAEPAV?$CList@NN@@XZ ; CIndicatorInfo::GetDrawConditionList
PUBLIC	?GetBaseLineList@CIndicatorInfo@@QBEPAV?$CList@NN@@XZ ; CIndicatorInfo::GetBaseLineList
PUBLIC	?GetBaseLineList@CIndicatorInfo@@QAEPAV?$CList@NN@@XZ ; CIndicatorInfo::GetBaseLineList
PUBLIC	?GetCalConditionList@CIndicatorInfo@@QBEPAV?$CList@NN@@H@Z ; CIndicatorInfo::GetCalConditionList
PUBLIC	?GetCalConditionList@CIndicatorInfo@@QAEPAV?$CList@NN@@H@Z ; CIndicatorInfo::GetCalConditionList
PUBLIC	?GetCalConditionList@CIndicatorInfo@@QBEPAV?$CList@NN@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfo::GetCalConditionList
PUBLIC	?GetCalConditionList@CIndicatorInfo@@QAEPAV?$CList@NN@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfo::GetCalConditionList
PUBLIC	?GetGraphDataForMaking@CIndicatorInfo@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfo::GetGraphDataForMaking
PUBLIC	?GetAllSubGraphDataForMaking@CIndicatorInfo@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfo::GetAllSubGraphDataForMaking
PUBLIC	?GetStringCommonCalConditionList@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABV23@@Z ; CIndicatorInfo::GetStringCommonCalConditionList
PUBLIC	?GetStringDrawConditionList@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABV23@@Z ; CIndicatorInfo::GetStringDrawConditionList
PUBLIC	?GetStringBaseLineList@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABV23@@Z ; CIndicatorInfo::GetStringBaseLineList
PUBLIC	?GetGraphData@CIndicatorInfo@@QAEAAVCGraphData@@XZ ; CIndicatorInfo::GetGraphData
PUBLIC	?GetGraphData_PointerType@CIndicatorInfo@@QAEPAVCGraphData@@XZ ; CIndicatorInfo::GetGraphData_PointerType
PUBLIC	?GetGraphDataDrawingData@CIndicatorInfo@@QBEXAA_N000AAH1@Z ; CIndicatorInfo::GetGraphDataDrawingData
PUBLIC	?GetCommonPacketNames@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfo::GetCommonPacketNames
PUBLIC	?GetPacketNames@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CIndicatorInfo::GetPacketNames
PUBLIC	?GetSignalData@CIndicatorInfo@@QBE?AVCSignalData@@XZ ; CIndicatorInfo::GetSignalData
PUBLIC	?GetSignalData@CIndicatorInfo@@QAEAAVCSignalData@@XZ ; CIndicatorInfo::GetSignalData
PUBLIC	?GetSignalData_PointerType@CIndicatorInfo@@QAEPAVCSignalData@@XZ ; CIndicatorInfo::GetSignalData_PointerType
PUBLIC	?IsSignalUse@CIndicatorInfo@@QBE_NXZ		; CIndicatorInfo::IsSignalUse
PUBLIC	?IsSignalShow@CIndicatorInfo@@QBE_NXZ		; CIndicatorInfo::IsSignalShow
PUBLIC	?GetSubGraphCount@CIndicatorInfo@@QBEHXZ	; CIndicatorInfo::GetSubGraphCount
PUBLIC	?GetAllSubGraphDataList@CIndicatorInfo@@QBE_NAAV?$CList@PAVCSubGraphData@@PAV1@@@@Z ; CIndicatorInfo::GetAllSubGraphDataList
PUBLIC	?GetSubGraphData@CIndicatorInfo@@QBEPAVCSubGraphData@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfo::GetSubGraphData
PUBLIC	?GetSubGraphData@CIndicatorInfo@@QBEPAVCSubGraphData@@H@Z ; CIndicatorInfo::GetSubGraphData
PUBLIC	?GetSubGraphIndex@CIndicatorInfo@@QBEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfo::GetSubGraphIndex
PUBLIC	?GetSubGraphName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CIndicatorInfo::GetSubGraphName
PUBLIC	?GetSubGraphTitle@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CIndicatorInfo::GetSubGraphTitle
PUBLIC	?GetSubGraphNameList@CIndicatorInfo@@QBE_NAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@@Z ; CIndicatorInfo::GetSubGraphNameList
PUBLIC	?GetSubGraphNames@CIndicatorInfo@@QBEHAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfo::GetSubGraphNames
PUBLIC	?GetSubGraphColor@CIndicatorInfo@@QBE?AVCGraphColor@@H@Z ; CIndicatorInfo::GetSubGraphColor
PUBLIC	?GetSubGraphColor_PointerType@CIndicatorInfo@@QBEPAVCGraphColor@@H@Z ; CIndicatorInfo::GetSubGraphColor_PointerType
PUBLIC	?GetSubGraphColorList@CIndicatorInfo@@QBE_NAAV?$CList@PAVCGraphColor@@PAV1@@@@Z ; CIndicatorInfo::GetSubGraphColorList
PUBLIC	?GetCopyDataFrom@CIndicatorInfo@@QAE_NPBV1@H@Z	; CIndicatorInfo::GetCopyDataFrom
PUBLIC	?SetCommonCalConditionData@CIndicatorInfo@@QAEHHABN@Z ; CIndicatorInfo::SetCommonCalConditionData
PUBLIC	?SetDrawConditionData@CIndicatorInfo@@QAEHHABN@Z ; CIndicatorInfo::SetDrawConditionData
PUBLIC	?SetBaseLineData@CIndicatorInfo@@QAEHHABN@Z	; CIndicatorInfo::SetBaseLineData
PUBLIC	?SetAllCalConditionData_SubGraphPart@CIndicatorInfo@@QAE_NHABN@Z ; CIndicatorInfo::SetAllCalConditionData_SubGraphPart
PUBLIC	?SetCalConditionData@CIndicatorInfo@@QAEHHHABN@Z ; CIndicatorInfo::SetCalConditionData
PUBLIC	?SetGraphData@CIndicatorInfo@@QAE_NABVCGraphData@@_N@Z ; CIndicatorInfo::SetGraphData
PUBLIC	?SetCommonPacketNames@CIndicatorInfo@@QAE_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfo::SetCommonPacketNames
PUBLIC	?SetAllPacketNames_SubGraphPart@CIndicatorInfo@@QAE_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@_N@Z ; CIndicatorInfo::SetAllPacketNames_SubGraphPart
PUBLIC	?SetPacketNames@CIndicatorInfo@@QAE_NHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfo::SetPacketNames
PUBLIC	?SetSignalData@CIndicatorInfo@@QAEXABVCSignalData@@@Z ; CIndicatorInfo::SetSignalData
PUBLIC	?SetAllSubGraphDataList@CIndicatorInfo@@QAE_NPBV?$CList@PAVCSubGraphData@@PAV1@@@_N@Z ; CIndicatorInfo::SetAllSubGraphDataList
PUBLIC	?SetSubGraphData@CIndicatorInfo@@QAE_NPBVCSubGraphData@@@Z ; CIndicatorInfo::SetSubGraphData
PUBLIC	?SetSubGraphTitle@CIndicatorInfo@@QAE_NHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfo::SetSubGraphTitle
PUBLIC	?SetSubGraphColor@CIndicatorInfo@@QAE_NHABVCGraphColor@@@Z ; CIndicatorInfo::SetSubGraphColor
PUBLIC	?SetSubGraphColor@CIndicatorInfo@@QAE_NHABK@Z	; CIndicatorInfo::SetSubGraphColor
PUBLIC	?SetSubGraphPenThickness@CIndicatorInfo@@QAE_NHABVCPenThickness@@@Z ; CIndicatorInfo::SetSubGraphPenThickness
PUBLIC	?SetSubGraphPenThickness@CIndicatorInfo@@QAE_NHH@Z ; CIndicatorInfo::SetSubGraphPenThickness
PUBLIC	?ChangeAllSubGraphTitleFromCalConditionData@CIndicatorInfo@@QAE_NXZ ; CIndicatorInfo::ChangeAllSubGraphTitleFromCalConditionData
PUBLIC	?AddSubGraphPartDataWithCopy@CIndicatorInfo@@QAEHPBVCSubGraphPartData@@@Z ; CIndicatorInfo::AddSubGraphPartDataWithCopy
PUBLIC	?GetSubGraphPartData@CIndicatorInfo@@QAEPAVCSubGraphPartData@@H@Z ; CIndicatorInfo::GetSubGraphPartData
PUBLIC	?SetGraphDataDrawingDataWithCopy@CIndicatorInfo@@QAEXPBVCGraphDataDrawingData@@@Z ; CIndicatorInfo::SetGraphDataDrawingDataWithCopy
PUBLIC	?GetGraphDataDrawingData@CIndicatorInfo@@QAEPAVCGraphDataDrawingData@@XZ ; CIndicatorInfo::GetGraphDataDrawingData
PUBLIC	?GetSubGraphHiding@CIndicatorInfo@@QAEHPBD@Z	; CIndicatorInfo::GetSubGraphHiding
PUBLIC	?GetSubGraphHiding@CIndicatorInfo@@QAEHH@Z	; CIndicatorInfo::GetSubGraphHiding
PUBLIC	?SetGraph@CIndicatorInfo@@QAEXPAVCGraph@@@Z	; CIndicatorInfo::SetGraph
PUBLIC	?GetGraph@CIndicatorInfo@@QBEPAVCGraph@@XZ	; CIndicatorInfo::GetGraph
PUBLIC	?GetGraph@CIndicatorInfo@@QAEPAVCGraph@@XZ	; CIndicatorInfo::GetGraph
PUBLIC	?SetLoadedRQ@CIndicatorInfo@@QAEXPBD@Z		; CIndicatorInfo::SetLoadedRQ
PUBLIC	??0CIndicatorInfo@@QAE@ABV0@@Z			; CIndicatorInfo::CIndicatorInfo
PUBLIC	??4CIndicatorInfo@@QAEAAV0@ABV0@@Z		; CIndicatorInfo::operator=
PUBLIC	??_GCIndicatorInfo@@UAEPAXI@Z			; CIndicatorInfo::`scalar deleting destructor'
PUBLIC	??_ECIndicatorInfo@@UAEPAXI@Z			; CIndicatorInfo::`vector deleting destructor'
PUBLIC	??_FCSignalData@@QAEXXZ				; CSignalData::`default constructor closure'
PUBLIC	??0CGraphData@@QAE@XZ				; CGraphData::CGraphData
PUBLIC	?SetIndicatorName@CGraphData@@MAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CGraphData::SetIndicatorName
PUBLIC	?SetGraphName@CGraphData@@MAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CGraphData::SetGraphName
PUBLIC	?GetGraphName@CGraphData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CGraphData::GetGraphName
PUBLIC	?GetIndicatorName@CGraphData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CGraphData::GetIndicatorName
PUBLIC	?GetGraphName2@CGraphData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CGraphData::GetGraphName2
PUBLIC	?GetIndicatorName2@CGraphData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CGraphData::GetIndicatorName2
PUBLIC	??1CGraphData@@QAE@XZ				; CGraphData::~CGraphData
PUBLIC	??0CGraphData@@QAE@ABV0@@Z			; CGraphData::CGraphData
PUBLIC	?GetHorizontalLine@CSubGraphDataBase@@QBEABV?$CArray@PAU_ST_HORZLINE@@PAU1@@@XZ ; CSubGraphDataBase::GetHorizontalLine
PUBLIC	??_7CIndicatorList@@6B@				; CIndicatorList::`vftable'
PUBLIC	??_7CIndicatorInfo@@6B@				; CIndicatorInfo::`vftable'
PUBLIC	??_7CGraphDataBase@@6B@				; CGraphDataBase::`vftable'
PUBLIC	??_7CGraphData@@6B@				; CGraphData::`vftable'
PUBLIC	??_R4CIndicatorInfo@@6B@			; CIndicatorInfo::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCIndicatorInfo@@@8			; CIndicatorInfo `RTTI Type Descriptor'
PUBLIC	??_R3CIndicatorInfo@@8				; CIndicatorInfo::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CIndicatorInfo@@8				; CIndicatorInfo::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CIndicatorInfo@@8			; CIndicatorInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CIndicatorList@@6B@			; CIndicatorList::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCIndicatorList@@@8			; CIndicatorList `RTTI Type Descriptor'
PUBLIC	??_R3CIndicatorList@@8				; CIndicatorList::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CIndicatorList@@8				; CIndicatorList::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CIndicatorList@@8			; CIndicatorList::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CGraphData@@6B@				; CGraphData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGraphData@@@8				; CGraphData `RTTI Type Descriptor'
PUBLIC	??_R3CGraphData@@8				; CGraphData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphData@@8				; CGraphData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphData@@8			; CGraphData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CGraphDataBase@@8			; CGraphDataBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphDataBase@@@8			; CGraphDataBase `RTTI Type Descriptor'
PUBLIC	??_R3CGraphDataBase@@8				; CGraphDataBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphDataBase@@8				; CGraphDataBase::`RTTI Base Class Array'
PUBLIC	??_R4CGraphDataBase@@6B@			; CGraphDataBase::`RTTI Complete Object Locator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z:PROC
EXTRN	??1CIndicatorList@@UAE@XZ:PROC			; CIndicatorList::~CIndicatorList
EXTRN	??0CGraphDataDrawingData@@QAE@XZ:PROC		; CGraphDataDrawingData::CGraphDataDrawingData
EXTRN	??0CGraphDataDrawingData@@QAE@ABV0@@Z:PROC	; CGraphDataDrawingData::CGraphDataDrawingData
EXTRN	??0CSignalData@@QAE@_N0@Z:PROC			; CSignalData::CSignalData
EXTRN	??0CSignalData@@QAE@ABV0@@Z:PROC		; CSignalData::CSignalData
EXTRN	??1CSignalData@@QAE@XZ:PROC			; CSignalData::~CSignalData
EXTRN	??0CIndicatorInfoImplementation@@QAE@W4EIndicatorInfoType@@@Z:PROC ; CIndicatorInfoImplementation::CIndicatorInfoImplementation
EXTRN	??0CIndicatorInfoImplementation@@QAE@PBV0@@Z:PROC ; CIndicatorInfoImplementation::CIndicatorInfoImplementation
EXTRN	?CopyDataWithVerificationFrom@CIndicatorInfoImplementation@@QAE_NABV1@@Z:PROC ; CIndicatorInfoImplementation::CopyDataWithVerificationFrom
EXTRN	?GetGroupName@CIndicatorInfoImplementation@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:PROC ; CIndicatorInfoImplementation::GetGroupName
EXTRN	?GetIndicatorName@CIndicatorInfoImplementation@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:PROC ; CIndicatorInfoImplementation::GetIndicatorName
EXTRN	?GetGraphName@CIndicatorInfoImplementation@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:PROC ; CIndicatorInfoImplementation::GetGraphName
EXTRN	?GetGraphPartData@CIndicatorInfoImplementation@@QAEPAVCGraphPartData@@XZ:PROC ; CIndicatorInfoImplementation::GetGraphPartData
EXTRN	?GetCommonCalConditionCount@CIndicatorInfoImplementation@@QBEHXZ:PROC ; CIndicatorInfoImplementation::GetCommonCalConditionCount
EXTRN	?GetDrawConditionCount@CIndicatorInfoImplementation@@QBEHXZ:PROC ; CIndicatorInfoImplementation::GetDrawConditionCount
EXTRN	?GetBaseLineCount@CIndicatorInfoImplementation@@QBEHXZ:PROC ; CIndicatorInfoImplementation::GetBaseLineCount
EXTRN	?GetCalConditionCount@CIndicatorInfoImplementation@@QBEHH@Z:PROC ; CIndicatorInfoImplementation::GetCalConditionCount
EXTRN	?GetCalConditionCount@CIndicatorInfoImplementation@@QBEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:PROC ; CIndicatorInfoImplementation::GetCalConditionCount
EXTRN	?GetCommonCalConditionList@CIndicatorInfoImplementation@@QAEPAV?$CList@NN@@XZ:PROC ; CIndicatorInfoImplementation::GetCommonCalConditionList
EXTRN	?GetDrawConditionList@CIndicatorInfoImplementation@@QAEPAV?$CList@NN@@XZ:PROC ; CIndicatorInfoImplementation::GetDrawConditionList
EXTRN	?GetBaseLineList@CIndicatorInfoImplementation@@QAEPAV?$CList@NN@@XZ:PROC ; CIndicatorInfoImplementation::GetBaseLineList
EXTRN	?GetCalConditionList@CIndicatorInfoImplementation@@QAEPAV?$CList@NN@@H@Z:PROC ; CIndicatorInfoImplementation::GetCalConditionList
EXTRN	?GetCalConditionList@CIndicatorInfoImplementation@@QAEPAV?$CList@NN@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:PROC ; CIndicatorInfoImplementation::GetCalConditionList
EXTRN	?GetGraphDataForMaking@CIndicatorInfoImplementation@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:PROC ; CIndicatorInfoImplementation::GetGraphDataForMaking
EXTRN	?GetAllSubGraphDataForMaking@CIndicatorInfoImplementation@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:PROC ; CIndicatorInfoImplementation::GetAllSubGraphDataForMaking
EXTRN	?GetStringCommonCalConditionList@CIndicatorInfoImplementation@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABV23@@Z:PROC ; CIndicatorInfoImplementation::GetStringCommonCalConditionList
EXTRN	?GetStringDrawConditionList@CIndicatorInfoImplementation@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABV23@@Z:PROC ; CIndicatorInfoImplementation::GetStringDrawConditionList
EXTRN	?GetStringBaseLineList@CIndicatorInfoImplementation@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABV23@@Z:PROC ; CIndicatorInfoImplementation::GetStringBaseLineList
EXTRN	?GetGraphData@CIndicatorInfoImplementation@@QAEAAVCGraphData@@XZ:PROC ; CIndicatorInfoImplementation::GetGraphData
EXTRN	?GetGraphData_PointerType@CIndicatorInfoImplementation@@QAEPAVCGraphData@@XZ:PROC ; CIndicatorInfoImplementation::GetGraphData_PointerType
EXTRN	?GetGraphDataDrawingData@CIndicatorInfoImplementation@@QBEXAA_N000AAH1@Z:PROC ; CIndicatorInfoImplementation::GetGraphDataDrawingData
EXTRN	?GetCommonPacketNames@CIndicatorInfoImplementation@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:PROC ; CIndicatorInfoImplementation::GetCommonPacketNames
EXTRN	?GetPacketNames@CIndicatorInfoImplementation@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z:PROC ; CIndicatorInfoImplementation::GetPacketNames
EXTRN	?GetSignalData@CIndicatorInfoImplementation@@QAEAAVCSignalData@@XZ:PROC ; CIndicatorInfoImplementation::GetSignalData
EXTRN	?GetSignalData_PointerType@CIndicatorInfoImplementation@@QAEPAVCSignalData@@XZ:PROC ; CIndicatorInfoImplementation::GetSignalData_PointerType
EXTRN	?IsSignalUse@CIndicatorInfoImplementation@@QBE_NXZ:PROC ; CIndicatorInfoImplementation::IsSignalUse
EXTRN	?IsSignalShow@CIndicatorInfoImplementation@@QBE_NXZ:PROC ; CIndicatorInfoImplementation::IsSignalShow
EXTRN	?GetSubGraphCount@CIndicatorInfoImplementation@@QBEHXZ:PROC ; CIndicatorInfoImplementation::GetSubGraphCount
EXTRN	?GetAllSubGraphDataList@CIndicatorInfoImplementation@@QBE_NAAV?$CList@PAVCSubGraphData@@PAV1@@@@Z:PROC ; CIndicatorInfoImplementation::GetAllSubGraphDataList
EXTRN	?GetSubGraphData@CIndicatorInfoImplementation@@QBEPAVCSubGraphData@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:PROC ; CIndicatorInfoImplementation::GetSubGraphData
EXTRN	?GetSubGraphData@CIndicatorInfoImplementation@@QBEPAVCSubGraphData@@H@Z:PROC ; CIndicatorInfoImplementation::GetSubGraphData
EXTRN	?GetSubGraphIndex@CIndicatorInfoImplementation@@QBEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:PROC ; CIndicatorInfoImplementation::GetSubGraphIndex
EXTRN	?GetSubGraphName@CIndicatorInfoImplementation@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z:PROC ; CIndicatorInfoImplementation::GetSubGraphName
EXTRN	?GetSubGraphTitle@CIndicatorInfoImplementation@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z:PROC ; CIndicatorInfoImplementation::GetSubGraphTitle
EXTRN	?GetSubGraphNameList@CIndicatorInfoImplementation@@QBE_NAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@@Z:PROC ; CIndicatorInfoImplementation::GetSubGraphNameList
EXTRN	?GetSubGraphNames@CIndicatorInfoImplementation@@QBEHAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:PROC ; CIndicatorInfoImplementation::GetSubGraphNames
EXTRN	?GetSubGraphColor@CIndicatorInfoImplementation@@QBE?AVCGraphColor@@H@Z:PROC ; CIndicatorInfoImplementation::GetSubGraphColor
EXTRN	?GetSubGraphColor_PointerType@CIndicatorInfoImplementation@@QBEPAVCGraphColor@@H@Z:PROC ; CIndicatorInfoImplementation::GetSubGraphColor_PointerType
EXTRN	?GetSubGraphColorList@CIndicatorInfoImplementation@@QBE_NAAV?$CList@PAVCGraphColor@@PAV1@@@@Z:PROC ; CIndicatorInfoImplementation::GetSubGraphColorList
EXTRN	?GetCopyDataFrom@CIndicatorInfoImplementation@@QAE_NPBV1@H@Z:PROC ; CIndicatorInfoImplementation::GetCopyDataFrom
EXTRN	?SetCommonCalConditionData@CIndicatorInfoImplementation@@QAEHHABN@Z:PROC ; CIndicatorInfoImplementation::SetCommonCalConditionData
EXTRN	?SetDrawConditionData@CIndicatorInfoImplementation@@QAEHHABN@Z:PROC ; CIndicatorInfoImplementation::SetDrawConditionData
EXTRN	?SetBaseLineData@CIndicatorInfoImplementation@@QAEHHABN@Z:PROC ; CIndicatorInfoImplementation::SetBaseLineData
EXTRN	?SetAllCalConditionData_SubGraphPart@CIndicatorInfoImplementation@@QAE_NHABN@Z:PROC ; CIndicatorInfoImplementation::SetAllCalConditionData_SubGraphPart
EXTRN	?SetCalConditionData@CIndicatorInfoImplementation@@QAEHHHABN@Z:PROC ; CIndicatorInfoImplementation::SetCalConditionData
EXTRN	?SetGraphData@CIndicatorInfoImplementation@@QAE_NABVCGraphData@@_N@Z:PROC ; CIndicatorInfoImplementation::SetGraphData
EXTRN	?SetCommonPacketNames@CIndicatorInfoImplementation@@QAE_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:PROC ; CIndicatorInfoImplementation::SetCommonPacketNames
EXTRN	?SetAllPacketNames_SubGraphPart@CIndicatorInfoImplementation@@QAE_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@_N@Z:PROC ; CIndicatorInfoImplementation::SetAllPacketNames_SubGraphPart
EXTRN	?SetPacketNames@CIndicatorInfoImplementation@@QAE_NHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:PROC ; CIndicatorInfoImplementation::SetPacketNames
EXTRN	?SetSignalData@CIndicatorInfoImplementation@@QAEXABVCSignalData@@@Z:PROC ; CIndicatorInfoImplementation::SetSignalData
EXTRN	?SetAllSubGraphDataList@CIndicatorInfoImplementation@@QAE_NPBV?$CList@PAVCSubGraphData@@PAV1@@@_N@Z:PROC ; CIndicatorInfoImplementation::SetAllSubGraphDataList
EXTRN	?SetSubGraphData@CIndicatorInfoImplementation@@QAE_NPBVCSubGraphData@@@Z:PROC ; CIndicatorInfoImplementation::SetSubGraphData
EXTRN	?SetSubGraphTitle@CIndicatorInfoImplementation@@QAE_NHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:PROC ; CIndicatorInfoImplementation::SetSubGraphTitle
EXTRN	?SetSubGraphColor@CIndicatorInfoImplementation@@QAE_NHABVCGraphColor@@@Z:PROC ; CIndicatorInfoImplementation::SetSubGraphColor
EXTRN	?SetSubGraphColor@CIndicatorInfoImplementation@@QAE_NHABK@Z:PROC ; CIndicatorInfoImplementation::SetSubGraphColor
EXTRN	?SetSubGraphPenThickness@CIndicatorInfoImplementation@@QAE_NHABVCPenThickness@@@Z:PROC ; CIndicatorInfoImplementation::SetSubGraphPenThickness
EXTRN	?SetSubGraphPenThickness@CIndicatorInfoImplementation@@QAE_NHH@Z:PROC ; CIndicatorInfoImplementation::SetSubGraphPenThickness
EXTRN	?ChangeAllSubGraphTitleFromCalConditionData@CIndicatorInfoImplementation@@QAE_NXZ:PROC ; CIndicatorInfoImplementation::ChangeAllSubGraphTitleFromCalConditionData
EXTRN	?AddSubGraphPartDataWithCopy@CIndicatorInfoImplementation@@QAEHPBVCSubGraphPartData@@@Z:PROC ; CIndicatorInfoImplementation::AddSubGraphPartDataWithCopy
EXTRN	?GetSubGraphPartData@CIndicatorInfoImplementation@@QAEPAVCSubGraphPartData@@H@Z:PROC ; CIndicatorInfoImplementation::GetSubGraphPartData
EXTRN	?SetGraphDataDrawingDataWithCopy@CIndicatorInfoImplementation@@QAEXPBVCGraphDataDrawingData@@@Z:PROC ; CIndicatorInfoImplementation::SetGraphDataDrawingDataWithCopy
EXTRN	?GetGraphDataDrawingData@CIndicatorInfoImplementation@@QAEPAVCGraphDataDrawingData@@XZ:PROC ; CIndicatorInfoImplementation::GetGraphDataDrawingData
EXTRN	?GetSubGraphHiding@CIndicatorInfoImplementation@@QAEHPBD@Z:PROC ; CIndicatorInfoImplementation::GetSubGraphHiding
EXTRN	?GetSubGraphHiding@CIndicatorInfoImplementation@@QAEHH@Z:PROC ; CIndicatorInfoImplementation::GetSubGraphHiding
EXTRN	?SetGraph@CIndicatorInfoImplementation@@QAEXPAVCGraph@@@Z:PROC ; CIndicatorInfoImplementation::SetGraph
EXTRN	?GetGraph@CIndicatorInfoImplementation@@QAEPAVCGraph@@XZ:PROC ; CIndicatorInfoImplementation::GetGraph
EXTRN	?SetLoadedRQ@CIndicatorInfoImplementation@@QAEXPBD@Z:PROC ; CIndicatorInfoImplementation::SetLoadedRQ
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R4CGraphDataBase@@6B@
rdata$r	SEGMENT
??_R4CGraphDataBase@@6B@ DD 00H				; CGraphDataBase::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGraphDataBase@@@8
	DD	FLAT:??_R3CGraphDataBase@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphDataBase@@8
rdata$r	SEGMENT
??_R2CGraphDataBase@@8 DD FLAT:??_R1A@?0A@EA@CGraphDataBase@@8 ; CGraphDataBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphDataBase@@8
rdata$r	SEGMENT
??_R3CGraphDataBase@@8 DD 00H				; CGraphDataBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphDataBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphDataBase@@@8
data$rs	SEGMENT
??_R0?AVCGraphDataBase@@@8 DD FLAT:??_7type_info@@6B@	; CGraphDataBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphDataBase@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphDataBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphDataBase@@8 DD FLAT:??_R0?AVCGraphDataBase@@@8 ; CGraphDataBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphDataBase@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphData@@8 DD FLAT:??_R0?AVCGraphData@@@8 ; CGraphData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphData@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphData@@8
rdata$r	SEGMENT
??_R2CGraphData@@8 DD FLAT:??_R1A@?0A@EA@CGraphData@@8	; CGraphData::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphDataBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphData@@8
rdata$r	SEGMENT
??_R3CGraphData@@8 DD 00H				; CGraphData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGraphData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphData@@@8
data$rs	SEGMENT
??_R0?AVCGraphData@@@8 DD FLAT:??_7type_info@@6B@	; CGraphData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphData@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CGraphData@@6B@
rdata$r	SEGMENT
??_R4CGraphData@@6B@ DD 00H				; CGraphData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGraphData@@@8
	DD	FLAT:??_R3CGraphData@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CIndicatorList@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CIndicatorList@@8 DD FLAT:??_R0?AVCIndicatorList@@@8 ; CIndicatorList::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CIndicatorList@@8
rdata$r	ENDS
;	COMDAT ??_R2CIndicatorList@@8
rdata$r	SEGMENT
??_R2CIndicatorList@@8 DD FLAT:??_R1A@?0A@EA@CIndicatorList@@8 ; CIndicatorList::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CIndicatorList@@8
rdata$r	SEGMENT
??_R3CIndicatorList@@8 DD 00H				; CIndicatorList::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CIndicatorList@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCIndicatorList@@@8
data$rs	SEGMENT
??_R0?AVCIndicatorList@@@8 DD FLAT:??_7type_info@@6B@	; CIndicatorList `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCIndicatorList@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CIndicatorList@@6B@
rdata$r	SEGMENT
??_R4CIndicatorList@@6B@ DD 00H				; CIndicatorList::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCIndicatorList@@@8
	DD	FLAT:??_R3CIndicatorList@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CIndicatorInfo@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CIndicatorInfo@@8 DD FLAT:??_R0?AVCIndicatorInfo@@@8 ; CIndicatorInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CIndicatorInfo@@8
rdata$r	ENDS
;	COMDAT ??_R2CIndicatorInfo@@8
rdata$r	SEGMENT
??_R2CIndicatorInfo@@8 DD FLAT:??_R1A@?0A@EA@CIndicatorInfo@@8 ; CIndicatorInfo::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CIndicatorInfo@@8
rdata$r	SEGMENT
??_R3CIndicatorInfo@@8 DD 00H				; CIndicatorInfo::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CIndicatorInfo@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCIndicatorInfo@@@8
data$rs	SEGMENT
??_R0?AVCIndicatorInfo@@@8 DD FLAT:??_7type_info@@6B@	; CIndicatorInfo `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCIndicatorInfo@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CIndicatorInfo@@6B@
rdata$r	SEGMENT
??_R4CIndicatorInfo@@6B@ DD 00H				; CIndicatorInfo::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCIndicatorInfo@@@8
	DD	FLAT:??_R3CIndicatorInfo@@8
rdata$r	ENDS
;	COMDAT ??_7CGraphData@@6B@
CONST	SEGMENT
??_7CGraphData@@6B@ DD FLAT:??_R4CGraphData@@6B@	; CGraphData::`vftable'
	DD	FLAT:?SetIndicatorName@CGraphData@@MAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
	DD	FLAT:?SetGraphName@CGraphData@@MAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
CONST	ENDS
;	COMDAT ??_7CGraphDataBase@@6B@
CONST	SEGMENT
??_7CGraphDataBase@@6B@ DD FLAT:??_R4CGraphDataBase@@6B@ ; CGraphDataBase::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7CIndicatorInfo@@6B@
CONST	SEGMENT
??_7CIndicatorInfo@@6B@ DD FLAT:??_R4CIndicatorInfo@@6B@ ; CIndicatorInfo::`vftable'
	DD	FLAT:??_ECIndicatorInfo@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CIndicatorList@@6B@
CONST	SEGMENT
??_7CIndicatorList@@6B@ DD FLAT:??_R4CIndicatorList@@6B@ ; CIndicatorList::`vftable'
	DD	FLAT:??_ECIndicatorList@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CGraphData@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CGraphData@@QAE@ABV0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CGraphData@@QAE@ABV0@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CGraphData@@QAE@ABV0@@Z$2
__ehfuncinfo$??0CGraphData@@QAE@ABV0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CGraphData@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CGraphData@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CGraphData@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CGraphData@@QAE@XZ$1
__ehfuncinfo$??0CGraphData@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CGraphData@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECIndicatorInfo@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CIndicatorInfo@@IAE@PBV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CIndicatorInfo@@IAE@PBV0@@Z$0
__ehfuncinfo$??0CIndicatorInfo@@IAE@PBV0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CIndicatorInfo@@IAE@PBV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CIndicatorInfo@@QAE@W4EIndicatorInfoType@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CIndicatorInfo@@QAE@W4EIndicatorInfoType@@@Z$0
__ehfuncinfo$??0CIndicatorInfo@@QAE@W4EIndicatorInfoType@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CIndicatorInfo@@QAE@W4EIndicatorInfoType@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Make@CIndicatorInfo@@SAPAV1@PBV1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Make@CIndicatorInfo@@SAPAV1@PBV1@@Z$0
__ehfuncinfo$?Make@CIndicatorInfo@@SAPAV1@PBV1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Make@CIndicatorInfo@@SAPAV1@PBV1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECIndicatorList@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\GraphData.h
;	COMDAT ?GetHorizontalLine@CSubGraphDataBase@@QBEABV?$CArray@PAU_ST_HORZLINE@@PAU1@@@XZ
_TEXT	SEGMENT
?GetHorizontalLine@CSubGraphDataBase@@QBEABV?$CArray@PAU_ST_HORZLINE@@PAU1@@@XZ PROC ; CSubGraphDataBase::GetHorizontalLine, COMDAT
; _this$ = ecx

; 313  : 	const CArray<ST_HORZLINE*, ST_HORZLINE*>& GetHorizontalLine() const { return m_arrHorzLine; }

  00000	8d 41 70	 lea	 eax, DWORD PTR [ecx+112]
  00003	c3		 ret	 0
?GetHorizontalLine@CSubGraphDataBase@@QBEABV?$CArray@PAU_ST_HORZLINE@@PAU1@@@XZ ENDP ; CSubGraphDataBase::GetHorizontalLine
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0CGraphData@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0CGraphData@@QAE@ABV0@@Z PROC				; CGraphData::CGraphData, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CGraphData@@QAE@ABV0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  0002a	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0002d	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00030	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CGraphData@@6B@
  00036	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00039	50		 push	 eax
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00040	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	50		 push	 eax
  0004b	8d 4f 08	 lea	 ecx, DWORD PTR [edi+8]
  0004e	e8 00 00 00 00	 call	 ??0CSignalData@@QAE@ABV0@@Z ; CSignalData::CSignalData
  00053	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00056	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0005a	50		 push	 eax
  0005b	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  0005e	e8 00 00 00 00	 call	 ??0CGraphDataDrawingData@@QAE@ABV0@@Z ; CGraphDataDrawingData::CGraphDataDrawingData
  00063	8d 46 1c	 lea	 eax, DWORD PTR [esi+28]
  00066	50		 push	 eax
  00067	8d 4f 1c	 lea	 ecx, DWORD PTR [edi+28]
  0006a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00070	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  00073	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00077	50		 push	 eax
  00078	8d 4f 20	 lea	 ecx, DWORD PTR [edi+32]
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00081	8b c7		 mov	 eax, edi
  00083	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00086	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008d	59		 pop	 ecx
  0008e	5f		 pop	 edi
  0008f	5e		 pop	 esi
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CGraphData@@QAE@ABV0@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$??0CGraphData@@QAE@ABV0@@Z$1:
  0000c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 08	 add	 ecx, 8
  00012	e9 00 00 00 00	 jmp	 ??1CSignalData@@QAE@XZ	; CSignalData::~CSignalData
__unwindfunclet$??0CGraphData@@QAE@ABV0@@Z$2:
  00017	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0001d	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00023	cc		 int	 3
  00024	cc		 int	 3
  00025	cc		 int	 3
  00026	cc		 int	 3
  00027	cc		 int	 3
__ehhandler$??0CGraphData@@QAE@ABV0@@Z:
  00028	90		 npad	 1
  00029	90		 npad	 1
  0002a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00031	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00034	33 c8		 xor	 ecx, eax
  00036	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CGraphData@@QAE@ABV0@@Z
  00040	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CGraphData@@QAE@ABV0@@Z ENDP				; CGraphData::CGraphData
; Function compile flags: /Ogtp
;	COMDAT ??1CGraphData@@QAE@XZ
_TEXT	SEGMENT
??1CGraphData@@QAE@XZ PROC				; CGraphData::~CGraphData, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000c	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00015	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  00018	e8 00 00 00 00	 call	 ??1CSignalData@@QAE@XZ	; CSignalData::~CSignalData
  0001d	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00020	5e		 pop	 esi
  00021	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
??1CGraphData@@QAE@XZ ENDP				; CGraphData::~CGraphData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\GraphData.h
;	COMDAT ?GetIndicatorName2@CGraphData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetIndicatorName2@CGraphData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC ; CGraphData::GetIndicatorName2, COMDAT
; _this$ = ecx

; 232  : 	CString			GetIndicatorName2( void) const							{	return GetIndicatorName();					}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  : 	CString			GetIndicatorName( void) const							{	return m_strIndicatorName;					}

  00003	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00009	50		 push	 eax
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 232  : 	CString			GetIndicatorName2( void) const							{	return GetIndicatorName();					}

  00010	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
?GetIndicatorName2@CGraphData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CGraphData::GetIndicatorName2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\GraphData.h
;	COMDAT ?GetGraphName2@CGraphData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetGraphName2@CGraphData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC ; CGraphData::GetGraphName2, COMDAT
; _this$ = ecx

; 231  : 	CString			GetGraphName2( void) const								{	return GetGraphName();						}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 228  : 	CString			GetGraphName( void) const								{	return m_strGraphName;						}

  00003	8d 41 20	 lea	 eax, DWORD PTR [ecx+32]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00009	50		 push	 eax
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 231  : 	CString			GetGraphName2( void) const								{	return GetGraphName();						}

  00010	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
?GetGraphName2@CGraphData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CGraphData::GetGraphName2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\GraphData.h
;	COMDAT ?GetIndicatorName@CGraphData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetIndicatorName@CGraphData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC ; CGraphData::GetIndicatorName, COMDAT
; _this$ = ecx

; 229  : 	CString			GetIndicatorName( void) const							{	return m_strIndicatorName;					}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00009	50		 push	 eax
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00010	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
?GetIndicatorName@CGraphData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CGraphData::GetIndicatorName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\GraphData.h
;	COMDAT ?GetGraphName@CGraphData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetGraphName@CGraphData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC ; CGraphData::GetGraphName, COMDAT
; _this$ = ecx

; 228  : 	CString			GetGraphName( void) const								{	return m_strGraphName;						}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8d 41 20	 lea	 eax, DWORD PTR [ecx+32]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00009	50		 push	 eax
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00010	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
?GetGraphName@CGraphData@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CGraphData::GetGraphName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\GraphData.h
;	COMDAT ?SetGraphName@CGraphData@@MAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_p_strGraphName$ = 8					; size = 4
?SetGraphName@CGraphData@@MAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC ; CGraphData::SetGraphName, COMDAT
; _this$ = ecx

; 225  : 	virtual void	SetGraphName(		const CString &p_strGraphName)		{	m_strGraphName		= p_strGraphName;		}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 c1 20	 add	 ecx, 32			; 00000020H
  00006	5d		 pop	 ebp
  00007	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
?SetGraphName@CGraphData@@MAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CGraphData::SetGraphName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\GraphData.h
;	COMDAT ?SetIndicatorName@CGraphData@@MAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_p_strIndicatorName$ = 8				; size = 4
?SetIndicatorName@CGraphData@@MAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC ; CGraphData::SetIndicatorName, COMDAT
; _this$ = ecx

; 224  : 	virtual void	SetIndicatorName(	const CString &p_strIndicatorName)	{	m_strIndicatorName	= p_strIndicatorName;	}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00006	5d		 pop	 ebp
  00007	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
?SetIndicatorName@CGraphData@@MAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CGraphData::SetIndicatorName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\Include_Chart\GraphData.h
;	COMDAT ??0CGraphData@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CGraphData@@QAE@XZ PROC				; CGraphData::CGraphData, COMDAT
; _this$ = ecx

; 181  : 	CGraphData()	{}							// (2006/11/26 - Seung-Won, Bae) Created by CIndicatorInfo Consturctor.

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CGraphData@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0002c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGraphData@@6B@
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00038	6a 00		 push	 0
  0003a	6a 00		 push	 0
  0003c	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	e8 00 00 00 00	 call	 ??0CSignalData@@QAE@_N0@Z ; CSignalData::CSignalData
  0004b	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  0004e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00052	e8 00 00 00 00	 call	 ??0CGraphDataDrawingData@@QAE@XZ ; CGraphDataDrawingData::CGraphDataDrawingData
  00057	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00060	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00069	8b c6		 mov	 eax, esi
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00075	59		 pop	 ecx
  00076	5e		 pop	 esi
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CGraphData@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$??0CGraphData@@QAE@XZ$1:
  0000c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 08	 add	 ecx, 8
  00012	e9 00 00 00 00	 jmp	 ??1CSignalData@@QAE@XZ	; CSignalData::~CSignalData
  00017	cc		 int	 3
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
__ehhandler$??0CGraphData@@QAE@XZ:
  0001c	90		 npad	 1
  0001d	90		 npad	 1
  0001e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00022	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00025	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00028	33 c8		 xor	 ecx, eax
  0002a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CGraphData@@QAE@XZ
  00034	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CGraphData@@QAE@XZ ENDP				; CGraphData::CGraphData
; Function compile flags: /Ogtp
;	COMDAT ??_FCSignalData@@QAEXXZ
_TEXT	SEGMENT
??_FCSignalData@@QAEXXZ PROC				; CSignalData::`default constructor closure', COMDAT
; _this$ = ecx
  00000	6a 00		 push	 0
  00002	6a 00		 push	 0
  00004	e8 00 00 00 00	 call	 ??0CSignalData@@QAE@_N0@Z ; CSignalData::CSignalData
  00009	c3		 ret	 0
??_FCSignalData@@QAEXXZ ENDP				; CSignalData::`default constructor closure'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ??_ECIndicatorInfo@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECIndicatorInfo@@UAEPAXI@Z PROC			; CIndicatorInfo::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECIndicatorInfo@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 41		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1CIndicatorInfo@@UAE@XZ ; CIndicatorInfo::~CIndicatorInfo
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	6a 08		 push	 8
  0003c	56		 push	 esi
  0003d	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00042	f6 c3 01	 test	 bl, 1
  00045	74 13		 je	 SHORT $LN3@vector
  00047	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00049	8d 0c cd 04 00
	00 00		 lea	 ecx, DWORD PTR [ecx*8+4]
  00050	51		 push	 ecx
  00051	57		 push	 edi
  00052	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00057	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005a	8b c7		 mov	 eax, edi
  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c2 04 00	 ret	 4
$LN2@vector:

; 42   : 	delete m_pIndiInfoImpl;

  00070	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00073	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CIndicatorInfo@@6B@
  00079	85 c9		 test	 ecx, ecx
  0007b	74 06		 je	 SHORT $LN8@vector
  0007d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0007f	6a 01		 push	 1
  00081	ff 10		 call	 DWORD PTR [eax]
$LN8@vector:
  00083	f6 c3 01	 test	 bl, 1
  00086	74 0b		 je	 SHORT $LN4@vector
  00088	6a 08		 push	 8
  0008a	56		 push	 esi
  0008b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00090	83 c4 08	 add	 esp, 8
$LN4@vector:
  00093	8b c6		 mov	 eax, esi
  00095	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00098	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009f	59		 pop	 ecx
  000a0	5f		 pop	 edi
  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c2 04 00	 ret	 4
  000a9	cc		 int	 3
  000aa	cc		 int	 3
  000ab	cc		 int	 3
  000ac	cc		 int	 3
  000ad	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECIndicatorInfo@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECIndicatorInfo@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECIndicatorInfo@@UAEPAXI@Z ENDP			; CIndicatorInfo::`vector deleting destructor'
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ??_GCIndicatorInfo@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCIndicatorInfo@@UAEPAXI@Z PROC			; CIndicatorInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 40   : {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 41   : 	TRACE( "IndicatorInfo Deleted : [%s](0x%08X)\r\n", GetIndicatorName(), ( long)this);
; 42   : 	delete m_pIndiInfoImpl;

  00006	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CIndicatorInfo@@6B@
  0000f	85 c9		 test	 ecx, ecx
  00011	74 06		 je	 SHORT $LN6@scalar
  00013	8b 01		 mov	 eax, DWORD PTR [ecx]
  00015	6a 01		 push	 1
  00017	ff 10		 call	 DWORD PTR [eax]
$LN6@scalar:
  00019	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001d	74 0b		 je	 SHORT $LN8@scalar
  0001f	6a 08		 push	 8
  00021	56		 push	 esi
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN8@scalar:
  0002a	8b c6		 mov	 eax, esi
  0002c	5e		 pop	 esi
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
??_GCIndicatorInfo@@UAEPAXI@Z ENDP			; CIndicatorInfo::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4CIndicatorInfo@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CIndicatorInfo@@QAEAAV0@ABV0@@Z PROC			; CIndicatorInfo::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00009	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0000c	8b c1		 mov	 eax, ecx
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
??4CIndicatorInfo@@QAEAAV0@ABV0@@Z ENDP			; CIndicatorInfo::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0CIndicatorInfo@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0CIndicatorInfo@@QAE@ABV0@@Z PROC			; CIndicatorInfo::CIndicatorInfo, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CIndicatorInfo@@6B@
  0000c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000f	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00012	8b c1		 mov	 eax, ecx
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0CIndicatorInfo@@QAE@ABV0@@Z ENDP			; CIndicatorInfo::CIndicatorInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?SetLoadedRQ@CIndicatorInfo@@QAEXPBD@Z
_TEXT	SEGMENT
_lpszRQ$ = 8						; size = 4
?SetLoadedRQ@CIndicatorInfo@@QAEXPBD@Z PROC		; CIndicatorInfo::SetLoadedRQ, COMDAT
; _this$ = ecx

; 463  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 464  : 	m_pIndiInfoImpl->SetLoadedRQ(lpszRQ);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 465  : }

  00006	5d		 pop	 ebp

; 464  : 	m_pIndiInfoImpl->SetLoadedRQ(lpszRQ);

  00007	e9 00 00 00 00	 jmp	 ?SetLoadedRQ@CIndicatorInfoImplementation@@QAEXPBD@Z ; CIndicatorInfoImplementation::SetLoadedRQ
?SetLoadedRQ@CIndicatorInfo@@QAEXPBD@Z ENDP		; CIndicatorInfo::SetLoadedRQ
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetGraph@CIndicatorInfo@@QAEPAVCGraph@@XZ
_TEXT	SEGMENT
?GetGraph@CIndicatorInfo@@QAEPAVCGraph@@XZ PROC		; CIndicatorInfo::GetGraph, COMDAT
; _this$ = ecx

; 458  : 	return m_pIndiInfoImpl->GetGraph();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?GetGraph@CIndicatorInfoImplementation@@QAEPAVCGraph@@XZ ; CIndicatorInfoImplementation::GetGraph
?GetGraph@CIndicatorInfo@@QAEPAVCGraph@@XZ ENDP		; CIndicatorInfo::GetGraph
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetGraph@CIndicatorInfo@@QBEPAVCGraph@@XZ
_TEXT	SEGMENT
?GetGraph@CIndicatorInfo@@QBEPAVCGraph@@XZ PROC		; CIndicatorInfo::GetGraph, COMDAT
; _this$ = ecx

; 452  : 	return m_pIndiInfoImpl->GetGraph();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?GetGraph@CIndicatorInfoImplementation@@QAEPAVCGraph@@XZ ; CIndicatorInfoImplementation::GetGraph
?GetGraph@CIndicatorInfo@@QBEPAVCGraph@@XZ ENDP		; CIndicatorInfo::GetGraph
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?SetGraph@CIndicatorInfo@@QAEXPAVCGraph@@@Z
_TEXT	SEGMENT
_pGraph$ = 8						; size = 4
?SetGraph@CIndicatorInfo@@QAEXPAVCGraph@@@Z PROC	; CIndicatorInfo::SetGraph, COMDAT
; _this$ = ecx

; 445  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 446  : 	m_pIndiInfoImpl->SetGraph(pGraph);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 447  : }

  00006	5d		 pop	 ebp

; 446  : 	m_pIndiInfoImpl->SetGraph(pGraph);

  00007	e9 00 00 00 00	 jmp	 ?SetGraph@CIndicatorInfoImplementation@@QAEXPAVCGraph@@@Z ; CIndicatorInfoImplementation::SetGraph
?SetGraph@CIndicatorInfo@@QAEXPAVCGraph@@@Z ENDP	; CIndicatorInfo::SetGraph
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetSubGraphHiding@CIndicatorInfo@@QAEHH@Z
_TEXT	SEGMENT
_p_nSubGraphIndex$ = 8					; size = 4
?GetSubGraphHiding@CIndicatorInfo@@QAEHH@Z PROC		; CIndicatorInfo::GetSubGraphHiding, COMDAT
; _this$ = ecx

; 439  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 440  : 	return m_pIndiInfoImpl->GetSubGraphHiding( p_nSubGraphIndex);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 441  : }

  00006	5d		 pop	 ebp

; 440  : 	return m_pIndiInfoImpl->GetSubGraphHiding( p_nSubGraphIndex);

  00007	e9 00 00 00 00	 jmp	 ?GetSubGraphHiding@CIndicatorInfoImplementation@@QAEHH@Z ; CIndicatorInfoImplementation::GetSubGraphHiding
?GetSubGraphHiding@CIndicatorInfo@@QAEHH@Z ENDP		; CIndicatorInfo::GetSubGraphHiding
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetSubGraphHiding@CIndicatorInfo@@QAEHPBD@Z
_TEXT	SEGMENT
_p_szSubGraphName$ = 8					; size = 4
?GetSubGraphHiding@CIndicatorInfo@@QAEHPBD@Z PROC	; CIndicatorInfo::GetSubGraphHiding, COMDAT
; _this$ = ecx

; 435  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 436  : 	return m_pIndiInfoImpl->GetSubGraphHiding( p_szSubGraphName);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 437  : }

  00006	5d		 pop	 ebp

; 436  : 	return m_pIndiInfoImpl->GetSubGraphHiding( p_szSubGraphName);

  00007	e9 00 00 00 00	 jmp	 ?GetSubGraphHiding@CIndicatorInfoImplementation@@QAEHPBD@Z ; CIndicatorInfoImplementation::GetSubGraphHiding
?GetSubGraphHiding@CIndicatorInfo@@QAEHPBD@Z ENDP	; CIndicatorInfo::GetSubGraphHiding
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetGraphDataDrawingData@CIndicatorInfo@@QAEPAVCGraphDataDrawingData@@XZ
_TEXT	SEGMENT
?GetGraphDataDrawingData@CIndicatorInfo@@QAEPAVCGraphDataDrawingData@@XZ PROC ; CIndicatorInfo::GetGraphDataDrawingData, COMDAT
; _this$ = ecx

; 430  : 	return m_pIndiInfoImpl->GetGraphDataDrawingData();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?GetGraphDataDrawingData@CIndicatorInfoImplementation@@QAEPAVCGraphDataDrawingData@@XZ ; CIndicatorInfoImplementation::GetGraphDataDrawingData
?GetGraphDataDrawingData@CIndicatorInfo@@QAEPAVCGraphDataDrawingData@@XZ ENDP ; CIndicatorInfo::GetGraphDataDrawingData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?SetGraphDataDrawingDataWithCopy@CIndicatorInfo@@QAEXPBVCGraphDataDrawingData@@@Z
_TEXT	SEGMENT
_p_pGraphDataDrawingData$ = 8				; size = 4
?SetGraphDataDrawingDataWithCopy@CIndicatorInfo@@QAEXPBVCGraphDataDrawingData@@@Z PROC ; CIndicatorInfo::SetGraphDataDrawingDataWithCopy, COMDAT
; _this$ = ecx

; 425  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 426  : 	m_pIndiInfoImpl->SetGraphDataDrawingDataWithCopy( p_pGraphDataDrawingData);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 427  : }

  00006	5d		 pop	 ebp

; 426  : 	m_pIndiInfoImpl->SetGraphDataDrawingDataWithCopy( p_pGraphDataDrawingData);

  00007	e9 00 00 00 00	 jmp	 ?SetGraphDataDrawingDataWithCopy@CIndicatorInfoImplementation@@QAEXPBVCGraphDataDrawingData@@@Z ; CIndicatorInfoImplementation::SetGraphDataDrawingDataWithCopy
?SetGraphDataDrawingDataWithCopy@CIndicatorInfo@@QAEXPBVCGraphDataDrawingData@@@Z ENDP ; CIndicatorInfo::SetGraphDataDrawingDataWithCopy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetSubGraphPartData@CIndicatorInfo@@QAEPAVCSubGraphPartData@@H@Z
_TEXT	SEGMENT
_p_nIndex$ = 8						; size = 4
?GetSubGraphPartData@CIndicatorInfo@@QAEPAVCSubGraphPartData@@H@Z PROC ; CIndicatorInfo::GetSubGraphPartData, COMDAT
; _this$ = ecx

; 418  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 419  : 	return m_pIndiInfoImpl->GetSubGraphPartData( p_nIndex);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 420  : }

  00006	5d		 pop	 ebp

; 419  : 	return m_pIndiInfoImpl->GetSubGraphPartData( p_nIndex);

  00007	e9 00 00 00 00	 jmp	 ?GetSubGraphPartData@CIndicatorInfoImplementation@@QAEPAVCSubGraphPartData@@H@Z ; CIndicatorInfoImplementation::GetSubGraphPartData
?GetSubGraphPartData@CIndicatorInfo@@QAEPAVCSubGraphPartData@@H@Z ENDP ; CIndicatorInfo::GetSubGraphPartData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?AddSubGraphPartDataWithCopy@CIndicatorInfo@@QAEHPBVCSubGraphPartData@@@Z
_TEXT	SEGMENT
_pSubGraphPartData$ = 8					; size = 4
?AddSubGraphPartDataWithCopy@CIndicatorInfo@@QAEHPBVCSubGraphPartData@@@Z PROC ; CIndicatorInfo::AddSubGraphPartDataWithCopy, COMDAT
; _this$ = ecx

; 414  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 415  : 	return m_pIndiInfoImpl->AddSubGraphPartDataWithCopy( pSubGraphPartData);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 416  : }

  00006	5d		 pop	 ebp

; 415  : 	return m_pIndiInfoImpl->AddSubGraphPartDataWithCopy( pSubGraphPartData);

  00007	e9 00 00 00 00	 jmp	 ?AddSubGraphPartDataWithCopy@CIndicatorInfoImplementation@@QAEHPBVCSubGraphPartData@@@Z ; CIndicatorInfoImplementation::AddSubGraphPartDataWithCopy
?AddSubGraphPartDataWithCopy@CIndicatorInfo@@QAEHPBVCSubGraphPartData@@@Z ENDP ; CIndicatorInfo::AddSubGraphPartDataWithCopy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?ChangeAllSubGraphTitleFromCalConditionData@CIndicatorInfo@@QAE_NXZ
_TEXT	SEGMENT
?ChangeAllSubGraphTitleFromCalConditionData@CIndicatorInfo@@QAE_NXZ PROC ; CIndicatorInfo::ChangeAllSubGraphTitleFromCalConditionData, COMDAT
; _this$ = ecx

; 408  : 	return m_pIndiInfoImpl->ChangeAllSubGraphTitleFromCalConditionData();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?ChangeAllSubGraphTitleFromCalConditionData@CIndicatorInfoImplementation@@QAE_NXZ ; CIndicatorInfoImplementation::ChangeAllSubGraphTitleFromCalConditionData
?ChangeAllSubGraphTitleFromCalConditionData@CIndicatorInfo@@QAE_NXZ ENDP ; CIndicatorInfo::ChangeAllSubGraphTitleFromCalConditionData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?SetSubGraphPenThickness@CIndicatorInfo@@QAE_NHH@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
_nPenThickness$ = 12					; size = 4
?SetSubGraphPenThickness@CIndicatorInfo@@QAE_NHH@Z PROC	; CIndicatorInfo::SetSubGraphPenThickness, COMDAT
; _this$ = ecx

; 401  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 402  : 	return m_pIndiInfoImpl->SetSubGraphPenThickness(nIndex, nPenThickness);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 403  : }

  00006	5d		 pop	 ebp

; 402  : 	return m_pIndiInfoImpl->SetSubGraphPenThickness(nIndex, nPenThickness);

  00007	e9 00 00 00 00	 jmp	 ?SetSubGraphPenThickness@CIndicatorInfoImplementation@@QAE_NHH@Z ; CIndicatorInfoImplementation::SetSubGraphPenThickness
?SetSubGraphPenThickness@CIndicatorInfo@@QAE_NHH@Z ENDP	; CIndicatorInfo::SetSubGraphPenThickness
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?SetSubGraphPenThickness@CIndicatorInfo@@QAE_NHABVCPenThickness@@@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
_penThickness$ = 12					; size = 4
?SetSubGraphPenThickness@CIndicatorInfo@@QAE_NHABVCPenThickness@@@Z PROC ; CIndicatorInfo::SetSubGraphPenThickness, COMDAT
; _this$ = ecx

; 396  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 397  : 	return m_pIndiInfoImpl->SetSubGraphPenThickness(nIndex, penThickness);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 398  : }

  00006	5d		 pop	 ebp

; 397  : 	return m_pIndiInfoImpl->SetSubGraphPenThickness(nIndex, penThickness);

  00007	e9 00 00 00 00	 jmp	 ?SetSubGraphPenThickness@CIndicatorInfoImplementation@@QAE_NHABVCPenThickness@@@Z ; CIndicatorInfoImplementation::SetSubGraphPenThickness
?SetSubGraphPenThickness@CIndicatorInfo@@QAE_NHABVCPenThickness@@@Z ENDP ; CIndicatorInfo::SetSubGraphPenThickness
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?SetSubGraphColor@CIndicatorInfo@@QAE_NHABK@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
_lineColor$ = 12					; size = 4
?SetSubGraphColor@CIndicatorInfo@@QAE_NHABK@Z PROC	; CIndicatorInfo::SetSubGraphColor, COMDAT
; _this$ = ecx

; 391  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 392  : 	return m_pIndiInfoImpl->SetSubGraphColor(nIndex, lineColor);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 393  : }

  00006	5d		 pop	 ebp

; 392  : 	return m_pIndiInfoImpl->SetSubGraphColor(nIndex, lineColor);

  00007	e9 00 00 00 00	 jmp	 ?SetSubGraphColor@CIndicatorInfoImplementation@@QAE_NHABK@Z ; CIndicatorInfoImplementation::SetSubGraphColor
?SetSubGraphColor@CIndicatorInfo@@QAE_NHABK@Z ENDP	; CIndicatorInfo::SetSubGraphColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?SetSubGraphColor@CIndicatorInfo@@QAE_NHABVCGraphColor@@@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
_graphColor$ = 12					; size = 4
?SetSubGraphColor@CIndicatorInfo@@QAE_NHABVCGraphColor@@@Z PROC ; CIndicatorInfo::SetSubGraphColor, COMDAT
; _this$ = ecx

; 386  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 387  : 	return m_pIndiInfoImpl->SetSubGraphColor(nIndex, graphColor);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 388  : }

  00006	5d		 pop	 ebp

; 387  : 	return m_pIndiInfoImpl->SetSubGraphColor(nIndex, graphColor);

  00007	e9 00 00 00 00	 jmp	 ?SetSubGraphColor@CIndicatorInfoImplementation@@QAE_NHABVCGraphColor@@@Z ; CIndicatorInfoImplementation::SetSubGraphColor
?SetSubGraphColor@CIndicatorInfo@@QAE_NHABVCGraphColor@@@Z ENDP ; CIndicatorInfo::SetSubGraphColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?SetSubGraphTitle@CIndicatorInfo@@QAE_NHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
_strTitle$ = 12						; size = 4
?SetSubGraphTitle@CIndicatorInfo@@QAE_NHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC ; CIndicatorInfo::SetSubGraphTitle, COMDAT
; _this$ = ecx

; 381  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 382  : 	return m_pIndiInfoImpl->SetSubGraphTitle(nIndex, strTitle);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 383  : }

  00006	5d		 pop	 ebp

; 382  : 	return m_pIndiInfoImpl->SetSubGraphTitle(nIndex, strTitle);

  00007	e9 00 00 00 00	 jmp	 ?SetSubGraphTitle@CIndicatorInfoImplementation@@QAE_NHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfoImplementation::SetSubGraphTitle
?SetSubGraphTitle@CIndicatorInfo@@QAE_NHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CIndicatorInfo::SetSubGraphTitle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?SetSubGraphData@CIndicatorInfo@@QAE_NPBVCSubGraphData@@@Z
_TEXT	SEGMENT
_pSourceData$ = 8					; size = 4
?SetSubGraphData@CIndicatorInfo@@QAE_NPBVCSubGraphData@@@Z PROC ; CIndicatorInfo::SetSubGraphData, COMDAT
; _this$ = ecx

; 376  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 377  : 	return m_pIndiInfoImpl->SetSubGraphData(pSourceData);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 378  : }

  00006	5d		 pop	 ebp

; 377  : 	return m_pIndiInfoImpl->SetSubGraphData(pSourceData);

  00007	e9 00 00 00 00	 jmp	 ?SetSubGraphData@CIndicatorInfoImplementation@@QAE_NPBVCSubGraphData@@@Z ; CIndicatorInfoImplementation::SetSubGraphData
?SetSubGraphData@CIndicatorInfo@@QAE_NPBVCSubGraphData@@@Z ENDP ; CIndicatorInfo::SetSubGraphData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?SetAllSubGraphDataList@CIndicatorInfo@@QAE_NPBV?$CList@PAVCSubGraphData@@PAV1@@@_N@Z
_TEXT	SEGMENT
_pSubGraphDataList$ = 8					; size = 4
_bAutoCalConditionData$ = 12				; size = 1
?SetAllSubGraphDataList@CIndicatorInfo@@QAE_NPBV?$CList@PAVCSubGraphData@@PAV1@@@_N@Z PROC ; CIndicatorInfo::SetAllSubGraphDataList, COMDAT
; _this$ = ecx

; 371  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 372  : 	return m_pIndiInfoImpl->SetAllSubGraphDataList((CSubGraphDataList*)(pSubGraphDataList), bAutoCalConditionData);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 373  : }

  00006	5d		 pop	 ebp

; 372  : 	return m_pIndiInfoImpl->SetAllSubGraphDataList((CSubGraphDataList*)(pSubGraphDataList), bAutoCalConditionData);

  00007	e9 00 00 00 00	 jmp	 ?SetAllSubGraphDataList@CIndicatorInfoImplementation@@QAE_NPBV?$CList@PAVCSubGraphData@@PAV1@@@_N@Z ; CIndicatorInfoImplementation::SetAllSubGraphDataList
?SetAllSubGraphDataList@CIndicatorInfo@@QAE_NPBV?$CList@PAVCSubGraphData@@PAV1@@@_N@Z ENDP ; CIndicatorInfo::SetAllSubGraphDataList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?SetSignalData@CIndicatorInfo@@QAEXABVCSignalData@@@Z
_TEXT	SEGMENT
_signalData$ = 8					; size = 4
?SetSignalData@CIndicatorInfo@@QAEXABVCSignalData@@@Z PROC ; CIndicatorInfo::SetSignalData, COMDAT
; _this$ = ecx

; 365  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 366  : 	m_pIndiInfoImpl->SetSignalData(signalData);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 367  : }

  00006	5d		 pop	 ebp

; 366  : 	m_pIndiInfoImpl->SetSignalData(signalData);

  00007	e9 00 00 00 00	 jmp	 ?SetSignalData@CIndicatorInfoImplementation@@QAEXABVCSignalData@@@Z ; CIndicatorInfoImplementation::SetSignalData
?SetSignalData@CIndicatorInfo@@QAEXABVCSignalData@@@Z ENDP ; CIndicatorInfo::SetSignalData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?SetPacketNames@CIndicatorInfo@@QAE_NHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_nSubGraphIndex$ = 8					; size = 4
_strPacketNames$ = 12					; size = 4
?SetPacketNames@CIndicatorInfo@@QAE_NHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC ; CIndicatorInfo::SetPacketNames, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 361  : 	return m_pIndiInfoImpl->SetPacketNames(nSubGraphIndex, strPacketNames);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 362  : }

  00006	5d		 pop	 ebp

; 361  : 	return m_pIndiInfoImpl->SetPacketNames(nSubGraphIndex, strPacketNames);

  00007	e9 00 00 00 00	 jmp	 ?SetPacketNames@CIndicatorInfoImplementation@@QAE_NHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfoImplementation::SetPacketNames
?SetPacketNames@CIndicatorInfo@@QAE_NHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CIndicatorInfo::SetPacketNames
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?SetAllPacketNames_SubGraphPart@CIndicatorInfo@@QAE_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@_N@Z
_TEXT	SEGMENT
_strPacketNames$ = 8					; size = 4
_bIsAutoCheck$ = 12					; size = 1
?SetAllPacketNames_SubGraphPart@CIndicatorInfo@@QAE_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@_N@Z PROC ; CIndicatorInfo::SetAllPacketNames_SubGraphPart, COMDAT
; _this$ = ecx

; 355  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 356  : 	return m_pIndiInfoImpl->SetAllPacketNames_SubGraphPart(strPacketNames, bIsAutoCheck);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 357  : }

  00006	5d		 pop	 ebp

; 356  : 	return m_pIndiInfoImpl->SetAllPacketNames_SubGraphPart(strPacketNames, bIsAutoCheck);

  00007	e9 00 00 00 00	 jmp	 ?SetAllPacketNames_SubGraphPart@CIndicatorInfoImplementation@@QAE_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@_N@Z ; CIndicatorInfoImplementation::SetAllPacketNames_SubGraphPart
?SetAllPacketNames_SubGraphPart@CIndicatorInfo@@QAE_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@_N@Z ENDP ; CIndicatorInfo::SetAllPacketNames_SubGraphPart
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?SetCommonPacketNames@CIndicatorInfo@@QAE_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_strPacketNames$ = 8					; size = 4
?SetCommonPacketNames@CIndicatorInfo@@QAE_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC ; CIndicatorInfo::SetCommonPacketNames, COMDAT
; _this$ = ecx

; 350  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 351  : 	return m_pIndiInfoImpl->SetCommonPacketNames(strPacketNames);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 352  : }

  00006	5d		 pop	 ebp

; 351  : 	return m_pIndiInfoImpl->SetCommonPacketNames(strPacketNames);

  00007	e9 00 00 00 00	 jmp	 ?SetCommonPacketNames@CIndicatorInfoImplementation@@QAE_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfoImplementation::SetCommonPacketNames
?SetCommonPacketNames@CIndicatorInfo@@QAE_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CIndicatorInfo::SetCommonPacketNames
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?SetGraphData@CIndicatorInfo@@QAE_NABVCGraphData@@_N@Z
_TEXT	SEGMENT
_graphData$ = 8						; size = 4
_bIsAutoCheck$ = 12					; size = 1
?SetGraphData@CIndicatorInfo@@QAE_NABVCGraphData@@_N@Z PROC ; CIndicatorInfo::SetGraphData, COMDAT
; _this$ = ecx

; 345  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 346  : 	return m_pIndiInfoImpl->SetGraphData(graphData, bIsAutoCheck);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 347  : }

  00006	5d		 pop	 ebp

; 346  : 	return m_pIndiInfoImpl->SetGraphData(graphData, bIsAutoCheck);

  00007	e9 00 00 00 00	 jmp	 ?SetGraphData@CIndicatorInfoImplementation@@QAE_NABVCGraphData@@_N@Z ; CIndicatorInfoImplementation::SetGraphData
?SetGraphData@CIndicatorInfo@@QAE_NABVCGraphData@@_N@Z ENDP ; CIndicatorInfo::SetGraphData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?SetCalConditionData@CIndicatorInfo@@QAEHHHABN@Z
_TEXT	SEGMENT
_nSubGraphIndex$ = 8					; size = 4
_nCondIndex$ = 12					; size = 4
_dData$ = 16						; size = 4
?SetCalConditionData@CIndicatorInfo@@QAEHHHABN@Z PROC	; CIndicatorInfo::SetCalConditionData, COMDAT
; _this$ = ecx

; 339  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 340  : 	return m_pIndiInfoImpl->SetCalConditionData(nSubGraphIndex, nCondIndex, dData);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 341  : }

  00006	5d		 pop	 ebp

; 340  : 	return m_pIndiInfoImpl->SetCalConditionData(nSubGraphIndex, nCondIndex, dData);

  00007	e9 00 00 00 00	 jmp	 ?SetCalConditionData@CIndicatorInfoImplementation@@QAEHHHABN@Z ; CIndicatorInfoImplementation::SetCalConditionData
?SetCalConditionData@CIndicatorInfo@@QAEHHHABN@Z ENDP	; CIndicatorInfo::SetCalConditionData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?SetAllCalConditionData_SubGraphPart@CIndicatorInfo@@QAE_NHABN@Z
_TEXT	SEGMENT
_nCondIndex$ = 8					; size = 4
_dData$ = 12						; size = 4
?SetAllCalConditionData_SubGraphPart@CIndicatorInfo@@QAE_NHABN@Z PROC ; CIndicatorInfo::SetAllCalConditionData_SubGraphPart, COMDAT
; _this$ = ecx

; 334  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 335  : 	return m_pIndiInfoImpl->SetAllCalConditionData_SubGraphPart(nCondIndex, dData);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 336  : }

  00006	5d		 pop	 ebp

; 335  : 	return m_pIndiInfoImpl->SetAllCalConditionData_SubGraphPart(nCondIndex, dData);

  00007	e9 00 00 00 00	 jmp	 ?SetAllCalConditionData_SubGraphPart@CIndicatorInfoImplementation@@QAE_NHABN@Z ; CIndicatorInfoImplementation::SetAllCalConditionData_SubGraphPart
?SetAllCalConditionData_SubGraphPart@CIndicatorInfo@@QAE_NHABN@Z ENDP ; CIndicatorInfo::SetAllCalConditionData_SubGraphPart
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?SetBaseLineData@CIndicatorInfo@@QAEHHABN@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
_dData$ = 12						; size = 4
?SetBaseLineData@CIndicatorInfo@@QAEHHABN@Z PROC	; CIndicatorInfo::SetBaseLineData, COMDAT
; _this$ = ecx

; 329  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 330  : 	return m_pIndiInfoImpl->SetBaseLineData(nIndex, dData);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 331  : }

  00006	5d		 pop	 ebp

; 330  : 	return m_pIndiInfoImpl->SetBaseLineData(nIndex, dData);

  00007	e9 00 00 00 00	 jmp	 ?SetBaseLineData@CIndicatorInfoImplementation@@QAEHHABN@Z ; CIndicatorInfoImplementation::SetBaseLineData
?SetBaseLineData@CIndicatorInfo@@QAEHHABN@Z ENDP	; CIndicatorInfo::SetBaseLineData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?SetDrawConditionData@CIndicatorInfo@@QAEHHABN@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
_dData$ = 12						; size = 4
?SetDrawConditionData@CIndicatorInfo@@QAEHHABN@Z PROC	; CIndicatorInfo::SetDrawConditionData, COMDAT
; _this$ = ecx

; 324  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 325  : 	return m_pIndiInfoImpl->SetDrawConditionData(nIndex, dData);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 326  : }

  00006	5d		 pop	 ebp

; 325  : 	return m_pIndiInfoImpl->SetDrawConditionData(nIndex, dData);

  00007	e9 00 00 00 00	 jmp	 ?SetDrawConditionData@CIndicatorInfoImplementation@@QAEHHABN@Z ; CIndicatorInfoImplementation::SetDrawConditionData
?SetDrawConditionData@CIndicatorInfo@@QAEHHABN@Z ENDP	; CIndicatorInfo::SetDrawConditionData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?SetCommonCalConditionData@CIndicatorInfo@@QAEHHABN@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
_dData$ = 12						; size = 4
?SetCommonCalConditionData@CIndicatorInfo@@QAEHHABN@Z PROC ; CIndicatorInfo::SetCommonCalConditionData, COMDAT
; _this$ = ecx

; 319  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 320  : 	return m_pIndiInfoImpl->SetCommonCalConditionData(nIndex, dData);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 321  : }

  00006	5d		 pop	 ebp

; 320  : 	return m_pIndiInfoImpl->SetCommonCalConditionData(nIndex, dData);

  00007	e9 00 00 00 00	 jmp	 ?SetCommonCalConditionData@CIndicatorInfoImplementation@@QAEHHABN@Z ; CIndicatorInfoImplementation::SetCommonCalConditionData
?SetCommonCalConditionData@CIndicatorInfo@@QAEHHABN@Z ENDP ; CIndicatorInfo::SetCommonCalConditionData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetCopyDataFrom@CIndicatorInfo@@QAE_NPBV1@H@Z
_TEXT	SEGMENT
_pIndicatorInfo$ = 8					; size = 4
_p_bSameGraph$ = 12					; size = 4
?GetCopyDataFrom@CIndicatorInfo@@QAE_NPBV1@H@Z PROC	; CIndicatorInfo::GetCopyDataFrom, COMDAT
; _this$ = ecx

; 311  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 312  : 	if(pIndicatorInfo == NULL)

  00003	8b 45 08	 mov	 eax, DWORD PTR _pIndicatorInfo$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	75 06		 jne	 SHORT $LN2@GetCopyDat

; 313  : 		return false;

  0000a	32 c0		 xor	 al, al

; 316  : }

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
$LN2@GetCopyDat:

; 314  : 
; 315  : 	return m_pIndiInfoImpl->GetCopyDataFrom(pIndicatorInfo->m_pIndiInfoImpl, p_bSameGraph);

  00010	ff 75 0c	 push	 DWORD PTR _p_bSameGraph$[ebp]
  00013	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00016	ff 70 04	 push	 DWORD PTR [eax+4]
  00019	e8 00 00 00 00	 call	 ?GetCopyDataFrom@CIndicatorInfoImplementation@@QAE_NPBV1@H@Z ; CIndicatorInfoImplementation::GetCopyDataFrom

; 316  : }

  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
?GetCopyDataFrom@CIndicatorInfo@@QAE_NPBV1@H@Z ENDP	; CIndicatorInfo::GetCopyDataFrom
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetSubGraphColorList@CIndicatorInfo@@QBE_NAAV?$CList@PAVCGraphColor@@PAV1@@@@Z
_TEXT	SEGMENT
_subGraphColorList$ = 8					; size = 4
?GetSubGraphColorList@CIndicatorInfo@@QBE_NAAV?$CList@PAVCGraphColor@@PAV1@@@@Z PROC ; CIndicatorInfo::GetSubGraphColorList, COMDAT
; _this$ = ecx

; 305  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 306  : 	return m_pIndiInfoImpl->GetSubGraphColorList(subGraphColorList);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 307  : }

  00006	5d		 pop	 ebp

; 306  : 	return m_pIndiInfoImpl->GetSubGraphColorList(subGraphColorList);

  00007	e9 00 00 00 00	 jmp	 ?GetSubGraphColorList@CIndicatorInfoImplementation@@QBE_NAAV?$CList@PAVCGraphColor@@PAV1@@@@Z ; CIndicatorInfoImplementation::GetSubGraphColorList
?GetSubGraphColorList@CIndicatorInfo@@QBE_NAAV?$CList@PAVCGraphColor@@PAV1@@@@Z ENDP ; CIndicatorInfo::GetSubGraphColorList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetSubGraphColor_PointerType@CIndicatorInfo@@QBEPAVCGraphColor@@H@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
?GetSubGraphColor_PointerType@CIndicatorInfo@@QBEPAVCGraphColor@@H@Z PROC ; CIndicatorInfo::GetSubGraphColor_PointerType, COMDAT
; _this$ = ecx

; 300  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 301  : 	return m_pIndiInfoImpl->GetSubGraphColor_PointerType(nIndex);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 302  : }

  00006	5d		 pop	 ebp

; 301  : 	return m_pIndiInfoImpl->GetSubGraphColor_PointerType(nIndex);

  00007	e9 00 00 00 00	 jmp	 ?GetSubGraphColor_PointerType@CIndicatorInfoImplementation@@QBEPAVCGraphColor@@H@Z ; CIndicatorInfoImplementation::GetSubGraphColor_PointerType
?GetSubGraphColor_PointerType@CIndicatorInfo@@QBEPAVCGraphColor@@H@Z ENDP ; CIndicatorInfo::GetSubGraphColor_PointerType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetSubGraphColor@CIndicatorInfo@@QBE?AVCGraphColor@@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_nIndex$ = 12						; size = 4
?GetSubGraphColor@CIndicatorInfo@@QBE?AVCGraphColor@@H@Z PROC ; CIndicatorInfo::GetSubGraphColor, COMDAT
; _this$ = ecx

; 295  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 296  : 	return m_pIndiInfoImpl->GetSubGraphColor(nIndex);

  00003	ff 75 0c	 push	 DWORD PTR _nIndex$[ebp]
  00006	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00009	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  0000c	e8 00 00 00 00	 call	 ?GetSubGraphColor@CIndicatorInfoImplementation@@QBE?AVCGraphColor@@H@Z ; CIndicatorInfoImplementation::GetSubGraphColor
  00011	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 297  : }

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
?GetSubGraphColor@CIndicatorInfo@@QBE?AVCGraphColor@@H@Z ENDP ; CIndicatorInfo::GetSubGraphColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetSubGraphNames@CIndicatorInfo@@QBEHAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_p_strSubGraphNames$ = 8				; size = 4
?GetSubGraphNames@CIndicatorInfo@@QBEHAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC ; CIndicatorInfo::GetSubGraphNames, COMDAT
; _this$ = ecx

; 290  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 291  : 	return m_pIndiInfoImpl->GetSubGraphNames( p_strSubGraphNames);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 292  : }

  00006	5d		 pop	 ebp

; 291  : 	return m_pIndiInfoImpl->GetSubGraphNames( p_strSubGraphNames);

  00007	e9 00 00 00 00	 jmp	 ?GetSubGraphNames@CIndicatorInfoImplementation@@QBEHAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfoImplementation::GetSubGraphNames
?GetSubGraphNames@CIndicatorInfo@@QBEHAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CIndicatorInfo::GetSubGraphNames
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetSubGraphNameList@CIndicatorInfo@@QBE_NAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@@Z
_TEXT	SEGMENT
_SubGraphNameList$ = 8					; size = 4
?GetSubGraphNameList@CIndicatorInfo@@QBE_NAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@@Z PROC ; CIndicatorInfo::GetSubGraphNameList, COMDAT
; _this$ = ecx

; 284  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 285  : 	return m_pIndiInfoImpl->GetSubGraphNameList(SubGraphNameList);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 286  : }

  00006	5d		 pop	 ebp

; 285  : 	return m_pIndiInfoImpl->GetSubGraphNameList(SubGraphNameList);

  00007	e9 00 00 00 00	 jmp	 ?GetSubGraphNameList@CIndicatorInfoImplementation@@QBE_NAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@@Z ; CIndicatorInfoImplementation::GetSubGraphNameList
?GetSubGraphNameList@CIndicatorInfo@@QBE_NAAV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@@Z ENDP ; CIndicatorInfo::GetSubGraphNameList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetSubGraphTitle@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_nIndex$ = 12						; size = 4
?GetSubGraphTitle@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z PROC ; CIndicatorInfo::GetSubGraphTitle, COMDAT
; _this$ = ecx

; 279  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	return m_pIndiInfoImpl->GetSubGraphTitle(nIndex);

  00003	ff 75 0c	 push	 DWORD PTR _nIndex$[ebp]
  00006	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00009	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  0000c	e8 00 00 00 00	 call	 ?GetSubGraphTitle@CIndicatorInfoImplementation@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CIndicatorInfoImplementation::GetSubGraphTitle
  00011	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 281  : }

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
?GetSubGraphTitle@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ENDP ; CIndicatorInfo::GetSubGraphTitle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetSubGraphName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_nIndex$ = 12						; size = 4
?GetSubGraphName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z PROC ; CIndicatorInfo::GetSubGraphName, COMDAT
; _this$ = ecx

; 274  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 275  : 	return m_pIndiInfoImpl->GetSubGraphName(nIndex);

  00003	ff 75 0c	 push	 DWORD PTR _nIndex$[ebp]
  00006	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00009	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  0000c	e8 00 00 00 00	 call	 ?GetSubGraphName@CIndicatorInfoImplementation@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CIndicatorInfoImplementation::GetSubGraphName
  00011	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 276  : }

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
?GetSubGraphName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ENDP ; CIndicatorInfo::GetSubGraphName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetSubGraphIndex@CIndicatorInfo@@QBEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_strSubGraphName$ = 8					; size = 4
?GetSubGraphIndex@CIndicatorInfo@@QBEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC ; CIndicatorInfo::GetSubGraphIndex, COMDAT
; _this$ = ecx

; 269  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 270  : 	return m_pIndiInfoImpl->GetSubGraphIndex(strSubGraphName);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 271  : }

  00006	5d		 pop	 ebp

; 270  : 	return m_pIndiInfoImpl->GetSubGraphIndex(strSubGraphName);

  00007	e9 00 00 00 00	 jmp	 ?GetSubGraphIndex@CIndicatorInfoImplementation@@QBEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfoImplementation::GetSubGraphIndex
?GetSubGraphIndex@CIndicatorInfo@@QBEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CIndicatorInfo::GetSubGraphIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetSubGraphData@CIndicatorInfo@@QBEPAVCSubGraphData@@H@Z
_TEXT	SEGMENT
_nSubGraphIndex$ = 8					; size = 4
?GetSubGraphData@CIndicatorInfo@@QBEPAVCSubGraphData@@H@Z PROC ; CIndicatorInfo::GetSubGraphData, COMDAT
; _this$ = ecx

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 265  : 	return m_pIndiInfoImpl->GetSubGraphData(nSubGraphIndex);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 266  : }

  00006	5d		 pop	 ebp

; 265  : 	return m_pIndiInfoImpl->GetSubGraphData(nSubGraphIndex);

  00007	e9 00 00 00 00	 jmp	 ?GetSubGraphData@CIndicatorInfoImplementation@@QBEPAVCSubGraphData@@H@Z ; CIndicatorInfoImplementation::GetSubGraphData
?GetSubGraphData@CIndicatorInfo@@QBEPAVCSubGraphData@@H@Z ENDP ; CIndicatorInfo::GetSubGraphData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetSubGraphData@CIndicatorInfo@@QBEPAVCSubGraphData@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_strSubGraphName$ = 8					; size = 4
?GetSubGraphData@CIndicatorInfo@@QBEPAVCSubGraphData@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC ; CIndicatorInfo::GetSubGraphData, COMDAT
; _this$ = ecx

; 259  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 260  : 	return m_pIndiInfoImpl->GetSubGraphData(strSubGraphName);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 261  : }

  00006	5d		 pop	 ebp

; 260  : 	return m_pIndiInfoImpl->GetSubGraphData(strSubGraphName);

  00007	e9 00 00 00 00	 jmp	 ?GetSubGraphData@CIndicatorInfoImplementation@@QBEPAVCSubGraphData@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfoImplementation::GetSubGraphData
?GetSubGraphData@CIndicatorInfo@@QBEPAVCSubGraphData@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CIndicatorInfo::GetSubGraphData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetAllSubGraphDataList@CIndicatorInfo@@QBE_NAAV?$CList@PAVCSubGraphData@@PAV1@@@@Z
_TEXT	SEGMENT
_subGraphDataList$ = 8					; size = 4
?GetAllSubGraphDataList@CIndicatorInfo@@QBE_NAAV?$CList@PAVCSubGraphData@@PAV1@@@@Z PROC ; CIndicatorInfo::GetAllSubGraphDataList, COMDAT
; _this$ = ecx

; 254  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 255  : 	return m_pIndiInfoImpl->GetAllSubGraphDataList(subGraphDataList);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 256  : }

  00006	5d		 pop	 ebp

; 255  : 	return m_pIndiInfoImpl->GetAllSubGraphDataList(subGraphDataList);

  00007	e9 00 00 00 00	 jmp	 ?GetAllSubGraphDataList@CIndicatorInfoImplementation@@QBE_NAAV?$CList@PAVCSubGraphData@@PAV1@@@@Z ; CIndicatorInfoImplementation::GetAllSubGraphDataList
?GetAllSubGraphDataList@CIndicatorInfo@@QBE_NAAV?$CList@PAVCSubGraphData@@PAV1@@@@Z ENDP ; CIndicatorInfo::GetAllSubGraphDataList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetSubGraphCount@CIndicatorInfo@@QBEHXZ
_TEXT	SEGMENT
?GetSubGraphCount@CIndicatorInfo@@QBEHXZ PROC		; CIndicatorInfo::GetSubGraphCount, COMDAT
; _this$ = ecx

; 250  : 	return m_pIndiInfoImpl->GetSubGraphCount();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?GetSubGraphCount@CIndicatorInfoImplementation@@QBEHXZ ; CIndicatorInfoImplementation::GetSubGraphCount
?GetSubGraphCount@CIndicatorInfo@@QBEHXZ ENDP		; CIndicatorInfo::GetSubGraphCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?IsSignalShow@CIndicatorInfo@@QBE_NXZ
_TEXT	SEGMENT
?IsSignalShow@CIndicatorInfo@@QBE_NXZ PROC		; CIndicatorInfo::IsSignalShow, COMDAT
; _this$ = ecx

; 245  : 	return m_pIndiInfoImpl->IsSignalShow();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?IsSignalShow@CIndicatorInfoImplementation@@QBE_NXZ ; CIndicatorInfoImplementation::IsSignalShow
?IsSignalShow@CIndicatorInfo@@QBE_NXZ ENDP		; CIndicatorInfo::IsSignalShow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?IsSignalUse@CIndicatorInfo@@QBE_NXZ
_TEXT	SEGMENT
?IsSignalUse@CIndicatorInfo@@QBE_NXZ PROC		; CIndicatorInfo::IsSignalUse, COMDAT
; _this$ = ecx

; 240  : 	return m_pIndiInfoImpl->IsSignalUse();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?IsSignalUse@CIndicatorInfoImplementation@@QBE_NXZ ; CIndicatorInfoImplementation::IsSignalUse
?IsSignalUse@CIndicatorInfo@@QBE_NXZ ENDP		; CIndicatorInfo::IsSignalUse
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetSignalData_PointerType@CIndicatorInfo@@QAEPAVCSignalData@@XZ
_TEXT	SEGMENT
?GetSignalData_PointerType@CIndicatorInfo@@QAEPAVCSignalData@@XZ PROC ; CIndicatorInfo::GetSignalData_PointerType, COMDAT
; _this$ = ecx

; 235  : 	return m_pIndiInfoImpl->GetSignalData_PointerType();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?GetSignalData_PointerType@CIndicatorInfoImplementation@@QAEPAVCSignalData@@XZ ; CIndicatorInfoImplementation::GetSignalData_PointerType
?GetSignalData_PointerType@CIndicatorInfo@@QAEPAVCSignalData@@XZ ENDP ; CIndicatorInfo::GetSignalData_PointerType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetSignalData@CIndicatorInfo@@QAEAAVCSignalData@@XZ
_TEXT	SEGMENT
?GetSignalData@CIndicatorInfo@@QAEAAVCSignalData@@XZ PROC ; CIndicatorInfo::GetSignalData, COMDAT
; _this$ = ecx

; 230  : 	return m_pIndiInfoImpl->GetSignalData();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?GetSignalData@CIndicatorInfoImplementation@@QAEAAVCSignalData@@XZ ; CIndicatorInfoImplementation::GetSignalData
?GetSignalData@CIndicatorInfo@@QAEAAVCSignalData@@XZ ENDP ; CIndicatorInfo::GetSignalData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetSignalData@CIndicatorInfo@@QBE?AVCSignalData@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetSignalData@CIndicatorInfo@@QBE?AVCSignalData@@XZ PROC ; CIndicatorInfo::GetSignalData, COMDAT
; _this$ = ecx

; 224  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 225  : 	return m_pIndiInfoImpl->GetSignalData();

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	e8 00 00 00 00	 call	 ?GetSignalData@CIndicatorInfoImplementation@@QAEAAVCSignalData@@XZ ; CIndicatorInfoImplementation::GetSignalData
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ??0CSignalData@@QAE@ABV0@@Z ; CSignalData::CSignalData
  00014	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 226  : }

  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?GetSignalData@CIndicatorInfo@@QBE?AVCSignalData@@XZ ENDP ; CIndicatorInfo::GetSignalData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetPacketNames@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_nSubGraphIndex$ = 12					; size = 4
?GetPacketNames@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z PROC ; CIndicatorInfo::GetPacketNames, COMDAT
; _this$ = ecx

; 219  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 220  : 	return m_pIndiInfoImpl->GetPacketNames(nSubGraphIndex);

  00003	ff 75 0c	 push	 DWORD PTR _nSubGraphIndex$[ebp]
  00006	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00009	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  0000c	e8 00 00 00 00	 call	 ?GetPacketNames@CIndicatorInfoImplementation@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CIndicatorInfoImplementation::GetPacketNames
  00011	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 221  : }

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
?GetPacketNames@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ENDP ; CIndicatorInfo::GetPacketNames
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetCommonPacketNames@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetCommonPacketNames@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC ; CIndicatorInfo::GetCommonPacketNames, COMDAT
; _this$ = ecx

; 214  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 215  : 	return m_pIndiInfoImpl->GetCommonPacketNames();

  00003	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00009	e8 00 00 00 00	 call	 ?GetCommonPacketNames@CIndicatorInfoImplementation@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfoImplementation::GetCommonPacketNames
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 216  : }

  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?GetCommonPacketNames@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CIndicatorInfo::GetCommonPacketNames
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetGraphDataDrawingData@CIndicatorInfo@@QBEXAA_N000AAH1@Z
_TEXT	SEGMENT
_bCalcRiseFallRate_LowHigh$ = 8				; size = 4
_bCalcRiseFallRate_LowCur$ = 12				; size = 4
_bCalcRiseFallRate_HighCur$ = 16			; size = 4
_bCalcRate_PrevCur$ = 20				; size = 4
_nCalcRiseFallRate_CurData$ = 24			; size = 4
_p_bShowOHLC$ = 28					; size = 4
?GetGraphDataDrawingData@CIndicatorInfo@@QBEXAA_N000AAH1@Z PROC ; CIndicatorInfo::GetGraphDataDrawingData, COMDAT
; _this$ = ecx

; 208  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 209  : 	m_pIndiInfoImpl->GetGraphDataDrawingData(bCalcRiseFallRate_LowHigh, bCalcRiseFallRate_LowCur, 

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 210  : 		bCalcRiseFallRate_HighCur, bCalcRate_PrevCur, nCalcRiseFallRate_CurData, p_bShowOHLC);
; 211  : }

  00006	5d		 pop	 ebp

; 209  : 	m_pIndiInfoImpl->GetGraphDataDrawingData(bCalcRiseFallRate_LowHigh, bCalcRiseFallRate_LowCur, 

  00007	e9 00 00 00 00	 jmp	 ?GetGraphDataDrawingData@CIndicatorInfoImplementation@@QBEXAA_N000AAH1@Z ; CIndicatorInfoImplementation::GetGraphDataDrawingData
?GetGraphDataDrawingData@CIndicatorInfo@@QBEXAA_N000AAH1@Z ENDP ; CIndicatorInfo::GetGraphDataDrawingData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetGraphData_PointerType@CIndicatorInfo@@QAEPAVCGraphData@@XZ
_TEXT	SEGMENT
?GetGraphData_PointerType@CIndicatorInfo@@QAEPAVCGraphData@@XZ PROC ; CIndicatorInfo::GetGraphData_PointerType, COMDAT
; _this$ = ecx

; 203  : 	return m_pIndiInfoImpl->GetGraphData_PointerType();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?GetGraphData_PointerType@CIndicatorInfoImplementation@@QAEPAVCGraphData@@XZ ; CIndicatorInfoImplementation::GetGraphData_PointerType
?GetGraphData_PointerType@CIndicatorInfo@@QAEPAVCGraphData@@XZ ENDP ; CIndicatorInfo::GetGraphData_PointerType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetGraphData@CIndicatorInfo@@QAEAAVCGraphData@@XZ
_TEXT	SEGMENT
?GetGraphData@CIndicatorInfo@@QAEAAVCGraphData@@XZ PROC	; CIndicatorInfo::GetGraphData, COMDAT
; _this$ = ecx

; 198  : 	return m_pIndiInfoImpl->GetGraphData();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?GetGraphData@CIndicatorInfoImplementation@@QAEAAVCGraphData@@XZ ; CIndicatorInfoImplementation::GetGraphData
?GetGraphData@CIndicatorInfo@@QAEAAVCGraphData@@XZ ENDP	; CIndicatorInfo::GetGraphData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetStringBaseLineList@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABV23@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_strCompart$ = 12					; size = 4
?GetStringBaseLineList@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABV23@@Z PROC ; CIndicatorInfo::GetStringBaseLineList, COMDAT
; _this$ = ecx

; 192  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 193  : 	return m_pIndiInfoImpl->GetStringBaseLineList(strCompart);

  00003	ff 75 0c	 push	 DWORD PTR _strCompart$[ebp]
  00006	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00009	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  0000c	e8 00 00 00 00	 call	 ?GetStringBaseLineList@CIndicatorInfoImplementation@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABV23@@Z ; CIndicatorInfoImplementation::GetStringBaseLineList
  00011	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 194  : }

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
?GetStringBaseLineList@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABV23@@Z ENDP ; CIndicatorInfo::GetStringBaseLineList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetStringDrawConditionList@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABV23@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_strCompart$ = 12					; size = 4
?GetStringDrawConditionList@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABV23@@Z PROC ; CIndicatorInfo::GetStringDrawConditionList, COMDAT
; _this$ = ecx

; 187  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 188  : 	return m_pIndiInfoImpl->GetStringDrawConditionList(strCompart);

  00003	ff 75 0c	 push	 DWORD PTR _strCompart$[ebp]
  00006	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00009	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  0000c	e8 00 00 00 00	 call	 ?GetStringDrawConditionList@CIndicatorInfoImplementation@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABV23@@Z ; CIndicatorInfoImplementation::GetStringDrawConditionList
  00011	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 189  : }

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
?GetStringDrawConditionList@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABV23@@Z ENDP ; CIndicatorInfo::GetStringDrawConditionList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetStringCommonCalConditionList@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABV23@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_strCompart$ = 12					; size = 4
?GetStringCommonCalConditionList@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABV23@@Z PROC ; CIndicatorInfo::GetStringCommonCalConditionList, COMDAT
; _this$ = ecx

; 182  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 183  : 	return m_pIndiInfoImpl->GetStringCommonCalConditionList(strCompart);

  00003	ff 75 0c	 push	 DWORD PTR _strCompart$[ebp]
  00006	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00009	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  0000c	e8 00 00 00 00	 call	 ?GetStringCommonCalConditionList@CIndicatorInfoImplementation@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABV23@@Z ; CIndicatorInfoImplementation::GetStringCommonCalConditionList
  00011	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 184  : }

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
?GetStringCommonCalConditionList@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABV23@@Z ENDP ; CIndicatorInfo::GetStringCommonCalConditionList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetAllSubGraphDataForMaking@CIndicatorInfo@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_p_strAllSubGraphData$ = 8				; size = 4
?GetAllSubGraphDataForMaking@CIndicatorInfo@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC ; CIndicatorInfo::GetAllSubGraphDataForMaking, COMDAT
; _this$ = ecx

; 170  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 171  : 	m_pIndiInfoImpl->GetAllSubGraphDataForMaking( p_strAllSubGraphData);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 172  : }

  00006	5d		 pop	 ebp

; 171  : 	m_pIndiInfoImpl->GetAllSubGraphDataForMaking( p_strAllSubGraphData);

  00007	e9 00 00 00 00	 jmp	 ?GetAllSubGraphDataForMaking@CIndicatorInfoImplementation@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfoImplementation::GetAllSubGraphDataForMaking
?GetAllSubGraphDataForMaking@CIndicatorInfo@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CIndicatorInfo::GetAllSubGraphDataForMaking
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetGraphDataForMaking@CIndicatorInfo@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_p_strGraphData$ = 8					; size = 4
?GetGraphDataForMaking@CIndicatorInfo@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC ; CIndicatorInfo::GetGraphDataForMaking, COMDAT
; _this$ = ecx

; 165  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 166  : 	m_pIndiInfoImpl->GetGraphDataForMaking( p_strGraphData);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 167  : }

  00006	5d		 pop	 ebp

; 166  : 	m_pIndiInfoImpl->GetGraphDataForMaking( p_strGraphData);

  00007	e9 00 00 00 00	 jmp	 ?GetGraphDataForMaking@CIndicatorInfoImplementation@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfoImplementation::GetGraphDataForMaking
?GetGraphDataForMaking@CIndicatorInfo@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CIndicatorInfo::GetGraphDataForMaking
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetCalConditionList@CIndicatorInfo@@QAEPAV?$CList@NN@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_strSubGraphName$ = 8					; size = 4
?GetCalConditionList@CIndicatorInfo@@QAEPAV?$CList@NN@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC ; CIndicatorInfo::GetCalConditionList, COMDAT
; _this$ = ecx

; 159  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 160  : 	return m_pIndiInfoImpl->GetCalConditionList(strSubGraphName);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 161  : }

  00006	5d		 pop	 ebp

; 160  : 	return m_pIndiInfoImpl->GetCalConditionList(strSubGraphName);

  00007	e9 00 00 00 00	 jmp	 ?GetCalConditionList@CIndicatorInfoImplementation@@QAEPAV?$CList@NN@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfoImplementation::GetCalConditionList
?GetCalConditionList@CIndicatorInfo@@QAEPAV?$CList@NN@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CIndicatorInfo::GetCalConditionList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetCalConditionList@CIndicatorInfo@@QBEPAV?$CList@NN@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_strSubGraphName$ = 8					; size = 4
?GetCalConditionList@CIndicatorInfo@@QBEPAV?$CList@NN@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC ; CIndicatorInfo::GetCalConditionList, COMDAT
; _this$ = ecx

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 155  : 	return m_pIndiInfoImpl->GetCalConditionList(strSubGraphName);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 156  : }

  00006	5d		 pop	 ebp

; 155  : 	return m_pIndiInfoImpl->GetCalConditionList(strSubGraphName);

  00007	e9 00 00 00 00	 jmp	 ?GetCalConditionList@CIndicatorInfoImplementation@@QAEPAV?$CList@NN@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfoImplementation::GetCalConditionList
?GetCalConditionList@CIndicatorInfo@@QBEPAV?$CList@NN@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CIndicatorInfo::GetCalConditionList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetCalConditionList@CIndicatorInfo@@QAEPAV?$CList@NN@@H@Z
_TEXT	SEGMENT
_nSubGraphIndex$ = 8					; size = 4
?GetCalConditionList@CIndicatorInfo@@QAEPAV?$CList@NN@@H@Z PROC ; CIndicatorInfo::GetCalConditionList, COMDAT
; _this$ = ecx

; 149  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 150  : 	return m_pIndiInfoImpl->GetCalConditionList(nSubGraphIndex);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 151  : }

  00006	5d		 pop	 ebp

; 150  : 	return m_pIndiInfoImpl->GetCalConditionList(nSubGraphIndex);

  00007	e9 00 00 00 00	 jmp	 ?GetCalConditionList@CIndicatorInfoImplementation@@QAEPAV?$CList@NN@@H@Z ; CIndicatorInfoImplementation::GetCalConditionList
?GetCalConditionList@CIndicatorInfo@@QAEPAV?$CList@NN@@H@Z ENDP ; CIndicatorInfo::GetCalConditionList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetCalConditionList@CIndicatorInfo@@QBEPAV?$CList@NN@@H@Z
_TEXT	SEGMENT
_nSubGraphIndex$ = 8					; size = 4
?GetCalConditionList@CIndicatorInfo@@QBEPAV?$CList@NN@@H@Z PROC ; CIndicatorInfo::GetCalConditionList, COMDAT
; _this$ = ecx

; 144  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 145  : 	return m_pIndiInfoImpl->GetCalConditionList(nSubGraphIndex);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 146  : }

  00006	5d		 pop	 ebp

; 145  : 	return m_pIndiInfoImpl->GetCalConditionList(nSubGraphIndex);

  00007	e9 00 00 00 00	 jmp	 ?GetCalConditionList@CIndicatorInfoImplementation@@QAEPAV?$CList@NN@@H@Z ; CIndicatorInfoImplementation::GetCalConditionList
?GetCalConditionList@CIndicatorInfo@@QBEPAV?$CList@NN@@H@Z ENDP ; CIndicatorInfo::GetCalConditionList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetBaseLineList@CIndicatorInfo@@QAEPAV?$CList@NN@@XZ
_TEXT	SEGMENT
?GetBaseLineList@CIndicatorInfo@@QAEPAV?$CList@NN@@XZ PROC ; CIndicatorInfo::GetBaseLineList, COMDAT
; _this$ = ecx

; 140  : 	return m_pIndiInfoImpl->GetBaseLineList();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?GetBaseLineList@CIndicatorInfoImplementation@@QAEPAV?$CList@NN@@XZ ; CIndicatorInfoImplementation::GetBaseLineList
?GetBaseLineList@CIndicatorInfo@@QAEPAV?$CList@NN@@XZ ENDP ; CIndicatorInfo::GetBaseLineList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetBaseLineList@CIndicatorInfo@@QBEPAV?$CList@NN@@XZ
_TEXT	SEGMENT
?GetBaseLineList@CIndicatorInfo@@QBEPAV?$CList@NN@@XZ PROC ; CIndicatorInfo::GetBaseLineList, COMDAT
; _this$ = ecx

; 135  : 	return m_pIndiInfoImpl->GetBaseLineList();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?GetBaseLineList@CIndicatorInfoImplementation@@QAEPAV?$CList@NN@@XZ ; CIndicatorInfoImplementation::GetBaseLineList
?GetBaseLineList@CIndicatorInfo@@QBEPAV?$CList@NN@@XZ ENDP ; CIndicatorInfo::GetBaseLineList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetDrawConditionList@CIndicatorInfo@@QAEPAV?$CList@NN@@XZ
_TEXT	SEGMENT
?GetDrawConditionList@CIndicatorInfo@@QAEPAV?$CList@NN@@XZ PROC ; CIndicatorInfo::GetDrawConditionList, COMDAT
; _this$ = ecx

; 130  : 	return m_pIndiInfoImpl->GetDrawConditionList();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?GetDrawConditionList@CIndicatorInfoImplementation@@QAEPAV?$CList@NN@@XZ ; CIndicatorInfoImplementation::GetDrawConditionList
?GetDrawConditionList@CIndicatorInfo@@QAEPAV?$CList@NN@@XZ ENDP ; CIndicatorInfo::GetDrawConditionList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetDrawConditionList@CIndicatorInfo@@QBEPAV?$CList@NN@@XZ
_TEXT	SEGMENT
?GetDrawConditionList@CIndicatorInfo@@QBEPAV?$CList@NN@@XZ PROC ; CIndicatorInfo::GetDrawConditionList, COMDAT
; _this$ = ecx

; 125  : 	return m_pIndiInfoImpl->GetDrawConditionList();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?GetDrawConditionList@CIndicatorInfoImplementation@@QAEPAV?$CList@NN@@XZ ; CIndicatorInfoImplementation::GetDrawConditionList
?GetDrawConditionList@CIndicatorInfo@@QBEPAV?$CList@NN@@XZ ENDP ; CIndicatorInfo::GetDrawConditionList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetCommonCalConditionList@CIndicatorInfo@@QAEPAV?$CList@NN@@XZ
_TEXT	SEGMENT
?GetCommonCalConditionList@CIndicatorInfo@@QAEPAV?$CList@NN@@XZ PROC ; CIndicatorInfo::GetCommonCalConditionList, COMDAT
; _this$ = ecx

; 120  : 	return m_pIndiInfoImpl->GetCommonCalConditionList();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?GetCommonCalConditionList@CIndicatorInfoImplementation@@QAEPAV?$CList@NN@@XZ ; CIndicatorInfoImplementation::GetCommonCalConditionList
?GetCommonCalConditionList@CIndicatorInfo@@QAEPAV?$CList@NN@@XZ ENDP ; CIndicatorInfo::GetCommonCalConditionList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetCommonCalConditionList@CIndicatorInfo@@QBEPAV?$CList@NN@@XZ
_TEXT	SEGMENT
?GetCommonCalConditionList@CIndicatorInfo@@QBEPAV?$CList@NN@@XZ PROC ; CIndicatorInfo::GetCommonCalConditionList, COMDAT
; _this$ = ecx

; 115  : 	return m_pIndiInfoImpl->GetCommonCalConditionList();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?GetCommonCalConditionList@CIndicatorInfoImplementation@@QAEPAV?$CList@NN@@XZ ; CIndicatorInfoImplementation::GetCommonCalConditionList
?GetCommonCalConditionList@CIndicatorInfo@@QBEPAV?$CList@NN@@XZ ENDP ; CIndicatorInfo::GetCommonCalConditionList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetCalConditionCount@CIndicatorInfo@@QBEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_strSubGraphName$ = 8					; size = 4
?GetCalConditionCount@CIndicatorInfo@@QBEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC ; CIndicatorInfo::GetCalConditionCount, COMDAT
; _this$ = ecx

; 109  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 	return m_pIndiInfoImpl->GetCalConditionCount(strSubGraphName);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 111  : }

  00006	5d		 pop	 ebp

; 110  : 	return m_pIndiInfoImpl->GetCalConditionCount(strSubGraphName);

  00007	e9 00 00 00 00	 jmp	 ?GetCalConditionCount@CIndicatorInfoImplementation@@QBEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CIndicatorInfoImplementation::GetCalConditionCount
?GetCalConditionCount@CIndicatorInfo@@QBEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CIndicatorInfo::GetCalConditionCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetCalConditionCount@CIndicatorInfo@@QBEHH@Z
_TEXT	SEGMENT
_nSubGraphIndex$ = 8					; size = 4
?GetCalConditionCount@CIndicatorInfo@@QBEHH@Z PROC	; CIndicatorInfo::GetCalConditionCount, COMDAT
; _this$ = ecx

; 104  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 105  : 	return m_pIndiInfoImpl->GetCalConditionCount(nSubGraphIndex);

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 106  : }

  00006	5d		 pop	 ebp

; 105  : 	return m_pIndiInfoImpl->GetCalConditionCount(nSubGraphIndex);

  00007	e9 00 00 00 00	 jmp	 ?GetCalConditionCount@CIndicatorInfoImplementation@@QBEHH@Z ; CIndicatorInfoImplementation::GetCalConditionCount
?GetCalConditionCount@CIndicatorInfo@@QBEHH@Z ENDP	; CIndicatorInfo::GetCalConditionCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetBaseLineCount@CIndicatorInfo@@QBEHXZ
_TEXT	SEGMENT
?GetBaseLineCount@CIndicatorInfo@@QBEHXZ PROC		; CIndicatorInfo::GetBaseLineCount, COMDAT
; _this$ = ecx

; 100  : 	return m_pIndiInfoImpl->GetBaseLineCount();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?GetBaseLineCount@CIndicatorInfoImplementation@@QBEHXZ ; CIndicatorInfoImplementation::GetBaseLineCount
?GetBaseLineCount@CIndicatorInfo@@QBEHXZ ENDP		; CIndicatorInfo::GetBaseLineCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetDrawConditionCount@CIndicatorInfo@@QBEHXZ
_TEXT	SEGMENT
?GetDrawConditionCount@CIndicatorInfo@@QBEHXZ PROC	; CIndicatorInfo::GetDrawConditionCount, COMDAT
; _this$ = ecx

; 95   : 	return m_pIndiInfoImpl->GetDrawConditionCount();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?GetDrawConditionCount@CIndicatorInfoImplementation@@QBEHXZ ; CIndicatorInfoImplementation::GetDrawConditionCount
?GetDrawConditionCount@CIndicatorInfo@@QBEHXZ ENDP	; CIndicatorInfo::GetDrawConditionCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetCommonCalConditionCount@CIndicatorInfo@@QBEHXZ
_TEXT	SEGMENT
?GetCommonCalConditionCount@CIndicatorInfo@@QBEHXZ PROC	; CIndicatorInfo::GetCommonCalConditionCount, COMDAT
; _this$ = ecx

; 90   : 	return m_pIndiInfoImpl->GetCommonCalConditionCount();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?GetCommonCalConditionCount@CIndicatorInfoImplementation@@QBEHXZ ; CIndicatorInfoImplementation::GetCommonCalConditionCount
?GetCommonCalConditionCount@CIndicatorInfo@@QBEHXZ ENDP	; CIndicatorInfo::GetCommonCalConditionCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetGraphPartData@CIndicatorInfo@@QAEPAVCGraphPartData@@XZ
_TEXT	SEGMENT
?GetGraphPartData@CIndicatorInfo@@QAEPAVCGraphPartData@@XZ PROC ; CIndicatorInfo::GetGraphPartData, COMDAT
; _this$ = ecx

; 85   : 	return m_pIndiInfoImpl->GetGraphPartData();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?GetGraphPartData@CIndicatorInfoImplementation@@QAEPAVCGraphPartData@@XZ ; CIndicatorInfoImplementation::GetGraphPartData
?GetGraphPartData@CIndicatorInfo@@QAEPAVCGraphPartData@@XZ ENDP ; CIndicatorInfo::GetGraphPartData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetGraphPartData@CIndicatorInfo@@QBEPAVCGraphPartData@@XZ
_TEXT	SEGMENT
?GetGraphPartData@CIndicatorInfo@@QBEPAVCGraphPartData@@XZ PROC ; CIndicatorInfo::GetGraphPartData, COMDAT
; _this$ = ecx

; 80   : 	return m_pIndiInfoImpl->GetGraphPartData();

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	e9 00 00 00 00	 jmp	 ?GetGraphPartData@CIndicatorInfoImplementation@@QAEPAVCGraphPartData@@XZ ; CIndicatorInfoImplementation::GetGraphPartData
?GetGraphPartData@CIndicatorInfo@@QBEPAVCGraphPartData@@XZ ENDP ; CIndicatorInfo::GetGraphPartData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetGraphName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetGraphName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC ; CIndicatorInfo::GetGraphName, COMDAT
; _this$ = ecx

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 75   : 	return m_pIndiInfoImpl->GetGraphName();

  00003	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00009	e8 00 00 00 00	 call	 ?GetGraphName@CIndicatorInfoImplementation@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfoImplementation::GetGraphName
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 76   : }

  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?GetGraphName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CIndicatorInfo::GetGraphName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetIndicatorName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetIndicatorName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC ; CIndicatorInfo::GetIndicatorName, COMDAT
; _this$ = ecx

; 69   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 70   : 	return m_pIndiInfoImpl->GetIndicatorName();

  00003	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00009	e8 00 00 00 00	 call	 ?GetIndicatorName@CIndicatorInfoImplementation@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfoImplementation::GetIndicatorName
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 71   : }

  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?GetIndicatorName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CIndicatorInfo::GetIndicatorName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetGroupName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetGroupName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC ; CIndicatorInfo::GetGroupName, COMDAT
; _this$ = ecx

; 64   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 65   : 	return m_pIndiInfoImpl->GetGroupName();

  00003	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00009	e8 00 00 00 00	 call	 ?GetGroupName@CIndicatorInfoImplementation@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfoImplementation::GetGroupName
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 66   : }

  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?GetGroupName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CIndicatorInfo::GetGroupName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?CopyDataWithVerificationFrom@CIndicatorInfo@@QAE_NABV1@@Z
_TEXT	SEGMENT
_sourceData$ = 8					; size = 4
?CopyDataWithVerificationFrom@CIndicatorInfo@@QAE_NABV1@@Z PROC ; CIndicatorInfo::CopyDataWithVerificationFrom, COMDAT
; _this$ = ecx

; 55   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 56   : 	if(sourceData.m_pIndiInfoImpl == NULL)

  00003	8b 45 08	 mov	 eax, DWORD PTR _sourceData$[ebp]
  00006	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00009	85 c0		 test	 eax, eax
  0000b	75 06		 jne	 SHORT $LN2@CopyDataWi

; 57   : 		return false;

  0000d	32 c0		 xor	 al, al

; 60   : }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
$LN2@CopyDataWi:

; 58   : 
; 59   : 	return m_pIndiInfoImpl->CopyDataWithVerificationFrom(*sourceData.m_pIndiInfoImpl);

  00013	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00016	89 45 08	 mov	 DWORD PTR _sourceData$[ebp], eax

; 60   : }

  00019	5d		 pop	 ebp

; 58   : 
; 59   : 	return m_pIndiInfoImpl->CopyDataWithVerificationFrom(*sourceData.m_pIndiInfoImpl);

  0001a	e9 00 00 00 00	 jmp	 ?CopyDataWithVerificationFrom@CIndicatorInfoImplementation@@QAE_NABV1@@Z ; CIndicatorInfoImplementation::CopyDataWithVerificationFrom
?CopyDataWithVerificationFrom@CIndicatorInfo@@QAE_NABV1@@Z ENDP ; CIndicatorInfo::CopyDataWithVerificationFrom
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?GetIndicatorInfoType@CIndicatorInfo@@QBE?AW4EIndicatorInfoType@@XZ
_TEXT	SEGMENT
?GetIndicatorInfoType@CIndicatorInfo@@QBE?AW4EIndicatorInfoType@@XZ PROC ; CIndicatorInfo::GetIndicatorInfoType, COMDAT
; _this$ = ecx

; 48   : 	return m_pIndiInfoImpl->GetIndicatorInfoType();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 49   : }

  00006	c3		 ret	 0
?GetIndicatorInfoType@CIndicatorInfo@@QBE?AW4EIndicatorInfoType@@XZ ENDP ; CIndicatorInfo::GetIndicatorInfoType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ??0CIndicatorInfo@@IAE@PBV0@@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pDefaultIndicatorInfo$ = 8				; size = 4
??0CIndicatorInfo@@IAE@PBV0@@Z PROC			; CIndicatorInfo::CIndicatorInfo, COMDAT
; _this$ = ecx

; 34   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CIndicatorInfo@@IAE@PBV0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx

; 35   : 	assert( pDefaultIndicatorInfo);
; 36   : 	m_pIndiInfoImpl = new CIndicatorInfoImplementation( pDefaultIndicatorInfo->m_pIndiInfoImpl);

  00026	68 98 00 00 00	 push	 152			; 00000098H
  0002b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CIndicatorInfo@@6B@
  00031	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00036	83 c4 04	 add	 esp, 4
  00039	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  0003c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00043	85 c0		 test	 eax, eax
  00045	74 24		 je	 SHORT $LN3@CIndicator
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _pDefaultIndicatorInfo$[ebp]
  0004a	ff 71 04	 push	 DWORD PTR [ecx+4]
  0004d	8b c8		 mov	 ecx, eax
  0004f	e8 00 00 00 00	 call	 ??0CIndicatorInfoImplementation@@QAE@PBV0@@Z ; CIndicatorInfoImplementation::CIndicatorInfoImplementation
  00054	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 37   : }

  00057	8b c6		 mov	 eax, esi
  00059	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00063	59		 pop	 ecx
  00064	5e		 pop	 esi
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
$LN3@CIndicator:

; 35   : 	assert( pDefaultIndicatorInfo);
; 36   : 	m_pIndiInfoImpl = new CIndicatorInfoImplementation( pDefaultIndicatorInfo->m_pIndiInfoImpl);

  0006b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 37   : }

  00072	8b c6		 mov	 eax, esi
  00074	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007e	59		 pop	 ecx
  0007f	5e		 pop	 esi
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CIndicatorInfo@@IAE@PBV0@@Z$0:
  00000	68 98 00 00 00	 push	 152			; 00000098H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$??0CIndicatorInfo@@IAE@PBV0@@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CIndicatorInfo@@IAE@PBV0@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CIndicatorInfo@@IAE@PBV0@@Z ENDP			; CIndicatorInfo::CIndicatorInfo
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ??1CIndicatorInfo@@UAE@XZ
_TEXT	SEGMENT
??1CIndicatorInfo@@UAE@XZ PROC				; CIndicatorInfo::~CIndicatorInfo, COMDAT
; _this$ = ecx

; 40   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CIndicatorInfo@@6B@

; 41   : 	TRACE( "IndicatorInfo Deleted : [%s](0x%08X)\r\n", GetIndicatorName(), ( long)this);
; 42   : 	delete m_pIndiInfoImpl;

  00006	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 06		 je	 SHORT $LN3@CIndicator
  0000d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000f	6a 01		 push	 1
  00011	ff 10		 call	 DWORD PTR [eax]
$LN3@CIndicator:

; 43   : }

  00013	c3		 ret	 0
??1CIndicatorInfo@@UAE@XZ ENDP				; CIndicatorInfo::~CIndicatorInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ??0CIndicatorInfo@@QAE@W4EIndicatorInfoType@@@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p_eIndicatorInfoType$ = 8				; size = 4
??0CIndicatorInfo@@QAE@W4EIndicatorInfoType@@@Z PROC	; CIndicatorInfo::CIndicatorInfo, COMDAT
; _this$ = ecx

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CIndicatorInfo@@QAE@W4EIndicatorInfoType@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx

; 30   : 	m_pIndiInfoImpl = new CIndicatorInfoImplementation( p_eIndicatorInfoType);

  00026	68 98 00 00 00	 push	 152			; 00000098H
  0002b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CIndicatorInfo@@6B@
  00031	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00036	83 c4 04	 add	 esp, 4
  00039	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  0003c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00043	85 c0		 test	 eax, eax
  00045	74 21		 je	 SHORT $LN3@CIndicator
  00047	ff 75 08	 push	 DWORD PTR _p_eIndicatorInfoType$[ebp]
  0004a	8b c8		 mov	 ecx, eax
  0004c	e8 00 00 00 00	 call	 ??0CIndicatorInfoImplementation@@QAE@W4EIndicatorInfoType@@@Z ; CIndicatorInfoImplementation::CIndicatorInfoImplementation
  00051	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 31   : }

  00054	8b c6		 mov	 eax, esi
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	5e		 pop	 esi
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 04 00	 ret	 4
$LN3@CIndicator:

; 30   : 	m_pIndiInfoImpl = new CIndicatorInfoImplementation( p_eIndicatorInfoType);

  00068	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 31   : }

  0006f	8b c6		 mov	 eax, esi
  00071	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007b	59		 pop	 ecx
  0007c	5e		 pop	 esi
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CIndicatorInfo@@QAE@W4EIndicatorInfoType@@@Z$0:
  00000	68 98 00 00 00	 push	 152			; 00000098H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$??0CIndicatorInfo@@QAE@W4EIndicatorInfoType@@@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CIndicatorInfo@@QAE@W4EIndicatorInfoType@@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CIndicatorInfo@@QAE@W4EIndicatorInfoType@@@Z ENDP	; CIndicatorInfo::CIndicatorInfo
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?Make@CIndicatorInfo@@SAPAV1@PBV1@@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pDefaultIndicatorInfo$ = 8				; size = 4
?Make@CIndicatorInfo@@SAPAV1@PBV1@@Z PROC		; CIndicatorInfo::Make, COMDAT

; 23   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Make@CIndicatorInfo@@SAPAV1@PBV1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 24   : 	if( !pDefaultIndicatorInfo) return NULL;

  00023	83 7d 08 00	 cmp	 DWORD PTR _pDefaultIndicatorInfo$[ebp], 0
  00027	74 31		 je	 SHORT $LN4@Make

; 25   : 	return new CIndicatorInfo( pDefaultIndicatorInfo);

  00029	6a 08		 push	 8
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00030	83 c4 04	 add	 esp, 4
  00033	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003d	85 c0		 test	 eax, eax
  0003f	74 19		 je	 SHORT $LN4@Make
  00041	ff 75 08	 push	 DWORD PTR _pDefaultIndicatorInfo$[ebp]
  00044	8b c8		 mov	 ecx, eax
  00046	e8 00 00 00 00	 call	 ??0CIndicatorInfo@@IAE@PBV0@@Z ; CIndicatorInfo::CIndicatorInfo

; 26   : }

  0004b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00055	59		 pop	 ecx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
$LN4@Make:
  0005a	33 c0		 xor	 eax, eax
  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Make@CIndicatorInfo@@SAPAV1@PBV1@@Z$0:
  00000	6a 08		 push	 8
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?Make@CIndicatorInfo@@SAPAV1@PBV1@@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Make@CIndicatorInfo@@SAPAV1@PBV1@@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Make@CIndicatorInfo@@SAPAV1@PBV1@@Z ENDP		; CIndicatorInfo::Make
; Function compile flags: /Ogtp
;	COMDAT ??_ECIndicatorList@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECIndicatorList@@UAEPAXI@Z PROC			; CIndicatorList::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECIndicatorList@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002a	8b d8		 mov	 ebx, eax
  0002c	83 e3 01	 and	 ebx, 1
  0002f	a8 02		 test	 al, 2
  00031	74 40		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CIndicatorList@@UAE@XZ ; CIndicatorList::~CIndicatorList
  00038	ff 76 fc	 push	 DWORD PTR [esi-4]
  0003b	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003e	6a 08		 push	 8
  00040	56		 push	 esi
  00041	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00046	85 db		 test	 ebx, ebx
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0004c	8d 0c cd 04 00
	00 00		 lea	 ecx, DWORD PTR [ecx*8+4]
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	e8 00 00 00 00	 call	 ??1CIndicatorList@@UAE@XZ ; CIndicatorList::~CIndicatorList
  00078	85 db		 test	 ebx, ebx
  0007a	74 0b		 je	 SHORT $LN4@vector
  0007c	6a 08		 push	 8
  0007e	56		 push	 esi
  0007f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00084	83 c4 08	 add	 esp, 8
$LN4@vector:
  00087	8b c6		 mov	 eax, esi
  00089	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00093	59		 pop	 ecx
  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 04 00	 ret	 4
  0009d	cc		 int	 3
  0009e	cc		 int	 3
  0009f	cc		 int	 3
  000a0	cc		 int	 3
  000a1	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECIndicatorList@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECIndicatorList@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECIndicatorList@@UAEPAXI@Z ENDP			; CIndicatorList::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??_GCIndicatorList@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCIndicatorList@@UAEPAXI@Z PROC			; CIndicatorList::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CIndicatorList@@UAE@XZ ; CIndicatorList::~CIndicatorList
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 08		 push	 8
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCIndicatorList@@UAEPAXI@Z ENDP			; CIndicatorList::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4CIndicatorList@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CIndicatorList@@QAEAAV0@ABV0@@Z PROC			; CIndicatorList::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00009	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0000c	8b c1		 mov	 eax, ecx
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
??4CIndicatorList@@QAEAAV0@ABV0@@Z ENDP			; CIndicatorList::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0CIndicatorList@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0CIndicatorList@@QAE@ABV0@@Z PROC			; CIndicatorList::CIndicatorList, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CIndicatorList@@6B@
  0000c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000f	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00012	8b c1		 mov	 eax, ecx
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0CIndicatorList@@QAE@ABV0@@Z ENDP			; CIndicatorList::CIndicatorList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorInfo.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
