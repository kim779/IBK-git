; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\IndicatorCondition\IndicatorCondition.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	__afxForceEXTDLL
PUBLIC	_ExtRawDllMain@12
PUBLIC	__pRawDllMain
_BSS	SEGMENT
__afxForceEXTDLL DD 01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
__pRawDllMain DD FLAT:_ExtRawDllMain@12
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	_DllMain@12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__imp__srand:PROC
EXTRN	__imp___time64:PROC
EXTRN	?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ:PROC ; AfxGetModuleState
EXTRN	??0CDynLinkLibrary@@QAE@AAUAFX_EXTENSION_MODULE@@H@Z:PROC ; CDynLinkLibrary::CDynLinkLibrary
EXTRN	?AfxInitExtensionModule@@YGHAAUAFX_EXTENSION_MODULE@@PAUHINSTANCE__@@@Z:PROC ; AfxInitExtensionModule
EXTRN	?AfxTermExtensionModule@@YGXAAUAFX_EXTENSION_MODULE@@H@Z:PROC ; AfxTermExtensionModule
_BSS	SEGMENT
?IndicatorConditionDLL@@3UAFX_EXTENSION_MODULE@@A DB 014H DUP (?) ; IndicatorConditionDLL
_BSS	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorCondition.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorCondition.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\time.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorCondition.cpp
;	COMDAT _DllMain@12
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
_dwReason$ = 12						; size = 4
_lpReserved$ = 16					; size = 4
_DllMain@12 PROC					; COMDAT

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 19   : 	// Remove this if you use lpReserved
; 20   : 	UNREFERENCED_PARAMETER(lpReserved);
; 21   : 
; 22   : 	if (dwReason == DLL_PROCESS_ATTACH)

  00003	8b 45 0c	 mov	 eax, DWORD PTR _dwReason$[ebp]
  00006	83 f8 01	 cmp	 eax, 1
  00009	75 4c		 jne	 SHORT $LN2@DllMain

; 23   : 	{
; 24   : 		TRACE0("INDICATORCONDITION.DLL Initializing!\n");
; 25   : 		
; 26   : 		// Extension DLL one-time initialization
; 27   : 		if (!AfxInitExtensionModule(IndicatorConditionDLL, hInstance))

  0000b	ff 75 08	 push	 DWORD PTR _hInstance$[ebp]
  0000e	68 00 00 00 00	 push	 OFFSET ?IndicatorConditionDLL@@3UAFX_EXTENSION_MODULE@@A
  00013	e8 00 00 00 00	 call	 ?AfxInitExtensionModule@@YGHAAUAFX_EXTENSION_MODULE@@PAUHINSTANCE__@@@Z ; AfxInitExtensionModule
  00018	85 c0		 test	 eax, eax
  0001a	75 04		 jne	 SHORT $LN4@DllMain

; 54   : }

  0001c	5d		 pop	 ebp
  0001d	c2 0c 00	 ret	 12			; 0000000cH
$LN4@DllMain:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 116  : 	{ return ::operator new(nSize); }

  00020	6a 40		 push	 64			; 00000040H
  00022	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00027	83 c4 04	 add	 esp, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorCondition.cpp

; 42   : 		new CDynLinkLibrary(IndicatorConditionDLL);

  0002a	85 c0		 test	 eax, eax
  0002c	74 0e		 je	 SHORT $LN7@DllMain
  0002e	6a 00		 push	 0
  00030	68 00 00 00 00	 push	 OFFSET ?IndicatorConditionDLL@@3UAFX_EXTENSION_MODULE@@A
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ??0CDynLinkLibrary@@QAE@AAUAFX_EXTENSION_MODULE@@H@Z ; CDynLinkLibrary::CDynLinkLibrary
$LN7@DllMain:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\time.h

; 522  :             return _time64(_Time);

  0003c	6a 00		 push	 0
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___time64
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorCondition.cpp

; 45   : 	   srand( ( unsigned)time( NULL));

  00044	50		 push	 eax
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__srand
  0004b	83 c4 08	 add	 esp, 8

; 52   : 	}
; 53   : 	return 1;   // ok

  0004e	b8 01 00 00 00	 mov	 eax, 1

; 54   : }

  00053	5d		 pop	 ebp
  00054	c2 0c 00	 ret	 12			; 0000000cH
$LN2@DllMain:

; 46   : 	}
; 47   : 	else if (dwReason == DLL_PROCESS_DETACH)

  00057	85 c0		 test	 eax, eax
  00059	75 0b		 jne	 SHORT $LN5@DllMain

; 48   : 	{
; 49   : 		TRACE0("INDICATORCONDITION.DLL Terminating!\n");
; 50   : 		// Terminate the library before destructors are called
; 51   : 		AfxTermExtensionModule(IndicatorConditionDLL);

  0005b	50		 push	 eax
  0005c	68 00 00 00 00	 push	 OFFSET ?IndicatorConditionDLL@@3UAFX_EXTENSION_MODULE@@A
  00061	e8 00 00 00 00	 call	 ?AfxTermExtensionModule@@YGXAAUAFX_EXTENSION_MODULE@@H@Z ; AfxTermExtensionModule
$LN5@DllMain:

; 52   : 	}
; 53   : 	return 1;   // ok

  00066	b8 01 00 00 00	 mov	 eax, 1

; 54   : }

  0006b	5d		 pop	 ebp
  0006c	c2 0c 00	 ret	 12			; 0000000cH
_DllMain@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxdllx.h
;	COMDAT _ExtRawDllMain@12
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_dwReason$ = 12						; size = 4
___formal$ = 16						; size = 4
_ExtRawDllMain@12 PROC					; COMDAT

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 51   : 	if (dwReason == DLL_PROCESS_ATTACH)

  00003	83 7d 0c 01	 cmp	 DWORD PTR _dwReason$[ebp], 1
  00007	75 1f		 jne	 SHORT $LN4@ExtRawDllM

; 52   : 	{
; 53   : 		// save critical data pointers before running the constructors
; 54   : 		AFX_MODULE_STATE* pModuleState = AfxGetModuleState();

  00009	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState

; 55   : 		pModuleState->m_pClassInit = pModuleState->m_classList;

  0000e	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00011	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 56   : 		pModuleState->m_pFactoryInit = pModuleState->m_factoryList;

  00014	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00017	89 48 28	 mov	 DWORD PTR [eax+40], ecx

; 57   : 		pModuleState->m_classList.m_pHead = NULL;

  0001a	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0

; 58   : 		pModuleState->m_factoryList.m_pHead = NULL;

  00021	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [eax+44], 0
$LN4@ExtRawDllM:

; 59   : 	}
; 60   : 	return TRUE;    // ok
; 61   : }

  00028	b8 01 00 00 00	 mov	 eax, 1
  0002d	5d		 pop	 ebp
  0002e	c2 0c 00	 ret	 12			; 0000000cH
_ExtRawDllMain@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorCondition.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\IndicatorCondition\IndicatorCondition.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
