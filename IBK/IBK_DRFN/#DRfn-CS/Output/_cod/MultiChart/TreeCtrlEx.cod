; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\MultiChart\TreeCtrlEx.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1CObject@@UAE@XZ				; CObject::~CObject
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	??1CGdiObject@@UAE@XZ				; CGdiObject::~CGdiObject
PUBLIC	??_GCGdiObject@@UAEPAXI@Z			; CGdiObject::`scalar deleting destructor'
PUBLIC	??1CFont@@UAE@XZ				; CFont::~CFont
PUBLIC	??_GCFont@@UAEPAXI@Z				; CFont::`scalar deleting destructor'
PUBLIC	??1CBitmap@@UAE@XZ				; CBitmap::~CBitmap
PUBLIC	??_GCBitmap@@UAEPAXI@Z				; CBitmap::`scalar deleting destructor'
PUBLIC	??1CRgn@@UAE@XZ					; CRgn::~CRgn
PUBLIC	??_GCRgn@@UAEPAXI@Z				; CRgn::`scalar deleting destructor'
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
PUBLIC	??_GCTreeCtrl@@UAEPAXI@Z			; CTreeCtrl::`scalar deleting destructor'
PUBLIC	?_GetBaseClass@CTreeCtrlEx@@KGPAUCRuntimeClass@@XZ ; CTreeCtrlEx::_GetBaseClass
PUBLIC	?GetThisClass@CTreeCtrlEx@@SGPAUCRuntimeClass@@XZ ; CTreeCtrlEx::GetThisClass
PUBLIC	?GetRuntimeClass@CTreeCtrlEx@@UBEPAUCRuntimeClass@@XZ ; CTreeCtrlEx::GetRuntimeClass
PUBLIC	??0CTreeCtrlEx@@QAE@XZ				; CTreeCtrlEx::CTreeCtrlEx
PUBLIC	??1CTreeCtrlEx@@UAE@XZ				; CTreeCtrlEx::~CTreeCtrlEx
PUBLIC	?SetItemFont@CTreeCtrlEx@@QAEXPAU_TREEITEM@@AAUtagLOGFONTA@@@Z ; CTreeCtrlEx::SetItemFont
PUBLIC	?SetItemBold@CTreeCtrlEx@@QAEXPAU_TREEITEM@@H@Z	; CTreeCtrlEx::SetItemBold
PUBLIC	?SetItemColor@CTreeCtrlEx@@QAEXPAU_TREEITEM@@K@Z ; CTreeCtrlEx::SetItemColor
PUBLIC	?GetItemFont@CTreeCtrlEx@@QAEHPAU_TREEITEM@@PAUtagLOGFONTA@@@Z ; CTreeCtrlEx::GetItemFont
PUBLIC	?GetItemBold@CTreeCtrlEx@@QAEHPAU_TREEITEM@@@Z	; CTreeCtrlEx::GetItemBold
PUBLIC	?GetItemColor@CTreeCtrlEx@@QAEKPAU_TREEITEM@@@Z	; CTreeCtrlEx::GetItemColor
PUBLIC	??0?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QAE@H@Z ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>
PUBLIC	?Lookup@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QBEHPAXAAUColor_Font@CTreeCtrlEx@@@Z ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::Lookup
PUBLIC	??A?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QAEAAUColor_Font@CTreeCtrlEx@@PAX@Z ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::operator[]
PUBLIC	?RemoveAll@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QAEXXZ ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::RemoveAll
PUBLIC	?InitHashTable@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QAEXIH@Z ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::InitHashTable
PUBLIC	?NewAssoc@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@IAEPAVCAssoc@1@PAX@Z ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::NewAssoc
PUBLIC	?GetAssocAt@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@IBEPAVCAssoc@1@PAXAAI1@Z ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::GetAssocAt
PUBLIC	??1?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAE@XZ ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::~CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>
PUBLIC	?Serialize@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAEXAAVCArchive@@@Z ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::Serialize
PUBLIC	??_G?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAEPAXI@Z ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::`scalar deleting destructor'
PUBLIC	?OnPaint@CTreeCtrlEx@@IAEXXZ			; CTreeCtrlEx::OnPaint
PUBLIC	?GetThisMessageMap@CTreeCtrlEx@@KGPBUAFX_MSGMAP@@XZ ; CTreeCtrlEx::GetThisMessageMap
PUBLIC	?GetMessageMap@CTreeCtrlEx@@MBEPBUAFX_MSGMAP@@XZ ; CTreeCtrlEx::GetMessageMap
PUBLIC	??_GCTreeCtrlEx@@UAEPAXI@Z			; CTreeCtrlEx::`scalar deleting destructor'
PUBLIC	??$SerializeElements@PAX@@YGXAAVCArchive@@PAPAXH@Z ; SerializeElements<void *>
PUBLIC	??$SerializeElements@UColor_Font@CTreeCtrlEx@@@@YGXAAVCArchive@@PAUColor_Font@CTreeCtrlEx@@H@Z ; SerializeElements<CTreeCtrlEx::Color_Font>
PUBLIC	??$CompareElements@PAXPAX@@YGHPBQAX0@Z		; CompareElements<void *,void *>
PUBLIC	??_R0PAVCException@@@8				; CException * `RTTI Type Descriptor'
PUBLIC	??_7CGdiObject@@6B@				; CGdiObject::`vftable'
PUBLIC	??_7CFont@@6B@					; CFont::`vftable'
PUBLIC	??_7CBitmap@@6B@				; CBitmap::`vftable'
PUBLIC	??_7CRgn@@6B@					; CRgn::`vftable'
PUBLIC	??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@ ; `string'
PUBLIC	??_C@_0BB@HBOOMJBF@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ?6?$CFTs@ ; `string'
PUBLIC	??_C@_0N@OMEMOKLE@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ@ ; `string'
PUBLIC	??_7CTreeCtrl@@6B@				; CTreeCtrl::`vftable'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CGdiObject@@6B@				; CGdiObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGdiObject@@@8				; CGdiObject `RTTI Type Descriptor'
PUBLIC	??_R3CGdiObject@@8				; CGdiObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGdiObject@@8				; CGdiObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGdiObject@@8			; CGdiObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CFont@@6B@					; CFont::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCFont@@@8				; CFont `RTTI Type Descriptor'
PUBLIC	??_R3CFont@@8					; CFont::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CFont@@8					; CFont::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CFont@@8				; CFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CBitmap@@6B@				; CBitmap::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBitmap@@@8				; CBitmap `RTTI Type Descriptor'
PUBLIC	??_R3CBitmap@@8					; CBitmap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBitmap@@8					; CBitmap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBitmap@@8			; CBitmap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CRgn@@6B@					; CRgn::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRgn@@@8				; CRgn `RTTI Type Descriptor'
PUBLIC	??_R3CRgn@@8					; CRgn::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRgn@@8					; CRgn::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRgn@@8				; CRgn::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R3CWnd@@8					; CWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWnd@@8					; CWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R3CCmdTarget@@8				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCmdTarget@@8				; CCmdTarget::`RTTI Base Class Array'
PUBLIC	??_R4CTreeCtrl@@6B@				; CTreeCtrl::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTreeCtrl@@@8				; CTreeCtrl `RTTI Type Descriptor'
PUBLIC	??_R3CTreeCtrl@@8				; CTreeCtrl::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTreeCtrl@@8				; CTreeCtrl::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTreeCtrl@@8			; CTreeCtrl::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?classCTreeCtrlEx@CTreeCtrlEx@@2UCRuntimeClass@@B ; CTreeCtrlEx::classCTreeCtrlEx
PUBLIC	??_7?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@6B@ ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::`vftable'
PUBLIC	??_7CTreeCtrlEx@@6B@				; CTreeCtrlEx::`vftable'
PUBLIC	??_C@_0M@PBPGKKFF@CTreeCtrlEx@			; `string'
PUBLIC	??_R4CTreeCtrlEx@@6B@				; CTreeCtrlEx::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTreeCtrlEx@@@8				; CTreeCtrlEx `RTTI Type Descriptor'
PUBLIC	??_R3CTreeCtrlEx@@8				; CTreeCtrlEx::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTreeCtrlEx@@8				; CTreeCtrlEx::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTreeCtrlEx@@8			; CTreeCtrlEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@6B@ ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@@8 ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@8 ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@8 ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@8 ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	___std_terminate:PROC
EXTRN	__imp__BitBlt@36:PROC
EXTRN	__imp__CreateCompatibleBitmap@12:PROC
EXTRN	__imp__CreateCompatibleDC@4:PROC
EXTRN	__imp__CreateFontIndirectA@4:PROC
EXTRN	__imp__CreateRectRgnIndirect@4:PROC
EXTRN	__imp__GetObjectA@12:PROC
EXTRN	__imp__SendMessageA@16:PROC
EXTRN	__imp__EnableWindow@8:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__GetSysColor@4:PROC
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?AfxThrowArchiveException@@YGXHPBD@Z:PROC	; AfxThrowArchiveException
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CObject::GetRuntimeClass
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ:PROC
EXTRN	?Read@CArchive@@QAEIPAXI@Z:PROC			; CArchive::Read
EXTRN	?Write@CArchive@@QAEXPBXI@Z:PROC		; CArchive::Write
EXTRN	?ReadCount@CArchive@@QAEKXZ:PROC		; CArchive::ReadCount
EXTRN	?WriteCount@CArchive@@QAEXK@Z:PROC		; CArchive::WriteCount
EXTRN	?Create@CPlex@@SGPAU1@AAPAU1@II@Z:PROC		; CPlex::Create
EXTRN	?FreeDataChain@CPlex@@QAEXXZ:PROC		; CPlex::FreeDataChain
EXTRN	?GetRuntimeClass@CGdiObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CGdiObject::GetRuntimeClass
EXTRN	?FromHandle@CGdiObject@@SGPAV1@PAX@Z:PROC	; CGdiObject::FromHandle
EXTRN	?Attach@CGdiObject@@QAEHPAX@Z:PROC		; CGdiObject::Attach
EXTRN	?DeleteObject@CGdiObject@@QAEHXZ:PROC		; CGdiObject::DeleteObject
EXTRN	??_ECGdiObject@@UAEPAXI@Z:PROC			; CGdiObject::`vector deleting destructor'
EXTRN	?GetRuntimeClass@CFont@@UBEPAUCRuntimeClass@@XZ:PROC ; CFont::GetRuntimeClass
EXTRN	??_ECFont@@UAEPAXI@Z:PROC			; CFont::`vector deleting destructor'
EXTRN	?GetRuntimeClass@CBitmap@@UBEPAUCRuntimeClass@@XZ:PROC ; CBitmap::GetRuntimeClass
EXTRN	??_ECBitmap@@UAEPAXI@Z:PROC			; CBitmap::`vector deleting destructor'
EXTRN	?GetRuntimeClass@CRgn@@UBEPAUCRuntimeClass@@XZ:PROC ; CRgn::GetRuntimeClass
EXTRN	??_ECRgn@@UAEPAXI@Z:PROC			; CRgn::`vector deleting destructor'
EXTRN	?Attach@CDC@@QAEHPAUHDC__@@@Z:PROC		; CDC::Attach
EXTRN	??0CDC@@QAE@XZ:PROC				; CDC::CDC
EXTRN	?DeleteDC@CDC@@QAEHXZ:PROC			; CDC::DeleteDC
EXTRN	?SelectObject@CDC@@UAEPAVCFont@@PAV2@@Z:PROC	; CDC::SelectObject
EXTRN	?SetBkColor@CDC@@UAEKK@Z:PROC			; CDC::SetBkColor
EXTRN	?SetTextColor@CDC@@UAEKK@Z:PROC			; CDC::SetTextColor
EXTRN	?GetClipBox@CDC@@UBEHPAUtagRECT@@@Z:PROC	; CDC::GetClipBox
EXTRN	?SelectClipRgn@CDC@@QAEHPAVCRgn@@@Z:PROC	; CDC::SelectClipRgn
EXTRN	??1CDC@@UAE@XZ:PROC				; CDC::~CDC
EXTRN	?SelectGdiObject@CDC@@KGPAVCGdiObject@@PAUHDC__@@PAX@Z:PROC ; CDC::SelectGdiObject
EXTRN	??0CPaintDC@@QAE@PAVCWnd@@@Z:PROC		; CPaintDC::CPaintDC
EXTRN	??1CPaintDC@@UAE@XZ:PROC			; CPaintDC::~CPaintDC
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:PROC ; CCmdTarget::OnCmdMsg
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:PROC	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:PROC ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:PROC	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:PROC ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:PROC ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:PROC ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:PROC ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:PROC ; CCmdTarget::GetConnectionMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:PROC ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:PROC	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:PROC ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:PROC ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:PROC ; CCmdTarget::GetConnectionHook
EXTRN	?GetStyle@CWnd@@QBEKXZ:PROC			; CWnd::GetStyle
EXTRN	??0CWnd@@QAE@XZ:PROC				; CWnd::CWnd
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:PROC		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:PROC ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:PROC ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:PROC ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:PROC		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:PROC ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:PROC	; CWnd::CalcWindowRect
EXTRN	?GetMenu@CWnd@@UBEPAVCMenu@@XZ:PROC		; CWnd::GetMenu
EXTRN	?SetMenu@CWnd@@UAEHPAVCMenu@@@Z:PROC		; CWnd::SetMenu
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:PROC ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:PROC ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:PROC		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:PROC		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:PROC		; CWnd::EndModalLoop
EXTRN	?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z:PROC ; CWnd::OnDrawIconicThumbnailOrLivePreview
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:PROC ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:PROC			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:PROC ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:PROC		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:PROC ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDescription
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:PROC ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDefaultAction
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:PROC	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:PROC ; CWnd::accLocation
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:PROC	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:PROC ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:PROC ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:PROC	; CWnd::CreateAccessibleProxy
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:PROC			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:PROC		; CWnd::OnNotify
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:PROC ; CWnd::GetSuperWndProcAddr
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:PROC ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:PROC ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:PROC		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:PROC		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:PROC		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnChildNotify
EXTRN	?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInputs
EXTRN	?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInput
EXTRN	?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z:PROC	; CWnd::GetGestureStatus
EXTRN	?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z:PROC	; CWnd::OnGestureZoom
EXTRN	?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z:PROC	; CWnd::OnGesturePan
EXTRN	?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z:PROC	; CWnd::OnGestureRotate
EXTRN	?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z:PROC ; CWnd::OnGestureTwoFingerTap
EXTRN	?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z:PROC ; CWnd::OnGesturePressAndTap
EXTRN	?ResizeDynamicLayout@CWnd@@MAEXXZ:PROC		; CWnd::ResizeDynamicLayout
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:PROC		; CWnd::CheckAutoCenter
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:PROC			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:PROC		; CWnd::OnFinalRelease
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:PROC ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:PROC ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:PROC ; CWnd::SetOccDialogInfo
EXTRN	?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ:PROC ; CWnd::GetOccDialogInfo
EXTRN	?AfxMessageBox@@YGHPBDII@Z:PROC			; AfxMessageBox
EXTRN	?GetThisClass@CTreeCtrl@@SGPAUCRuntimeClass@@XZ:PROC ; CTreeCtrl::GetThisClass
EXTRN	?GetRuntimeClass@CTreeCtrl@@UBEPAUCRuntimeClass@@XZ:PROC ; CTreeCtrl::GetRuntimeClass
EXTRN	?GetItemRect@CTreeCtrl@@QBEHPAU_TREEITEM@@PAUtagRECT@@H@Z:PROC ; CTreeCtrl::GetItemRect
EXTRN	?GetItemText@CTreeCtrl@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAU_TREEITEM@@@Z:PROC ; CTreeCtrl::GetItemText
EXTRN	?GetItemState@CTreeCtrl@@QBEIPAU_TREEITEM@@I@Z:PROC ; CTreeCtrl::GetItemState
EXTRN	?SetItem@CTreeCtrl@@QAEHPAU_TREEITEM@@IPBDHHIIJ@Z:PROC ; CTreeCtrl::SetItem
EXTRN	??1CTreeCtrl@@UAE@XZ:PROC			; CTreeCtrl::~CTreeCtrl
EXTRN	?GetThisMessageMap@CTreeCtrl@@KGPBUAFX_MSGMAP@@XZ:PROC ; CTreeCtrl::GetThisMessageMap
EXTRN	?GetMessageMap@CTreeCtrl@@MBEPBUAFX_MSGMAP@@XZ:PROC ; CTreeCtrl::GetMessageMap
EXTRN	??_ECTreeCtrl@@UAEPAXI@Z:PROC			; CTreeCtrl::`vector deleting destructor'
EXTRN	??_E?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAEPAXI@Z:PROC ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::`vector deleting destructor'
EXTRN	??_ECTreeCtrlEx@@UAEPAXI@Z:PROC			; CTreeCtrlEx::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@8 DD FLAT:??_R0?AV?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@@8 ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@8
rdata$r	SEGMENT
??_R2?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@8 DD FLAT:??_R1A@?0A@EA@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@8 ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@8
rdata$r	SEGMENT
??_R3?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@8 DD 00H ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@@8
data$rs	SEGMENT
??_R0?AV?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@@8 DD FLAT:??_7type_info@@6B@ ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@6B@
rdata$r	SEGMENT
??_R4?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@6B@ DD 00H ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@@8
	DD	FLAT:??_R3?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CTreeCtrlEx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTreeCtrlEx@@8 DD FLAT:??_R0?AVCTreeCtrlEx@@@8 ; CTreeCtrlEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTreeCtrlEx@@8
rdata$r	ENDS
;	COMDAT ??_R2CTreeCtrlEx@@8
rdata$r	SEGMENT
??_R2CTreeCtrlEx@@8 DD FLAT:??_R1A@?0A@EA@CTreeCtrlEx@@8 ; CTreeCtrlEx::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CTreeCtrl@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CTreeCtrlEx@@8
rdata$r	SEGMENT
??_R3CTreeCtrlEx@@8 DD 00H				; CTreeCtrlEx::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CTreeCtrlEx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTreeCtrlEx@@@8
data$rs	SEGMENT
??_R0?AVCTreeCtrlEx@@@8 DD FLAT:??_7type_info@@6B@	; CTreeCtrlEx `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTreeCtrlEx@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CTreeCtrlEx@@6B@
rdata$r	SEGMENT
??_R4CTreeCtrlEx@@6B@ DD 00H				; CTreeCtrlEx::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTreeCtrlEx@@@8
	DD	FLAT:??_R3CTreeCtrlEx@@8
rdata$r	ENDS
;	COMDAT ?messageMap@?1??GetThisMessageMap@CTreeCtrlEx@@KGPBUAFX_MSGMAP@@XZ@4U3@B
CONST	SEGMENT
?messageMap@?1??GetThisMessageMap@CTreeCtrlEx@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CTreeCtrl@@KGPBUAFX_MSGMAP@@XZ ; `CTreeCtrlEx::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CTreeCtrlEx@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
;	COMDAT ?_messageEntries@?1??GetThisMessageMap@CTreeCtrlEx@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@?1??GetThisMessageMap@CTreeCtrlEx@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 0fH ; `CTreeCtrlEx::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	013H
	DD	FLAT:?OnPaint@CTreeCtrlEx@@IAEXXZ
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_C@_0M@PBPGKKFF@CTreeCtrlEx@
CONST	SEGMENT
??_C@_0M@PBPGKKFF@CTreeCtrlEx@ DB 'CTreeCtrlEx', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTreeCtrlEx@@6B@
CONST	SEGMENT
??_7CTreeCtrlEx@@6B@ DD FLAT:??_R4CTreeCtrlEx@@6B@	; CTreeCtrlEx::`vftable'
	DD	FLAT:?GetRuntimeClass@CTreeCtrlEx@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECTreeCtrlEx@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CTreeCtrlEx@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
CONST	ENDS
;	COMDAT ??_7?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@6B@
CONST	SEGMENT
??_7?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@6B@ DD FLAT:??_R4?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@6B@ ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ?classCTreeCtrlEx@CTreeCtrlEx@@2UCRuntimeClass@@B
CONST	SEGMENT
?classCTreeCtrlEx@CTreeCtrlEx@@2UCRuntimeClass@@B DD FLAT:??_C@_0M@PBPGKKFF@CTreeCtrlEx@ ; CTreeCtrlEx::classCTreeCtrlEx
	DD	0a8H
	DD	0ffffH
	DD	00H
	DD	FLAT:?_GetBaseClass@CTreeCtrlEx@@KGPAUCRuntimeClass@@XZ
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CTreeCtrl@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTreeCtrl@@8 DD FLAT:??_R0?AVCTreeCtrl@@@8 ; CTreeCtrl::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTreeCtrl@@8
rdata$r	ENDS
;	COMDAT ??_R2CTreeCtrl@@8
rdata$r	SEGMENT
??_R2CTreeCtrl@@8 DD FLAT:??_R1A@?0A@EA@CTreeCtrl@@8	; CTreeCtrl::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CTreeCtrl@@8
rdata$r	SEGMENT
??_R3CTreeCtrl@@8 DD 00H				; CTreeCtrl::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CTreeCtrl@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTreeCtrl@@@8
data$rs	SEGMENT
??_R0?AVCTreeCtrl@@@8 DD FLAT:??_7type_info@@6B@	; CTreeCtrl `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTreeCtrl@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CTreeCtrl@@6B@
rdata$r	SEGMENT
??_R4CTreeCtrl@@6B@ DD 00H				; CTreeCtrl::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTreeCtrl@@@8
	DD	FLAT:??_R3CTreeCtrl@@8
rdata$r	ENDS
;	COMDAT ??_R2CCmdTarget@@8
rdata$r	SEGMENT
??_R2CCmdTarget@@8 DD FLAT:??_R1A@?0A@EA@CCmdTarget@@8	; CCmdTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CCmdTarget@@8
rdata$r	SEGMENT
??_R3CCmdTarget@@8 DD 00H				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
data$rs	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R2CWnd@@8
rdata$r	SEGMENT
??_R2CWnd@@8 DD	FLAT:??_R1A@?0A@EA@CWnd@@8		; CWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWnd@@8
rdata$r	SEGMENT
??_R3CWnd@@8 DD	00H					; CWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
data$rs	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRgn@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRgn@@8 DD FLAT:??_R0?AVCRgn@@@8		; CRgn::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRgn@@8
rdata$r	ENDS
;	COMDAT ??_R2CRgn@@8
rdata$r	SEGMENT
??_R2CRgn@@8 DD	FLAT:??_R1A@?0A@EA@CRgn@@8		; CRgn::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGdiObject@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CRgn@@8
rdata$r	SEGMENT
??_R3CRgn@@8 DD	00H					; CRgn::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CRgn@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRgn@@@8
data$rs	SEGMENT
??_R0?AVCRgn@@@8 DD FLAT:??_7type_info@@6B@		; CRgn `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRgn@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CRgn@@6B@
rdata$r	SEGMENT
??_R4CRgn@@6B@ DD 00H					; CRgn::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRgn@@@8
	DD	FLAT:??_R3CRgn@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBitmap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBitmap@@8 DD FLAT:??_R0?AVCBitmap@@@8	; CBitmap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBitmap@@8
rdata$r	ENDS
;	COMDAT ??_R2CBitmap@@8
rdata$r	SEGMENT
??_R2CBitmap@@8 DD FLAT:??_R1A@?0A@EA@CBitmap@@8	; CBitmap::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGdiObject@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CBitmap@@8
rdata$r	SEGMENT
??_R3CBitmap@@8 DD 00H					; CBitmap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CBitmap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBitmap@@@8
data$rs	SEGMENT
??_R0?AVCBitmap@@@8 DD FLAT:??_7type_info@@6B@		; CBitmap `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBitmap@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CBitmap@@6B@
rdata$r	SEGMENT
??_R4CBitmap@@6B@ DD 00H				; CBitmap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBitmap@@@8
	DD	FLAT:??_R3CBitmap@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CFont@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CFont@@8 DD FLAT:??_R0?AVCFont@@@8	; CFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CFont@@8
rdata$r	ENDS
;	COMDAT ??_R2CFont@@8
rdata$r	SEGMENT
??_R2CFont@@8 DD FLAT:??_R1A@?0A@EA@CFont@@8		; CFont::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGdiObject@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CFont@@8
rdata$r	SEGMENT
??_R3CFont@@8 DD 00H					; CFont::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CFont@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCFont@@@8
data$rs	SEGMENT
??_R0?AVCFont@@@8 DD FLAT:??_7type_info@@6B@		; CFont `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCFont@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CFont@@6B@
rdata$r	SEGMENT
??_R4CFont@@6B@ DD 00H					; CFont::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCFont@@@8
	DD	FLAT:??_R3CFont@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGdiObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGdiObject@@8 DD FLAT:??_R0?AVCGdiObject@@@8 ; CGdiObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGdiObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CGdiObject@@8
rdata$r	SEGMENT
??_R2CGdiObject@@8 DD FLAT:??_R1A@?0A@EA@CGdiObject@@8	; CGdiObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CGdiObject@@8
rdata$r	SEGMENT
??_R3CGdiObject@@8 DD 00H				; CGdiObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGdiObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGdiObject@@@8
data$rs	SEGMENT
??_R0?AVCGdiObject@@@8 DD FLAT:??_7type_info@@6B@	; CGdiObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGdiObject@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CGdiObject@@6B@
rdata$r	SEGMENT
??_R4CGdiObject@@6B@ DD 00H				; CGdiObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGdiObject@@@8
	DD	FLAT:??_R3CGdiObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$rs	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$rs	ENDS
;	COMDAT ??_7CTreeCtrl@@6B@
CONST	SEGMENT
??_7CTreeCtrl@@6B@ DD FLAT:??_R4CTreeCtrl@@6B@		; CTreeCtrl::`vftable'
	DD	FLAT:?GetRuntimeClass@CTreeCtrl@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECTreeCtrl@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CTreeCtrl@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
CONST	ENDS
;	COMDAT ??_C@_0N@OMEMOKLE@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ@
CONST	SEGMENT
??_C@_0N@OMEMOKLE@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ@ DB '%Ts (%Ts:%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HBOOMJBF@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ?6?$CFTs@
CONST	SEGMENT
??_C@_0BB@HBOOMJBF@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ?6?$CFTs@ DB '%Ts (%Ts:%d'
	DB	')', 0aH, '%Ts', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@
CONST	SEGMENT
??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@ DB 'Exception throw'
	DB	'n in destructor', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.29.30133\atlmfc\include\afxwin1.inl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CRgn@@6B@
CONST	SEGMENT
??_7CRgn@@6B@ DD FLAT:??_R4CRgn@@6B@			; CRgn::`vftable'
	DD	FLAT:?GetRuntimeClass@CRgn@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECRgn@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT
??_7CBitmap@@6B@ DD FLAT:??_R4CBitmap@@6B@		; CBitmap::`vftable'
	DD	FLAT:?GetRuntimeClass@CBitmap@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECBitmap@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CFont@@6B@
CONST	SEGMENT
??_7CFont@@6B@ DD FLAT:??_R4CFont@@6B@			; CFont::`vftable'
	DD	FLAT:?GetRuntimeClass@CFont@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECFont@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT
??_7CGdiObject@@6B@ DD FLAT:??_R4CGdiObject@@6B@	; CGdiObject::`vftable'
	DD	FLAT:?GetRuntimeClass@CGdiObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECGdiObject@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_R0PAVCException@@@8
data$r	SEGMENT
??_R0PAVCException@@@8 DD FLAT:??_7type_info@@6B@	; CException * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAVCException@@', 00H
data$r	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GCTreeCtrlEx@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_GCTreeCtrlEx@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_GCTreeCtrlEx@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?OnPaint@CTreeCtrlEx@@IAEXXZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?OnPaint@CTreeCtrlEx@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?OnPaint@CTreeCtrlEx@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnPaint@CTreeCtrlEx@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnPaint@CTreeCtrlEx@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnPaint@CTreeCtrlEx@@IAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnPaint@CTreeCtrlEx@@IAEXXZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$?OnPaint@CTreeCtrlEx@@IAEXXZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$?OnPaint@CTreeCtrlEx@@IAEXXZ$5
	DD	03H
	DD	FLAT:__unwindfunclet$?OnPaint@CTreeCtrlEx@@IAEXXZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$?OnPaint@CTreeCtrlEx@@IAEXXZ$7
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CTreeCtrlEx@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1CTreeCtrlEx@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CTreeCtrlEx@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??1CGdiObject@@UAE@XZ$3 DD 00H
	DD	FLAT:??_R0PAVCException@@@8
	DD	0fffffde4H
	DD	FLAT:__catch$??1CGdiObject@@UAE@XZ$0
__tryblocktable$??1CGdiObject@@UAE@XZ DD 00H
	DD	00H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??1CGdiObject@@UAE@XZ$3
__unwindtable$??1CGdiObject@@UAE@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$??1CGdiObject@@UAE@XZ$2
__ehfuncinfo$??1CGdiObject@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1CGdiObject@@UAE@XZ
	DD	01H
	DD	FLAT:__tryblocktable$??1CGdiObject@@UAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??$CompareElements@PAXPAX@@YGHPBQAX0@Z
_TEXT	SEGMENT
_pElement1$ = 8						; size = 4
_pElement2$ = 12					; size = 4
??$CompareElements@PAXPAX@@YGHPBQAX0@Z PROC		; CompareElements<void *,void *>, COMDAT

; 151  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 152  : 	ENSURE(pElement1 != NULL && pElement2 != NULL);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pElement1$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 14		 je	 SHORT $LN7@CompareEle
  0000a	8b 55 0c	 mov	 edx, DWORD PTR _pElement2$[ebp]
  0000d	85 d2		 test	 edx, edx
  0000f	74 0d		 je	 SHORT $LN7@CompareEle

; 153  : 	ASSERT(AfxIsValidAddress(pElement1, sizeof(TYPE), FALSE));
; 154  : 	ASSERT(AfxIsValidAddress(pElement2, sizeof(ARG_TYPE), FALSE));
; 155  : 
; 156  : 	return *pElement1 == *pElement2;

  00011	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00013	33 c0		 xor	 eax, eax
  00015	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  00017	0f 94 c0	 sete	 al

; 157  : }

  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
$LN7@CompareEle:

; 152  : 	ENSURE(pElement1 != NULL && pElement2 != NULL);

  0001e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN10@CompareEle:
  00023	cc		 int	 3
??$CompareElements@PAXPAX@@YGHPBQAX0@Z ENDP		; CompareElements<void *,void *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@UColor_Font@CTreeCtrlEx@@@@YGXAAVCArchive@@PAUColor_Font@CTreeCtrlEx@@H@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@UColor_Font@CTreeCtrlEx@@@@YGXAAVCArchive@@PAUColor_Font@CTreeCtrlEx@@H@Z PROC ; SerializeElements<CTreeCtrlEx::Color_Font>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b 75 10	 mov	 esi, DWORD PTR _nCount$[ebp]
  0000b	57		 push	 edi
  0000c	85 f6		 test	 esi, esi
  0000e	74 04		 je	 SHORT $LN2@SerializeE
  00010	85 c9		 test	 ecx, ecx
  00012	74 7d		 je	 SHORT $LN34@SerializeE
$LN2@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00014	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00017	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0001a	f7 d0		 not	 eax
  0001c	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  0001e	74 32		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;
; 79   : 		pData = pElements;
; 80   : 		while( nElementsLeft > 0 )

  00020	85 f6		 test	 esi, esi
  00022	74 27		 je	 SHORT $LN8@SerializeE
$LL5@SerializeE:

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00024	bb ff ff ff 01	 mov	 ebx, 33554431		; 01ffffffH
  00029	3b f3		 cmp	 esi, ebx
  0002b	0f 42 de	 cmovb	 ebx, esi

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0002e	8b fb		 mov	 edi, ebx
  00030	c1 e7 06	 shl	 edi, 6
  00033	57		 push	 edi
  00034	51		 push	 ecx
  00035	8b ca		 mov	 ecx, edx
  00037	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;
; 87   : 			pData += nElementsToWrite;

  0003c	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  0003f	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00042	03 cf		 add	 ecx, edi
  00044	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  00047	2b f3		 sub	 esi, ebx
  00049	75 d9		 jne	 SHORT $LL5@SerializeE
$LN8@SerializeE:
  0004b	5f		 pop	 edi

; 105  : 		}
; 106  : 	}
; 107  : }

  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	5d		 pop	 ebp
  0004f	c2 0c 00	 ret	 12			; 0000000cH
$LN10@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  00052	85 f6		 test	 esi, esi
  00054	74 f5		 je	 SHORT $LN8@SerializeE
$LL7@SerializeE:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00056	bb ff ff ff 01	 mov	 ebx, 33554431		; 01ffffffH
  0005b	3b f3		 cmp	 esi, ebx
  0005d	0f 42 de	 cmovb	 ebx, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00060	8b fb		 mov	 edi, ebx
  00062	c1 e7 06	 shl	 edi, 6
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00065	57		 push	 edi
  00066	51		 push	 ecx
  00067	8b ca		 mov	 ecx, edx
  00069	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0006e	3b c7		 cmp	 eax, edi
  00070	75 16		 jne	 SHORT $LN23@SerializeE
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  00072	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00075	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;
; 104  : 			pData += nElementsToRead;

  00078	03 cf		 add	 ecx, edi
  0007a	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  0007d	2b f3		 sub	 esi, ebx
  0007f	75 d5		 jne	 SHORT $LL7@SerializeE

; 105  : 		}
; 106  : 	}
; 107  : }

  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	5b		 pop	 ebx
  00084	5d		 pop	 ebp
  00085	c2 0c 00	 ret	 12			; 0000000cH
$LN23@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 402  : 		AfxThrowArchiveException(CArchiveException::endOfFile);

  00088	6a 00		 push	 0
  0008a	6a 03		 push	 3
  0008c	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN34@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00091	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN32@SerializeE:
  00096	cc		 int	 3
??$SerializeElements@UColor_Font@CTreeCtrlEx@@@@YGXAAVCArchive@@PAUColor_Font@CTreeCtrlEx@@H@Z ENDP ; SerializeElements<CTreeCtrlEx::Color_Font>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@PAX@@YGXAAVCArchive@@PAPAXH@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@PAX@@YGXAAVCArchive@@PAPAXH@Z PROC	; SerializeElements<void *>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b 75 10	 mov	 esi, DWORD PTR _nCount$[ebp]
  0000b	57		 push	 edi
  0000c	85 f6		 test	 esi, esi
  0000e	74 08		 je	 SHORT $LN2@SerializeE
  00010	85 c9		 test	 ecx, ecx
  00012	0f 84 89 00 00
	00		 je	 $LN34@SerializeE
$LN2@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00018	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  0001b	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0001e	f7 d0		 not	 eax
  00020	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  00022	74 3c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;
; 79   : 		pData = pElements;
; 80   : 		while( nElementsLeft > 0 )

  00024	85 f6		 test	 esi, esi
  00026	74 31		 je	 SHORT $LN8@SerializeE
  00028	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL5@SerializeE:

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00030	bb ff ff ff 1f	 mov	 ebx, 536870911		; 1fffffffH
  00035	3b f3		 cmp	 esi, ebx
  00037	0f 42 de	 cmovb	 ebx, esi

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0003a	8d 3c 9d 00 00
	00 00		 lea	 edi, DWORD PTR [ebx*4]
  00041	57		 push	 edi
  00042	51		 push	 ecx
  00043	8b ca		 mov	 ecx, edx
  00045	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;
; 87   : 			pData += nElementsToWrite;

  0004a	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00050	03 cf		 add	 ecx, edi
  00052	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  00055	2b f3		 sub	 esi, ebx
  00057	75 d7		 jne	 SHORT $LL5@SerializeE
$LN8@SerializeE:
  00059	5f		 pop	 edi

; 105  : 		}
; 106  : 	}
; 107  : }

  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	5d		 pop	 ebp
  0005d	c2 0c 00	 ret	 12			; 0000000cH
$LN10@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  00060	85 f6		 test	 esi, esi
  00062	74 f5		 je	 SHORT $LN8@SerializeE
$LL7@SerializeE:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00064	bf ff ff ff 1f	 mov	 edi, 536870911		; 1fffffffH
  00069	3b f7		 cmp	 esi, edi
  0006b	0f 42 fe	 cmovb	 edi, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0006e	8d 1c bd 00 00
	00 00		 lea	 ebx, DWORD PTR [edi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00075	53		 push	 ebx
  00076	51		 push	 ecx
  00077	8b ca		 mov	 ecx, edx
  00079	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0007e	3b c3		 cmp	 eax, ebx
  00080	75 16		 jne	 SHORT $LN23@SerializeE
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  00082	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00085	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;
; 104  : 			pData += nElementsToRead;

  00088	03 cb		 add	 ecx, ebx
  0008a	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  0008d	2b f7		 sub	 esi, edi
  0008f	75 d3		 jne	 SHORT $LL7@SerializeE

; 105  : 		}
; 106  : 	}
; 107  : }

  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	5d		 pop	 ebp
  00095	c2 0c 00	 ret	 12			; 0000000cH
$LN23@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 402  : 		AfxThrowArchiveException(CArchiveException::endOfFile);

  00098	6a 00		 push	 0
  0009a	6a 03		 push	 3
  0009c	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN34@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  000a1	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN32@SerializeE:
  000a6	cc		 int	 3
??$SerializeElements@PAX@@YGXAAVCArchive@@PAPAXH@Z ENDP	; SerializeElements<void *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCTreeCtrlEx@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GCTreeCtrlEx@@UAEPAXI@Z PROC				; CTreeCtrlEx::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GCTreeCtrlEx@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 26   : {

  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CTreeCtrlEx@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1446 : 	if (m_pHashTable != NULL)

  0002b	8b 86 90 00 00
	00		 mov	 eax, DWORD PTR [esi+144]

; 1472 : {

  00031	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00038	c7 86 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+140], OFFSET ??_7?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@6B@

; 1446 : 	if (m_pHashTable != NULL)

  00042	85 c0		 test	 eax, eax
  00044	74 13		 je	 SHORT $LN20@scalar

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)
; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;
; 1453 : 			  pAssoc = pAssoc->pNext)
; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}
; 1457 : 		}
; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004c	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  0004f	c7 86 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+144], 0
$LN20@scalar:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;
; 1465 : 	m_pFreeList = NULL;
; 1466 : 	m_pBlocks->FreeDataChain();

  00059	8b 8e a0 00 00
	00		 mov	 ecx, DWORD PTR [esi+160]
  0005f	c7 86 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+152], 0
  00069	c7 86 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+156], 0
  00073	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 27   : }

  00078	8b ce		 mov	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1467 : 	m_pBlocks = NULL;

  0007a	c7 86 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+160], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 27   : }

  00084	e8 00 00 00 00	 call	 ??1CTreeCtrl@@UAE@XZ	; CTreeCtrl::~CTreeCtrl
  00089	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008c	a8 01		 test	 al, 1
  0008e	74 2f		 je	 SHORT $LN34@scalar
  00090	a8 04		 test	 al, 4
  00092	75 1d		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  00094	56		 push	 esi
  00095	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0009a	83 c4 04	 add	 esp, 4
  0009d	8b c6		 mov	 eax, esi
  0009f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a9	59		 pop	 ecx
  000aa	5e		 pop	 esi
  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c2 04 00	 ret	 4
$LN3@scalar:
  000b1	68 a8 00 00 00	 push	 168			; 000000a8H
  000b6	56		 push	 esi
  000b7	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000bc	83 c4 08	 add	 esp, 8
$LN34@scalar:
  000bf	8b c6		 mov	 eax, esi
  000c1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000cb	59		 pop	 ecx
  000cc	5e		 pop	 esi
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c2 04 00	 ret	 4
  000d3	cc		 int	 3
  000d4	cc		 int	 3
  000d5	cc		 int	 3
  000d6	cc		 int	 3
  000d7	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_GCTreeCtrlEx@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GCTreeCtrlEx@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GCTreeCtrlEx@@UAEPAXI@Z ENDP				; CTreeCtrlEx::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
;	COMDAT ?GetMessageMap@CTreeCtrlEx@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetMessageMap@CTreeCtrlEx@@MBEPBUAFX_MSGMAP@@XZ PROC	; CTreeCtrlEx::GetMessageMap, COMDAT
; _this$ = ecx

; 32   : BEGIN_MESSAGE_MAP(CTreeCtrlEx, CTreeCtrl)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CTreeCtrlEx@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  00005	c3		 ret	 0
?GetMessageMap@CTreeCtrlEx@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CTreeCtrlEx::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
;	COMDAT ?GetThisMessageMap@CTreeCtrlEx@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CTreeCtrlEx@@KGPBUAFX_MSGMAP@@XZ PROC ; CTreeCtrlEx::GetThisMessageMap, COMDAT

; 33   : 	//{{AFX_MSG_MAP(CTreeCtrlEx)
; 34   : 	ON_WM_PAINT()
; 35   : 	//}}AFX_MSG_MAP
; 36   : END_MESSAGE_MAP()

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CTreeCtrlEx@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  00005	c3		 ret	 0
?GetThisMessageMap@CTreeCtrlEx@@KGPBUAFX_MSGMAP@@XZ ENDP ; CTreeCtrlEx::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
;	COMDAT ?OnPaint@CTreeCtrlEx@@IAEXXZ
_TEXT	SEGMENT
_cf$4 = -340						; size = 64
_iItemCount$1$ = -276					; size = 4
_sItem$5 = -272						; size = 4
_sItem$6 = -268						; size = 4
_bitmap$ = -264						; size = 8
_rgn$ = -256						; size = 8
_fontDC$7 = -248					; size = 8
_fontDC$8 = -240					; size = 8
tv1122 = -232						; size = 4
_pFontDC$1$ = -232					; size = 4
_memDC$ = -228						; size = 16
_this$GSCopy$1$ = -212					; size = 4
_dc$ = -208						; size = 84
_logfont$9 = -124					; size = 60
_logfont$10 = -124					; size = 60
_rcClient$ = -64					; size = 16
_rcClip$ = -48						; size = 16
_rect$11 = -32						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?OnPaint@CTreeCtrlEx@@IAEXXZ PROC			; CTreeCtrlEx::OnPaint, COMDAT
; _this$ = ecx

; 96   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnPaint@CTreeCtrlEx@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 48 01 00
	00		 sub	 esp, 328		; 00000148H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	8b f1		 mov	 esi, ecx
  0002f	89 b5 2c ff ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], esi

; 97   : 	CPaintDC dc(this);

  00035	56		 push	 esi
  00036	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _dc$[ebp]
  0003c	e8 00 00 00 00	 call	 ??0CPaintDC@@QAE@PAVCWnd@@@Z ; CPaintDC::CPaintDC

; 100  : 	CDC memDC;

  00041	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _memDC$[ebp]
  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004e	e8 00 00 00 00	 call	 ??0CDC@@QAE@XZ		; CDC::CDC
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 330  : 	{ return Attach(::CreateCompatibleDC(pDC->GetSafeHdc())); }

  00053	ff b5 34 ff ff
	ff		 push	 DWORD PTR _dc$[ebp+4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 100  : 	CDC memDC;

  00059	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 330  : 	{ return Attach(::CreateCompatibleDC(pDC->GetSafeHdc())); }

  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateCompatibleDC@4
  00063	50		 push	 eax
  00064	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _memDC$[ebp]
  0006a	e8 00 00 00 00	 call	 ?Attach@CDC@@QAEHPAUHDC__@@@Z ; CDC::Attach
  0006f	0f 57 c0	 xorps	 xmm0, xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 104  : 	dc.GetClipBox( &rcClip );

  00072	8d 45 d0	 lea	 eax, DWORD PTR _rcClip$[ebp]
  00075	50		 push	 eax
  00076	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _dc$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  0007c	0f 11 45 d0	 movups	 XMMWORD PTR _rcClip$[ebp], xmm0
  00080	0f 11 45 c0	 movups	 XMMWORD PTR _rcClient$[ebp], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 104  : 	dc.GetClipBox( &rcClip );

  00084	e8 00 00 00 00	 call	 ?GetClipBox@CDC@@UBEHPAUtagRECT@@@Z ; CDC::GetClipBox
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 86   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetClientRect(m_hWnd, lpRect); }

  00089	8d 45 c0	 lea	 eax, DWORD PTR _rcClient$[ebp]
  0008c	50		 push	 eax
  0008d	ff 76 20	 push	 DWORD PTR [esi+32]
  00090	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 70   : 	{ m_hObject = NULL; }

  00096	c7 85 fc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _bitmap$[ebp+4], 0

; 177  : 	{ }

  000a0	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _bitmap$[ebp], OFFSET ??_7CBitmap@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 581  : 	return bottom - top;

  000aa	8b 4d cc	 mov	 ecx, DWORD PTR _rcClient$[ebp+12]
  000ad	2b 4d c4	 sub	 ecx, DWORD PTR _rcClient$[ebp+4]

; 576  : 	return right - left;

  000b0	8b 45 c8	 mov	 eax, DWORD PTR _rcClient$[ebp+8]
  000b3	2b 45 c0	 sub	 eax, DWORD PTR _rcClient$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 217  : 	{ return Attach(::CreateCompatibleBitmap(pDC->m_hDC, nWidth, nHeight)); }

  000b6	51		 push	 ecx
  000b7	50		 push	 eax
  000b8	ff b5 34 ff ff
	ff		 push	 DWORD PTR _dc$[ebp+4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 108  : 	CBitmap bitmap;

  000be	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 217  : 	{ return Attach(::CreateCompatibleBitmap(pDC->m_hDC, nWidth, nHeight)); }

  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateCompatibleBitmap@12
  000c8	50		 push	 eax
  000c9	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _bitmap$[ebp]
  000cf	e8 00 00 00 00	 call	 ?Attach@CGdiObject@@QAEHPAX@Z ; CGdiObject::Attach

; 361  : 	{ ASSERT(m_hDC != NULL); return (CBitmap*) SelectGdiObject(m_hDC, pBitmap->GetSafeHandle()); }

  000d4	ff b5 fc fe ff
	ff		 push	 DWORD PTR _bitmap$[ebp+4]
  000da	ff b5 20 ff ff
	ff		 push	 DWORD PTR _memDC$[ebp+4]
  000e0	e8 00 00 00 00	 call	 ?SelectGdiObject@CDC@@KGPAVCGdiObject@@PAUHDC__@@PAX@Z ; CDC::SelectGdiObject

; 70   : 	{ m_hObject = NULL; }

  000e5	c7 85 04 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _rgn$[ebp+4], 0

; 264  : 	{ }

  000ef	c7 85 00 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _rgn$[ebp], OFFSET ??_7CRgn@@6B@

; 270  : 	{ return Attach(::CreateRectRgnIndirect(lpRect)); }

  000f9	8d 45 d0	 lea	 eax, DWORD PTR _rcClip$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 113  : 	CRgn rgn;

  000fc	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 270  : 	{ return Attach(::CreateRectRgnIndirect(lpRect)); }

  00100	50		 push	 eax
  00101	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateRectRgnIndirect@4
  00107	50		 push	 eax
  00108	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _rgn$[ebp]
  0010e	e8 00 00 00 00	 call	 ?Attach@CGdiObject@@QAEHPAX@Z ; CGdiObject::Attach
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 115  : 	memDC.SelectClipRgn(&rgn);

  00113	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _rgn$[ebp]
  00119	50		 push	 eax
  0011a	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _memDC$[ebp]
  00120	e8 00 00 00 00	 call	 ?SelectClipRgn@CDC@@QAEHPAVCRgn@@@Z ; CDC::SelectClipRgn

; 116  : 	rgn.DeleteObject();

  00125	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _rgn$[ebp]
  0012b	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject

; 117  : 	
; 118  : 	// First let the control do its default drawing.
; 119  : 	CWnd::DefWindowProc(WM_PAINT, (WPARAM)memDC.m_hDC, 0);

  00130	6a 00		 push	 0
  00132	ff b5 20 ff ff
	ff		 push	 DWORD PTR _memDC$[ebp+4]
  00138	8b ce		 mov	 ecx, esi
  0013a	6a 0f		 push	 15			; 0000000fH
  0013c	e8 00 00 00 00	 call	 ?DefWindowProcA@CWnd@@MAEJIIJ@Z ; CWnd::DefWindowProcA
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl

; 308  : 	{ ASSERT(::IsWindow(m_hWnd)); return (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_FIRSTVISIBLE, 0); }

  00141	6a 00		 push	 0
  00143	6a 05		 push	 5
  00145	68 0a 11 00 00	 push	 4362			; 0000110aH
  0014a	ff 76 20	 push	 DWORD PTR [esi+32]
  0014d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 350  : 	{ ASSERT(::IsWindow(m_hWnd)); return (UINT)::SendMessage(m_hWnd, TVM_GETVISIBLECOUNT, 0, 0); }

  00153	6a 00		 push	 0
  00155	6a 00		 push	 0
  00157	68 10 11 00 00	 push	 4368			; 00001110H
  0015c	ff 76 20	 push	 DWORD PTR [esi+32]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 121  : 	HTREEITEM hItem = GetFirstVisibleItem();

  0015f	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl

; 350  : 	{ ASSERT(::IsWindow(m_hWnd)); return (UINT)::SendMessage(m_hWnd, TVM_GETVISIBLECOUNT, 0, 0); }

  00161	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 123  : 	int iItemCount = GetVisibleCount() + 1;

  00167	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]

; 124  : 	while(hItem && iItemCount--)

  0016a	85 ff		 test	 edi, edi
  0016c	0f 84 a2 03 00
	00		 je	 $LN3@OnPaint
$LL2@OnPaint:
  00172	8b c1		 mov	 eax, ecx
  00174	49		 dec	 ecx
  00175	89 8d ec fe ff
	ff		 mov	 DWORD PTR _iItemCount$1$[ebp], ecx
  0017b	85 c0		 test	 eax, eax
  0017d	0f 84 91 03 00
	00		 je	 $LN3@OnPaint

; 130  : 		DWORD dwStyle    = GetStyle();

  00183	0f 57 c0	 xorps	 xmm0, xmm0
  00186	8b ce		 mov	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  00188	0f 11 45 e0	 movups	 XMMWORD PTR _rect$11[ebp], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 130  : 		DWORD dwStyle    = GetStyle();

  0018c	e8 00 00 00 00	 call	 ?GetStyle@CWnd@@QBEKXZ	; CWnd::GetStyle

; 131  : 		Color_Font cf;
; 132  : 	
; 133  : 		//if ( !(GetTreeCtrl().GetItemState( hItem, selflag ) & selflag ) 
; 134  : 		//	&& m_mapColorFont.Lookup( hItem, cf ))
; 135  : 		if (
; 136  : 			(GetItemState(hItem, selflag) & selflag) 

  00191	6a 0a		 push	 10			; 0000000aH
  00193	57		 push	 edi
  00194	8b ce		 mov	 ecx, esi
  00196	e8 00 00 00 00	 call	 ?GetItemState@CTreeCtrl@@QBEIPAU_TREEITEM@@I@Z ; CTreeCtrl::GetItemState
  0019b	a8 0a		 test	 al, 10			; 0000000aH
  0019d	0f 84 36 01 00
	00		 je	 $LN4@OnPaint

; 137  : //			&& ::GetFocus() == m_hWnd)
; 138  : 			)
; 139  : 		{
; 140  : 			if(m_bUseUsrClr)

  001a3	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  001aa	0f 84 43 03 00
	00		 je	 $LN132@OnPaint
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 70   : 	{ m_hObject = NULL; }

  001b0	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _fontDC$8[ebp+4], 0

; 153  : 	{ }

  001ba	c7 85 10 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _fontDC$8[ebp], OFFSET ??_7CFont@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 45   : 	{ ASSERT(::IsWindow(m_hWnd)); return CFont::FromHandle(

  001c4	6a 00		 push	 0
  001c6	6a 00		 push	 0
  001c8	6a 31		 push	 49			; 00000031H
  001ca	ff 76 20	 push	 DWORD PTR [esi+32]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 143  : 				CFont fontDC;

  001cd	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 45   : 	{ ASSERT(::IsWindow(m_hWnd)); return CFont::FromHandle(

  001d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 151  : 	{ return (CFont*) CGdiObject::FromHandle(hFont); }

  001d7	50		 push	 eax
  001d8	e8 00 00 00 00	 call	 ?FromHandle@CGdiObject@@SGPAV1@PAX@Z ; CGdiObject::FromHandle

; 169  : 		return ::GetObject(m_hObject, sizeof(LOGFONT), pLogFont); }

  001dd	8d 4d 84	 lea	 ecx, DWORD PTR _logfont$10[ebp]
  001e0	51		 push	 ecx
  001e1	6a 3c		 push	 60			; 0000003cH
  001e3	ff 70 04	 push	 DWORD PTR [eax+4]
  001e6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetObjectA@12

; 157  : 	{ return Attach(::CreateFontIndirect(lpLogFont)); }

  001ec	8d 45 84	 lea	 eax, DWORD PTR _logfont$10[ebp]
  001ef	50		 push	 eax
  001f0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFontIndirectA@4
  001f6	50		 push	 eax
  001f7	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR _fontDC$8[ebp]
  001fd	e8 00 00 00 00	 call	 ?Attach@CGdiObject@@QAEHPAX@Z ; CGdiObject::Attach
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 149  : 				pFontDC = memDC.SelectObject(&fontDC );

  00202	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _fontDC$8[ebp]
  00208	50		 push	 eax
  00209	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _memDC$[ebp]
  0020f	e8 00 00 00 00	 call	 ?SelectObject@CDC@@UAEPAVCFont@@PAV2@@Z ; CDC::SelectObject

; 150  : 
; 151  : 				CString sItem = GetItemText(hItem);

  00214	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  0021a	8b f0		 mov	 esi, eax
  0021c	57		 push	 edi
  0021d	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _sItem$6[ebp]
  00223	50		 push	 eax
  00224	e8 00 00 00 00	 call	 ?GetItemText@CTreeCtrl@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAU_TREEITEM@@@Z ; CTreeCtrl::GetItemText

; 152  : 				GetItemRect(hItem, &rect, TRUE);

  00229	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  0022f	8d 45 e0	 lea	 eax, DWORD PTR _rect$11[ebp]
  00232	6a 01		 push	 1
  00234	50		 push	 eax
  00235	57		 push	 edi
  00236	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0023a	e8 00 00 00 00	 call	 ?GetItemRect@CTreeCtrl@@QBEHPAU_TREEITEM@@PAUtagRECT@@H@Z ; CTreeCtrl::GetItemRect

; 153  : 				memDC.SetBkColor(m_crBackColorSelected);

  0023f	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00245	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _memDC$[ebp]
  0024b	ff b0 84 00 00
	00		 push	 DWORD PTR [eax+132]
  00251	e8 00 00 00 00	 call	 ?SetBkColor@CDC@@UAEKK@Z ; CDC::SetBkColor

; 154  : 				memDC.SetTextColor(m_crTextColorSelected);

  00256	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  0025c	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _memDC$[ebp]
  00262	ff b0 88 00 00
	00		 push	 DWORD PTR [eax+136]
  00268	e8 00 00 00 00	 call	 ?SetTextColor@CDC@@UAEKK@Z ; CDC::SetTextColor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

  0026d	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _sItem$6[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 155  : 				memDC.TextOut(rect.left + 2, rect.top + 1, sItem);

  00273	8b 55 e4	 mov	 edx, DWORD PTR _rect$11[ebp+4]
  00276	8b 4d e0	 mov	 ecx, DWORD PTR _rect$11[ebp]
  00279	42		 inc	 edx
  0027a	83 c1 02	 add	 ecx, 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 574  : 	{ ASSERT(m_hDC != NULL); return TextOut(x, y, (LPCTSTR)str, (int)str.GetLength()); } // call virtual

  0027d	ff 70 f4	 push	 DWORD PTR [eax-12]
  00280	50		 push	 eax
  00281	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _memDC$[ebp]
  00287	52		 push	 edx
  00288	51		 push	 ecx
  00289	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _memDC$[ebp]
  0028f	ff 50 64	 call	 DWORD PTR [eax+100]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 157  : 	 			memDC.SelectObject(pFontDC);

  00292	56		 push	 esi
  00293	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _memDC$[ebp]
  00299	e8 00 00 00 00	 call	 ?SelectObject@CDC@@UAEPAVCFont@@PAV2@@Z ; CDC::SelectObject

; 158  : 				fontDC.DeleteObject();//KHD

  0029e	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR _fontDC$8[ebp]
  002a4	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject

; 159  : 			}

  002a9	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR _sItem$6[ebp]
  002af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 155  : 	{ }

  002b5	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR _fontDC$8[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 159  : 			}

  002bb	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 155  : 	{ }

  002bf	c7 85 10 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _fontDC$8[ebp], OFFSET ??_7CFont@@6B@
  002c9	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 160  : 		}		

  002ce	8b b5 2c ff ff
	ff		 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  002d4	e9 1a 02 00 00	 jmp	 $LN132@OnPaint
$LN4@OnPaint:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 165  : 	ldiv_t HashVal = ldiv((long)(ARG_KEY)key, 127773);

  002d9	8b c7		 mov	 eax, edi
  002db	b9 1d f3 01 00	 mov	 ecx, 127773		; 0001f31dH
  002e0	99		 cdq
  002e1	f7 f9		 idiv	 ecx

; 166  : 	HashVal.rem = 16807 * HashVal.rem - 2836 * HashVal.quot;

  002e3	69 c0 14 0b 00
	00		 imul	 eax, eax, 2836
  002e9	69 ca a7 41 00
	00		 imul	 ecx, edx, 16807
  002ef	2b c8		 sub	 ecx, eax

; 1534 : 	nHashBucket = nHashValue % m_nHashTableSize;

  002f1	8d 81 ff ff ff
	7f		 lea	 eax, DWORD PTR [ecx+2147483647]
  002f7	0f 49 c1	 cmovns	 eax, ecx
  002fa	33 d2		 xor	 edx, edx
  002fc	89 85 18 ff ff
	ff		 mov	 DWORD PTR tv1122[ebp], eax
  00302	f7 b6 94 00 00
	00		 div	 DWORD PTR [esi+148]

; 1535 : 
; 1536 : 	if (m_pHashTable == NULL)

  00308	8b 86 90 00 00
	00		 mov	 eax, DWORD PTR [esi+144]
  0030e	85 c0		 test	 eax, eax
  00310	74 1e		 je	 SHORT $LN163@OnPaint

; 1537 : 		return NULL;
; 1538 : 
; 1539 : 	// see if it exists
; 1540 : 	CAssoc* pAssoc;
; 1541 : 	for (pAssoc = m_pHashTable[nHashBucket]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00312	8b 04 90	 mov	 eax, DWORD PTR [eax+edx*4]
  00315	85 c0		 test	 eax, eax
  00317	74 17		 je	 SHORT $LN163@OnPaint
  00319	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR tv1122[ebp]
  0031f	90		 npad	 1
$LL91@OnPaint:

; 1542 : 	{
; 1543 : 		if (pAssoc->nHashValue == nHashValue && CompareElements(&pAssoc->key, &key))

  00320	39 48 48	 cmp	 DWORD PTR [eax+72], ecx
  00323	75 04		 jne	 SHORT $LN89@OnPaint
  00325	39 38		 cmp	 DWORD PTR [eax], edi
  00327	74 6b		 je	 SHORT $LN86@OnPaint
$LN89@OnPaint:

; 1537 : 		return NULL;
; 1538 : 
; 1539 : 	// see if it exists
; 1540 : 	CAssoc* pAssoc;
; 1541 : 	for (pAssoc = m_pHashTable[nHashBucket]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00329	8b 40 44	 mov	 eax, DWORD PTR [eax+68]
  0032c	85 c0		 test	 eax, eax
  0032e	75 f0		 jne	 SHORT $LL91@OnPaint
$LN163@OnPaint:

; 1557 : 		return FALSE;  // not in map

  00330	33 c0		 xor	 eax, eax
$LN85@OnPaint:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 161  : 		else if (m_mapColorFont.Lookup(hItem, cf))

  00332	85 c0		 test	 eax, eax
  00334	0f 84 b9 01 00
	00		 je	 $LN132@OnPaint
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 70   : 	{ m_hObject = NULL; }

  0033a	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _fontDC$7[ebp+4], 0

; 153  : 	{ }

  00344	c7 85 08 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _fontDC$7[ebp], OFFSET ??_7CFont@@6B@
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 167  : 			if(cf.logfont.lfFaceName[0] != '\0') 

  0034e	80 bd cc fe ff
	ff 00		 cmp	 BYTE PTR _cf$4[ebp+32], 0
  00355	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00359	74 6f		 je	 SHORT $LN8@OnPaint

; 168  : 				logfont = cf.logfont;

  0035b	0f 10 85 b0 fe
	ff ff		 movups	 xmm0, XMMWORD PTR _cf$4[ebp+4]
  00362	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _cf$4[ebp+60]
  00368	89 45 bc	 mov	 DWORD PTR _logfont$9[ebp+56], eax
  0036b	0f 11 45 84	 movups	 XMMWORD PTR _logfont$9[ebp], xmm0
  0036f	0f 10 85 c0 fe
	ff ff		 movups	 xmm0, XMMWORD PTR _cf$4[ebp+20]
  00376	0f 11 45 94	 movups	 XMMWORD PTR _logfont$9[ebp+16], xmm0
  0037a	0f 10 85 d0 fe
	ff ff		 movups	 xmm0, XMMWORD PTR _cf$4[ebp+36]
  00381	0f 11 45 a4	 movups	 XMMWORD PTR _logfont$9[ebp+32], xmm0
  00385	f3 0f 7e 85 e0
	fe ff ff	 movq	 xmm0, QWORD PTR _cf$4[ebp+52]
  0038d	66 0f d6 45 b4	 movq	 QWORD PTR _logfont$9[ebp+48], xmm0
  00392	eb 5a		 jmp	 SHORT $LN9@OnPaint
$LN86@OnPaint:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1559 : 	rValue = pAssoc->value;

  00394	0f 10 40 04	 movups	 xmm0, XMMWORD PTR [eax+4]
  00398	0f 11 85 ac fe
	ff ff		 movups	 XMMWORD PTR _cf$4[ebp], xmm0
  0039f	0f 10 40 14	 movups	 xmm0, XMMWORD PTR [eax+20]
  003a3	0f 11 85 bc fe
	ff ff		 movups	 XMMWORD PTR _cf$4[ebp+16], xmm0
  003aa	0f 10 40 24	 movups	 xmm0, XMMWORD PTR [eax+36]
  003ae	0f 11 85 cc fe
	ff ff		 movups	 XMMWORD PTR _cf$4[ebp+32], xmm0
  003b5	0f 10 40 34	 movups	 xmm0, XMMWORD PTR [eax+52]

; 1560 : 	return TRUE;

  003b9	b8 01 00 00 00	 mov	 eax, 1
  003be	0f 11 85 dc fe
	ff ff		 movups	 XMMWORD PTR _cf$4[ebp+48], xmm0
  003c5	e9 68 ff ff ff	 jmp	 $LN85@OnPaint
$LN8@OnPaint:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl

; 45   : 	{ ASSERT(::IsWindow(m_hWnd)); return CFont::FromHandle(

  003ca	6a 00		 push	 0
  003cc	6a 00		 push	 0
  003ce	6a 31		 push	 49			; 00000031H
  003d0	ff 76 20	 push	 DWORD PTR [esi+32]
  003d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 151  : 	{ return (CFont*) CGdiObject::FromHandle(hFont); }

  003d9	50		 push	 eax
  003da	e8 00 00 00 00	 call	 ?FromHandle@CGdiObject@@SGPAV1@PAX@Z ; CGdiObject::FromHandle

; 169  : 		return ::GetObject(m_hObject, sizeof(LOGFONT), pLogFont); }

  003df	8d 4d 84	 lea	 ecx, DWORD PTR _logfont$9[ebp]
  003e2	51		 push	 ecx
  003e3	6a 3c		 push	 60			; 0000003cH
  003e5	ff 70 04	 push	 DWORD PTR [eax+4]
  003e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetObjectA@12
$LN9@OnPaint:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 80   : 	return GetItemState(hItem, TVIS_BOLD) & TVIS_BOLD;

  003ee	6a 10		 push	 16			; 00000010H
  003f0	57		 push	 edi
  003f1	8b ce		 mov	 ecx, esi
  003f3	e8 00 00 00 00	 call	 ?GetItemState@CTreeCtrl@@QBEIPAU_TREEITEM@@I@Z ; CTreeCtrl::GetItemState
  003f8	a8 10		 test	 al, 16			; 00000010H

; 169  : 			else {
; 170  : 				// No font specified, so use window font
; 171  : 				CFont *pFont = GetFont();
; 172  : 				pFont->GetLogFont( &logfont );
; 173  : 			}
; 174  : 
; 175  : 			if(GetItemBold(hItem))

  003fa	b9 bc 02 00 00	 mov	 ecx, 700		; 000002bcH
  003ff	8b 45 94	 mov	 eax, DWORD PTR _logfont$9[ebp+16]
  00402	0f 45 c1	 cmovne	 eax, ecx
  00405	89 45 94	 mov	 DWORD PTR _logfont$9[ebp+16], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 157  : 	{ return Attach(::CreateFontIndirect(lpLogFont)); }

  00408	8d 45 84	 lea	 eax, DWORD PTR _logfont$9[ebp]
  0040b	50		 push	 eax
  0040c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFontIndirectA@4
  00412	50		 push	 eax
  00413	8d 8d 08 ff ff
	ff		 lea	 ecx, DWORD PTR _fontDC$7[ebp]
  00419	e8 00 00 00 00	 call	 ?Attach@CGdiObject@@QAEHPAX@Z ; CGdiObject::Attach
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 179  : 			pFontDC = memDC.SelectObject(&fontDC );

  0041e	8d 85 08 ff ff
	ff		 lea	 eax, DWORD PTR _fontDC$7[ebp]
  00424	50		 push	 eax
  00425	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _memDC$[ebp]
  0042b	e8 00 00 00 00	 call	 ?SelectObject@CDC@@UAEPAVCFont@@PAV2@@Z ; CDC::SelectObject

; 180  : 
; 181  : 			if(cf.color != (COLORREF) - 1)

  00430	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR _cf$4[ebp]
  00436	89 85 18 ff ff
	ff		 mov	 DWORD PTR _pFontDC$1$[ebp], eax
  0043c	83 f9 ff	 cmp	 ecx, -1
  0043f	74 03		 je	 SHORT $LN11@OnPaint

; 182  : 				memDC.SetTextColor(cf.color);

  00441	51		 push	 ecx
  00442	eb 09		 jmp	 SHORT $LN166@OnPaint
$LN11@OnPaint:

; 183  : 			else
; 184  : 				memDC.SetTextColor(GetSysColor(COLOR_WINDOWTEXT));

  00444	6a 08		 push	 8
  00446	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSysColor@4
  0044c	50		 push	 eax
$LN166@OnPaint:

; 185  : 
; 186  : 
; 187  : 			CString sItem = GetItemText(hItem);

  0044d	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _memDC$[ebp]
  00453	e8 00 00 00 00	 call	 ?SetTextColor@CDC@@UAEKK@Z ; CDC::SetTextColor
  00458	57		 push	 edi
  00459	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _sItem$5[ebp]
  0045f	8b ce		 mov	 ecx, esi
  00461	50		 push	 eax
  00462	e8 00 00 00 00	 call	 ?GetItemText@CTreeCtrl@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAU_TREEITEM@@@Z ; CTreeCtrl::GetItemText

; 188  : 
; 189  : 			GetItemRect(hItem, &rect, TRUE);

  00467	6a 01		 push	 1
  00469	8d 45 e0	 lea	 eax, DWORD PTR _rect$11[ebp]
  0046c	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00470	50		 push	 eax
  00471	57		 push	 edi
  00472	8b ce		 mov	 ecx, esi
  00474	e8 00 00 00 00	 call	 ?GetItemRect@CTreeCtrl@@QBEHPAU_TREEITEM@@PAUtagRECT@@H@Z ; CTreeCtrl::GetItemRect

; 190  : 			memDC.SetBkColor( GetSysColor(COLOR_WINDOW));

  00479	6a 05		 push	 5
  0047b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSysColor@4
  00481	50		 push	 eax
  00482	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _memDC$[ebp]
  00488	e8 00 00 00 00	 call	 ?SetBkColor@CDC@@UAEKK@Z ; CDC::SetBkColor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

  0048d	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _sItem$5[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 191  : 			memDC.TextOut(rect.left + 2, rect.top + 1, sItem);

  00493	8b 55 e4	 mov	 edx, DWORD PTR _rect$11[ebp+4]
  00496	8b 4d e0	 mov	 ecx, DWORD PTR _rect$11[ebp]
  00499	42		 inc	 edx
  0049a	83 c1 02	 add	 ecx, 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 574  : 	{ ASSERT(m_hDC != NULL); return TextOut(x, y, (LPCTSTR)str, (int)str.GetLength()); } // call virtual

  0049d	ff 70 f4	 push	 DWORD PTR [eax-12]
  004a0	50		 push	 eax
  004a1	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _memDC$[ebp]
  004a7	52		 push	 edx
  004a8	51		 push	 ecx
  004a9	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _memDC$[ebp]
  004af	ff 50 64	 call	 DWORD PTR [eax+100]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 193  : 			memDC.SelectObject(pFontDC);

  004b2	ff b5 18 ff ff
	ff		 push	 DWORD PTR _pFontDC$1$[ebp]
  004b8	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _memDC$[ebp]
  004be	e8 00 00 00 00	 call	 ?SelectObject@CDC@@UAEPAVCFont@@PAV2@@Z ; CDC::SelectObject

; 194  : 			fontDC.DeleteObject();//KHD

  004c3	8d 8d 08 ff ff
	ff		 lea	 ecx, DWORD PTR _fontDC$7[ebp]
  004c9	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject

; 195  : 		}

  004ce	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _sItem$5[ebp]
  004d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 155  : 	{ }

  004da	8d 8d 08 ff ff
	ff		 lea	 ecx, DWORD PTR _fontDC$7[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 195  : 		}

  004e0	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 155  : 	{ }

  004e4	c7 85 08 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _fontDC$7[ebp], OFFSET ??_7CFont@@6B@
  004ee	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
$LN132@OnPaint:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl

; 310  : 	{ ASSERT(::IsWindow(m_hWnd)); return (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_NEXTVISIBLE, (LPARAM)hItem); }

  004f3	57		 push	 edi
  004f4	6a 06		 push	 6
  004f6	68 0a 11 00 00	 push	 4362			; 0000110aH
  004fb	ff 76 20	 push	 DWORD PTR [esi+32]
  004fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 124  : 	while(hItem && iItemCount--)

  00504	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _iItemCount$1$[ebp]

; 196  : 		hItem = GetNextVisibleItem(hItem);

  0050a	8b f8		 mov	 edi, eax
  0050c	85 ff		 test	 edi, edi
  0050e	0f 85 5e fc ff
	ff		 jne	 $LL2@OnPaint
$LN3@OnPaint:

; 200  : 	dc.BitBlt(rcClip.left, rcClip.top, rcClip.Width(), rcClip.Height(), &memDC, 

  00514	8b 75 d4	 mov	 esi, DWORD PTR _rcClip$[ebp+4]
  00517	8b 4d d0	 mov	 ecx, DWORD PTR _rcClip$[ebp]
  0051a	8b 55 dc	 mov	 edx, DWORD PTR _rcClip$[ebp+12]
  0051d	8b 45 d8	 mov	 eax, DWORD PTR _rcClip$[ebp+8]
  00520	2b d6		 sub	 edx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 552  : 	{ ASSERT(m_hDC != NULL); return ::BitBlt(m_hDC, x, y, nWidth, nHeight,

  00522	68 20 00 cc 00	 push	 13369376		; 00cc0020H
  00527	56		 push	 esi
  00528	51		 push	 ecx
  00529	ff b5 20 ff ff
	ff		 push	 DWORD PTR _memDC$[ebp+4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 200  : 	dc.BitBlt(rcClip.left, rcClip.top, rcClip.Width(), rcClip.Height(), &memDC, 

  0052f	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 552  : 	{ ASSERT(m_hDC != NULL); return ::BitBlt(m_hDC, x, y, nWidth, nHeight,

  00531	52		 push	 edx
  00532	50		 push	 eax
  00533	56		 push	 esi
  00534	51		 push	 ecx
  00535	ff b5 34 ff ff
	ff		 push	 DWORD PTR _dc$[ebp+4]
  0053b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__BitBlt@36
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 203  : 	memDC.DeleteDC();

  00541	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _memDC$[ebp]
  00547	e8 00 00 00 00	 call	 ?DeleteDC@CDC@@QAEHXZ	; CDC::DeleteDC

; 204  : 	bitmap.DeleteObject();//KHD

  0054c	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _bitmap$[ebp]
  00552	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 266  : 	{ }

  00557	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _rgn$[ebp]
  0055d	c7 85 00 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _rgn$[ebp], OFFSET ??_7CRgn@@6B@
  00567	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject

; 179  : 	{ }

  0056c	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _bitmap$[ebp]
  00572	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _bitmap$[ebp], OFFSET ??_7CBitmap@@6B@
  0057c	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 205  : }

  00581	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _memDC$[ebp]
  00587	e8 00 00 00 00	 call	 ??1CDC@@UAE@XZ		; CDC::~CDC
  0058c	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _dc$[ebp]
  00592	e8 00 00 00 00	 call	 ??1CPaintDC@@UAE@XZ	; CPaintDC::~CPaintDC
  00597	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0059a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  005a1	59		 pop	 ecx
  005a2	5f		 pop	 edi
  005a3	5e		 pop	 esi
  005a4	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  005a7	33 cd		 xor	 ecx, ebp
  005a9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  005ae	8b e5		 mov	 esp, ebp
  005b0	5d		 pop	 ebp
  005b1	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnPaint@CTreeCtrlEx@@IAEXXZ$0:
  00000	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _dc$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CPaintDC@@UAE@XZ	; CPaintDC::~CPaintDC
__unwindfunclet$?OnPaint@CTreeCtrlEx@@IAEXXZ$1:
  0000b	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _memDC$[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1CDC@@UAE@XZ		; CDC::~CDC
__unwindfunclet$?OnPaint@CTreeCtrlEx@@IAEXXZ$2:
  00016	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _bitmap$[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1CBitmap@@UAE@XZ	; CBitmap::~CBitmap
__unwindfunclet$?OnPaint@CTreeCtrlEx@@IAEXXZ$3:
  00021	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _rgn$[ebp]
  00027	e9 00 00 00 00	 jmp	 ??1CRgn@@UAE@XZ		; CRgn::~CRgn
__unwindfunclet$?OnPaint@CTreeCtrlEx@@IAEXXZ$4:
  0002c	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR _fontDC$8[ebp]
  00032	e9 00 00 00 00	 jmp	 ??1CFont@@UAE@XZ	; CFont::~CFont
__unwindfunclet$?OnPaint@CTreeCtrlEx@@IAEXXZ$5:
  00037	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR _sItem$6[ebp]
  0003d	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?OnPaint@CTreeCtrlEx@@IAEXXZ$6:
  00043	8d 8d 08 ff ff
	ff		 lea	 ecx, DWORD PTR _fontDC$7[ebp]
  00049	e9 00 00 00 00	 jmp	 ??1CFont@@UAE@XZ	; CFont::~CFont
__unwindfunclet$?OnPaint@CTreeCtrlEx@@IAEXXZ$7:
  0004e	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _sItem$5[ebp]
  00054	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0005a	cc		 int	 3
  0005b	cc		 int	 3
  0005c	cc		 int	 3
  0005d	cc		 int	 3
  0005e	cc		 int	 3
__ehhandler$?OnPaint@CTreeCtrlEx@@IAEXXZ:
  0005f	90		 npad	 1
  00060	90		 npad	 1
  00061	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00065	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00068	8b 8a ac fe ff
	ff		 mov	 ecx, DWORD PTR [edx-340]
  0006e	33 c8		 xor	 ecx, eax
  00070	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00075	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00078	33 c8		 xor	 ecx, eax
  0007a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnPaint@CTreeCtrlEx@@IAEXXZ
  00084	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnPaint@CTreeCtrlEx@@IAEXXZ ENDP			; CTreeCtrlEx::OnPaint
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_G?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAEPAXI@Z PROC ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1446 : 	if (m_pHashTable != NULL)

  00025	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 1472 : {

  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@6B@

; 1446 : 	if (m_pHashTable != NULL)

  00035	85 c0		 test	 eax, eax
  00037	74 10		 je	 SHORT $LN17@scalar

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)
; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;
; 1453 : 			  pAssoc = pAssoc->pNext)
; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}
; 1457 : 		}
; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0003f	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  00042	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
$LN17@scalar:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;
; 1465 : 	m_pFreeList = NULL;
; 1466 : 	m_pBlocks->FreeDataChain();

  00049	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0004c	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00053	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0005a	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 1467 : 	m_pBlocks = NULL;

  0005f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00062	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00069	a8 01		 test	 al, 1
  0006b	74 2c		 je	 SHORT $LN31@scalar
  0006d	a8 04		 test	 al, 4
  0006f	75 1d		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  00071	56		 push	 esi
  00072	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00077	83 c4 04	 add	 esp, 4
  0007a	8b c6		 mov	 eax, esi
  0007c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00086	59		 pop	 ecx
  00087	5e		 pop	 esi
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 04 00	 ret	 4
$LN3@scalar:
  0008e	6a 1c		 push	 28			; 0000001cH
  00090	56		 push	 esi
  00091	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00096	83 c4 08	 add	 esp, 8
$LN31@scalar:
  00099	8b c6		 mov	 eax, esi
  0009b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a5	59		 pop	 ecx
  000a6	5e		 pop	 esi
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 04 00	 ret	 4
  000ad	cc		 int	 3
  000ae	cc		 int	 3
  000af	cc		 int	 3
  000b0	cc		 int	 3
  000b1	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAEPAXI@Z ENDP ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
$T1 = -164						; size = 16
$T2 = -148						; size = 16
$T3 = -132						; size = 16
$T4 = -116						; size = 16
_this$GSCopy$1$ = -100					; size = 4
_newKey$5 = -96						; size = 4
_nElementsToRead$1$ = -92				; size = 4
_nElementsToRead$1$ = -92				; size = 4
_nElementsToRead$1$ = -92				; size = 4
_pData$1$ = -88						; size = 4
_nCount$1$ = -88					; size = 4
_nNewCount$1$ = -88					; size = 4
_ar$GSCopy$1$ = -84					; size = 4
_pData$1$ = -80						; size = 4
_pData$1$ = -80						; size = 4
_pAssoc$1$ = -80					; size = 4
_nElementsLeft$1$ = -76					; size = 4
_pData$1$ = -76						; size = 4
_pData$1$ = -76						; size = 4
_pData$1$ = -72						; size = 4
_nElementsLeft$1$ = -72					; size = 4
_pData$1$ = -72						; size = 4
_nElementsLeft$1$ = -72					; size = 4
_nHash$1$ = -72						; size = 4
_newValue$6 = -68					; size = 64
__$ArrayPad$ = -4					; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAEXAAVCArchive@@@Z PROC ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::Serialize, COMDAT
; _this$ = ecx

; 1743 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR _ar$[ebp]
  00017	56		 push	 esi
  00018	8b f1		 mov	 esi, ecx
  0001a	89 5d ac	 mov	 DWORD PTR _ar$GSCopy$1$[ebp], ebx
  0001d	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  0001e	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1748 : 	if (ar.IsStoring())

  00021	8b cb		 mov	 ecx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00023	f7 d0		 not	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1743 : {

  00025	89 75 9c	 mov	 DWORD PTR _this$GSCopy$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00028	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1748 : 	if (ar.IsStoring())

  0002a	0f 84 75 01 00
	00		 je	 $LN10@Serialize

; 1749 : 	{
; 1750 : 		ar.WriteCount(m_nCount);

  00030	ff 76 0c	 push	 DWORD PTR [esi+12]
  00033	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1751 : 		if (m_nCount == 0)

  00038	83 7e 0c 00	 cmp	 DWORD PTR [esi+12], 0
  0003c	0f 84 eb 02 00
	00		 je	 $LN129@Serialize

; 1752 : 			return;  // nothing more to do
; 1753 : 
; 1754 : 		ASSERT(m_pHashTable != NULL);
; 1755 : 		if (m_pHashTable != NULL)

  00042	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  00046	0f 84 e1 02 00
	00		 je	 $LN129@Serialize

; 1756 : 		{
; 1757 : 			for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  0004c	33 c9		 xor	 ecx, ecx
  0004e	89 4d b8	 mov	 DWORD PTR _nHash$1$[ebp], ecx
  00051	39 4e 08	 cmp	 DWORD PTR [esi+8], ecx
  00054	0f 86 d3 02 00
	00		 jbe	 $LN129@Serialize
  0005a	66 0f 1f 44 00
	00		 npad	 6
$LL4@Serialize:

; 1758 : 			{
; 1759 : 				CAssoc* pAssoc;
; 1760 : 				for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00060	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00063	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00066	89 4d b0	 mov	 DWORD PTR _pAssoc$1$[ebp], ecx
  00069	85 c9		 test	 ecx, ecx
  0006b	0f 84 11 01 00
	00		 je	 $LN2@Serialize
$LL7@Serialize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00071	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1770 : 					pValue = reinterpret_cast< VALUE* >( &reinterpret_cast< int& >( static_cast< VALUE& >( pAssoc->value ) ) );

  00074	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00077	f7 d0		 not	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1770 : 					pValue = reinterpret_cast< VALUE* >( &reinterpret_cast< int& >( static_cast< VALUE& >( pAssoc->value ) ) );

  00079	89 75 a8	 mov	 DWORD PTR _pData$1$[ebp], esi

; 73   : 	if (ar.IsStoring())

  0007c	89 4d b4	 mov	 DWORD PTR _pData$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  0007f	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  00081	74 3c		 je	 SHORT $LN26@Serialize

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  00083	be 01 00 00 00	 mov	 esi, 1

; 79   : 		pData = pElements;

  00088	8b c1		 mov	 eax, ecx
  0008a	66 0f 1f 44 00
	00		 npad	 6
$LL21@Serialize:

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  00090	8b 4d ac	 mov	 ecx, DWORD PTR _ar$GSCopy$1$[ebp]
  00093	bb ff ff ff 1f	 mov	 ebx, 536870911		; 1fffffffH
  00098	3b f3		 cmp	 esi, ebx
  0009a	0f 42 de	 cmovb	 ebx, esi
  0009d	8d 3c 9d 00 00
	00 00		 lea	 edi, DWORD PTR [ebx*4]
  000a4	57		 push	 edi
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 87   : 			pData += nElementsToWrite;

  000ab	8b 45 b4	 mov	 eax, DWORD PTR _pData$1$[ebp]
  000ae	03 c7		 add	 eax, edi
  000b0	89 45 b4	 mov	 DWORD PTR _pData$1$[ebp], eax
  000b3	2b f3		 sub	 esi, ebx
  000b5	75 d9		 jne	 SHORT $LL21@Serialize
  000b7	8b 75 a8	 mov	 esi, DWORD PTR _pData$1$[ebp]

; 88   : 		}
; 89   : 	}

  000ba	8b 5d ac	 mov	 ebx, DWORD PTR _ar$GSCopy$1$[ebp]
  000bd	eb 39		 jmp	 SHORT $LN41@Serialize
$LN26@Serialize:

; 90   : 	else
; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000bf	bf 01 00 00 00	 mov	 edi, 1
$LL23@Serialize:

; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000c4	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH
  000c9	3b f8		 cmp	 edi, eax
  000cb	0f 42 c7	 cmovb	 eax, edi
  000ce	89 45 a4	 mov	 DWORD PTR _nElementsToRead$1$[ebp], eax

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  000d1	c1 e0 02	 shl	 eax, 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  000d4	50		 push	 eax
  000d5	51		 push	 ecx
  000d6	8b cb		 mov	 ecx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  000d8	89 45 a8	 mov	 DWORD PTR _nCount$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  000db	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  000e0	8b 55 a8	 mov	 edx, DWORD PTR _nCount$1$[ebp]
  000e3	3b c2		 cmp	 eax, edx
  000e5	0f 85 5a 02 00
	00		 jne	 $LN112@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 104  : 			pData += nElementsToRead;

  000eb	8b 4d b4	 mov	 ecx, DWORD PTR _pData$1$[ebp]
  000ee	03 ca		 add	 ecx, edx
  000f0	89 4d b4	 mov	 DWORD PTR _pData$1$[ebp], ecx
  000f3	2b 7d a4	 sub	 edi, DWORD PTR _nElementsToRead$1$[ebp]
  000f6	75 cc		 jne	 SHORT $LL23@Serialize
$LN41@Serialize:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  000f8	85 f6		 test	 esi, esi
  000fa	0f 84 40 02 00
	00		 je	 $LN114@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00100	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00103	f7 d0		 not	 eax
  00105	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  00107	74 31		 je	 SHORT $LN47@Serialize

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  00109	b8 01 00 00 00	 mov	 eax, 1
  0010e	89 45 b4	 mov	 DWORD PTR _nElementsLeft$1$[ebp], eax
$LL42@Serialize:

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  00111	8b 4d ac	 mov	 ecx, DWORD PTR _ar$GSCopy$1$[ebp]
  00114	bb ff ff ff 01	 mov	 ebx, 33554431		; 01ffffffH
  00119	3b c3		 cmp	 eax, ebx
  0011b	0f 42 d8	 cmovb	 ebx, eax
  0011e	8b fb		 mov	 edi, ebx
  00120	c1 e7 06	 shl	 edi, 6
  00123	57		 push	 edi
  00124	56		 push	 esi
  00125	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  0012a	8b 45 b4	 mov	 eax, DWORD PTR _nElementsLeft$1$[ebp]

; 87   : 			pData += nElementsToWrite;

  0012d	03 f7		 add	 esi, edi
  0012f	2b c3		 sub	 eax, ebx
  00131	89 45 b4	 mov	 DWORD PTR _nElementsLeft$1$[ebp], eax
  00134	85 c0		 test	 eax, eax
  00136	75 d9		 jne	 SHORT $LL42@Serialize

; 88   : 		}
; 89   : 	}

  00138	eb 31		 jmp	 SHORT $LN5@Serialize
$LN47@Serialize:

; 90   : 	else
; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  0013a	bf 01 00 00 00	 mov	 edi, 1
  0013f	90		 npad	 1
$LL44@Serialize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00140	8b 4d ac	 mov	 ecx, DWORD PTR _ar$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00143	b8 ff ff ff 01	 mov	 eax, 33554431		; 01ffffffH
  00148	3b f8		 cmp	 edi, eax
  0014a	0f 42 c7	 cmovb	 eax, edi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0014d	8b d8		 mov	 ebx, eax
  0014f	89 45 a4	 mov	 DWORD PTR _nElementsToRead$1$[ebp], eax
  00152	c1 e3 06	 shl	 ebx, 6
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00155	53		 push	 ebx
  00156	56		 push	 esi
  00157	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0015c	3b c3		 cmp	 eax, ebx
  0015e	0f 85 e1 01 00
	00		 jne	 $LN112@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 103  : 			nElementsLeft -= nElementsToRead;

  00164	03 f3		 add	 esi, ebx
  00166	2b 7d a4	 sub	 edi, DWORD PTR _nElementsToRead$1$[ebp]
  00169	75 d5		 jne	 SHORT $LL44@Serialize
$LN5@Serialize:

; 1758 : 			{
; 1759 : 				CAssoc* pAssoc;
; 1760 : 				for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0016b	8b 4d b0	 mov	 ecx, DWORD PTR _pAssoc$1$[ebp]
  0016e	8b 5d ac	 mov	 ebx, DWORD PTR _ar$GSCopy$1$[ebp]
  00171	8b 49 44	 mov	 ecx, DWORD PTR [ecx+68]
  00174	89 4d b0	 mov	 DWORD PTR _pAssoc$1$[ebp], ecx
  00177	85 c9		 test	 ecx, ecx
  00179	0f 85 f2 fe ff
	ff		 jne	 $LL7@Serialize
  0017f	8b 75 9c	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
$LN2@Serialize:

; 1756 : 		{
; 1757 : 			for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  00182	8b 4d b8	 mov	 ecx, DWORD PTR _nHash$1$[ebp]
  00185	41		 inc	 ecx
  00186	89 4d b8	 mov	 DWORD PTR _nHash$1$[ebp], ecx
  00189	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  0018c	0f 82 ce fe ff
	ff		 jb	 $LL4@Serialize

; 1781 : 		{
; 1782 : 			KEY newKey[1];
; 1783 : 			VALUE newValue[1];
; 1784 : 			SerializeElements<KEY>(ar, newKey, 1);
; 1785 : 			SerializeElements<VALUE>(ar, newValue, 1);
; 1786 : 			SetAt(newKey[0], newValue[0]);
; 1787 : 		}
; 1788 : 	}
; 1789 : }

  00192	5f		 pop	 edi
  00193	5e		 pop	 esi
  00194	5b		 pop	 ebx
  00195	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00198	33 cd		 xor	 ecx, ebp
  0019a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0019f	8b e5		 mov	 esp, ebp
  001a1	5d		 pop	 ebp
  001a2	c2 04 00	 ret	 4
$LN10@Serialize:

; 1771 : 					SerializeElements<KEY>(ar, pKey, 1);
; 1772 : 					SerializeElements<VALUE>(ar, pValue, 1);
; 1773 : 				}
; 1774 : 			}
; 1775 : 		}
; 1776 : 	}
; 1777 : 	else
; 1778 : 	{
; 1779 : 		DWORD_PTR nNewCount = ar.ReadCount();

  001a5	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount

; 1780 : 		while (nNewCount--)

  001aa	85 c0		 test	 eax, eax
  001ac	0f 84 7b 01 00
	00		 je	 $LN129@Serialize
$LL8@Serialize:
  001b2	48		 dec	 eax
  001b3	89 45 a8	 mov	 DWORD PTR _nNewCount$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  001b6	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  001b9	f7 d0		 not	 eax
  001bb	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  001bd	74 41		 je	 SHORT $LN67@Serialize

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  001bf	b8 01 00 00 00	 mov	 eax, 1

; 79   : 		pData = pElements;

  001c4	8d 4d a0	 lea	 ecx, DWORD PTR _newKey$5[ebp]
  001c7	89 45 b8	 mov	 DWORD PTR _nElementsLeft$1$[ebp], eax
  001ca	89 4d b0	 mov	 DWORD PTR _pData$1$[ebp], ecx
  001cd	0f 1f 00	 npad	 3
$LL62@Serialize:

; 80   : 		while( nElementsLeft > 0 )
; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  001d0	bf ff ff ff 1f	 mov	 edi, 536870911		; 1fffffffH
  001d5	3b c7		 cmp	 eax, edi
  001d7	0f 42 f8	 cmovb	 edi, eax

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  001da	8d 34 bd 00 00
	00 00		 lea	 esi, DWORD PTR [edi*4]
  001e1	56		 push	 esi
  001e2	51		 push	 ecx
  001e3	8b cb		 mov	 ecx, ebx
  001e5	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  001ea	8b 45 b8	 mov	 eax, DWORD PTR _nElementsLeft$1$[ebp]

; 87   : 			pData += nElementsToWrite;

  001ed	8b 4d b0	 mov	 ecx, DWORD PTR _pData$1$[ebp]
  001f0	2b c7		 sub	 eax, edi
  001f2	03 ce		 add	 ecx, esi
  001f4	89 45 b8	 mov	 DWORD PTR _nElementsLeft$1$[ebp], eax
  001f7	89 4d b0	 mov	 DWORD PTR _pData$1$[ebp], ecx
  001fa	85 c0		 test	 eax, eax
  001fc	75 d2		 jne	 SHORT $LL62@Serialize

; 88   : 		}
; 89   : 	}

  001fe	eb 45		 jmp	 SHORT $LN81@Serialize
$LN67@Serialize:

; 96   : 		pData = pElements;

  00200	8d 55 a0	 lea	 edx, DWORD PTR _newKey$5[ebp]
  00203	be 01 00 00 00	 mov	 esi, 1
  00208	89 55 b8	 mov	 DWORD PTR _pData$1$[ebp], edx
  0020b	0f 1f 44 00 00	 npad	 5
$LL64@Serialize:

; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00210	bf ff ff ff 1f	 mov	 edi, 536870911		; 1fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00215	8b cb		 mov	 ecx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00217	3b f7		 cmp	 esi, edi
  00219	0f 42 fe	 cmovb	 edi, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0021c	8d 04 bd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00223	50		 push	 eax
  00224	52		 push	 edx
  00225	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0022a	8d 0c bd 00 00
	00 00		 lea	 ecx, DWORD PTR [edi*4]
  00231	3b c1		 cmp	 eax, ecx
  00233	0f 85 0c 01 00
	00		 jne	 $LN112@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 104  : 			pData += nElementsToRead;

  00239	8b 55 b8	 mov	 edx, DWORD PTR _pData$1$[ebp]
  0023c	03 d1		 add	 edx, ecx
  0023e	89 55 b8	 mov	 DWORD PTR _pData$1$[ebp], edx
  00241	2b f7		 sub	 esi, edi
  00243	75 cb		 jne	 SHORT $LL64@Serialize
$LN81@Serialize:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00245	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  00248	8d 4d bc	 lea	 ecx, DWORD PTR _newValue$6[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  0024b	f7 d0		 not	 eax
  0024d	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  0024f	74 3d		 je	 SHORT $LN87@Serialize

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  00251	b8 01 00 00 00	 mov	 eax, 1

; 79   : 		pData = pElements;

  00256	89 4d b0	 mov	 DWORD PTR _pData$1$[ebp], ecx
  00259	89 45 b8	 mov	 DWORD PTR _nElementsLeft$1$[ebp], eax
  0025c	0f 1f 40 00	 npad	 4
$LL82@Serialize:

; 80   : 		while( nElementsLeft > 0 )
; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00260	bf ff ff ff 01	 mov	 edi, 33554431		; 01ffffffH
  00265	3b c7		 cmp	 eax, edi
  00267	0f 42 f8	 cmovb	 edi, eax

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0026a	8b f7		 mov	 esi, edi
  0026c	c1 e6 06	 shl	 esi, 6
  0026f	56		 push	 esi
  00270	51		 push	 ecx
  00271	8b cb		 mov	 ecx, ebx
  00273	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  00278	8b 45 b8	 mov	 eax, DWORD PTR _nElementsLeft$1$[ebp]

; 87   : 			pData += nElementsToWrite;

  0027b	8b 4d b0	 mov	 ecx, DWORD PTR _pData$1$[ebp]
  0027e	2b c7		 sub	 eax, edi
  00280	03 ce		 add	 ecx, esi
  00282	89 45 b8	 mov	 DWORD PTR _nElementsLeft$1$[ebp], eax
  00285	89 4d b0	 mov	 DWORD PTR _pData$1$[ebp], ecx
  00288	85 c0		 test	 eax, eax
  0028a	75 d4		 jne	 SHORT $LL82@Serialize

; 88   : 		}
; 89   : 	}

  0028c	eb 38		 jmp	 SHORT $LN85@Serialize
$LN87@Serialize:

; 90   : 	else
; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  0028e	be 01 00 00 00	 mov	 esi, 1

; 96   : 		pData = pElements;

  00293	89 4d b8	 mov	 DWORD PTR _pData$1$[ebp], ecx
$LL84@Serialize:

; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00296	b8 ff ff ff 01	 mov	 eax, 33554431		; 01ffffffH
  0029b	3b f0		 cmp	 esi, eax
  0029d	0f 42 c6	 cmovb	 eax, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  002a0	8b f8		 mov	 edi, eax
  002a2	89 45 a4	 mov	 DWORD PTR _nElementsToRead$1$[ebp], eax
  002a5	c1 e7 06	 shl	 edi, 6
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  002a8	57		 push	 edi
  002a9	51		 push	 ecx
  002aa	8b cb		 mov	 ecx, ebx
  002ac	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  002b1	3b c7		 cmp	 eax, edi
  002b3	0f 85 8c 00 00
	00		 jne	 $LN112@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 104  : 			pData += nElementsToRead;

  002b9	8b 4d b8	 mov	 ecx, DWORD PTR _pData$1$[ebp]
  002bc	03 cf		 add	 ecx, edi
  002be	89 4d b8	 mov	 DWORD PTR _pData$1$[ebp], ecx
  002c1	2b 75 a4	 sub	 esi, DWORD PTR _nElementsToRead$1$[ebp]
  002c4	75 d0		 jne	 SHORT $LL84@Serialize
$LN85@Serialize:

; 1350 : 	{ (*this)[key] = newValue; }

  002c6	0f 10 45 bc	 movups	 xmm0, XMMWORD PTR _newValue$6[ebp]
  002ca	8b 4d 9c	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  002cd	ff 75 a0	 push	 DWORD PTR _newKey$5[ebp]
  002d0	0f 11 45 8c	 movups	 XMMWORD PTR $T4[ebp], xmm0
  002d4	0f 10 45 cc	 movups	 xmm0, XMMWORD PTR _newValue$6[ebp+16]
  002d8	0f 11 85 7c ff
	ff ff		 movups	 XMMWORD PTR $T3[ebp], xmm0
  002df	0f 10 45 dc	 movups	 xmm0, XMMWORD PTR _newValue$6[ebp+32]
  002e3	0f 11 85 6c ff
	ff ff		 movups	 XMMWORD PTR $T2[ebp], xmm0
  002ea	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR _newValue$6[ebp+48]
  002ee	0f 11 85 5c ff
	ff ff		 movups	 XMMWORD PTR $T1[ebp], xmm0
  002f5	e8 00 00 00 00	 call	 ??A?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QAEAAUColor_Font@CTreeCtrlEx@@PAX@Z ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::operator[]
  002fa	0f 10 45 8c	 movups	 xmm0, XMMWORD PTR $T4[ebp]
  002fe	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00301	0f 10 85 7c ff
	ff ff		 movups	 xmm0, XMMWORD PTR $T3[ebp]
  00308	0f 11 40 10	 movups	 XMMWORD PTR [eax+16], xmm0
  0030c	0f 10 85 6c ff
	ff ff		 movups	 xmm0, XMMWORD PTR $T2[ebp]
  00313	0f 11 40 20	 movups	 XMMWORD PTR [eax+32], xmm0
  00317	0f 10 85 5c ff
	ff ff		 movups	 xmm0, XMMWORD PTR $T1[ebp]
  0031e	0f 11 40 30	 movups	 XMMWORD PTR [eax+48], xmm0

; 1780 : 		while (nNewCount--)

  00322	8b 45 a8	 mov	 eax, DWORD PTR _nNewCount$1$[ebp]
  00325	85 c0		 test	 eax, eax
  00327	0f 85 85 fe ff
	ff		 jne	 $LL8@Serialize
$LN129@Serialize:

; 1781 : 		{
; 1782 : 			KEY newKey[1];
; 1783 : 			VALUE newValue[1];
; 1784 : 			SerializeElements<KEY>(ar, newKey, 1);
; 1785 : 			SerializeElements<VALUE>(ar, newValue, 1);
; 1786 : 			SetAt(newKey[0], newValue[0]);
; 1787 : 		}
; 1788 : 	}
; 1789 : }

  0032d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00330	5f		 pop	 edi
  00331	5e		 pop	 esi
  00332	33 cd		 xor	 ecx, ebp
  00334	5b		 pop	 ebx
  00335	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0033a	8b e5		 mov	 esp, ebp
  0033c	5d		 pop	 ebp
  0033d	c2 04 00	 ret	 4
$LN114@Serialize:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00340	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN112@Serialize:

; 1781 : 		{
; 1782 : 			KEY newKey[1];
; 1783 : 			VALUE newValue[1];
; 1784 : 			SerializeElements<KEY>(ar, newKey, 1);
; 1785 : 			SerializeElements<VALUE>(ar, newValue, 1);
; 1786 : 			SetAt(newKey[0], newValue[0]);
; 1787 : 		}
; 1788 : 	}
; 1789 : }

  00345	6a 00		 push	 0
  00347	6a 03		 push	 3
  00349	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN158@Serialize:
  0034e	cc		 int	 3
?Serialize@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAEXAAVCArchive@@@Z ENDP ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAE@XZ PROC ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::~CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>, COMDAT
; _this$ = ecx

; 1472 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 1446 : 	if (m_pHashTable != NULL)

  00025	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 1472 : {

  00028	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@6B@

; 1446 : 	if (m_pHashTable != NULL)

  0002e	85 c0		 test	 eax, eax
  00030	74 10		 je	 SHORT $LN10@CMap

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)
; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;
; 1453 : 			  pAssoc = pAssoc->pNext)
; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}
; 1457 : 		}
; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00038	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  0003b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
$LN10@CMap:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;
; 1465 : 	m_pFreeList = NULL;
; 1466 : 	m_pBlocks->FreeDataChain();

  00042	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00045	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  0004c	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00053	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 1467 : 	m_pBlocks = NULL;

  00058	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1473 : 	RemoveAll();
; 1474 : 	ASSERT(m_nCount == 0);
; 1475 : }

  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5e		 pop	 esi
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
  0006f	cc		 int	 3
  00070	cc		 int	 3
  00071	cc		 int	 3
  00072	cc		 int	 3
  00073	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@UAE@XZ ENDP ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::~CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?GetAssocAt@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@IBEPAVCAssoc@1@PAXAAI1@Z
_TEXT	SEGMENT
_key$ = 8						; size = 4
_nHashBucket$ = 12					; size = 4
_nHashValue$ = 16					; size = 4
?GetAssocAt@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@IBEPAVCAssoc@1@PAXAAI1@Z PROC ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::GetAssocAt, COMDAT
; _this$ = ecx

; 1532 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 165  : 	ldiv_t HashVal = ldiv((long)(ARG_KEY)key, 127773);

  00006	b9 1d f3 01 00	 mov	 ecx, 127773		; 0001f31dH

; 1532 : {

  0000b	57		 push	 edi

; 165  : 	ldiv_t HashVal = ldiv((long)(ARG_KEY)key, 127773);

  0000c	8b 7d 08	 mov	 edi, DWORD PTR _key$[ebp]
  0000f	8b c7		 mov	 eax, edi
  00011	99		 cdq
  00012	f7 f9		 idiv	 ecx

; 166  : 	HashVal.rem = 16807 * HashVal.rem - 2836 * HashVal.quot;

  00014	69 c0 14 0b 00
	00		 imul	 eax, eax, 2836
  0001a	69 ca a7 41 00
	00		 imul	 ecx, edx, 16807
  00020	2b c8		 sub	 ecx, eax

; 1533 : 	nHashValue = HashKey<ARG_KEY>(key);

  00022	8d 81 ff ff ff
	7f		 lea	 eax, DWORD PTR [ecx+2147483647]
  00028	0f 49 c1	 cmovns	 eax, ecx
  0002b	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]

; 1534 : 	nHashBucket = nHashValue % m_nHashTableSize;

  0002e	33 d2		 xor	 edx, edx
  00030	89 01		 mov	 DWORD PTR [ecx], eax
  00032	f7 76 08	 div	 DWORD PTR [esi+8]
  00035	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  00038	89 10		 mov	 DWORD PTR [eax], edx

; 1535 : 
; 1536 : 	if (m_pHashTable == NULL)

  0003a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0003d	85 c0		 test	 eax, eax
  0003f	74 1f		 je	 SHORT $LN26@GetAssocAt

; 1537 : 		return NULL;
; 1538 : 
; 1539 : 	// see if it exists
; 1540 : 	CAssoc* pAssoc;
; 1541 : 	for (pAssoc = m_pHashTable[nHashBucket]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00041	8b 04 90	 mov	 eax, DWORD PTR [eax+edx*4]
  00044	85 c0		 test	 eax, eax
  00046	74 18		 je	 SHORT $LN26@GetAssocAt

; 1542 : 	{
; 1543 : 		if (pAssoc->nHashValue == nHashValue && CompareElements(&pAssoc->key, &key))

  00048	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0004a	66 0f 1f 44 00
	00		 npad	 6
$LL4@GetAssocAt:
  00050	39 48 48	 cmp	 DWORD PTR [eax+72], ecx
  00053	75 04		 jne	 SHORT $LN2@GetAssocAt

; 156  : 	return *pElement1 == *pElement2;

  00055	39 38		 cmp	 DWORD PTR [eax], edi

; 1542 : 	{
; 1543 : 		if (pAssoc->nHashValue == nHashValue && CompareElements(&pAssoc->key, &key))

  00057	74 09		 je	 SHORT $LN1@GetAssocAt
$LN2@GetAssocAt:

; 1537 : 		return NULL;
; 1538 : 
; 1539 : 	// see if it exists
; 1540 : 	CAssoc* pAssoc;
; 1541 : 	for (pAssoc = m_pHashTable[nHashBucket]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00059	8b 40 44	 mov	 eax, DWORD PTR [eax+68]
  0005c	85 c0		 test	 eax, eax
  0005e	75 f0		 jne	 SHORT $LL4@GetAssocAt
$LN26@GetAssocAt:

; 1544 : 			return pAssoc;
; 1545 : 	}
; 1546 : 	return NULL;

  00060	33 c0		 xor	 eax, eax
$LN1@GetAssocAt:
  00062	5f		 pop	 edi

; 1547 : }

  00063	5e		 pop	 esi
  00064	5d		 pop	 ebp
  00065	c2 0c 00	 ret	 12			; 0000000cH
?GetAssocAt@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@IBEPAVCAssoc@1@PAXAAI1@Z ENDP ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::GetAssocAt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?NewAssoc@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@IAEPAVCAssoc@1@PAX@Z
_TEXT	SEGMENT
_key$ = 8						; size = 4
?NewAssoc@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@IAEPAVCAssoc@1@PAX@Z PROC ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::NewAssoc, COMDAT
; _this$ = ecx

; 1480 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 1481 : 	if (m_pFreeList == NULL)

  00008	83 7f 10 00	 cmp	 DWORD PTR [edi+16], 0
  0000c	75 33		 jne	 SHORT $LN7@NewAssoc

; 1482 : 	{
; 1483 : 		// add another block
; 1484 : 		CPlex* newBlock = CPlex::Create(m_pBlocks, m_nBlockSize, sizeof(CMap::CAssoc));

  0000e	6a 4c		 push	 76			; 0000004cH
  00010	ff 77 18	 push	 DWORD PTR [edi+24]
  00013	8d 47 14	 lea	 eax, DWORD PTR [edi+20]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 1485 : 		// chain them into free list
; 1486 : 		CMap::CAssoc* pAssoc = (CMap::CAssoc*) newBlock->data();
; 1487 : 		// free in reverse order to make it easier to debug
; 1488 : 		pAssoc += m_nBlockSize - 1;

  0001c	8b 57 18	 mov	 edx, DWORD PTR [edi+24]
  0001f	83 c0 08	 add	 eax, 8
  00022	6b ca 4c	 imul	 ecx, edx, 76
  00025	83 c1 b4	 add	 ecx, -76		; ffffffb4H
  00028	03 c1		 add	 eax, ecx

; 1489 : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pAssoc--)

  0002a	83 c2 ff	 add	 edx, -1
  0002d	78 12		 js	 SHORT $LN7@NewAssoc
  0002f	90		 npad	 1
$LL4@NewAssoc:

; 1490 : 		{
; 1491 : 			pAssoc->pNext = m_pFreeList;

  00030	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00033	89 48 44	 mov	 DWORD PTR [eax+68], ecx

; 1492 : 			m_pFreeList = pAssoc;

  00036	89 47 10	 mov	 DWORD PTR [edi+16], eax
  00039	83 e8 4c	 sub	 eax, 76			; 0000004cH
  0003c	83 ea 01	 sub	 edx, 1
  0003f	79 ef		 jns	 SHORT $LL4@NewAssoc
$LN7@NewAssoc:

; 1493 : 		}
; 1494 : 	}
; 1495 : 	ENSURE(m_pFreeList != NULL);  // we must have something

  00041	8b 5f 10	 mov	 ebx, DWORD PTR [edi+16]
  00044	85 db		 test	 ebx, ebx
  00046	74 2d		 je	 SHORT $LN21@NewAssoc

; 1496 : 
; 1497 : 	CMap::CAssoc* pAssoc = m_pFreeList;
; 1498 : 
; 1499 : 	// zero the memory
; 1500 : 	CMap::CAssoc* pTemp = pAssoc->pNext;

  00048	8b 73 44	 mov	 esi, DWORD PTR [ebx+68]

; 1501 : 	memset( pAssoc, 0, sizeof(CMap::CAssoc) );

  0004b	6a 4c		 push	 76			; 0000004cH
  0004d	6a 00		 push	 0
  0004f	53		 push	 ebx
  00050	e8 00 00 00 00	 call	 _memset

; 1502 : 	pAssoc->pNext = pTemp;

  00055	89 73 44	 mov	 DWORD PTR [ebx+68], esi
  00058	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1503 : 
; 1504 : 	m_pFreeList = m_pFreeList->pNext;

  0005b	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]

; 1505 : 	m_nCount++;
; 1506 : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 1507 : #pragma push_macro("new")
; 1508 : #undef new
; 1509 : 	::new(pAssoc) CMap::CAssoc(key);
; 1510 : #pragma pop_macro("new")
; 1511 : 	return pAssoc;

  0005e	8b c3		 mov	 eax, ebx
  00060	8b 49 44	 mov	 ecx, DWORD PTR [ecx+68]
  00063	ff 47 0c	 inc	 DWORD PTR [edi+12]
  00066	89 4f 10	 mov	 DWORD PTR [edi+16], ecx

; 1256 : 		CPair( ARG_KEY keyval ) : key( keyval )	{}

  00069	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]

; 1505 : 	m_nCount++;
; 1506 : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 1507 : #pragma push_macro("new")
; 1508 : #undef new
; 1509 : 	::new(pAssoc) CMap::CAssoc(key);
; 1510 : #pragma pop_macro("new")
; 1511 : 	return pAssoc;

  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi

; 1256 : 		CPair( ARG_KEY keyval ) : key( keyval )	{}

  0006e	89 0b		 mov	 DWORD PTR [ebx], ecx

; 1505 : 	m_nCount++;
; 1506 : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 1507 : #pragma push_macro("new")
; 1508 : #undef new
; 1509 : 	::new(pAssoc) CMap::CAssoc(key);
; 1510 : #pragma pop_macro("new")
; 1511 : 	return pAssoc;

  00070	5b		 pop	 ebx

; 1512 : }

  00071	5d		 pop	 ebp
  00072	c2 04 00	 ret	 4
$LN21@NewAssoc:

; 1493 : 		}
; 1494 : 	}
; 1495 : 	ENSURE(m_pFreeList != NULL);  // we must have something

  00075	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN19@NewAssoc:
  0007a	cc		 int	 3
?NewAssoc@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@IAEPAVCAssoc@1@PAX@Z ENDP ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::NewAssoc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?InitHashTable@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QAEXIH@Z
_TEXT	SEGMENT
_nHashSize$ = 8						; size = 4
_bAllocNow$ = 12					; size = 4
?InitHashTable@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QAEXIH@Z PROC ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::InitHashTable, COMDAT
; _this$ = ecx

; 1420 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi

; 1421 : 	ASSERT_VALID(this);
; 1422 : 	ASSERT(m_nCount == 0);
; 1423 : 	ASSERT(nHashSize > 0);
; 1424 : 
; 1425 : 	if (m_pHashTable != NULL)

  00007	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000a	85 c0		 test	 eax, eax
  0000c	74 10		 je	 SHORT $LN5@InitHashTa

; 1426 : 	{
; 1427 : 		// free hash table
; 1428 : 		delete[] m_pHashTable;

  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00014	83 c4 04	 add	 esp, 4

; 1429 : 		m_pHashTable = NULL;

  00017	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
$LN5@InitHashTa:

; 1430 : 	}
; 1431 : 
; 1432 : 	if (bAllocNow)

  0001e	83 7d 0c 00	 cmp	 DWORD PTR _bAllocNow$[ebp], 0
  00022	8b 7d 08	 mov	 edi, DWORD PTR _nHashSize$[ebp]
  00025	74 37		 je	 SHORT $LN6@InitHashTa

; 1433 : 	{
; 1434 : 		m_pHashTable = new CAssoc* [nHashSize];

  00027	33 c9		 xor	 ecx, ecx
  00029	8b c7		 mov	 eax, edi
  0002b	ba 04 00 00 00	 mov	 edx, 4
  00030	f7 e2		 mul	 edx
  00032	0f 90 c1	 seto	 cl
  00035	f7 d9		 neg	 ecx
  00037	0b c8		 or	 ecx, eax
  00039	51		 push	 ecx
  0003a	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0003f	8b c8		 mov	 ecx, eax
  00041	83 c4 04	 add	 esp, 4
  00044	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1435 : 		ENSURE(m_pHashTable != NULL);

  00047	85 c9		 test	 ecx, ecx
  00049	74 1c		 je	 SHORT $LN11@InitHashTa

; 1436 : 		memset(m_pHashTable, 0, sizeof(CAssoc*) * nHashSize);

  0004b	8d 04 bd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*4]
  00052	50		 push	 eax
  00053	6a 00		 push	 0
  00055	51		 push	 ecx
  00056	e8 00 00 00 00	 call	 _memset
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@InitHashTa:

; 1437 : 	}
; 1438 : 	m_nHashTableSize = nHashSize;

  0005e	89 7e 08	 mov	 DWORD PTR [esi+8], edi
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi

; 1439 : }

  00063	5d		 pop	 ebp
  00064	c2 08 00	 ret	 8
$LN11@InitHashTa:

; 1435 : 		ENSURE(m_pHashTable != NULL);

  00067	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN9@InitHashTa:
  0006c	cc		 int	 3
?InitHashTable@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QAEXIH@Z ENDP ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::InitHashTable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QAEXXZ PROC ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::RemoveAll, COMDAT
; _this$ = ecx

; 1443 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1444 : 	ASSERT_VALID(this);
; 1445 : 
; 1446 : 	if (m_pHashTable != NULL)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 10		 je	 SHORT $LN8@RemoveAll

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)
; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;
; 1453 : 			  pAssoc = pAssoc->pNext)
; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}
; 1457 : 		}
; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00010	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
$LN8@RemoveAll:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;
; 1465 : 	m_pFreeList = NULL;
; 1466 : 	m_pBlocks->FreeDataChain();

  0001a	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0001d	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00024	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0002b	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 1467 : 	m_pBlocks = NULL;

  00030	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00037	5e		 pop	 esi

; 1468 : }

  00038	c3		 ret	 0
?RemoveAll@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QAEXXZ ENDP ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??A?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QAEAAUColor_Font@CTreeCtrlEx@@PAX@Z
_TEXT	SEGMENT
_nHashBucket$ = -8					; size = 4
_nHashValue$ = -4					; size = 4
_key$ = 8						; size = 4
??A?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QAEAAUColor_Font@CTreeCtrlEx@@PAX@Z PROC ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::operator[], COMDAT
; _this$ = ecx

; 1585 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1586 : 	ASSERT_VALID(this);
; 1587 : 
; 1588 : 	UINT nHashBucket, nHashValue;
; 1589 : 	CAssoc* pAssoc;
; 1590 : 	if ((pAssoc = GetAssocAt(key, nHashBucket, nHashValue)) == NULL)

  00006	8d 45 fc	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	50		 push	 eax
  0000c	8d 45 f8	 lea	 eax, DWORD PTR _nHashBucket$[ebp]
  0000f	8b f1		 mov	 esi, ecx
  00011	50		 push	 eax
  00012	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00015	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@IBEPAVCAssoc@1@PAXAAI1@Z ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::GetAssocAt
  0001a	8b d8		 mov	 ebx, eax
  0001c	85 db		 test	 ebx, ebx
  0001e	0f 85 d8 00 00
	00		 jne	 $LN5@operator

; 1591 : 	{
; 1592 : 		if (m_pHashTable == NULL)

  00024	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00027	57		 push	 edi
  00028	85 c0		 test	 eax, eax
  0002a	75 49		 jne	 SHORT $LN39@operator

; 1593 : 			InitHashTable(m_nHashTableSize);

  0002c	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]

; 1434 : 		m_pHashTable = new CAssoc* [nHashSize];

  0002f	33 c9		 xor	 ecx, ecx
  00031	8b c7		 mov	 eax, edi
  00033	ba 04 00 00 00	 mov	 edx, 4
  00038	f7 e2		 mul	 edx
  0003a	0f 90 c1	 seto	 cl
  0003d	f7 d9		 neg	 ecx
  0003f	0b c8		 or	 ecx, eax
  00041	51		 push	 ecx
  00042	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00047	83 c4 04	 add	 esp, 4
  0004a	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1435 : 		ENSURE(m_pHashTable != NULL);

  0004d	85 c0		 test	 eax, eax
  0004f	0f 84 b2 00 00
	00		 je	 $LN36@operator

; 1436 : 		memset(m_pHashTable, 0, sizeof(CAssoc*) * nHashSize);

  00055	8d 0c bd 00 00
	00 00		 lea	 ecx, DWORD PTR [edi*4]
  0005c	51		 push	 ecx
  0005d	53		 push	 ebx
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 _memset

; 1437 : 	}
; 1438 : 	m_nHashTableSize = nHashSize;

  00064	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00067	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006a	89 7e 08	 mov	 DWORD PTR [esi+8], edi

; 1594 : 
; 1595 : 		ENSURE(m_pHashTable);

  0006d	85 c0		 test	 eax, eax
  0006f	0f 84 92 00 00
	00		 je	 $LN36@operator
$LN39@operator:

; 1481 : 	if (m_pFreeList == NULL)

  00075	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00079	75 36		 jne	 SHORT $LN24@operator

; 1482 : 	{
; 1483 : 		// add another block
; 1484 : 		CPlex* newBlock = CPlex::Create(m_pBlocks, m_nBlockSize, sizeof(CMap::CAssoc));

  0007b	6a 4c		 push	 76			; 0000004cH
  0007d	ff 76 18	 push	 DWORD PTR [esi+24]
  00080	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 1485 : 		// chain them into free list
; 1486 : 		CMap::CAssoc* pAssoc = (CMap::CAssoc*) newBlock->data();
; 1487 : 		// free in reverse order to make it easier to debug
; 1488 : 		pAssoc += m_nBlockSize - 1;

  00089	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  0008c	83 c0 08	 add	 eax, 8
  0008f	6b ca 4c	 imul	 ecx, edx, 76
  00092	83 c1 b4	 add	 ecx, -76		; ffffffb4H
  00095	03 c8		 add	 ecx, eax

; 1489 : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pAssoc--)

  00097	83 c2 ff	 add	 edx, -1
  0009a	78 15		 js	 SHORT $LN24@operator
  0009c	0f 1f 40 00	 npad	 4
$LL21@operator:

; 1490 : 		{
; 1491 : 			pAssoc->pNext = m_pFreeList;

  000a0	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000a3	89 41 44	 mov	 DWORD PTR [ecx+68], eax

; 1492 : 			m_pFreeList = pAssoc;

  000a6	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
  000a9	83 e9 4c	 sub	 ecx, 76			; 0000004cH
  000ac	83 ea 01	 sub	 edx, 1
  000af	79 ef		 jns	 SHORT $LL21@operator
$LN24@operator:

; 1493 : 		}
; 1494 : 	}
; 1495 : 	ENSURE(m_pFreeList != NULL);  // we must have something

  000b1	8b 5e 10	 mov	 ebx, DWORD PTR [esi+16]
  000b4	85 db		 test	 ebx, ebx
  000b6	74 4f		 je	 SHORT $LN36@operator

; 1496 : 
; 1497 : 	CMap::CAssoc* pAssoc = m_pFreeList;
; 1498 : 
; 1499 : 	// zero the memory
; 1500 : 	CMap::CAssoc* pTemp = pAssoc->pNext;

  000b8	8b 7b 44	 mov	 edi, DWORD PTR [ebx+68]

; 1501 : 	memset( pAssoc, 0, sizeof(CMap::CAssoc) );

  000bb	6a 4c		 push	 76			; 0000004cH
  000bd	6a 00		 push	 0
  000bf	53		 push	 ebx
  000c0	e8 00 00 00 00	 call	 _memset

; 1502 : 	pAssoc->pNext = pTemp;

  000c5	89 7b 44	 mov	 DWORD PTR [ebx+68], edi
  000c8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1503 : 
; 1504 : 	m_pFreeList = m_pFreeList->pNext;

  000cb	8b 46 10	 mov	 eax, DWORD PTR [esi+16]

; 1603 : 		m_pHashTable[nHashBucket] = pAssoc;

  000ce	5f		 pop	 edi

; 1504 : 	m_pFreeList = m_pFreeList->pNext;

  000cf	8b 40 44	 mov	 eax, DWORD PTR [eax+68]

; 1505 : 	m_nCount++;

  000d2	ff 46 0c	 inc	 DWORD PTR [esi+12]
  000d5	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 1256 : 		CPair( ARG_KEY keyval ) : key( keyval )	{}

  000d8	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  000db	89 03		 mov	 DWORD PTR [ebx], eax

; 1596 : 		// it doesn't exist, add a new Association
; 1597 : 		pAssoc = NewAssoc(key);
; 1598 : 		pAssoc->nHashValue = nHashValue;

  000dd	8b 45 fc	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  000e0	89 43 48	 mov	 DWORD PTR [ebx+72], eax

; 1599 : 		//'pAssoc->value' is a constructed object, nothing more
; 1600 : 
; 1601 : 		// put into hash table
; 1602 : 		pAssoc->pNext = m_pHashTable[nHashBucket];

  000e3	8b 45 f8	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  000e6	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  000ed	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000f0	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  000f3	89 43 44	 mov	 DWORD PTR [ebx+68], eax

; 1603 : 		m_pHashTable[nHashBucket] = pAssoc;

  000f6	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000f9	89 1c 01	 mov	 DWORD PTR [ecx+eax], ebx
$LN5@operator:

; 1604 : 	}
; 1605 : 	return pAssoc->value;  // return new reference

  000fc	5e		 pop	 esi
  000fd	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00100	5b		 pop	 ebx

; 1606 : }

  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 04 00	 ret	 4
$LN36@operator:

; 1495 : 	ENSURE(m_pFreeList != NULL);  // we must have something

  00107	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN37@operator:
  0010c	cc		 int	 3
??A?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QAEAAUColor_Font@CTreeCtrlEx@@PAX@Z ENDP ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?Lookup@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QBEHPAXAAUColor_Font@CTreeCtrlEx@@@Z
_TEXT	SEGMENT
_nHashBucket$ = -8					; size = 4
_nHashValue$ = -4					; size = 4
_key$ = 8						; size = 4
_rValue$ = 12						; size = 4
?Lookup@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QBEHPAXAAUColor_Font@CTreeCtrlEx@@@Z PROC ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::Lookup, COMDAT
; _this$ = ecx

; 1551 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1552 : 	ASSERT_VALID(this);
; 1553 : 
; 1554 : 	UINT nHashBucket, nHashValue;
; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  00006	8d 45 fc	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00009	50		 push	 eax
  0000a	8d 45 f8	 lea	 eax, DWORD PTR _nHashBucket$[ebp]
  0000d	50		 push	 eax
  0000e	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00011	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@IBEPAVCAssoc@1@PAXAAI1@Z ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::GetAssocAt
  00016	8b c8		 mov	 ecx, eax

; 1556 : 	if (pAssoc == NULL)

  00018	85 c9		 test	 ecx, ecx
  0001a	75 06		 jne	 SHORT $LN2@Lookup

; 1561 : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
$LN2@Lookup:

; 1557 : 		return FALSE;  // not in map
; 1558 : 
; 1559 : 	rValue = pAssoc->value;

  00022	8b 45 0c	 mov	 eax, DWORD PTR _rValue$[ebp]
  00025	0f 10 41 04	 movups	 xmm0, XMMWORD PTR [ecx+4]
  00029	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  0002c	0f 10 41 14	 movups	 xmm0, XMMWORD PTR [ecx+20]
  00030	0f 11 40 10	 movups	 XMMWORD PTR [eax+16], xmm0
  00034	0f 10 41 24	 movups	 xmm0, XMMWORD PTR [ecx+36]
  00038	0f 11 40 20	 movups	 XMMWORD PTR [eax+32], xmm0
  0003c	0f 10 41 34	 movups	 xmm0, XMMWORD PTR [ecx+52]
  00040	0f 11 40 30	 movups	 XMMWORD PTR [eax+48], xmm0

; 1560 : 	return TRUE;

  00044	b8 01 00 00 00	 mov	 eax, 1

; 1561 : }

  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 08 00	 ret	 8
?Lookup@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QBEHPAXAAUColor_Font@CTreeCtrlEx@@@Z ENDP ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::Lookup
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QAE@H@Z
_TEXT	SEGMENT
_nBlockSize$ = 8					; size = 4
??0?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QAE@H@Z PROC ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>, COMDAT
; _this$ = ecx

; 1403 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1404 : 	ASSERT(nBlockSize > 0);
; 1405 : 
; 1406 : 	m_pHashTable = NULL;
; 1407 : 	m_nHashTableSize = 17;  // default size
; 1408 : 	m_nCount = 0;
; 1409 : 	m_pFreeList = NULL;
; 1410 : 	m_pBlocks = NULL;
; 1411 : 	m_nBlockSize = nBlockSize;

  00003	8b 45 08	 mov	 eax, DWORD PTR _nBlockSize$[ebp]
  00006	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 1412 : }

  00009	8b c1		 mov	 eax, ecx
  0000b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@6B@
  00011	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00018	c7 41 08 11 00
	00 00		 mov	 DWORD PTR [ecx+8], 17	; 00000011H
  0001f	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00026	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  0002d	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
??0?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QAE@H@Z ENDP ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
;	COMDAT ?GetItemColor@CTreeCtrlEx@@QAEKPAU_TREEITEM@@@Z
_TEXT	SEGMENT
_cf$ = -72						; size = 64
_nHashBucket$1 = -8					; size = 4
_nHashValue$2 = -4					; size = 4
_hItem$ = 8						; size = 4
?GetItemColor@CTreeCtrlEx@@QAEKPAU_TREEITEM@@@Z PROC	; CTreeCtrlEx::GetItemColor, COMDAT
; _this$ = ecx

; 85   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  00006	8d 45 fc	 lea	 eax, DWORD PTR _nHashValue$2[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 88   : 	if(!m_mapColorFont.Lookup(hItem, cf))

  00009	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  0000f	50		 push	 eax
  00010	8d 45 f8	 lea	 eax, DWORD PTR _nHashBucket$1[ebp]
  00013	50		 push	 eax
  00014	ff 75 08	 push	 DWORD PTR _hItem$[ebp]
  00017	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@IBEPAVCAssoc@1@PAXAAI1@Z ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::GetAssocAt

; 1556 : 	if (pAssoc == NULL)

  0001c	85 c0		 test	 eax, eax
  0001e	74 21		 je	 SHORT $LN7@GetItemCol

; 1559 : 	rValue = pAssoc->value;

  00020	0f 10 40 14	 movups	 xmm0, XMMWORD PTR [eax+20]
  00024	0f 11 45 c8	 movups	 XMMWORD PTR _cf$[ebp+16], xmm0
  00028	0f 10 40 24	 movups	 xmm0, XMMWORD PTR [eax+36]
  0002c	0f 11 45 d8	 movups	 XMMWORD PTR _cf$[ebp+32], xmm0
  00030	0f 10 40 34	 movups	 xmm0, XMMWORD PTR [eax+52]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 90   : 	return cf.color;

  00034	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1559 : 	rValue = pAssoc->value;

  00037	0f 11 45 e8	 movups	 XMMWORD PTR _cf$[ebp+48], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 92   : }

  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 04 00	 ret	 4
$LN7@GetItemCol:

; 89   : 		return (COLORREF) - 1;

  00041	83 c8 ff	 or	 eax, -1

; 92   : }

  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
?GetItemColor@CTreeCtrlEx@@QAEKPAU_TREEITEM@@@Z ENDP	; CTreeCtrlEx::GetItemColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
;	COMDAT ?GetItemBold@CTreeCtrlEx@@QAEHPAU_TREEITEM@@@Z
_TEXT	SEGMENT
_hItem$ = 8						; size = 4
?GetItemBold@CTreeCtrlEx@@QAEHPAU_TREEITEM@@@Z PROC	; CTreeCtrlEx::GetItemBold, COMDAT
; _this$ = ecx

; 79   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 80   : 	return GetItemState(hItem, TVIS_BOLD) & TVIS_BOLD;

  00003	6a 10		 push	 16			; 00000010H
  00005	ff 75 08	 push	 DWORD PTR _hItem$[ebp]
  00008	e8 00 00 00 00	 call	 ?GetItemState@CTreeCtrl@@QBEIPAU_TREEITEM@@I@Z ; CTreeCtrl::GetItemState
  0000d	83 e0 10	 and	 eax, 16			; 00000010H

; 81   : }

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?GetItemBold@CTreeCtrlEx@@QAEHPAU_TREEITEM@@@Z ENDP	; CTreeCtrlEx::GetItemBold
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
;	COMDAT ?GetItemFont@CTreeCtrlEx@@QAEHPAU_TREEITEM@@PAUtagLOGFONTA@@@Z
_TEXT	SEGMENT
_cf$ = -72						; size = 64
_nHashBucket$1 = -8					; size = 4
_nHashValue$2 = -4					; size = 4
_hItem$ = 8						; size = 4
_plogfont$ = 12						; size = 4
?GetItemFont@CTreeCtrlEx@@QAEHPAU_TREEITEM@@PAUtagLOGFONTA@@@Z PROC ; CTreeCtrlEx::GetItemFont, COMDAT
; _this$ = ecx

; 66   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  00006	8d 45 fc	 lea	 eax, DWORD PTR _nHashValue$2[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 68   : 	if(!m_mapColorFont.Lookup(hItem, cf))

  00009	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  0000f	50		 push	 eax
  00010	8d 45 f8	 lea	 eax, DWORD PTR _nHashBucket$1[ebp]
  00013	50		 push	 eax
  00014	ff 75 08	 push	 DWORD PTR _hItem$[ebp]
  00017	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@IBEPAVCAssoc@1@PAXAAI1@Z ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::GetAssocAt

; 1556 : 	if (pAssoc == NULL)

  0001c	85 c0		 test	 eax, eax
  0001e	74 5d		 je	 SHORT $LN9@GetItemFon

; 1559 : 	rValue = pAssoc->value;

  00020	0f 10 40 04	 movups	 xmm0, XMMWORD PTR [eax+4]
  00024	0f 10 48 24	 movups	 xmm1, XMMWORD PTR [eax+36]
  00028	0f 11 45 b8	 movups	 XMMWORD PTR _cf$[ebp], xmm0
  0002c	0f 10 40 14	 movups	 xmm0, XMMWORD PTR [eax+20]
  00030	0f 11 4d d8	 movups	 XMMWORD PTR _cf$[ebp+32], xmm1
  00034	0f 11 45 c8	 movups	 XMMWORD PTR _cf$[ebp+16], xmm0
  00038	0f 10 40 34	 movups	 xmm0, XMMWORD PTR [eax+52]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 70   : 	if(cf.logfont.lfFaceName[0] == '\0') 

  0003c	66 0f 7e c8	 movd	 eax, xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1559 : 	rValue = pAssoc->value;

  00040	0f 11 45 e8	 movups	 XMMWORD PTR _cf$[ebp+48], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 70   : 	if(cf.logfont.lfFaceName[0] == '\0') 

  00044	84 c0		 test	 al, al
  00046	74 35		 je	 SHORT $LN9@GetItemFon

; 72   : 	*plogfont = cf.logfont;

  00048	8b 4d 0c	 mov	 ecx, DWORD PTR _plogfont$[ebp]
  0004b	0f 10 45 bc	 movups	 xmm0, XMMWORD PTR _cf$[ebp+4]
  0004f	8b 45 f4	 mov	 eax, DWORD PTR _cf$[ebp+60]
  00052	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  00055	0f 10 45 cc	 movups	 xmm0, XMMWORD PTR _cf$[ebp+20]
  00059	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0
  0005d	0f 10 45 dc	 movups	 xmm0, XMMWORD PTR _cf$[ebp+36]
  00061	0f 11 41 20	 movups	 XMMWORD PTR [ecx+32], xmm0
  00065	f3 0f 7e 45 ec	 movq	 xmm0, QWORD PTR _cf$[ebp+52]
  0006a	66 0f d6 41 30	 movq	 QWORD PTR [ecx+48], xmm0
  0006f	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 73   : 	return TRUE;

  00072	b8 01 00 00 00	 mov	 eax, 1

; 74   : 
; 75   : }

  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 08 00	 ret	 8
$LN9@GetItemFon:

; 71   : 		return FALSE;

  0007d	33 c0		 xor	 eax, eax

; 74   : 
; 75   : }

  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 08 00	 ret	 8
?GetItemFont@CTreeCtrlEx@@QAEHPAU_TREEITEM@@PAUtagLOGFONTA@@@Z ENDP ; CTreeCtrlEx::GetItemFont
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
;	COMDAT ?SetItemColor@CTreeCtrlEx@@QAEXPAU_TREEITEM@@K@Z
_TEXT	SEGMENT
_cf$ = -120						; size = 64
_cf$3$ = -56						; size = 16
_cf$2$ = -40						; size = 16
_cf$1$ = -24						; size = 16
_nHashBucket$1 = -8					; size = 4
_nHashValue$2 = -4					; size = 4
_hItem$ = 8						; size = 4
_color$ = 12						; size = 4
?SetItemColor@CTreeCtrlEx@@QAEXPAU_TREEITEM@@K@Z PROC	; CTreeCtrlEx::SetItemColor, COMDAT
; _this$ = ecx

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  00006	8d 45 fc	 lea	 eax, DWORD PTR _nHashValue$2[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 56   : {

  00009	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  0000a	50		 push	 eax
  0000b	8d 45 f8	 lea	 eax, DWORD PTR _nHashBucket$1[ebp]
  0000e	50		 push	 eax
  0000f	ff 75 08	 push	 DWORD PTR _hItem$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 58   : 	if(!m_mapColorFont.Lookup(hItem, cf))

  00012	8d b1 8c 00 00
	00		 lea	 esi, DWORD PTR [ecx+140]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  00018	8b ce		 mov	 ecx, esi
  0001a	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@IBEPAVCAssoc@1@PAXAAI1@Z ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::GetAssocAt

; 1556 : 	if (pAssoc == NULL)

  0001f	85 c0		 test	 eax, eax
  00021	74 22		 je	 SHORT $LN7@SetItemCol

; 1557 : 		return FALSE;  // not in map
; 1558 : 
; 1559 : 	rValue = pAssoc->value;

  00023	0f 10 40 04	 movups	 xmm0, XMMWORD PTR [eax+4]
  00027	0f 11 45 88	 movups	 XMMWORD PTR _cf$[ebp], xmm0
  0002b	0f 10 40 14	 movups	 xmm0, XMMWORD PTR [eax+20]
  0002f	0f 11 45 e8	 movups	 XMMWORD PTR _cf$1$[ebp], xmm0
  00033	0f 10 40 24	 movups	 xmm0, XMMWORD PTR [eax+36]
  00037	0f 11 45 d8	 movups	 XMMWORD PTR _cf$2$[ebp], xmm0
  0003b	0f 10 40 34	 movups	 xmm0, XMMWORD PTR [eax+52]
  0003f	0f 11 45 c8	 movups	 XMMWORD PTR _cf$3$[ebp], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 58   : 	if(!m_mapColorFont.Lookup(hItem, cf))

  00043	eb 1c		 jmp	 SHORT $LN2@SetItemCol
$LN7@SetItemCol:

; 59   : 		cf.logfont.lfFaceName[0] = '\0';

  00045	0f 10 45 b8	 movups	 xmm0, XMMWORD PTR _cf$[ebp+48]
  00049	c6 45 a8 00	 mov	 BYTE PTR _cf$[ebp+32], 0
  0004d	0f 11 45 c8	 movups	 XMMWORD PTR _cf$3$[ebp], xmm0
  00051	0f 10 45 a8	 movups	 xmm0, XMMWORD PTR _cf$[ebp+32]
  00055	0f 11 45 d8	 movups	 XMMWORD PTR _cf$2$[ebp], xmm0
  00059	0f 10 45 98	 movups	 xmm0, XMMWORD PTR _cf$[ebp+16]
  0005d	0f 11 45 e8	 movups	 XMMWORD PTR _cf$1$[ebp], xmm0
$LN2@SetItemCol:

; 60   : 	cf.color = color;

  00061	8b 45 0c	 mov	 eax, DWORD PTR _color$[ebp]

; 61   : 	m_mapColorFont[hItem] = cf;

  00064	8b ce		 mov	 ecx, esi
  00066	ff 75 08	 push	 DWORD PTR _hItem$[ebp]
  00069	89 45 88	 mov	 DWORD PTR _cf$[ebp], eax
  0006c	e8 00 00 00 00	 call	 ??A?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QAEAAUColor_Font@CTreeCtrlEx@@PAX@Z ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::operator[]
  00071	0f 10 45 88	 movups	 xmm0, XMMWORD PTR _cf$[ebp]
  00075	5e		 pop	 esi
  00076	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00079	0f 10 45 e8	 movups	 xmm0, XMMWORD PTR _cf$1$[ebp]
  0007d	0f 11 40 10	 movups	 XMMWORD PTR [eax+16], xmm0
  00081	0f 10 45 d8	 movups	 xmm0, XMMWORD PTR _cf$2$[ebp]
  00085	0f 11 40 20	 movups	 XMMWORD PTR [eax+32], xmm0
  00089	0f 10 45 c8	 movups	 xmm0, XMMWORD PTR _cf$3$[ebp]
  0008d	0f 11 40 30	 movups	 XMMWORD PTR [eax+48], xmm0

; 62   : }

  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c2 08 00	 ret	 8
?SetItemColor@CTreeCtrlEx@@QAEXPAU_TREEITEM@@K@Z ENDP	; CTreeCtrlEx::SetItemColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
;	COMDAT ?SetItemBold@CTreeCtrlEx@@QAEXPAU_TREEITEM@@H@Z
_TEXT	SEGMENT
_hItem$ = 8						; size = 4
_bBold$ = 12						; size = 4
?SetItemBold@CTreeCtrlEx@@QAEXPAU_TREEITEM@@H@Z PROC	; CTreeCtrlEx::SetItemBold, COMDAT
; _this$ = ecx

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 51   : 	SetItemState(hItem, bBold ? TVIS_BOLD: 0, TVIS_BOLD);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _bBold$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl

; 340  : 	{ ASSERT(::IsWindow(m_hWnd)); return SetItem(hItem, TVIF_STATE, NULL, 0, 0, nState, nStateMask, NULL); }

  00006	6a 00		 push	 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 51   : 	SetItemState(hItem, bBold ? TVIS_BOLD: 0, TVIS_BOLD);

  00008	f7 d8		 neg	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl

; 340  : 	{ ASSERT(::IsWindow(m_hWnd)); return SetItem(hItem, TVIF_STATE, NULL, 0, 0, nState, nStateMask, NULL); }

  0000a	6a 10		 push	 16			; 00000010H
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 51   : 	SetItemState(hItem, bBold ? TVIS_BOLD: 0, TVIS_BOLD);

  0000c	1b c0		 sbb	 eax, eax
  0000e	83 e0 10	 and	 eax, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl

; 340  : 	{ ASSERT(::IsWindow(m_hWnd)); return SetItem(hItem, TVIF_STATE, NULL, 0, 0, nState, nStateMask, NULL); }

  00011	50		 push	 eax
  00012	6a 00		 push	 0
  00014	6a 00		 push	 0
  00016	6a 00		 push	 0
  00018	6a 08		 push	 8
  0001a	ff 75 08	 push	 DWORD PTR _hItem$[ebp]
  0001d	e8 00 00 00 00	 call	 ?SetItem@CTreeCtrl@@QAEHPAU_TREEITEM@@IPBDHHIIJ@Z ; CTreeCtrl::SetItem
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 52   : }

  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
?SetItemBold@CTreeCtrlEx@@QAEXPAU_TREEITEM@@H@Z ENDP	; CTreeCtrlEx::SetItemBold
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
;	COMDAT ?SetItemFont@CTreeCtrlEx@@QAEXPAU_TREEITEM@@AAUtagLOGFONTA@@@Z
_TEXT	SEGMENT
_cf$ = -72						; size = 64
_nHashBucket$1 = -8					; size = 4
_nHashValue$2 = -4					; size = 4
_hItem$ = 8						; size = 4
_logfont$ = 12						; size = 4
?SetItemFont@CTreeCtrlEx@@QAEXPAU_TREEITEM@@AAUtagLOGFONTA@@@Z PROC ; CTreeCtrlEx::SetItemFont, COMDAT
; _this$ = ecx

; 40   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  00006	8d 45 fc	 lea	 eax, DWORD PTR _nHashValue$2[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 40   : {

  00009	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  0000a	50		 push	 eax
  0000b	8d 45 f8	 lea	 eax, DWORD PTR _nHashBucket$1[ebp]
  0000e	50		 push	 eax
  0000f	ff 75 08	 push	 DWORD PTR _hItem$[ebp]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 42   : 	if( !m_mapColorFont.Lookup( hItem, cf ) )

  00012	8d b1 8c 00 00
	00		 lea	 esi, DWORD PTR [ecx+140]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  00018	8b ce		 mov	 ecx, esi
  0001a	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@IBEPAVCAssoc@1@PAXAAI1@Z ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::GetAssocAt

; 1556 : 	if (pAssoc == NULL)

  0001f	85 c0		 test	 eax, eax
  00021	74 22		 je	 SHORT $LN7@SetItemFon

; 1557 : 		return FALSE;  // not in map
; 1558 : 
; 1559 : 	rValue = pAssoc->value;

  00023	0f 10 40 04	 movups	 xmm0, XMMWORD PTR [eax+4]
  00027	0f 11 45 b8	 movups	 XMMWORD PTR _cf$[ebp], xmm0
  0002b	0f 10 40 14	 movups	 xmm0, XMMWORD PTR [eax+20]
  0002f	0f 11 45 c8	 movups	 XMMWORD PTR _cf$[ebp+16], xmm0
  00033	0f 10 40 24	 movups	 xmm0, XMMWORD PTR [eax+36]
  00037	0f 11 45 d8	 movups	 XMMWORD PTR _cf$[ebp+32], xmm0
  0003b	0f 10 40 34	 movups	 xmm0, XMMWORD PTR [eax+52]
  0003f	0f 11 45 e8	 movups	 XMMWORD PTR _cf$[ebp+48], xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 42   : 	if( !m_mapColorFont.Lookup( hItem, cf ) )

  00043	eb 07		 jmp	 SHORT $LN2@SetItemFon
$LN7@SetItemFon:

; 43   : 		cf.color = (COLORREF)-1;

  00045	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR _cf$[ebp], -1
$LN2@SetItemFon:

; 44   : 	cf.logfont = logfont;

  0004c	8b 45 0c	 mov	 eax, DWORD PTR _logfont$[ebp]

; 45   : 	m_mapColorFont[hItem] = cf;

  0004f	8b ce		 mov	 ecx, esi
  00051	ff 75 08	 push	 DWORD PTR _hItem$[ebp]
  00054	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00057	0f 11 45 bc	 movups	 XMMWORD PTR _cf$[ebp+4], xmm0
  0005b	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]
  0005f	0f 11 45 cc	 movups	 XMMWORD PTR _cf$[ebp+20], xmm0
  00063	0f 10 40 20	 movups	 xmm0, XMMWORD PTR [eax+32]
  00067	0f 11 45 dc	 movups	 XMMWORD PTR _cf$[ebp+36], xmm0
  0006b	f3 0f 7e 40 30	 movq	 xmm0, QWORD PTR [eax+48]
  00070	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  00073	66 0f d6 45 ec	 movq	 QWORD PTR _cf$[ebp+52], xmm0
  00078	89 45 f4	 mov	 DWORD PTR _cf$[ebp+60], eax
  0007b	e8 00 00 00 00	 call	 ??A?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@QAEAAUColor_Font@CTreeCtrlEx@@PAX@Z ; CMap<void *,void *,CTreeCtrlEx::Color_Font,CTreeCtrlEx::Color_Font &>::operator[]
  00080	0f 10 45 b8	 movups	 xmm0, XMMWORD PTR _cf$[ebp]
  00084	5e		 pop	 esi
  00085	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00088	0f 10 45 c8	 movups	 xmm0, XMMWORD PTR _cf$[ebp+16]
  0008c	0f 11 40 10	 movups	 XMMWORD PTR [eax+16], xmm0
  00090	0f 10 45 d8	 movups	 xmm0, XMMWORD PTR _cf$[ebp+32]
  00094	0f 11 40 20	 movups	 XMMWORD PTR [eax+32], xmm0
  00098	0f 10 45 e8	 movups	 xmm0, XMMWORD PTR _cf$[ebp+48]
  0009c	0f 11 40 30	 movups	 XMMWORD PTR [eax+48], xmm0

; 46   : }

  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 08 00	 ret	 8
?SetItemFont@CTreeCtrlEx@@QAEXPAU_TREEITEM@@AAUtagLOGFONTA@@@Z ENDP ; CTreeCtrlEx::SetItemFont
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
;	COMDAT ??1CTreeCtrlEx@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CTreeCtrlEx@@UAE@XZ PROC				; CTreeCtrlEx::~CTreeCtrlEx, COMDAT
; _this$ = ecx

; 26   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CTreeCtrlEx@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CTreeCtrlEx@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1446 : 	if (m_pHashTable != NULL)

  0002b	8b 86 90 00 00
	00		 mov	 eax, DWORD PTR [esi+144]

; 1472 : {

  00031	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00038	c7 86 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+140], OFFSET ??_7?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@6B@

; 1446 : 	if (m_pHashTable != NULL)

  00042	85 c0		 test	 eax, eax
  00044	74 13		 je	 SHORT $LN13@CTreeCtrlE

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)
; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;
; 1453 : 			  pAssoc = pAssoc->pNext)
; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}
; 1457 : 		}
; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004c	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  0004f	c7 86 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+144], 0
$LN13@CTreeCtrlE:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;
; 1465 : 	m_pFreeList = NULL;
; 1466 : 	m_pBlocks->FreeDataChain();

  00059	8b 8e a0 00 00
	00		 mov	 ecx, DWORD PTR [esi+160]
  0005f	c7 86 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+152], 0
  00069	c7 86 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+156], 0
  00073	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 27   : }

  00078	8b ce		 mov	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1467 : 	m_pBlocks = NULL;

  0007a	c7 86 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+160], 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 27   : }

  00084	e8 00 00 00 00	 call	 ??1CTreeCtrl@@UAE@XZ	; CTreeCtrl::~CTreeCtrl
  00089	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00093	59		 pop	 ecx
  00094	5e		 pop	 esi
  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c3		 ret	 0
  00099	cc		 int	 3
  0009a	cc		 int	 3
  0009b	cc		 int	 3
  0009c	cc		 int	 3
  0009d	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CTreeCtrlEx@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CTreeCtrlEx@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CTreeCtrlEx@@UAE@XZ ENDP				; CTreeCtrlEx::~CTreeCtrlEx
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
;	COMDAT ??0CTreeCtrlEx@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CTreeCtrlEx@@QAE@XZ PROC				; CTreeCtrlEx::CTreeCtrlEx, COMDAT
; _this$ = ecx

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcmn.inl

; 264  : 	{ }

  0000a	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 21   : {

  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CTreeCtrlEx@@6B@

; 23   : }

  00015	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1403 : {

  00017	c7 86 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+140], OFFSET ??_7?$CMap@PAXPAXUColor_Font@CTreeCtrlEx@@AAU12@@@6B@

; 1404 : 	ASSERT(nBlockSize > 0);
; 1405 : 
; 1406 : 	m_pHashTable = NULL;

  00021	c7 86 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+144], 0

; 1407 : 	m_nHashTableSize = 17;  // default size

  0002b	c7 86 94 00 00
	00 11 00 00 00	 mov	 DWORD PTR [esi+148], 17	; 00000011H

; 1408 : 	m_nCount = 0;

  00035	c7 86 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+152], 0

; 1409 : 	m_pFreeList = NULL;

  0003f	c7 86 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+156], 0

; 1410 : 	m_pBlocks = NULL;

  00049	c7 86 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+160], 0

; 1411 : 	m_nBlockSize = nBlockSize;

  00053	c7 86 a4 00 00
	00 0a 00 00 00	 mov	 DWORD PTR [esi+164], 10	; 0000000aH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp

; 22   : 	m_bUseUsrClr = FALSE;

  0005d	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0

; 23   : }

  00067	5e		 pop	 esi
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??0CTreeCtrlEx@@QAE@XZ ENDP				; CTreeCtrlEx::CTreeCtrlEx
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
;	COMDAT ?GetRuntimeClass@CTreeCtrlEx@@UBEPAUCRuntimeClass@@XZ
_TEXT	SEGMENT
?GetRuntimeClass@CTreeCtrlEx@@UBEPAUCRuntimeClass@@XZ PROC ; CTreeCtrlEx::GetRuntimeClass, COMDAT
; _this$ = ecx

; 30   : IMPLEMENT_DYNAMIC(CTreeCtrlEx, CTreeCtrl)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?classCTreeCtrlEx@CTreeCtrlEx@@2UCRuntimeClass@@B ; CTreeCtrlEx::classCTreeCtrlEx
  00005	c3		 ret	 0
?GetRuntimeClass@CTreeCtrlEx@@UBEPAUCRuntimeClass@@XZ ENDP ; CTreeCtrlEx::GetRuntimeClass
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
;	COMDAT ?GetThisClass@CTreeCtrlEx@@SGPAUCRuntimeClass@@XZ
_TEXT	SEGMENT
?GetThisClass@CTreeCtrlEx@@SGPAUCRuntimeClass@@XZ PROC	; CTreeCtrlEx::GetThisClass, COMDAT

; 30   : IMPLEMENT_DYNAMIC(CTreeCtrlEx, CTreeCtrl)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?classCTreeCtrlEx@CTreeCtrlEx@@2UCRuntimeClass@@B ; CTreeCtrlEx::classCTreeCtrlEx
  00005	c3		 ret	 0
?GetThisClass@CTreeCtrlEx@@SGPAUCRuntimeClass@@XZ ENDP	; CTreeCtrlEx::GetThisClass
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
;	COMDAT ?_GetBaseClass@CTreeCtrlEx@@KGPAUCRuntimeClass@@XZ
_TEXT	SEGMENT
?_GetBaseClass@CTreeCtrlEx@@KGPAUCRuntimeClass@@XZ PROC	; CTreeCtrlEx::_GetBaseClass, COMDAT

; 30   : IMPLEMENT_DYNAMIC(CTreeCtrlEx, CTreeCtrl)

  00000	e9 00 00 00 00	 jmp	 ?GetThisClass@CTreeCtrl@@SGPAUCRuntimeClass@@XZ ; CTreeCtrl::GetThisClass
?_GetBaseClass@CTreeCtrlEx@@KGPAUCRuntimeClass@@XZ ENDP	; CTreeCtrlEx::_GetBaseClass
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCTreeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTreeCtrl@@UAEPAXI@Z PROC				; CTreeCtrl::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CTreeCtrl@@UAE@XZ	; CTreeCtrl::~CTreeCtrl
  0000b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0000e	a8 01		 test	 al, 1
  00010	74 22		 je	 SHORT $LN9@scalar
  00012	a8 04		 test	 al, 4
  00014	75 10		 jne	 SHORT $LN3@scalar

; 112  : 	{ ::operator delete(p); }

  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001c	83 c4 04	 add	 esp, 4
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
$LN3@scalar:
  00026	68 80 00 00 00	 push	 128			; 00000080H
  0002b	56		 push	 esi
  0002c	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00031	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00034	8b c6		 mov	 eax, esi
  00036	5e		 pop	 esi
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
??_GCTreeCtrl@@UAEPAXI@Z ENDP				; CTreeCtrl::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
?EndModalState@CWnd@@UAEXXZ PROC			; CWnd::EndModalState, COMDAT
; _this$ = ecx

; 567  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	6a 01		 push	 1
  00002	ff 71 20	 push	 DWORD PTR [ecx+32]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  0000b	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
?BeginModalState@CWnd@@UAEXXZ PROC			; CWnd::BeginModalState, COMDAT
; _this$ = ecx

; 565  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	6a 00		 push	 0
  00002	ff 71 20	 push	 DWORD PTR [ecx+32]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  0000b	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin2.inl
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC	; CWnd::DoDataExchange, COMDAT
; _this$ = ecx

; 561  : 	{ } // default does nothing

  00000	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCRgn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCRgn@@UAEPAXI@Z PROC				; CRgn::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 266  : 	{ }

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CRgn@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  00011	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00014	a8 01		 test	 al, 1
  00016	74 1f		 je	 SHORT $LN12@scalar
  00018	a8 04		 test	 al, 4
  0001a	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
$LN3@scalar:
  0002c	6a 08		 push	 8
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00034	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00037	8b c6		 mov	 eax, esi
  00039	5e		 pop	 esi
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
??_GCRgn@@UAEPAXI@Z ENDP				; CRgn::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ??1CRgn@@UAE@XZ
_TEXT	SEGMENT
??1CRgn@@UAE@XZ PROC					; CRgn::~CRgn, COMDAT
; _this$ = ecx

; 266  : 	{ }

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CRgn@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
??1CRgn@@UAE@XZ ENDP					; CRgn::~CRgn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBitmap@@UAEPAXI@Z PROC				; CBitmap::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 179  : 	{ }

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBitmap@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  00011	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00014	a8 01		 test	 al, 1
  00016	74 1f		 je	 SHORT $LN12@scalar
  00018	a8 04		 test	 al, 4
  0001a	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
$LN3@scalar:
  0002c	6a 08		 push	 8
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00034	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00037	8b c6		 mov	 eax, esi
  00039	5e		 pop	 esi
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
??_GCBitmap@@UAEPAXI@Z ENDP				; CBitmap::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT
??1CBitmap@@UAE@XZ PROC					; CBitmap::~CBitmap, COMDAT
; _this$ = ecx

; 179  : 	{ }

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBitmap@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
??1CBitmap@@UAE@XZ ENDP					; CBitmap::~CBitmap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCFont@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCFont@@UAEPAXI@Z PROC				; CFont::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl

; 155  : 	{ }

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CFont@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  00011	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00014	a8 01		 test	 al, 1
  00016	74 1f		 je	 SHORT $LN12@scalar
  00018	a8 04		 test	 al, 4
  0001a	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
$LN3@scalar:
  0002c	6a 08		 push	 8
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00034	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00037	8b c6		 mov	 eax, esi
  00039	5e		 pop	 esi
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
??_GCFont@@UAEPAXI@Z ENDP				; CFont::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ??1CFont@@UAE@XZ
_TEXT	SEGMENT
??1CFont@@UAE@XZ PROC					; CFont::~CFont, COMDAT
; _this$ = ecx

; 155  : 	{ }

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CFont@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
??1CFont@@UAE@XZ ENDP					; CFont::~CFont
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGdiObject@@UAEPAXI@Z PROC				; CGdiObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  0000b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0000e	a8 01		 test	 al, 1
  00010	74 1f		 je	 SHORT $LN9@scalar
  00012	a8 04		 test	 al, 4
  00014	75 10		 jne	 SHORT $LN3@scalar

; 112  : 	{ ::operator delete(p); }

  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001c	83 c4 04	 add	 esp, 4
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
$LN3@scalar:
  00026	6a 08		 push	 8
  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002e	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00031	8b c6		 mov	 eax, esi
  00033	5e		 pop	 esi
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
??_GCGdiObject@@UAEPAXI@Z ENDP				; CGdiObject::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxwin1.inl
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT
_pException$2 = -540					; size = 4
_strMsg$3 = -536					; size = 4
_szErrorMessage$4 = -532				; size = 512
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
??1CGdiObject@@UAE@XZ PROC				; CGdiObject::~CGdiObject, COMDAT
; _this$ = ecx

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGdiObject@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 10 02 00
	00		 sub	 esp, 528		; 00000210H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00031	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CGdiObject@@6B@

; 75   : 	AFX_BEGIN_DESTRUCTOR

  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 76   : 	DeleteObject();

  0003e	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject
$LN18@CGdiObject:

; 78   : }

  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00054	33 cd		 xor	 ecx, ebp
  00056	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
__catch$??1CGdiObject@@UAE@XZ$0:

; 77   : 	AFX_END_DESTRUCTOR

  0005f	8d 8d e8 fd ff
	ff		 lea	 ecx, DWORD PTR _strMsg$3[ebp]
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0006b	8b b5 e4 fd ff
	ff		 mov	 esi, DWORD PTR _pException$2[ebp]
  00071	8d 8d ec fd ff
	ff		 lea	 ecx, DWORD PTR _szErrorMessage$4[ebp]
  00077	6a 00		 push	 0
  00079	68 00 02 00 00	 push	 512			; 00000200H
  0007e	51		 push	 ecx
  0007f	8b 06		 mov	 eax, DWORD PTR [esi]
  00081	8b ce		 mov	 ecx, esi
  00083	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00087	ff 50 14	 call	 DWORD PTR [eax+20]
  0008a	85 c0		 test	 eax, eax
  0008c	74 2a		 je	 SHORT $LN9@CGdiObject
  0008e	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _szErrorMessage$4[ebp]
  00094	50		 push	 eax
  00095	6a 4d		 push	 77			; 0000004dH
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@
  000a1	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _strMsg$3[ebp]
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HBOOMJBF@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ?6?$CFTs@
  000ac	50		 push	 eax
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  000b3	83 c4 18	 add	 esp, 24			; 00000018H
  000b6	eb 21		 jmp	 SHORT $LN10@CGdiObject
$LN9@CGdiObject:
  000b8	6a 4d		 push	 77			; 0000004dH
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_0HD@JJCHHHNK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@OIEOKIDM@Exception?5thrown?5in?5destructor@
  000c4	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _strMsg$3[ebp]
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OMEMOKLE@?$CFTs?5?$CI?$CFTs?3?$CFd?$CJ@
  000cf	50		 push	 eax
  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  000d6	83 c4 14	 add	 esp, 20			; 00000014H
$LN10@CGdiObject:
  000d9	6a 00		 push	 0
  000db	6a 00		 push	 0
  000dd	ff b5 e8 fd ff
	ff		 push	 DWORD PTR _strMsg$3[ebp]
  000e3	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox
  000e8	8d 8d e8 fd ff
	ff		 lea	 ecx, DWORD PTR _strMsg$3[ebp]
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000f4	8b 06		 mov	 eax, DWORD PTR [esi]
  000f6	8b ce		 mov	 ecx, esi
  000f8	6a 01		 push	 1
  000fa	ff 50 04	 call	 DWORD PTR [eax+4]
  000fd	b8 00 00 00 00	 mov	 eax, $LN18@CGdiObject
  00102	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CGdiObject@@UAE@XZ$2:
  00000	8d 8d e8 fd ff
	ff		 lea	 ecx, DWORD PTR _strMsg$3[ebp]
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$??1CGdiObject@@UAE@XZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 8a e0 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-544]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGdiObject@@UAE@XZ
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGdiObject@@UAE@XZ ENDP				; CGdiObject::~CGdiObject
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC		; CObject::Dump, COMDAT
; _this$ = ecx

; 122  : 	{ /* no dumping in release builds */ }

  00000	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
?AssertValid@CObject@@UBEXXZ PROC			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 120  : 	{ /* no asserts in release builds */ }

  00000	c2 00 00	 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC		; CObject::Serialize, COMDAT
; _this$ = ecx

; 106  : 	{ /* CObject does not serialize anything by default */ }

  00000	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT
??1CObject@@UAE@XZ PROC					; CObject::~CObject, COMDAT
; _this$ = ecx

; 104  : 	{ }

  00000	c2 00 00	 ret	 0
??1CObject@@UAE@XZ ENDP					; CObject::~CObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcDrfn\Chart\MULTICHART\control\TreeCtrlEx.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
