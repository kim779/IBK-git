; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\AddInManager\ChartStyleDataController.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1CObject@@UAE@XZ				; CObject::~CObject
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	??0CChartStyleDataController@@QAE@PAVCMainBlock@@PAVCIndicatorList@@@Z ; CChartStyleDataController::CChartStyleDataController
PUBLIC	?GetStyleData_Indicator@CChartStyleDataController@@QBEXAAVCStyleData@@@Z ; CChartStyleDataController::GetStyleData_Indicator
PUBLIC	?SetStyleData_Indicator@CChartStyleDataController@@QAEXABVCStyleData@@@Z ; CChartStyleDataController::SetStyleData_Indicator
PUBLIC	?GetPriceGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z ; CChartStyleDataController::GetPriceGraphColor
PUBLIC	?SetPriceGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z ; CChartStyleDataController::SetPriceGraphColor
PUBLIC	?GetPriceMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z ; CChartStyleDataController::GetPriceMAGraphColor
PUBLIC	?SetPriceMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z ; CChartStyleDataController::SetPriceMAGraphColor
PUBLIC	?GetVolumeGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z ; CChartStyleDataController::GetVolumeGraphColor
PUBLIC	?SetVolumeGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z ; CChartStyleDataController::SetVolumeGraphColor
PUBLIC	?GetVolumeMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z ; CChartStyleDataController::GetVolumeMAGraphColor
PUBLIC	?SetVolumeMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z ; CChartStyleDataController::SetVolumeMAGraphColor
PUBLIC	??0CIndicatorList@@QAE@ABV0@@Z			; CIndicatorList::CIndicatorList
PUBLIC	??4CIndicatorList@@QAEAAV0@ABV0@@Z		; CIndicatorList::operator=
PUBLIC	??_GCIndicatorList@@UAEPAXI@Z			; CIndicatorList::`scalar deleting destructor'
PUBLIC	??_ECIndicatorList@@UAEPAXI@Z			; CIndicatorList::`vector deleting destructor'
PUBLIC	??0CIndicatorInfo@@QAE@ABV0@@Z			; CIndicatorInfo::CIndicatorInfo
PUBLIC	??4CIndicatorInfo@@QAEAAV0@ABV0@@Z		; CIndicatorInfo::operator=
PUBLIC	??_GCIndicatorInfo@@UAEPAXI@Z			; CIndicatorInfo::`scalar deleting destructor'
PUBLIC	??_ECIndicatorInfo@@UAEPAXI@Z			; CIndicatorInfo::`vector deleting destructor'
PUBLIC	??0?$CList@PAVCGraphColor@@PAV1@@@QAE@H@Z	; CList<CGraphColor *,CGraphColor *>::CList<CGraphColor *,CGraphColor *>
PUBLIC	?AddTail@?$CList@PAVCGraphColor@@PAV1@@@QAEPAU__POSITION@@PAVCGraphColor@@@Z ; CList<CGraphColor *,CGraphColor *>::AddTail
PUBLIC	?RemoveAll@?$CList@PAVCGraphColor@@PAV1@@@QAEXXZ ; CList<CGraphColor *,CGraphColor *>::RemoveAll
PUBLIC	?NewNode@?$CList@PAVCGraphColor@@PAV1@@@IAEPAUCNode@1@PAU21@0@Z ; CList<CGraphColor *,CGraphColor *>::NewNode
PUBLIC	??1?$CList@PAVCGraphColor@@PAV1@@@UAE@XZ	; CList<CGraphColor *,CGraphColor *>::~CList<CGraphColor *,CGraphColor *>
PUBLIC	?Serialize@?$CList@PAVCGraphColor@@PAV1@@@UAEXAAVCArchive@@@Z ; CList<CGraphColor *,CGraphColor *>::Serialize
PUBLIC	??_G?$CList@PAVCGraphColor@@PAV1@@@UAEPAXI@Z	; CList<CGraphColor *,CGraphColor *>::`scalar deleting destructor'
PUBLIC	??$SerializeElements@PAVCGraphColor@@@@YGXAAVCArchive@@PAPAVCGraphColor@@H@Z ; SerializeElements<CGraphColor *>
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7CIndicatorList@@6B@				; CIndicatorList::`vftable'
PUBLIC	??_7CIndicatorInfo@@6B@				; CIndicatorInfo::`vftable'
PUBLIC	??_7?$CList@PAVCGraphColor@@PAV1@@@6B@		; CList<CGraphColor *,CGraphColor *>::`vftable'
PUBLIC	??_R4CIndicatorList@@6B@			; CIndicatorList::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCIndicatorList@@@8			; CIndicatorList `RTTI Type Descriptor'
PUBLIC	??_R3CIndicatorList@@8				; CIndicatorList::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CIndicatorList@@8				; CIndicatorList::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CIndicatorList@@8			; CIndicatorList::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CIndicatorInfo@@6B@			; CIndicatorInfo::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCIndicatorInfo@@@8			; CIndicatorInfo `RTTI Type Descriptor'
PUBLIC	??_R3CIndicatorInfo@@8				; CIndicatorInfo::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CIndicatorInfo@@8				; CIndicatorInfo::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CIndicatorInfo@@8			; CIndicatorInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CList@PAVCGraphColor@@PAV1@@@6B@		; CList<CGraphColor *,CGraphColor *>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CList@PAVCGraphColor@@PAV1@@@@8	; CList<CGraphColor *,CGraphColor *> `RTTI Type Descriptor'
PUBLIC	??_R3?$CList@PAVCGraphColor@@PAV1@@@8		; CList<CGraphColor *,CGraphColor *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CList@PAVCGraphColor@@PAV1@@@8		; CList<CGraphColor *,CGraphColor *>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CList@PAVCGraphColor@@PAV1@@@8	; CList<CGraphColor *,CGraphColor *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	___std_terminate:PROC
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?AfxThrowArchiveException@@YGXHPBD@Z:PROC	; AfxThrowArchiveException
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CObject::GetRuntimeClass
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	?Read@CArchive@@QAEIPAXI@Z:PROC			; CArchive::Read
EXTRN	?Write@CArchive@@QAEXPBXI@Z:PROC		; CArchive::Write
EXTRN	?ReadCount@CArchive@@QAEKXZ:PROC		; CArchive::ReadCount
EXTRN	?WriteCount@CArchive@@QAEXK@Z:PROC		; CArchive::WriteCount
EXTRN	?Create@CPlex@@SGPAU1@AAPAU1@II@Z:PROC		; CPlex::Create
EXTRN	?FreeDataChain@CPlex@@QAEXXZ:PROC		; CPlex::FreeDataChain
EXTRN	?SetPriceUpColor@CStyleData@@QAEXABK@Z:PROC	; CStyleData::SetPriceUpColor
EXTRN	?SetPriceDownColor@CStyleData@@QAEXABK@Z:PROC	; CStyleData::SetPriceDownColor
EXTRN	?SetPriceEqualColor@CStyleData@@QAEXABK@Z:PROC	; CStyleData::SetPriceEqualColor
EXTRN	?SetPriceUpFill@CStyleData@@QAEXAB_N@Z:PROC	; CStyleData::SetPriceUpFill
EXTRN	?SetPriceDownFill@CStyleData@@QAEXAB_N@Z:PROC	; CStyleData::SetPriceDownFill
EXTRN	?SetTradeUpColor@CStyleData@@QAEXABK@Z:PROC	; CStyleData::SetTradeUpColor
EXTRN	?SetTradeDownColor@CStyleData@@QAEXABK@Z:PROC	; CStyleData::SetTradeDownColor
EXTRN	?SetTradeEqualColor@CStyleData@@QAEXABK@Z:PROC	; CStyleData::SetTradeEqualColor
EXTRN	?SetTradeUpFill@CStyleData@@QAEXAB_N@Z:PROC	; CStyleData::SetTradeUpFill
EXTRN	?SetTradeDownFill@CStyleData@@QAEXAB_N@Z:PROC	; CStyleData::SetTradeDownFill
EXTRN	?SetPriceMAColor@CStyleData@@QAEXHABK@Z:PROC	; CStyleData::SetPriceMAColor
EXTRN	?GetPriceUpColor@CStyleData@@QBEKXZ:PROC	; CStyleData::GetPriceUpColor
EXTRN	?GetPriceDownColor@CStyleData@@QBEKXZ:PROC	; CStyleData::GetPriceDownColor
EXTRN	?GetPriceEqualColor@CStyleData@@QBEKXZ:PROC	; CStyleData::GetPriceEqualColor
EXTRN	?GetPriceUpFill@CStyleData@@QBE_NXZ:PROC	; CStyleData::GetPriceUpFill
EXTRN	?GetPriceDownFill@CStyleData@@QBE_NXZ:PROC	; CStyleData::GetPriceDownFill
EXTRN	?GetTradeUpColor@CStyleData@@QBEKXZ:PROC	; CStyleData::GetTradeUpColor
EXTRN	?GetTradeDownColor@CStyleData@@QBEKXZ:PROC	; CStyleData::GetTradeDownColor
EXTRN	?GetTradeEqualColor@CStyleData@@QBEKXZ:PROC	; CStyleData::GetTradeEqualColor
EXTRN	?GetTradeUpFill@CStyleData@@QBE_NXZ:PROC	; CStyleData::GetTradeUpFill
EXTRN	?GetTradeDownFill@CStyleData@@QBE_NXZ:PROC	; CStyleData::GetTradeDownFill
EXTRN	?GetPriceMACount@CStyleData@@QBEHXZ:PROC	; CStyleData::GetPriceMACount
EXTRN	?GetPriceMAColor@CStyleData@@QBEKH@Z:PROC	; CStyleData::GetPriceMAColor
EXTRN	??1CIndicatorList@@UAE@XZ:PROC			; CIndicatorList::~CIndicatorList
EXTRN	?GetFirstIndicatorInfo@CIndicatorList@@QAEPAVCIndicatorInfo@@W4EIndicatorListType@@PBDPAPAU__POSITION@@@Z:PROC ; CIndicatorList::GetFirstIndicatorInfo
EXTRN	?GetNextIndicatorInfo@CIndicatorList@@QAEXW4EIndicatorListType@@PBDPAPAU__POSITION@@AAPAVCIndicatorInfo@@@Z:PROC ; CIndicatorList::GetNextIndicatorInfo
EXTRN	??1CIndicatorInfo@@UAE@XZ:PROC			; CIndicatorInfo::~CIndicatorInfo
EXTRN	?GetGraphName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:PROC ; CIndicatorInfo::GetGraphName
EXTRN	?GetSubGraphColor_PointerType@CIndicatorInfo@@QBEPAVCGraphColor@@H@Z:PROC ; CIndicatorInfo::GetSubGraphColor_PointerType
EXTRN	?GetSubGraphColorList@CIndicatorInfo@@QBE_NAAV?$CList@PAVCGraphColor@@PAV1@@@@Z:PROC ; CIndicatorInfo::GetSubGraphColorList
EXTRN	__imp_?SetColor1@CGraphColor@@QAEXABK@Z:PROC
EXTRN	__imp_?SetColor3@CGraphColor@@QAEXABK@Z:PROC
EXTRN	__imp_?SetColor5@CGraphColor@@QAEXABK@Z:PROC
EXTRN	__imp_?SetUpGraphFill@CGraphColor@@QAEX_N@Z:PROC
EXTRN	__imp_?SetDownGraphFill@CGraphColor@@QAEX_N@Z:PROC
EXTRN	__imp_?GetColor1@CGraphColor@@QBEKXZ:PROC
EXTRN	__imp_?GetColor3@CGraphColor@@QBEKXZ:PROC
EXTRN	__imp_?GetColor5@CGraphColor@@QBEKXZ:PROC
EXTRN	__imp_?GetUpGraphFill@CGraphColor@@QBE_NXZ:PROC
EXTRN	__imp_?GetDownGraphFill@CGraphColor@@QBE_NXZ:PROC
EXTRN	??_E?$CList@PAVCGraphColor@@PAV1@@@UAEPAXI@Z:PROC ; CList<CGraphColor *,CGraphColor *>::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?g_iMetaTable@@3VIMetaTable@@A:BYTE		; g_iMetaTable
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@?$CList@PAVCGraphColor@@PAV1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CList@PAVCGraphColor@@PAV1@@@8 DD FLAT:??_R0?AV?$CList@PAVCGraphColor@@PAV1@@@@8 ; CList<CGraphColor *,CGraphColor *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CList@PAVCGraphColor@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CList@PAVCGraphColor@@PAV1@@@8
rdata$r	SEGMENT
??_R2?$CList@PAVCGraphColor@@PAV1@@@8 DD FLAT:??_R1A@?0A@EA@?$CList@PAVCGraphColor@@PAV1@@@8 ; CList<CGraphColor *,CGraphColor *>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CList@PAVCGraphColor@@PAV1@@@8
rdata$r	SEGMENT
??_R3?$CList@PAVCGraphColor@@PAV1@@@8 DD 00H		; CList<CGraphColor *,CGraphColor *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CList@PAVCGraphColor@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CList@PAVCGraphColor@@PAV1@@@@8
data$rs	SEGMENT
??_R0?AV?$CList@PAVCGraphColor@@PAV1@@@@8 DD FLAT:??_7type_info@@6B@ ; CList<CGraphColor *,CGraphColor *> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CList@PAVCGraphColor@@PAV1@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CList@PAVCGraphColor@@PAV1@@@6B@
rdata$r	SEGMENT
??_R4?$CList@PAVCGraphColor@@PAV1@@@6B@ DD 00H		; CList<CGraphColor *,CGraphColor *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CList@PAVCGraphColor@@PAV1@@@@8
	DD	FLAT:??_R3?$CList@PAVCGraphColor@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CIndicatorInfo@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CIndicatorInfo@@8 DD FLAT:??_R0?AVCIndicatorInfo@@@8 ; CIndicatorInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CIndicatorInfo@@8
rdata$r	ENDS
;	COMDAT ??_R2CIndicatorInfo@@8
rdata$r	SEGMENT
??_R2CIndicatorInfo@@8 DD FLAT:??_R1A@?0A@EA@CIndicatorInfo@@8 ; CIndicatorInfo::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CIndicatorInfo@@8
rdata$r	SEGMENT
??_R3CIndicatorInfo@@8 DD 00H				; CIndicatorInfo::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CIndicatorInfo@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCIndicatorInfo@@@8
data$rs	SEGMENT
??_R0?AVCIndicatorInfo@@@8 DD FLAT:??_7type_info@@6B@	; CIndicatorInfo `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCIndicatorInfo@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CIndicatorInfo@@6B@
rdata$r	SEGMENT
??_R4CIndicatorInfo@@6B@ DD 00H				; CIndicatorInfo::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCIndicatorInfo@@@8
	DD	FLAT:??_R3CIndicatorInfo@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CIndicatorList@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CIndicatorList@@8 DD FLAT:??_R0?AVCIndicatorList@@@8 ; CIndicatorList::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CIndicatorList@@8
rdata$r	ENDS
;	COMDAT ??_R2CIndicatorList@@8
rdata$r	SEGMENT
??_R2CIndicatorList@@8 DD FLAT:??_R1A@?0A@EA@CIndicatorList@@8 ; CIndicatorList::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CIndicatorList@@8
rdata$r	SEGMENT
??_R3CIndicatorList@@8 DD 00H				; CIndicatorList::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CIndicatorList@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCIndicatorList@@@8
data$rs	SEGMENT
??_R0?AVCIndicatorList@@@8 DD FLAT:??_7type_info@@6B@	; CIndicatorList `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCIndicatorList@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CIndicatorList@@6B@
rdata$r	SEGMENT
??_R4CIndicatorList@@6B@ DD 00H				; CIndicatorList::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCIndicatorList@@@8
	DD	FLAT:??_R3CIndicatorList@@8
rdata$r	ENDS
;	COMDAT ??_7?$CList@PAVCGraphColor@@PAV1@@@6B@
CONST	SEGMENT
??_7?$CList@PAVCGraphColor@@PAV1@@@6B@ DD FLAT:??_R4?$CList@PAVCGraphColor@@PAV1@@@6B@ ; CList<CGraphColor *,CGraphColor *>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CList@PAVCGraphColor@@PAV1@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CList@PAVCGraphColor@@PAV1@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CIndicatorInfo@@6B@
CONST	SEGMENT
??_7CIndicatorInfo@@6B@ DD FLAT:??_R4CIndicatorInfo@@6B@ ; CIndicatorInfo::`vftable'
	DD	FLAT:??_ECIndicatorInfo@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CIndicatorList@@6B@
CONST	SEGMENT
??_7CIndicatorList@@6B@ DD FLAT:??_R4CIndicatorList@@6B@ ; CIndicatorList::`vftable'
	DD	FLAT:??_ECIndicatorList@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$rs	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$rs	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CList@PAVCGraphColor@@PAV1@@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CList@PAVCGraphColor@@PAV1@@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$CList@PAVCGraphColor@@PAV1@@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CList@PAVCGraphColor@@PAV1@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECIndicatorInfo@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECIndicatorList@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetVolumeMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetVolumeMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z$0
__ehfuncinfo$?SetVolumeMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetVolumeMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetVolumeMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetVolumeMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z$0
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?GetVolumeMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetVolumeMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetVolumeGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetVolumeGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z$0
__ehfuncinfo$?SetVolumeGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetVolumeGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetPriceMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetPriceMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z$0
__ehfuncinfo$?SetPriceMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetPriceMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetPriceMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPriceMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z$0
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?GetPriceMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetPriceMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetPriceGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetPriceGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z$0
__ehfuncinfo$?SetPriceGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetPriceGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetStyleData_Indicator@CChartStyleDataController@@QAEXABVCStyleData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetStyleData_Indicator@CChartStyleDataController@@QAEXABVCStyleData@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SetStyleData_Indicator@CChartStyleDataController@@QAEXABVCStyleData@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SetStyleData_Indicator@CChartStyleDataController@@QAEXABVCStyleData@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SetStyleData_Indicator@CChartStyleDataController@@QAEXABVCStyleData@@@Z$3
__ehfuncinfo$?SetStyleData_Indicator@CChartStyleDataController@@QAEXABVCStyleData@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?SetStyleData_Indicator@CChartStyleDataController@@QAEXABVCStyleData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GetStyleData_Indicator@CChartStyleDataController@@QBEXAAVCStyleData@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?GetStyleData_Indicator@CChartStyleDataController@@QBEXAAVCStyleData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GetStyleData_Indicator@CChartStyleDataController@@QBEXAAVCStyleData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetStyleData_Indicator@CChartStyleDataController@@QBEXAAVCStyleData@@@Z$0
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetStyleData_Indicator@CChartStyleDataController@@QBEXAAVCStyleData@@@Z$3
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@PAVCGraphColor@@@@YGXAAVCArchive@@PAPAVCGraphColor@@H@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@PAVCGraphColor@@@@YGXAAVCArchive@@PAPAVCGraphColor@@H@Z PROC ; SerializeElements<CGraphColor *>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b 75 10	 mov	 esi, DWORD PTR _nCount$[ebp]
  0000b	57		 push	 edi
  0000c	85 f6		 test	 esi, esi
  0000e	74 08		 je	 SHORT $LN2@SerializeE
  00010	85 c9		 test	 ecx, ecx
  00012	0f 84 89 00 00
	00		 je	 $LN34@SerializeE
$LN2@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00018	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  0001b	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0001e	f7 d0		 not	 eax
  00020	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  00022	74 3c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;
; 79   : 		pData = pElements;
; 80   : 		while( nElementsLeft > 0 )

  00024	85 f6		 test	 esi, esi
  00026	74 31		 je	 SHORT $LN8@SerializeE
  00028	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL5@SerializeE:

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00030	bb ff ff ff 1f	 mov	 ebx, 536870911		; 1fffffffH
  00035	3b f3		 cmp	 esi, ebx
  00037	0f 42 de	 cmovb	 ebx, esi

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0003a	8d 3c 9d 00 00
	00 00		 lea	 edi, DWORD PTR [ebx*4]
  00041	57		 push	 edi
  00042	51		 push	 ecx
  00043	8b ca		 mov	 ecx, edx
  00045	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;
; 87   : 			pData += nElementsToWrite;

  0004a	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00050	03 cf		 add	 ecx, edi
  00052	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  00055	2b f3		 sub	 esi, ebx
  00057	75 d7		 jne	 SHORT $LL5@SerializeE
$LN8@SerializeE:
  00059	5f		 pop	 edi

; 105  : 		}
; 106  : 	}
; 107  : }

  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	5d		 pop	 ebp
  0005d	c2 0c 00	 ret	 12			; 0000000cH
$LN10@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  00060	85 f6		 test	 esi, esi
  00062	74 f5		 je	 SHORT $LN8@SerializeE
$LL7@SerializeE:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00064	bf ff ff ff 1f	 mov	 edi, 536870911		; 1fffffffH
  00069	3b f7		 cmp	 esi, edi
  0006b	0f 42 fe	 cmovb	 edi, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0006e	8d 1c bd 00 00
	00 00		 lea	 ebx, DWORD PTR [edi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00075	53		 push	 ebx
  00076	51		 push	 ecx
  00077	8b ca		 mov	 ecx, edx
  00079	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0007e	3b c3		 cmp	 eax, ebx
  00080	75 16		 jne	 SHORT $LN23@SerializeE
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  00082	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00085	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;
; 104  : 			pData += nElementsToRead;

  00088	03 cb		 add	 ecx, ebx
  0008a	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  0008d	2b f7		 sub	 esi, edi
  0008f	75 d3		 jne	 SHORT $LL7@SerializeE

; 105  : 		}
; 106  : 	}
; 107  : }

  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	5d		 pop	 ebp
  00095	c2 0c 00	 ret	 12			; 0000000cH
$LN23@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 402  : 		AfxThrowArchiveException(CArchiveException::endOfFile);

  00098	6a 00		 push	 0
  0009a	6a 03		 push	 3
  0009c	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN34@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  000a1	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN32@SerializeE:
  000a6	cc		 int	 3
??$SerializeElements@PAVCGraphColor@@@@YGXAAVCArchive@@PAPAVCGraphColor@@H@Z ENDP ; SerializeElements<CGraphColor *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_G?$CList@PAVCGraphColor@@PAV1@@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CList@PAVCGraphColor@@PAV1@@@UAEPAXI@Z PROC	; CList<CGraphColor *,CGraphColor *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CList@PAVCGraphColor@@PAV1@@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 872  : 	m_pBlocks->FreeDataChain();

  00025	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]

; 878  : {

  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CList@PAVCGraphColor@@PAV1@@@6B@

; 870  : 	m_nCount = 0;

  00035	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  0003c	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00043	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0004a	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 872  : 	m_pBlocks->FreeDataChain();

  00051	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 873  : 	m_pBlocks = NULL;

  00056	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00059	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00060	a8 01		 test	 al, 1
  00062	74 2c		 je	 SHORT $LN22@scalar
  00064	a8 04		 test	 al, 4
  00066	75 1d		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  00068	56		 push	 esi
  00069	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006e	83 c4 04	 add	 esp, 4
  00071	8b c6		 mov	 eax, esi
  00073	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00076	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007d	59		 pop	 ecx
  0007e	5e		 pop	 esi
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
$LN3@scalar:
  00085	6a 1c		 push	 28			; 0000001cH
  00087	56		 push	 esi
  00088	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0008d	83 c4 08	 add	 esp, 8
$LN22@scalar:
  00090	8b c6		 mov	 eax, esi
  00092	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00095	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009c	59		 pop	 ecx
  0009d	5e		 pop	 esi
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 04 00	 ret	 4
  000a4	cc		 int	 3
  000a5	cc		 int	 3
  000a6	cc		 int	 3
  000a7	cc		 int	 3
  000a8	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CList@PAVCGraphColor@@PAV1@@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CList@PAVCGraphColor@@PAV1@@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CList@PAVCGraphColor@@PAV1@@@UAEPAXI@Z ENDP	; CList<CGraphColor *,CGraphColor *>::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CList@PAVCGraphColor@@PAV1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_nNewCount$1$ = -16					; size = 4
_newData$1 = -12					; size = 4
_pData$1$ = -8						; size = 4
_pData$1$ = -8						; size = 4
_pNode$1$ = -8						; size = 4
_nElementsLeft$1$ = -4					; size = 4
_this$1$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CList@PAVCGraphColor@@PAV1@@@UAEXAAVCArchive@@@Z PROC ; CList<CGraphColor *,CGraphColor *>::Serialize, COMDAT
; _this$ = ecx

; 1169 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00009	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1169 : {

  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	89 5d fc	 mov	 DWORD PTR _this$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00011	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00014	f7 d0		 not	 eax
  00016	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1174 : 	if (ar.IsStoring())

  00018	0f 84 ae 00 00
	00		 je	 $LN7@Serialize

; 1175 : 	{
; 1176 : 		ar.WriteCount(m_nCount);

  0001e	ff 73 0c	 push	 DWORD PTR [ebx+12]
  00021	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1177 : 		for (CNode* pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  00026	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00029	89 45 f8	 mov	 DWORD PTR _pNode$1$[ebp], eax
  0002c	85 c0		 test	 eax, eax
  0002e	0f 84 b9 01 00
	00		 je	 $LN86@Serialize
$LL4@Serialize:

; 1178 : 		{
; 1179 : 			ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1180 : 			TYPE* pData;
; 1181 : 			/*
; 1182 : 			 * in some cases the & operator might be overloaded, and we cannot use it to obtain
; 1183 : 			 * the address of a given object.  We then use the following trick to get the address
; 1184 : 			 */
; 1185 : 			pData = reinterpret_cast< TYPE* >( &reinterpret_cast< int& >( static_cast< TYPE& >( pNode->data ) ) );

  00034	8d 70 08	 lea	 esi, DWORD PTR [eax+8]

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00037	85 f6		 test	 esi, esi
  00039	0f 84 c0 01 00
	00		 je	 $LN76@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00042	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00045	f7 d0		 not	 eax
  00047	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  00049	74 33		 je	 SHORT $LN21@Serialize

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0004b	b8 01 00 00 00	 mov	 eax, 1
  00050	89 45 fc	 mov	 DWORD PTR _nElementsLeft$1$[ebp], eax
$LL16@Serialize:

; 80   : 		while( nElementsLeft > 0 )
; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00053	bb ff ff ff 1f	 mov	 ebx, 536870911		; 1fffffffH
  00058	3b c3		 cmp	 eax, ebx
  0005a	0f 42 d8	 cmovb	 ebx, eax

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0005d	8d 3c 9d 00 00
	00 00		 lea	 edi, DWORD PTR [ebx*4]
  00064	57		 push	 edi
  00065	56		 push	 esi
  00066	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  0006b	8b 45 fc	 mov	 eax, DWORD PTR _nElementsLeft$1$[ebp]

; 87   : 			pData += nElementsToWrite;

  0006e	03 f7		 add	 esi, edi
  00070	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00073	2b c3		 sub	 eax, ebx
  00075	89 45 fc	 mov	 DWORD PTR _nElementsLeft$1$[ebp], eax
  00078	85 c0		 test	 eax, eax
  0007a	75 d7		 jne	 SHORT $LL16@Serialize

; 88   : 		}
; 89   : 	}

  0007c	eb 35		 jmp	 SHORT $LN2@Serialize
$LN21@Serialize:

; 90   : 	else
; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  0007e	bf 01 00 00 00	 mov	 edi, 1
$LL18@Serialize:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00083	bb ff ff ff 1f	 mov	 ebx, 536870911		; 1fffffffH
  00088	3b fb		 cmp	 edi, ebx
  0008a	0f 42 df	 cmovb	 ebx, edi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0008d	8d 04 9d 00 00
	00 00		 lea	 eax, DWORD PTR [ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00094	50		 push	 eax
  00095	56		 push	 esi
  00096	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0009b	8d 0c 9d 00 00
	00 00		 lea	 ecx, DWORD PTR [ebx*4]
  000a2	3b c1		 cmp	 eax, ecx
  000a4	0f 85 4c 01 00
	00		 jne	 $LN75@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  000aa	03 f1		 add	 esi, ecx
  000ac	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;

  000af	2b fb		 sub	 edi, ebx
  000b1	75 d0		 jne	 SHORT $LL18@Serialize
$LN2@Serialize:

; 1177 : 		for (CNode* pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  000b3	8b 45 f8	 mov	 eax, DWORD PTR _pNode$1$[ebp]
  000b6	8b 00		 mov	 eax, DWORD PTR [eax]
  000b8	89 45 f8	 mov	 DWORD PTR _pNode$1$[ebp], eax
  000bb	85 c0		 test	 eax, eax
  000bd	0f 85 71 ff ff
	ff		 jne	 $LL4@Serialize

; 1197 : 		}
; 1198 : 	}
; 1199 : }

  000c3	5f		 pop	 edi
  000c4	5e		 pop	 esi
  000c5	5b		 pop	 ebx
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
$LN7@Serialize:

; 1186 : 			SerializeElements<TYPE>(ar, pData, 1);
; 1187 : 		}
; 1188 : 	}
; 1189 : 	else
; 1190 : 	{
; 1191 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000cc	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount

; 1192 : 		while (nNewCount--)

  000d1	85 c0		 test	 eax, eax
  000d3	0f 84 14 01 00
	00		 je	 $LN86@Serialize
  000d9	0f 1f 80 00 00
	00 00		 npad	 7
$LL5@Serialize:
  000e0	48		 dec	 eax
  000e1	89 45 f0	 mov	 DWORD PTR _nNewCount$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  000e4	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  000e7	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000ea	f7 d1		 not	 ecx
  000ec	f6 c1 01	 test	 cl, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  000ef	74 3d		 je	 SHORT $LN42@Serialize

; 79   : 		pData = pElements;

  000f1	8d 4d f4	 lea	 ecx, DWORD PTR _newData$1[ebp]
  000f4	bb 01 00 00 00	 mov	 ebx, 1
  000f9	89 4d f8	 mov	 DWORD PTR _pData$1$[ebp], ecx
  000fc	0f 1f 40 00	 npad	 4
$LL37@Serialize:

; 80   : 		while( nElementsLeft > 0 )
; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00100	bf ff ff ff 1f	 mov	 edi, 536870911		; 1fffffffH
  00105	3b df		 cmp	 ebx, edi
  00107	0f 42 fb	 cmovb	 edi, ebx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0010a	8d 34 bd 00 00
	00 00		 lea	 esi, DWORD PTR [edi*4]
  00111	56		 push	 esi
  00112	51		 push	 ecx
  00113	8b c8		 mov	 ecx, eax
  00115	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 87   : 			pData += nElementsToWrite;

  0011a	8b 4d f8	 mov	 ecx, DWORD PTR _pData$1$[ebp]
  0011d	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00120	03 ce		 add	 ecx, esi
  00122	89 4d f8	 mov	 DWORD PTR _pData$1$[ebp], ecx
  00125	2b df		 sub	 ebx, edi
  00127	75 d7		 jne	 SHORT $LL37@Serialize

; 88   : 		}
; 89   : 	}

  00129	8b 5d fc	 mov	 ebx, DWORD PTR _this$1$[ebp]
  0012c	eb 4a		 jmp	 SHORT $LN40@Serialize
$LN42@Serialize:

; 96   : 		pData = pElements;

  0012e	8d 55 f4	 lea	 edx, DWORD PTR _newData$1[ebp]
  00131	be 01 00 00 00	 mov	 esi, 1
  00136	89 55 f8	 mov	 DWORD PTR _pData$1$[ebp], edx
  00139	0f 1f 80 00 00
	00 00		 npad	 7
$LL39@Serialize:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00140	bf ff ff ff 1f	 mov	 edi, 536870911		; 1fffffffH
  00145	3b f7		 cmp	 esi, edi
  00147	0f 42 fe	 cmovb	 edi, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0014a	8d 0c bd 00 00
	00 00		 lea	 ecx, DWORD PTR [edi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00151	51		 push	 ecx
  00152	52		 push	 edx
  00153	8b c8		 mov	 ecx, eax
  00155	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0015a	8d 0c bd 00 00
	00 00		 lea	 ecx, DWORD PTR [edi*4]
  00161	3b c1		 cmp	 eax, ecx
  00163	0f 85 8d 00 00
	00		 jne	 $LN75@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  00169	8b 55 f8	 mov	 edx, DWORD PTR _pData$1$[ebp]
  0016c	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]

; 104  : 			pData += nElementsToRead;

  0016f	03 d1		 add	 edx, ecx
  00171	89 55 f8	 mov	 DWORD PTR _pData$1$[ebp], edx
  00174	2b f7		 sub	 esi, edi
  00176	75 c8		 jne	 SHORT $LL39@Serialize
$LN40@Serialize:

; 902  : 	if (m_pNodeFree == NULL)

  00178	83 7b 10 00	 cmp	 DWORD PTR [ebx+16], 0

; 1193 : 		{
; 1194 : 			TYPE newData[1];
; 1195 : 			SerializeElements<TYPE>(ar, newData, 1);
; 1196 : 			AddTail(newData[0]);

  0017c	8b 75 f4	 mov	 esi, DWORD PTR _newData$1[ebp]

; 968  : 	CNode* pNewNode = NewNode(m_pNodeTail, NULL);

  0017f	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 902  : 	if (m_pNodeFree == NULL)

  00182	75 32		 jne	 SHORT $LN63@Serialize

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  00184	6a 0c		 push	 12			; 0000000cH
  00186	ff 73 18	 push	 DWORD PTR [ebx+24]
  00189	8d 43 14	 lea	 eax, DWORD PTR [ebx+20]
  0018c	50		 push	 eax
  0018d	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  00192	8b 53 18	 mov	 edx, DWORD PTR [ebx+24]
  00195	83 c0 08	 add	 eax, 8
  00198	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  0019b	83 c2 ff	 add	 edx, -1
  0019e	8d 0c 49	 lea	 ecx, DWORD PTR [ecx+ecx*2]
  001a1	8d 0c 88	 lea	 ecx, DWORD PTR [eax+ecx*4]
  001a4	78 10		 js	 SHORT $LN63@Serialize
$LL60@Serialize:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  001a6	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  001a9	89 01		 mov	 DWORD PTR [ecx], eax

; 915  : 			m_pNodeFree = pNode;

  001ab	89 4b 10	 mov	 DWORD PTR [ebx+16], ecx
  001ae	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  001b1	83 ea 01	 sub	 edx, 1
  001b4	79 f0		 jns	 SHORT $LL60@Serialize
$LN63@Serialize:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  001b6	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  001b9	85 c9		 test	 ecx, ecx
  001bb	74 42		 je	 SHORT $LN76@Serialize

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  001bd	8b 01		 mov	 eax, DWORD PTR [ecx]
  001bf	89 43 10	 mov	 DWORD PTR [ebx+16], eax

; 922  : 	pNode->pPrev = pPrev;

  001c2	89 79 04	 mov	 DWORD PTR [ecx+4], edi

; 923  : 	pNode->pNext = pNext;

  001c5	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 924  : 	m_nCount++;

  001cb	ff 43 0c	 inc	 DWORD PTR [ebx+12]

; 969  : 	pNewNode->data = newElement;

  001ce	89 71 08	 mov	 DWORD PTR [ecx+8], esi

; 970  : 	if (m_pNodeTail != NULL)

  001d1	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  001d4	85 c0		 test	 eax, eax
  001d6	74 04		 je	 SHORT $LN54@Serialize

; 971  : 		m_pNodeTail->pNext = pNewNode;

  001d8	89 08		 mov	 DWORD PTR [eax], ecx
  001da	eb 03		 jmp	 SHORT $LN55@Serialize
$LN54@Serialize:

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;

  001dc	89 4b 04	 mov	 DWORD PTR [ebx+4], ecx
$LN55@Serialize:

; 1192 : 		while (nNewCount--)

  001df	8b 45 f0	 mov	 eax, DWORD PTR _nNewCount$1$[ebp]

; 974  : 	m_pNodeTail = pNewNode;

  001e2	89 4b 08	 mov	 DWORD PTR [ebx+8], ecx

; 1192 : 		while (nNewCount--)

  001e5	85 c0		 test	 eax, eax
  001e7	0f 85 f3 fe ff
	ff		 jne	 $LL5@Serialize
$LN86@Serialize:
  001ed	5f		 pop	 edi

; 1197 : 		}
; 1198 : 	}
; 1199 : }

  001ee	5e		 pop	 esi
  001ef	5b		 pop	 ebx
  001f0	8b e5		 mov	 esp, ebp
  001f2	5d		 pop	 ebp
  001f3	c2 04 00	 ret	 4
$LN75@Serialize:
  001f6	6a 00		 push	 0
  001f8	6a 03		 push	 3
  001fa	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN76@Serialize:
  001ff	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN105@Serialize:
  00204	cc		 int	 3
?Serialize@?$CList@PAVCGraphColor@@PAV1@@@UAEXAAVCArchive@@@Z ENDP ; CList<CGraphColor *,CGraphColor *>::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CList@PAVCGraphColor@@PAV1@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CList@PAVCGraphColor@@PAV1@@@UAE@XZ PROC		; CList<CGraphColor *,CGraphColor *>::~CList<CGraphColor *,CGraphColor *>, COMDAT
; _this$ = ecx

; 878  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CList@PAVCGraphColor@@PAV1@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 872  : 	m_pBlocks->FreeDataChain();

  00025	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]

; 878  : {

  00028	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CList@PAVCGraphColor@@PAV1@@@6B@

; 870  : 	m_nCount = 0;

  0002e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  00035	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0003c	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00043	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 872  : 	m_pBlocks->FreeDataChain();

  0004a	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 873  : 	m_pBlocks = NULL;

  0004f	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 879  : 	RemoveAll();
; 880  : 	ASSERT(m_nCount == 0);
; 881  : }

  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	5e		 pop	 esi
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
  00066	cc		 int	 3
  00067	cc		 int	 3
  00068	cc		 int	 3
  00069	cc		 int	 3
  0006a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CList@PAVCGraphColor@@PAV1@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CList@PAVCGraphColor@@PAV1@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CList@PAVCGraphColor@@PAV1@@@UAE@XZ ENDP		; CList<CGraphColor *,CGraphColor *>::~CList<CGraphColor *,CGraphColor *>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?NewNode@?$CList@PAVCGraphColor@@PAV1@@@IAEPAUCNode@1@PAU21@0@Z
_TEXT	SEGMENT
_pPrev$ = 8						; size = 4
_pNext$ = 12						; size = 4
?NewNode@?$CList@PAVCGraphColor@@PAV1@@@IAEPAUCNode@1@PAU21@0@Z PROC ; CList<CGraphColor *,CGraphColor *>::NewNode, COMDAT
; _this$ = ecx

; 901  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 902  : 	if (m_pNodeFree == NULL)

  00006	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0000a	75 34		 jne	 SHORT $LN7@NewNode

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  0000c	6a 0c		 push	 12			; 0000000cH
  0000e	ff 76 18	 push	 DWORD PTR [esi+24]
  00011	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  0001a	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  0001d	83 c0 08	 add	 eax, 8
  00020	8d 0c 52	 lea	 ecx, DWORD PTR [edx+edx*2]
  00023	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00026	83 c0 f4	 add	 eax, -12		; fffffff4H

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  00029	83 c2 ff	 add	 edx, -1
  0002c	78 12		 js	 SHORT $LN7@NewNode
  0002e	66 90		 npad	 2
$LL4@NewNode:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00030	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00033	89 08		 mov	 DWORD PTR [eax], ecx

; 915  : 			m_pNodeFree = pNode;

  00035	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00038	83 e8 0c	 sub	 eax, 12			; 0000000cH
  0003b	83 ea 01	 sub	 edx, 1
  0003e	79 f0		 jns	 SHORT $LL4@NewNode
$LN7@NewNode:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00040	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00043	85 c0		 test	 eax, eax
  00045	74 18		 je	 SHORT $LN17@NewNode

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  00047	8b 08		 mov	 ecx, DWORD PTR [eax]
  00049	89 4e 10	 mov	 DWORD PTR [esi+16], ecx

; 922  : 	pNode->pPrev = pPrev;

  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _pPrev$[ebp]
  0004f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 923  : 	pNode->pNext = pNext;

  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _pNext$[ebp]
  00055	89 08		 mov	 DWORD PTR [eax], ecx

; 924  : 	m_nCount++;

  00057	ff 46 0c	 inc	 DWORD PTR [esi+12]

; 925  : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 926  : 
; 927  : #pragma push_macro("new")
; 928  : #undef new
; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;
; 930  : #pragma pop_macro("new")
; 931  : 	return pNode;

  0005a	5e		 pop	 esi

; 932  : }

  0005b	5d		 pop	 ebp
  0005c	c2 08 00	 ret	 8
$LN17@NewNode:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  0005f	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN15@NewNode:
  00064	cc		 int	 3
?NewNode@?$CList@PAVCGraphColor@@PAV1@@@IAEPAUCNode@1@PAU21@0@Z ENDP ; CList<CGraphColor *,CGraphColor *>::NewNode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CList@PAVCGraphColor@@PAV1@@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CList@PAVCGraphColor@@PAV1@@@QAEXXZ PROC	; CList<CGraphColor *,CGraphColor *>::RemoveAll, COMDAT
; _this$ = ecx

; 862  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 863  : 	ASSERT_VALID(this);
; 864  : 
; 865  : 	// destroy elements
; 866  : 	CNode* pNode;
; 867  : 	for (pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)
; 868  : 		pNode->data.~TYPE();
; 869  : 
; 870  : 	m_nCount = 0;
; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;
; 872  : 	m_pBlocks->FreeDataChain();

  00003	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00006	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  0000d	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00014	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0001b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00022	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 873  : 	m_pBlocks = NULL;

  00027	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  0002e	5e		 pop	 esi

; 874  : }

  0002f	c3		 ret	 0
?RemoveAll@?$CList@PAVCGraphColor@@PAV1@@@QAEXXZ ENDP	; CList<CGraphColor *,CGraphColor *>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?AddTail@?$CList@PAVCGraphColor@@PAV1@@@QAEPAU__POSITION@@PAVCGraphColor@@@Z
_TEXT	SEGMENT
_newElement$ = 8					; size = 4
?AddTail@?$CList@PAVCGraphColor@@PAV1@@@QAEPAU__POSITION@@PAVCGraphColor@@@Z PROC ; CList<CGraphColor *,CGraphColor *>::AddTail, COMDAT
; _this$ = ecx

; 965  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi

; 902  : 	if (m_pNodeFree == NULL)

  00007	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0

; 966  : 	ASSERT_VALID(this);
; 967  : 
; 968  : 	CNode* pNewNode = NewNode(m_pNodeTail, NULL);

  0000b	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]

; 902  : 	if (m_pNodeFree == NULL)

  0000e	75 32		 jne	 SHORT $LN11@AddTail

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  00010	6a 0c		 push	 12			; 0000000cH
  00012	ff 76 18	 push	 DWORD PTR [esi+24]
  00015	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  0001e	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  00021	83 c0 08	 add	 eax, 8
  00024	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  00027	83 c2 ff	 add	 edx, -1
  0002a	8d 0c 49	 lea	 ecx, DWORD PTR [ecx+ecx*2]
  0002d	8d 0c 88	 lea	 ecx, DWORD PTR [eax+ecx*4]
  00030	78 10		 js	 SHORT $LN11@AddTail
$LL8@AddTail:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00032	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00035	89 01		 mov	 DWORD PTR [ecx], eax

; 915  : 			m_pNodeFree = pNode;

  00037	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
  0003a	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  0003d	83 ea 01	 sub	 edx, 1
  00040	79 f0		 jns	 SHORT $LL8@AddTail
$LN11@AddTail:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00042	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00045	85 c9		 test	 ecx, ecx
  00047	74 39		 je	 SHORT $LN22@AddTail

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  00049	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004b	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 969  : 	pNewNode->data = newElement;

  0004e	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]

; 922  : 	pNode->pPrev = pPrev;

  00051	89 79 04	 mov	 DWORD PTR [ecx+4], edi

; 923  : 	pNode->pNext = pNext;

  00054	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 924  : 	m_nCount++;

  0005a	ff 46 0c	 inc	 DWORD PTR [esi+12]

; 969  : 	pNewNode->data = newElement;

  0005d	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 970  : 	if (m_pNodeTail != NULL)

  00060	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00063	85 c0		 test	 eax, eax
  00065	74 0d		 je	 SHORT $LN2@AddTail

; 971  : 		m_pNodeTail->pNext = pNewNode;

  00067	89 08		 mov	 DWORD PTR [eax], ecx

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;
; 974  : 	m_pNodeTail = pNewNode;
; 975  : 	return (POSITION) pNewNode;

  00069	8b c1		 mov	 eax, ecx
  0006b	5f		 pop	 edi
  0006c	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  0006f	5e		 pop	 esi

; 976  : }

  00070	5d		 pop	 ebp
  00071	c2 04 00	 ret	 4
$LN2@AddTail:

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;
; 974  : 	m_pNodeTail = pNewNode;
; 975  : 	return (POSITION) pNewNode;

  00074	5f		 pop	 edi
  00075	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  00078	8b c1		 mov	 eax, ecx
  0007a	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  0007d	5e		 pop	 esi

; 976  : }

  0007e	5d		 pop	 ebp
  0007f	c2 04 00	 ret	 4
$LN22@AddTail:

; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00082	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN20@AddTail:
  00087	cc		 int	 3
?AddTail@?$CList@PAVCGraphColor@@PAV1@@@QAEPAU__POSITION@@PAVCGraphColor@@@Z ENDP ; CList<CGraphColor *,CGraphColor *>::AddTail
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CList@PAVCGraphColor@@PAV1@@@QAE@H@Z
_TEXT	SEGMENT
_nBlockSize$ = 8					; size = 4
??0?$CList@PAVCGraphColor@@PAV1@@@QAE@H@Z PROC		; CList<CGraphColor *,CGraphColor *>::CList<CGraphColor *,CGraphColor *>, COMDAT
; _this$ = ecx

; 851  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 852  : 	ASSERT(nBlockSize > 0);
; 853  : 
; 854  : 	m_nCount = 0;
; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;
; 856  : 	m_pBlocks = NULL;
; 857  : 	m_nBlockSize = nBlockSize;

  00003	8b 45 08	 mov	 eax, DWORD PTR _nBlockSize$[ebp]
  00006	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 858  : }

  00009	8b c1		 mov	 eax, ecx
  0000b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@PAVCGraphColor@@PAV1@@@6B@
  00011	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00018	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  0001f	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00026	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0002d	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
??0?$CList@PAVCGraphColor@@PAV1@@@QAE@H@Z ENDP		; CList<CGraphColor *,CGraphColor *>::CList<CGraphColor *,CGraphColor *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_ECIndicatorInfo@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECIndicatorInfo@@UAEPAXI@Z PROC			; CIndicatorInfo::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECIndicatorInfo@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002a	8b d8		 mov	 ebx, eax
  0002c	83 e3 01	 and	 ebx, 1
  0002f	a8 02		 test	 al, 2
  00031	74 40		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CIndicatorInfo@@UAE@XZ ; CIndicatorInfo::~CIndicatorInfo
  00038	ff 76 fc	 push	 DWORD PTR [esi-4]
  0003b	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003e	6a 08		 push	 8
  00040	56		 push	 esi
  00041	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00046	85 db		 test	 ebx, ebx
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0004c	8d 0c cd 04 00
	00 00		 lea	 ecx, DWORD PTR [ecx*8+4]
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	e8 00 00 00 00	 call	 ??1CIndicatorInfo@@UAE@XZ ; CIndicatorInfo::~CIndicatorInfo
  00078	85 db		 test	 ebx, ebx
  0007a	74 0b		 je	 SHORT $LN4@vector
  0007c	6a 08		 push	 8
  0007e	56		 push	 esi
  0007f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00084	83 c4 08	 add	 esp, 8
$LN4@vector:
  00087	8b c6		 mov	 eax, esi
  00089	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00093	59		 pop	 ecx
  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 04 00	 ret	 4
  0009d	cc		 int	 3
  0009e	cc		 int	 3
  0009f	cc		 int	 3
  000a0	cc		 int	 3
  000a1	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECIndicatorInfo@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECIndicatorInfo@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECIndicatorInfo@@UAEPAXI@Z ENDP			; CIndicatorInfo::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??_GCIndicatorInfo@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCIndicatorInfo@@UAEPAXI@Z PROC			; CIndicatorInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CIndicatorInfo@@UAE@XZ ; CIndicatorInfo::~CIndicatorInfo
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 08		 push	 8
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCIndicatorInfo@@UAEPAXI@Z ENDP			; CIndicatorInfo::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4CIndicatorInfo@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CIndicatorInfo@@QAEAAV0@ABV0@@Z PROC			; CIndicatorInfo::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00009	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0000c	8b c1		 mov	 eax, ecx
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
??4CIndicatorInfo@@QAEAAV0@ABV0@@Z ENDP			; CIndicatorInfo::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0CIndicatorInfo@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0CIndicatorInfo@@QAE@ABV0@@Z PROC			; CIndicatorInfo::CIndicatorInfo, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CIndicatorInfo@@6B@
  0000c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000f	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00012	8b c1		 mov	 eax, ecx
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0CIndicatorInfo@@QAE@ABV0@@Z ENDP			; CIndicatorInfo::CIndicatorInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_ECIndicatorList@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECIndicatorList@@UAEPAXI@Z PROC			; CIndicatorList::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECIndicatorList@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002a	8b d8		 mov	 ebx, eax
  0002c	83 e3 01	 and	 ebx, 1
  0002f	a8 02		 test	 al, 2
  00031	74 40		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CIndicatorList@@UAE@XZ ; CIndicatorList::~CIndicatorList
  00038	ff 76 fc	 push	 DWORD PTR [esi-4]
  0003b	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003e	6a 08		 push	 8
  00040	56		 push	 esi
  00041	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00046	85 db		 test	 ebx, ebx
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0004c	8d 0c cd 04 00
	00 00		 lea	 ecx, DWORD PTR [ecx*8+4]
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	e8 00 00 00 00	 call	 ??1CIndicatorList@@UAE@XZ ; CIndicatorList::~CIndicatorList
  00078	85 db		 test	 ebx, ebx
  0007a	74 0b		 je	 SHORT $LN4@vector
  0007c	6a 08		 push	 8
  0007e	56		 push	 esi
  0007f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00084	83 c4 08	 add	 esp, 8
$LN4@vector:
  00087	8b c6		 mov	 eax, esi
  00089	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00093	59		 pop	 ecx
  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 04 00	 ret	 4
  0009d	cc		 int	 3
  0009e	cc		 int	 3
  0009f	cc		 int	 3
  000a0	cc		 int	 3
  000a1	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECIndicatorList@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECIndicatorList@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECIndicatorList@@UAEPAXI@Z ENDP			; CIndicatorList::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??_GCIndicatorList@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCIndicatorList@@UAEPAXI@Z PROC			; CIndicatorList::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CIndicatorList@@UAE@XZ ; CIndicatorList::~CIndicatorList
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 08		 push	 8
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCIndicatorList@@UAEPAXI@Z ENDP			; CIndicatorList::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4CIndicatorList@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CIndicatorList@@QAEAAV0@ABV0@@Z PROC			; CIndicatorList::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00009	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0000c	8b c1		 mov	 eax, ecx
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
??4CIndicatorList@@QAEAAV0@ABV0@@Z ENDP			; CIndicatorList::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0CIndicatorList@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0CIndicatorList@@QAE@ABV0@@Z PROC			; CIndicatorList::CIndicatorList, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CIndicatorList@@6B@
  0000c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000f	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00012	8b c1		 mov	 eax, ecx
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0CIndicatorList@@QAE@ABV0@@Z ENDP			; CIndicatorList::CIndicatorList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
;	COMDAT ?SetVolumeMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z
_TEXT	SEGMENT
$T2 = -32						; size = 4
_this$1$ = -28						; size = 4
$T3 = -24						; size = 4
_psnIndicator$ = -20					; size = 4
_pIndicatorInfo$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_styleData$ = 8						; size = 4
?SetVolumeMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z PROC ; CChartStyleDataController::SetVolumeMAGraphColor, COMDAT
; _this$ = ecx

; 170  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetVolumeMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx
  0002a	89 7d e4	 mov	 DWORD PTR _this$1$[ebp], edi

; 171  : 	POSITION psnIndicator = NULL;
; 172  : 	CIndicatorInfo *pIndicatorInfo = m_pIndicatorList->GetFirstIndicatorInfo( EILT_USER, _MTEXT( C2_VOLUME_MA), &psnIndicator);

  0002d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00030	8d 45 ec	 lea	 eax, DWORD PTR _psnIndicator$[ebp]
  00033	50		 push	 eax
  00034	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  00039	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _psnIndicator$[ebp], 0
  00040	ff b0 24 03 00
	00		 push	 DWORD PTR [eax+804]
  00046	6a 03		 push	 3
  00048	e8 00 00 00 00	 call	 ?GetFirstIndicatorInfo@CIndicatorList@@QAEPAVCIndicatorInfo@@W4EIndicatorListType@@PBDPAPAU__POSITION@@@Z ; CIndicatorList::GetFirstIndicatorInfo

; 173  : 	int nMACount = styleData.GetPriceMACount();

  0004d	8b 4d 08	 mov	 ecx, DWORD PTR _styleData$[ebp]
  00050	89 45 f0	 mov	 DWORD PTR _pIndicatorInfo$[ebp], eax
  00053	e8 00 00 00 00	 call	 ?GetPriceMACount@CStyleData@@QBEHXZ ; CStyleData::GetPriceMACount

; 174  : 	while( pIndicatorInfo)

  00058	8b 4d f0	 mov	 ecx, DWORD PTR _pIndicatorInfo$[ebp]
  0005b	8b d8		 mov	 ebx, eax
  0005d	85 c9		 test	 ecx, ecx
  0005f	0f 84 8f 00 00
	00		 je	 $LN3@SetVolumeM
$LL2@SetVolumeM:

; 175  : 	{
; 176  : 		for( int i = 0; i < nMACount; i++)

  00065	33 f6		 xor	 esi, esi
  00067	85 db		 test	 ebx, ebx
  00069	7e 34		 jle	 SHORT $LN5@SetVolumeM
  0006b	0f 1f 44 00 00	 npad	 5
$LL6@SetVolumeM:

; 177  : 		{
; 178  : 			CGraphColor *pGraphColor = pIndicatorInfo->GetSubGraphColor_PointerType( i);

  00070	56		 push	 esi
  00071	e8 00 00 00 00	 call	 ?GetSubGraphColor_PointerType@CIndicatorInfo@@QBEPAVCGraphColor@@H@Z ; CIndicatorInfo::GetSubGraphColor_PointerType
  00076	8b f8		 mov	 edi, eax

; 179  : 			if( !pGraphColor) continue;

  00078	85 ff		 test	 edi, edi
  0007a	74 18		 je	 SHORT $LN4@SetVolumeM

; 180  : 			pGraphColor->SetColor1( styleData.GetPriceMAColor( i));

  0007c	8b 4d 08	 mov	 ecx, DWORD PTR _styleData$[ebp]
  0007f	56		 push	 esi
  00080	e8 00 00 00 00	 call	 ?GetPriceMAColor@CStyleData@@QBEKH@Z ; CStyleData::GetPriceMAColor
  00085	89 45 e8	 mov	 DWORD PTR $T3[ebp], eax
  00088	8b cf		 mov	 ecx, edi
  0008a	8d 45 e8	 lea	 eax, DWORD PTR $T3[ebp]
  0008d	50		 push	 eax
  0008e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetColor1@CGraphColor@@QAEXABK@Z
$LN4@SetVolumeM:

; 175  : 	{
; 176  : 		for( int i = 0; i < nMACount; i++)

  00094	8b 4d f0	 mov	 ecx, DWORD PTR _pIndicatorInfo$[ebp]
  00097	46		 inc	 esi
  00098	3b f3		 cmp	 esi, ebx
  0009a	7c d4		 jl	 SHORT $LL6@SetVolumeM
  0009c	8b 7d e4	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN5@SetVolumeM:

; 181  : 		}
; 182  : 		m_pMainBlock->ChangeGraphDataFromIndicatorInfo( pIndicatorInfo->GetGraphName(), false);

  0009f	8d 45 e0	 lea	 eax, DWORD PTR $T2[ebp]
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ?GetGraphName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfo::GetGraphName
  000a8	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000aa	6a 00		 push	 0
  000ac	50		 push	 eax
  000ad	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000b4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b6	ff 92 88 00 00
	00		 call	 DWORD PTR [edx+136]
  000bc	8d 4d e0	 lea	 ecx, DWORD PTR $T2[ebp]
  000bf	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 183  : 
; 184  : 		m_pIndicatorList->GetNextIndicatorInfo( EILT_USER, _MTEXT( C2_PRICE_MA), &psnIndicator, pIndicatorInfo);

  000cc	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000cf	8d 45 f0	 lea	 eax, DWORD PTR _pIndicatorInfo$[ebp]
  000d2	50		 push	 eax
  000d3	8d 45 ec	 lea	 eax, DWORD PTR _psnIndicator$[ebp]
  000d6	50		 push	 eax
  000d7	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  000dc	ff b0 20 03 00
	00		 push	 DWORD PTR [eax+800]
  000e2	6a 03		 push	 3
  000e4	e8 00 00 00 00	 call	 ?GetNextIndicatorInfo@CIndicatorList@@QAEXW4EIndicatorListType@@PBDPAPAU__POSITION@@AAPAVCIndicatorInfo@@@Z ; CIndicatorList::GetNextIndicatorInfo
  000e9	8b 4d f0	 mov	 ecx, DWORD PTR _pIndicatorInfo$[ebp]
  000ec	85 c9		 test	 ecx, ecx
  000ee	0f 85 71 ff ff
	ff		 jne	 $LL2@SetVolumeM
$LN3@SetVolumeM:

; 185  : 	}
; 186  : }

  000f4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fe	59		 pop	 ecx
  000ff	5f		 pop	 edi
  00100	5e		 pop	 esi
  00101	5b		 pop	 ebx
  00102	8b e5		 mov	 esp, ebp
  00104	5d		 pop	 ebp
  00105	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetVolumeMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
__ehhandler$?SetVolumeMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z:
  0000e	90		 npad	 1
  0000f	90		 npad	 1
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetVolumeMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetVolumeMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z ENDP ; CChartStyleDataController::SetVolumeMAGraphColor
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
;	COMDAT ?GetVolumeMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z
_TEXT	SEGMENT
_subGraphColorList$ = -40				; size = 28
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_styleData$ = 8						; size = 4
?GetVolumeMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z PROC ; CChartStyleDataController::GetVolumeMAGraphColor, COMDAT
; _this$ = ecx

; 159  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetVolumeMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 160  : 	CIndicatorInfo* pIndicatorInfo = m_pIndicatorList->GetFirstIndicatorInfo( EILT_USER, _MTEXT( C2_VOLUME_MA));

  00028	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  0002d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00030	6a 00		 push	 0
  00032	ff b0 24 03 00
	00		 push	 DWORD PTR [eax+804]
  00038	6a 03		 push	 3
  0003a	e8 00 00 00 00	 call	 ?GetFirstIndicatorInfo@CIndicatorList@@QAEPAVCIndicatorInfo@@W4EIndicatorListType@@PBDPAPAU__POSITION@@@Z ; CIndicatorList::GetFirstIndicatorInfo

; 161  : 	if( !pIndicatorInfo) return;

  0003f	85 c0		 test	 eax, eax
  00041	0f 84 aa 00 00
	00		 je	 $LN14@GetVolumeM
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 851  : {

  00047	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp], OFFSET ??_7?$CList@PAVCGraphColor@@PAV1@@@6B@

; 852  : 	ASSERT(nBlockSize > 0);
; 853  : 
; 854  : 	m_nCount = 0;

  0004e	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp+12], 0

; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  00055	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp+16], 0
  0005c	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp+8], 0
  00063	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp+4], 0

; 856  : 	m_pBlocks = NULL;

  0006a	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp+20], 0

; 857  : 	m_nBlockSize = nBlockSize;

  00071	c7 45 f0 0a 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp+24], 10 ; 0000000aH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp

; 163  : 	if( !pIndicatorInfo->GetSubGraphColorList(subGraphColorList)) return;

  00078	8d 4d d8	 lea	 ecx, DWORD PTR _subGraphColorList$[ebp]
  0007b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00082	51		 push	 ecx
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ?GetSubGraphColorList@CIndicatorInfo@@QBE_NAAV?$CList@PAVCGraphColor@@PAV1@@@@Z ; CIndicatorInfo::GetSubGraphColorList
  0008a	84 c0		 test	 al, al
  0008c	74 31		 je	 SHORT $LN3@GetVolumeM

; 164  : 
; 165  : 	int nIndex = 0;
; 166  : 	POSITION pos = subGraphColorList.GetHeadPosition();

  0008e	8b 75 dc	 mov	 esi, DWORD PTR _subGraphColorList$[ebp+4]
  00091	33 ff		 xor	 edi, edi
  00093	85 f6		 test	 esi, esi

; 167  : 	while(pos != NULL) styleData.SetPriceMAColor( nIndex++, subGraphColorList.GetNext(pos)->GetColor1());

  00095	74 28		 je	 SHORT $LN3@GetVolumeM
  00097	8b 5d 08	 mov	 ebx, DWORD PTR _styleData$[ebp]
  0009a	66 0f 1f 44 00
	00		 npad	 6
$LL2@GetVolumeM:
  000a0	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 813  : 		rPosition = (POSITION) pNode->pNext;

  000a3	8b 36		 mov	 esi, DWORD PTR [esi]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp

; 167  : 	while(pos != NULL) styleData.SetPriceMAColor( nIndex++, subGraphColorList.GetNext(pos)->GetColor1());

  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetColor1@CGraphColor@@QBEKXZ
  000ab	89 45 08	 mov	 DWORD PTR $T2[ebp], eax
  000ae	8b cb		 mov	 ecx, ebx
  000b0	8d 45 08	 lea	 eax, DWORD PTR $T2[ebp]
  000b3	50		 push	 eax
  000b4	57		 push	 edi
  000b5	e8 00 00 00 00	 call	 ?SetPriceMAColor@CStyleData@@QAEXHABK@Z ; CStyleData::SetPriceMAColor
  000ba	47		 inc	 edi
  000bb	85 f6		 test	 esi, esi
  000bd	75 e1		 jne	 SHORT $LL2@GetVolumeM
$LN3@GetVolumeM:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 872  : 	m_pBlocks->FreeDataChain();

  000bf	8b 4d ec	 mov	 ecx, DWORD PTR _subGraphColorList$[ebp+20]

; 878  : {

  000c2	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000c9	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp], OFFSET ??_7?$CList@PAVCGraphColor@@PAV1@@@6B@

; 870  : 	m_nCount = 0;

  000d0	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp+12], 0

; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  000d7	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp+16], 0
  000de	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp+8], 0
  000e5	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp+4], 0

; 872  : 	m_pBlocks->FreeDataChain();

  000ec	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain
$LN14@GetVolumeM:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp

; 168  : }

  000f1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fb	59		 pop	 ecx
  000fc	5f		 pop	 edi
  000fd	5e		 pop	 esi
  000fe	5b		 pop	 ebx
  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetVolumeMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _subGraphColorList$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CList@PAVCGraphColor@@PAV1@@@UAE@XZ ; CList<CGraphColor *,CGraphColor *>::~CList<CGraphColor *,CGraphColor *>
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?GetVolumeMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetVolumeMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetVolumeMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z ENDP ; CChartStyleDataController::GetVolumeMAGraphColor
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
;	COMDAT ?SetVolumeGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z
_TEXT	SEGMENT
$T2 = -32						; size = 4
$T3 = -28						; size = 4
$T4 = -24						; size = 4
_psnIndicator$ = -20					; size = 4
_pIndicatorInfo$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
$T5 = 8							; size = 4
_styleData$ = 8						; size = 4
?SetVolumeGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z PROC ; CChartStyleDataController::SetVolumeGraphColor, COMDAT
; _this$ = ecx

; 138  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetVolumeGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx

; 139  : 	POSITION psnIndicator = NULL;
; 140  : 	CIndicatorInfo *pIndicatorInfo = m_pIndicatorList->GetFirstIndicatorInfo( EILT_USER, _MTEXT( C2_VOLUME_CHART), &psnIndicator);

  0002a	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0002d	8d 45 ec	 lea	 eax, DWORD PTR _psnIndicator$[ebp]
  00030	50		 push	 eax
  00031	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  00036	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _psnIndicator$[ebp], 0
  0003d	ff b0 2c 03 00
	00		 push	 DWORD PTR [eax+812]
  00043	6a 03		 push	 3
  00045	e8 00 00 00 00	 call	 ?GetFirstIndicatorInfo@CIndicatorList@@QAEPAVCIndicatorInfo@@W4EIndicatorListType@@PBDPAPAU__POSITION@@@Z ; CIndicatorList::GetFirstIndicatorInfo
  0004a	89 45 f0	 mov	 DWORD PTR _pIndicatorInfo$[ebp], eax

; 141  : 	while( pIndicatorInfo)

  0004d	85 c0		 test	 eax, eax
  0004f	0f 84 de 00 00
	00		 je	 $LN3@SetVolumeG
  00055	8b 7d 08	 mov	 edi, DWORD PTR _styleData$[ebp]
  00058	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL2@SetVolumeG:

; 142  : 	{
; 143  : 		CGraphColor *pGraphColor = pIndicatorInfo->GetSubGraphColor_PointerType( 0);

  00060	6a 00		 push	 0
  00062	8b c8		 mov	 ecx, eax
  00064	e8 00 00 00 00	 call	 ?GetSubGraphColor_PointerType@CIndicatorInfo@@QBEPAVCGraphColor@@H@Z ; CIndicatorInfo::GetSubGraphColor_PointerType
  00069	8b f0		 mov	 esi, eax

; 144  : 		if( !pGraphColor) continue;

  0006b	85 f6		 test	 esi, esi
  0006d	0f 84 b5 00 00
	00		 je	 $LN9@SetVolumeG

; 145  : 
; 146  : 		pGraphColor->SetColor1(			styleData.GetTradeUpColor());

  00073	8b cf		 mov	 ecx, edi
  00075	e8 00 00 00 00	 call	 ?GetTradeUpColor@CStyleData@@QBEKXZ ; CStyleData::GetTradeUpColor
  0007a	89 45 08	 mov	 DWORD PTR $T5[ebp], eax
  0007d	8b ce		 mov	 ecx, esi
  0007f	8d 45 08	 lea	 eax, DWORD PTR $T5[ebp]
  00082	50		 push	 eax
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetColor1@CGraphColor@@QAEXABK@Z

; 147  : 		pGraphColor->SetColor3(			styleData.GetTradeDownColor());

  00089	8b cf		 mov	 ecx, edi
  0008b	e8 00 00 00 00	 call	 ?GetTradeDownColor@CStyleData@@QBEKXZ ; CStyleData::GetTradeDownColor
  00090	89 45 e8	 mov	 DWORD PTR $T4[ebp], eax
  00093	8b ce		 mov	 ecx, esi
  00095	8d 45 e8	 lea	 eax, DWORD PTR $T4[ebp]
  00098	50		 push	 eax
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetColor3@CGraphColor@@QAEXABK@Z

; 148  : 		pGraphColor->SetColor5(			styleData.GetTradeEqualColor());

  0009f	8b cf		 mov	 ecx, edi
  000a1	e8 00 00 00 00	 call	 ?GetTradeEqualColor@CStyleData@@QBEKXZ ; CStyleData::GetTradeEqualColor
  000a6	89 45 e4	 mov	 DWORD PTR $T3[ebp], eax
  000a9	8b ce		 mov	 ecx, esi
  000ab	8d 45 e4	 lea	 eax, DWORD PTR $T3[ebp]
  000ae	50		 push	 eax
  000af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetColor5@CGraphColor@@QAEXABK@Z

; 149  : 		pGraphColor->SetUpGraphFill(	styleData.GetTradeUpFill());

  000b5	8b cf		 mov	 ecx, edi
  000b7	e8 00 00 00 00	 call	 ?GetTradeUpFill@CStyleData@@QBE_NXZ ; CStyleData::GetTradeUpFill
  000bc	0f b6 c0	 movzx	 eax, al
  000bf	8b ce		 mov	 ecx, esi
  000c1	50		 push	 eax
  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetUpGraphFill@CGraphColor@@QAEX_N@Z

; 150  : 		pGraphColor->SetDownGraphFill(	styleData.GetTradeDownFill());

  000c8	8b cf		 mov	 ecx, edi
  000ca	e8 00 00 00 00	 call	 ?GetTradeDownFill@CStyleData@@QBE_NXZ ; CStyleData::GetTradeDownFill
  000cf	0f b6 c0	 movzx	 eax, al
  000d2	8b ce		 mov	 ecx, esi
  000d4	50		 push	 eax
  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetDownGraphFill@CGraphColor@@QAEX_N@Z

; 151  : 		m_pMainBlock->ChangeGraphDataFromIndicatorInfo( pIndicatorInfo->GetGraphName(), false);

  000db	8b 4d f0	 mov	 ecx, DWORD PTR _pIndicatorInfo$[ebp]
  000de	8d 45 e0	 lea	 eax, DWORD PTR $T2[ebp]
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 ?GetGraphName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfo::GetGraphName
  000e7	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  000e9	6a 00		 push	 0
  000eb	50		 push	 eax
  000ec	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000f3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f5	ff 92 88 00 00
	00		 call	 DWORD PTR [edx+136]
  000fb	8d 4d e0	 lea	 ecx, DWORD PTR $T2[ebp]
  000fe	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00105	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 152  : 
; 153  : 		m_pIndicatorList->GetNextIndicatorInfo( EILT_USER, _MTEXT( C2_VOLUME_CHART), &psnIndicator, pIndicatorInfo);

  0010b	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0010e	8d 45 f0	 lea	 eax, DWORD PTR _pIndicatorInfo$[ebp]
  00111	50		 push	 eax
  00112	8d 45 ec	 lea	 eax, DWORD PTR _psnIndicator$[ebp]
  00115	50		 push	 eax
  00116	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  0011b	ff b0 2c 03 00
	00		 push	 DWORD PTR [eax+812]
  00121	6a 03		 push	 3
  00123	e8 00 00 00 00	 call	 ?GetNextIndicatorInfo@CIndicatorList@@QAEXW4EIndicatorListType@@PBDPAPAU__POSITION@@AAPAVCIndicatorInfo@@@Z ; CIndicatorList::GetNextIndicatorInfo
$LN9@SetVolumeG:

; 141  : 	while( pIndicatorInfo)

  00128	8b 45 f0	 mov	 eax, DWORD PTR _pIndicatorInfo$[ebp]
  0012b	85 c0		 test	 eax, eax
  0012d	0f 85 2d ff ff
	ff		 jne	 $LL2@SetVolumeG
$LN3@SetVolumeG:

; 154  : 	}
; 155  : }

  00133	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00136	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0013d	59		 pop	 ecx
  0013e	5f		 pop	 edi
  0013f	5e		 pop	 esi
  00140	5b		 pop	 ebx
  00141	8b e5		 mov	 esp, ebp
  00143	5d		 pop	 ebp
  00144	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetVolumeGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
__ehhandler$?SetVolumeGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z:
  0000e	90		 npad	 1
  0000f	90		 npad	 1
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetVolumeGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetVolumeGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z ENDP ; CChartStyleDataController::SetVolumeGraphColor
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
;	COMDAT ?GetVolumeGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
$T2 = 8							; size = 4
$T3 = 8							; size = 4
_styleData$ = 8						; size = 4
$T4 = 11						; size = 1
$T5 = 11						; size = 1
?GetVolumeGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z PROC ; CChartStyleDataController::GetVolumeGraphColor, COMDAT
; _this$ = ecx

; 125  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 126  : 	CIndicatorInfo* pIndicatorInfo = m_pIndicatorList->GetFirstIndicatorInfo( EILT_USER, _MTEXT( C2_VOLUME_CHART));

  00004	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  00009	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000c	6a 00		 push	 0
  0000e	ff b0 2c 03 00
	00		 push	 DWORD PTR [eax+812]
  00014	6a 03		 push	 3
  00016	e8 00 00 00 00	 call	 ?GetFirstIndicatorInfo@CIndicatorList@@QAEPAVCIndicatorInfo@@W4EIndicatorListType@@PBDPAPAU__POSITION@@@Z ; CIndicatorList::GetFirstIndicatorInfo

; 127  : 	if( !pIndicatorInfo) return;

  0001b	85 c0		 test	 eax, eax
  0001d	0f 84 80 00 00
	00		 je	 $LN1@GetVolumeG

; 128  : 	CGraphColor *pGraphColor = pIndicatorInfo->GetSubGraphColor_PointerType( 0);

  00023	56		 push	 esi
  00024	57		 push	 edi
  00025	6a 00		 push	 0
  00027	8b c8		 mov	 ecx, eax
  00029	e8 00 00 00 00	 call	 ?GetSubGraphColor_PointerType@CIndicatorInfo@@QBEPAVCGraphColor@@H@Z ; CIndicatorInfo::GetSubGraphColor_PointerType
  0002e	8b f8		 mov	 edi, eax

; 129  : 
; 130  : 	//sy 2005.04.19.
; 131  : 	styleData.SetTradeUpColor(		pGraphColor->GetColor1());

  00030	8b cf		 mov	 ecx, edi
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetColor1@CGraphColor@@QBEKXZ
  00038	8b 75 08	 mov	 esi, DWORD PTR _styleData$[ebp]
  0003b	8b ce		 mov	 ecx, esi
  0003d	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00040	8d 45 fc	 lea	 eax, DWORD PTR $T1[ebp]
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?SetTradeUpColor@CStyleData@@QAEXABK@Z ; CStyleData::SetTradeUpColor

; 132  : 	styleData.SetTradeDownColor(	pGraphColor->GetColor3());

  00049	8b cf		 mov	 ecx, edi
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetColor3@CGraphColor@@QBEKXZ
  00051	89 45 08	 mov	 DWORD PTR $T3[ebp], eax
  00054	8b ce		 mov	 ecx, esi
  00056	8d 45 08	 lea	 eax, DWORD PTR $T3[ebp]
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?SetTradeDownColor@CStyleData@@QAEXABK@Z ; CStyleData::SetTradeDownColor

; 133  : 	styleData.SetTradeEqualColor(	pGraphColor->GetColor5());

  0005f	8b cf		 mov	 ecx, edi
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetColor5@CGraphColor@@QBEKXZ
  00067	89 45 08	 mov	 DWORD PTR $T2[ebp], eax
  0006a	8b ce		 mov	 ecx, esi
  0006c	8d 45 08	 lea	 eax, DWORD PTR $T2[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?SetTradeEqualColor@CStyleData@@QAEXABK@Z ; CStyleData::SetTradeEqualColor

; 134  : 	styleData.SetTradeUpFill(		pGraphColor->GetUpGraphFill());

  00075	8b cf		 mov	 ecx, edi
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetUpGraphFill@CGraphColor@@QBE_NXZ
  0007d	88 45 0b	 mov	 BYTE PTR $T5[ebp], al
  00080	8b ce		 mov	 ecx, esi
  00082	8d 45 0b	 lea	 eax, DWORD PTR $T5[ebp]
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ?SetTradeUpFill@CStyleData@@QAEXAB_N@Z ; CStyleData::SetTradeUpFill

; 135  : 	styleData.SetTradeDownFill(		pGraphColor->GetDownGraphFill());

  0008b	8b cf		 mov	 ecx, edi
  0008d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDownGraphFill@CGraphColor@@QBE_NXZ
  00093	88 45 0b	 mov	 BYTE PTR $T4[ebp], al
  00096	8b ce		 mov	 ecx, esi
  00098	8d 45 0b	 lea	 eax, DWORD PTR $T4[ebp]
  0009b	50		 push	 eax
  0009c	e8 00 00 00 00	 call	 ?SetTradeDownFill@CStyleData@@QAEXAB_N@Z ; CStyleData::SetTradeDownFill
  000a1	5f		 pop	 edi
  000a2	5e		 pop	 esi
$LN1@GetVolumeG:

; 136  : }

  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c2 04 00	 ret	 4
?GetVolumeGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z ENDP ; CChartStyleDataController::GetVolumeGraphColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
;	COMDAT ?SetPriceMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z
_TEXT	SEGMENT
$T2 = -32						; size = 4
_this$1$ = -28						; size = 4
$T3 = -24						; size = 4
_psnIndicator$ = -20					; size = 4
_pIndicatorInfo$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_styleData$ = 8						; size = 4
?SetPriceMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z PROC ; CChartStyleDataController::SetPriceMAGraphColor, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetPriceMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx
  0002a	89 7d e4	 mov	 DWORD PTR _this$1$[ebp], edi

; 106  : 	POSITION psnIndicator = NULL;
; 107  : 	CIndicatorInfo *pIndicatorInfo = m_pIndicatorList->GetFirstIndicatorInfo( EILT_USER, _MTEXT( C2_PRICE_MA), &psnIndicator);

  0002d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00030	8d 45 ec	 lea	 eax, DWORD PTR _psnIndicator$[ebp]
  00033	50		 push	 eax
  00034	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  00039	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _psnIndicator$[ebp], 0
  00040	ff b0 20 03 00
	00		 push	 DWORD PTR [eax+800]
  00046	6a 03		 push	 3
  00048	e8 00 00 00 00	 call	 ?GetFirstIndicatorInfo@CIndicatorList@@QAEPAVCIndicatorInfo@@W4EIndicatorListType@@PBDPAPAU__POSITION@@@Z ; CIndicatorList::GetFirstIndicatorInfo

; 108  : 	int nMACount = styleData.GetPriceMACount();

  0004d	8b 4d 08	 mov	 ecx, DWORD PTR _styleData$[ebp]
  00050	89 45 f0	 mov	 DWORD PTR _pIndicatorInfo$[ebp], eax
  00053	e8 00 00 00 00	 call	 ?GetPriceMACount@CStyleData@@QBEHXZ ; CStyleData::GetPriceMACount

; 109  : 	while( pIndicatorInfo)

  00058	8b 4d f0	 mov	 ecx, DWORD PTR _pIndicatorInfo$[ebp]
  0005b	8b d8		 mov	 ebx, eax
  0005d	85 c9		 test	 ecx, ecx
  0005f	0f 84 8f 00 00
	00		 je	 $LN3@SetPriceMA
$LL2@SetPriceMA:

; 110  : 	{
; 111  : 		for( int i = 0; i < nMACount; i++)

  00065	33 f6		 xor	 esi, esi
  00067	85 db		 test	 ebx, ebx
  00069	7e 34		 jle	 SHORT $LN5@SetPriceMA
  0006b	0f 1f 44 00 00	 npad	 5
$LL6@SetPriceMA:

; 112  : 		{
; 113  : 			CGraphColor *pGraphColor = pIndicatorInfo->GetSubGraphColor_PointerType( i);

  00070	56		 push	 esi
  00071	e8 00 00 00 00	 call	 ?GetSubGraphColor_PointerType@CIndicatorInfo@@QBEPAVCGraphColor@@H@Z ; CIndicatorInfo::GetSubGraphColor_PointerType
  00076	8b f8		 mov	 edi, eax

; 114  : 			if( !pGraphColor) continue;

  00078	85 ff		 test	 edi, edi
  0007a	74 18		 je	 SHORT $LN4@SetPriceMA

; 115  : 			pGraphColor->SetColor1( styleData.GetPriceMAColor( i));

  0007c	8b 4d 08	 mov	 ecx, DWORD PTR _styleData$[ebp]
  0007f	56		 push	 esi
  00080	e8 00 00 00 00	 call	 ?GetPriceMAColor@CStyleData@@QBEKH@Z ; CStyleData::GetPriceMAColor
  00085	89 45 e8	 mov	 DWORD PTR $T3[ebp], eax
  00088	8b cf		 mov	 ecx, edi
  0008a	8d 45 e8	 lea	 eax, DWORD PTR $T3[ebp]
  0008d	50		 push	 eax
  0008e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetColor1@CGraphColor@@QAEXABK@Z
$LN4@SetPriceMA:

; 110  : 	{
; 111  : 		for( int i = 0; i < nMACount; i++)

  00094	8b 4d f0	 mov	 ecx, DWORD PTR _pIndicatorInfo$[ebp]
  00097	46		 inc	 esi
  00098	3b f3		 cmp	 esi, ebx
  0009a	7c d4		 jl	 SHORT $LL6@SetPriceMA
  0009c	8b 7d e4	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN5@SetPriceMA:

; 116  : 		}
; 117  : 		m_pMainBlock->ChangeGraphDataFromIndicatorInfo( pIndicatorInfo->GetGraphName(), false);

  0009f	8d 45 e0	 lea	 eax, DWORD PTR $T2[ebp]
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ?GetGraphName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfo::GetGraphName
  000a8	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000aa	6a 00		 push	 0
  000ac	50		 push	 eax
  000ad	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000b4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b6	ff 92 88 00 00
	00		 call	 DWORD PTR [edx+136]
  000bc	8d 4d e0	 lea	 ecx, DWORD PTR $T2[ebp]
  000bf	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 118  : 
; 119  : 		m_pIndicatorList->GetNextIndicatorInfo( EILT_USER, _MTEXT( C2_PRICE_MA), &psnIndicator, pIndicatorInfo);

  000cc	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000cf	8d 45 f0	 lea	 eax, DWORD PTR _pIndicatorInfo$[ebp]
  000d2	50		 push	 eax
  000d3	8d 45 ec	 lea	 eax, DWORD PTR _psnIndicator$[ebp]
  000d6	50		 push	 eax
  000d7	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  000dc	ff b0 20 03 00
	00		 push	 DWORD PTR [eax+800]
  000e2	6a 03		 push	 3
  000e4	e8 00 00 00 00	 call	 ?GetNextIndicatorInfo@CIndicatorList@@QAEXW4EIndicatorListType@@PBDPAPAU__POSITION@@AAPAVCIndicatorInfo@@@Z ; CIndicatorList::GetNextIndicatorInfo
  000e9	8b 4d f0	 mov	 ecx, DWORD PTR _pIndicatorInfo$[ebp]
  000ec	85 c9		 test	 ecx, ecx
  000ee	0f 85 71 ff ff
	ff		 jne	 $LL2@SetPriceMA
$LN3@SetPriceMA:

; 120  : 	}
; 121  : }

  000f4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fe	59		 pop	 ecx
  000ff	5f		 pop	 edi
  00100	5e		 pop	 esi
  00101	5b		 pop	 ebx
  00102	8b e5		 mov	 esp, ebp
  00104	5d		 pop	 ebp
  00105	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetPriceMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
__ehhandler$?SetPriceMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z:
  0000e	90		 npad	 1
  0000f	90		 npad	 1
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetPriceMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetPriceMAGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z ENDP ; CChartStyleDataController::SetPriceMAGraphColor
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
;	COMDAT ?GetPriceMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z
_TEXT	SEGMENT
_subGraphColorList$ = -40				; size = 28
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_styleData$ = 8						; size = 4
?GetPriceMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z PROC ; CChartStyleDataController::GetPriceMAGraphColor, COMDAT
; _this$ = ecx

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetPriceMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 95   : 	CIndicatorInfo* pIndicatorInfo = m_pIndicatorList->GetFirstIndicatorInfo( EILT_USER, _MTEXT( C2_PRICE_MA));

  00028	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  0002d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00030	6a 00		 push	 0
  00032	ff b0 20 03 00
	00		 push	 DWORD PTR [eax+800]
  00038	6a 03		 push	 3
  0003a	e8 00 00 00 00	 call	 ?GetFirstIndicatorInfo@CIndicatorList@@QAEPAVCIndicatorInfo@@W4EIndicatorListType@@PBDPAPAU__POSITION@@@Z ; CIndicatorList::GetFirstIndicatorInfo

; 96   : 	if( !pIndicatorInfo) return;

  0003f	85 c0		 test	 eax, eax
  00041	0f 84 aa 00 00
	00		 je	 $LN14@GetPriceMA
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 851  : {

  00047	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp], OFFSET ??_7?$CList@PAVCGraphColor@@PAV1@@@6B@

; 852  : 	ASSERT(nBlockSize > 0);
; 853  : 
; 854  : 	m_nCount = 0;

  0004e	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp+12], 0

; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  00055	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp+16], 0
  0005c	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp+8], 0
  00063	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp+4], 0

; 856  : 	m_pBlocks = NULL;

  0006a	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp+20], 0

; 857  : 	m_nBlockSize = nBlockSize;

  00071	c7 45 f0 0a 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp+24], 10 ; 0000000aH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp

; 98   : 	if( !pIndicatorInfo->GetSubGraphColorList(subGraphColorList)) return;

  00078	8d 4d d8	 lea	 ecx, DWORD PTR _subGraphColorList$[ebp]
  0007b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00082	51		 push	 ecx
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ?GetSubGraphColorList@CIndicatorInfo@@QBE_NAAV?$CList@PAVCGraphColor@@PAV1@@@@Z ; CIndicatorInfo::GetSubGraphColorList
  0008a	84 c0		 test	 al, al
  0008c	74 31		 je	 SHORT $LN3@GetPriceMA

; 99   : 
; 100  : 	int nIndex = 0;
; 101  : 	POSITION pos = subGraphColorList.GetHeadPosition();

  0008e	8b 75 dc	 mov	 esi, DWORD PTR _subGraphColorList$[ebp+4]
  00091	33 ff		 xor	 edi, edi
  00093	85 f6		 test	 esi, esi

; 102  : 	while(pos != NULL) styleData.SetPriceMAColor( nIndex++, subGraphColorList.GetNext(pos)->GetColor1());

  00095	74 28		 je	 SHORT $LN3@GetPriceMA
  00097	8b 5d 08	 mov	 ebx, DWORD PTR _styleData$[ebp]
  0009a	66 0f 1f 44 00
	00		 npad	 6
$LL2@GetPriceMA:
  000a0	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 813  : 		rPosition = (POSITION) pNode->pNext;

  000a3	8b 36		 mov	 esi, DWORD PTR [esi]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp

; 102  : 	while(pos != NULL) styleData.SetPriceMAColor( nIndex++, subGraphColorList.GetNext(pos)->GetColor1());

  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetColor1@CGraphColor@@QBEKXZ
  000ab	89 45 08	 mov	 DWORD PTR $T2[ebp], eax
  000ae	8b cb		 mov	 ecx, ebx
  000b0	8d 45 08	 lea	 eax, DWORD PTR $T2[ebp]
  000b3	50		 push	 eax
  000b4	57		 push	 edi
  000b5	e8 00 00 00 00	 call	 ?SetPriceMAColor@CStyleData@@QAEXHABK@Z ; CStyleData::SetPriceMAColor
  000ba	47		 inc	 edi
  000bb	85 f6		 test	 esi, esi
  000bd	75 e1		 jne	 SHORT $LL2@GetPriceMA
$LN3@GetPriceMA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 872  : 	m_pBlocks->FreeDataChain();

  000bf	8b 4d ec	 mov	 ecx, DWORD PTR _subGraphColorList$[ebp+20]

; 878  : {

  000c2	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000c9	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp], OFFSET ??_7?$CList@PAVCGraphColor@@PAV1@@@6B@

; 870  : 	m_nCount = 0;

  000d0	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp+12], 0

; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  000d7	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp+16], 0
  000de	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp+8], 0
  000e5	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$[ebp+4], 0

; 872  : 	m_pBlocks->FreeDataChain();

  000ec	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain
$LN14@GetPriceMA:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp

; 103  : }

  000f1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fb	59		 pop	 ecx
  000fc	5f		 pop	 edi
  000fd	5e		 pop	 esi
  000fe	5b		 pop	 ebx
  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetPriceMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _subGraphColorList$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CList@PAVCGraphColor@@PAV1@@@UAE@XZ ; CList<CGraphColor *,CGraphColor *>::~CList<CGraphColor *,CGraphColor *>
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?GetPriceMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetPriceMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetPriceMAGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z ENDP ; CChartStyleDataController::GetPriceMAGraphColor
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
;	COMDAT ?SetPriceGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z
_TEXT	SEGMENT
$T2 = -32						; size = 4
$T3 = -28						; size = 4
$T4 = -24						; size = 4
_psnIndicator$ = -20					; size = 4
_pIndicatorInfo$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
$T5 = 8							; size = 4
_styleData$ = 8						; size = 4
?SetPriceGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z PROC ; CChartStyleDataController::SetPriceGraphColor, COMDAT
; _this$ = ecx

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetPriceGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx

; 74   : 	POSITION psnIndicator = NULL;
; 75   : 	CIndicatorInfo *pIndicatorInfo = m_pIndicatorList->GetFirstIndicatorInfo( EILT_USER, _MTEXT( C2_PRICE_CHART), &psnIndicator);

  0002a	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0002d	8d 45 ec	 lea	 eax, DWORD PTR _psnIndicator$[ebp]
  00030	50		 push	 eax
  00031	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  00036	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _psnIndicator$[ebp], 0
  0003d	ff b0 28 03 00
	00		 push	 DWORD PTR [eax+808]
  00043	6a 03		 push	 3
  00045	e8 00 00 00 00	 call	 ?GetFirstIndicatorInfo@CIndicatorList@@QAEPAVCIndicatorInfo@@W4EIndicatorListType@@PBDPAPAU__POSITION@@@Z ; CIndicatorList::GetFirstIndicatorInfo
  0004a	89 45 f0	 mov	 DWORD PTR _pIndicatorInfo$[ebp], eax

; 76   : 	while( pIndicatorInfo)

  0004d	85 c0		 test	 eax, eax
  0004f	0f 84 de 00 00
	00		 je	 $LN3@SetPriceGr
  00055	8b 7d 08	 mov	 edi, DWORD PTR _styleData$[ebp]
  00058	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL2@SetPriceGr:

; 77   : 	{
; 78   : 		CGraphColor *pGraphColor = pIndicatorInfo->GetSubGraphColor_PointerType( 0);

  00060	6a 00		 push	 0
  00062	8b c8		 mov	 ecx, eax
  00064	e8 00 00 00 00	 call	 ?GetSubGraphColor_PointerType@CIndicatorInfo@@QBEPAVCGraphColor@@H@Z ; CIndicatorInfo::GetSubGraphColor_PointerType
  00069	8b f0		 mov	 esi, eax

; 79   : 		if( !pGraphColor) continue;

  0006b	85 f6		 test	 esi, esi
  0006d	0f 84 b5 00 00
	00		 je	 $LN9@SetPriceGr

; 80   : 
; 81   : 		pGraphColor->SetColor1(			styleData.GetPriceUpColor());

  00073	8b cf		 mov	 ecx, edi
  00075	e8 00 00 00 00	 call	 ?GetPriceUpColor@CStyleData@@QBEKXZ ; CStyleData::GetPriceUpColor
  0007a	89 45 08	 mov	 DWORD PTR $T5[ebp], eax
  0007d	8b ce		 mov	 ecx, esi
  0007f	8d 45 08	 lea	 eax, DWORD PTR $T5[ebp]
  00082	50		 push	 eax
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetColor1@CGraphColor@@QAEXABK@Z

; 82   : 		pGraphColor->SetColor3(			styleData.GetPriceDownColor());

  00089	8b cf		 mov	 ecx, edi
  0008b	e8 00 00 00 00	 call	 ?GetPriceDownColor@CStyleData@@QBEKXZ ; CStyleData::GetPriceDownColor
  00090	89 45 e8	 mov	 DWORD PTR $T4[ebp], eax
  00093	8b ce		 mov	 ecx, esi
  00095	8d 45 e8	 lea	 eax, DWORD PTR $T4[ebp]
  00098	50		 push	 eax
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetColor3@CGraphColor@@QAEXABK@Z

; 83   : 		pGraphColor->SetColor5(			styleData.GetPriceEqualColor());

  0009f	8b cf		 mov	 ecx, edi
  000a1	e8 00 00 00 00	 call	 ?GetPriceEqualColor@CStyleData@@QBEKXZ ; CStyleData::GetPriceEqualColor
  000a6	89 45 e4	 mov	 DWORD PTR $T3[ebp], eax
  000a9	8b ce		 mov	 ecx, esi
  000ab	8d 45 e4	 lea	 eax, DWORD PTR $T3[ebp]
  000ae	50		 push	 eax
  000af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetColor5@CGraphColor@@QAEXABK@Z

; 84   : 		pGraphColor->SetUpGraphFill(	styleData.GetPriceUpFill());

  000b5	8b cf		 mov	 ecx, edi
  000b7	e8 00 00 00 00	 call	 ?GetPriceUpFill@CStyleData@@QBE_NXZ ; CStyleData::GetPriceUpFill
  000bc	0f b6 c0	 movzx	 eax, al
  000bf	8b ce		 mov	 ecx, esi
  000c1	50		 push	 eax
  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetUpGraphFill@CGraphColor@@QAEX_N@Z

; 85   : 		pGraphColor->SetDownGraphFill(	styleData.GetPriceDownFill());

  000c8	8b cf		 mov	 ecx, edi
  000ca	e8 00 00 00 00	 call	 ?GetPriceDownFill@CStyleData@@QBE_NXZ ; CStyleData::GetPriceDownFill
  000cf	0f b6 c0	 movzx	 eax, al
  000d2	8b ce		 mov	 ecx, esi
  000d4	50		 push	 eax
  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetDownGraphFill@CGraphColor@@QAEX_N@Z

; 86   : 		m_pMainBlock->ChangeGraphDataFromIndicatorInfo( pIndicatorInfo->GetGraphName(), false);

  000db	8b 4d f0	 mov	 ecx, DWORD PTR _pIndicatorInfo$[ebp]
  000de	8d 45 e0	 lea	 eax, DWORD PTR $T2[ebp]
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 ?GetGraphName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfo::GetGraphName
  000e7	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  000e9	6a 00		 push	 0
  000eb	50		 push	 eax
  000ec	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000f3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f5	ff 92 88 00 00
	00		 call	 DWORD PTR [edx+136]
  000fb	8d 4d e0	 lea	 ecx, DWORD PTR $T2[ebp]
  000fe	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00105	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 87   : 
; 88   : 		m_pIndicatorList->GetNextIndicatorInfo( EILT_USER, _MTEXT( C2_PRICE_CHART), &psnIndicator, pIndicatorInfo);

  0010b	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0010e	8d 45 f0	 lea	 eax, DWORD PTR _pIndicatorInfo$[ebp]
  00111	50		 push	 eax
  00112	8d 45 ec	 lea	 eax, DWORD PTR _psnIndicator$[ebp]
  00115	50		 push	 eax
  00116	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  0011b	ff b0 28 03 00
	00		 push	 DWORD PTR [eax+808]
  00121	6a 03		 push	 3
  00123	e8 00 00 00 00	 call	 ?GetNextIndicatorInfo@CIndicatorList@@QAEXW4EIndicatorListType@@PBDPAPAU__POSITION@@AAPAVCIndicatorInfo@@@Z ; CIndicatorList::GetNextIndicatorInfo
$LN9@SetPriceGr:

; 76   : 	while( pIndicatorInfo)

  00128	8b 45 f0	 mov	 eax, DWORD PTR _pIndicatorInfo$[ebp]
  0012b	85 c0		 test	 eax, eax
  0012d	0f 85 2d ff ff
	ff		 jne	 $LL2@SetPriceGr
$LN3@SetPriceGr:

; 89   : 	}
; 90   : }

  00133	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00136	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0013d	59		 pop	 ecx
  0013e	5f		 pop	 edi
  0013f	5e		 pop	 esi
  00140	5b		 pop	 ebx
  00141	8b e5		 mov	 esp, ebp
  00143	5d		 pop	 ebp
  00144	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetPriceGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
__ehhandler$?SetPriceGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z:
  0000e	90		 npad	 1
  0000f	90		 npad	 1
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetPriceGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetPriceGraphColor@CChartStyleDataController@@IAEXABVCStyleData@@@Z ENDP ; CChartStyleDataController::SetPriceGraphColor
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
;	COMDAT ?GetPriceGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
$T2 = 8							; size = 4
$T3 = 8							; size = 4
_styleData$ = 8						; size = 4
$T4 = 11						; size = 1
$T5 = 11						; size = 1
?GetPriceGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z PROC ; CChartStyleDataController::GetPriceGraphColor, COMDAT
; _this$ = ecx

; 61   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 62   : 	CIndicatorInfo* pIndicatorInfo = m_pIndicatorList->GetFirstIndicatorInfo( EILT_USER, _MTEXT( C2_PRICE_CHART));

  00004	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  00009	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000c	6a 00		 push	 0
  0000e	ff b0 28 03 00
	00		 push	 DWORD PTR [eax+808]
  00014	6a 03		 push	 3
  00016	e8 00 00 00 00	 call	 ?GetFirstIndicatorInfo@CIndicatorList@@QAEPAVCIndicatorInfo@@W4EIndicatorListType@@PBDPAPAU__POSITION@@@Z ; CIndicatorList::GetFirstIndicatorInfo

; 63   : 	if( !pIndicatorInfo) return;

  0001b	85 c0		 test	 eax, eax
  0001d	0f 84 80 00 00
	00		 je	 $LN1@GetPriceGr

; 64   : 	CGraphColor *pGraphColor = pIndicatorInfo->GetSubGraphColor_PointerType( 0);

  00023	56		 push	 esi
  00024	57		 push	 edi
  00025	6a 00		 push	 0
  00027	8b c8		 mov	 ecx, eax
  00029	e8 00 00 00 00	 call	 ?GetSubGraphColor_PointerType@CIndicatorInfo@@QBEPAVCGraphColor@@H@Z ; CIndicatorInfo::GetSubGraphColor_PointerType
  0002e	8b f8		 mov	 edi, eax

; 65   : 
; 66   : 	styleData.SetPriceUpColor(		pGraphColor->GetColor1());

  00030	8b cf		 mov	 ecx, edi
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetColor1@CGraphColor@@QBEKXZ
  00038	8b 75 08	 mov	 esi, DWORD PTR _styleData$[ebp]
  0003b	8b ce		 mov	 ecx, esi
  0003d	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00040	8d 45 fc	 lea	 eax, DWORD PTR $T1[ebp]
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?SetPriceUpColor@CStyleData@@QAEXABK@Z ; CStyleData::SetPriceUpColor

; 67   : 	styleData.SetPriceDownColor(	pGraphColor->GetColor3());

  00049	8b cf		 mov	 ecx, edi
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetColor3@CGraphColor@@QBEKXZ
  00051	89 45 08	 mov	 DWORD PTR $T3[ebp], eax
  00054	8b ce		 mov	 ecx, esi
  00056	8d 45 08	 lea	 eax, DWORD PTR $T3[ebp]
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?SetPriceDownColor@CStyleData@@QAEXABK@Z ; CStyleData::SetPriceDownColor

; 68   : 	styleData.SetPriceEqualColor(	pGraphColor->GetColor5());

  0005f	8b cf		 mov	 ecx, edi
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetColor5@CGraphColor@@QBEKXZ
  00067	89 45 08	 mov	 DWORD PTR $T2[ebp], eax
  0006a	8b ce		 mov	 ecx, esi
  0006c	8d 45 08	 lea	 eax, DWORD PTR $T2[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?SetPriceEqualColor@CStyleData@@QAEXABK@Z ; CStyleData::SetPriceEqualColor

; 69   : 	styleData.SetPriceUpFill(		pGraphColor->GetUpGraphFill());

  00075	8b cf		 mov	 ecx, edi
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetUpGraphFill@CGraphColor@@QBE_NXZ
  0007d	88 45 0b	 mov	 BYTE PTR $T5[ebp], al
  00080	8b ce		 mov	 ecx, esi
  00082	8d 45 0b	 lea	 eax, DWORD PTR $T5[ebp]
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ?SetPriceUpFill@CStyleData@@QAEXAB_N@Z ; CStyleData::SetPriceUpFill

; 70   : 	styleData.SetPriceDownFill(		pGraphColor->GetDownGraphFill());

  0008b	8b cf		 mov	 ecx, edi
  0008d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDownGraphFill@CGraphColor@@QBE_NXZ
  00093	88 45 0b	 mov	 BYTE PTR $T4[ebp], al
  00096	8b ce		 mov	 ecx, esi
  00098	8d 45 0b	 lea	 eax, DWORD PTR $T4[ebp]
  0009b	50		 push	 eax
  0009c	e8 00 00 00 00	 call	 ?SetPriceDownFill@CStyleData@@QAEXAB_N@Z ; CStyleData::SetPriceDownFill
  000a1	5f		 pop	 edi
  000a2	5e		 pop	 esi
$LN1@GetPriceGr:

; 71   : }

  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c2 04 00	 ret	 4
?GetPriceGraphColor@CChartStyleDataController@@IBEXAAVCStyleData@@@Z ENDP ; CChartStyleDataController::GetPriceGraphColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
;	COMDAT ?SetStyleData_Indicator@CChartStyleDataController@@QAEXABVCStyleData@@@Z
_TEXT	SEGMENT
$T2 = -52						; size = 4
$T3 = -48						; size = 4
$T4 = -48						; size = 4
$T5 = -48						; size = 4
$T6 = -48						; size = 4
$T7 = -44						; size = 4
$T8 = -44						; size = 4
$T9 = -44						; size = 4
$T10 = -40						; size = 4
$T11 = -40						; size = 4
$T12 = -36						; size = 4
$T13 = -36						; size = 4
_psnIndicator$14 = -32					; size = 4
_this$1$ = -28						; size = 4
_psnIndicator$15 = -24					; size = 4
_psnIndicator$16 = -24					; size = 4
_psnIndicator$17 = -24					; size = 4
_nMACount$1$ = -20					; size = 4
_pIndicatorInfo$18 = -20				; size = 4
_pIndicatorInfo$19 = -20				; size = 4
_pIndicatorInfo$20 = -16				; size = 4
__$EHRec$ = -12						; size = 12
_nMACount$1$ = 8					; size = 4
_pGraphColor$1$ = 8					; size = 4
_pGraphColor$1$ = 8					; size = 4
_pIndicatorInfo$21 = 8					; size = 4
_styleData$ = 8						; size = 4
?SetStyleData_Indicator@CChartStyleDataController@@QAEXABVCStyleData@@@Z PROC ; CChartStyleDataController::SetStyleData_Indicator, COMDAT
; _this$ = ecx

; 46   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetStyleData_Indicator@CChartStyleDataController@@QAEXABVCStyleData@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx
  0002a	89 7d e4	 mov	 DWORD PTR _this$1$[ebp], edi

; 47   : 	if( !m_pMainBlock || !m_pIndicatorList) return;

  0002d	83 3f 00	 cmp	 DWORD PTR [edi], 0
  00030	0f 84 a7 03 00
	00		 je	 $LN3@SetStyleDa
  00036	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00039	85 c9		 test	 ecx, ecx
  0003b	0f 84 9c 03 00
	00		 je	 $LN3@SetStyleDa

; 75   : 	CIndicatorInfo *pIndicatorInfo = m_pIndicatorList->GetFirstIndicatorInfo( EILT_USER, _MTEXT( C2_PRICE_CHART), &psnIndicator);

  00041	8d 45 e8	 lea	 eax, DWORD PTR _psnIndicator$17[ebp]
  00044	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _psnIndicator$17[ebp], 0
  0004b	50		 push	 eax
  0004c	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  00051	ff b0 28 03 00
	00		 push	 DWORD PTR [eax+808]
  00057	6a 03		 push	 3
  00059	e8 00 00 00 00	 call	 ?GetFirstIndicatorInfo@CIndicatorList@@QAEPAVCIndicatorInfo@@W4EIndicatorListType@@PBDPAPAU__POSITION@@@Z ; CIndicatorList::GetFirstIndicatorInfo

; 76   : 	while( pIndicatorInfo)

  0005e	8b 5d 08	 mov	 ebx, DWORD PTR _styleData$[ebp]
  00061	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?SetColor1@CGraphColor@@QAEXABK@Z
  00067	89 45 ec	 mov	 DWORD PTR _pIndicatorInfo$19[ebp], eax
  0006a	85 c0		 test	 eax, eax
  0006c	0f 84 d5 00 00
	00		 je	 $LN7@SetStyleDa
$LL6@SetStyleDa:

; 77   : 	{
; 78   : 		CGraphColor *pGraphColor = pIndicatorInfo->GetSubGraphColor_PointerType( 0);

  00072	6a 00		 push	 0
  00074	8b c8		 mov	 ecx, eax
  00076	e8 00 00 00 00	 call	 ?GetSubGraphColor_PointerType@CIndicatorInfo@@QBEPAVCGraphColor@@H@Z ; CIndicatorInfo::GetSubGraphColor_PointerType
  0007b	89 45 08	 mov	 DWORD PTR _pGraphColor$1$[ebp], eax

; 79   : 		if( !pGraphColor) continue;

  0007e	85 c0		 test	 eax, eax
  00080	0f 84 b6 00 00
	00		 je	 $LN43@SetStyleDa

; 80   : 
; 81   : 		pGraphColor->SetColor1(			styleData.GetPriceUpColor());

  00086	8b cb		 mov	 ecx, ebx
  00088	e8 00 00 00 00	 call	 ?GetPriceUpColor@CStyleData@@QBEKXZ ; CStyleData::GetPriceUpColor
  0008d	8b 4d 08	 mov	 ecx, DWORD PTR _pGraphColor$1$[ebp]
  00090	89 45 dc	 mov	 DWORD PTR $T13[ebp], eax
  00093	8d 45 dc	 lea	 eax, DWORD PTR $T13[ebp]
  00096	50		 push	 eax
  00097	ff d6		 call	 esi

; 82   : 		pGraphColor->SetColor3(			styleData.GetPriceDownColor());

  00099	8b cb		 mov	 ecx, ebx
  0009b	e8 00 00 00 00	 call	 ?GetPriceDownColor@CStyleData@@QBEKXZ ; CStyleData::GetPriceDownColor
  000a0	8b 4d 08	 mov	 ecx, DWORD PTR _pGraphColor$1$[ebp]
  000a3	89 45 d8	 mov	 DWORD PTR $T11[ebp], eax
  000a6	8d 45 d8	 lea	 eax, DWORD PTR $T11[ebp]
  000a9	50		 push	 eax
  000aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetColor3@CGraphColor@@QAEXABK@Z

; 83   : 		pGraphColor->SetColor5(			styleData.GetPriceEqualColor());

  000b0	8b cb		 mov	 ecx, ebx
  000b2	e8 00 00 00 00	 call	 ?GetPriceEqualColor@CStyleData@@QBEKXZ ; CStyleData::GetPriceEqualColor
  000b7	8b 4d 08	 mov	 ecx, DWORD PTR _pGraphColor$1$[ebp]
  000ba	89 45 d4	 mov	 DWORD PTR $T9[ebp], eax
  000bd	8d 45 d4	 lea	 eax, DWORD PTR $T9[ebp]
  000c0	50		 push	 eax
  000c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetColor5@CGraphColor@@QAEXABK@Z

; 84   : 		pGraphColor->SetUpGraphFill(	styleData.GetPriceUpFill());

  000c7	8b cb		 mov	 ecx, ebx
  000c9	e8 00 00 00 00	 call	 ?GetPriceUpFill@CStyleData@@QBE_NXZ ; CStyleData::GetPriceUpFill
  000ce	8b 4d 08	 mov	 ecx, DWORD PTR _pGraphColor$1$[ebp]
  000d1	0f b6 c0	 movzx	 eax, al
  000d4	50		 push	 eax
  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetUpGraphFill@CGraphColor@@QAEX_N@Z

; 85   : 		pGraphColor->SetDownGraphFill(	styleData.GetPriceDownFill());

  000db	8b cb		 mov	 ecx, ebx
  000dd	e8 00 00 00 00	 call	 ?GetPriceDownFill@CStyleData@@QBE_NXZ ; CStyleData::GetPriceDownFill
  000e2	8b 4d 08	 mov	 ecx, DWORD PTR _pGraphColor$1$[ebp]
  000e5	0f b6 c0	 movzx	 eax, al
  000e8	50		 push	 eax
  000e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetDownGraphFill@CGraphColor@@QAEX_N@Z

; 86   : 		m_pMainBlock->ChangeGraphDataFromIndicatorInfo( pIndicatorInfo->GetGraphName(), false);

  000ef	8b 4d ec	 mov	 ecx, DWORD PTR _pIndicatorInfo$19[ebp]
  000f2	8d 45 d0	 lea	 eax, DWORD PTR $T6[ebp]
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ?GetGraphName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfo::GetGraphName
  000fb	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000fd	6a 00		 push	 0
  000ff	50		 push	 eax
  00100	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00107	8b 11		 mov	 edx, DWORD PTR [ecx]
  00109	ff 92 88 00 00
	00		 call	 DWORD PTR [edx+136]
  0010f	8d 4d d0	 lea	 ecx, DWORD PTR $T6[ebp]
  00112	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00119	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 87   : 
; 88   : 		m_pIndicatorList->GetNextIndicatorInfo( EILT_USER, _MTEXT( C2_PRICE_CHART), &psnIndicator, pIndicatorInfo);

  0011f	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00122	8d 45 ec	 lea	 eax, DWORD PTR _pIndicatorInfo$19[ebp]
  00125	50		 push	 eax
  00126	8d 45 e8	 lea	 eax, DWORD PTR _psnIndicator$17[ebp]
  00129	50		 push	 eax
  0012a	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  0012f	ff b0 28 03 00
	00		 push	 DWORD PTR [eax+808]
  00135	6a 03		 push	 3
  00137	e8 00 00 00 00	 call	 ?GetNextIndicatorInfo@CIndicatorList@@QAEXW4EIndicatorListType@@PBDPAPAU__POSITION@@AAPAVCIndicatorInfo@@@Z ; CIndicatorList::GetNextIndicatorInfo
$LN43@SetStyleDa:

; 76   : 	while( pIndicatorInfo)

  0013c	8b 45 ec	 mov	 eax, DWORD PTR _pIndicatorInfo$19[ebp]
  0013f	85 c0		 test	 eax, eax
  00141	0f 85 2b ff ff
	ff		 jne	 $LL6@SetStyleDa
$LN7@SetStyleDa:

; 107  : 	CIndicatorInfo *pIndicatorInfo = m_pIndicatorList->GetFirstIndicatorInfo( EILT_USER, _MTEXT( C2_PRICE_MA), &psnIndicator);

  00147	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0014a	8d 45 e8	 lea	 eax, DWORD PTR _psnIndicator$16[ebp]
  0014d	50		 push	 eax
  0014e	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  00153	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _psnIndicator$16[ebp], 0
  0015a	ff b0 20 03 00
	00		 push	 DWORD PTR [eax+800]
  00160	6a 03		 push	 3
  00162	e8 00 00 00 00	 call	 ?GetFirstIndicatorInfo@CIndicatorList@@QAEPAVCIndicatorInfo@@W4EIndicatorListType@@PBDPAPAU__POSITION@@@Z ; CIndicatorList::GetFirstIndicatorInfo

; 108  : 	int nMACount = styleData.GetPriceMACount();

  00167	8b cb		 mov	 ecx, ebx
  00169	89 45 08	 mov	 DWORD PTR _pIndicatorInfo$21[ebp], eax
  0016c	e8 00 00 00 00	 call	 ?GetPriceMACount@CStyleData@@QBEHXZ ; CStyleData::GetPriceMACount

; 109  : 	while( pIndicatorInfo)

  00171	8b 4d 08	 mov	 ecx, DWORD PTR _pIndicatorInfo$21[ebp]
  00174	89 45 ec	 mov	 DWORD PTR _nMACount$1$[ebp], eax
  00177	85 c9		 test	 ecx, ecx
  00179	0f 84 94 00 00
	00		 je	 $LN13@SetStyleDa
  0017f	90		 npad	 1
$LL12@SetStyleDa:

; 110  : 	{
; 111  : 		for( int i = 0; i < nMACount; i++)

  00180	33 f6		 xor	 esi, esi
  00182	85 c0		 test	 eax, eax
  00184	7e 2f		 jle	 SHORT $LN15@SetStyleDa
$LL16@SetStyleDa:

; 112  : 		{
; 113  : 			CGraphColor *pGraphColor = pIndicatorInfo->GetSubGraphColor_PointerType( i);

  00186	56		 push	 esi
  00187	e8 00 00 00 00	 call	 ?GetSubGraphColor_PointerType@CIndicatorInfo@@QBEPAVCGraphColor@@H@Z ; CIndicatorInfo::GetSubGraphColor_PointerType
  0018c	8b f8		 mov	 edi, eax

; 114  : 			if( !pGraphColor) continue;

  0018e	85 ff		 test	 edi, edi
  00190	74 17		 je	 SHORT $LN14@SetStyleDa

; 115  : 			pGraphColor->SetColor1( styleData.GetPriceMAColor( i));

  00192	56		 push	 esi
  00193	8b cb		 mov	 ecx, ebx
  00195	e8 00 00 00 00	 call	 ?GetPriceMAColor@CStyleData@@QBEKH@Z ; CStyleData::GetPriceMAColor
  0019a	89 45 d0	 mov	 DWORD PTR $T5[ebp], eax
  0019d	8b cf		 mov	 ecx, edi
  0019f	8d 45 d0	 lea	 eax, DWORD PTR $T5[ebp]
  001a2	50		 push	 eax
  001a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetColor1@CGraphColor@@QAEXABK@Z
$LN14@SetStyleDa:

; 110  : 	{
; 111  : 		for( int i = 0; i < nMACount; i++)

  001a9	8b 4d 08	 mov	 ecx, DWORD PTR _pIndicatorInfo$21[ebp]
  001ac	46		 inc	 esi
  001ad	3b 75 ec	 cmp	 esi, DWORD PTR _nMACount$1$[ebp]
  001b0	7c d4		 jl	 SHORT $LL16@SetStyleDa
  001b2	8b 7d e4	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN15@SetStyleDa:

; 116  : 		}
; 117  : 		m_pMainBlock->ChangeGraphDataFromIndicatorInfo( pIndicatorInfo->GetGraphName(), false);

  001b5	8d 45 d4	 lea	 eax, DWORD PTR $T8[ebp]
  001b8	50		 push	 eax
  001b9	e8 00 00 00 00	 call	 ?GetGraphName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfo::GetGraphName
  001be	8b 0f		 mov	 ecx, DWORD PTR [edi]
  001c0	6a 00		 push	 0
  001c2	50		 push	 eax
  001c3	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  001ca	8b 11		 mov	 edx, DWORD PTR [ecx]
  001cc	ff 92 88 00 00
	00		 call	 DWORD PTR [edx+136]
  001d2	8d 4d d4	 lea	 ecx, DWORD PTR $T8[ebp]
  001d5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 118  : 
; 119  : 		m_pIndicatorList->GetNextIndicatorInfo( EILT_USER, _MTEXT( C2_PRICE_MA), &psnIndicator, pIndicatorInfo);

  001e2	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  001e5	8d 45 08	 lea	 eax, DWORD PTR _pIndicatorInfo$21[ebp]
  001e8	50		 push	 eax
  001e9	8d 45 e8	 lea	 eax, DWORD PTR _psnIndicator$16[ebp]
  001ec	50		 push	 eax
  001ed	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  001f2	ff b0 20 03 00
	00		 push	 DWORD PTR [eax+800]
  001f8	6a 03		 push	 3
  001fa	e8 00 00 00 00	 call	 ?GetNextIndicatorInfo@CIndicatorList@@QAEXW4EIndicatorListType@@PBDPAPAU__POSITION@@AAPAVCIndicatorInfo@@@Z ; CIndicatorList::GetNextIndicatorInfo
  001ff	8b 4d 08	 mov	 ecx, DWORD PTR _pIndicatorInfo$21[ebp]
  00202	8b 45 ec	 mov	 eax, DWORD PTR _nMACount$1$[ebp]
  00205	85 c9		 test	 ecx, ecx
  00207	0f 85 73 ff ff
	ff		 jne	 $LL12@SetStyleDa
  0020d	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?SetColor1@CGraphColor@@QAEXABK@Z
$LN13@SetStyleDa:

; 140  : 	CIndicatorInfo *pIndicatorInfo = m_pIndicatorList->GetFirstIndicatorInfo( EILT_USER, _MTEXT( C2_VOLUME_CHART), &psnIndicator);

  00213	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00216	8d 45 e8	 lea	 eax, DWORD PTR _psnIndicator$15[ebp]
  00219	50		 push	 eax
  0021a	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  0021f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _psnIndicator$15[ebp], 0
  00226	ff b0 2c 03 00
	00		 push	 DWORD PTR [eax+812]
  0022c	6a 03		 push	 3
  0022e	e8 00 00 00 00	 call	 ?GetFirstIndicatorInfo@CIndicatorList@@QAEPAVCIndicatorInfo@@W4EIndicatorListType@@PBDPAPAU__POSITION@@@Z ; CIndicatorList::GetFirstIndicatorInfo
  00233	89 45 ec	 mov	 DWORD PTR _pIndicatorInfo$18[ebp], eax

; 141  : 	while( pIndicatorInfo)

  00236	85 c0		 test	 eax, eax
  00238	0f 84 d7 00 00
	00		 je	 $LN22@SetStyleDa
  0023e	66 90		 npad	 2
$LL21@SetStyleDa:

; 142  : 	{
; 143  : 		CGraphColor *pGraphColor = pIndicatorInfo->GetSubGraphColor_PointerType( 0);

  00240	6a 00		 push	 0
  00242	8b c8		 mov	 ecx, eax
  00244	e8 00 00 00 00	 call	 ?GetSubGraphColor_PointerType@CIndicatorInfo@@QBEPAVCGraphColor@@H@Z ; CIndicatorInfo::GetSubGraphColor_PointerType
  00249	89 45 08	 mov	 DWORD PTR _pGraphColor$1$[ebp], eax

; 144  : 		if( !pGraphColor) continue;

  0024c	85 c0		 test	 eax, eax
  0024e	0f 84 b6 00 00
	00		 je	 $LN46@SetStyleDa

; 145  : 
; 146  : 		pGraphColor->SetColor1(			styleData.GetTradeUpColor());

  00254	8b cb		 mov	 ecx, ebx
  00256	e8 00 00 00 00	 call	 ?GetTradeUpColor@CStyleData@@QBEKXZ ; CStyleData::GetTradeUpColor
  0025b	8b 4d 08	 mov	 ecx, DWORD PTR _pGraphColor$1$[ebp]
  0025e	89 45 d0	 mov	 DWORD PTR $T4[ebp], eax
  00261	8d 45 d0	 lea	 eax, DWORD PTR $T4[ebp]
  00264	50		 push	 eax
  00265	ff d6		 call	 esi

; 147  : 		pGraphColor->SetColor3(			styleData.GetTradeDownColor());

  00267	8b cb		 mov	 ecx, ebx
  00269	e8 00 00 00 00	 call	 ?GetTradeDownColor@CStyleData@@QBEKXZ ; CStyleData::GetTradeDownColor
  0026e	8b 4d 08	 mov	 ecx, DWORD PTR _pGraphColor$1$[ebp]
  00271	89 45 d4	 mov	 DWORD PTR $T7[ebp], eax
  00274	8d 45 d4	 lea	 eax, DWORD PTR $T7[ebp]
  00277	50		 push	 eax
  00278	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetColor3@CGraphColor@@QAEXABK@Z

; 148  : 		pGraphColor->SetColor5(			styleData.GetTradeEqualColor());

  0027e	8b cb		 mov	 ecx, ebx
  00280	e8 00 00 00 00	 call	 ?GetTradeEqualColor@CStyleData@@QBEKXZ ; CStyleData::GetTradeEqualColor
  00285	8b 4d 08	 mov	 ecx, DWORD PTR _pGraphColor$1$[ebp]
  00288	89 45 d8	 mov	 DWORD PTR $T10[ebp], eax
  0028b	8d 45 d8	 lea	 eax, DWORD PTR $T10[ebp]
  0028e	50		 push	 eax
  0028f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetColor5@CGraphColor@@QAEXABK@Z

; 149  : 		pGraphColor->SetUpGraphFill(	styleData.GetTradeUpFill());

  00295	8b cb		 mov	 ecx, ebx
  00297	e8 00 00 00 00	 call	 ?GetTradeUpFill@CStyleData@@QBE_NXZ ; CStyleData::GetTradeUpFill
  0029c	8b 4d 08	 mov	 ecx, DWORD PTR _pGraphColor$1$[ebp]
  0029f	0f b6 c0	 movzx	 eax, al
  002a2	50		 push	 eax
  002a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetUpGraphFill@CGraphColor@@QAEX_N@Z

; 150  : 		pGraphColor->SetDownGraphFill(	styleData.GetTradeDownFill());

  002a9	8b cb		 mov	 ecx, ebx
  002ab	e8 00 00 00 00	 call	 ?GetTradeDownFill@CStyleData@@QBE_NXZ ; CStyleData::GetTradeDownFill
  002b0	8b 4d 08	 mov	 ecx, DWORD PTR _pGraphColor$1$[ebp]
  002b3	0f b6 c0	 movzx	 eax, al
  002b6	50		 push	 eax
  002b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetDownGraphFill@CGraphColor@@QAEX_N@Z

; 151  : 		m_pMainBlock->ChangeGraphDataFromIndicatorInfo( pIndicatorInfo->GetGraphName(), false);

  002bd	8b 4d ec	 mov	 ecx, DWORD PTR _pIndicatorInfo$18[ebp]
  002c0	8d 45 dc	 lea	 eax, DWORD PTR $T12[ebp]
  002c3	50		 push	 eax
  002c4	e8 00 00 00 00	 call	 ?GetGraphName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfo::GetGraphName
  002c9	8b 0f		 mov	 ecx, DWORD PTR [edi]
  002cb	6a 00		 push	 0
  002cd	50		 push	 eax
  002ce	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  002d5	8b 11		 mov	 edx, DWORD PTR [ecx]
  002d7	ff 92 88 00 00
	00		 call	 DWORD PTR [edx+136]
  002dd	8d 4d dc	 lea	 ecx, DWORD PTR $T12[ebp]
  002e0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  002e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 152  : 
; 153  : 		m_pIndicatorList->GetNextIndicatorInfo( EILT_USER, _MTEXT( C2_VOLUME_CHART), &psnIndicator, pIndicatorInfo);

  002ed	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  002f0	8d 45 ec	 lea	 eax, DWORD PTR _pIndicatorInfo$18[ebp]
  002f3	50		 push	 eax
  002f4	8d 45 e8	 lea	 eax, DWORD PTR _psnIndicator$15[ebp]
  002f7	50		 push	 eax
  002f8	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  002fd	ff b0 2c 03 00
	00		 push	 DWORD PTR [eax+812]
  00303	6a 03		 push	 3
  00305	e8 00 00 00 00	 call	 ?GetNextIndicatorInfo@CIndicatorList@@QAEXW4EIndicatorListType@@PBDPAPAU__POSITION@@AAPAVCIndicatorInfo@@@Z ; CIndicatorList::GetNextIndicatorInfo
$LN46@SetStyleDa:

; 141  : 	while( pIndicatorInfo)

  0030a	8b 45 ec	 mov	 eax, DWORD PTR _pIndicatorInfo$18[ebp]
  0030d	85 c0		 test	 eax, eax
  0030f	0f 85 2b ff ff
	ff		 jne	 $LL21@SetStyleDa
$LN22@SetStyleDa:

; 172  : 	CIndicatorInfo *pIndicatorInfo = m_pIndicatorList->GetFirstIndicatorInfo( EILT_USER, _MTEXT( C2_VOLUME_MA), &psnIndicator);

  00315	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00318	8d 45 e0	 lea	 eax, DWORD PTR _psnIndicator$14[ebp]
  0031b	50		 push	 eax
  0031c	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  00321	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _psnIndicator$14[ebp], 0
  00328	ff b0 24 03 00
	00		 push	 DWORD PTR [eax+804]
  0032e	6a 03		 push	 3
  00330	e8 00 00 00 00	 call	 ?GetFirstIndicatorInfo@CIndicatorList@@QAEPAVCIndicatorInfo@@W4EIndicatorListType@@PBDPAPAU__POSITION@@@Z ; CIndicatorList::GetFirstIndicatorInfo

; 173  : 	int nMACount = styleData.GetPriceMACount();

  00335	8b cb		 mov	 ecx, ebx
  00337	89 45 f0	 mov	 DWORD PTR _pIndicatorInfo$20[ebp], eax
  0033a	e8 00 00 00 00	 call	 ?GetPriceMACount@CStyleData@@QBEHXZ ; CStyleData::GetPriceMACount

; 174  : 	while( pIndicatorInfo)

  0033f	8b 4d f0	 mov	 ecx, DWORD PTR _pIndicatorInfo$20[ebp]
  00342	89 45 08	 mov	 DWORD PTR _nMACount$1$[ebp], eax
  00345	85 c9		 test	 ecx, ecx
  00347	0f 84 90 00 00
	00		 je	 $LN3@SetStyleDa
  0034d	0f 1f 00	 npad	 3
$LL27@SetStyleDa:

; 175  : 	{
; 176  : 		for( int i = 0; i < nMACount; i++)

  00350	33 f6		 xor	 esi, esi
  00352	85 c0		 test	 eax, eax
  00354	7e 2f		 jle	 SHORT $LN30@SetStyleDa
$LL31@SetStyleDa:

; 177  : 		{
; 178  : 			CGraphColor *pGraphColor = pIndicatorInfo->GetSubGraphColor_PointerType( i);

  00356	56		 push	 esi
  00357	e8 00 00 00 00	 call	 ?GetSubGraphColor_PointerType@CIndicatorInfo@@QBEPAVCGraphColor@@H@Z ; CIndicatorInfo::GetSubGraphColor_PointerType
  0035c	8b f8		 mov	 edi, eax

; 179  : 			if( !pGraphColor) continue;

  0035e	85 ff		 test	 edi, edi
  00360	74 17		 je	 SHORT $LN29@SetStyleDa

; 180  : 			pGraphColor->SetColor1( styleData.GetPriceMAColor( i));

  00362	56		 push	 esi
  00363	8b cb		 mov	 ecx, ebx
  00365	e8 00 00 00 00	 call	 ?GetPriceMAColor@CStyleData@@QBEKH@Z ; CStyleData::GetPriceMAColor
  0036a	89 45 d0	 mov	 DWORD PTR $T3[ebp], eax
  0036d	8b cf		 mov	 ecx, edi
  0036f	8d 45 d0	 lea	 eax, DWORD PTR $T3[ebp]
  00372	50		 push	 eax
  00373	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetColor1@CGraphColor@@QAEXABK@Z
$LN29@SetStyleDa:

; 175  : 	{
; 176  : 		for( int i = 0; i < nMACount; i++)

  00379	8b 4d f0	 mov	 ecx, DWORD PTR _pIndicatorInfo$20[ebp]
  0037c	46		 inc	 esi
  0037d	3b 75 08	 cmp	 esi, DWORD PTR _nMACount$1$[ebp]
  00380	7c d4		 jl	 SHORT $LL31@SetStyleDa
  00382	8b 7d e4	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN30@SetStyleDa:

; 181  : 		}
; 182  : 		m_pMainBlock->ChangeGraphDataFromIndicatorInfo( pIndicatorInfo->GetGraphName(), false);

  00385	8d 45 cc	 lea	 eax, DWORD PTR $T2[ebp]
  00388	50		 push	 eax
  00389	e8 00 00 00 00	 call	 ?GetGraphName@CIndicatorInfo@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CIndicatorInfo::GetGraphName
  0038e	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00390	6a 00		 push	 0
  00392	50		 push	 eax
  00393	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  0039a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0039c	ff 92 88 00 00
	00		 call	 DWORD PTR [edx+136]
  003a2	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  003a5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  003ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 183  : 
; 184  : 		m_pIndicatorList->GetNextIndicatorInfo( EILT_USER, _MTEXT( C2_PRICE_MA), &psnIndicator, pIndicatorInfo);

  003b2	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  003b5	8d 45 f0	 lea	 eax, DWORD PTR _pIndicatorInfo$20[ebp]
  003b8	50		 push	 eax
  003b9	8d 45 e0	 lea	 eax, DWORD PTR _psnIndicator$14[ebp]
  003bc	50		 push	 eax
  003bd	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  003c2	ff b0 20 03 00
	00		 push	 DWORD PTR [eax+800]
  003c8	6a 03		 push	 3
  003ca	e8 00 00 00 00	 call	 ?GetNextIndicatorInfo@CIndicatorList@@QAEXW4EIndicatorListType@@PBDPAPAU__POSITION@@AAPAVCIndicatorInfo@@@Z ; CIndicatorList::GetNextIndicatorInfo
  003cf	8b 4d f0	 mov	 ecx, DWORD PTR _pIndicatorInfo$20[ebp]
  003d2	8b 45 08	 mov	 eax, DWORD PTR _nMACount$1$[ebp]
  003d5	85 c9		 test	 ecx, ecx
  003d7	0f 85 73 ff ff
	ff		 jne	 $LL27@SetStyleDa
$LN3@SetStyleDa:

; 48   : 
; 49   : 	SetPriceGraphColor(		styleData);
; 50   : 	SetPriceMAGraphColor(	styleData);
; 51   : 	SetVolumeGraphColor(	styleData);
; 52   : 	SetVolumeMAGraphColor(	styleData);
; 53   : }

  003dd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  003e0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  003e7	59		 pop	 ecx
  003e8	5f		 pop	 edi
  003e9	5e		 pop	 esi
  003ea	5b		 pop	 ebx
  003eb	8b e5		 mov	 esp, ebp
  003ed	5d		 pop	 ebp
  003ee	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetStyleData_Indicator@CChartStyleDataController@@QAEXABVCStyleData@@@Z$0:
  00000	8d 4d d0	 lea	 ecx, DWORD PTR $T6[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?SetStyleData_Indicator@CChartStyleDataController@@QAEXABVCStyleData@@@Z$1:
  00009	8d 4d d4	 lea	 ecx, DWORD PTR $T8[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?SetStyleData_Indicator@CChartStyleDataController@@QAEXABVCStyleData@@@Z$2:
  00012	8d 4d dc	 lea	 ecx, DWORD PTR $T12[ebp]
  00015	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?SetStyleData_Indicator@CChartStyleDataController@@QAEXABVCStyleData@@@Z$3:
  0001b	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  0001e	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00024	cc		 int	 3
  00025	cc		 int	 3
  00026	cc		 int	 3
  00027	cc		 int	 3
  00028	cc		 int	 3
__ehhandler$?SetStyleData_Indicator@CChartStyleDataController@@QAEXABVCStyleData@@@Z:
  00029	90		 npad	 1
  0002a	90		 npad	 1
  0002b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00032	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetStyleData_Indicator@CChartStyleDataController@@QAEXABVCStyleData@@@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetStyleData_Indicator@CChartStyleDataController@@QAEXABVCStyleData@@@Z ENDP ; CChartStyleDataController::SetStyleData_Indicator
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
;	COMDAT ?GetStyleData_Indicator@CChartStyleDataController@@QBEXAAVCStyleData@@@Z
_TEXT	SEGMENT
_subGraphColorList$2 = -72				; size = 28
_subGraphColorList$3 = -44				; size = 28
_this$1$ = -16						; size = 4
$T4 = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T5 = 8							; size = 4
$T6 = 8							; size = 4
$T7 = 8							; size = 4
$T8 = 8							; size = 4
$T9 = 8							; size = 4
$T10 = 8						; size = 4
$T11 = 8						; size = 4
_styleData$ = 8						; size = 4
$T12 = 11						; size = 1
$T13 = 11						; size = 1
$T14 = 11						; size = 1
$T15 = 11						; size = 1
?GetStyleData_Indicator@CChartStyleDataController@@QBEXAAVCStyleData@@@Z PROC ; CChartStyleDataController::GetStyleData_Indicator, COMDAT
; _this$ = ecx

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetStyleData_Indicator@CChartStyleDataController@@QBEXAAVCStyleData@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b c1		 mov	 eax, ecx
  0002a	89 45 f0	 mov	 DWORD PTR _this$1$[ebp], eax

; 36   : 	if( !m_pMainBlock || !m_pIndicatorList) return;

  0002d	83 38 00	 cmp	 DWORD PTR [eax], 0
  00030	0f 84 0b 03 00
	00		 je	 $LN3@GetStyleDa
  00036	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00039	85 c9		 test	 ecx, ecx
  0003b	0f 84 00 03 00
	00		 je	 $LN3@GetStyleDa

; 62   : 	CIndicatorInfo* pIndicatorInfo = m_pIndicatorList->GetFirstIndicatorInfo( EILT_USER, _MTEXT( C2_PRICE_CHART));

  00041	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  00046	6a 00		 push	 0
  00048	ff b0 28 03 00
	00		 push	 DWORD PTR [eax+808]
  0004e	6a 03		 push	 3
  00050	e8 00 00 00 00	 call	 ?GetFirstIndicatorInfo@CIndicatorList@@QAEPAVCIndicatorInfo@@W4EIndicatorListType@@PBDPAPAU__POSITION@@@Z ; CIndicatorList::GetFirstIndicatorInfo

; 63   : 	if( !pIndicatorInfo) return;

  00055	8b 5d 08	 mov	 ebx, DWORD PTR _styleData$[ebp]
  00058	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetColor1@CGraphColor@@QBEKXZ
  0005e	85 c0		 test	 eax, eax
  00060	74 75		 je	 SHORT $LN5@GetStyleDa

; 64   : 	CGraphColor *pGraphColor = pIndicatorInfo->GetSubGraphColor_PointerType( 0);

  00062	6a 00		 push	 0
  00064	8b c8		 mov	 ecx, eax
  00066	e8 00 00 00 00	 call	 ?GetSubGraphColor_PointerType@CIndicatorInfo@@QBEPAVCGraphColor@@H@Z ; CIndicatorInfo::GetSubGraphColor_PointerType
  0006b	8b f0		 mov	 esi, eax

; 65   : 
; 66   : 	styleData.SetPriceUpColor(		pGraphColor->GetColor1());

  0006d	8b ce		 mov	 ecx, esi
  0006f	ff d7		 call	 edi
  00071	89 45 08	 mov	 DWORD PTR $T11[ebp], eax
  00074	8b cb		 mov	 ecx, ebx
  00076	8d 45 08	 lea	 eax, DWORD PTR $T11[ebp]
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?SetPriceUpColor@CStyleData@@QAEXABK@Z ; CStyleData::SetPriceUpColor

; 67   : 	styleData.SetPriceDownColor(	pGraphColor->GetColor3());

  0007f	8b ce		 mov	 ecx, esi
  00081	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetColor3@CGraphColor@@QBEKXZ
  00087	89 45 08	 mov	 DWORD PTR $T10[ebp], eax
  0008a	8b cb		 mov	 ecx, ebx
  0008c	8d 45 08	 lea	 eax, DWORD PTR $T10[ebp]
  0008f	50		 push	 eax
  00090	e8 00 00 00 00	 call	 ?SetPriceDownColor@CStyleData@@QAEXABK@Z ; CStyleData::SetPriceDownColor

; 68   : 	styleData.SetPriceEqualColor(	pGraphColor->GetColor5());

  00095	8b ce		 mov	 ecx, esi
  00097	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetColor5@CGraphColor@@QBEKXZ
  0009d	89 45 08	 mov	 DWORD PTR $T9[ebp], eax
  000a0	8b cb		 mov	 ecx, ebx
  000a2	8d 45 08	 lea	 eax, DWORD PTR $T9[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?SetPriceEqualColor@CStyleData@@QAEXABK@Z ; CStyleData::SetPriceEqualColor

; 69   : 	styleData.SetPriceUpFill(		pGraphColor->GetUpGraphFill());

  000ab	8b ce		 mov	 ecx, esi
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetUpGraphFill@CGraphColor@@QBE_NXZ
  000b3	88 45 0b	 mov	 BYTE PTR $T15[ebp], al
  000b6	8b cb		 mov	 ecx, ebx
  000b8	8d 45 0b	 lea	 eax, DWORD PTR $T15[ebp]
  000bb	50		 push	 eax
  000bc	e8 00 00 00 00	 call	 ?SetPriceUpFill@CStyleData@@QAEXAB_N@Z ; CStyleData::SetPriceUpFill

; 70   : 	styleData.SetPriceDownFill(		pGraphColor->GetDownGraphFill());

  000c1	8b ce		 mov	 ecx, esi
  000c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDownGraphFill@CGraphColor@@QBE_NXZ
  000c9	88 45 0b	 mov	 BYTE PTR $T14[ebp], al
  000cc	8b cb		 mov	 ecx, ebx
  000ce	8d 45 0b	 lea	 eax, DWORD PTR $T14[ebp]
  000d1	50		 push	 eax
  000d2	e8 00 00 00 00	 call	 ?SetPriceDownFill@CStyleData@@QAEXAB_N@Z ; CStyleData::SetPriceDownFill
$LN5@GetStyleDa:

; 95   : 	CIndicatorInfo* pIndicatorInfo = m_pIndicatorList->GetFirstIndicatorInfo( EILT_USER, _MTEXT( C2_PRICE_MA));

  000d7	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  000dc	8b 4d f0	 mov	 ecx, DWORD PTR _this$1$[ebp]
  000df	6a 00		 push	 0
  000e1	ff b0 20 03 00
	00		 push	 DWORD PTR [eax+800]
  000e7	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000ea	6a 03		 push	 3
  000ec	e8 00 00 00 00	 call	 ?GetFirstIndicatorInfo@CIndicatorList@@QAEPAVCIndicatorInfo@@W4EIndicatorListType@@PBDPAPAU__POSITION@@@Z ; CIndicatorList::GetFirstIndicatorInfo

; 96   : 	if( !pIndicatorInfo) return;

  000f1	85 c0		 test	 eax, eax
  000f3	0f 84 e5 00 00
	00		 je	 $LN28@GetStyleDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 851  : {

  000f9	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$3[ebp], OFFSET ??_7?$CList@PAVCGraphColor@@PAV1@@@6B@

; 852  : 	ASSERT(nBlockSize > 0);
; 853  : 
; 854  : 	m_nCount = 0;

  00100	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$3[ebp+12], 0

; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  00107	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$3[ebp+16], 0
  0010e	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$3[ebp+8], 0
  00115	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$3[ebp+4], 0

; 856  : 	m_pBlocks = NULL;

  0011c	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$3[ebp+20], 0

; 857  : 	m_nBlockSize = nBlockSize;

  00123	c7 45 ec 0a 00
	00 00		 mov	 DWORD PTR _subGraphColorList$3[ebp+24], 10 ; 0000000aH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp

; 98   : 	if( !pIndicatorInfo->GetSubGraphColorList(subGraphColorList)) return;

  0012a	8d 4d d4	 lea	 ecx, DWORD PTR _subGraphColorList$3[ebp]
  0012d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00134	51		 push	 ecx
  00135	8b c8		 mov	 ecx, eax
  00137	e8 00 00 00 00	 call	 ?GetSubGraphColorList@CIndicatorInfo@@QBE_NAAV?$CList@PAVCGraphColor@@PAV1@@@@Z ; CIndicatorInfo::GetSubGraphColorList
  0013c	84 c0		 test	 al, al
  0013e	75 34		 jne	 SHORT $LN12@GetStyleDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 872  : 	m_pBlocks->FreeDataChain();

  00140	8b 4d e8	 mov	 ecx, DWORD PTR _subGraphColorList$3[ebp+20]

; 878  : {

  00143	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  0014a	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$3[ebp], OFFSET ??_7?$CList@PAVCGraphColor@@PAV1@@@6B@

; 870  : 	m_nCount = 0;

  00151	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$3[ebp+12], 0

; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  00158	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$3[ebp+16], 0
  0015f	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$3[ebp+8], 0
  00166	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$3[ebp+4], 0

; 872  : 	m_pBlocks->FreeDataChain();

  0016d	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp

; 98   : 	if( !pIndicatorInfo->GetSubGraphColorList(subGraphColorList)) return;

  00172	eb 63		 jmp	 SHORT $LN94@GetStyleDa
$LN12@GetStyleDa:

; 99   : 
; 100  : 	int nIndex = 0;
; 101  : 	POSITION pos = subGraphColorList.GetHeadPosition();

  00174	8b 75 d8	 mov	 esi, DWORD PTR _subGraphColorList$3[ebp+4]
  00177	33 ff		 xor	 edi, edi
  00179	85 f6		 test	 esi, esi

; 102  : 	while(pos != NULL) styleData.SetPriceMAColor( nIndex++, subGraphColorList.GetNext(pos)->GetColor1());

  0017b	74 22		 je	 SHORT $LN10@GetStyleDa
  0017d	0f 1f 00	 npad	 3
$LL9@GetStyleDa:
  00180	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 813  : 		rPosition = (POSITION) pNode->pNext;

  00183	8b 36		 mov	 esi, DWORD PTR [esi]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp

; 102  : 	while(pos != NULL) styleData.SetPriceMAColor( nIndex++, subGraphColorList.GetNext(pos)->GetColor1());

  00185	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetColor1@CGraphColor@@QBEKXZ
  0018b	89 45 08	 mov	 DWORD PTR $T8[ebp], eax
  0018e	8b cb		 mov	 ecx, ebx
  00190	8d 45 08	 lea	 eax, DWORD PTR $T8[ebp]
  00193	50		 push	 eax
  00194	57		 push	 edi
  00195	e8 00 00 00 00	 call	 ?SetPriceMAColor@CStyleData@@QAEXHABK@Z ; CStyleData::SetPriceMAColor
  0019a	47		 inc	 edi
  0019b	85 f6		 test	 esi, esi
  0019d	75 e1		 jne	 SHORT $LL9@GetStyleDa
$LN10@GetStyleDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 872  : 	m_pBlocks->FreeDataChain();

  0019f	8b 4d e8	 mov	 ecx, DWORD PTR _subGraphColorList$3[ebp+20]

; 878  : {

  001a2	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  001a9	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$3[ebp], OFFSET ??_7?$CList@PAVCGraphColor@@PAV1@@@6B@

; 870  : 	m_nCount = 0;

  001b0	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$3[ebp+12], 0

; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  001b7	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$3[ebp+16], 0
  001be	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$3[ebp+8], 0
  001c5	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$3[ebp+4], 0

; 872  : 	m_pBlocks->FreeDataChain();

  001cc	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 881  : }

  001d1	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetColor1@CGraphColor@@QBEKXZ
$LN94@GetStyleDa:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp

; 126  : 	CIndicatorInfo* pIndicatorInfo = m_pIndicatorList->GetFirstIndicatorInfo( EILT_USER, _MTEXT( C2_VOLUME_CHART));

  001d7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
$LN28@GetStyleDa:
  001de	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  001e3	6a 00		 push	 0
  001e5	ff b0 2c 03 00
	00		 push	 DWORD PTR [eax+812]
  001eb	8b 45 f0	 mov	 eax, DWORD PTR _this$1$[ebp]
  001ee	6a 03		 push	 3
  001f0	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001f3	e8 00 00 00 00	 call	 ?GetFirstIndicatorInfo@CIndicatorList@@QAEPAVCIndicatorInfo@@W4EIndicatorListType@@PBDPAPAU__POSITION@@@Z ; CIndicatorList::GetFirstIndicatorInfo

; 127  : 	if( !pIndicatorInfo) return;

  001f8	85 c0		 test	 eax, eax
  001fa	74 75		 je	 SHORT $LN35@GetStyleDa

; 128  : 	CGraphColor *pGraphColor = pIndicatorInfo->GetSubGraphColor_PointerType( 0);

  001fc	6a 00		 push	 0
  001fe	8b c8		 mov	 ecx, eax
  00200	e8 00 00 00 00	 call	 ?GetSubGraphColor_PointerType@CIndicatorInfo@@QBEPAVCGraphColor@@H@Z ; CIndicatorInfo::GetSubGraphColor_PointerType
  00205	8b f0		 mov	 esi, eax

; 129  : 
; 130  : 	//sy 2005.04.19.
; 131  : 	styleData.SetTradeUpColor(		pGraphColor->GetColor1());

  00207	8b ce		 mov	 ecx, esi
  00209	ff d7		 call	 edi
  0020b	89 45 08	 mov	 DWORD PTR $T7[ebp], eax
  0020e	8b cb		 mov	 ecx, ebx
  00210	8d 45 08	 lea	 eax, DWORD PTR $T7[ebp]
  00213	50		 push	 eax
  00214	e8 00 00 00 00	 call	 ?SetTradeUpColor@CStyleData@@QAEXABK@Z ; CStyleData::SetTradeUpColor

; 132  : 	styleData.SetTradeDownColor(	pGraphColor->GetColor3());

  00219	8b ce		 mov	 ecx, esi
  0021b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetColor3@CGraphColor@@QBEKXZ
  00221	89 45 08	 mov	 DWORD PTR $T6[ebp], eax
  00224	8b cb		 mov	 ecx, ebx
  00226	8d 45 08	 lea	 eax, DWORD PTR $T6[ebp]
  00229	50		 push	 eax
  0022a	e8 00 00 00 00	 call	 ?SetTradeDownColor@CStyleData@@QAEXABK@Z ; CStyleData::SetTradeDownColor

; 133  : 	styleData.SetTradeEqualColor(	pGraphColor->GetColor5());

  0022f	8b ce		 mov	 ecx, esi
  00231	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetColor5@CGraphColor@@QBEKXZ
  00237	89 45 08	 mov	 DWORD PTR $T5[ebp], eax
  0023a	8b cb		 mov	 ecx, ebx
  0023c	8d 45 08	 lea	 eax, DWORD PTR $T5[ebp]
  0023f	50		 push	 eax
  00240	e8 00 00 00 00	 call	 ?SetTradeEqualColor@CStyleData@@QAEXABK@Z ; CStyleData::SetTradeEqualColor

; 134  : 	styleData.SetTradeUpFill(		pGraphColor->GetUpGraphFill());

  00245	8b ce		 mov	 ecx, esi
  00247	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetUpGraphFill@CGraphColor@@QBE_NXZ
  0024d	88 45 0b	 mov	 BYTE PTR $T13[ebp], al
  00250	8b cb		 mov	 ecx, ebx
  00252	8d 45 0b	 lea	 eax, DWORD PTR $T13[ebp]
  00255	50		 push	 eax
  00256	e8 00 00 00 00	 call	 ?SetTradeUpFill@CStyleData@@QAEXAB_N@Z ; CStyleData::SetTradeUpFill

; 135  : 	styleData.SetTradeDownFill(		pGraphColor->GetDownGraphFill());

  0025b	8b ce		 mov	 ecx, esi
  0025d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDownGraphFill@CGraphColor@@QBE_NXZ
  00263	88 45 0b	 mov	 BYTE PTR $T12[ebp], al
  00266	8b cb		 mov	 ecx, ebx
  00268	8d 45 0b	 lea	 eax, DWORD PTR $T12[ebp]
  0026b	50		 push	 eax
  0026c	e8 00 00 00 00	 call	 ?SetTradeDownFill@CStyleData@@QAEXAB_N@Z ; CStyleData::SetTradeDownFill
$LN35@GetStyleDa:

; 160  : 	CIndicatorInfo* pIndicatorInfo = m_pIndicatorList->GetFirstIndicatorInfo( EILT_USER, _MTEXT( C2_VOLUME_MA));

  00271	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  00276	6a 00		 push	 0
  00278	ff b0 24 03 00
	00		 push	 DWORD PTR [eax+804]
  0027e	8b 45 f0	 mov	 eax, DWORD PTR _this$1$[ebp]
  00281	6a 03		 push	 3
  00283	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00286	e8 00 00 00 00	 call	 ?GetFirstIndicatorInfo@CIndicatorList@@QAEPAVCIndicatorInfo@@W4EIndicatorListType@@PBDPAPAU__POSITION@@@Z ; CIndicatorList::GetFirstIndicatorInfo

; 161  : 	if( !pIndicatorInfo) return;

  0028b	85 c0		 test	 eax, eax
  0028d	0f 84 ae 00 00
	00		 je	 $LN3@GetStyleDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 851  : {

  00293	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$2[ebp], OFFSET ??_7?$CList@PAVCGraphColor@@PAV1@@@6B@

; 852  : 	ASSERT(nBlockSize > 0);
; 853  : 
; 854  : 	m_nCount = 0;

  0029a	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$2[ebp+12], 0

; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  002a1	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$2[ebp+16], 0
  002a8	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$2[ebp+8], 0
  002af	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$2[ebp+4], 0

; 856  : 	m_pBlocks = NULL;

  002b6	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$2[ebp+20], 0

; 857  : 	m_nBlockSize = nBlockSize;

  002bd	c7 45 d0 0a 00
	00 00		 mov	 DWORD PTR _subGraphColorList$2[ebp+24], 10 ; 0000000aH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp

; 163  : 	if( !pIndicatorInfo->GetSubGraphColorList(subGraphColorList)) return;

  002c4	8d 4d b8	 lea	 ecx, DWORD PTR _subGraphColorList$2[ebp]
  002c7	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  002ce	51		 push	 ecx
  002cf	8b c8		 mov	 ecx, eax
  002d1	e8 00 00 00 00	 call	 ?GetSubGraphColorList@CIndicatorInfo@@QBE_NAAV?$CList@PAVCGraphColor@@PAV1@@@@Z ; CIndicatorInfo::GetSubGraphColorList
  002d6	84 c0		 test	 al, al
  002d8	75 09		 jne	 SHORT $LN42@GetStyleDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 878  : {

  002da	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp

; 163  : 	if( !pIndicatorInfo->GetSubGraphColorList(subGraphColorList)) return;

  002e1	eb 33		 jmp	 SHORT $LN95@GetStyleDa
$LN42@GetStyleDa:

; 164  : 
; 165  : 	int nIndex = 0;
; 166  : 	POSITION pos = subGraphColorList.GetHeadPosition();

  002e3	8b 75 bc	 mov	 esi, DWORD PTR _subGraphColorList$2[ebp+4]
  002e6	33 ff		 xor	 edi, edi
  002e8	85 f6		 test	 esi, esi

; 167  : 	while(pos != NULL) styleData.SetPriceMAColor( nIndex++, subGraphColorList.GetNext(pos)->GetColor1());

  002ea	74 23		 je	 SHORT $LN40@GetStyleDa
  002ec	0f 1f 40 00	 npad	 4
$LL39@GetStyleDa:
  002f0	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 813  : 		rPosition = (POSITION) pNode->pNext;

  002f3	8b 36		 mov	 esi, DWORD PTR [esi]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp

; 167  : 	while(pos != NULL) styleData.SetPriceMAColor( nIndex++, subGraphColorList.GetNext(pos)->GetColor1());

  002f5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetColor1@CGraphColor@@QBEKXZ
  002fb	89 45 f0	 mov	 DWORD PTR $T4[ebp], eax
  002fe	8b cb		 mov	 ecx, ebx
  00300	8d 45 f0	 lea	 eax, DWORD PTR $T4[ebp]
  00303	50		 push	 eax
  00304	57		 push	 edi
  00305	e8 00 00 00 00	 call	 ?SetPriceMAColor@CStyleData@@QAEXHABK@Z ; CStyleData::SetPriceMAColor
  0030a	47		 inc	 edi
  0030b	85 f6		 test	 esi, esi
  0030d	75 e1		 jne	 SHORT $LL39@GetStyleDa
$LN40@GetStyleDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 878  : {

  0030f	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
$LN95@GetStyleDa:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp

; 42   : }

  00316	8b 4d cc	 mov	 ecx, DWORD PTR _subGraphColorList$2[ebp+20]
  00319	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$2[ebp], OFFSET ??_7?$CList@PAVCGraphColor@@PAV1@@@6B@
  00320	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$2[ebp+12], 0
  00327	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$2[ebp+16], 0
  0032e	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$2[ebp+8], 0
  00335	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _subGraphColorList$2[ebp+4], 0
  0033c	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain
$LN3@GetStyleDa:
  00341	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00344	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0034b	59		 pop	 ecx
  0034c	5f		 pop	 edi
  0034d	5e		 pop	 esi
  0034e	5b		 pop	 ebx
  0034f	8b e5		 mov	 esp, ebp
  00351	5d		 pop	 ebp
  00352	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetStyleData_Indicator@CChartStyleDataController@@QBEXAAVCStyleData@@@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _subGraphColorList$3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CList@PAVCGraphColor@@PAV1@@@UAE@XZ ; CList<CGraphColor *,CGraphColor *>::~CList<CGraphColor *,CGraphColor *>
__unwindfunclet$?GetStyleData_Indicator@CChartStyleDataController@@QBEXAAVCStyleData@@@Z$3:
  00008	8d 4d b8	 lea	 ecx, DWORD PTR _subGraphColorList$2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CList@PAVCGraphColor@@PAV1@@@UAE@XZ ; CList<CGraphColor *,CGraphColor *>::~CList<CGraphColor *,CGraphColor *>
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?GetStyleData_Indicator@CChartStyleDataController@@QBEXAAVCStyleData@@@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a b4	 mov	 ecx, DWORD PTR [edx-76]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetStyleData_Indicator@CChartStyleDataController@@QBEXAAVCStyleData@@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetStyleData_Indicator@CChartStyleDataController@@QBEXAAVCStyleData@@@Z ENDP ; CChartStyleDataController::GetStyleData_Indicator
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
;	COMDAT ??0CChartStyleDataController@@QAE@PAVCMainBlock@@PAVCIndicatorList@@@Z
_TEXT	SEGMENT
_pMainBlock$ = 8					; size = 4
_pIndicatorList$ = 12					; size = 4
??0CChartStyleDataController@@QAE@PAVCMainBlock@@PAVCIndicatorList@@@Z PROC ; CChartStyleDataController::CChartStyleDataController, COMDAT
; _this$ = ecx

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 29   : 	m_pMainBlock = pMainBlock;

  00003	8b 45 08	 mov	 eax, DWORD PTR _pMainBlock$[ebp]
  00006	89 01		 mov	 DWORD PTR [ecx], eax

; 30   : 	m_pIndicatorList = pIndicatorList;

  00008	8b 45 0c	 mov	 eax, DWORD PTR _pIndicatorList$[ebp]
  0000b	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 31   : }

  0000e	8b c1		 mov	 eax, ecx
  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
??0CChartStyleDataController@@QAE@PAVCMainBlock@@PAVCIndicatorList@@@Z ENDP ; CChartStyleDataController::CChartStyleDataController
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC		; CObject::Dump, COMDAT
; _this$ = ecx

; 122  : 	{ /* no dumping in release builds */ }

  00000	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
?AssertValid@CObject@@UBEXXZ PROC			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 120  : 	{ /* no asserts in release builds */ }

  00000	c2 00 00	 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC		; CObject::Serialize, COMDAT
; _this$ = ecx

; 106  : 	{ /* CObject does not serialize anything by default */ }

  00000	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT
??1CObject@@UAE@XZ PROC					; CObject::~CObject, COMDAT
; _this$ = ecx

; 104  : 	{ }

  00000	c2 00 00	 ret	 0
??1CObject@@UAE@XZ ENDP					; CObject::~CObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartStyleDataController.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
