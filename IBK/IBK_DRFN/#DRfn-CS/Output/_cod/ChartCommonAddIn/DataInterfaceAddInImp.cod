; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\ChartCommonAddIn\DataInterfaceAddInImp.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?m_eRegisteredEventMap@CDataInterfaceAddInImp@@1QBW4EAddInEventType@IChartAddIn000000@@B ; CDataInterfaceAddInImp::m_eRegisteredEventMap
PUBLIC	??_C@_0P@DMEAPPOH@PACKET_QUERYER@		; `string'
;	COMDAT ??_C@_0P@DMEAPPOH@PACKET_QUERYER@
CONST	SEGMENT
??_C@_0P@DMEAPPOH@PACKET_QUERYER@ DB 'PACKET_QUERYER', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
?m_eRegisteredEventMap@CDataInterfaceAddInImp@@1QBW4EAddInEventType@IChartAddIn000000@@B DD 03cH ; CDataInterfaceAddInImp::m_eRegisteredEventMap
	ORG $+240
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1CObject@@UAE@XZ				; CObject::~CObject
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	?PostConstruct@CIWUnknown@@MAEXXZ		; CIWUnknown::PostConstruct
PUBLIC	?PreDestructX@CIWUnknown@@MAEXXZ		; CIWUnknown::PreDestructX
PUBLIC	?PreDestruct@CIWUnknown@@MAEXXZ			; CIWUnknown::PreDestruct
PUBLIC	?InvokeAddIn@CChartAddInBase000000@@MAEHHJ@Z	; CChartAddInBase000000::InvokeAddIn
PUBLIC	?InvokeAddInStr@CChartAddInBase000000@@MAEHPBD0@Z ; CChartAddInBase000000::InvokeAddInStr
PUBLIC	?AfeterOnOcxDestroyWindow@CChartAddInBase000000@@MAEXXZ ; CChartAddInBase000000::AfeterOnOcxDestroyWindow
PUBLIC	?ChangeChartMode@CChartAddInBase000000@@MAEXW4CHART_MODE@CChartInfo@@@Z ; CChartAddInBase000000::ChangeChartMode
PUBLIC	?OnGSharedDataChange@CChartAddInBase000000@@MAEXPBD0H@Z ; CChartAddInBase000000::OnGSharedDataChange
PUBLIC	?OnLSharedDataChange@CChartAddInBase000000@@MAEXPBD0@Z ; CChartAddInBase000000::OnLSharedDataChange
PUBLIC	?OnResetChart@CChartAddInBase000000@@MAEXXZ	; CChartAddInBase000000::OnResetChart
PUBLIC	?OnDrawBeforeGraph@CChartAddInBase000000@@MAEXPAUHDC__@@@Z ; CChartAddInBase000000::OnDrawBeforeGraph
PUBLIC	?OnDrawAfterGraph@CChartAddInBase000000@@MAEXPAUHDC__@@@Z ; CChartAddInBase000000::OnDrawAfterGraph
PUBLIC	?OnPacketDataMultiItem@CChartAddInBase000000@@MAEXPBD0H@Z ; CChartAddInBase000000::OnPacketDataMultiItem
PUBLIC	?OnTimer@CChartAddInBase000000@@MAEXI@Z		; CChartAddInBase000000::OnTimer
PUBLIC	?OnCaptureChanged@CChartAddInBase000000@@MAEXPAUHWND__@@QAUHBITMAP__@@@Z ; CChartAddInBase000000::OnCaptureChanged
PUBLIC	?OnResetMainBlock@CChartAddInBase000000@@MAEXXZ	; CChartAddInBase000000::OnResetMainBlock
PUBLIC	?OnUserIndiatorConditionLoaded@CChartAddInBase000000@@MAEXXZ ; CChartAddInBase000000::OnUserIndiatorConditionLoaded
PUBLIC	?OnChartItemChanged@CChartAddInBase000000@@MAEXXZ ; CChartAddInBase000000::OnChartItemChanged
PUBLIC	?OnGraphDataChanged@CChartAddInBase000000@@MAEXXZ ; CChartAddInBase000000::OnGraphDataChanged
PUBLIC	?OnBlockRemoved@CChartAddInBase000000@@MAEXHH@Z	; CChartAddInBase000000::OnBlockRemoved
PUBLIC	?OnGraphAdded@CChartAddInBase000000@@MAEXPBD0@Z	; CChartAddInBase000000::OnGraphAdded
PUBLIC	?OnManualRealData@CChartAddInBase000000@@MAEXPBDNH@Z ; CChartAddInBase000000::OnManualRealData
PUBLIC	?OnContextMenu@CChartAddInBase000000@@MAEXPAUHWND__@@AAUtagPOINT@@@Z ; CChartAddInBase000000::OnContextMenu
PUBLIC	?OnGraphDeleted@CChartAddInBase000000@@MAEXPBD0@Z ; CChartAddInBase000000::OnGraphDeleted
PUBLIC	?OnPacketTruncated@CChartAddInBase000000@@MAEXH@Z ; CChartAddInBase000000::OnPacketTruncated
PUBLIC	?OnBlockChanged@CChartAddInBase000000@@MAEXW4BLOCKBEHAVIOR@CBlockBaseData@@HHHH@Z ; CChartAddInBase000000::OnBlockChanged
PUBLIC	?OnToolCommand@CChartAddInBase000000@@MAEXHH@Z	; CChartAddInBase000000::OnToolCommand
PUBLIC	?OnRealData@CChartAddInBase000000@@MAEXPBDN0@Z	; CChartAddInBase000000::OnRealData
PUBLIC	?OnIndexedRealData@CChartAddInBase000000@@MAEXPBDHN@Z ; CChartAddInBase000000::OnIndexedRealData
PUBLIC	?OnRealPacketEnd@CChartAddInBase000000@@MAEXPBD@Z ; CChartAddInBase000000::OnRealPacketEnd
PUBLIC	?OnLoadEnvironment@CChartAddInBase000000@@MAEXPAUIPropertyMap@@@Z ; CChartAddInBase000000::OnLoadEnvironment
PUBLIC	?OnSaveEnvironment@CChartAddInBase000000@@MAEXPAUIPropertyMap@@@Z ; CChartAddInBase000000::OnSaveEnvironment
PUBLIC	?DrawCursor@CChartAddInBase000000@@MAE?AUtagRECT@@PAUHDC__@@@Z ; CChartAddInBase000000::DrawCursor
PUBLIC	?OnRecalculationComplete@CChartAddInBase000000@@MAEXXZ ; CChartAddInBase000000::OnRecalculationComplete
PUBLIC	?OnPreRealData@CChartAddInBase000000@@MAEHPBDAAN0H@Z ; CChartAddInBase000000::OnPreRealData
PUBLIC	?OnPreIndexedRealData@CChartAddInBase000000@@MAEHPBDHAANH@Z ; CChartAddInBase000000::OnPreIndexedRealData
PUBLIC	?OnPreRealPacketEnd@CChartAddInBase000000@@MAEHPBDH@Z ; CChartAddInBase000000::OnPreRealPacketEnd
PUBLIC	?OnPreNMTRClock@CChartAddInBase000000@@MAEHAA_J@Z ; CChartAddInBase000000::OnPreNMTRClock
PUBLIC	?OnCmdMsg@CChartAddInBase000000@@MAEHIHPAUICmdUI000000@@@Z ; CChartAddInBase000000::OnCmdMsg
PUBLIC	?OnAddInMsg@CChartAddInBase000000@@MAEHPBDJ@Z	; CChartAddInBase000000::OnAddInMsg
PUBLIC	?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@@Z ; CChartAddInBase000000::OnAddInToolCommand
PUBLIC	?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PAUHDC__@@IAAUtagPOINT@@K@Z ; CChartAddInBase000000::OnAddInToolCommand
PUBLIC	?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PBD@Z ; CChartAddInBase000000::OnAddInToolCommand
PUBLIC	?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PBD1@Z ; CChartAddInBase000000::OnAddInToolCommand
PUBLIC	?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PBDJ@Z ; CChartAddInBase000000::OnAddInToolCommand
PUBLIC	?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PBUIAddInDllBase@@@Z ; CChartAddInBase000000::OnAddInToolCommand
PUBLIC	?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@J@Z ; CChartAddInBase000000::OnAddInToolCommand
PUBLIC	?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@JPBD@Z ; CChartAddInBase000000::OnAddInToolCommand
PUBLIC	?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@JPBD11@Z ; CChartAddInBase000000::OnAddInToolCommand
PUBLIC	?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@JJ@Z ; CChartAddInBase000000::OnAddInToolCommand
PUBLIC	?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@JJJJJJJJJ@Z ; CChartAddInBase000000::OnAddInToolCommand
PUBLIC	?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@@Z ; CChartAddInBase000000::OnAddInToolCommand
PUBLIC	?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@PAUIGraphInfo000000@@@Z ; CChartAddInBase000000::OnAddInToolCommand
PUBLIC	?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@PBD@Z ; CChartAddInBase000000::OnAddInToolCommand
PUBLIC	?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@PBDPAVCObject@@@Z ; CChartAddInBase000000::OnAddInToolCommand
PUBLIC	?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@J@Z ; CChartAddInBase000000::OnAddInToolCommand
PUBLIC	?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@JJ@Z ; CChartAddInBase000000::OnAddInToolCommand
PUBLIC	?OnKeyDown@CChartAddInBase000000@@MAEHIII@Z	; CChartAddInBase000000::OnKeyDown
PUBLIC	?OnKeyUp@CChartAddInBase000000@@MAEHIII@Z	; CChartAddInBase000000::OnKeyUp
PUBLIC	?OnMouseWheel@CChartAddInBase000000@@MAEHIFUtagPOINT@@K@Z ; CChartAddInBase000000::OnMouseWheel
PUBLIC	?OnMouseMove@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@KQAUHBITMAP__@@@Z ; CChartAddInBase000000::OnMouseMove
PUBLIC	?OnLButtonDown@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z ; CChartAddInBase000000::OnLButtonDown
PUBLIC	?OnLButtonUp@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z ; CChartAddInBase000000::OnLButtonUp
PUBLIC	?OnLButtonDblClk@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z ; CChartAddInBase000000::OnLButtonDblClk
PUBLIC	?OnRButtonDown@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z ; CChartAddInBase000000::OnRButtonDown
PUBLIC	?OnRButtonUp@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z ; CChartAddInBase000000::OnRButtonUp
PUBLIC	?OnRButtonDblClk@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z ; CChartAddInBase000000::OnRButtonDblClk
PUBLIC	??1IPacketQueryer@@MAE@XZ			; IPacketQueryer::~IPacketQueryer
PUBLIC	??_GIPacketQueryer@@MAEPAXI@Z			; IPacketQueryer::`scalar deleting destructor'
PUBLIC	??0CDataInterfaceAddInImp@@QAE@PAUIChartOCX000000@@PAUIAddInDllBase@@@Z ; CDataInterfaceAddInImp::CDataInterfaceAddInImp
PUBLIC	??1CDataInterfaceAddInImp@@UAE@XZ		; CDataInterfaceAddInImp::~CDataInterfaceAddInImp
PUBLIC	?GetRegisteredEventMap@CDataInterfaceAddInImp@@MBEPBW4EAddInEventType@IChartAddIn000000@@XZ ; CDataInterfaceAddInImp::GetRegisteredEventMap
PUBLIC	?GetAddInCustomInterface@CDataInterfaceAddInImp@@MAEPAUIUnknown@@XZ ; CDataInterfaceAddInImp::GetAddInCustomInterface
PUBLIC	?AddRef@CDataInterfaceAddInImp@@MAGKXZ		; CDataInterfaceAddInImp::AddRef
PUBLIC	?Release@CDataInterfaceAddInImp@@MAGKXZ		; CDataInterfaceAddInImp::Release
PUBLIC	?QueryInterface@CDataInterfaceAddInImp@@MAGJABU_GUID@@PAPAX@Z ; CDataInterfaceAddInImp::QueryInterface
PUBLIC	?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z ; CDataInterfaceAddInImp::GetDoubleList
PUBLIC	??_GCDataInterfaceAddInImp@@UAEPAXI@Z		; CDataInterfaceAddInImp::`scalar deleting destructor'
PUBLIC	??1ILPCSTR000000@@QAE@XZ			; ILPCSTR000000::~ILPCSTR000000
PUBLIC	??1IDblList@@MAE@XZ				; IDblList::~IDblList
PUBLIC	??_GIDblList@@MAEPAXI@Z				; IDblList::`scalar deleting destructor'
PUBLIC	?AddRef@CIWDblList@@MAGKXZ			; CIWDblList::AddRef
PUBLIC	?Release@CIWDblList@@MAGKXZ			; CIWDblList::Release
PUBLIC	?QueryInterface@CIWDblList@@MAGJABU_GUID@@PAPAX@Z ; CIWDblList::QueryInterface
PUBLIC	?GetIChartOCX000000@CIWDblList@@MAEPAUIChartOCX000000@@XZ ; CIWDblList::GetIChartOCX000000
PUBLIC	?PreDestructX@CIWDblList@@MAEXXZ		; CIWDblList::PreDestructX
PUBLIC	??_GCIWDblList@@MAEPAXI@Z			; CIWDblList::`scalar deleting destructor'
PUBLIC	??0?$CList@NN@@QAE@H@Z				; CList<double,double>::CList<double,double>
PUBLIC	?AddTail@?$CList@NN@@QAEPAU__POSITION@@N@Z	; CList<double,double>::AddTail
PUBLIC	?RemoveAll@?$CList@NN@@QAEXXZ			; CList<double,double>::RemoveAll
PUBLIC	?NewNode@?$CList@NN@@IAEPAUCNode@1@PAU21@0@Z	; CList<double,double>::NewNode
PUBLIC	??1?$CList@NN@@UAE@XZ				; CList<double,double>::~CList<double,double>
PUBLIC	?Serialize@?$CList@NN@@UAEXAAVCArchive@@@Z	; CList<double,double>::Serialize
PUBLIC	??_G?$CList@NN@@UAEPAXI@Z			; CList<double,double>::`scalar deleting destructor'
PUBLIC	??$SerializeElements@N@@YGXAAVCArchive@@PANH@Z	; SerializeElements<double>
PUBLIC	?QueryInterface@CDataInterfaceAddInImp@@O7AGJABU_GUID@@PAPAX@Z ; [thunk]:CDataInterfaceAddInImp::QueryInterface`adjustor{8}'
PUBLIC	?AddRef@CDataInterfaceAddInImp@@O7AGKXZ		; [thunk]:CDataInterfaceAddInImp::AddRef`adjustor{8}'
PUBLIC	?Release@CDataInterfaceAddInImp@@O7AGKXZ	; [thunk]:CDataInterfaceAddInImp::Release`adjustor{8}'
PUBLIC	??_ECDataInterfaceAddInImp@@W7AEPAXI@Z		; [thunk]:CDataInterfaceAddInImp::`vector deleting destructor'
PUBLIC	?QueryInterface@CDataInterfaceAddInImp@@OEA@AGJABU_GUID@@PAPAX@Z ; [thunk]:CDataInterfaceAddInImp::QueryInterface`adjustor{64}'
PUBLIC	?AddRef@CDataInterfaceAddInImp@@OEA@AGKXZ	; [thunk]:CDataInterfaceAddInImp::AddRef`adjustor{64}'
PUBLIC	?Release@CDataInterfaceAddInImp@@OEA@AGKXZ	; [thunk]:CDataInterfaceAddInImp::Release`adjustor{64}'
PUBLIC	??_ECDataInterfaceAddInImp@@WEA@AEPAXI@Z	; [thunk]:CDataInterfaceAddInImp::`vector deleting destructor'
PUBLIC	?QueryInterface@CIWDblList@@O7AGJABU_GUID@@PAPAX@Z ; [thunk]:CIWDblList::QueryInterface`adjustor{8}'
PUBLIC	?AddRef@CIWDblList@@O7AGKXZ			; [thunk]:CIWDblList::AddRef`adjustor{8}'
PUBLIC	?Release@CIWDblList@@O7AGKXZ			; [thunk]:CIWDblList::Release`adjustor{8}'
PUBLIC	??_ECIWDblList@@O7AEPAXI@Z			; [thunk]:CIWDblList::`vector deleting destructor'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7IPacketQueryer@@6B@				; IPacketQueryer::`vftable'
PUBLIC	?m_strAddInItemName@CDataInterfaceAddInImp@@2V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@A ; CDataInterfaceAddInImp::m_strAddInItemName
PUBLIC	??_7CDataInterfaceAddInImp@@6BCIWUnknown@@@	; CDataInterfaceAddInImp::`vftable'
PUBLIC	??_7CDataInterfaceAddInImp@@6BIChartAddIn000000@@@ ; CDataInterfaceAddInImp::`vftable'
PUBLIC	??_7CDataInterfaceAddInImp@@6B@			; CDataInterfaceAddInImp::`vftable'
PUBLIC	??_7IDblList@@6B@				; IDblList::`vftable'
PUBLIC	??_7CIWDblList@@6BCIWUnknown@@@			; CIWDblList::`vftable'
PUBLIC	??_7CIWDblList@@6BIDblList@@@			; CIWDblList::`vftable'
PUBLIC	??_7?$CList@NN@@6B@				; CList<double,double>::`vftable'
PUBLIC	??_C@_07MGCPDNLD@DEFAULT@			; `string'
PUBLIC	??_R0?AUIChartAddIn000000@@@8			; IChartAddIn000000 `RTTI Type Descriptor'
PUBLIC	??_R3IChartAddIn000000@@8			; IChartAddIn000000::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IChartAddIn000000@@8			; IChartAddIn000000::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IChartAddIn000000@@8		; IChartAddIn000000::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4IDblList@@6B@				; IDblList::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIDblList@@@8				; IDblList `RTTI Type Descriptor'
PUBLIC	??_R3IDblList@@8				; IDblList::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IDblList@@8				; IDblList::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IDblList@@8			; IDblList::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4IPacketQueryer@@6B@			; IPacketQueryer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIPacketQueryer@@@8			; IPacketQueryer `RTTI Type Descriptor'
PUBLIC	??_R3IPacketQueryer@@8				; IPacketQueryer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IPacketQueryer@@8				; IPacketQueryer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IPacketQueryer@@8			; IPacketQueryer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDataInterfaceAddInImp@@6BCIWUnknown@@@	; CDataInterfaceAddInImp::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDataInterfaceAddInImp@@@8		; CDataInterfaceAddInImp `RTTI Type Descriptor'
PUBLIC	??_R3CDataInterfaceAddInImp@@8			; CDataInterfaceAddInImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDataInterfaceAddInImp@@8			; CDataInterfaceAddInImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDataInterfaceAddInImp@@8		; CDataInterfaceAddInImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CChartAddInBase000000@@8		; CChartAddInBase000000::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCChartAddInBase000000@@@8		; CChartAddInBase000000 `RTTI Type Descriptor'
PUBLIC	??_R3CChartAddInBase000000@@8			; CChartAddInBase000000::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CChartAddInBase000000@@8			; CChartAddInBase000000::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CIWUnknown@@8			; CIWUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCIWUnknown@@@8				; CIWUnknown `RTTI Type Descriptor'
PUBLIC	??_R3CIWUnknown@@8				; CIWUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CIWUnknown@@8				; CIWUnknown::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@IChartAddIn000000@@8		; IChartAddIn000000::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R17?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R17?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
PUBLIC	??_R1EA@?0A@EA@IPacketQueryer@@8		; IPacketQueryer::`RTTI Base Class Descriptor at (64,-1,0,64)'
PUBLIC	??_R1EA@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (64,-1,0,66)'
PUBLIC	??_R4CDataInterfaceAddInImp@@6BIChartAddIn000000@@@ ; CDataInterfaceAddInImp::`RTTI Complete Object Locator'
PUBLIC	??_R4CDataInterfaceAddInImp@@6B@		; CDataInterfaceAddInImp::`RTTI Complete Object Locator'
PUBLIC	??_R4CIWDblList@@6BCIWUnknown@@@		; CIWDblList::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCIWDblList@@@8				; CIWDblList `RTTI Type Descriptor'
PUBLIC	??_R3CIWDblList@@8				; CIWDblList::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CIWDblList@@8				; CIWDblList::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CIWDblList@@8			; CIWDblList::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EA@IDblList@@8			; IDblList::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R4CIWDblList@@6BIDblList@@@			; CIWDblList::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CList@NN@@6B@				; CList<double,double>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CList@NN@@@8				; CList<double,double> `RTTI Type Descriptor'
PUBLIC	??_R3?$CList@NN@@8				; CList<double,double>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CList@NN@@8				; CList<double,double>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CList@NN@@8			; CList<double,double>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	_atexit:PROC
EXTRN	___std_terminate:PROC
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?AfxThrowArchiveException@@YGXHPBD@Z:PROC	; AfxThrowArchiveException
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CObject::GetRuntimeClass
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	?Read@CArchive@@QAEIPAXI@Z:PROC			; CArchive::Read
EXTRN	?Write@CArchive@@QAEXPBXI@Z:PROC		; CArchive::Write
EXTRN	?ReadCount@CArchive@@QAEKXZ:PROC		; CArchive::ReadCount
EXTRN	?WriteCount@CArchive@@QAEXK@Z:PROC		; CArchive::WriteCount
EXTRN	?RemoveHead@CPtrList@@QAEPAXXZ:PROC		; CPtrList::RemoveHead
EXTRN	?AddTail@CPtrList@@QAEPAU__POSITION@@PAX@Z:PROC	; CPtrList::AddTail
EXTRN	?Create@CPlex@@SGPAU1@AAPAU1@II@Z:PROC		; CPlex::Create
EXTRN	?FreeDataChain@CPlex@@QAEXXZ:PROC		; CPlex::FreeDataChain
EXTRN	??0CIWUnknown@@QAE@XZ:PROC			; CIWUnknown::CIWUnknown
EXTRN	??1CIWUnknown@@MAE@XZ:PROC			; CIWUnknown::~CIWUnknown
EXTRN	?AddRef@CIWUnknown@@MAGKXZ:PROC			; CIWUnknown::AddRef
EXTRN	?Release@CIWUnknown@@MAGKXZ:PROC		; CIWUnknown::Release
EXTRN	??0CChartAddInBase000000@@IAE@PAUIChartOCX000000@@PAUIAddInDllBase@@@Z:PROC ; CChartAddInBase000000::CChartAddInBase000000
EXTRN	??1CChartAddInBase000000@@MAE@XZ:PROC		; CChartAddInBase000000::~CChartAddInBase000000
EXTRN	?HasFullManager@CChartAddInBase000000@@MAEHXZ:PROC ; CChartAddInBase000000::HasFullManager
EXTRN	?RegisterEventMap@CChartAddInBase000000@@UAEHH@Z:PROC ; CChartAddInBase000000::RegisterEventMap
EXTRN	?UnregisterEventMap@CChartAddInBase000000@@UAEHXZ:PROC ; CChartAddInBase000000::UnregisterEventMap
EXTRN	?OnOcxDestroyWindow@CChartAddInBase000000@@MAEXXZ:PROC ; CChartAddInBase000000::OnOcxDestroyWindow
EXTRN	??_EIPacketQueryer@@MAEPAXI@Z:PROC		; IPacketQueryer::`vector deleting destructor'
EXTRN	??_ECDataInterfaceAddInImp@@UAEPAXI@Z:PROC	; CDataInterfaceAddInImp::`vector deleting destructor'
EXTRN	?GetMetaTextForScript@IMetaTable@@QAEPBDPAUHWND__@@W4E_CODEPAGE@1@PBDH@Z:PROC ; IMetaTable::GetMetaTextForScript
EXTRN	??_EIDblList@@MAEPAXI@Z:PROC			; IDblList::`vector deleting destructor'
EXTRN	?GetCount@CIWDblList@@MBEHXZ:PROC		; CIWDblList::GetCount
EXTRN	?IsEmpty@CIWDblList@@MBEHXZ:PROC		; CIWDblList::IsEmpty
EXTRN	?GetHead@CIWDblList@@MBEHAAN@Z:PROC		; CIWDblList::GetHead
EXTRN	?GetTail@CIWDblList@@MBEHAAN@Z:PROC		; CIWDblList::GetTail
EXTRN	?RemoveHead@CIWDblList@@MAEHAAN@Z:PROC		; CIWDblList::RemoveHead
EXTRN	?RemoveTail@CIWDblList@@MAEHAAN@Z:PROC		; CIWDblList::RemoveTail
EXTRN	?AddHead@CIWDblList@@MAEPAU__POSITION@@N@Z:PROC	; CIWDblList::AddHead
EXTRN	?AddTail@CIWDblList@@MAEPAU__POSITION@@N@Z:PROC	; CIWDblList::AddTail
EXTRN	?RemoveAll@CIWDblList@@MAEXXZ:PROC		; CIWDblList::RemoveAll
EXTRN	?GetHeadPosition@CIWDblList@@MBEPAU__POSITION@@XZ:PROC ; CIWDblList::GetHeadPosition
EXTRN	?GetTailPosition@CIWDblList@@MBEPAU__POSITION@@XZ:PROC ; CIWDblList::GetTailPosition
EXTRN	?GetNext@CIWDblList@@MBEHAAPAU__POSITION@@AAN@Z:PROC ; CIWDblList::GetNext
EXTRN	?GetPrev@CIWDblList@@MBEHAAPAU__POSITION@@AAN@Z:PROC ; CIWDblList::GetPrev
EXTRN	?GetAt@CIWDblList@@MBEHPAU__POSITION@@AAN@Z:PROC ; CIWDblList::GetAt
EXTRN	?SetAt@CIWDblList@@MAEXPAU__POSITION@@N@Z:PROC	; CIWDblList::SetAt
EXTRN	?RemoveAt@CIWDblList@@MAEXPAU__POSITION@@@Z:PROC ; CIWDblList::RemoveAt
EXTRN	?InsertBefore@CIWDblList@@MAEPAU__POSITION@@PAU2@N@Z:PROC ; CIWDblList::InsertBefore
EXTRN	?InsertAfter@CIWDblList@@MAEPAU__POSITION@@PAU2@N@Z:PROC ; CIWDblList::InsertAfter
EXTRN	?Find@CIWDblList@@MBEPAU__POSITION@@NPAU2@@Z:PROC ; CIWDblList::Find
EXTRN	?FindIndex@CIWDblList@@MBEPAU__POSITION@@H@Z:PROC ; CIWDblList::FindIndex
EXTRN	??_ECIWDblList@@MAEPAXI@Z:PROC			; CIWDblList::`vector deleting destructor'
EXTRN	??_E?$CList@NN@@UAEPAXI@Z:PROC			; CList<double,double>::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?m_bTraceForDelete@CIWUnknown@@1HA:DWORD	; CIWUnknown::m_bTraceForDelete
EXTRN	?g_iMetaTable@@3VIMetaTable@@A:BYTE		; g_iMetaTable
EXTRN	?m_nObjectCount@CIWDblList@@1JA:DWORD		; CIWDblList::m_nObjectCount
EXTRN	?m_lReleaseMgr@CIWDblList@@1VCIWrapperManager@1@A:BYTE ; CIWDblList::m_lReleaseMgr
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?m_strAddInItemName@CDataInterfaceAddInImp@@2V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@A DD 01H DUP (?) ; CDataInterfaceAddInImp::m_strAddInItemName
_BSS	ENDS
CRT$XCU	SEGMENT
??m_strAddInItemName$initializer$@CDataInterfaceAddInImp@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?m_strAddInItemName@CDataInterfaceAddInImp@@2V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@A@@YAXXZ ; ??m_strAddInItemName$initializer$@CDataInterfaceAddInImp@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CList@NN@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CList@NN@@8 DD FLAT:??_R0?AV?$CList@NN@@@8 ; CList<double,double>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CList@NN@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CList@NN@@8
rdata$r	SEGMENT
??_R2?$CList@NN@@8 DD FLAT:??_R1A@?0A@EA@?$CList@NN@@8	; CList<double,double>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CList@NN@@8
rdata$r	SEGMENT
??_R3?$CList@NN@@8 DD 00H				; CList<double,double>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CList@NN@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CList@NN@@@8
data$rs	SEGMENT
??_R0?AV?$CList@NN@@@8 DD FLAT:??_7type_info@@6B@	; CList<double,double> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CList@NN@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CList@NN@@6B@
rdata$r	SEGMENT
??_R4?$CList@NN@@6B@ DD 00H				; CList<double,double>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CList@NN@@@8
	DD	FLAT:??_R3?$CList@NN@@8
rdata$r	ENDS
;	COMDAT ??_R4CIWDblList@@6BIDblList@@@
rdata$r	SEGMENT
??_R4CIWDblList@@6BIDblList@@@ DD 00H			; CIWDblList::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVCIWDblList@@@8
	DD	FLAT:??_R3CIWDblList@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@IDblList@@8
rdata$r	SEGMENT
??_R17?0A@EA@IDblList@@8 DD FLAT:??_R0?AUIDblList@@@8	; IDblList::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IDblList@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CIWDblList@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CIWDblList@@8 DD FLAT:??_R0?AVCIWDblList@@@8 ; CIWDblList::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CIWDblList@@8
rdata$r	ENDS
;	COMDAT ??_R2CIWDblList@@8
rdata$r	SEGMENT
??_R2CIWDblList@@8 DD FLAT:??_R1A@?0A@EA@CIWDblList@@8	; CIWDblList::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CIWUnknown@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
	DD	FLAT:??_R17?0A@EA@IDblList@@8
	DD	FLAT:??_R17?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CIWDblList@@8
rdata$r	SEGMENT
??_R3CIWDblList@@8 DD 00H				; CIWDblList::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2CIWDblList@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCIWDblList@@@8
data$rs	SEGMENT
??_R0?AVCIWDblList@@@8 DD FLAT:??_7type_info@@6B@	; CIWDblList `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCIWDblList@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CIWDblList@@6BCIWUnknown@@@
rdata$r	SEGMENT
??_R4CIWDblList@@6BCIWUnknown@@@ DD 00H			; CIWDblList::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCIWDblList@@@8
	DD	FLAT:??_R3CIWDblList@@8
rdata$r	ENDS
;	COMDAT ??_R4CDataInterfaceAddInImp@@6B@
rdata$r	SEGMENT
??_R4CDataInterfaceAddInImp@@6B@ DD 00H			; CDataInterfaceAddInImp::`RTTI Complete Object Locator'
	DD	040H
	DD	00H
	DD	FLAT:??_R0?AVCDataInterfaceAddInImp@@@8
	DD	FLAT:??_R3CDataInterfaceAddInImp@@8
rdata$r	ENDS
;	COMDAT ??_R4CDataInterfaceAddInImp@@6BIChartAddIn000000@@@
rdata$r	SEGMENT
??_R4CDataInterfaceAddInImp@@6BIChartAddIn000000@@@ DD 00H ; CDataInterfaceAddInImp::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVCDataInterfaceAddInImp@@@8
	DD	FLAT:??_R3CDataInterfaceAddInImp@@8
rdata$r	ENDS
;	COMDAT ??_R1EA@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1EA@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (64,-1,0,66)'
	DD	00H
	DD	040H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1EA@?0A@EA@IPacketQueryer@@8
rdata$r	SEGMENT
??_R1EA@?0A@EA@IPacketQueryer@@8 DD FLAT:??_R0?AUIPacketQueryer@@@8 ; IPacketQueryer::`RTTI Base Class Descriptor at (64,-1,0,64)'
	DD	01H
	DD	040H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IPacketQueryer@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R17?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R17?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@IChartAddIn000000@@8
rdata$r	SEGMENT
??_R17?0A@EA@IChartAddIn000000@@8 DD FLAT:??_R0?AUIChartAddIn000000@@@8 ; IChartAddIn000000::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IChartAddIn000000@@8
rdata$r	ENDS
;	COMDAT ??_R2CIWUnknown@@8
rdata$r	SEGMENT
??_R2CIWUnknown@@8 DD FLAT:??_R1A@?0A@EA@CIWUnknown@@8	; CIWUnknown::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CIWUnknown@@8
rdata$r	SEGMENT
??_R3CIWUnknown@@8 DD 00H				; CIWUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CIWUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCIWUnknown@@@8
data$rs	SEGMENT
??_R0?AVCIWUnknown@@@8 DD FLAT:??_7type_info@@6B@	; CIWUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCIWUnknown@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CIWUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CIWUnknown@@8 DD FLAT:??_R0?AVCIWUnknown@@@8 ; CIWUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CIWUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2CChartAddInBase000000@@8
rdata$r	SEGMENT
??_R2CChartAddInBase000000@@8 DD FLAT:??_R1A@?0A@EA@CChartAddInBase000000@@8 ; CChartAddInBase000000::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CIWUnknown@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
	DD	FLAT:??_R17?0A@EA@IChartAddIn000000@@8
	DD	FLAT:??_R17?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CChartAddInBase000000@@8
rdata$r	SEGMENT
??_R3CChartAddInBase000000@@8 DD 00H			; CChartAddInBase000000::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2CChartAddInBase000000@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCChartAddInBase000000@@@8
data$rs	SEGMENT
??_R0?AVCChartAddInBase000000@@@8 DD FLAT:??_7type_info@@6B@ ; CChartAddInBase000000 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCChartAddInBase000000@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CChartAddInBase000000@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CChartAddInBase000000@@8 DD FLAT:??_R0?AVCChartAddInBase000000@@@8 ; CChartAddInBase000000::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CChartAddInBase000000@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDataInterfaceAddInImp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDataInterfaceAddInImp@@8 DD FLAT:??_R0?AVCDataInterfaceAddInImp@@@8 ; CDataInterfaceAddInImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	07H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDataInterfaceAddInImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CDataInterfaceAddInImp@@8
rdata$r	SEGMENT
??_R2CDataInterfaceAddInImp@@8 DD FLAT:??_R1A@?0A@EA@CDataInterfaceAddInImp@@8 ; CDataInterfaceAddInImp::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CChartAddInBase000000@@8
	DD	FLAT:??_R1A@?0A@EA@CIWUnknown@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
	DD	FLAT:??_R17?0A@EA@IChartAddIn000000@@8
	DD	FLAT:??_R17?0A@EC@IUnknown@@8
	DD	FLAT:??_R1EA@?0A@EA@IPacketQueryer@@8
	DD	FLAT:??_R1EA@?0A@EC@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CDataInterfaceAddInImp@@8
rdata$r	SEGMENT
??_R3CDataInterfaceAddInImp@@8 DD 00H			; CDataInterfaceAddInImp::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	08H
	DD	FLAT:??_R2CDataInterfaceAddInImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDataInterfaceAddInImp@@@8
data$rs	SEGMENT
??_R0?AVCDataInterfaceAddInImp@@@8 DD FLAT:??_7type_info@@6B@ ; CDataInterfaceAddInImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDataInterfaceAddInImp@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CDataInterfaceAddInImp@@6BCIWUnknown@@@
rdata$r	SEGMENT
??_R4CDataInterfaceAddInImp@@6BCIWUnknown@@@ DD 00H	; CDataInterfaceAddInImp::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDataInterfaceAddInImp@@@8
	DD	FLAT:??_R3CDataInterfaceAddInImp@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IPacketQueryer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IPacketQueryer@@8 DD FLAT:??_R0?AUIPacketQueryer@@@8 ; IPacketQueryer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IPacketQueryer@@8
rdata$r	ENDS
;	COMDAT ??_R2IPacketQueryer@@8
rdata$r	SEGMENT
??_R2IPacketQueryer@@8 DD FLAT:??_R1A@?0A@EA@IPacketQueryer@@8 ; IPacketQueryer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IPacketQueryer@@8
rdata$r	SEGMENT
??_R3IPacketQueryer@@8 DD 00H				; IPacketQueryer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IPacketQueryer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIPacketQueryer@@@8
data$rs	SEGMENT
??_R0?AUIPacketQueryer@@@8 DD FLAT:??_7type_info@@6B@	; IPacketQueryer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIPacketQueryer@@', 00H
data$rs	ENDS
;	COMDAT ??_R4IPacketQueryer@@6B@
rdata$r	SEGMENT
??_R4IPacketQueryer@@6B@ DD 00H				; IPacketQueryer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIPacketQueryer@@@8
	DD	FLAT:??_R3IPacketQueryer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IDblList@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IDblList@@8 DD FLAT:??_R0?AUIDblList@@@8	; IDblList::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IDblList@@8
rdata$r	ENDS
;	COMDAT ??_R2IDblList@@8
rdata$r	SEGMENT
??_R2IDblList@@8 DD FLAT:??_R1A@?0A@EA@IDblList@@8	; IDblList::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IDblList@@8
rdata$r	SEGMENT
??_R3IDblList@@8 DD 00H					; IDblList::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IDblList@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIDblList@@@8
data$rs	SEGMENT
??_R0?AUIDblList@@@8 DD FLAT:??_7type_info@@6B@		; IDblList `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIDblList@@', 00H
data$rs	ENDS
;	COMDAT ??_R4IDblList@@6B@
rdata$r	SEGMENT
??_R4IDblList@@6B@ DD 00H				; IDblList::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIDblList@@@8
	DD	FLAT:??_R3IDblList@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IChartAddIn000000@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IChartAddIn000000@@8 DD FLAT:??_R0?AUIChartAddIn000000@@@8 ; IChartAddIn000000::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IChartAddIn000000@@8
rdata$r	ENDS
;	COMDAT ??_R2IChartAddIn000000@@8
rdata$r	SEGMENT
??_R2IChartAddIn000000@@8 DD FLAT:??_R1A@?0A@EA@IChartAddIn000000@@8 ; IChartAddIn000000::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IChartAddIn000000@@8
rdata$r	SEGMENT
??_R3IChartAddIn000000@@8 DD 00H			; IChartAddIn000000::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IChartAddIn000000@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIChartAddIn000000@@@8
data$rs	SEGMENT
??_R0?AUIChartAddIn000000@@@8 DD FLAT:??_7type_info@@6B@ ; IChartAddIn000000 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIChartAddIn000000@@', 00H
data$rs	ENDS
;	COMDAT ??_C@_07MGCPDNLD@DEFAULT@
CONST	SEGMENT
??_C@_07MGCPDNLD@DEFAULT@ DB 'DEFAULT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7?$CList@NN@@6B@
CONST	SEGMENT
??_7?$CList@NN@@6B@ DD FLAT:??_R4?$CList@NN@@6B@	; CList<double,double>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CList@NN@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CList@NN@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CIWDblList@@6BIDblList@@@
CONST	SEGMENT
??_7CIWDblList@@6BIDblList@@@ DD FLAT:??_R4CIWDblList@@6BIDblList@@@ ; CIWDblList::`vftable'
	DD	FLAT:?QueryInterface@CIWDblList@@O7AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CIWDblList@@O7AGKXZ
	DD	FLAT:?Release@CIWDblList@@O7AGKXZ
	DD	FLAT:??_ECIWDblList@@O7AEPAXI@Z
	DD	FLAT:?GetCount@CIWDblList@@MBEHXZ
	DD	FLAT:?IsEmpty@CIWDblList@@MBEHXZ
	DD	FLAT:?GetHead@CIWDblList@@MBEHAAN@Z
	DD	FLAT:?GetTail@CIWDblList@@MBEHAAN@Z
	DD	FLAT:?RemoveHead@CIWDblList@@MAEHAAN@Z
	DD	FLAT:?RemoveTail@CIWDblList@@MAEHAAN@Z
	DD	FLAT:?AddHead@CIWDblList@@MAEPAU__POSITION@@N@Z
	DD	FLAT:?AddTail@CIWDblList@@MAEPAU__POSITION@@N@Z
	DD	FLAT:?RemoveAll@CIWDblList@@MAEXXZ
	DD	FLAT:?GetHeadPosition@CIWDblList@@MBEPAU__POSITION@@XZ
	DD	FLAT:?GetTailPosition@CIWDblList@@MBEPAU__POSITION@@XZ
	DD	FLAT:?GetNext@CIWDblList@@MBEHAAPAU__POSITION@@AAN@Z
	DD	FLAT:?GetPrev@CIWDblList@@MBEHAAPAU__POSITION@@AAN@Z
	DD	FLAT:?GetAt@CIWDblList@@MBEHPAU__POSITION@@AAN@Z
	DD	FLAT:?SetAt@CIWDblList@@MAEXPAU__POSITION@@N@Z
	DD	FLAT:?RemoveAt@CIWDblList@@MAEXPAU__POSITION@@@Z
	DD	FLAT:?InsertBefore@CIWDblList@@MAEPAU__POSITION@@PAU2@N@Z
	DD	FLAT:?InsertAfter@CIWDblList@@MAEPAU__POSITION@@PAU2@N@Z
	DD	FLAT:?Find@CIWDblList@@MBEPAU__POSITION@@NPAU2@@Z
	DD	FLAT:?FindIndex@CIWDblList@@MBEPAU__POSITION@@H@Z
CONST	ENDS
;	COMDAT ??_7CIWDblList@@6BCIWUnknown@@@
CONST	SEGMENT
??_7CIWDblList@@6BCIWUnknown@@@ DD FLAT:??_R4CIWDblList@@6BCIWUnknown@@@ ; CIWDblList::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECIWDblList@@MAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?AddRef@CIWDblList@@MAGKXZ
	DD	FLAT:?Release@CIWDblList@@MAGKXZ
	DD	FLAT:?QueryInterface@CIWDblList@@MAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?PostConstruct@CIWUnknown@@MAEXXZ
	DD	FLAT:?PreDestructX@CIWDblList@@MAEXXZ
	DD	FLAT:?PreDestruct@CIWUnknown@@MAEXXZ
	DD	FLAT:?GetIChartOCX000000@CIWDblList@@MAEPAUIChartOCX000000@@XZ
CONST	ENDS
;	COMDAT ??_7IDblList@@6B@
CONST	SEGMENT
??_7IDblList@@6B@ DD FLAT:??_R4IDblList@@6B@		; IDblList::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:??_EIDblList@@MAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7CDataInterfaceAddInImp@@6B@
CONST	SEGMENT
??_7CDataInterfaceAddInImp@@6B@ DD FLAT:??_R4CDataInterfaceAddInImp@@6B@ ; CDataInterfaceAddInImp::`vftable'
	DD	FLAT:?QueryInterface@CDataInterfaceAddInImp@@OEA@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CDataInterfaceAddInImp@@OEA@AGKXZ
	DD	FLAT:?Release@CDataInterfaceAddInImp@@OEA@AGKXZ
	DD	FLAT:??_ECDataInterfaceAddInImp@@WEA@AEPAXI@Z
	DD	FLAT:?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z
CONST	ENDS
;	COMDAT ??_7CDataInterfaceAddInImp@@6BIChartAddIn000000@@@
CONST	SEGMENT
??_7CDataInterfaceAddInImp@@6BIChartAddIn000000@@@ DD FLAT:??_R4CDataInterfaceAddInImp@@6BIChartAddIn000000@@@ ; CDataInterfaceAddInImp::`vftable'
	DD	FLAT:?QueryInterface@CDataInterfaceAddInImp@@O7AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CDataInterfaceAddInImp@@O7AGKXZ
	DD	FLAT:?Release@CDataInterfaceAddInImp@@O7AGKXZ
	DD	FLAT:??_ECDataInterfaceAddInImp@@W7AEPAXI@Z
	DD	FLAT:?HasFullManager@CChartAddInBase000000@@MAEHXZ
	DD	FLAT:?GetAddInCustomInterface@CDataInterfaceAddInImp@@MAEPAUIUnknown@@XZ
	DD	FLAT:?InvokeAddIn@CChartAddInBase000000@@MAEHHJ@Z
	DD	FLAT:?InvokeAddInStr@CChartAddInBase000000@@MAEHPBD0@Z
	DD	FLAT:?OnOcxDestroyWindow@CChartAddInBase000000@@MAEXXZ
	DD	FLAT:?ChangeChartMode@CChartAddInBase000000@@MAEXW4CHART_MODE@CChartInfo@@@Z
	DD	FLAT:?RegisterEventMap@CChartAddInBase000000@@UAEHH@Z
	DD	FLAT:?UnregisterEventMap@CChartAddInBase000000@@UAEHXZ
	DD	FLAT:?OnGSharedDataChange@CChartAddInBase000000@@MAEXPBD0H@Z
	DD	FLAT:?OnLSharedDataChange@CChartAddInBase000000@@MAEXPBD0@Z
	DD	FLAT:?OnResetChart@CChartAddInBase000000@@MAEXXZ
	DD	FLAT:?OnDrawBeforeGraph@CChartAddInBase000000@@MAEXPAUHDC__@@@Z
	DD	FLAT:?OnDrawAfterGraph@CChartAddInBase000000@@MAEXPAUHDC__@@@Z
	DD	FLAT:?OnPacketDataMultiItem@CChartAddInBase000000@@MAEXPBD0H@Z
	DD	FLAT:?OnTimer@CChartAddInBase000000@@MAEXI@Z
	DD	FLAT:?OnCaptureChanged@CChartAddInBase000000@@MAEXPAUHWND__@@QAUHBITMAP__@@@Z
	DD	FLAT:?OnResetMainBlock@CChartAddInBase000000@@MAEXXZ
	DD	FLAT:?OnUserIndiatorConditionLoaded@CChartAddInBase000000@@MAEXXZ
	DD	FLAT:?OnChartItemChanged@CChartAddInBase000000@@MAEXXZ
	DD	FLAT:?OnGraphDataChanged@CChartAddInBase000000@@MAEXXZ
	DD	FLAT:?OnBlockRemoved@CChartAddInBase000000@@MAEXHH@Z
	DD	FLAT:?OnGraphAdded@CChartAddInBase000000@@MAEXPBD0@Z
	DD	FLAT:?OnManualRealData@CChartAddInBase000000@@MAEXPBDNH@Z
	DD	FLAT:?OnContextMenu@CChartAddInBase000000@@MAEXPAUHWND__@@AAUtagPOINT@@@Z
	DD	FLAT:?OnGraphDeleted@CChartAddInBase000000@@MAEXPBD0@Z
	DD	FLAT:?OnPacketTruncated@CChartAddInBase000000@@MAEXH@Z
	DD	FLAT:?OnBlockChanged@CChartAddInBase000000@@MAEXW4BLOCKBEHAVIOR@CBlockBaseData@@HHHH@Z
	DD	FLAT:?OnToolCommand@CChartAddInBase000000@@MAEXHH@Z
	DD	FLAT:?OnRealData@CChartAddInBase000000@@MAEXPBDN0@Z
	DD	FLAT:?OnIndexedRealData@CChartAddInBase000000@@MAEXPBDHN@Z
	DD	FLAT:?OnRealPacketEnd@CChartAddInBase000000@@MAEXPBD@Z
	DD	FLAT:?OnLoadEnvironment@CChartAddInBase000000@@MAEXPAUIPropertyMap@@@Z
	DD	FLAT:?OnSaveEnvironment@CChartAddInBase000000@@MAEXPAUIPropertyMap@@@Z
	DD	FLAT:?DrawCursor@CChartAddInBase000000@@MAE?AUtagRECT@@PAUHDC__@@@Z
	DD	FLAT:?OnRecalculationComplete@CChartAddInBase000000@@MAEXXZ
	DD	FLAT:?OnPreRealData@CChartAddInBase000000@@MAEHPBDAAN0H@Z
	DD	FLAT:?OnPreIndexedRealData@CChartAddInBase000000@@MAEHPBDHAANH@Z
	DD	FLAT:?OnPreRealPacketEnd@CChartAddInBase000000@@MAEHPBDH@Z
	DD	FLAT:?OnPreNMTRClock@CChartAddInBase000000@@MAEHAA_J@Z
	DD	FLAT:?OnCmdMsg@CChartAddInBase000000@@MAEHIHPAUICmdUI000000@@@Z
	DD	FLAT:?OnAddInMsg@CChartAddInBase000000@@MAEHPBDJ@Z
	DD	FLAT:?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@JJ@Z
	DD	FLAT:?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@J@Z
	DD	FLAT:?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@PBDPAVCObject@@@Z
	DD	FLAT:?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@PBD@Z
	DD	FLAT:?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@PAUIGraphInfo000000@@@Z
	DD	FLAT:?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@@Z
	DD	FLAT:?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@JJJJJJJJJ@Z
	DD	FLAT:?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@JJ@Z
	DD	FLAT:?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@JPBD11@Z
	DD	FLAT:?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@JPBD@Z
	DD	FLAT:?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@J@Z
	DD	FLAT:?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PBUIAddInDllBase@@@Z
	DD	FLAT:?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PBDJ@Z
	DD	FLAT:?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PBD1@Z
	DD	FLAT:?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PBD@Z
	DD	FLAT:?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PAUHDC__@@IAAUtagPOINT@@K@Z
	DD	FLAT:?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@@Z
	DD	FLAT:?OnKeyDown@CChartAddInBase000000@@MAEHIII@Z
	DD	FLAT:?OnKeyUp@CChartAddInBase000000@@MAEHIII@Z
	DD	FLAT:?OnMouseWheel@CChartAddInBase000000@@MAEHIFUtagPOINT@@K@Z
	DD	FLAT:?OnMouseMove@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@KQAUHBITMAP__@@@Z
	DD	FLAT:?OnLButtonDown@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z
	DD	FLAT:?OnLButtonUp@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z
	DD	FLAT:?OnLButtonDblClk@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z
	DD	FLAT:?OnRButtonDown@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z
	DD	FLAT:?OnRButtonUp@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z
	DD	FLAT:?OnRButtonDblClk@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z
CONST	ENDS
;	COMDAT ??_7CDataInterfaceAddInImp@@6BCIWUnknown@@@
CONST	SEGMENT
??_7CDataInterfaceAddInImp@@6BCIWUnknown@@@ DD FLAT:??_R4CDataInterfaceAddInImp@@6BCIWUnknown@@@ ; CDataInterfaceAddInImp::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDataInterfaceAddInImp@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?AddRef@CDataInterfaceAddInImp@@MAGKXZ
	DD	FLAT:?Release@CDataInterfaceAddInImp@@MAGKXZ
	DD	FLAT:?QueryInterface@CDataInterfaceAddInImp@@MAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?PostConstruct@CIWUnknown@@MAEXXZ
	DD	FLAT:?PreDestructX@CIWUnknown@@MAEXXZ
	DD	FLAT:?PreDestruct@CIWUnknown@@MAEXXZ
	DD	FLAT:?GetRegisteredEventMap@CDataInterfaceAddInImp@@MBEPBW4EAddInEventType@IChartAddIn000000@@XZ
	DD	FLAT:?AfeterOnOcxDestroyWindow@CChartAddInBase000000@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7IPacketQueryer@@6B@
CONST	SEGMENT
??_7IPacketQueryer@@6B@ DD FLAT:??_R4IPacketQueryer@@6B@ ; IPacketQueryer::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:??_EIPacketQueryer@@MAEPAXI@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
data$rs	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$rs	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$rs	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CList@NN@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CList@NN@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$CList@NN@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CList@NN@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GCIWDblList@@MAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_GCIWDblList@@MAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_GCIWDblList@@MAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateObject@CIWDblList@@SAPAUIDblList@@PAV?$CList@NN@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateObject@CIWDblList@@SAPAUIDblList@@PAV?$CList@NN@@H@Z$0
__ehfuncinfo$?CreateObject@CIWDblList@@SAPAUIDblList@@PAV?$CList@NN@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateObject@CIWDblList@@SAPAUIDblList@@PAV?$CList@NN@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CIWDblList@@MAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1ILPCSTR000000@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z$3
	DD	02H
	DD	FLAT:___std_terminate
	DD	01H
	DD	FLAT:___std_terminate
	DD	02H
	DD	FLAT:___std_terminate
	DD	01H
	DD	FLAT:___std_terminate
	DD	01H
	DD	FLAT:__unwindfunclet$?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z$9
xdata$x	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_ECIWDblList@@O7AEPAXI@Z
_TEXT	SEGMENT
??_ECIWDblList@@O7AEPAXI@Z PROC				; [thunk]:CIWDblList::`vector deleting destructor', COMDAT
  00000	83 e9 08	 sub	 ecx, 8
  00003	e9 00 00 00 00	 jmp	 ??_ECIWDblList@@MAEPAXI@Z
??_ECIWDblList@@O7AEPAXI@Z ENDP				; [thunk]:CIWDblList::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?Release@CIWDblList@@O7AGKXZ
_TEXT	SEGMENT
?Release@CIWDblList@@O7AGKXZ PROC			; [thunk]:CIWDblList::Release`adjustor{8}', COMDAT
  00000	83 6c 24 04 08	 sub	 DWORD PTR [esp+4], 8
  00005	e9 00 00 00 00	 jmp	 ?Release@CIWDblList@@MAGKXZ ; CIWDblList::Release
?Release@CIWDblList@@O7AGKXZ ENDP			; [thunk]:CIWDblList::Release`adjustor{8}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?AddRef@CIWDblList@@O7AGKXZ
_TEXT	SEGMENT
?AddRef@CIWDblList@@O7AGKXZ PROC			; [thunk]:CIWDblList::AddRef`adjustor{8}', COMDAT
  00000	83 6c 24 04 08	 sub	 DWORD PTR [esp+4], 8
  00005	e9 00 00 00 00	 jmp	 ?AddRef@CIWDblList@@MAGKXZ ; CIWDblList::AddRef
?AddRef@CIWDblList@@O7AGKXZ ENDP			; [thunk]:CIWDblList::AddRef`adjustor{8}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?QueryInterface@CIWDblList@@O7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CIWDblList@@O7AGJABU_GUID@@PAPAX@Z PROC	; [thunk]:CIWDblList::QueryInterface`adjustor{8}', COMDAT
  00000	83 6c 24 04 08	 sub	 DWORD PTR [esp+4], 8
  00005	e9 00 00 00 00	 jmp	 ?QueryInterface@CIWDblList@@MAGJABU_GUID@@PAPAX@Z ; CIWDblList::QueryInterface
?QueryInterface@CIWDblList@@O7AGJABU_GUID@@PAPAX@Z ENDP	; [thunk]:CIWDblList::QueryInterface`adjustor{8}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_ECDataInterfaceAddInImp@@WEA@AEPAXI@Z
_TEXT	SEGMENT
??_ECDataInterfaceAddInImp@@WEA@AEPAXI@Z PROC		; [thunk]:CDataInterfaceAddInImp::`vector deleting destructor', COMDAT
  00000	83 e9 40	 sub	 ecx, 64			; 00000040H
  00003	e9 00 00 00 00	 jmp	 ??_ECDataInterfaceAddInImp@@UAEPAXI@Z
??_ECDataInterfaceAddInImp@@WEA@AEPAXI@Z ENDP		; [thunk]:CDataInterfaceAddInImp::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?Release@CDataInterfaceAddInImp@@OEA@AGKXZ
_TEXT	SEGMENT
?Release@CDataInterfaceAddInImp@@OEA@AGKXZ PROC		; [thunk]:CDataInterfaceAddInImp::Release`adjustor{64}', COMDAT
  00000	83 6c 24 04 40	 sub	 DWORD PTR [esp+4], 64	; 00000040H
  00005	e9 00 00 00 00	 jmp	 ?Release@CDataInterfaceAddInImp@@MAGKXZ ; CDataInterfaceAddInImp::Release
?Release@CDataInterfaceAddInImp@@OEA@AGKXZ ENDP		; [thunk]:CDataInterfaceAddInImp::Release`adjustor{64}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?AddRef@CDataInterfaceAddInImp@@OEA@AGKXZ
_TEXT	SEGMENT
?AddRef@CDataInterfaceAddInImp@@OEA@AGKXZ PROC		; [thunk]:CDataInterfaceAddInImp::AddRef`adjustor{64}', COMDAT
  00000	83 6c 24 04 40	 sub	 DWORD PTR [esp+4], 64	; 00000040H
  00005	e9 00 00 00 00	 jmp	 ?AddRef@CDataInterfaceAddInImp@@MAGKXZ ; CDataInterfaceAddInImp::AddRef
?AddRef@CDataInterfaceAddInImp@@OEA@AGKXZ ENDP		; [thunk]:CDataInterfaceAddInImp::AddRef`adjustor{64}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?QueryInterface@CDataInterfaceAddInImp@@OEA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CDataInterfaceAddInImp@@OEA@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CDataInterfaceAddInImp::QueryInterface`adjustor{64}', COMDAT
  00000	83 6c 24 04 40	 sub	 DWORD PTR [esp+4], 64	; 00000040H
  00005	e9 00 00 00 00	 jmp	 ?QueryInterface@CDataInterfaceAddInImp@@MAGJABU_GUID@@PAPAX@Z ; CDataInterfaceAddInImp::QueryInterface
?QueryInterface@CDataInterfaceAddInImp@@OEA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CDataInterfaceAddInImp::QueryInterface`adjustor{64}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_ECDataInterfaceAddInImp@@W7AEPAXI@Z
_TEXT	SEGMENT
??_ECDataInterfaceAddInImp@@W7AEPAXI@Z PROC		; [thunk]:CDataInterfaceAddInImp::`vector deleting destructor', COMDAT
  00000	83 e9 08	 sub	 ecx, 8
  00003	e9 00 00 00 00	 jmp	 ??_ECDataInterfaceAddInImp@@UAEPAXI@Z
??_ECDataInterfaceAddInImp@@W7AEPAXI@Z ENDP		; [thunk]:CDataInterfaceAddInImp::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?Release@CDataInterfaceAddInImp@@O7AGKXZ
_TEXT	SEGMENT
?Release@CDataInterfaceAddInImp@@O7AGKXZ PROC		; [thunk]:CDataInterfaceAddInImp::Release`adjustor{8}', COMDAT
  00000	83 6c 24 04 08	 sub	 DWORD PTR [esp+4], 8
  00005	e9 00 00 00 00	 jmp	 ?Release@CDataInterfaceAddInImp@@MAGKXZ ; CDataInterfaceAddInImp::Release
?Release@CDataInterfaceAddInImp@@O7AGKXZ ENDP		; [thunk]:CDataInterfaceAddInImp::Release`adjustor{8}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?AddRef@CDataInterfaceAddInImp@@O7AGKXZ
_TEXT	SEGMENT
?AddRef@CDataInterfaceAddInImp@@O7AGKXZ PROC		; [thunk]:CDataInterfaceAddInImp::AddRef`adjustor{8}', COMDAT
  00000	83 6c 24 04 08	 sub	 DWORD PTR [esp+4], 8
  00005	e9 00 00 00 00	 jmp	 ?AddRef@CDataInterfaceAddInImp@@MAGKXZ ; CDataInterfaceAddInImp::AddRef
?AddRef@CDataInterfaceAddInImp@@O7AGKXZ ENDP		; [thunk]:CDataInterfaceAddInImp::AddRef`adjustor{8}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?QueryInterface@CDataInterfaceAddInImp@@O7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CDataInterfaceAddInImp@@O7AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CDataInterfaceAddInImp::QueryInterface`adjustor{8}', COMDAT
  00000	83 6c 24 04 08	 sub	 DWORD PTR [esp+4], 8
  00005	e9 00 00 00 00	 jmp	 ?QueryInterface@CDataInterfaceAddInImp@@MAGJABU_GUID@@PAPAX@Z ; CDataInterfaceAddInImp::QueryInterface
?QueryInterface@CDataInterfaceAddInImp@@O7AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CDataInterfaceAddInImp::QueryInterface`adjustor{8}'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@N@@YGXAAVCArchive@@PANH@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@N@@YGXAAVCArchive@@PANH@Z PROC	; SerializeElements<double>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b 75 10	 mov	 esi, DWORD PTR _nCount$[ebp]
  0000b	57		 push	 edi
  0000c	85 f6		 test	 esi, esi
  0000e	74 08		 je	 SHORT $LN2@SerializeE
  00010	85 c9		 test	 ecx, ecx
  00012	0f 84 89 00 00
	00		 je	 $LN34@SerializeE
$LN2@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00018	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  0001b	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0001e	f7 d0		 not	 eax
  00020	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  00022	74 3c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;
; 79   : 		pData = pElements;
; 80   : 		while( nElementsLeft > 0 )

  00024	85 f6		 test	 esi, esi
  00026	74 31		 je	 SHORT $LN8@SerializeE
  00028	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL5@SerializeE:

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00030	bb ff ff ff 0f	 mov	 ebx, 268435455		; 0fffffffH
  00035	3b f3		 cmp	 esi, ebx
  00037	0f 42 de	 cmovb	 ebx, esi

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0003a	8d 3c dd 00 00
	00 00		 lea	 edi, DWORD PTR [ebx*8]
  00041	57		 push	 edi
  00042	51		 push	 ecx
  00043	8b ca		 mov	 ecx, edx
  00045	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;
; 87   : 			pData += nElementsToWrite;

  0004a	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00050	03 cf		 add	 ecx, edi
  00052	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  00055	2b f3		 sub	 esi, ebx
  00057	75 d7		 jne	 SHORT $LL5@SerializeE
$LN8@SerializeE:
  00059	5f		 pop	 edi

; 105  : 		}
; 106  : 	}
; 107  : }

  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	5d		 pop	 ebp
  0005d	c2 0c 00	 ret	 12			; 0000000cH
$LN10@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  00060	85 f6		 test	 esi, esi
  00062	74 f5		 je	 SHORT $LN8@SerializeE
$LL7@SerializeE:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00064	bf ff ff ff 0f	 mov	 edi, 268435455		; 0fffffffH
  00069	3b f7		 cmp	 esi, edi
  0006b	0f 42 fe	 cmovb	 edi, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0006e	8d 1c fd 00 00
	00 00		 lea	 ebx, DWORD PTR [edi*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00075	53		 push	 ebx
  00076	51		 push	 ecx
  00077	8b ca		 mov	 ecx, edx
  00079	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0007e	3b c3		 cmp	 eax, ebx
  00080	75 16		 jne	 SHORT $LN23@SerializeE
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  00082	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00085	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;
; 104  : 			pData += nElementsToRead;

  00088	03 cb		 add	 ecx, ebx
  0008a	89 4d 0c	 mov	 DWORD PTR _pElements$[ebp], ecx
  0008d	2b f7		 sub	 esi, edi
  0008f	75 d3		 jne	 SHORT $LL7@SerializeE

; 105  : 		}
; 106  : 	}
; 107  : }

  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	5d		 pop	 ebp
  00095	c2 0c 00	 ret	 12			; 0000000cH
$LN23@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 402  : 		AfxThrowArchiveException(CArchiveException::endOfFile);

  00098	6a 00		 push	 0
  0009a	6a 03		 push	 3
  0009c	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN34@SerializeE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  000a1	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN32@SerializeE:
  000a6	cc		 int	 3
??$SerializeElements@N@@YGXAAVCArchive@@PANH@Z ENDP	; SerializeElements<double>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?m_strAddInItemName@CDataInterfaceAddInImp@@2V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@A@@YAXXZ
text$yd	SEGMENT
??__F?m_strAddInItemName@CDataInterfaceAddInImp@@2V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CDataInterfaceAddInImp::m_strAddInItemName'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_strAddInItemName@CDataInterfaceAddInImp@@2V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@A ; CDataInterfaceAddInImp::m_strAddInItemName
  00005	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
??__F?m_strAddInItemName@CDataInterfaceAddInImp@@2V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CDataInterfaceAddInImp::m_strAddInItemName''
text$yd	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp
;	COMDAT ??__E?m_strAddInItemName@CDataInterfaceAddInImp@@2V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@A@@YAXXZ
text$di	SEGMENT
??__E?m_strAddInItemName@CDataInterfaceAddInImp@@2V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@A@@YAXXZ PROC ; `dynamic initializer for 'CDataInterfaceAddInImp::m_strAddInItemName'', COMDAT

; 34   : CString CDataInterfaceAddInImp::m_strAddInItemName		= "PACKET_QUERYER";

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DMEAPPOH@PACKET_QUERYER@
  00005	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_strAddInItemName@CDataInterfaceAddInImp@@2V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@A ; CDataInterfaceAddInImp::m_strAddInItemName
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  00010	68 00 00 00 00	 push	 OFFSET ??__F?m_strAddInItemName@CDataInterfaceAddInImp@@2V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@A@@YAXXZ ; `dynamic atexit destructor for 'CDataInterfaceAddInImp::m_strAddInItemName''
  00015	e8 00 00 00 00	 call	 _atexit
  0001a	59		 pop	 ecx
  0001b	c3		 ret	 0
??__E?m_strAddInItemName@CDataInterfaceAddInImp@@2V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@A@@YAXXZ ENDP ; `dynamic initializer for 'CDataInterfaceAddInImp::m_strAddInItemName''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_G?$CList@NN@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CList@NN@@UAEPAXI@Z PROC				; CList<double,double>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CList@NN@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 872  : 	m_pBlocks->FreeDataChain();

  00025	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]

; 878  : {

  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CList@NN@@6B@

; 870  : 	m_nCount = 0;

  00035	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  0003c	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00043	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0004a	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 872  : 	m_pBlocks->FreeDataChain();

  00051	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 873  : 	m_pBlocks = NULL;

  00056	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00059	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00060	a8 01		 test	 al, 1
  00062	74 2c		 je	 SHORT $LN22@scalar
  00064	a8 04		 test	 al, 4
  00066	75 1d		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  00068	56		 push	 esi
  00069	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006e	83 c4 04	 add	 esp, 4
  00071	8b c6		 mov	 eax, esi
  00073	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00076	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007d	59		 pop	 ecx
  0007e	5e		 pop	 esi
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
$LN3@scalar:
  00085	6a 1c		 push	 28			; 0000001cH
  00087	56		 push	 esi
  00088	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0008d	83 c4 08	 add	 esp, 8
$LN22@scalar:
  00090	8b c6		 mov	 eax, esi
  00092	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00095	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009c	59		 pop	 ecx
  0009d	5e		 pop	 esi
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 04 00	 ret	 4
  000a4	cc		 int	 3
  000a5	cc		 int	 3
  000a6	cc		 int	 3
  000a7	cc		 int	 3
  000a8	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CList@NN@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CList@NN@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CList@NN@@UAEPAXI@Z ENDP				; CList<double,double>::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CList@NN@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_newData$1 = -24					; size = 8
_nNewCount$1$ = -16					; size = 4
_newElement$1$ = -12					; size = 8
_pData$1$ = -8						; size = 4
_pData$1$ = -8						; size = 4
_pNode$1$ = -8						; size = 4
_nElementsLeft$1$ = -4					; size = 4
_this$1$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CList@NN@@UAEXAAVCArchive@@@Z PROC		; CList<double,double>::Serialize, COMDAT
; _this$ = ecx

; 1169 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00009	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1169 : {

  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	89 5d fc	 mov	 DWORD PTR _this$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  00011	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00014	f7 d0		 not	 eax
  00016	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1174 : 	if (ar.IsStoring())

  00018	0f 84 ae 00 00
	00		 je	 $LN7@Serialize

; 1175 : 	{
; 1176 : 		ar.WriteCount(m_nCount);

  0001e	ff 73 0c	 push	 DWORD PTR [ebx+12]
  00021	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1177 : 		for (CNode* pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  00026	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00029	89 45 f8	 mov	 DWORD PTR _pNode$1$[ebp], eax
  0002c	85 c0		 test	 eax, eax
  0002e	0f 84 ca 01 00
	00		 je	 $LN86@Serialize
$LL4@Serialize:

; 1178 : 		{
; 1179 : 			ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1180 : 			TYPE* pData;
; 1181 : 			/*
; 1182 : 			 * in some cases the & operator might be overloaded, and we cannot use it to obtain
; 1183 : 			 * the address of a given object.  We then use the following trick to get the address
; 1184 : 			 */
; 1185 : 			pData = reinterpret_cast< TYPE* >( &reinterpret_cast< int& >( static_cast< TYPE& >( pNode->data ) ) );

  00034	8d 58 08	 lea	 ebx, DWORD PTR [eax+8]

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00037	85 db		 test	 ebx, ebx
  00039	0f 84 d1 01 00
	00		 je	 $LN76@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00042	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00045	f7 d0		 not	 eax
  00047	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  00049	74 33		 je	 SHORT $LN21@Serialize

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0004b	b8 01 00 00 00	 mov	 eax, 1
  00050	89 45 fc	 mov	 DWORD PTR _nElementsLeft$1$[ebp], eax
$LL16@Serialize:

; 80   : 		while( nElementsLeft > 0 )
; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00053	bf ff ff ff 0f	 mov	 edi, 268435455		; 0fffffffH
  00058	3b c7		 cmp	 eax, edi
  0005a	0f 42 f8	 cmovb	 edi, eax

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0005d	8d 34 fd 00 00
	00 00		 lea	 esi, DWORD PTR [edi*8]
  00064	56		 push	 esi
  00065	53		 push	 ebx
  00066	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  0006b	8b 45 fc	 mov	 eax, DWORD PTR _nElementsLeft$1$[ebp]

; 87   : 			pData += nElementsToWrite;

  0006e	03 de		 add	 ebx, esi
  00070	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00073	2b c7		 sub	 eax, edi
  00075	89 45 fc	 mov	 DWORD PTR _nElementsLeft$1$[ebp], eax
  00078	85 c0		 test	 eax, eax
  0007a	75 d7		 jne	 SHORT $LL16@Serialize

; 88   : 		}
; 89   : 	}

  0007c	eb 35		 jmp	 SHORT $LN2@Serialize
$LN21@Serialize:

; 90   : 	else
; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  0007e	be 01 00 00 00	 mov	 esi, 1
$LL18@Serialize:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00083	bf ff ff ff 0f	 mov	 edi, 268435455		; 0fffffffH
  00088	3b f7		 cmp	 esi, edi
  0008a	0f 42 fe	 cmovb	 edi, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0008d	8d 04 fd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00094	50		 push	 eax
  00095	53		 push	 ebx
  00096	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0009b	8d 0c fd 00 00
	00 00		 lea	 ecx, DWORD PTR [edi*8]
  000a2	3b c1		 cmp	 eax, ecx
  000a4	0f 85 5d 01 00
	00		 jne	 $LN75@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  000aa	03 d9		 add	 ebx, ecx
  000ac	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]

; 103  : 			nElementsLeft -= nElementsToRead;

  000af	2b f7		 sub	 esi, edi
  000b1	75 d0		 jne	 SHORT $LL18@Serialize
$LN2@Serialize:

; 1177 : 		for (CNode* pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  000b3	8b 45 f8	 mov	 eax, DWORD PTR _pNode$1$[ebp]
  000b6	8b 00		 mov	 eax, DWORD PTR [eax]
  000b8	89 45 f8	 mov	 DWORD PTR _pNode$1$[ebp], eax
  000bb	85 c0		 test	 eax, eax
  000bd	0f 85 71 ff ff
	ff		 jne	 $LL4@Serialize

; 1197 : 		}
; 1198 : 	}
; 1199 : }

  000c3	5f		 pop	 edi
  000c4	5e		 pop	 esi
  000c5	5b		 pop	 ebx
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
$LN7@Serialize:

; 1186 : 			SerializeElements<TYPE>(ar, pData, 1);
; 1187 : 		}
; 1188 : 	}
; 1189 : 	else
; 1190 : 	{
; 1191 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000cc	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount

; 1192 : 		while (nNewCount--)

  000d1	85 c0		 test	 eax, eax
  000d3	0f 84 25 01 00
	00		 je	 $LN86@Serialize
  000d9	0f 1f 80 00 00
	00 00		 npad	 7
$LL5@Serialize:
  000e0	48		 dec	 eax
  000e1	89 45 f0	 mov	 DWORD PTR _nNewCount$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  000e4	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  000e7	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000ea	f7 d1		 not	 ecx
  000ec	f6 c1 01	 test	 cl, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 73   : 	if (ar.IsStoring())

  000ef	74 3d		 je	 SHORT $LN42@Serialize

; 79   : 		pData = pElements;

  000f1	8d 4d e8	 lea	 ecx, DWORD PTR _newData$1[ebp]
  000f4	bb 01 00 00 00	 mov	 ebx, 1
  000f9	89 4d f8	 mov	 DWORD PTR _pData$1$[ebp], ecx
  000fc	0f 1f 40 00	 npad	 4
$LL37@Serialize:

; 80   : 		while( nElementsLeft > 0 )
; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00100	bf ff ff ff 0f	 mov	 edi, 268435455		; 0fffffffH
  00105	3b df		 cmp	 ebx, edi
  00107	0f 42 fb	 cmovb	 edi, ebx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  0010a	8d 34 fd 00 00
	00 00		 lea	 esi, DWORD PTR [edi*8]
  00111	56		 push	 esi
  00112	51		 push	 ecx
  00113	8b c8		 mov	 ecx, eax
  00115	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 87   : 			pData += nElementsToWrite;

  0011a	8b 4d f8	 mov	 ecx, DWORD PTR _pData$1$[ebp]
  0011d	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00120	03 ce		 add	 ecx, esi
  00122	89 4d f8	 mov	 DWORD PTR _pData$1$[ebp], ecx
  00125	2b df		 sub	 ebx, edi
  00127	75 d7		 jne	 SHORT $LL37@Serialize

; 88   : 		}
; 89   : 	}

  00129	8b 5d fc	 mov	 ebx, DWORD PTR _this$1$[ebp]
  0012c	eb 4a		 jmp	 SHORT $LN40@Serialize
$LN42@Serialize:

; 96   : 		pData = pElements;

  0012e	8d 55 e8	 lea	 edx, DWORD PTR _newData$1[ebp]
  00131	be 01 00 00 00	 mov	 esi, 1
  00136	89 55 f8	 mov	 DWORD PTR _pData$1$[ebp], edx
  00139	0f 1f 80 00 00
	00 00		 npad	 7
$LL39@Serialize:

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  00140	bf ff ff ff 0f	 mov	 edi, 268435455		; 0fffffffH
  00145	3b f7		 cmp	 esi, edi
  00147	0f 42 fe	 cmovb	 edi, esi

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  0014a	8d 0c fd 00 00
	00 00		 lea	 ecx, DWORD PTR [edi*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 399  : 	UINT nRead=Read(lpBuf, nCount);

  00151	51		 push	 ecx
  00152	52		 push	 edx
  00153	8b c8		 mov	 ecx, eax
  00155	e8 00 00 00 00	 call	 ?Read@CArchive@@QAEIPAXI@Z ; CArchive::Read

; 400  : 	if(nRead!=nCount)

  0015a	8d 0c fd 00 00
	00 00		 lea	 ecx, DWORD PTR [edi*8]
  00161	3b c1		 cmp	 eax, ecx
  00163	0f 85 9e 00 00
	00		 jne	 $LN75@Serialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 97   : 		while( nElementsLeft > 0 )

  00169	8b 55 f8	 mov	 edx, DWORD PTR _pData$1$[ebp]
  0016c	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]

; 104  : 			pData += nElementsToRead;

  0016f	03 d1		 add	 edx, ecx
  00171	89 55 f8	 mov	 DWORD PTR _pData$1$[ebp], edx
  00174	2b f7		 sub	 esi, edi
  00176	75 c8		 jne	 SHORT $LL39@Serialize
$LN40@Serialize:

; 902  : 	if (m_pNodeFree == NULL)

  00178	83 7b 10 00	 cmp	 DWORD PTR [ebx+16], 0

; 1193 : 		{
; 1194 : 			TYPE newData[1];
; 1195 : 			SerializeElements<TYPE>(ar, newData, 1);
; 1196 : 			AddTail(newData[0]);

  0017c	f2 0f 10 45 e8	 movsd	 xmm0, QWORD PTR _newData$1[ebp]

; 968  : 	CNode* pNewNode = NewNode(m_pNodeTail, NULL);

  00181	8b 73 08	 mov	 esi, DWORD PTR [ebx+8]

; 1193 : 		{
; 1194 : 			TYPE newData[1];
; 1195 : 			SerializeElements<TYPE>(ar, newData, 1);
; 1196 : 			AddTail(newData[0]);

  00184	f2 0f 11 45 f4	 movsd	 QWORD PTR _newElement$1$[ebp], xmm0

; 902  : 	if (m_pNodeFree == NULL)

  00189	75 3a		 jne	 SHORT $LN63@Serialize

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  0018b	6a 10		 push	 16			; 00000010H
  0018d	ff 73 18	 push	 DWORD PTR [ebx+24]
  00190	8d 43 14	 lea	 eax, DWORD PTR [ebx+20]
  00193	50		 push	 eax
  00194	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  00199	8b 53 18	 mov	 edx, DWORD PTR [ebx+24]
  0019c	83 c0 08	 add	 eax, 8
  0019f	8b ca		 mov	 ecx, edx
  001a1	c1 e1 04	 shl	 ecx, 4
  001a4	83 c1 f0	 add	 ecx, -16		; fffffff0H
  001a7	03 c8		 add	 ecx, eax

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  001a9	83 c2 ff	 add	 edx, -1
  001ac	78 12		 js	 SHORT $LN105@Serialize
  001ae	66 90		 npad	 2
$LL60@Serialize:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  001b0	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  001b3	89 01		 mov	 DWORD PTR [ecx], eax

; 915  : 			m_pNodeFree = pNode;

  001b5	89 4b 10	 mov	 DWORD PTR [ebx+16], ecx
  001b8	83 e9 10	 sub	 ecx, 16			; 00000010H
  001bb	83 ea 01	 sub	 edx, 1
  001be	79 f0		 jns	 SHORT $LL60@Serialize
$LN105@Serialize:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  001c0	f2 0f 10 45 f4	 movsd	 xmm0, QWORD PTR _newElement$1$[ebp]
$LN63@Serialize:
  001c5	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  001c8	85 c9		 test	 ecx, ecx
  001ca	74 44		 je	 SHORT $LN76@Serialize

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  001cc	8b 01		 mov	 eax, DWORD PTR [ecx]
  001ce	89 43 10	 mov	 DWORD PTR [ebx+16], eax

; 922  : 	pNode->pPrev = pPrev;

  001d1	89 71 04	 mov	 DWORD PTR [ecx+4], esi

; 923  : 	pNode->pNext = pNext;

  001d4	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 924  : 	m_nCount++;

  001da	ff 43 0c	 inc	 DWORD PTR [ebx+12]

; 969  : 	pNewNode->data = newElement;

  001dd	f2 0f 11 41 08	 movsd	 QWORD PTR [ecx+8], xmm0

; 970  : 	if (m_pNodeTail != NULL)

  001e2	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  001e5	85 c0		 test	 eax, eax
  001e7	74 04		 je	 SHORT $LN54@Serialize

; 971  : 		m_pNodeTail->pNext = pNewNode;

  001e9	89 08		 mov	 DWORD PTR [eax], ecx
  001eb	eb 03		 jmp	 SHORT $LN55@Serialize
$LN54@Serialize:

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;

  001ed	89 4b 04	 mov	 DWORD PTR [ebx+4], ecx
$LN55@Serialize:

; 1192 : 		while (nNewCount--)

  001f0	8b 45 f0	 mov	 eax, DWORD PTR _nNewCount$1$[ebp]

; 974  : 	m_pNodeTail = pNewNode;

  001f3	89 4b 08	 mov	 DWORD PTR [ebx+8], ecx

; 1192 : 		while (nNewCount--)

  001f6	85 c0		 test	 eax, eax
  001f8	0f 85 e2 fe ff
	ff		 jne	 $LL5@Serialize
$LN86@Serialize:
  001fe	5f		 pop	 edi

; 1197 : 		}
; 1198 : 	}
; 1199 : }

  001ff	5e		 pop	 esi
  00200	5b		 pop	 ebx
  00201	8b e5		 mov	 esp, ebp
  00203	5d		 pop	 ebp
  00204	c2 04 00	 ret	 4
$LN75@Serialize:
  00207	6a 00		 push	 0
  00209	6a 03		 push	 3
  0020b	e8 00 00 00 00	 call	 ?AfxThrowArchiveException@@YGXHPBD@Z ; AfxThrowArchiveException
$LN76@Serialize:
  00210	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN106@Serialize:
  00215	cc		 int	 3
?Serialize@?$CList@NN@@UAEXAAVCArchive@@@Z ENDP		; CList<double,double>::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CList@NN@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CList@NN@@UAE@XZ PROC				; CList<double,double>::~CList<double,double>, COMDAT
; _this$ = ecx

; 878  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CList@NN@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 872  : 	m_pBlocks->FreeDataChain();

  00025	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]

; 878  : {

  00028	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CList@NN@@6B@

; 870  : 	m_nCount = 0;

  0002e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  00035	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0003c	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00043	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 872  : 	m_pBlocks->FreeDataChain();

  0004a	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 873  : 	m_pBlocks = NULL;

  0004f	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 879  : 	RemoveAll();
; 880  : 	ASSERT(m_nCount == 0);
; 881  : }

  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	5e		 pop	 esi
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
  00066	cc		 int	 3
  00067	cc		 int	 3
  00068	cc		 int	 3
  00069	cc		 int	 3
  0006a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CList@NN@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CList@NN@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CList@NN@@UAE@XZ ENDP				; CList<double,double>::~CList<double,double>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?NewNode@?$CList@NN@@IAEPAUCNode@1@PAU21@0@Z
_TEXT	SEGMENT
_pPrev$ = 8						; size = 4
_pNext$ = 12						; size = 4
?NewNode@?$CList@NN@@IAEPAUCNode@1@PAU21@0@Z PROC	; CList<double,double>::NewNode, COMDAT
; _this$ = ecx

; 901  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 902  : 	if (m_pNodeFree == NULL)

  00006	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0000a	75 34		 jne	 SHORT $LN7@NewNode

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  0000c	6a 10		 push	 16			; 00000010H
  0000e	ff 76 18	 push	 DWORD PTR [esi+24]
  00011	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  0001a	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  0001d	83 c0 08	 add	 eax, 8
  00020	8b ca		 mov	 ecx, edx
  00022	c1 e1 04	 shl	 ecx, 4
  00025	83 c1 f0	 add	 ecx, -16		; fffffff0H
  00028	03 c1		 add	 eax, ecx

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  0002a	83 c2 ff	 add	 edx, -1
  0002d	78 11		 js	 SHORT $LN7@NewNode
  0002f	90		 npad	 1
$LL4@NewNode:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00030	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00033	89 08		 mov	 DWORD PTR [eax], ecx

; 915  : 			m_pNodeFree = pNode;

  00035	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00038	83 e8 10	 sub	 eax, 16			; 00000010H
  0003b	83 ea 01	 sub	 edx, 1
  0003e	79 f0		 jns	 SHORT $LL4@NewNode
$LN7@NewNode:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00040	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00043	85 c0		 test	 eax, eax
  00045	74 18		 je	 SHORT $LN17@NewNode

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  00047	8b 08		 mov	 ecx, DWORD PTR [eax]
  00049	89 4e 10	 mov	 DWORD PTR [esi+16], ecx

; 922  : 	pNode->pPrev = pPrev;

  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _pPrev$[ebp]
  0004f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 923  : 	pNode->pNext = pNext;

  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _pNext$[ebp]
  00055	89 08		 mov	 DWORD PTR [eax], ecx

; 924  : 	m_nCount++;

  00057	ff 46 0c	 inc	 DWORD PTR [esi+12]

; 925  : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 926  : 
; 927  : #pragma push_macro("new")
; 928  : #undef new
; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;
; 930  : #pragma pop_macro("new")
; 931  : 	return pNode;

  0005a	5e		 pop	 esi

; 932  : }

  0005b	5d		 pop	 ebp
  0005c	c2 08 00	 ret	 8
$LN17@NewNode:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  0005f	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN15@NewNode:
  00064	cc		 int	 3
?NewNode@?$CList@NN@@IAEPAUCNode@1@PAU21@0@Z ENDP	; CList<double,double>::NewNode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CList@NN@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CList@NN@@QAEXXZ PROC			; CList<double,double>::RemoveAll, COMDAT
; _this$ = ecx

; 862  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 863  : 	ASSERT_VALID(this);
; 864  : 
; 865  : 	// destroy elements
; 866  : 	CNode* pNode;
; 867  : 	for (pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)
; 868  : 		pNode->data.~TYPE();
; 869  : 
; 870  : 	m_nCount = 0;
; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;
; 872  : 	m_pBlocks->FreeDataChain();

  00003	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00006	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  0000d	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00014	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0001b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00022	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 873  : 	m_pBlocks = NULL;

  00027	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  0002e	5e		 pop	 esi

; 874  : }

  0002f	c3		 ret	 0
?RemoveAll@?$CList@NN@@QAEXXZ ENDP			; CList<double,double>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?AddTail@?$CList@NN@@QAEPAU__POSITION@@N@Z
_TEXT	SEGMENT
_newElement$ = 8					; size = 8
?AddTail@?$CList@NN@@QAEPAU__POSITION@@N@Z PROC		; CList<double,double>::AddTail, COMDAT
; _this$ = ecx

; 965  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi

; 902  : 	if (m_pNodeFree == NULL)

  00007	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0

; 966  : 	ASSERT_VALID(this);
; 967  : 
; 968  : 	CNode* pNewNode = NewNode(m_pNodeTail, NULL);

  0000b	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]

; 902  : 	if (m_pNodeFree == NULL)

  0000e	75 33		 jne	 SHORT $LN11@AddTail

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  00010	6a 10		 push	 16			; 00000010H
  00012	ff 76 18	 push	 DWORD PTR [esi+24]
  00015	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  0001e	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  00021	83 c0 08	 add	 eax, 8
  00024	8b ca		 mov	 ecx, edx
  00026	c1 e1 04	 shl	 ecx, 4
  00029	83 c1 f0	 add	 ecx, -16		; fffffff0H
  0002c	03 c8		 add	 ecx, eax

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  0002e	83 c2 ff	 add	 edx, -1
  00031	78 10		 js	 SHORT $LN11@AddTail
$LL8@AddTail:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00033	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00036	89 01		 mov	 DWORD PTR [ecx], eax

; 915  : 			m_pNodeFree = pNode;

  00038	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
  0003b	83 e9 10	 sub	 ecx, 16			; 00000010H
  0003e	83 ea 01	 sub	 edx, 1
  00041	79 f0		 jns	 SHORT $LL8@AddTail
$LN11@AddTail:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00043	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00046	85 c9		 test	 ecx, ecx
  00048	74 3d		 je	 SHORT $LN22@AddTail

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  0004a	8b 01		 mov	 eax, DWORD PTR [ecx]

; 969  : 	pNewNode->data = newElement;

  0004c	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _newElement$[ebp]

; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  00051	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 922  : 	pNode->pPrev = pPrev;

  00054	89 79 04	 mov	 DWORD PTR [ecx+4], edi

; 923  : 	pNode->pNext = pNext;

  00057	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 924  : 	m_nCount++;

  0005d	ff 46 0c	 inc	 DWORD PTR [esi+12]

; 969  : 	pNewNode->data = newElement;

  00060	f2 0f 11 41 08	 movsd	 QWORD PTR [ecx+8], xmm0

; 970  : 	if (m_pNodeTail != NULL)

  00065	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00068	85 c0		 test	 eax, eax
  0006a	74 0d		 je	 SHORT $LN2@AddTail

; 971  : 		m_pNodeTail->pNext = pNewNode;

  0006c	89 08		 mov	 DWORD PTR [eax], ecx

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;
; 974  : 	m_pNodeTail = pNewNode;
; 975  : 	return (POSITION) pNewNode;

  0006e	8b c1		 mov	 eax, ecx
  00070	5f		 pop	 edi
  00071	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00074	5e		 pop	 esi

; 976  : }

  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
$LN2@AddTail:

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;
; 974  : 	m_pNodeTail = pNewNode;
; 975  : 	return (POSITION) pNewNode;

  00079	5f		 pop	 edi
  0007a	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  0007d	8b c1		 mov	 eax, ecx
  0007f	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00082	5e		 pop	 esi

; 976  : }

  00083	5d		 pop	 ebp
  00084	c2 08 00	 ret	 8
$LN22@AddTail:

; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00087	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN20@AddTail:
  0008c	cc		 int	 3
?AddTail@?$CList@NN@@QAEPAU__POSITION@@N@Z ENDP		; CList<double,double>::AddTail
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CList@NN@@QAE@H@Z
_TEXT	SEGMENT
_nBlockSize$ = 8					; size = 4
??0?$CList@NN@@QAE@H@Z PROC				; CList<double,double>::CList<double,double>, COMDAT
; _this$ = ecx

; 851  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 852  : 	ASSERT(nBlockSize > 0);
; 853  : 
; 854  : 	m_nCount = 0;
; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;
; 856  : 	m_pBlocks = NULL;
; 857  : 	m_nBlockSize = nBlockSize;

  00003	8b 45 08	 mov	 eax, DWORD PTR _nBlockSize$[ebp]
  00006	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 858  : }

  00009	8b c1		 mov	 eax, ecx
  0000b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@NN@@6B@
  00011	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00018	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  0001f	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00026	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0002d	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
??0?$CList@NN@@QAE@H@Z ENDP				; CList<double,double>::CList<double,double>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\IWDblList.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCIWDblList@@MAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GCIWDblList@@MAEPAXI@Z PROC				; CIWDblList::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GCIWDblList@@MAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\IWDblList.h

; 22   : 	_IWRAPPER_IUNKNOWN_MANAGER( IDblList, CIWDblList, CDblList, m_plDblList);

  00025	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CIWDblList@@6BCIWUnknown@@@
  00035	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], OFFSET ??_7CIWDblList@@6BIDblList@@@
  0003c	85 c9		 test	 ecx, ecx
  0003e	74 06		 je	 SHORT $LN8@scalar
  00040	8b 01		 mov	 eax, DWORD PTR [ecx]
  00042	51		 push	 ecx
  00043	ff 50 08	 call	 DWORD PTR [eax+8]
$LN8@scalar:
  00046	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  0004d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_bTraceForDelete@CIWUnknown@@1HA, 0 ; CIWUnknown::m_bTraceForDelete
  00054	74 06		 je	 SHORT $LN9@scalar
  00056	ff 0d 00 00 00
	00		 dec	 DWORD PTR ?m_nObjectCount@CIWDblList@@1JA ; CIWDblList::m_nObjectCount
$LN9@scalar:
  0005c	8b ce		 mov	 ecx, esi
  0005e	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], OFFSET ??_7IDblList@@6B@
  00065	e8 00 00 00 00	 call	 ??1CIWUnknown@@MAE@XZ	; CIWUnknown::~CIWUnknown
  0006a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0006d	a8 01		 test	 al, 1
  0006f	74 2c		 je	 SHORT $LN14@scalar
  00071	a8 04		 test	 al, 4
  00073	75 1d		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  00075	56		 push	 esi
  00076	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0007b	83 c4 04	 add	 esp, 4
  0007e	8b c6		 mov	 eax, esi
  00080	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008a	59		 pop	 ecx
  0008b	5e		 pop	 esi
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c2 04 00	 ret	 4
$LN3@scalar:
  00092	6a 18		 push	 24			; 00000018H
  00094	56		 push	 esi
  00095	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0009a	83 c4 08	 add	 esp, 8
$LN14@scalar:
  0009d	8b c6		 mov	 eax, esi
  0009f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a9	59		 pop	 ecx
  000aa	5e		 pop	 esi
  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c2 04 00	 ret	 4
  000b1	cc		 int	 3
  000b2	cc		 int	 3
  000b3	cc		 int	 3
  000b4	cc		 int	 3
  000b5	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_GCIWDblList@@MAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GCIWDblList@@MAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GCIWDblList@@MAEPAXI@Z ENDP				; CIWDblList::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\IWDblList.h
;	COMDAT ?PreDestructX@CIWDblList@@MAEXXZ
_TEXT	SEGMENT
?PreDestructX@CIWDblList@@MAEXXZ PROC			; CIWDblList::PreDestructX, COMDAT
; _this$ = ecx

; 22   : 	_IWRAPPER_IUNKNOWN_MANAGER( IDblList, CIWDblList, CDblList, m_plDblList);

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 50 28	 call	 DWORD PTR [eax+40]
  00008	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0000b	85 c9		 test	 ecx, ecx
  0000d	74 06		 je	 SHORT $LN7@PreDestruc
  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	51		 push	 ecx
  00012	ff 50 08	 call	 DWORD PTR [eax+8]
$LN7@PreDestruc:
  00015	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  0001c	5e		 pop	 esi
  0001d	c3		 ret	 0
?PreDestructX@CIWDblList@@MAEXXZ ENDP			; CIWDblList::PreDestructX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\IWDblList.h
;	COMDAT ?GetIChartOCX000000@CIWDblList@@MAEPAUIChartOCX000000@@XZ
_TEXT	SEGMENT
?GetIChartOCX000000@CIWDblList@@MAEPAUIChartOCX000000@@XZ PROC ; CIWDblList::GetIChartOCX000000, COMDAT
; _this$ = ecx

; 22   : 	_IWRAPPER_IUNKNOWN_MANAGER( IDblList, CIWDblList, CDblList, m_plDblList);

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  00006	85 d2		 test	 edx, edx
  00008	74 0b		 je	 SHORT $LN4@GetIChartO
  0000a	8b 02		 mov	 eax, DWORD PTR [edx]
  0000c	52		 push	 edx
  0000d	ff 50 04	 call	 DWORD PTR [eax+4]
  00010	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00013	5e		 pop	 esi
  00014	c3		 ret	 0
$LN4@GetIChartO:
  00015	8b c2		 mov	 eax, edx
  00017	5e		 pop	 esi
  00018	c3		 ret	 0
?GetIChartOCX000000@CIWDblList@@MAEPAUIChartOCX000000@@XZ ENDP ; CIWDblList::GetIChartOCX000000
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\IWDblList.h
;	COMDAT ?QueryInterface@CIWDblList@@MAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryInterface@CIWDblList@@MAGJABU_GUID@@PAPAX@Z PROC	; CIWDblList::QueryInterface, COMDAT

; 22   : 	_IWRAPPER_IUNKNOWN_MANAGER( IDblList, CIWDblList, CDblList, m_plDblList);

  00000	b8 02 40 00 80	 mov	 eax, -2147467262	; 80004002H
  00005	c2 0c 00	 ret	 12			; 0000000cH
?QueryInterface@CIWDblList@@MAGJABU_GUID@@PAPAX@Z ENDP	; CIWDblList::QueryInterface
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\IWDblList.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\IWDblList.h
;	COMDAT ?Release@CIWDblList@@MAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Release@CIWDblList@@MAGKXZ PROC			; CIWDblList::Release, COMDAT

; 22   : 	_IWRAPPER_IUNKNOWN_MANAGER( IDblList, CIWDblList, CDblList, m_plDblList);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 08	 mov	 esi, DWORD PTR _this$[ebp]
  00007	83 46 04 ff	 add	 DWORD PTR [esi+4], -1
  0000b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000e	75 4b		 jne	 SHORT $LN1@Release
  00010	8b 06		 mov	 eax, DWORD PTR [esi]
  00012	8b ce		 mov	 ecx, esi
  00014	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001b	ff 50 24	 call	 DWORD PTR [eax+36]
  0001e	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00022	74 0e		 je	 SHORT $LN7@Release
  00024	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00027	85 c9		 test	 ecx, ecx
  00029	74 07		 je	 SHORT $LN7@Release
  0002b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002d	6a 01		 push	 1
  0002f	ff 50 04	 call	 DWORD PTR [eax+4]
$LN7@Release:
  00032	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_bTraceForDelete@CIWUnknown@@1HA, 0 ; CIWUnknown::m_bTraceForDelete
  00039	74 10		 je	 SHORT $LN4@Release
  0003b	8b 06		 mov	 eax, DWORD PTR [esi]
  0003d	8b ce		 mov	 ecx, esi
  0003f	6a 01		 push	 1
  00041	ff 50 04	 call	 DWORD PTR [eax+4]
  00044	33 c0		 xor	 eax, eax
  00046	5e		 pop	 esi
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN4@Release:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1959 : 		{ return BASE_CLASS::AddTail(newElement); }

  0004b	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  0004e	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_lReleaseMgr@CIWDblList@@1VCIWrapperManager@1@A ; CIWDblList::m_lReleaseMgr
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?AddTail@CPtrList@@QAEPAU__POSITION@@PAX@Z ; CPtrList::AddTail
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\IWDblList.h

; 22   : 	_IWRAPPER_IUNKNOWN_MANAGER( IDblList, CIWDblList, CDblList, m_plDblList);

  00059	33 c0		 xor	 eax, eax
$LN1@Release:
  0005b	5e		 pop	 esi
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?Release@CIWDblList@@MAGKXZ ENDP			; CIWDblList::Release
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\IWDblList.h
;	COMDAT ?AddRef@CIWDblList@@MAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@CIWDblList@@MAGKXZ PROC				; CIWDblList::AddRef, COMDAT

; 22   : 	_IWRAPPER_IUNKNOWN_MANAGER( IDblList, CIWDblList, CDblList, m_plDblList);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	e9 00 00 00 00	 jmp	 ?AddRef@CIWUnknown@@MAGKXZ ; CIWUnknown::AddRef
?AddRef@CIWDblList@@MAGKXZ ENDP				; CIWDblList::AddRef
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GIDblList@@MAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GIDblList@@MAEPAXI@Z PROC				; IDblList::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7IDblList@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GIDblList@@MAEPAXI@Z ENDP				; IDblList::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\IDblList.h
;	COMDAT ??1IDblList@@MAE@XZ
_TEXT	SEGMENT
??1IDblList@@MAE@XZ PROC				; IDblList::~IDblList, COMDAT
; _this$ = ecx

; 20   : 	virtual ~IDblList()	{}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7IDblList@@6B@
  00006	c3		 ret	 0
??1IDblList@@MAE@XZ ENDP				; IDblList::~IDblList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_IString.h
;	COMDAT ??1ILPCSTR000000@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1ILPCSTR000000@@QAE@XZ PROC				; ILPCSTR000000::~ILPCSTR000000, COMDAT
; _this$ = ecx

; 44   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1ILPCSTR000000@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 45   : 		if( m_pIStrData)

  00025	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00028	85 c9		 test	 ecx, ecx
  0002a	74 13		 je	 SHORT $LN2@ILPCSTR000

; 46   : 		{
; 47   : 			m_pIStrData->Release();

  0002c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002e	51		 push	 ecx
  0002f	ff 50 08	 call	 DWORD PTR [eax+8]

; 48   : 			m_pIStrData = NULL;

  00032	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 49   : 			m_szData = NULL;

  00039	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN2@ILPCSTR000:

; 50   : 		}
; 51   : 	}

  0003f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00042	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00049	59		 pop	 ecx
  0004a	5e		 pop	 esi
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
  0004f	cc		 int	 3
  00050	cc		 int	 3
  00051	cc		 int	 3
  00052	cc		 int	 3
  00053	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1ILPCSTR000000@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ILPCSTR000000@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ILPCSTR000000@@QAE@XZ ENDP				; ILPCSTR000000::~ILPCSTR000000
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_GCDataInterfaceAddInImp@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCDataInterfaceAddInImp@@UAEPAXI@Z PROC		; CDataInterfaceAddInImp::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp

; 29   : {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDataInterfaceAddInImp@@6BCIWUnknown@@@
  0000c	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], OFFSET ??_7CDataInterfaceAddInImp@@6BIChartAddIn000000@@@

; 30   : 
; 31   : }

  00013	c7 46 40 00 00
	00 00		 mov	 DWORD PTR [esi+64], OFFSET ??_7IPacketQueryer@@6B@
  0001a	e8 00 00 00 00	 call	 ??1CChartAddInBase000000@@MAE@XZ ; CChartAddInBase000000::~CChartAddInBase000000
  0001f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00022	a8 01		 test	 al, 1
  00024	74 1f		 je	 SHORT $LN12@scalar
  00026	a8 04		 test	 al, 4
  00028	75 10		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  0002a	56		 push	 esi
  0002b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00030	83 c4 04	 add	 esp, 4
  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
$LN3@scalar:
  0003a	6a 44		 push	 68			; 00000044H
  0003c	56		 push	 esi
  0003d	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00042	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00045	8b c6		 mov	 eax, esi
  00047	5e		 pop	 esi
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDataInterfaceAddInImp@@UAEPAXI@Z ENDP		; CDataInterfaceAddInImp::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_IString.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_IString.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_IString.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_IString.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_IString.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\IWDblList.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\IWDblList.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\IWDblList.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\IWDblList.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_IString.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp
;	COMDAT ?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z
_TEXT	SEGMENT
_dData$ = -64						; size = 8
_szPacketName$2 = -56					; size = 8
_szGraphName$3 = -48					; size = 8
_pPacket$1$ = -40					; size = 4
_this$1$ = -40						; size = 4
_dData$4 = -36						; size = 8
_nR$5 = -32						; size = 4
_nC$6 = -28						; size = 4
_nV$7 = -24						; size = 4
_posDoubleData$ = -20					; size = 4
_p_szChartName$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_p_szSubGraphName$ = 8					; size = 4
_p_szChartName2$ = 8					; size = 4
$T8 = 12						; size = 4
$T9 = 12						; size = 4
_nG$10 = 12						; size = 4
_p_szSubGraphName2$ = 12				; size = 4
_p_nPacketIndex$ = 16					; size = 4
?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z PROC ; CDataInterfaceAddInImp::GetDoubleList, COMDAT
; _this$ = ecx

; 59   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
  0002a	89 75 d8	 mov	 DWORD PTR _this$1$[ebp], esi

; 60   : 	CString p_szChartName = _STOM2( p_szChartName2);

  0002d	6a 00		 push	 0
  0002f	ff 75 08	 push	 DWORD PTR _p_szChartName2$[ebp]
  00032	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_iMetaTable@@3VIMetaTable@@A ; g_iMetaTable
  00037	6a 02		 push	 2
  00039	ff 76 d4	 push	 DWORD PTR [esi-44]
  0003c	e8 00 00 00 00	 call	 ?GetMetaTextForScript@IMetaTable@@QAEPBDPAUHWND__@@W4E_CODEPAGE@1@PBDH@Z ; IMetaTable::GetMetaTextForScript
  00041	50		 push	 eax
  00042	8d 4d f0	 lea	 ecx, DWORD PTR _p_szChartName$[ebp]
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z

; 61   : 	CString p_szSubGraphName = _STOM3( p_szSubGraphName2);

  0004b	6a 00		 push	 0
  0004d	ff 75 0c	 push	 DWORD PTR _p_szSubGraphName2$[ebp]
  00050	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_iMetaTable@@3VIMetaTable@@A ; g_iMetaTable
  00055	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005c	6a 03		 push	 3
  0005e	ff 76 d4	 push	 DWORD PTR [esi-44]
  00061	e8 00 00 00 00	 call	 ?GetMetaTextForScript@IMetaTable@@QAEPBDPAUHWND__@@W4E_CODEPAGE@1@PBDH@Z ; IMetaTable::GetMetaTextForScript
  00066	50		 push	 eax
  00067	8d 4d 08	 lea	 ecx, DWORD PTR _p_szSubGraphName$[ebp]
  0006a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z

; 62   : 
; 63   : 	IPacket *pPacket = NULL;
; 64   : 	if( !strcmp( p_szChartName, _MTEXT( C0_DATE_TIME))) pPacket = m_pIDefaultPacketManager->GetPacket( _MTEXT( C0_DATE_TIME));

  00070	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  00075	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00079	8b 38		 mov	 edi, DWORD PTR [eax]
  0007b	8b d7		 mov	 edx, edi
  0007d	8b 45 f0	 mov	 eax, DWORD PTR _p_szChartName$[ebp]
  00080	8b c8		 mov	 ecx, eax
$LL102@GetDoubleL:
  00082	8a 19		 mov	 bl, BYTE PTR [ecx]
  00084	3a 1a		 cmp	 bl, BYTE PTR [edx]
  00086	75 1a		 jne	 SHORT $LN103@GetDoubleL
  00088	84 db		 test	 bl, bl
  0008a	74 12		 je	 SHORT $LN104@GetDoubleL
  0008c	8a 59 01	 mov	 bl, BYTE PTR [ecx+1]
  0008f	3a 5a 01	 cmp	 bl, BYTE PTR [edx+1]
  00092	75 0e		 jne	 SHORT $LN103@GetDoubleL
  00094	83 c1 02	 add	 ecx, 2
  00097	83 c2 02	 add	 edx, 2
  0009a	84 db		 test	 bl, bl
  0009c	75 e4		 jne	 SHORT $LL102@GetDoubleL
$LN104@GetDoubleL:
  0009e	33 c9		 xor	 ecx, ecx
  000a0	eb 05		 jmp	 SHORT $LN105@GetDoubleL
$LN103@GetDoubleL:
  000a2	1b c9		 sbb	 ecx, ecx
  000a4	83 c9 01	 or	 ecx, 1
$LN105@GetDoubleL:
  000a7	85 c9		 test	 ecx, ecx
  000a9	75 10		 jne	 SHORT $LN4@GetDoubleL
  000ab	8b 4e e0	 mov	 ecx, DWORD PTR [esi-32]
  000ae	57		 push	 edi
  000af	8b 01		 mov	 eax, DWORD PTR [ecx]
  000b1	ff 50 10	 call	 DWORD PTR [eax+16]
  000b4	8b f0		 mov	 esi, eax
  000b6	e9 d7 00 00 00	 jmp	 $LN61@GetDoubleL
$LN4@GetDoubleL:

; 68   : 		ILPCSTR szGraphName = m_pIChartManager->FindFirstIndicator( p_szChartName, nR, nC, nV, nG, "DEFAULT");

  000bb	8b 4e e4	 mov	 ecx, DWORD PTR [esi-28]
  000be	8d 7d 0c	 lea	 edi, DWORD PTR _nG$10[ebp]
  000c1	68 00 00 00 00	 push	 OFFSET ??_C@_07MGCPDNLD@DEFAULT@
  000c6	57		 push	 edi
  000c7	8d 7d e8	 lea	 edi, DWORD PTR _nV$7[ebp]
  000ca	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _nR$5[ebp], 0
  000d1	57		 push	 edi
  000d2	8d 7d e4	 lea	 edi, DWORD PTR _nC$6[ebp]
  000d5	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _nC$6[ebp], 0
  000dc	57		 push	 edi
  000dd	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _nV$7[ebp], 0
  000e4	8d 7d e0	 lea	 edi, DWORD PTR _nR$5[ebp]
  000e7	c7 45 0c 00 00
	00 00		 mov	 DWORD PTR _nG$10[ebp], 0
  000ee	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f0	57		 push	 edi
  000f1	50		 push	 eax
  000f2	ff 52 70	 call	 DWORD PTR [edx+112]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_IString.h

; 39   : 		m_pIStrData = p_pIString;	// Do not AddRef(). Because It must be Return Value.

  000f5	8b f8		 mov	 edi, eax
  000f7	89 7d d4	 mov	 DWORD PTR _szGraphName$3[ebp+4], edi

; 40   : 		if( m_pIStrData) m_szData = m_pIStrData->GetData();

  000fa	85 ff		 test	 edi, edi
  000fc	74 0b		 je	 SHORT $LN32@GetDoubleL
  000fe	8b 17		 mov	 edx, DWORD PTR [edi]
  00100	8b cf		 mov	 ecx, edi
  00102	ff 52 10	 call	 DWORD PTR [edx+16]
  00105	8b d0		 mov	 edx, eax
  00107	eb 02		 jmp	 SHORT $LN115@GetDoubleL
$LN32@GetDoubleL:

; 41   : 		else m_szData = NULL;

  00109	33 d2		 xor	 edx, edx
$LN115@GetDoubleL:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp

; 68   : 		ILPCSTR szGraphName = m_pIChartManager->FindFirstIndicator( p_szChartName, nR, nC, nV, nG, "DEFAULT");

  0010b	89 55 d0	 mov	 DWORD PTR _szGraphName$3[ebp], edx
  0010e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_IString.h

; 57   : 		if( !m_szData) return TRUE;

  00112	85 d2		 test	 edx, edx
  00114	0f 84 72 02 00
	00		 je	 $LN48@GetDoubleL
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp

; 69   : 		if( szGraphName.IsEmpty()) return NULL;

  0011a	80 3a 00	 cmp	 BYTE PTR [edx], 0
  0011d	0f 84 69 02 00
	00		 je	 $LN48@GetDoubleL

; 71   : 		ILPCSTR szPacketName = m_pIChartManager->GetSubGraphPacketNameString( szGraphName, p_szSubGraphName, p_nPacketIndex);

  00123	8b 4e e4	 mov	 ecx, DWORD PTR [esi-28]
  00126	ff 75 10	 push	 DWORD PTR _p_nPacketIndex$[ebp]
  00129	ff 75 08	 push	 DWORD PTR _p_szSubGraphName$[ebp]
  0012c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0012e	52		 push	 edx
  0012f	ff 50 7c	 call	 DWORD PTR [eax+124]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_IString.h

; 39   : 		m_pIStrData = p_pIString;	// Do not AddRef(). Because It must be Return Value.

  00132	8b f0		 mov	 esi, eax
  00134	89 75 cc	 mov	 DWORD PTR _szPacketName$2[ebp+4], esi

; 40   : 		if( m_pIStrData) m_szData = m_pIStrData->GetData();

  00137	85 f6		 test	 esi, esi
  00139	74 0b		 je	 SHORT $LN41@GetDoubleL
  0013b	8b 16		 mov	 edx, DWORD PTR [esi]
  0013d	8b ce		 mov	 ecx, esi
  0013f	ff 52 10	 call	 DWORD PTR [edx+16]
  00142	8b d0		 mov	 edx, eax
  00144	eb 02		 jmp	 SHORT $LN116@GetDoubleL
$LN41@GetDoubleL:

; 41   : 		else m_szData = NULL;

  00146	33 d2		 xor	 edx, edx
$LN116@GetDoubleL:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp

; 71   : 		ILPCSTR szPacketName = m_pIChartManager->GetSubGraphPacketNameString( szGraphName, p_szSubGraphName, p_nPacketIndex);

  00148	89 55 c8	 mov	 DWORD PTR _szPacketName$2[ebp], edx
  0014b	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_IString.h

; 57   : 		if( !m_szData) return TRUE;

  0014f	85 d2		 test	 edx, edx
  00151	0f 84 27 02 00
	00		 je	 $LN101@GetDoubleL
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp

; 72   : 		if( szPacketName.IsEmpty()) return NULL;

  00157	80 3a 00	 cmp	 BYTE PTR [edx], 0
  0015a	0f 84 1e 02 00
	00		 je	 $LN101@GetDoubleL

; 73   : 		
; 74   : 		pPacket = m_pIDefaultPacketManager->GetPacket( szPacketName);

  00160	8b 4d d8	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00163	52		 push	 edx
  00164	8b 49 e0	 mov	 ecx, DWORD PTR [ecx-32]
  00167	8b 01		 mov	 eax, DWORD PTR [ecx]
  00169	ff 50 10	 call	 DWORD PTR [eax+16]
  0016c	89 45 d8	 mov	 DWORD PTR _pPacket$1$[ebp], eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_IString.h

; 44   : 	{

  0016f	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6

; 45   : 		if( m_pIStrData)

  00173	85 f6		 test	 esi, esi
  00175	74 06		 je	 SHORT $LN56@GetDoubleL

; 46   : 		{
; 47   : 			m_pIStrData->Release();

  00177	8b 06		 mov	 eax, DWORD PTR [esi]
  00179	56		 push	 esi
  0017a	ff 50 08	 call	 DWORD PTR [eax+8]
$LN56@GetDoubleL:

; 44   : 	{

  0017d	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7

; 45   : 		if( m_pIStrData)

  00181	85 ff		 test	 edi, edi
  00183	74 06		 je	 SHORT $LN60@GetDoubleL

; 46   : 		{
; 47   : 			m_pIStrData->Release();

  00185	8b 07		 mov	 eax, DWORD PTR [edi]
  00187	57		 push	 edi
  00188	ff 50 08	 call	 DWORD PTR [eax+8]
$LN60@GetDoubleL:
  0018b	8b 75 d8	 mov	 esi, DWORD PTR _pPacket$1$[ebp]

; 48   : 			m_pIStrData = NULL;
; 49   : 			m_szData = NULL;
; 50   : 		}
; 51   : 	}

  0018e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
$LN61@GetDoubleL:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp

; 76   : 	if( !pPacket) return NULL;

  00192	85 f6		 test	 esi, esi
  00194	0f 84 00 02 00
	00		 je	 $LN25@GetDoubleL

; 77   : 
; 78   : 	IDoubleList *pDataList = pPacket->GetDataList();

  0019a	8b 06		 mov	 eax, DWORD PTR [esi]
  0019c	8b ce		 mov	 ecx, esi
  0019e	ff 50 5c	 call	 DWORD PTR [eax+92]

; 79   : 	pPacket->Release();

  001a1	8b 0e		 mov	 ecx, DWORD PTR [esi]
  001a3	8b d8		 mov	 ebx, eax
  001a5	56		 push	 esi
  001a6	ff 51 08	 call	 DWORD PTR [ecx+8]

; 80   : 	if( !pDataList) return NULL;

  001a9	85 db		 test	 ebx, ebx
  001ab	0f 84 e9 01 00
	00		 je	 $LN25@GetDoubleL
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 116  : 	{ return ::operator new(nSize); }

  001b1	6a 1c		 push	 28			; 0000001cH
  001b3	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp

; 82   : 	CList<double, double> *pDblList = new CList<double, double>;

  001b8	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 116  : 	{ return ::operator new(nSize); }

  001ba	83 c4 04	 add	 esp, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp

; 82   : 	CList<double, double> *pDblList = new CList<double, double>;

  001bd	89 7d 0c	 mov	 DWORD PTR $T9[ebp], edi
  001c0	85 ff		 test	 edi, edi
  001c2	74 32		 je	 SHORT $LN16@GetDoubleL
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 851  : {

  001c4	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CList@NN@@6B@

; 852  : 	ASSERT(nBlockSize > 0);
; 853  : 
; 854  : 	m_nCount = 0;

  001ca	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0

; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  001d1	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  001d8	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  001df	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 856  : 	m_pBlocks = NULL;

  001e6	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 857  : 	m_nBlockSize = nBlockSize;

  001ed	c7 47 18 0a 00
	00 00		 mov	 DWORD PTR [edi+24], 10	; 0000000aH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp

; 82   : 	CList<double, double> *pDblList = new CList<double, double>;

  001f4	eb 02		 jmp	 SHORT $LN17@GetDoubleL
$LN16@GetDoubleL:
  001f6	33 ff		 xor	 edi, edi
$LN17@GetDoubleL:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxcoll.inl

; 337  : 	{ return m_nCount == 0; }

  001f8	83 3d 0c 00 00
	00 00		 cmp	 DWORD PTR ?m_lReleaseMgr@CIWDblList@@1VCIWrapperManager@1@A+12, 0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\IWDblList.h

; 22   : 	_IWRAPPER_IUNKNOWN_MANAGER( IDblList, CIWDblList, CDblList, m_plDblList);

  001ff	75 5d		 jne	 SHORT $LN68@GetDoubleL
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 116  : 	{ return ::operator new(nSize); }

  00201	6a 18		 push	 24			; 00000018H
  00203	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\IWDblList.h

; 22   : 	_IWRAPPER_IUNKNOWN_MANAGER( IDblList, CIWDblList, CDblList, m_plDblList);

  00208	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 116  : 	{ return ::operator new(nSize); }

  0020a	83 c4 04	 add	 esp, 4
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\IWDblList.h

; 22   : 	_IWRAPPER_IUNKNOWN_MANAGER( IDblList, CIWDblList, CDblList, m_plDblList);

  0020d	89 75 0c	 mov	 DWORD PTR $T8[ebp], esi
  00210	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  00214	85 f6		 test	 esi, esi
  00216	74 3e		 je	 SHORT $LN71@GetDoubleL
  00218	8b ce		 mov	 ecx, esi
  0021a	e8 00 00 00 00	 call	 ??0CIWUnknown@@QAE@XZ	; CIWUnknown::CIWUnknown
  0021f	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], OFFSET ??_7IDblList@@6B@
  00226	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CIWDblList@@6BCIWUnknown@@@
  0022c	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], OFFSET ??_7CIWDblList@@6BIDblList@@@
  00233	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0023a	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00241	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_bTraceForDelete@CIWUnknown@@1HA, 0 ; CIWUnknown::m_bTraceForDelete
  00248	74 0e		 je	 SHORT $LN72@GetDoubleL
  0024a	ff 05 00 00 00
	00		 inc	 DWORD PTR ?m_nObjectCount@CIWDblList@@1JA ; CIWDblList::m_nObjectCount
  00250	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00254	eb 1d		 jmp	 SHORT $LN74@GetDoubleL
$LN71@GetDoubleL:
  00256	33 f6		 xor	 esi, esi
$LN72@GetDoubleL:
  00258	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0025c	eb 15		 jmp	 SHORT $LN74@GetDoubleL
$LN68@GetDoubleL:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1890 : 		{ return (TYPE)BASE_CLASS::RemoveHead(); }

  0025e	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_lReleaseMgr@CIWDblList@@1VCIWrapperManager@1@A ; CIWDblList::m_lReleaseMgr
  00263	e8 00 00 00 00	 call	 ?RemoveHead@CPtrList@@QAEPAXXZ ; CPtrList::RemoveHead
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\IWDblList.h

; 22   : 	_IWRAPPER_IUNKNOWN_MANAGER( IDblList, CIWDblList, CDblList, m_plDblList);

  00268	85 c0		 test	 eax, eax
  0026a	74 05		 je	 SHORT $LN73@GetDoubleL
  0026c	8d 70 f8	 lea	 esi, DWORD PTR [eax-8]
  0026f	eb 02		 jmp	 SHORT $LN74@GetDoubleL
$LN73@GetDoubleL:
  00271	33 f6		 xor	 esi, esi
$LN74@GetDoubleL:
  00273	8b 06		 mov	 eax, DWORD PTR [esi]
  00275	56		 push	 esi
  00276	ff 50 14	 call	 DWORD PTR [eax+20]
  00279	8b 06		 mov	 eax, DWORD PTR [esi]
  0027b	8b ce		 mov	 ecx, esi
  0027d	89 7e 14	 mov	 DWORD PTR [esi+20], edi
  00280	c7 46 10 01 00
	00 00		 mov	 DWORD PTR [esi+16], 1
  00287	ff 50 20	 call	 DWORD PTR [eax+32]
  0028a	0f 57 c0	 xorps	 xmm0, xmm0
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp

; 85   : 	POSITION posDoubleData = pDataList->GetHeadPosition();

  0028d	8b cb		 mov	 ecx, ebx
  0028f	f2 0f 11 45 c0	 movsd	 QWORD PTR _dData$[ebp], xmm0
  00294	83 c6 08	 add	 esi, 8
  00297	8b 03		 mov	 eax, DWORD PTR [ebx]
  00299	ff 50 34	 call	 DWORD PTR [eax+52]
  0029c	89 45 ec	 mov	 DWORD PTR _posDoubleData$[ebp], eax

; 86   : 	while( posDoubleData)

  0029f	85 c0		 test	 eax, eax
  002a1	74 29		 je	 SHORT $LN3@GetDoubleL
$LL2@GetDoubleL:

; 87   : 	{
; 88   : 		pDataList->GetNext( posDoubleData, dData);

  002a3	8b 03		 mov	 eax, DWORD PTR [ebx]
  002a5	8d 4d c0	 lea	 ecx, DWORD PTR _dData$[ebp]
  002a8	51		 push	 ecx
  002a9	8d 4d ec	 lea	 ecx, DWORD PTR _posDoubleData$[ebp]
  002ac	51		 push	 ecx
  002ad	8b cb		 mov	 ecx, ebx
  002af	ff 50 3c	 call	 DWORD PTR [eax+60]

; 89   : 		pIDblList->AddTail( dData);

  002b2	8b 06		 mov	 eax, DWORD PTR [esi]
  002b4	83 ec 08	 sub	 esp, 8
  002b7	f2 0f 10 45 c0	 movsd	 xmm0, QWORD PTR _dData$[ebp]
  002bc	8b ce		 mov	 ecx, esi
  002be	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002c3	ff 50 2c	 call	 DWORD PTR [eax+44]
  002c6	83 7d ec 00	 cmp	 DWORD PTR _posDoubleData$[ebp], 0
  002ca	75 d7		 jne	 SHORT $LL2@GetDoubleL
$LN3@GetDoubleL:

; 90   : 	}
; 91   : 	pDataList->Release();

  002cc	8b 03		 mov	 eax, DWORD PTR [ebx]
  002ce	53		 push	 ebx
  002cf	ff 50 08	 call	 DWORD PTR [eax+8]

; 92   : 
; 93   : 	// (2007/3/29 - Seung-Won, Bae) Manage Data for Temporary Packet Data.
; 94   : 	if( !strcmp( p_szChartName, _MTEXT( C2_BUY_SELL_OVERHANGING_SUPPLY))
; 95   : 		&& !strcmp( p_szSubGraphName, _MTEXT( C2_BUY_SELL_OVERHANGING_SUPPLY)))

  002d2	a1 54 00 00 00	 mov	 eax, DWORD PTR ?g_iMetaTable@@3VIMetaTable@@A+84
  002d7	8b 88 84 0c 00
	00		 mov	 ecx, DWORD PTR [eax+3204]
  002dd	8b d1		 mov	 edx, ecx
  002df	8b 45 f0	 mov	 eax, DWORD PTR _p_szChartName$[ebp]
$LL106@GetDoubleL:
  002e2	8a 18		 mov	 bl, BYTE PTR [eax]
  002e4	3a 1a		 cmp	 bl, BYTE PTR [edx]
  002e6	75 1a		 jne	 SHORT $LN107@GetDoubleL
  002e8	84 db		 test	 bl, bl
  002ea	74 12		 je	 SHORT $LN108@GetDoubleL
  002ec	8a 58 01	 mov	 bl, BYTE PTR [eax+1]
  002ef	3a 5a 01	 cmp	 bl, BYTE PTR [edx+1]
  002f2	75 0e		 jne	 SHORT $LN107@GetDoubleL
  002f4	83 c0 02	 add	 eax, 2
  002f7	83 c2 02	 add	 edx, 2
  002fa	84 db		 test	 bl, bl
  002fc	75 e4		 jne	 SHORT $LL106@GetDoubleL
$LN108@GetDoubleL:
  002fe	33 c0		 xor	 eax, eax
  00300	eb 05		 jmp	 SHORT $LN109@GetDoubleL
$LN107@GetDoubleL:
  00302	1b c0		 sbb	 eax, eax
  00304	83 c8 01	 or	 eax, 1
$LN109@GetDoubleL:
  00307	85 c0		 test	 eax, eax
  00309	0f 85 8d 00 00
	00		 jne	 $LN26@GetDoubleL
  0030f	8b 45 08	 mov	 eax, DWORD PTR _p_szSubGraphName$[ebp]
$LL110@GetDoubleL:
  00312	8a 10		 mov	 dl, BYTE PTR [eax]
  00314	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00316	75 1a		 jne	 SHORT $LN111@GetDoubleL
  00318	84 d2		 test	 dl, dl
  0031a	74 12		 je	 SHORT $LN112@GetDoubleL
  0031c	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0031f	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00322	75 0e		 jne	 SHORT $LN111@GetDoubleL
  00324	83 c0 02	 add	 eax, 2
  00327	83 c1 02	 add	 ecx, 2
  0032a	84 d2		 test	 dl, dl
  0032c	75 e4		 jne	 SHORT $LL110@GetDoubleL
$LN112@GetDoubleL:
  0032e	33 c0		 xor	 eax, eax
  00330	eb 05		 jmp	 SHORT $LN113@GetDoubleL
$LN111@GetDoubleL:
  00332	1b c0		 sbb	 eax, eax
  00334	83 c8 01	 or	 eax, 1
$LN113@GetDoubleL:
  00337	85 c0		 test	 eax, eax
  00339	75 61		 jne	 SHORT $LN26@GetDoubleL

; 96   : 	{
; 97   : 		double dData = 0.0;

  0033b	8b 06		 mov	 eax, DWORD PTR [esi]
  0033d	0f 57 c0	 xorps	 xmm0, xmm0

; 98   : 		if( 1 == p_nPacketIndex)

  00340	8b ce		 mov	 ecx, esi
  00342	f2 0f 11 45 dc	 movsd	 QWORD PTR _dData$4[ebp], xmm0
  00347	ff 50 10	 call	 DWORD PTR [eax+16]
  0034a	83 7d 10 01	 cmp	 DWORD PTR _p_nPacketIndex$[ebp], 1
  0034e	75 11		 jne	 SHORT $LN11@GetDoubleL

; 99   : 		{
; 100  : 			// (2007/4/10 - Seung-Won, Bae) Check Data Count.
; 101  : 			if( 0 < pIDblList->GetCount()) pIDblList->RemoveHead( dData);

  00350	85 c0		 test	 eax, eax
  00352	7e 48		 jle	 SHORT $LN26@GetDoubleL
  00354	8b 06		 mov	 eax, DWORD PTR [esi]
  00356	8d 4d dc	 lea	 ecx, DWORD PTR _dData$4[ebp]
  00359	51		 push	 ecx
  0035a	8b ce		 mov	 ecx, esi
  0035c	ff 50 20	 call	 DWORD PTR [eax+32]

; 102  : 		}

  0035f	eb 3b		 jmp	 SHORT $LN26@GetDoubleL
$LN11@GetDoubleL:

; 103  : 		else
; 104  : 		{
; 105  : 			// (2007/4/10 - Seung-Won, Bae) Check Data Count.
; 106  : 			if( 1 < pIDblList->GetCount()) 

  00361	83 f8 01	 cmp	 eax, 1
  00364	7e 36		 jle	 SHORT $LN26@GetDoubleL

; 107  : 			{
; 108  : 				pIDblList->RemoveTail( dData);

  00366	8b 06		 mov	 eax, DWORD PTR [esi]
  00368	8d 4d dc	 lea	 ecx, DWORD PTR _dData$4[ebp]
  0036b	51		 push	 ecx
  0036c	8b ce		 mov	 ecx, esi
  0036e	ff 50 24	 call	 DWORD PTR [eax+36]

; 109  : 				pIDblList->RemoveTail( dData);

  00371	8b 06		 mov	 eax, DWORD PTR [esi]
  00373	8d 4d dc	 lea	 ecx, DWORD PTR _dData$4[ebp]
  00376	51		 push	 ecx
  00377	8b ce		 mov	 ecx, esi
  00379	ff 50 24	 call	 DWORD PTR [eax+36]

; 114  : 	return pIDblList;

  0037c	eb 1e		 jmp	 SHORT $LN26@GetDoubleL
$LN101@GetDoubleL:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_IString.h

; 44   : 	{

  0037e	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4

; 45   : 		if( m_pIStrData)

  00382	85 f6		 test	 esi, esi
  00384	74 06		 je	 SHORT $LN48@GetDoubleL

; 46   : 		{
; 47   : 			m_pIStrData->Release();

  00386	8b 06		 mov	 eax, DWORD PTR [esi]
  00388	56		 push	 esi
  00389	ff 50 08	 call	 DWORD PTR [eax+8]
$LN48@GetDoubleL:

; 44   : 	{

  0038c	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5

; 45   : 		if( m_pIStrData)

  00390	85 ff		 test	 edi, edi
  00392	74 06		 je	 SHORT $LN25@GetDoubleL

; 46   : 		{
; 47   : 			m_pIStrData->Release();

  00394	8b 07		 mov	 eax, DWORD PTR [edi]
  00396	57		 push	 edi
  00397	ff 50 08	 call	 DWORD PTR [eax+8]
$LN25@GetDoubleL:
  0039a	33 f6		 xor	 esi, esi
$LN26@GetDoubleL:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp

; 114  : 	return pIDblList;

  0039c	8d 4d 08	 lea	 ecx, DWORD PTR _p_szSubGraphName$[ebp]
  0039f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  003a5	8d 4d f0	 lea	 ecx, DWORD PTR _p_szChartName$[ebp]
  003a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  003ae	8b c6		 mov	 eax, esi

; 115  : }

  003b0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  003b3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  003ba	59		 pop	 ecx
  003bb	5f		 pop	 edi
  003bc	5e		 pop	 esi
  003bd	5b		 pop	 ebx
  003be	8b e5		 mov	 esp, ebp
  003c0	5d		 pop	 ebp
  003c1	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z$0:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _p_szChartName$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z$1:
  00009	8d 4d 08	 lea	 ecx, DWORD PTR _p_szSubGraphName$[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z$2:
  00012	8d 4d d0	 lea	 ecx, DWORD PTR _szGraphName$3[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1ILPCSTR000000@@QAE@XZ ; ILPCSTR000000::~ILPCSTR000000
__unwindfunclet$?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z$3:
  0001a	8d 4d c8	 lea	 ecx, DWORD PTR _szPacketName$2[ebp]
  0001d	e9 00 00 00 00	 jmp	 ??1ILPCSTR000000@@QAE@XZ ; ILPCSTR000000::~ILPCSTR000000
__unwindfunclet$?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z$9:
  00022	8b 45 0c	 mov	 eax, DWORD PTR $T8[ebp]
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002b	c3		 ret	 0
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
  00030	cc		 int	 3
__ehhandler$?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z:
  00031	90		 npad	 1
  00032	90		 npad	 1
  00033	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00037	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003a	8b 4a bc	 mov	 ecx, DWORD PTR [edx-68]
  0003d	33 c8		 xor	 ecx, eax
  0003f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00044	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z
  00049	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetDoubleList@CDataInterfaceAddInImp@@MAEPAUIDblList@@PBD0H@Z ENDP ; CDataInterfaceAddInImp::GetDoubleList
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.h
;	COMDAT ?QueryInterface@CDataInterfaceAddInImp@@MAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryInterface@CDataInterfaceAddInImp@@MAGJABU_GUID@@PAPAX@Z PROC ; CDataInterfaceAddInImp::QueryInterface, COMDAT

; 44   : 	_IWRAPPER_IUNKNOWN_INTERFACE()

  00000	b8 02 40 00 80	 mov	 eax, -2147467262	; 80004002H
  00005	c2 0c 00	 ret	 12			; 0000000cH
?QueryInterface@CDataInterfaceAddInImp@@MAGJABU_GUID@@PAPAX@Z ENDP ; CDataInterfaceAddInImp::QueryInterface
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.h
;	COMDAT ?Release@CDataInterfaceAddInImp@@MAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Release@CDataInterfaceAddInImp@@MAGKXZ PROC		; CDataInterfaceAddInImp::Release, COMDAT

; 44   : 	_IWRAPPER_IUNKNOWN_INTERFACE()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	e9 00 00 00 00	 jmp	 ?Release@CIWUnknown@@MAGKXZ ; CIWUnknown::Release
?Release@CDataInterfaceAddInImp@@MAGKXZ ENDP		; CDataInterfaceAddInImp::Release
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.h
;	COMDAT ?AddRef@CDataInterfaceAddInImp@@MAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@CDataInterfaceAddInImp@@MAGKXZ PROC		; CDataInterfaceAddInImp::AddRef, COMDAT

; 44   : 	_IWRAPPER_IUNKNOWN_INTERFACE()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	e9 00 00 00 00	 jmp	 ?AddRef@CIWUnknown@@MAGKXZ ; CIWUnknown::AddRef
?AddRef@CDataInterfaceAddInImp@@MAGKXZ ENDP		; CDataInterfaceAddInImp::AddRef
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp
;	COMDAT ?GetAddInCustomInterface@CDataInterfaceAddInImp@@MAEPAUIUnknown@@XZ
_TEXT	SEGMENT
?GetAddInCustomInterface@CDataInterfaceAddInImp@@MAEPAUIUnknown@@XZ PROC ; CDataInterfaceAddInImp::GetAddInCustomInterface, COMDAT
; _this$ = ecx

; 48   : {

  00000	56		 push	 esi

; 49   : 	IUnknown *pIUnknown = ( IPacketQueryer *)this;
; 50   : 	pIUnknown->AddRef();

  00001	33 c0		 xor	 eax, eax
  00003	8d 71 38	 lea	 esi, DWORD PTR [ecx+56]
  00006	83 f9 08	 cmp	 ecx, 8
  00009	0f 44 f0	 cmove	 esi, eax
  0000c	56		 push	 esi
  0000d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0000f	ff 51 04	 call	 DWORD PTR [ecx+4]

; 51   : 	return pIUnknown;

  00012	8b c6		 mov	 eax, esi
  00014	5e		 pop	 esi

; 52   : }

  00015	c3		 ret	 0
?GetAddInCustomInterface@CDataInterfaceAddInImp@@MAEPAUIUnknown@@XZ ENDP ; CDataInterfaceAddInImp::GetAddInCustomInterface
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.h
;	COMDAT ?GetRegisteredEventMap@CDataInterfaceAddInImp@@MBEPBW4EAddInEventType@IChartAddIn000000@@XZ
_TEXT	SEGMENT
?GetRegisteredEventMap@CDataInterfaceAddInImp@@MBEPBW4EAddInEventType@IChartAddIn000000@@XZ PROC ; CDataInterfaceAddInImp::GetRegisteredEventMap, COMDAT
; _this$ = ecx

; 29   : 	DECLARE_ADDIN_EVENT_MAP()

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?m_eRegisteredEventMap@CDataInterfaceAddInImp@@1QBW4EAddInEventType@IChartAddIn000000@@B ; CDataInterfaceAddInImp::m_eRegisteredEventMap
  00005	c3		 ret	 0
?GetRegisteredEventMap@CDataInterfaceAddInImp@@MBEPBW4EAddInEventType@IChartAddIn000000@@XZ ENDP ; CDataInterfaceAddInImp::GetRegisteredEventMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp
;	COMDAT ??1CDataInterfaceAddInImp@@UAE@XZ
_TEXT	SEGMENT
??1CDataInterfaceAddInImp@@UAE@XZ PROC			; CDataInterfaceAddInImp::~CDataInterfaceAddInImp, COMDAT
; _this$ = ecx

; 29   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CDataInterfaceAddInImp@@6BCIWUnknown@@@
  00006	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], OFFSET ??_7CDataInterfaceAddInImp@@6BIChartAddIn000000@@@

; 30   : 
; 31   : }

  0000d	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], OFFSET ??_7IPacketQueryer@@6B@
  00014	e9 00 00 00 00	 jmp	 ??1CChartAddInBase000000@@MAE@XZ ; CChartAddInBase000000::~CChartAddInBase000000
??1CDataInterfaceAddInImp@@UAE@XZ ENDP			; CDataInterfaceAddInImp::~CDataInterfaceAddInImp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp
;	COMDAT ??0CDataInterfaceAddInImp@@QAE@PAUIChartOCX000000@@PAUIAddInDllBase@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p_pIChartOCX$ = 8					; size = 4
_p_pIAddInDllBase$ = 12					; size = 4
??0CDataInterfaceAddInImp@@QAE@PAUIChartOCX000000@@PAUIAddInDllBase@@@Z PROC ; CDataInterfaceAddInImp::CDataInterfaceAddInImp, COMDAT
; _this$ = ecx

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 0c	 push	 DWORD PTR _p_pIAddInDllBase$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	ff 75 08	 push	 DWORD PTR _p_pIChartOCX$[ebp]
  0000d	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  00010	e8 00 00 00 00	 call	 ??0CChartAddInBase000000@@IAE@PAUIChartOCX000000@@PAUIAddInDllBase@@@Z ; CChartAddInBase000000::CChartAddInBase000000
  00015	c7 46 40 00 00
	00 00		 mov	 DWORD PTR [esi+64], OFFSET ??_7IPacketQueryer@@6B@

; 25   : 
; 26   : }

  0001c	8b c6		 mov	 eax, esi
  0001e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDataInterfaceAddInImp@@6BCIWUnknown@@@
  00024	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], OFFSET ??_7CDataInterfaceAddInImp@@6BIChartAddIn000000@@@
  0002b	c7 46 40 00 00
	00 00		 mov	 DWORD PTR [esi+64], OFFSET ??_7CDataInterfaceAddInImp@@6B@
  00032	5e		 pop	 esi
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 08 00	 ret	 8
??0CDataInterfaceAddInImp@@QAE@PAUIChartOCX000000@@PAUIAddInDllBase@@@Z ENDP ; CDataInterfaceAddInImp::CDataInterfaceAddInImp
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GIPacketQueryer@@MAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GIPacketQueryer@@MAEPAXI@Z PROC			; IPacketQueryer::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7IPacketQueryer@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GIPacketQueryer@@MAEPAXI@Z ENDP			; IPacketQueryer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\IPacketQueryer.h
;	COMDAT ??1IPacketQueryer@@MAE@XZ
_TEXT	SEGMENT
??1IPacketQueryer@@MAE@XZ PROC				; IPacketQueryer::~IPacketQueryer, COMDAT
; _this$ = ecx

; 28   : 	virtual ~IPacketQueryer()	{}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7IPacketQueryer@@6B@
  00006	c3		 ret	 0
??1IPacketQueryer@@MAE@XZ ENDP				; IPacketQueryer::~IPacketQueryer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnRButtonDblClk@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z
_TEXT	SEGMENT
_p_hDC$ = 8						; size = 4
_nFlags$ = 12						; size = 4
_point$ = 16						; size = 4
_p_dwMouseActionID$ = 20				; size = 4
?OnRButtonDblClk@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z PROC ; CChartAddInBase000000::OnRButtonDblClk, COMDAT
; _this$ = ecx

; 221  : 	virtual BOOL	OnRButtonDblClk(	HDC p_hDC, UINT nFlags, POINT &point, const DWORD p_dwMouseActionID)									{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 10 00	 ret	 16			; 00000010H
?OnRButtonDblClk@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z ENDP ; CChartAddInBase000000::OnRButtonDblClk
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnRButtonUp@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z
_TEXT	SEGMENT
_p_hDC$ = 8						; size = 4
_nFlags$ = 12						; size = 4
_point$ = 16						; size = 4
_p_dwMouseActionID$ = 20				; size = 4
?OnRButtonUp@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z PROC ; CChartAddInBase000000::OnRButtonUp, COMDAT
; _this$ = ecx

; 220  : 	virtual BOOL	OnRButtonUp(		HDC p_hDC, UINT nFlags, POINT &point, const DWORD p_dwMouseActionID)									{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 10 00	 ret	 16			; 00000010H
?OnRButtonUp@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z ENDP ; CChartAddInBase000000::OnRButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnRButtonDown@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z
_TEXT	SEGMENT
_p_hDC$ = 8						; size = 4
_nFlags$ = 12						; size = 4
_point$ = 16						; size = 4
_p_dwMouseActionID$ = 20				; size = 4
?OnRButtonDown@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z PROC ; CChartAddInBase000000::OnRButtonDown, COMDAT
; _this$ = ecx

; 219  : 	virtual BOOL	OnRButtonDown(		HDC p_hDC, UINT nFlags, POINT &point, const DWORD p_dwMouseActionID)									{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 10 00	 ret	 16			; 00000010H
?OnRButtonDown@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z ENDP ; CChartAddInBase000000::OnRButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnLButtonDblClk@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z
_TEXT	SEGMENT
_p_hDC$ = 8						; size = 4
_nFlags$ = 12						; size = 4
_point$ = 16						; size = 4
_p_dwMouseActionID$ = 20				; size = 4
?OnLButtonDblClk@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z PROC ; CChartAddInBase000000::OnLButtonDblClk, COMDAT
; _this$ = ecx

; 218  : 	virtual BOOL	OnLButtonDblClk(	HDC p_hDC, UINT nFlags, POINT &point, const DWORD p_dwMouseActionID)									{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 10 00	 ret	 16			; 00000010H
?OnLButtonDblClk@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z ENDP ; CChartAddInBase000000::OnLButtonDblClk
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnLButtonUp@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z
_TEXT	SEGMENT
_p_hDC$ = 8						; size = 4
_nFlags$ = 12						; size = 4
_point$ = 16						; size = 4
_p_dwMouseActionID$ = 20				; size = 4
?OnLButtonUp@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z PROC ; CChartAddInBase000000::OnLButtonUp, COMDAT
; _this$ = ecx

; 217  : 	virtual BOOL	OnLButtonUp(		HDC p_hDC, UINT nFlags, POINT &point, const DWORD p_dwMouseActionID)									{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 10 00	 ret	 16			; 00000010H
?OnLButtonUp@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z ENDP ; CChartAddInBase000000::OnLButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnLButtonDown@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z
_TEXT	SEGMENT
_p_hDC$ = 8						; size = 4
_nFlags$ = 12						; size = 4
_point$ = 16						; size = 4
_p_dwMouseActionID$ = 20				; size = 4
?OnLButtonDown@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z PROC ; CChartAddInBase000000::OnLButtonDown, COMDAT
; _this$ = ecx

; 216  : 	virtual BOOL	OnLButtonDown(		HDC p_hDC, UINT nFlags, POINT &point, const DWORD p_dwMouseActionID)									{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 10 00	 ret	 16			; 00000010H
?OnLButtonDown@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@K@Z ENDP ; CChartAddInBase000000::OnLButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnMouseMove@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@KQAUHBITMAP__@@@Z
_TEXT	SEGMENT
_p_hDC$ = 8						; size = 4
_nFlags$ = 12						; size = 4
_point$ = 16						; size = 4
_p_dwMouseActionID$ = 20				; size = 4
_p_hbmpMainOSB$ = 24					; size = 4
?OnMouseMove@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@KQAUHBITMAP__@@@Z PROC ; CChartAddInBase000000::OnMouseMove, COMDAT
; _this$ = ecx

; 215  : 	virtual BOOL	OnMouseMove(		HDC p_hDC, UINT nFlags, POINT &point, const DWORD p_dwMouseActionID, const HBITMAP p_hbmpMainOSB)		{	return FALSE;	}	// (2006/11/5 - Seung-Won, Bae) Support MainOSB

  00000	33 c0		 xor	 eax, eax
  00002	c2 14 00	 ret	 20			; 00000014H
?OnMouseMove@CChartAddInBase000000@@MAEHPAUHDC__@@IAAUtagPOINT@@KQAUHBITMAP__@@@Z ENDP ; CChartAddInBase000000::OnMouseMove
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnMouseWheel@CChartAddInBase000000@@MAEHIFUtagPOINT@@K@Z
_TEXT	SEGMENT
_nFlags$ = 8						; size = 4
_zDelta$ = 12						; size = 2
_pt$ = 16						; size = 8
_p_dwMouseActionID$ = 24				; size = 4
?OnMouseWheel@CChartAddInBase000000@@MAEHIFUtagPOINT@@K@Z PROC ; CChartAddInBase000000::OnMouseWheel, COMDAT
; _this$ = ecx

; 214  : 	virtual BOOL	OnMouseWheel(		UINT nFlags, short zDelta, POINT pt, const DWORD p_dwMouseActionID)										{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 14 00	 ret	 20			; 00000014H
?OnMouseWheel@CChartAddInBase000000@@MAEHIFUtagPOINT@@K@Z ENDP ; CChartAddInBase000000::OnMouseWheel
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnKeyUp@CChartAddInBase000000@@MAEHIII@Z
_TEXT	SEGMENT
_nChar$ = 8						; size = 4
_nRepCnt$ = 12						; size = 4
_nFlags$ = 16						; size = 4
?OnKeyUp@CChartAddInBase000000@@MAEHIII@Z PROC		; CChartAddInBase000000::OnKeyUp, COMDAT
; _this$ = ecx

; 213  : 	virtual BOOL	OnKeyUp(			UINT nChar, UINT nRepCnt, UINT nFlags)																	{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 0c 00	 ret	 12			; 0000000cH
?OnKeyUp@CChartAddInBase000000@@MAEHIII@Z ENDP		; CChartAddInBase000000::OnKeyUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnKeyDown@CChartAddInBase000000@@MAEHIII@Z
_TEXT	SEGMENT
_nChar$ = 8						; size = 4
_nRepCnt$ = 12						; size = 4
_nFlags$ = 16						; size = 4
?OnKeyDown@CChartAddInBase000000@@MAEHIII@Z PROC	; CChartAddInBase000000::OnKeyDown, COMDAT
; _this$ = ecx

; 212  : 	virtual BOOL	OnKeyDown(			UINT nChar, UINT nRepCnt, UINT nFlags)																	{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 0c 00	 ret	 12			; 0000000cH
?OnKeyDown@CChartAddInBase000000@@MAEHIII@Z ENDP	; CChartAddInBase000000::OnKeyDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@JJ@Z
_TEXT	SEGMENT
_p_lResult$ = 8						; size = 4
_p_eCommandID$ = 12					; size = 4
_p_lParam1$ = 16					; size = 4
_p_lParam2$ = 20					; size = 4
?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@JJ@Z PROC ; CChartAddInBase000000::OnAddInToolCommand, COMDAT
; _this$ = ecx

; 210  : 	virtual BOOL	OnAddInToolCommand(	long &p_lResult, const EAICommandType p_eCommandID, const long p_lParam1, const long p_lParam2)			{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 10 00	 ret	 16			; 00000010H
?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@JJ@Z ENDP ; CChartAddInBase000000::OnAddInToolCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@J@Z
_TEXT	SEGMENT
_p_lResult$ = 8						; size = 4
_p_eCommandID$ = 12					; size = 4
_p_lParam$ = 16						; size = 4
?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@J@Z PROC ; CChartAddInBase000000::OnAddInToolCommand, COMDAT
; _this$ = ecx

; 209  : 	virtual BOOL	OnAddInToolCommand(	long &p_lResult, const EAICommandType p_eCommandID, const long p_lParam)								{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 0c 00	 ret	 12			; 0000000cH
?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@J@Z ENDP ; CChartAddInBase000000::OnAddInToolCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@PBDPAVCObject@@@Z
_TEXT	SEGMENT
_p_lResult$ = 8						; size = 4
_p_eCommandID$ = 12					; size = 4
_p_szParam$ = 16					; size = 4
_p_pParam$ = 20						; size = 4
?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@PBDPAVCObject@@@Z PROC ; CChartAddInBase000000::OnAddInToolCommand, COMDAT
; _this$ = ecx

; 208  : 	virtual BOOL	OnAddInToolCommand(	long &p_lResult, const EAICommandType p_eCommandID, const char *p_szParam, CObject *p_pParam)			{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 10 00	 ret	 16			; 00000010H
?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@PBDPAVCObject@@@Z ENDP ; CChartAddInBase000000::OnAddInToolCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@PBD@Z
_TEXT	SEGMENT
_p_lResult$ = 8						; size = 4
_p_eCommandID$ = 12					; size = 4
_p_szParam$ = 16					; size = 4
?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@PBD@Z PROC ; CChartAddInBase000000::OnAddInToolCommand, COMDAT
; _this$ = ecx

; 207  : 	virtual BOOL	OnAddInToolCommand(	long &p_lResult, const EAICommandType p_eCommandID, const char *p_szParam)								{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 0c 00	 ret	 12			; 0000000cH
?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@PBD@Z ENDP ; CChartAddInBase000000::OnAddInToolCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@PAUIGraphInfo000000@@@Z
_TEXT	SEGMENT
_p_lResult$ = 8						; size = 4
_p_eCommandID$ = 12					; size = 4
_p_pIGraphInfo$ = 16					; size = 4
?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@PAUIGraphInfo000000@@@Z PROC ; CChartAddInBase000000::OnAddInToolCommand, COMDAT
; _this$ = ecx

; 206  : 	virtual BOOL	OnAddInToolCommand(	long &p_lResult, const EAICommandType p_eCommandID, IGraphInfo *p_pIGraphInfo)							{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 0c 00	 ret	 12			; 0000000cH
?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@PAUIGraphInfo000000@@@Z ENDP ; CChartAddInBase000000::OnAddInToolCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@@Z
_TEXT	SEGMENT
_p_lResult$ = 8						; size = 4
_p_eCommandID$ = 12					; size = 4
?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@@Z PROC ; CChartAddInBase000000::OnAddInToolCommand, COMDAT
; _this$ = ecx

; 205  : 	virtual BOOL	OnAddInToolCommand(	long &p_lResult, const EAICommandType p_eCommandID)														{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 08 00	 ret	 8
?OnAddInToolCommand@CChartAddInBase000000@@MAEHAAJW4EAICommandType@@@Z ENDP ; CChartAddInBase000000::OnAddInToolCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@JJJJJJJJJ@Z
_TEXT	SEGMENT
_p_eCommandID$ = 8					; size = 4
_p_lParam1$ = 12					; size = 4
_p_lParam2$ = 16					; size = 4
_p_lParam3$ = 20					; size = 4
_p_lParam4$ = 24					; size = 4
_p_lParam5$ = 28					; size = 4
_p_lParam6$ = 32					; size = 4
_p_lParam7$ = 36					; size = 4
_p_lParam8$ = 40					; size = 4
_p_lParam9$ = 44					; size = 4
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@JJJJJJJJJ@Z PROC ; CChartAddInBase000000::OnAddInToolCommand, COMDAT
; _this$ = ecx

; 204  : 	virtual BOOL	OnAddInToolCommand(	const EAICommandType p_eCommandID, const long p_lParam1, const long p_lParam2, const long p_lParam3, const long p_lParam4, const long p_lParam5, const long p_lParam6, const long p_lParam7, const long p_lParam8, const long p_lParam9)	{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 28 00	 ret	 40			; 00000028H
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@JJJJJJJJJ@Z ENDP ; CChartAddInBase000000::OnAddInToolCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@JJ@Z
_TEXT	SEGMENT
_p_eCommandID$ = 8					; size = 4
_p_lParam1$ = 12					; size = 4
_p_lParam2$ = 16					; size = 4
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@JJ@Z PROC ; CChartAddInBase000000::OnAddInToolCommand, COMDAT
; _this$ = ecx

; 203  : 	virtual BOOL	OnAddInToolCommand(	const EAICommandType p_eCommandID, const long p_lParam1, const long p_lParam2)							{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 0c 00	 ret	 12			; 0000000cH
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@JJ@Z ENDP ; CChartAddInBase000000::OnAddInToolCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@JPBD11@Z
_TEXT	SEGMENT
_p_eCommandID$ = 8					; size = 4
_p_lParam$ = 12						; size = 4
_p_szParam1$ = 16					; size = 4
_p_szParam2$ = 20					; size = 4
_p_szParam3$ = 24					; size = 4
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@JPBD11@Z PROC ; CChartAddInBase000000::OnAddInToolCommand, COMDAT
; _this$ = ecx

; 202  : 	virtual BOOL	OnAddInToolCommand( const EAICommandType p_eCommandID, const long p_lParam, const char *p_szParam1, const char *p_szParam2, const char *p_szParam3)	{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 14 00	 ret	 20			; 00000014H
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@JPBD11@Z ENDP ; CChartAddInBase000000::OnAddInToolCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@JPBD@Z
_TEXT	SEGMENT
_p_eCommandID$ = 8					; size = 4
_p_lParam$ = 12						; size = 4
_p_szParam$ = 16					; size = 4
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@JPBD@Z PROC ; CChartAddInBase000000::OnAddInToolCommand, COMDAT
; _this$ = ecx

; 201  : 	virtual BOOL	OnAddInToolCommand( const EAICommandType p_eCommandID, const long p_lParam, const char *p_szParam)							{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 0c 00	 ret	 12			; 0000000cH
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@JPBD@Z ENDP ; CChartAddInBase000000::OnAddInToolCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@J@Z
_TEXT	SEGMENT
_p_eCommandID$ = 8					; size = 4
_p_lParam$ = 12						; size = 4
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@J@Z PROC ; CChartAddInBase000000::OnAddInToolCommand, COMDAT
; _this$ = ecx

; 200  : 	virtual BOOL	OnAddInToolCommand(	const EAICommandType p_eCommandID, const long p_lParam)													{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 08 00	 ret	 8
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@J@Z ENDP ; CChartAddInBase000000::OnAddInToolCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PBUIAddInDllBase@@@Z
_TEXT	SEGMENT
_p_eCommandID$ = 8					; size = 4
_p_pParam$ = 12						; size = 4
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PBUIAddInDllBase@@@Z PROC ; CChartAddInBase000000::OnAddInToolCommand, COMDAT
; _this$ = ecx

; 199  : 	virtual BOOL	OnAddInToolCommand(	const EAICommandType p_eCommandID, const IAddInDllBase *p_pParam)										{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 08 00	 ret	 8
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PBUIAddInDllBase@@@Z ENDP ; CChartAddInBase000000::OnAddInToolCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PBDJ@Z
_TEXT	SEGMENT
_p_eCommandID$ = 8					; size = 4
_p_szParam$ = 12					; size = 4
_p_lParam$ = 16						; size = 4
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PBDJ@Z PROC ; CChartAddInBase000000::OnAddInToolCommand, COMDAT
; _this$ = ecx

; 198  : 	virtual BOOL	OnAddInToolCommand( const EAICommandType p_eCommandID, const char *p_szParam, const long p_lParam)							{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 0c 00	 ret	 12			; 0000000cH
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PBDJ@Z ENDP ; CChartAddInBase000000::OnAddInToolCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PBD1@Z
_TEXT	SEGMENT
_p_eCommandID$ = 8					; size = 4
_p_szParam1$ = 12					; size = 4
_p_szParam2$ = 16					; size = 4
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PBD1@Z PROC ; CChartAddInBase000000::OnAddInToolCommand, COMDAT
; _this$ = ecx

; 197  : 	virtual BOOL	OnAddInToolCommand(	const EAICommandType p_eCommandID, const char *p_szParam1, const char *p_szParam2)						{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 0c 00	 ret	 12			; 0000000cH
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PBD1@Z ENDP ; CChartAddInBase000000::OnAddInToolCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PBD@Z
_TEXT	SEGMENT
_p_eCommandID$ = 8					; size = 4
_p_szParam$ = 12					; size = 4
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PBD@Z PROC ; CChartAddInBase000000::OnAddInToolCommand, COMDAT
; _this$ = ecx

; 196  : 	virtual BOOL	OnAddInToolCommand(	const EAICommandType p_eCommandID, const char *p_szParam)												{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 08 00	 ret	 8
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PBD@Z ENDP ; CChartAddInBase000000::OnAddInToolCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PAUHDC__@@IAAUtagPOINT@@K@Z
_TEXT	SEGMENT
_p_eCommandID$ = 8					; size = 4
_p_hDC$ = 12						; size = 4
_nFlags$ = 16						; size = 4
_point$ = 20						; size = 4
_p_dwMouseActionID$ = 24				; size = 4
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PAUHDC__@@IAAUtagPOINT@@K@Z PROC ; CChartAddInBase000000::OnAddInToolCommand, COMDAT
; _this$ = ecx

; 195  : 	virtual BOOL	OnAddInToolCommand(	const EAICommandType p_eCommandID, HDC p_hDC, UINT nFlags, POINT &point, const DWORD p_dwMouseActionID)	{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 14 00	 ret	 20			; 00000014H
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@PAUHDC__@@IAAUtagPOINT@@K@Z ENDP ; CChartAddInBase000000::OnAddInToolCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@@Z
_TEXT	SEGMENT
_p_eCommandID$ = 8					; size = 4
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@@Z PROC ; CChartAddInBase000000::OnAddInToolCommand, COMDAT
; _this$ = ecx

; 194  : 	virtual BOOL	OnAddInToolCommand(	const EAICommandType p_eCommandID)																		{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 04 00	 ret	 4
?OnAddInToolCommand@CChartAddInBase000000@@MAEHW4EAICommandType@@@Z ENDP ; CChartAddInBase000000::OnAddInToolCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnAddInMsg@CChartAddInBase000000@@MAEHPBDJ@Z
_TEXT	SEGMENT
_p_szAddInItemName$ = 8					; size = 4
_p_lParam$ = 12						; size = 4
?OnAddInMsg@CChartAddInBase000000@@MAEHPBDJ@Z PROC	; CChartAddInBase000000::OnAddInMsg, COMDAT
; _this$ = ecx

; 193  : 	virtual BOOL	OnAddInMsg(			const char *p_szAddInItemName, const long p_lParam)														{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 08 00	 ret	 8
?OnAddInMsg@CChartAddInBase000000@@MAEHPBDJ@Z ENDP	; CChartAddInBase000000::OnAddInMsg
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnCmdMsg@CChartAddInBase000000@@MAEHIHPAUICmdUI000000@@@Z
_TEXT	SEGMENT
_nID$ = 8						; size = 4
_nCode$ = 12						; size = 4
_p_pICmdUI$ = 16					; size = 4
?OnCmdMsg@CChartAddInBase000000@@MAEHIHPAUICmdUI000000@@@Z PROC ; CChartAddInBase000000::OnCmdMsg, COMDAT
; _this$ = ecx

; 192  : 	virtual BOOL	OnCmdMsg(			UINT nID, int nCode, ICmdUI *p_pICmdUI)																	{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 0c 00	 ret	 12			; 0000000cH
?OnCmdMsg@CChartAddInBase000000@@MAEHIHPAUICmdUI000000@@@Z ENDP ; CChartAddInBase000000::OnCmdMsg
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnPreNMTRClock@CChartAddInBase000000@@MAEHAA_J@Z
_TEXT	SEGMENT
_p_nRealClockSecs$ = 8					; size = 4
?OnPreNMTRClock@CChartAddInBase000000@@MAEHAA_J@Z PROC	; CChartAddInBase000000::OnPreNMTRClock, COMDAT
; _this$ = ecx

; 186  : 	virtual BOOL	OnPreNMTRClock( __int64 &p_nRealClockSecs)																		{	return TRUE;	}

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c2 04 00	 ret	 4
?OnPreNMTRClock@CChartAddInBase000000@@MAEHAA_J@Z ENDP	; CChartAddInBase000000::OnPreNMTRClock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnPreRealPacketEnd@CChartAddInBase000000@@MAEHPBDH@Z
_TEXT	SEGMENT
_p_szRQ$ = 8						; size = 4
_p_bRealData$ = 12					; size = 4
?OnPreRealPacketEnd@CChartAddInBase000000@@MAEHPBDH@Z PROC ; CChartAddInBase000000::OnPreRealPacketEnd, COMDAT
; _this$ = ecx

; 185  : 	virtual BOOL	OnPreRealPacketEnd( const char *p_szRQ = NULL, BOOL p_bRealData = TRUE)											{	return TRUE;	}

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c2 08 00	 ret	 8
?OnPreRealPacketEnd@CChartAddInBase000000@@MAEHPBDH@Z ENDP ; CChartAddInBase000000::OnPreRealPacketEnd
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnPreIndexedRealData@CChartAddInBase000000@@MAEHPBDHAANH@Z
_TEXT	SEGMENT
_p_szPacketName$ = 8					; size = 4
_p_nIndex$ = 12						; size = 4
_p_dData$ = 16						; size = 4
_p_bRealData$ = 20					; size = 4
?OnPreIndexedRealData@CChartAddInBase000000@@MAEHPBDHAANH@Z PROC ; CChartAddInBase000000::OnPreIndexedRealData, COMDAT
; _this$ = ecx

; 184  : 	virtual BOOL	OnPreIndexedRealData( const char *p_szPacketName, const int p_nIndex, double &p_dData, BOOL p_bRealData = TRUE)	{	return TRUE;	}

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c2 10 00	 ret	 16			; 00000010H
?OnPreIndexedRealData@CChartAddInBase000000@@MAEHPBDHAANH@Z ENDP ; CChartAddInBase000000::OnPreIndexedRealData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnPreRealData@CChartAddInBase000000@@MAEHPBDAAN0H@Z
_TEXT	SEGMENT
_p_szPacketName$ = 8					; size = 4
_p_dData$ = 12						; size = 4
_p_szRQ$ = 16						; size = 4
_p_bRealData$ = 20					; size = 4
?OnPreRealData@CChartAddInBase000000@@MAEHPBDAAN0H@Z PROC ; CChartAddInBase000000::OnPreRealData, COMDAT
; _this$ = ecx

; 183  : 	virtual BOOL	OnPreRealData( const char *p_szPacketName, double &p_dData, const char *p_szRQ = NULL, BOOL p_bRealData = TRUE)	{	return TRUE;	}

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c2 10 00	 ret	 16			; 00000010H
?OnPreRealData@CChartAddInBase000000@@MAEHPBDAAN0H@Z ENDP ; CChartAddInBase000000::OnPreRealData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnRecalculationComplete@CChartAddInBase000000@@MAEXXZ
_TEXT	SEGMENT
?OnRecalculationComplete@CChartAddInBase000000@@MAEXXZ PROC ; CChartAddInBase000000::OnRecalculationComplete, COMDAT
; _this$ = ecx

; 179  : 	virtual void	OnRecalculationComplete( void)						{}

  00000	c2 00 00	 ret	 0
?OnRecalculationComplete@CChartAddInBase000000@@MAEXXZ ENDP ; CChartAddInBase000000::OnRecalculationComplete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?DrawCursor@CChartAddInBase000000@@MAE?AUtagRECT@@PAUHDC__@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_p_hDC$ = 12						; size = 4
?DrawCursor@CChartAddInBase000000@@MAE?AUtagRECT@@PAUHDC__@@@Z PROC ; CChartAddInBase000000::DrawCursor, COMDAT
; _this$ = ecx

; 177  : 	virtual RECT	DrawCursor( HDC p_hDC)								{	RECT rct = { 0, 0, 0, 0};	return rct;		}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0000c	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00013	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  0001a	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
?DrawCursor@CChartAddInBase000000@@MAE?AUtagRECT@@PAUHDC__@@@Z ENDP ; CChartAddInBase000000::DrawCursor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnSaveEnvironment@CChartAddInBase000000@@MAEXPAUIPropertyMap@@@Z
_TEXT	SEGMENT
_p_pIAddInEnvMap$ = 8					; size = 4
?OnSaveEnvironment@CChartAddInBase000000@@MAEXPAUIPropertyMap@@@Z PROC ; CChartAddInBase000000::OnSaveEnvironment, COMDAT
; _this$ = ecx

; 175  : 	virtual void	OnSaveEnvironment( IPropertyMap *p_pIAddInEnvMap)	{}

  00000	c2 04 00	 ret	 4
?OnSaveEnvironment@CChartAddInBase000000@@MAEXPAUIPropertyMap@@@Z ENDP ; CChartAddInBase000000::OnSaveEnvironment
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnLoadEnvironment@CChartAddInBase000000@@MAEXPAUIPropertyMap@@@Z
_TEXT	SEGMENT
_p_pIAddInEnvMap$ = 8					; size = 4
?OnLoadEnvironment@CChartAddInBase000000@@MAEXPAUIPropertyMap@@@Z PROC ; CChartAddInBase000000::OnLoadEnvironment, COMDAT
; _this$ = ecx

; 174  : 	virtual void	OnLoadEnvironment( IPropertyMap *p_pIAddInEnvMap)	{}

  00000	c2 04 00	 ret	 4
?OnLoadEnvironment@CChartAddInBase000000@@MAEXPAUIPropertyMap@@@Z ENDP ; CChartAddInBase000000::OnLoadEnvironment
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnRealPacketEnd@CChartAddInBase000000@@MAEXPBD@Z
_TEXT	SEGMENT
_p_szRQ$ = 8						; size = 4
?OnRealPacketEnd@CChartAddInBase000000@@MAEXPBD@Z PROC	; CChartAddInBase000000::OnRealPacketEnd, COMDAT
; _this$ = ecx

; 172  : 	virtual void	OnRealPacketEnd( const char *p_szRQ)								{}

  00000	c2 04 00	 ret	 4
?OnRealPacketEnd@CChartAddInBase000000@@MAEXPBD@Z ENDP	; CChartAddInBase000000::OnRealPacketEnd
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnIndexedRealData@CChartAddInBase000000@@MAEXPBDHN@Z
_TEXT	SEGMENT
_p_szPacketName$ = 8					; size = 4
_p_nIndex$ = 12						; size = 4
_p_dData$ = 16						; size = 8
?OnIndexedRealData@CChartAddInBase000000@@MAEXPBDHN@Z PROC ; CChartAddInBase000000::OnIndexedRealData, COMDAT
; _this$ = ecx

; 170  : 	virtual void	OnIndexedRealData( const char *p_szPacketName, const int p_nIndex, double p_dData)		{}

  00000	c2 10 00	 ret	 16			; 00000010H
?OnIndexedRealData@CChartAddInBase000000@@MAEXPBDHN@Z ENDP ; CChartAddInBase000000::OnIndexedRealData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnRealData@CChartAddInBase000000@@MAEXPBDN0@Z
_TEXT	SEGMENT
_p_szPacketName$ = 8					; size = 4
_p_dData$ = 12						; size = 8
_p_szRQ$ = 20						; size = 4
?OnRealData@CChartAddInBase000000@@MAEXPBDN0@Z PROC	; CChartAddInBase000000::OnRealData, COMDAT
; _this$ = ecx

; 169  : 	virtual void	OnRealData( const char *p_szPacketName, double p_dData, const char *p_szRQ)			{}

  00000	c2 10 00	 ret	 16			; 00000010H
?OnRealData@CChartAddInBase000000@@MAEXPBDN0@Z ENDP	; CChartAddInBase000000::OnRealData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnToolCommand@CChartAddInBase000000@@MAEXHH@Z
_TEXT	SEGMENT
_p_nToolType$ = 8					; size = 4
_p_nCmdOption$ = 12					; size = 4
?OnToolCommand@CChartAddInBase000000@@MAEXHH@Z PROC	; CChartAddInBase000000::OnToolCommand, COMDAT
; _this$ = ecx

; 167  : 	virtual void	OnToolCommand( const int p_nToolType, const int p_nCmdOption)	{}

  00000	c2 08 00	 ret	 8
?OnToolCommand@CChartAddInBase000000@@MAEXHH@Z ENDP	; CChartAddInBase000000::OnToolCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnBlockChanged@CChartAddInBase000000@@MAEXW4BLOCKBEHAVIOR@CBlockBaseData@@HHHH@Z
_TEXT	SEGMENT
_p_eChangeType$ = 8					; size = 4
_p_nSourceRow$ = 12					; size = 4
_p_nSourceColumn$ = 16					; size = 4
_p_nTargetRow$ = 20					; size = 4
_p_nTargetColumn$ = 24					; size = 4
?OnBlockChanged@CChartAddInBase000000@@MAEXW4BLOCKBEHAVIOR@CBlockBaseData@@HHHH@Z PROC ; CChartAddInBase000000::OnBlockChanged, COMDAT
; _this$ = ecx

; 165  : 	virtual void	OnBlockChanged( const CBlockBaseData::BLOCKBEHAVIOR p_eChangeType, const int p_nSourceRow, const int p_nSourceColumn, const int p_nTargetRow, const int p_nTargetColumn)	{}

  00000	c2 14 00	 ret	 20			; 00000014H
?OnBlockChanged@CChartAddInBase000000@@MAEXW4BLOCKBEHAVIOR@CBlockBaseData@@HHHH@Z ENDP ; CChartAddInBase000000::OnBlockChanged
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnPacketTruncated@CChartAddInBase000000@@MAEXH@Z
_TEXT	SEGMENT
_p_nDataCount$ = 8					; size = 4
?OnPacketTruncated@CChartAddInBase000000@@MAEXH@Z PROC	; CChartAddInBase000000::OnPacketTruncated, COMDAT
; _this$ = ecx

; 163  : 	virtual void	OnPacketTruncated( const int p_nDataCount)			{}

  00000	c2 04 00	 ret	 4
?OnPacketTruncated@CChartAddInBase000000@@MAEXH@Z ENDP	; CChartAddInBase000000::OnPacketTruncated
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnGraphDeleted@CChartAddInBase000000@@MAEXPBD0@Z
_TEXT	SEGMENT
_p_szGraphName$ = 8					; size = 4
_p_szIndicatorName$ = 12				; size = 4
?OnGraphDeleted@CChartAddInBase000000@@MAEXPBD0@Z PROC	; CChartAddInBase000000::OnGraphDeleted, COMDAT
; _this$ = ecx

; 161  : 	virtual void	OnGraphDeleted( const char *p_szGraphName, const char *p_szIndicatorName)			{}

  00000	c2 08 00	 ret	 8
?OnGraphDeleted@CChartAddInBase000000@@MAEXPBD0@Z ENDP	; CChartAddInBase000000::OnGraphDeleted
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnContextMenu@CChartAddInBase000000@@MAEXPAUHWND__@@AAUtagPOINT@@@Z
_TEXT	SEGMENT
_p_hWnd$ = 8						; size = 4
_p_pt$ = 12						; size = 4
?OnContextMenu@CChartAddInBase000000@@MAEXPAUHWND__@@AAUtagPOINT@@@Z PROC ; CChartAddInBase000000::OnContextMenu, COMDAT
; _this$ = ecx

; 159  : 	virtual void	OnContextMenu( HWND p_hWnd, POINT &p_pt)			{}

  00000	c2 08 00	 ret	 8
?OnContextMenu@CChartAddInBase000000@@MAEXPAUHWND__@@AAUtagPOINT@@@Z ENDP ; CChartAddInBase000000::OnContextMenu
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnManualRealData@CChartAddInBase000000@@MAEXPBDNH@Z
_TEXT	SEGMENT
_p_szPacketName$ = 8					; size = 4
_p_dData$ = 12						; size = 8
_p_nOption$ = 20					; size = 4
?OnManualRealData@CChartAddInBase000000@@MAEXPBDNH@Z PROC ; CChartAddInBase000000::OnManualRealData, COMDAT
; _this$ = ecx

; 157  : 	virtual void	OnManualRealData( const char *p_szPacketName, const double p_dData, const int p_nOption)	{}

  00000	c2 10 00	 ret	 16			; 00000010H
?OnManualRealData@CChartAddInBase000000@@MAEXPBDNH@Z ENDP ; CChartAddInBase000000::OnManualRealData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnGraphAdded@CChartAddInBase000000@@MAEXPBD0@Z
_TEXT	SEGMENT
_p_szGraphName$ = 8					; size = 4
_p_szIndicatorName$ = 12				; size = 4
?OnGraphAdded@CChartAddInBase000000@@MAEXPBD0@Z PROC	; CChartAddInBase000000::OnGraphAdded, COMDAT
; _this$ = ecx

; 155  : 	virtual void	OnGraphAdded( const char *p_szGraphName, const char *p_szIndicatorName)			{}

  00000	c2 08 00	 ret	 8
?OnGraphAdded@CChartAddInBase000000@@MAEXPBD0@Z ENDP	; CChartAddInBase000000::OnGraphAdded
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnBlockRemoved@CChartAddInBase000000@@MAEXHH@Z
_TEXT	SEGMENT
_p_nRow$ = 8						; size = 4
_p_nColumn$ = 12					; size = 4
?OnBlockRemoved@CChartAddInBase000000@@MAEXHH@Z PROC	; CChartAddInBase000000::OnBlockRemoved, COMDAT
; _this$ = ecx

; 153  : 	virtual void	OnBlockRemoved( const int p_nRow, const int p_nColumn)	{}

  00000	c2 08 00	 ret	 8
?OnBlockRemoved@CChartAddInBase000000@@MAEXHH@Z ENDP	; CChartAddInBase000000::OnBlockRemoved
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnGraphDataChanged@CChartAddInBase000000@@MAEXXZ
_TEXT	SEGMENT
?OnGraphDataChanged@CChartAddInBase000000@@MAEXXZ PROC	; CChartAddInBase000000::OnGraphDataChanged, COMDAT
; _this$ = ecx

; 151  : 	virtual void	OnGraphDataChanged( void)							{}

  00000	c2 00 00	 ret	 0
?OnGraphDataChanged@CChartAddInBase000000@@MAEXXZ ENDP	; CChartAddInBase000000::OnGraphDataChanged
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnChartItemChanged@CChartAddInBase000000@@MAEXXZ
_TEXT	SEGMENT
?OnChartItemChanged@CChartAddInBase000000@@MAEXXZ PROC	; CChartAddInBase000000::OnChartItemChanged, COMDAT
; _this$ = ecx

; 149  : 	virtual void	OnChartItemChanged( void)							{}

  00000	c2 00 00	 ret	 0
?OnChartItemChanged@CChartAddInBase000000@@MAEXXZ ENDP	; CChartAddInBase000000::OnChartItemChanged
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnUserIndiatorConditionLoaded@CChartAddInBase000000@@MAEXXZ
_TEXT	SEGMENT
?OnUserIndiatorConditionLoaded@CChartAddInBase000000@@MAEXXZ PROC ; CChartAddInBase000000::OnUserIndiatorConditionLoaded, COMDAT
; _this$ = ecx

; 147  : 	virtual void	OnUserIndiatorConditionLoaded( void)				{}

  00000	c2 00 00	 ret	 0
?OnUserIndiatorConditionLoaded@CChartAddInBase000000@@MAEXXZ ENDP ; CChartAddInBase000000::OnUserIndiatorConditionLoaded
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnResetMainBlock@CChartAddInBase000000@@MAEXXZ
_TEXT	SEGMENT
?OnResetMainBlock@CChartAddInBase000000@@MAEXXZ PROC	; CChartAddInBase000000::OnResetMainBlock, COMDAT
; _this$ = ecx

; 145  : 	virtual void	OnResetMainBlock( void)								{}

  00000	c2 00 00	 ret	 0
?OnResetMainBlock@CChartAddInBase000000@@MAEXXZ ENDP	; CChartAddInBase000000::OnResetMainBlock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnCaptureChanged@CChartAddInBase000000@@MAEXPAUHWND__@@QAUHBITMAP__@@@Z
_TEXT	SEGMENT
_p_hWnd$ = 8						; size = 4
_p_hbmpMainOSB$ = 12					; size = 4
?OnCaptureChanged@CChartAddInBase000000@@MAEXPAUHWND__@@QAUHBITMAP__@@@Z PROC ; CChartAddInBase000000::OnCaptureChanged, COMDAT
; _this$ = ecx

; 143  : 	virtual void	OnCaptureChanged( HWND p_hWnd, const HBITMAP p_hbmpMainOSB)	{}	// (2006/11/5 - Seung-Won, Bae) Support MainOSB

  00000	c2 08 00	 ret	 8
?OnCaptureChanged@CChartAddInBase000000@@MAEXPAUHWND__@@QAUHBITMAP__@@@Z ENDP ; CChartAddInBase000000::OnCaptureChanged
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnTimer@CChartAddInBase000000@@MAEXI@Z
_TEXT	SEGMENT
_p_uTimerID$ = 8					; size = 4
?OnTimer@CChartAddInBase000000@@MAEXI@Z PROC		; CChartAddInBase000000::OnTimer, COMDAT
; _this$ = ecx

; 138  : 	virtual void	OnTimer( UINT p_uTimerID)	{}

  00000	c2 04 00	 ret	 4
?OnTimer@CChartAddInBase000000@@MAEXI@Z ENDP		; CChartAddInBase000000::OnTimer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnPacketDataMultiItem@CChartAddInBase000000@@MAEXPBD0H@Z
_TEXT	SEGMENT
_lpszRQ$ = 8						; size = 4
_p_szPacketNames$ = 12					; size = 4
_p_bWithReset$ = 16					; size = 4
?OnPacketDataMultiItem@CChartAddInBase000000@@MAEXPBD0H@Z PROC ; CChartAddInBase000000::OnPacketDataMultiItem, COMDAT
; _this$ = ecx

; 136  : 	virtual void	OnPacketDataMultiItem(LPCTSTR lpszRQ, const char *p_szPacketNames, BOOL p_bWithReset)	{}

  00000	c2 0c 00	 ret	 12			; 0000000cH
?OnPacketDataMultiItem@CChartAddInBase000000@@MAEXPBD0H@Z ENDP ; CChartAddInBase000000::OnPacketDataMultiItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnDrawAfterGraph@CChartAddInBase000000@@MAEXPAUHDC__@@@Z
_TEXT	SEGMENT
_p_hDC$ = 8						; size = 4
?OnDrawAfterGraph@CChartAddInBase000000@@MAEXPAUHDC__@@@Z PROC ; CChartAddInBase000000::OnDrawAfterGraph, COMDAT
; _this$ = ecx

; 134  : 	virtual void	OnDrawAfterGraph( HDC p_hDC)	{}

  00000	c2 04 00	 ret	 4
?OnDrawAfterGraph@CChartAddInBase000000@@MAEXPAUHDC__@@@Z ENDP ; CChartAddInBase000000::OnDrawAfterGraph
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnDrawBeforeGraph@CChartAddInBase000000@@MAEXPAUHDC__@@@Z
_TEXT	SEGMENT
_p_hDC$ = 8						; size = 4
?OnDrawBeforeGraph@CChartAddInBase000000@@MAEXPAUHDC__@@@Z PROC ; CChartAddInBase000000::OnDrawBeforeGraph, COMDAT
; _this$ = ecx

; 132  : 	virtual void	OnDrawBeforeGraph( HDC p_hDC)	{}

  00000	c2 04 00	 ret	 4
?OnDrawBeforeGraph@CChartAddInBase000000@@MAEXPAUHDC__@@@Z ENDP ; CChartAddInBase000000::OnDrawBeforeGraph
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnResetChart@CChartAddInBase000000@@MAEXXZ
_TEXT	SEGMENT
?OnResetChart@CChartAddInBase000000@@MAEXXZ PROC	; CChartAddInBase000000::OnResetChart, COMDAT
; _this$ = ecx

; 130  : 	virtual void	OnResetChart( void)	{}

  00000	c2 00 00	 ret	 0
?OnResetChart@CChartAddInBase000000@@MAEXXZ ENDP	; CChartAddInBase000000::OnResetChart
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnLSharedDataChange@CChartAddInBase000000@@MAEXPBD0@Z
_TEXT	SEGMENT
_p_szLShareKey$ = 8					; size = 4
_p_szLShareValue$ = 12					; size = 4
?OnLSharedDataChange@CChartAddInBase000000@@MAEXPBD0@Z PROC ; CChartAddInBase000000::OnLSharedDataChange, COMDAT
; _this$ = ecx

; 128  : 	virtual void	OnLSharedDataChange( const char *p_szLShareKey, const char *p_szLShareValue)	{}

  00000	c2 08 00	 ret	 8
?OnLSharedDataChange@CChartAddInBase000000@@MAEXPBD0@Z ENDP ; CChartAddInBase000000::OnLSharedDataChange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?OnGSharedDataChange@CChartAddInBase000000@@MAEXPBD0H@Z
_TEXT	SEGMENT
_p_szGShareKey$ = 8					; size = 4
_p_szGShareValue$ = 12					; size = 4
_p_bStartShare$ = 16					; size = 4
?OnGSharedDataChange@CChartAddInBase000000@@MAEXPBD0H@Z PROC ; CChartAddInBase000000::OnGSharedDataChange, COMDAT
; _this$ = ecx

; 126  : 	virtual void	OnGSharedDataChange( const char *p_szGShareKey, const char *p_szGShareValue, BOOL p_bStartShare)	{}

  00000	c2 0c 00	 ret	 12			; 0000000cH
?OnGSharedDataChange@CChartAddInBase000000@@MAEXPBD0H@Z ENDP ; CChartAddInBase000000::OnGSharedDataChange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?ChangeChartMode@CChartAddInBase000000@@MAEXW4CHART_MODE@CChartInfo@@@Z
_TEXT	SEGMENT
_p_eChartMode$ = 8					; size = 4
?ChangeChartMode@CChartAddInBase000000@@MAEXW4CHART_MODE@CChartInfo@@@Z PROC ; CChartAddInBase000000::ChangeChartMode, COMDAT
; _this$ = ecx

; 116  : 	virtual void	ChangeChartMode( CChartInfo::CHART_MODE p_eChartMode)	{	m_eChartMode = p_eChartMode;	}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p_eChartMode$[ebp]
  00006	89 41 34	 mov	 DWORD PTR [ecx+52], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?ChangeChartMode@CChartAddInBase000000@@MAEXW4CHART_MODE@CChartInfo@@@Z ENDP ; CChartAddInBase000000::ChangeChartMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?AfeterOnOcxDestroyWindow@CChartAddInBase000000@@MAEXXZ
_TEXT	SEGMENT
?AfeterOnOcxDestroyWindow@CChartAddInBase000000@@MAEXXZ PROC ; CChartAddInBase000000::AfeterOnOcxDestroyWindow, COMDAT
; _this$ = ecx

; 109  : 	virtual void	AfeterOnOcxDestroyWindow( void)							{}

  00000	c2 00 00	 ret	 0
?AfeterOnOcxDestroyWindow@CChartAddInBase000000@@MAEXXZ ENDP ; CChartAddInBase000000::AfeterOnOcxDestroyWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?InvokeAddInStr@CChartAddInBase000000@@MAEHPBD0@Z
_TEXT	SEGMENT
_p_szCommandName$ = 8					; size = 4
_p_szData$ = 12						; size = 4
?InvokeAddInStr@CChartAddInBase000000@@MAEHPBD0@Z PROC	; CChartAddInBase000000::InvokeAddInStr, COMDAT
; _this$ = ecx

; 92   : 	virtual BOOL	InvokeAddInStr( LPCTSTR p_szCommandName, LPCTSTR p_szData)	{	return FALSE;	}	// (2005/9/2 - Seung-Won, Bae) for String Data

  00000	33 c0		 xor	 eax, eax
  00002	c2 08 00	 ret	 8
?InvokeAddInStr@CChartAddInBase000000@@MAEHPBD0@Z ENDP	; CChartAddInBase000000::InvokeAddInStr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\I000000\_ChartAddInBase.h
;	COMDAT ?InvokeAddIn@CChartAddInBase000000@@MAEHHJ@Z
_TEXT	SEGMENT
_p_nCommandType$ = 8					; size = 4
_p_lData$ = 12						; size = 4
?InvokeAddIn@CChartAddInBase000000@@MAEHHJ@Z PROC	; CChartAddInBase000000::InvokeAddIn, COMDAT
; _this$ = ecx

; 91   : 	virtual BOOL	InvokeAddIn( int p_nCommandType, long p_lData)	{	return FALSE;	}

  00000	33 c0		 xor	 eax, eax
  00002	c2 08 00	 ret	 8
?InvokeAddIn@CChartAddInBase000000@@MAEHHJ@Z ENDP	; CChartAddInBase000000::InvokeAddIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\_IWUnknown.h
;	COMDAT ?PreDestruct@CIWUnknown@@MAEXXZ
_TEXT	SEGMENT
?PreDestruct@CIWUnknown@@MAEXXZ PROC			; CIWUnknown::PreDestruct, COMDAT
; _this$ = ecx

; 49   : 	virtual void	PreDestruct( void)		{}

  00000	c2 00 00	 ret	 0
?PreDestruct@CIWUnknown@@MAEXXZ ENDP			; CIWUnknown::PreDestruct
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\_IWUnknown.h
;	COMDAT ?PreDestructX@CIWUnknown@@MAEXXZ
_TEXT	SEGMENT
?PreDestructX@CIWUnknown@@MAEXXZ PROC			; CIWUnknown::PreDestructX, COMDAT
; _this$ = ecx

; 48   : 	virtual void	PreDestructX( void)		{}

  00000	c2 00 00	 ret	 0
?PreDestructX@CIWUnknown@@MAEXXZ ENDP			; CIWUnknown::PreDestructX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\Include_AddIn\_IWUnknown.h
;	COMDAT ?PostConstruct@CIWUnknown@@MAEXXZ
_TEXT	SEGMENT
?PostConstruct@CIWUnknown@@MAEXXZ PROC			; CIWUnknown::PostConstruct, COMDAT
; _this$ = ecx

; 47   : 	virtual void	PostConstruct( void)	{}

  00000	c2 00 00	 ret	 0
?PostConstruct@CIWUnknown@@MAEXXZ ENDP			; CIWUnknown::PostConstruct
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC		; CObject::Dump, COMDAT
; _this$ = ecx

; 122  : 	{ /* no dumping in release builds */ }

  00000	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
?AssertValid@CObject@@UBEXXZ PROC			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 120  : 	{ /* no asserts in release builds */ }

  00000	c2 00 00	 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC		; CObject::Serialize, COMDAT
; _this$ = ecx

; 106  : 	{ /* CObject does not serialize anything by default */ }

  00000	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CObject@@SGXPAX@Z PROC				; CObject::operator delete, COMDAT

; 112  : 	{ ::operator delete(p); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 08	 push	 DWORD PTR _p$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	83 c4 04	 add	 esp, 4
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT
??1CObject@@UAE@XZ PROC					; CObject::~CObject, COMDAT
; _this$ = ecx

; 104  : 	{ }

  00000	c2 00 00	 ret	 0
??1CObject@@UAE@XZ ENDP					; CObject::~CObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartOCX\AddInManager\ChartCommonAddIn\DataInterfaceAddInImp.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
