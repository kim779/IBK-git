; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

	TITLE	D:\git\src\IBK\IBK_DRFN\#DRfn-CS\_Obj\ChartDesignPropertyAddIn\LineColor.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1CObject@@UAE@XZ				; CObject::~CObject
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	?MakeFromSixLineColorStringToOneString@CLineColor@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CLineColor::MakeFromSixLineColorStringToOneString
PUBLIC	?SetLineColor@CLineColor@@QAEXHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CLineColor::SetLineColor
PUBLIC	??0CLineColor@@QAE@XZ				; CLineColor::CLineColor
PUBLIC	??1CLineColor@@UAE@XZ				; CLineColor::~CLineColor
PUBLIC	??0?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAE@H@Z ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >
PUBLIC	?RemoveHead@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::RemoveHead
PUBLIC	?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::AddTail
PUBLIC	?RemoveAll@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEXXZ ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::RemoveAll
PUBLIC	?NewNode@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@IAEPAUCNode@1@PAU21@0@Z ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::NewNode
PUBLIC	?FreeNode@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@IAEXPAUCNode@1@@Z ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::FreeNode
PUBLIC	??1?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAE@XZ ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::~CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >
PUBLIC	?Serialize@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEXAAVCArchive@@@Z ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::Serialize
PUBLIC	??_G?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEPAXI@Z ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::`scalar deleting destructor'
PUBLIC	??_GCLineColor@@UAEPAXI@Z			; CLineColor::`scalar deleting destructor'
PUBLIC	??0CGraphSetting2Data@@QAE@_N000H@Z		; CGraphSetting2Data::CGraphSetting2Data
PUBLIC	?IsHighNow@CGraphSetting2Data@@QBE_NXZ		; CGraphSetting2Data::IsHighNow
PUBLIC	?IsLowHigh@CGraphSetting2Data@@QBE_NXZ		; CGraphSetting2Data::IsLowHigh
PUBLIC	?IsLowNow@CGraphSetting2Data@@QBE_NXZ		; CGraphSetting2Data::IsLowNow
PUBLIC	?IsPrevNow@CGraphSetting2Data@@QBE_NXZ		; CGraphSetting2Data::IsPrevNow
PUBLIC	?GetCurDataType@CGraphSetting2Data@@QBEHXZ	; CGraphSetting2Data::GetCurDataType
PUBLIC	?SetData@CGraphSetting2Data@@QAEX_N000H@Z	; CGraphSetting2Data::SetData
PUBLIC	?SetHighNow@CGraphSetting2Data@@QAEX_N@Z	; CGraphSetting2Data::SetHighNow
PUBLIC	?SetLowHigh@CGraphSetting2Data@@QAEX_N@Z	; CGraphSetting2Data::SetLowHigh
PUBLIC	?SetLowNow@CGraphSetting2Data@@QAEX_N@Z		; CGraphSetting2Data::SetLowNow
PUBLIC	?SetPrevNow@CGraphSetting2Data@@QAEX_N@Z	; CGraphSetting2Data::SetPrevNow
PUBLIC	?SetCurDataType@CGraphSetting2Data@@QAEXH@Z	; CGraphSetting2Data::SetCurDataType
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@6B@ ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::`vftable'
PUBLIC	??_7CLineColor@@6B@				; CLineColor::`vftable'
PUBLIC	??_C@_01ICJEACDI@?$DL@				; `string'
PUBLIC	??_R4CLineColor@@6B@				; CLineColor::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCLineColor@@@8				; CLineColor `RTTI Type Descriptor'
PUBLIC	??_R3CLineColor@@8				; CLineColor::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CLineColor@@8				; CLineColor::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CLineColor@@8			; CLineColor::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@6B@ ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@@8 ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > > `RTTI Type Descriptor'
PUBLIC	??_R3?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@8 ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@8 ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@8 ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_L@YGXPAXIIP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	___std_terminate:PROC
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CObject::GetRuntimeClass
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_??Y?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV?$CSimpleStringT@D$00@1@@Z:PROC
EXTRN	__imp_??Y?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z:PROC
EXTRN	__imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z:PROC
EXTRN	__imp_?Right@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z:PROC
EXTRN	?ReadCount@CArchive@@QAEKXZ:PROC		; CArchive::ReadCount
EXTRN	?WriteCount@CArchive@@QAEXK@Z:PROC		; CArchive::WriteCount
EXTRN	?Create@CPlex@@SGPAU1@AAPAU1@II@Z:PROC		; CPlex::Create
EXTRN	?FreeDataChain@CPlex@@QAEXXZ:PROC		; CPlex::FreeDataChain
EXTRN	??$SerializeElements@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@@YGXAAVCArchive@@PAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z:PROC ; SerializeElements<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >
EXTRN	??_E?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEPAXI@Z:PROC ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::`vector deleting destructor'
EXTRN	??_ECLineColor@@UAEPAXI@Z:PROC			; CLineColor::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@8 DD FLAT:??_R0?AV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@@8 ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@8
rdata$r	SEGMENT
??_R2?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@8 DD FLAT:??_R1A@?0A@EA@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@8 ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@8
rdata$r	SEGMENT
??_R3?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@8 DD 00H ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@@8
data$rs	SEGMENT
??_R0?AV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@@8 DD FLAT:??_7type_info@@6B@ ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraits'
	DB	'CRT@D@ATL@@@@@ATL@@V12@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@6B@
rdata$r	SEGMENT
??_R4?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@6B@ DD 00H ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@@8
	DD	FLAT:??_R3?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CLineColor@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CLineColor@@8 DD FLAT:??_R0?AVCLineColor@@@8 ; CLineColor::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CLineColor@@8
rdata$r	ENDS
;	COMDAT ??_R2CLineColor@@8
rdata$r	SEGMENT
??_R2CLineColor@@8 DD FLAT:??_R1A@?0A@EA@CLineColor@@8	; CLineColor::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CLineColor@@8
rdata$r	SEGMENT
??_R3CLineColor@@8 DD 00H				; CLineColor::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CLineColor@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCLineColor@@@8
data$rs	SEGMENT
??_R0?AVCLineColor@@@8 DD FLAT:??_7type_info@@6B@	; CLineColor `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCLineColor@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CLineColor@@6B@
rdata$r	SEGMENT
??_R4CLineColor@@6B@ DD 00H				; CLineColor::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCLineColor@@@8
	DD	FLAT:??_R3CLineColor@@8
rdata$r	ENDS
;	COMDAT ??_C@_01ICJEACDI@?$DL@
CONST	SEGMENT
??_C@_01ICJEACDI@?$DL@ DB ';', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CLineColor@@6B@
CONST	SEGMENT
??_7CLineColor@@6B@ DD FLAT:??_R4CLineColor@@6B@	; CLineColor::`vftable'
	DD	FLAT:??_ECLineColor@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@6B@
CONST	SEGMENT
??_7?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@6B@ DD FLAT:??_R4?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@6B@ ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$rs	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$rs	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GCLineColor@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_GCLineColor@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_GCLineColor@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Serialize@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEXAAVCArchive@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Serialize@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEXAAVCArchive@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Serialize@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEXAAVCArchive@@@Z$2
__ehfuncinfo$?Serialize@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEXAAVCArchive@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Serialize@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEXAAVCArchive@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$0
__ehfuncinfo$?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RemoveHead@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemoveHead@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0
__ehfuncinfo$?RemoveHead@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RemoveHead@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CLineColor@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1CLineColor@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CLineColor@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?MakeFromSixLineColorStringToOneString@CLineColor@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?MakeFromSixLineColorStringToOneString@CLineColor@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?MakeFromSixLineColorStringToOneString@CLineColor@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeFromSixLineColorStringToOneString@CLineColor@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeFromSixLineColorStringToOneString@CLineColor@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeFromSixLineColorStringToOneString@CLineColor@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?MakeFromSixLineColorStringToOneString@CLineColor@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z$7
	DD	02H
	DD	FLAT:__unwindfunclet$?MakeFromSixLineColorStringToOneString@CLineColor@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z$6
xdata$x	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
;	COMDAT ?SetCurDataType@CGraphSetting2Data@@QAEXH@Z
_TEXT	SEGMENT
_nCurDataType$ = 8					; size = 4
?SetCurDataType@CGraphSetting2Data@@QAEXH@Z PROC	; CGraphSetting2Data::SetCurDataType, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 132  : 	m_nCurDataType = nCurDataType;

  00003	8b 45 08	 mov	 eax, DWORD PTR _nCurDataType$[ebp]
  00006	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 133  : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetCurDataType@CGraphSetting2Data@@QAEXH@Z ENDP	; CGraphSetting2Data::SetCurDataType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
;	COMDAT ?SetPrevNow@CGraphSetting2Data@@QAEX_N@Z
_TEXT	SEGMENT
_bPrevNow$ = 8						; size = 1
?SetPrevNow@CGraphSetting2Data@@QAEX_N@Z PROC		; CGraphSetting2Data::SetPrevNow, COMDAT
; _this$ = ecx

; 126  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 127  : 	m_bPrevNow = bPrevNow;

  00003	8a 45 08	 mov	 al, BYTE PTR _bPrevNow$[ebp]
  00006	88 41 03	 mov	 BYTE PTR [ecx+3], al

; 128  : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetPrevNow@CGraphSetting2Data@@QAEX_N@Z ENDP		; CGraphSetting2Data::SetPrevNow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
;	COMDAT ?SetLowNow@CGraphSetting2Data@@QAEX_N@Z
_TEXT	SEGMENT
_bLowNow$ = 8						; size = 1
?SetLowNow@CGraphSetting2Data@@QAEX_N@Z PROC		; CGraphSetting2Data::SetLowNow, COMDAT
; _this$ = ecx

; 121  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 122  : 	m_bLowNow = bLowNow;

  00003	8a 45 08	 mov	 al, BYTE PTR _bLowNow$[ebp]
  00006	88 41 02	 mov	 BYTE PTR [ecx+2], al

; 123  : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetLowNow@CGraphSetting2Data@@QAEX_N@Z ENDP		; CGraphSetting2Data::SetLowNow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
;	COMDAT ?SetLowHigh@CGraphSetting2Data@@QAEX_N@Z
_TEXT	SEGMENT
_bLowHigh$ = 8						; size = 1
?SetLowHigh@CGraphSetting2Data@@QAEX_N@Z PROC		; CGraphSetting2Data::SetLowHigh, COMDAT
; _this$ = ecx

; 116  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 117  : 	m_bLowHigh = bLowHigh;

  00003	8a 45 08	 mov	 al, BYTE PTR _bLowHigh$[ebp]
  00006	88 41 01	 mov	 BYTE PTR [ecx+1], al

; 118  : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetLowHigh@CGraphSetting2Data@@QAEX_N@Z ENDP		; CGraphSetting2Data::SetLowHigh
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
;	COMDAT ?SetHighNow@CGraphSetting2Data@@QAEX_N@Z
_TEXT	SEGMENT
_bHighNow$ = 8						; size = 1
?SetHighNow@CGraphSetting2Data@@QAEX_N@Z PROC		; CGraphSetting2Data::SetHighNow, COMDAT
; _this$ = ecx

; 111  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 112  : 	m_bHighNow = bHighNow;

  00003	8a 45 08	 mov	 al, BYTE PTR _bHighNow$[ebp]
  00006	88 01		 mov	 BYTE PTR [ecx], al

; 113  : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?SetHighNow@CGraphSetting2Data@@QAEX_N@Z ENDP		; CGraphSetting2Data::SetHighNow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
;	COMDAT ?SetData@CGraphSetting2Data@@QAEX_N000H@Z
_TEXT	SEGMENT
_bHighNow$ = 8						; size = 1
_bLowHigh$ = 12						; size = 1
_bLowNow$ = 16						; size = 1
_bPrevNow$ = 20						; size = 1
_nCurDataType$ = 24					; size = 4
?SetData@CGraphSetting2Data@@QAEX_N000H@Z PROC		; CGraphSetting2Data::SetData, COMDAT
; _this$ = ecx

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 103  : 	m_bHighNow = bHighNow;

  00003	8a 45 08	 mov	 al, BYTE PTR _bHighNow$[ebp]
  00006	88 01		 mov	 BYTE PTR [ecx], al

; 104  : 	m_bLowHigh = bLowHigh;

  00008	8a 45 0c	 mov	 al, BYTE PTR _bLowHigh$[ebp]
  0000b	88 41 01	 mov	 BYTE PTR [ecx+1], al

; 105  : 	m_bLowNow = bLowNow;

  0000e	8a 45 10	 mov	 al, BYTE PTR _bLowNow$[ebp]
  00011	88 41 02	 mov	 BYTE PTR [ecx+2], al

; 106  : 	m_bPrevNow = bPrevNow;

  00014	8a 45 14	 mov	 al, BYTE PTR _bPrevNow$[ebp]
  00017	88 41 03	 mov	 BYTE PTR [ecx+3], al

; 107  : 	m_nCurDataType = nCurDataType;

  0001a	8b 45 18	 mov	 eax, DWORD PTR _nCurDataType$[ebp]
  0001d	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 108  : }

  00020	5d		 pop	 ebp
  00021	c2 14 00	 ret	 20			; 00000014H
?SetData@CGraphSetting2Data@@QAEX_N000H@Z ENDP		; CGraphSetting2Data::SetData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
;	COMDAT ?GetCurDataType@CGraphSetting2Data@@QBEHXZ
_TEXT	SEGMENT
?GetCurDataType@CGraphSetting2Data@@QBEHXZ PROC		; CGraphSetting2Data::GetCurDataType, COMDAT
; _this$ = ecx

; 97   : 	return m_nCurDataType;

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 98   : }

  00003	c3		 ret	 0
?GetCurDataType@CGraphSetting2Data@@QBEHXZ ENDP		; CGraphSetting2Data::GetCurDataType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
;	COMDAT ?IsPrevNow@CGraphSetting2Data@@QBE_NXZ
_TEXT	SEGMENT
?IsPrevNow@CGraphSetting2Data@@QBE_NXZ PROC		; CGraphSetting2Data::IsPrevNow, COMDAT
; _this$ = ecx

; 92   : 	return m_bPrevNow;

  00000	8a 41 03	 mov	 al, BYTE PTR [ecx+3]

; 93   : }

  00003	c3		 ret	 0
?IsPrevNow@CGraphSetting2Data@@QBE_NXZ ENDP		; CGraphSetting2Data::IsPrevNow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
;	COMDAT ?IsLowNow@CGraphSetting2Data@@QBE_NXZ
_TEXT	SEGMENT
?IsLowNow@CGraphSetting2Data@@QBE_NXZ PROC		; CGraphSetting2Data::IsLowNow, COMDAT
; _this$ = ecx

; 87   : 	return m_bLowNow;

  00000	8a 41 02	 mov	 al, BYTE PTR [ecx+2]

; 88   : }

  00003	c3		 ret	 0
?IsLowNow@CGraphSetting2Data@@QBE_NXZ ENDP		; CGraphSetting2Data::IsLowNow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
;	COMDAT ?IsLowHigh@CGraphSetting2Data@@QBE_NXZ
_TEXT	SEGMENT
?IsLowHigh@CGraphSetting2Data@@QBE_NXZ PROC		; CGraphSetting2Data::IsLowHigh, COMDAT
; _this$ = ecx

; 82   : 	return m_bLowHigh;

  00000	8a 41 01	 mov	 al, BYTE PTR [ecx+1]

; 83   : }

  00003	c3		 ret	 0
?IsLowHigh@CGraphSetting2Data@@QBE_NXZ ENDP		; CGraphSetting2Data::IsLowHigh
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
;	COMDAT ?IsHighNow@CGraphSetting2Data@@QBE_NXZ
_TEXT	SEGMENT
?IsHighNow@CGraphSetting2Data@@QBE_NXZ PROC		; CGraphSetting2Data::IsHighNow, COMDAT
; _this$ = ecx

; 77   : 	return m_bHighNow;

  00000	8a 01		 mov	 al, BYTE PTR [ecx]

; 78   : }

  00002	c3		 ret	 0
?IsHighNow@CGraphSetting2Data@@QBE_NXZ ENDP		; CGraphSetting2Data::IsHighNow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
;	COMDAT ??0CGraphSetting2Data@@QAE@_N000H@Z
_TEXT	SEGMENT
_bHighNow$ = 8						; size = 1
_bLowHigh$ = 12						; size = 1
_bLowNow$ = 16						; size = 1
_bPrevNow$ = 20						; size = 1
_nCurDataType$ = 24					; size = 4
??0CGraphSetting2Data@@QAE@_N000H@Z PROC		; CGraphSetting2Data::CGraphSetting2Data, COMDAT
; _this$ = ecx

; 72   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   : 	m_bHighNow(bHighNow), 

  00003	8a 45 08	 mov	 al, BYTE PTR _bHighNow$[ebp]
  00006	88 01		 mov	 BYTE PTR [ecx], al

; 68   : 	m_bLowHigh(bLowHigh), 

  00008	8a 45 0c	 mov	 al, BYTE PTR _bLowHigh$[ebp]
  0000b	88 41 01	 mov	 BYTE PTR [ecx+1], al

; 69   : 	m_bLowNow(bLowNow), 

  0000e	8a 45 10	 mov	 al, BYTE PTR _bLowNow$[ebp]
  00011	88 41 02	 mov	 BYTE PTR [ecx+2], al

; 70   : 	m_bPrevNow(bPrevNow), 

  00014	8a 45 14	 mov	 al, BYTE PTR _bPrevNow$[ebp]
  00017	88 41 03	 mov	 BYTE PTR [ecx+3], al

; 71   : 	m_nCurDataType(nCurDataType)

  0001a	8b 45 18	 mov	 eax, DWORD PTR _nCurDataType$[ebp]
  0001d	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 73   : }

  00020	8b c1		 mov	 eax, ecx
  00022	5d		 pop	 ebp
  00023	c2 14 00	 ret	 20			; 00000014H
??0CGraphSetting2Data@@QAE@_N000H@Z ENDP		; CGraphSetting2Data::CGraphSetting2Data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??_GCLineColor@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GCLineColor@@UAEPAXI@Z PROC				; CLineColor::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GCLineColor@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp

; 24   : {

  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CLineColor@@6B@

; 26   : }

  0002b	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 878  : {

  0002e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00035	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@6B@

; 879  : 	RemoveAll();

  0003b	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEXXZ ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::RemoveAll
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp

; 26   : }

  00040	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 878  : {

  00043	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  0004a	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@6B@

; 879  : 	RemoveAll();

  00050	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEXXZ ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::RemoveAll
  00055	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00059	74 0b		 je	 SHORT $LN13@scalar
  0005b	6a 3c		 push	 60			; 0000003cH
  0005d	56		 push	 esi
  0005e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00063	83 c4 08	 add	 esp, 8
$LN13@scalar:
  00066	8b c6		 mov	 eax, esi
  00068	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00072	59		 pop	 ecx
  00073	5e		 pop	 esi
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
  0007a	cc		 int	 3
  0007b	cc		 int	 3
  0007c	cc		 int	 3
  0007d	cc		 int	 3
  0007e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_GCLineColor@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GCLineColor@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GCLineColor@@UAEPAXI@Z ENDP				; CLineColor::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??_G?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEPAXI@Z PROC ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 878  : {

  00025	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@6B@

; 879  : 	RemoveAll();

  00032	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEXXZ ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::RemoveAll
  00037	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0003a	a8 01		 test	 al, 1
  0003c	74 2c		 je	 SHORT $LN12@scalar
  0003e	a8 04		 test	 al, 4
  00040	75 1d		 jne	 SHORT $LN3@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 112  : 	{ ::operator delete(p); }

  00042	56		 push	 esi
  00043	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00048	83 c4 04	 add	 esp, 4
  0004b	8b c6		 mov	 eax, esi
  0004d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00050	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00057	59		 pop	 ecx
  00058	5e		 pop	 esi
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
$LN3@scalar:
  0005f	6a 1c		 push	 28			; 0000001cH
  00061	56		 push	 esi
  00062	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00067	83 c4 08	 add	 esp, 8
$LN12@scalar:
  0006a	8b c6		 mov	 eax, esi
  0006c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00076	59		 pop	 ecx
  00077	5e		 pop	 esi
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
  0007e	cc		 int	 3
  0007f	cc		 int	 3
  00080	cc		 int	 3
  00081	cc		 int	 3
  00082	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEPAXI@Z ENDP ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_nNewCount$1$ = -24					; size = 4
$T2 = -20						; size = 4
_newData$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ar$ = 8						; size = 4
?Serialize@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEXAAVCArchive@@@Z PROC ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::Serialize, COMDAT
; _this$ = ecx

; 1169 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Serialize@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEXAAVCArchive@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  0002a	8b 5d 08	 mov	 ebx, DWORD PTR _ar$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1174 : 	if (ar.IsStoring())

  0002d	8b cb		 mov	 ecx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl

; 212  : 	{ return (m_nMode & CArchive::load) == 0; }

  0002f	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00032	f7 d0		 not	 eax
  00034	a8 01		 test	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1174 : 	if (ar.IsStoring())

  00036	74 35		 je	 SHORT $LN7@Serialize

; 1175 : 	{
; 1176 : 		ar.WriteCount(m_nCount);

  00038	ff 77 0c	 push	 DWORD PTR [edi+12]
  0003b	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1177 : 		for (CNode* pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  00040	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00043	85 f6		 test	 esi, esi
  00045	74 12		 je	 SHORT $LN48@Serialize
$LL4@Serialize:

; 1178 : 		{
; 1179 : 			ASSERT(AfxIsValidAddress(pNode, sizeof(CNode)));
; 1180 : 			TYPE* pData;
; 1181 : 			/*
; 1182 : 			 * in some cases the & operator might be overloaded, and we cannot use it to obtain
; 1183 : 			 * the address of a given object.  We then use the following trick to get the address
; 1184 : 			 */
; 1185 : 			pData = reinterpret_cast< TYPE* >( &reinterpret_cast< int& >( static_cast< TYPE& >( pNode->data ) ) );
; 1186 : 			SerializeElements<TYPE>(ar, pData, 1);

  00047	6a 01		 push	 1
  00049	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  0004c	50		 push	 eax
  0004d	53		 push	 ebx
  0004e	e8 00 00 00 00	 call	 ??$SerializeElements@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@@YGXAAVCArchive@@PAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; SerializeElements<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >
  00053	8b 36		 mov	 esi, DWORD PTR [esi]
  00055	85 f6		 test	 esi, esi
  00057	75 ee		 jne	 SHORT $LL4@Serialize
$LN48@Serialize:

; 1198 : 	}
; 1199 : }

  00059	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00063	59		 pop	 ecx
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	5b		 pop	 ebx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 04 00	 ret	 4
$LN7@Serialize:

; 1187 : 		}
; 1188 : 	}
; 1189 : 	else
; 1190 : 	{
; 1191 : 		DWORD_PTR nNewCount = ar.ReadCount();

  0006d	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount

; 1192 : 		while (nNewCount--)

  00072	85 c0		 test	 eax, eax
  00074	74 e3		 je	 SHORT $LN48@Serialize
  00076	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL5@Serialize:

; 1193 : 		{
; 1194 : 			TYPE newData[1];

  00080	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00086	48		 dec	 eax
  00087	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0008d	89 45 e8	 mov	 DWORD PTR _nNewCount$1$[ebp], eax
  00090	8d 45 f0	 lea	 eax, DWORD PTR _newData$3[ebp]
  00093	6a 01		 push	 1
  00095	6a 04		 push	 4
  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z

; 1195 : 			SerializeElements<TYPE>(ar, newData, 1);

  0009d	6a 01		 push	 1
  0009f	8d 45 f0	 lea	 eax, DWORD PTR _newData$3[ebp]
  000a2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000a9	50		 push	 eax
  000aa	53		 push	 ebx
  000ab	e8 00 00 00 00	 call	 ??$SerializeElements@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@@YGXAAVCArchive@@PAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; SerializeElements<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >

; 1196 : 			AddTail(newData[0]);

  000b0	8d 45 f0	 lea	 eax, DWORD PTR _newData$3[ebp]
  000b3	50		 push	 eax
  000b4	8d 4d ec	 lea	 ecx, DWORD PTR $T2[ebp]
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 902  : 	if (m_pNodeFree == NULL)

  000bd	8b 5f 10	 mov	 ebx, DWORD PTR [edi+16]

; 968  : 	CNode* pNewNode = NewNode(m_pNodeTail, NULL);

  000c0	8b 77 08	 mov	 esi, DWORD PTR [edi+8]
  000c3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 902  : 	if (m_pNodeFree == NULL)

  000c7	85 db		 test	 ebx, ebx
  000c9	75 40		 jne	 SHORT $LN46@Serialize

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  000cb	6a 0c		 push	 12			; 0000000cH
  000cd	ff 77 18	 push	 DWORD PTR [edi+24]
  000d0	8d 47 14	 lea	 eax, DWORD PTR [edi+20]
  000d3	50		 push	 eax
  000d4	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  000d9	8b 57 18	 mov	 edx, DWORD PTR [edi+24]
  000dc	8d 0c 52	 lea	 ecx, DWORD PTR [edx+edx*2]
  000df	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  000e2	83 c0 fc	 add	 eax, -4			; fffffffcH

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  000e5	83 c2 ff	 add	 edx, -1
  000e8	78 1a		 js	 SHORT $LN47@Serialize
  000ea	66 0f 1f 44 00
	00		 npad	 6
$LL22@Serialize:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  000f0	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  000f3	8b d8		 mov	 ebx, eax
  000f5	89 08		 mov	 DWORD PTR [eax], ecx

; 915  : 			m_pNodeFree = pNode;

  000f7	89 47 10	 mov	 DWORD PTR [edi+16], eax
  000fa	83 e8 0c	 sub	 eax, 12			; 0000000cH
  000fd	83 ea 01	 sub	 edx, 1
  00100	79 ee		 jns	 SHORT $LL22@Serialize
  00102	eb 03		 jmp	 SHORT $LN25@Serialize
$LN47@Serialize:
  00104	8b 5f 10	 mov	 ebx, DWORD PTR [edi+16]
$LN25@Serialize:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00107	85 db		 test	 ebx, ebx
  00109	74 6e		 je	 SHORT $LN34@Serialize
$LN46@Serialize:

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  0010b	8b 03		 mov	 eax, DWORD PTR [ebx]

; 922  : 	pNode->pPrev = pPrev;
; 923  : 	pNode->pNext = pNext;
; 924  : 	m_nCount++;
; 925  : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 926  : 
; 927  : #pragma push_macro("new")
; 928  : #undef new
; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;

  0010d	8d 4b 08	 lea	 ecx, DWORD PTR [ebx+8]
  00110	89 47 10	 mov	 DWORD PTR [edi+16], eax
  00113	89 73 04	 mov	 DWORD PTR [ebx+4], esi
  00116	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
  0011c	ff 47 0c	 inc	 DWORD PTR [edi+12]
  0011f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 969  : 	pNewNode->data = newElement;

  00125	8d 45 ec	 lea	 eax, DWORD PTR $T2[ebp]
  00128	50		 push	 eax
  00129	8d 4b 08	 lea	 ecx, DWORD PTR [ebx+8]
  0012c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z

; 970  : 	if (m_pNodeTail != NULL)

  00132	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00135	85 c0		 test	 eax, eax
  00137	74 04		 je	 SHORT $LN15@Serialize

; 971  : 		m_pNodeTail->pNext = pNewNode;

  00139	89 18		 mov	 DWORD PTR [eax], ebx
  0013b	eb 03		 jmp	 SHORT $LN16@Serialize
$LN15@Serialize:

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;

  0013d	89 5f 04	 mov	 DWORD PTR [edi+4], ebx
$LN16@Serialize:

; 974  : 	m_pNodeTail = pNewNode;
; 975  : 	return (POSITION) pNewNode;

  00140	8d 4d ec	 lea	 ecx, DWORD PTR $T2[ebp]
  00143	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  00146	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 1197 : 		}

  0014c	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00152	8d 45 f0	 lea	 eax, DWORD PTR _newData$3[ebp]
  00155	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0015c	6a 01		 push	 1
  0015e	6a 04		 push	 4
  00160	50		 push	 eax
  00161	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00166	8b 45 e8	 mov	 eax, DWORD PTR _nNewCount$1$[ebp]
  00169	85 c0		 test	 eax, eax
  0016b	0f 84 e8 fe ff
	ff		 je	 $LN48@Serialize

; 1192 : 		while (nNewCount--)

  00171	8b 5d 08	 mov	 ebx, DWORD PTR _ar$[ebp]
  00174	e9 07 ff ff ff	 jmp	 $LL5@Serialize
$LN34@Serialize:

; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00179	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN50@Serialize:
  0017e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Serialize@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEXAAVCArchive@@@Z$0:
  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00005	50		 push	 eax
  00006	6a 01		 push	 1
  00008	6a 04		 push	 4
  0000a	8d 45 f0	 lea	 eax, DWORD PTR _newData$3[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00013	c3		 ret	 0
__unwindfunclet$?Serialize@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEXAAVCArchive@@@Z$2:
  00014	8d 4d ec	 lea	 ecx, DWORD PTR $T2[ebp]
  00017	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0001d	cc		 int	 3
  0001e	cc		 int	 3
  0001f	cc		 int	 3
  00020	cc		 int	 3
  00021	cc		 int	 3
__ehhandler$?Serialize@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEXAAVCArchive@@@Z:
  00022	90		 npad	 1
  00023	90		 npad	 1
  00024	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00028	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002b	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0002e	33 c8		 xor	 ecx, eax
  00030	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00035	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Serialize@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEXAAVCArchive@@@Z
  0003a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Serialize@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAEXAAVCArchive@@@Z ENDP ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::Serialize
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAE@XZ PROC ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::~CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >, COMDAT
; _this$ = ecx

; 878  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00022	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@6B@

; 879  : 	RemoveAll();

  00028	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEXXZ ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::RemoveAll

; 880  : 	ASSERT(m_nCount == 0);
; 881  : }

  0002d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00030	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00037	59		 pop	 ecx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
  0003c	cc		 int	 3
  0003d	cc		 int	 3
  0003e	cc		 int	 3
  0003f	cc		 int	 3
  00040	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@UAE@XZ ENDP ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::~CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?FreeNode@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@IAEXPAUCNode@1@@Z
_TEXT	SEGMENT
_pNode$ = 8						; size = 4
?FreeNode@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@IAEXPAUCNode@1@@Z PROC ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::FreeNode, COMDAT
; _this$ = ecx

; 936  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 937  : 	pNode->data.~TYPE();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pNode$[ebp]
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 938  : 	pNode->pNext = m_pNodeFree;

  00013	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00016	89 06		 mov	 DWORD PTR [esi], eax

; 939  : 	m_pNodeFree = pNode;
; 940  : 	m_nCount--;

  00018	83 47 0c ff	 add	 DWORD PTR [edi+12], -1
  0001c	89 77 10	 mov	 DWORD PTR [edi+16], esi

; 941  : 	ASSERT(m_nCount >= 0);  // make sure we don't underflow
; 942  : 
; 943  : 	// if no more elements, cleanup completely
; 944  : 	if (m_nCount == 0)

  0001f	75 07		 jne	 SHORT $LN2@FreeNode

; 945  : 		RemoveAll();

  00021	8b cf		 mov	 ecx, edi
  00023	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEXXZ ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::RemoveAll
$LN2@FreeNode:

; 946  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?FreeNode@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@IAEXPAUCNode@1@@Z ENDP ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::FreeNode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?NewNode@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@IAEPAUCNode@1@PAU21@0@Z
_TEXT	SEGMENT
_pPrev$ = 8						; size = 4
_pNext$ = 12						; size = 4
?NewNode@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@IAEPAUCNode@1@PAU21@0@Z PROC ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::NewNode, COMDAT
; _this$ = ecx

; 901  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi

; 902  : 	if (m_pNodeFree == NULL)

  00007	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0000b	75 33		 jne	 SHORT $LN7@NewNode

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  0000d	6a 0c		 push	 12			; 0000000cH
  0000f	ff 76 18	 push	 DWORD PTR [esi+24]
  00012	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  0001b	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  0001e	83 c0 08	 add	 eax, 8
  00021	8d 0c 52	 lea	 ecx, DWORD PTR [edx+edx*2]
  00024	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00027	83 c0 f4	 add	 eax, -12		; fffffff4H

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  0002a	83 c2 ff	 add	 edx, -1
  0002d	78 11		 js	 SHORT $LN7@NewNode
  0002f	90		 npad	 1
$LL4@NewNode:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00030	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00033	89 08		 mov	 DWORD PTR [eax], ecx

; 915  : 			m_pNodeFree = pNode;

  00035	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00038	83 e8 0c	 sub	 eax, 12			; 0000000cH
  0003b	83 ea 01	 sub	 edx, 1
  0003e	79 f0		 jns	 SHORT $LL4@NewNode
$LN7@NewNode:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00040	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  00043	85 ff		 test	 edi, edi
  00045	74 24		 je	 SHORT $LN17@NewNode

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  00047	8b 07		 mov	 eax, DWORD PTR [edi]

; 922  : 	pNode->pPrev = pPrev;

  00049	8b 4d 08	 mov	 ecx, DWORD PTR _pPrev$[ebp]
  0004c	89 46 10	 mov	 DWORD PTR [esi+16], eax
  0004f	89 4f 04	 mov	 DWORD PTR [edi+4], ecx

; 923  : 	pNode->pNext = pNext;

  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _pNext$[ebp]
  00055	89 0f		 mov	 DWORD PTR [edi], ecx

; 924  : 	m_nCount++;
; 925  : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 926  : 
; 927  : #pragma push_macro("new")
; 928  : #undef new
; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;

  00057	8d 4f 08	 lea	 ecx, DWORD PTR [edi+8]
  0005a	ff 46 0c	 inc	 DWORD PTR [esi+12]
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 930  : #pragma pop_macro("new")
; 931  : 	return pNode;

  00063	8b c7		 mov	 eax, edi
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi

; 932  : }

  00067	5d		 pop	 ebp
  00068	c2 08 00	 ret	 8
$LN17@NewNode:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  0006b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN15@NewNode:
  00070	cc		 int	 3
?NewNode@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@IAEPAUCNode@1@PAU21@0@Z ENDP ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::NewNode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEXXZ PROC ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::RemoveAll, COMDAT
; _this$ = ecx

; 862  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 863  : 	ASSERT_VALID(this);
; 864  : 
; 865  : 	// destroy elements
; 866  : 	CNode* pNode;
; 867  : 	for (pNode = m_pNodeHead; pNode != NULL; pNode = pNode->pNext)

  00004	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00007	85 f6		 test	 esi, esi
  00009	74 14		 je	 SHORT $LN3@RemoveAll
  0000b	0f 1f 44 00 00	 npad	 5
$LL4@RemoveAll:

; 868  : 		pNode->data.~TYPE();

  00010	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00019	8b 36		 mov	 esi, DWORD PTR [esi]
  0001b	85 f6		 test	 esi, esi
  0001d	75 f1		 jne	 SHORT $LL4@RemoveAll
$LN3@RemoveAll:

; 869  : 
; 870  : 	m_nCount = 0;
; 871  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;
; 872  : 	m_pBlocks->FreeDataChain();

  0001f	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00022	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
  00029	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  00030	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00037	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  0003e	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 873  : 	m_pBlocks = NULL;

  00043	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi

; 874  : }

  0004c	c3		 ret	 0
?RemoveAll@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEXXZ ENDP ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::RemoveAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_newElement$ = 8					; size = 4
?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::AddTail, COMDAT
; _this$ = ecx

; 965  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx

; 902  : 	if (m_pNodeFree == NULL)

  00027	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0

; 966  : 	ASSERT_VALID(this);
; 967  : 
; 968  : 	CNode* pNewNode = NewNode(m_pNodeTail, NULL);

  0002b	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  0002e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 902  : 	if (m_pNodeFree == NULL)

  00035	75 39		 jne	 SHORT $LN12@AddTail

; 903  : 	{
; 904  : 		// add another block
; 905  : 		CPlex* pNewBlock = CPlex::Create(m_pBlocks, m_nBlockSize,

  00037	6a 0c		 push	 12			; 0000000cH
  00039	ff 76 18	 push	 DWORD PTR [esi+24]
  0003c	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create

; 906  : 				 sizeof(CNode));
; 907  : 
; 908  : 		// chain them into free list
; 909  : 		CNode* pNode = (CNode*) pNewBlock->data();
; 910  : 		// free in reverse order to make it easier to debug
; 911  : 		pNode += m_nBlockSize - 1;

  00045	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  00048	83 c0 08	 add	 eax, 8
  0004b	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]

; 912  : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pNode--)

  0004e	83 c2 ff	 add	 edx, -1
  00051	8d 0c 49	 lea	 ecx, DWORD PTR [ecx+ecx*2]
  00054	8d 0c 88	 lea	 ecx, DWORD PTR [eax+ecx*4]
  00057	78 17		 js	 SHORT $LN12@AddTail
  00059	0f 1f 80 00 00
	00 00		 npad	 7
$LL9@AddTail:

; 913  : 		{
; 914  : 			pNode->pNext = m_pNodeFree;

  00060	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00063	89 01		 mov	 DWORD PTR [ecx], eax

; 915  : 			m_pNodeFree = pNode;

  00065	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
  00068	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  0006b	83 ea 01	 sub	 edx, 1
  0006e	79 f0		 jns	 SHORT $LL9@AddTail
$LN12@AddTail:

; 916  : 		}
; 917  : 	}
; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  00070	8b 5e 10	 mov	 ebx, DWORD PTR [esi+16]
  00073	85 db		 test	 ebx, ebx
  00075	74 57		 je	 SHORT $LN24@AddTail

; 919  : 
; 920  : 	CList::CNode* pNode = m_pNodeFree;
; 921  : 	m_pNodeFree = m_pNodeFree->pNext;

  00077	8b 03		 mov	 eax, DWORD PTR [ebx]

; 922  : 	pNode->pPrev = pPrev;
; 923  : 	pNode->pNext = pNext;
; 924  : 	m_nCount++;
; 925  : 	ASSERT(m_nCount > 0);  // make sure we don't overflow
; 926  : 
; 927  : #pragma push_macro("new")
; 928  : #undef new
; 929  : 	::new( (void*)( &pNode->data ) ) TYPE;

  00079	8d 4b 08	 lea	 ecx, DWORD PTR [ebx+8]
  0007c	89 46 10	 mov	 DWORD PTR [esi+16], eax
  0007f	89 7b 04	 mov	 DWORD PTR [ebx+4], edi
  00082	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
  00088	ff 46 0c	 inc	 DWORD PTR [esi+12]
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 969  : 	pNewNode->data = newElement;

  00091	8d 45 08	 lea	 eax, DWORD PTR _newElement$[ebp]
  00094	50		 push	 eax
  00095	8d 4b 08	 lea	 ecx, DWORD PTR [ebx+8]
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z

; 970  : 	if (m_pNodeTail != NULL)

  0009e	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000a1	85 c0		 test	 eax, eax
  000a3	74 04		 je	 SHORT $LN2@AddTail

; 971  : 		m_pNodeTail->pNext = pNewNode;

  000a5	89 18		 mov	 DWORD PTR [eax], ebx
  000a7	eb 03		 jmp	 SHORT $LN3@AddTail
$LN2@AddTail:

; 972  : 	else
; 973  : 		m_pNodeHead = pNewNode;

  000a9	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
$LN3@AddTail:

; 974  : 	m_pNodeTail = pNewNode;
; 975  : 	return (POSITION) pNewNode;

  000ac	8d 4d 08	 lea	 ecx, DWORD PTR _newElement$[ebp]
  000af	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  000b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000b8	8b c3		 mov	 eax, ebx

; 976  : }

  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c4	59		 pop	 ecx
  000c5	5f		 pop	 edi
  000c6	5e		 pop	 esi
  000c7	5b		 pop	 ebx
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 04 00	 ret	 4
$LN24@AddTail:

; 918  : 	ENSURE(m_pNodeFree != NULL);  // we must have something

  000ce	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN22@AddTail:
  000d3	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$0:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _newElement$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
__ehhandler$?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:
  0000e	90		 npad	 1
  0000f	90		 npad	 1
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::AddTail
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveHead@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?RemoveHead@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::RemoveHead, COMDAT
; _this$ = ecx

; 1007 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RemoveHead@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx
  00028	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 1008 : 	ASSERT_VALID(this);
; 1009 : 	ENSURE(m_pNodeHead != NULL);  // don't call on empty list !!!

  0002f	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  00032	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00039	85 ff		 test	 edi, edi
  0003b	74 6a		 je	 SHORT $LN20@RemoveHead

; 1010 : 	ASSERT(AfxIsValidAddress(m_pNodeHead, sizeof(CNode)));
; 1011 : 
; 1012 : 	CNode* pOldNode = m_pNodeHead;
; 1013 : 	TYPE returnValue = pOldNode->data;

  0003d	8b 5d 08	 mov	 ebx, DWORD PTR ___$ReturnUdt$[ebp]
  00040	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  00043	50		 push	 eax
  00044	8b cb		 mov	 ecx, ebx
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 1020 : 	FreeNode(pOldNode);
; 1021 : 	return returnValue;

  0004c	8b 07		 mov	 eax, DWORD PTR [edi]
  0004e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00055	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T2[ebp], 1
  0005c	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0005f	85 c0		 test	 eax, eax
  00061	74 09		 je	 SHORT $LN6@RemoveHead

; 1014 : 
; 1015 : 	m_pNodeHead = pOldNode->pNext;
; 1016 : 	if (m_pNodeHead != NULL)
; 1017 : 		m_pNodeHead->pPrev = NULL;

  00063	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0006a	eb 07		 jmp	 SHORT $LN7@RemoveHead
$LN6@RemoveHead:

; 1018 : 	else
; 1019 : 		m_pNodeTail = NULL;

  0006c	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN7@RemoveHead:

; 937  : 	pNode->data.~TYPE();

  00073	8d 4f 08	 lea	 ecx, DWORD PTR [edi+8]
  00076	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 938  : 	pNode->pNext = m_pNodeFree;

  0007c	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0007f	89 07		 mov	 DWORD PTR [edi], eax

; 939  : 	m_pNodeFree = pNode;
; 940  : 	m_nCount--;

  00081	83 46 0c ff	 add	 DWORD PTR [esi+12], -1
  00085	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 941  : 	ASSERT(m_nCount >= 0);  // make sure we don't underflow
; 942  : 
; 943  : 	// if no more elements, cleanup completely
; 944  : 	if (m_nCount == 0)

  00088	75 07		 jne	 SHORT $LN12@RemoveHead

; 945  : 		RemoveAll();

  0008a	8b ce		 mov	 ecx, esi
  0008c	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEXXZ ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::RemoveAll
$LN12@RemoveHead:

; 1020 : 	FreeNode(pOldNode);
; 1021 : 	return returnValue;

  00091	8b c3		 mov	 eax, ebx

; 1022 : }

  00093	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00096	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009d	59		 pop	 ecx
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	5b		 pop	 ebx
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c2 04 00	 ret	 4
$LN20@RemoveHead:

; 1008 : 	ASSERT_VALID(this);
; 1009 : 	ENSURE(m_pNodeHead != NULL);  // don't call on empty list !!!

  000a7	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN18@RemoveHead:
  000ac	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RemoveHead@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0d 00 00
	00		 je	 $LN10@RemoveHead
  0000c	83 65 f0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00010	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00013	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN10@RemoveHead:
  00019	c3		 ret	 0
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?RemoveHead@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RemoveHead@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RemoveHead@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::RemoveHead
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAE@H@Z
_TEXT	SEGMENT
_nBlockSize$ = 8					; size = 4
??0?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAE@H@Z PROC ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >, COMDAT
; _this$ = ecx

; 851  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 852  : 	ASSERT(nBlockSize > 0);
; 853  : 
; 854  : 	m_nCount = 0;
; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;
; 856  : 	m_pBlocks = NULL;
; 857  : 	m_nBlockSize = nBlockSize;

  00003	8b 45 08	 mov	 eax, DWORD PTR _nBlockSize$[ebp]
  00006	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 858  : }

  00009	8b c1		 mov	 eax, ecx
  0000b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@6B@
  00011	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00018	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  0001f	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00026	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0002d	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
??0?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAE@H@Z ENDP ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
;	COMDAT ??1CLineColor@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CLineColor@@UAE@XZ PROC				; CLineColor::~CLineColor, COMDAT
; _this$ = ecx

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CLineColor@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CLineColor@@6B@

; 26   : }

  0002b	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 878  : {

  0002e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00035	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@6B@

; 879  : 	RemoveAll();

  0003b	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEXXZ ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::RemoveAll
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp

; 26   : }

  00040	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 878  : {

  00043	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  0004a	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@6B@

; 879  : 	RemoveAll();

  00050	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEXXZ ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::RemoveAll
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp

; 26   : }

  00055	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00058	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005f	59		 pop	 ecx
  00060	5e		 pop	 esi
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
  00065	cc		 int	 3
  00066	cc		 int	 3
  00067	cc		 int	 3
  00068	cc		 int	 3
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CLineColor@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CLineColor@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CLineColor@@UAE@XZ ENDP				; CLineColor::~CLineColor
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
;	COMDAT ??0CLineColor@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CLineColor@@QAE@XZ PROC				; CLineColor::CLineColor, COMDAT
; _this$ = ecx

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CLineColor@@6B@

; 21   : }

  0000a	8b c1		 mov	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 851  : {

  0000c	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_7?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@6B@

; 852  : 	ASSERT(nBlockSize > 0);
; 853  : 
; 854  : 	m_nCount = 0;

  00013	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  0001a	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
  00021	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00028	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 856  : 	m_pBlocks = NULL;

  0002f	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0

; 857  : 	m_nBlockSize = nBlockSize;

  00036	c7 41 1c 0a 00
	00 00		 mov	 DWORD PTR [ecx+28], 10	; 0000000aH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp

; 20   : {

  0003d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 851  : {

  00040	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], OFFSET ??_7?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@6B@

; 852  : 	ASSERT(nBlockSize > 0);
; 853  : 
; 854  : 	m_nCount = 0;

  00047	c7 41 2c 00 00
	00 00		 mov	 DWORD PTR [ecx+44], 0

; 855  : 	m_pNodeHead = m_pNodeTail = m_pNodeFree = NULL;

  0004e	c7 41 30 00 00
	00 00		 mov	 DWORD PTR [ecx+48], 0
  00055	c7 41 28 00 00
	00 00		 mov	 DWORD PTR [ecx+40], 0
  0005c	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0

; 856  : 	m_pBlocks = NULL;

  00063	c7 41 34 00 00
	00 00		 mov	 DWORD PTR [ecx+52], 0

; 857  : 	m_nBlockSize = nBlockSize;

  0006a	c7 41 38 0a 00
	00 00		 mov	 DWORD PTR [ecx+56], 10	; 0000000aH
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp

; 21   : }

  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
??0CLineColor@@QAE@XZ ENDP				; CLineColor::CLineColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
;	COMDAT ?SetLineColor@CLineColor@@QAEXHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_nLineIndex$ = 8					; size = 4
_strColorValue$ = 12					; size = 4
?SetLineColor@CLineColor@@QAEXHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC ; CLineColor::SetLineColor, COMDAT
; _this$ = ecx

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	57		 push	 edi

; 30   : 	m_pColorStringList.AddTail(strColorValue);

  00005	51		 push	 ecx
  00006	8b f9		 mov	 edi, ecx
  00008	8b cc		 mov	 ecx, esp
  0000a	ff 75 0c	 push	 DWORD PTR _strColorValue$[ebp]
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00013	8d 4f 20	 lea	 ecx, DWORD PTR [edi+32]
  00016	e8 00 00 00 00	 call	 ?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::AddTail

; 31   : 	m_pOriginalColorStringList.AddTail(strColorValue);

  0001b	51		 push	 ecx
  0001c	8b cc		 mov	 ecx, esp
  0001e	ff 75 0c	 push	 DWORD PTR _strColorValue$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00027	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0002a	e8 00 00 00 00	 call	 ?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::AddTail

; 32   : }

  0002f	5f		 pop	 edi
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 08 00	 ret	 8
?SetLineColor@CLineColor@@QAEXHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CLineColor::SetLineColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
;	COMDAT ?MakeFromSixLineColorStringToOneString@CLineColor@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT
_this$1$ = -40						; size = 4
$T2 = -36						; size = 4
$T3 = -32						; size = 4
_i$1$ = -28						; size = 4
_strValue$ = -24					; size = 4
_temp$4 = -20						; size = 4
_strColor$5 = -20					; size = 4
$T6 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_nGraphCount$ = 12					; size = 4
?MakeFromSixLineColorStringToOneString@CLineColor@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z PROC ; CLineColor::MakeFromSixLineColorStringToOneString, COMDAT
; _this$ = ecx

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?MakeFromSixLineColorStringToOneString@CLineColor@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx
  0002a	89 7d d8	 mov	 DWORD PTR _this$1$[ebp], edi

; 36   : 	CString strValue = "";

  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00032	8d 4d e8	 lea	 ecx, DWORD PTR _strValue$[ebp]
  00035	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T6[ebp], 0
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z

; 37   : 	if(m_pColorStringList.GetCount() < nGraphCount) {

  00042	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004c	3b 45 0c	 cmp	 eax, DWORD PTR _nGraphCount$[ebp]
  0004f	7d 45		 jge	 SHORT $LN3@MakeFromSi

; 38   : 		POSITION Originalpos = m_pOriginalColorStringList.GetHeadPosition();

  00051	8b 77 08	 mov	 esi, DWORD PTR [edi+8]

; 39   : 		while(Originalpos) {

  00054	85 f6		 test	 esi, esi
  00056	74 3e		 je	 SHORT $LN3@MakeFromSi
$LL2@MakeFromSi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 811  : 	{ CNode* pNode = (CNode*) rPosition;

  00058	8b c6		 mov	 eax, esi
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp

; 40   : 			CString strColor = m_pOriginalColorStringList.GetNext(Originalpos);

  0005a	8d 4d ec	 lea	 ecx, DWORD PTR _strColor$5[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 813  : 		rPosition = (POSITION) pNode->pNext;

  0005d	8b 36		 mov	 esi, DWORD PTR [esi]

; 814  : 		return pNode->data; }

  0005f	83 c0 08	 add	 eax, 8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp

; 40   : 			CString strColor = m_pOriginalColorStringList.GetNext(Originalpos);

  00062	50		 push	 eax
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 41   : 			m_pColorStringList.AddTail(strColor);

  00069	51		 push	 ecx
  0006a	8d 45 ec	 lea	 eax, DWORD PTR _strColor$5[ebp]
  0006d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00071	8b cc		 mov	 ecx, esp
  00073	50		 push	 eax
  00074	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0007a	8d 4f 20	 lea	 ecx, DWORD PTR [edi+32]
  0007d	e8 00 00 00 00	 call	 ?AddTail@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEPAU__POSITION@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::AddTail

; 42   : 		}

  00082	8d 4d ec	 lea	 ecx, DWORD PTR _strColor$5[ebp]
  00085	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0008f	85 f6		 test	 esi, esi
  00091	75 c5		 jne	 SHORT $LL2@MakeFromSi
  00093	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
$LN3@MakeFromSi:

; 43   : 	}
; 44   : 
; 45   : 	if(m_pColorStringList.GetCount() <= 0) return "";

  00096	85 c0		 test	 eax, eax
  00098	7f 13		 jg	 SHORT $LN7@MakeFromSi
  0009a	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0009d	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  000a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  000a8	e9 12 01 00 00	 jmp	 $LN54@MakeFromSi
$LN7@MakeFromSi:

; 46   : 	int i = 0;
; 47   : 	POSITION pos = m_pColorStringList.GetHeadPosition();

  000ad	8b 5f 24	 mov	 ebx, DWORD PTR [edi+36]
  000b0	33 f6		 xor	 esi, esi
  000b2	89 75 e4	 mov	 DWORD PTR _i$1$[ebp], esi

; 48   : 	while(pos) {

  000b5	85 db		 test	 ebx, ebx
  000b7	0f 84 f5 00 00
	00		 je	 $LN51@MakeFromSi
  000bd	0f 1f 00	 npad	 3
$LL4@MakeFromSi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 811  : 	{ CNode* pNode = (CNode*) rPosition;

  000c0	8b c3		 mov	 eax, ebx
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp

; 49   : 		CString temp = m_pColorStringList.GetNext(pos);

  000c2	8d 4d ec	 lea	 ecx, DWORD PTR _temp$4[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 813  : 		rPosition = (POSITION) pNode->pNext;

  000c5	8b 1b		 mov	 ebx, DWORD PTR [ebx]

; 814  : 		return pNode->data; }

  000c7	83 c0 08	 add	 eax, 8
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp

; 49   : 		CString temp = m_pColorStringList.GetNext(pos);

  000ca	50		 push	 eax
  000cb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 50   : 		if(i < nGraphCount) {

  000d1	3b 75 0c	 cmp	 esi, DWORD PTR _nGraphCount$[ebp]
  000d4	0f 8d bf 00 00
	00		 jge	 $LN8@MakeFromSi

; 51   : 			m_pColorStringList.RemoveHead();

  000da	8d 77 20	 lea	 esi, DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1009 : 	ENSURE(m_pNodeHead != NULL);  // don't call on empty list !!!

  000dd	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp

; 51   : 			m_pColorStringList.RemoveHead();

  000e0	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1009 : 	ENSURE(m_pNodeHead != NULL);  // don't call on empty list !!!

  000e4	85 ff		 test	 edi, edi
  000e6	0f 84 f3 00 00
	00		 je	 $LN44@MakeFromSi

; 1010 : 	ASSERT(AfxIsValidAddress(m_pNodeHead, sizeof(CNode)));
; 1011 : 
; 1012 : 	CNode* pOldNode = m_pNodeHead;
; 1013 : 	TYPE returnValue = pOldNode->data;

  000ec	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  000ef	50		 push	 eax
  000f0	8d 4d e0	 lea	 ecx, DWORD PTR $T3[ebp]
  000f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z

; 1020 : 	FreeNode(pOldNode);
; 1021 : 	return returnValue;

  000f9	83 4d f0 02	 or	 DWORD PTR $T6[ebp], 2
  000fd	8b 07		 mov	 eax, DWORD PTR [edi]
  000ff	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00102	85 c0		 test	 eax, eax
  00104	74 09		 je	 SHORT $LN28@MakeFromSi

; 1014 : 
; 1015 : 	m_pNodeHead = pOldNode->pNext;
; 1016 : 	if (m_pNodeHead != NULL)
; 1017 : 		m_pNodeHead->pPrev = NULL;

  00106	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0010d	eb 07		 jmp	 SHORT $LN29@MakeFromSi
$LN28@MakeFromSi:

; 1018 : 	else
; 1019 : 		m_pNodeTail = NULL;

  0010f	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN29@MakeFromSi:

; 937  : 	pNode->data.~TYPE();

  00116	8d 4f 08	 lea	 ecx, DWORD PTR [edi+8]
  00119	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 938  : 	pNode->pNext = m_pNodeFree;

  0011f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00122	89 07		 mov	 DWORD PTR [edi], eax

; 939  : 	m_pNodeFree = pNode;
; 940  : 	m_nCount--;

  00124	83 46 0c ff	 add	 DWORD PTR [esi+12], -1
  00128	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 941  : 	ASSERT(m_nCount >= 0);  // make sure we don't underflow
; 942  : 
; 943  : 	// if no more elements, cleanup completely
; 944  : 	if (m_nCount == 0)

  0012b	75 07		 jne	 SHORT $LN34@MakeFromSi

; 945  : 		RemoveAll();

  0012d	8b ce		 mov	 ecx, esi
  0012f	e8 00 00 00 00	 call	 ?RemoveAll@?$CList@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@V12@@@QAEXXZ ; CList<ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >,ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > > >::RemoveAll
$LN34@MakeFromSi:
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp

; 51   : 			m_pColorStringList.RemoveHead();

  00134	83 65 f0 fd	 and	 DWORD PTR $T6[ebp], -3	; fffffffdH
  00138	8d 4d e0	 lea	 ecx, DWORD PTR $T3[ebp]
  0013b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0013f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 52   : 			if(temp.Right(1) != ";")

  00145	6a 01		 push	 1
  00147	8d 45 dc	 lea	 eax, DWORD PTR $T2[ebp]
  0014a	50		 push	 eax
  0014b	8d 4d ec	 lea	 ecx, DWORD PTR _temp$4[ebp]
  0014e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Right@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h

; 2567 : 		return( str1.Compare( psz2 ) != 0 );

  00154	68 00 00 00 00	 push	 OFFSET ??_C@_01ICJEACDI@?$DL@
  00159	8b c8		 mov	 ecx, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp

; 52   : 			if(temp.Right(1) != ";")

  0015b	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h

; 2567 : 		return( str1.Compare( psz2 ) != 0 );

  0015f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp

; 52   : 			if(temp.Right(1) != ";")

  00165	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00168	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\cstringt.h

; 2567 : 		return( str1.Compare( psz2 ) != 0 );

  0016c	8b f0		 mov	 esi, eax
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp

; 52   : 			if(temp.Right(1) != ";")

  0016e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00174	85 f6		 test	 esi, esi
  00176	74 0e		 je	 SHORT $LN9@MakeFromSi

; 53   : 				temp += ";";

  00178	68 00 00 00 00	 push	 OFFSET ??_C@_01ICJEACDI@?$DL@
  0017d	8d 4d ec	 lea	 ecx, DWORD PTR _temp$4[ebp]
  00180	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??Y?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
$LN9@MakeFromSi:

; 54   : 			strValue += temp;

  00186	8d 45 ec	 lea	 eax, DWORD PTR _temp$4[ebp]
  00189	50		 push	 eax
  0018a	8d 4d e8	 lea	 ecx, DWORD PTR _strValue$[ebp]
  0018d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??Y?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV?$CSimpleStringT@D$00@1@@Z
  00193	8b 75 e4	 mov	 esi, DWORD PTR _i$1$[ebp]
  00196	8b 7d d8	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN8@MakeFromSi:

; 55   : 		}
; 56   : 		i++;

  00199	46		 inc	 esi

; 57   : 	}

  0019a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0019e	8d 4d ec	 lea	 ecx, DWORD PTR _temp$4[ebp]
  001a1	89 75 e4	 mov	 DWORD PTR _i$1$[ebp], esi
  001a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  001aa	85 db		 test	 ebx, ebx
  001ac	0f 85 0e ff ff
	ff		 jne	 $LL4@MakeFromSi
$LN51@MakeFromSi:

; 58   : 	return strValue;

  001b2	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001b5	8d 45 e8	 lea	 eax, DWORD PTR _strValue$[ebp]
  001b8	50		 push	 eax
  001b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
$LN54@MakeFromSi:

; 59   : }

  001bf	8d 4d e8	 lea	 ecx, DWORD PTR _strValue$[ebp]
  001c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  001c8	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  001cb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001ce	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001d5	59		 pop	 ecx
  001d6	5f		 pop	 edi
  001d7	5e		 pop	 esi
  001d8	5b		 pop	 ebx
  001d9	8b e5		 mov	 esp, ebp
  001db	5d		 pop	 ebp
  001dc	c2 08 00	 ret	 8
$LN44@MakeFromSi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afxtempl.h

; 1009 : 	ENSURE(m_pNodeHead != NULL);  // don't call on empty list !!!

  001df	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN53@MakeFromSi:
  001e4	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MakeFromSixLineColorStringToOneString@CLineColor@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR _strValue$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?MakeFromSixLineColorStringToOneString@CLineColor@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z$1:
  00009	8d 4d ec	 lea	 ecx, DWORD PTR _strColor$5[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?MakeFromSixLineColorStringToOneString@CLineColor@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z$4:
  00012	8d 4d ec	 lea	 ecx, DWORD PTR _temp$4[ebp]
  00015	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?MakeFromSixLineColorStringToOneString@CLineColor@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z$7:
  0001b	8b 45 f0	 mov	 eax, DWORD PTR $T6[ebp]
  0001e	83 e0 02	 and	 eax, 2
  00021	0f 84 0d 00 00
	00		 je	 $LN32@MakeFromSi
  00027	83 65 f0 fd	 and	 DWORD PTR $T6[ebp], -3	; fffffffdH
  0002b	8d 4d e0	 lea	 ecx, DWORD PTR $T3[ebp]
  0002e	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN32@MakeFromSi:
  00034	c3		 ret	 0
__unwindfunclet$?MakeFromSixLineColorStringToOneString@CLineColor@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z$6:
  00035	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00038	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0003e	cc		 int	 3
  0003f	cc		 int	 3
  00040	cc		 int	 3
  00041	cc		 int	 3
  00042	cc		 int	 3
__ehhandler$?MakeFromSixLineColorStringToOneString@CLineColor@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z:
  00043	90		 npad	 1
  00044	90		 npad	 1
  00045	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00049	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0004c	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  0004f	33 c8		 xor	 ecx, eax
  00051	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00056	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?MakeFromSixLineColorStringToOneString@CLineColor@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
  0005b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?MakeFromSixLineColorStringToOneString@CLineColor@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ENDP ; CLineColor::MakeFromSixLineColorStringToOneString
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC		; CObject::Dump, COMDAT
; _this$ = ecx

; 122  : 	{ /* no dumping in release builds */ }

  00000	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
?AssertValid@CObject@@UBEXXZ PROC			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 120  : 	{ /* no asserts in release builds */ }

  00000	c2 00 00	 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC		; CObject::Serialize, COMDAT
; _this$ = ecx

; 106  : 	{ /* CObject does not serialize anything by default */ }

  00000	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\atlmfc\include\afx.inl
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT
??1CObject@@UAE@XZ PROC					; CObject::~CObject, COMDAT
; _this$ = ecx

; 104  : 	{ }

  00000	c2 00 00	 ret	 0
??1CObject@@UAE@XZ ENDP					; CObject::~CObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\git\src\IBK\IBK_DRFN\ProjSrc\SrcChartEx\ChartAddIn\ChartDesignPropertyAddIn\ChartDesignPropertyAddIn\LineColor.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
