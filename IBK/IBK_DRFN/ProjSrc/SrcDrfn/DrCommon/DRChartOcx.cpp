// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "DRChartOcx.h"

/////////////////////////////////////////////////////////////////////////////
// CDRChartOcx

IMPLEMENT_DYNCREATE(CDRChartOcx, CWnd)

//#ifdef __MULTI_LANG__

/////////////////////////////////////////////////////////////////////////////
// CDRChartOcx properties

BOOL CDRChartOcx::GetEnabled()
{
	BOOL result;
	GetProperty(DISPID_ENABLED, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetEnabled(BOOL propVal)
{
	SetProperty(DISPID_ENABLED, VT_BOOL, propVal);
}

OLE_HANDLE CDRChartOcx::GetHWnd()
{
	OLE_HANDLE result;
	GetProperty(DISPID_HWND, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetHWnd(OLE_HANDLE propVal)
{
	SetProperty(DISPID_HWND, VT_I4, propVal);
}

short CDRChartOcx::GetNChartMode()
{
	short result;
	GetProperty(0x1, VT_I2, (void*)&result);
	return result;
}

void CDRChartOcx::SetNChartMode(short propVal)
{
	SetProperty(0x1, VT_I2, propVal);
}

BOOL CDRChartOcx::GetBNormalizedMinuteTimeRule()
{
	BOOL result;
	GetProperty(0x2, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBNormalizedMinuteTimeRule(BOOL propVal)
{
	SetProperty(0x2, VT_BOOL, propVal);
}

long CDRChartOcx::GetNBlockType()
{
	long result;
	GetProperty(0x3, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetNBlockType(long propVal)
{
	SetProperty(0x3, VT_I4, propVal);
}

long CDRChartOcx::GetNBlockCompart()
{
	long result;
	GetProperty(0x4, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetNBlockCompart(long propVal)
{
	SetProperty(0x4, VT_I4, propVal);
}

long CDRChartOcx::GetNBlockRowCount()
{
	long result;
	GetProperty(0x5, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetNBlockRowCount(long propVal)
{
	SetProperty(0x5, VT_I4, propVal);
}

long CDRChartOcx::GetNBlockColumnCount()
{
	long result;
	GetProperty(0x6, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetNBlockColumnCount(long propVal)
{
	SetProperty(0x6, VT_I4, propVal);
}

long CDRChartOcx::GetNBlockGap()
{
	long result;
	GetProperty(0x7, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetNBlockGap(long propVal)
{
	SetProperty(0x7, VT_I4, propVal);
}

long CDRChartOcx::GetNBlockBorderThickness()
{
	long result;
	GetProperty(0x8, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetNBlockBorderThickness(long propVal)
{
	SetProperty(0x8, VT_I4, propVal);
}

CString CDRChartOcx::GetStrAddInLoadList()
{
	CString result;
	GetProperty(0x9, VT_BSTR, (void*)&result);
	return result;
}

void CDRChartOcx::SetStrAddInLoadList(LPCTSTR propVal)
{
	SetProperty(0x9, VT_BSTR, propVal);
}

long CDRChartOcx::GetNBorderType()
{
	long result;
	GetProperty(0xa, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetNBorderType(long propVal)
{
	SetProperty(0xa, VT_I4, propVal);
}

long CDRChartOcx::GetNScaleLineType()
{
	long result;
	GetProperty(0xb, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetNScaleLineType(long propVal)
{
	SetProperty(0xb, VT_I4, propVal);
}

BOOL CDRChartOcx::GetBWholeView()
{
	BOOL result;
	GetProperty(0xc, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBWholeView(BOOL propVal)
{
	SetProperty(0xc, VT_BOOL, propVal);
}

long CDRChartOcx::GetNOnePageDataCount()
{
	long result;
	GetProperty(0xd, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetNOnePageDataCount(long propVal)
{
	SetProperty(0xd, VT_I4, propVal);
}

long CDRChartOcx::GetNUserBlockAddCount()
{
	long result;
	GetProperty(0xe, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetNUserBlockAddCount(long propVal)
{
	SetProperty(0xe, VT_I4, propVal);
}

BOOL CDRChartOcx::GetBGraphDragDrop()
{
	BOOL result;
	GetProperty(0xf, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBGraphDragDrop(BOOL propVal)
{
	SetProperty(0xf, VT_BOOL, propVal);
}

long CDRChartOcx::GetNLeftMargin()
{
	long result;
	GetProperty(0x10, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetNLeftMargin(long propVal)
{
	SetProperty(0x10, VT_I4, propVal);
}

long CDRChartOcx::GetNRightMargin()
{
	long result;
	GetProperty(0x11, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetNRightMargin(long propVal)
{
	SetProperty(0x11, VT_I4, propVal);
}

long CDRChartOcx::GetNTopMargin()
{
	long result;
	GetProperty(0x12, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetNTopMargin(long propVal)
{
	SetProperty(0x12, VT_I4, propVal);
}

long CDRChartOcx::GetNBottomMargin()
{
	long result;
	GetProperty(0x13, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetNBottomMargin(long propVal)
{
	SetProperty(0x13, VT_I4, propVal);
}

BOOL CDRChartOcx::GetBAddGraphMenuShow()
{
	BOOL result;
	GetProperty(0x14, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBAddGraphMenuShow(BOOL propVal)
{
	SetProperty(0x14, VT_BOOL, propVal);
}

CString CDRChartOcx::GetStrUserEnvironmentFileName()
{
	CString result;
	GetProperty(0x15, VT_BSTR, (void*)&result);
	return result;
}

void CDRChartOcx::SetStrUserEnvironmentFileName(LPCTSTR propVal)
{
	SetProperty(0x15, VT_BSTR, propVal);
}

CString CDRChartOcx::GetStrUserIndicatorListFileName()
{
	CString result;
	GetProperty(0x16, VT_BSTR, (void*)&result);
	return result;
}

void CDRChartOcx::SetStrUserIndicatorListFileName(LPCTSTR propVal)
{
	SetProperty(0x16, VT_BSTR, propVal);
}

CString CDRChartOcx::GetStrUserSeriesListFileName()
{
	CString result;
	GetProperty(0x17, VT_BSTR, (void*)&result);
	return result;
}

void CDRChartOcx::SetStrUserSeriesListFileName(LPCTSTR propVal)
{
	SetProperty(0x17, VT_BSTR, propVal);
}

BOOL CDRChartOcx::GetBHide()
{
	BOOL result;
	GetProperty(0x18, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBHide(BOOL propVal)
{
	SetProperty(0x18, VT_BOOL, propVal);
}

BOOL CDRChartOcx::GetBIsInput()
{
	BOOL result;
	GetProperty(0x19, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBIsInput(BOOL propVal)
{
	SetProperty(0x19, VT_BOOL, propVal);
}

CString CDRChartOcx::GetStrToolbarOption()
{
	CString result;
	GetProperty(0x1a, VT_BSTR, (void*)&result);
	return result;
}

void CDRChartOcx::SetStrToolbarOption(LPCTSTR propVal)
{
	SetProperty(0x1a, VT_BSTR, propVal);
}

CString CDRChartOcx::GetStrPacketOption()
{
	CString result;
	GetProperty(0x1b, VT_BSTR, (void*)&result);
	return result;
}

void CDRChartOcx::SetStrPacketOption(LPCTSTR propVal)
{
	SetProperty(0x1b, VT_BSTR, propVal);
}

CString CDRChartOcx::GetStrLocalSharedList()
{
	CString result;
	GetProperty(0x1c, VT_BSTR, (void*)&result);
	return result;
}

void CDRChartOcx::SetStrLocalSharedList(LPCTSTR propVal)
{
	SetProperty(0x1c, VT_BSTR, propVal);
}

BOOL CDRChartOcx::GetBUseRealData()
{
	BOOL result;
	GetProperty(0x1d, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBUseRealData(BOOL propVal)
{
	SetProperty(0x1d, VT_BOOL, propVal);
}

CString CDRChartOcx::GetStrRealList()
{
	CString result;
	GetProperty(0x1e, VT_BSTR, (void*)&result);
	return result;
}

void CDRChartOcx::SetStrRealList(LPCTSTR propVal)
{
	SetProperty(0x1e, VT_BSTR, propVal);
}

short CDRChartOcx::GetNMarginBorderType()
{
	short result;
	GetProperty(0x1f, VT_I2, (void*)&result);
	return result;
}

void CDRChartOcx::SetNMarginBorderType(short propVal)
{
	SetProperty(0x1f, VT_I2, propVal);
}

long CDRChartOcx::GetNRowDoubleSizeBlock()
{
	long result;
	GetProperty(0x20, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetNRowDoubleSizeBlock(long propVal)
{
	SetProperty(0x20, VT_I4, propVal);
}

BOOL CDRChartOcx::GetBUseInquiryDlgWhenUseCrossLine()
{
	BOOL result;
	GetProperty(0x21, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBUseInquiryDlgWhenUseCrossLine(BOOL propVal)
{
	SetProperty(0x21, VT_BOOL, propVal);
}

long CDRChartOcx::GetNColumnDoubleSizeBlock()
{
	long result;
	GetProperty(0x22, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetNColumnDoubleSizeBlock(long propVal)
{
	SetProperty(0x22, VT_I4, propVal);
}

BOOL CDRChartOcx::GetBUseShortKey()
{
	BOOL result;
	GetProperty(0x23, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBUseShortKey(BOOL propVal)
{
	SetProperty(0x23, VT_BOOL, propVal);
}

BOOL CDRChartOcx::GetBUseConditiontoTitle()
{
	BOOL result;
	GetProperty(0x24, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBUseConditiontoTitle(BOOL propVal)
{
	SetProperty(0x24, VT_BOOL, propVal);
}

BOOL CDRChartOcx::GetBUseDatatoTitle()
{
	BOOL result;
	GetProperty(0x25, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBUseDatatoTitle(BOOL propVal)
{
	SetProperty(0x25, VT_BOOL, propVal);
}

short CDRChartOcx::GetNHorzGap()
{
	short result;
	GetProperty(0x26, VT_I2, (void*)&result);
	return result;
}

void CDRChartOcx::SetNHorzGap(short propVal)
{
	SetProperty(0x26, VT_I2, propVal);
}

short CDRChartOcx::GetNVertGap()
{
	short result;
	GetProperty(0x27, VT_I2, (void*)&result);
	return result;
}

void CDRChartOcx::SetNVertGap(short propVal)
{
	SetProperty(0x27, VT_I2, propVal);
}

short CDRChartOcx::GetNRButtonMenuType()
{
	short result;
	GetProperty(0x28, VT_I2, (void*)&result);
	return result;
}

void CDRChartOcx::SetNRButtonMenuType(short propVal)
{
	SetProperty(0x28, VT_I2, propVal);
}

BOOL CDRChartOcx::GetBShowWarningMessageBox()
{
	BOOL result;
	GetProperty(0x29, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBShowWarningMessageBox(BOOL propVal)
{
	SetProperty(0x29, VT_BOOL, propVal);
}

BOOL CDRChartOcx::GetBControlBlockSize()
{
	BOOL result;
	GetProperty(0x2a, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBControlBlockSize(BOOL propVal)
{
	SetProperty(0x2a, VT_BOOL, propVal);
}

BOOL CDRChartOcx::GetBBlockMoveDelete()
{
	BOOL result;
	GetProperty(0x2b, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBBlockMoveDelete(BOOL propVal)
{
	SetProperty(0x2b, VT_BOOL, propVal);
}

BOOL CDRChartOcx::GetBSelectTitle()
{
	BOOL result;
	GetProperty(0x2c, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBSelectTitle(BOOL propVal)
{
	SetProperty(0x2c, VT_BOOL, propVal);
}

BOOL CDRChartOcx::GetBSelectGraph()
{
	BOOL result;
	GetProperty(0x2d, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBSelectGraph(BOOL propVal)
{
	SetProperty(0x2d, VT_BOOL, propVal);
}

BOOL CDRChartOcx::GetBUseScaleRButtonMenu()
{
	BOOL result;
	GetProperty(0x2e, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBUseScaleRButtonMenu(BOOL propVal)
{
	SetProperty(0x2e, VT_BOOL, propVal);
}

short CDRChartOcx::GetNGraphRButtonType()
{
	short result;
	GetProperty(0x2f, VT_I2, (void*)&result);
	return result;
}

void CDRChartOcx::SetNGraphRButtonType(short propVal)
{
	SetProperty(0x2f, VT_I2, propVal);
}

short CDRChartOcx::GetNHoldingPacketSize()
{
	short result;
	GetProperty(0x30, VT_I2, (void*)&result);
	return result;
}

void CDRChartOcx::SetNHoldingPacketSize(short propVal)
{
	SetProperty(0x30, VT_I2, propVal);
}

CString CDRChartOcx::GetSzBasePacketName()
{
	CString result;
	GetProperty(0x31, VT_BSTR, (void*)&result);
	return result;
}

void CDRChartOcx::SetSzBasePacketName(LPCTSTR propVal)
{
	SetProperty(0x31, VT_BSTR, propVal);
}

BOOL CDRChartOcx::GetBRedrawAfterUpdatedAllPackets()
{
	BOOL result;
	GetProperty(0x32, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBRedrawAfterUpdatedAllPackets(BOOL propVal)
{
	SetProperty(0x32, VT_BOOL, propVal);
}

short CDRChartOcx::GetNMinDataCountOnOnePage()
{
	short result;
	GetProperty(0x33, VT_I2, (void*)&result);
	return result;
}

void CDRChartOcx::SetNMinDataCountOnOnePage(short propVal)
{
	SetProperty(0x33, VT_I2, propVal);
}

BOOL CDRChartOcx::GetBFireRealEvent()
{
	BOOL result;
	GetProperty(0x34, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBFireRealEvent(BOOL propVal)
{
	SetProperty(0x34, VT_BOOL, propVal);
}

short CDRChartOcx::GetNInquiryType()
{
	short result;
	GetProperty(0x35, VT_I2, (void*)&result);
	return result;
}

void CDRChartOcx::SetNInquiryType(short propVal)
{
	SetProperty(0x35, VT_I2, propVal);
}

BOOL CDRChartOcx::GetBOcxAreaNumericalInquiry()
{
	BOOL result;
	GetProperty(0x36, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBOcxAreaNumericalInquiry(BOOL propVal)
{
	SetProperty(0x36, VT_BOOL, propVal);
}

long CDRChartOcx::GetNNumericalInquiryOption()
{
	long result;
	GetProperty(0x37, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetNNumericalInquiryOption(long propVal)
{
	SetProperty(0x37, VT_I4, propVal);
}

CString CDRChartOcx::GetStrGlobalSharedList()
{
	CString result;
	GetProperty(0x38, VT_BSTR, (void*)&result);
	return result;
}

void CDRChartOcx::SetStrGlobalSharedList(LPCTSTR propVal)
{
	SetProperty(0x38, VT_BSTR, propVal);
}

short CDRChartOcx::GetNUseInquiryWithCrossline()
{
	short result;
	GetProperty(0x39, VT_I2, (void*)&result);
	return result;
}

void CDRChartOcx::SetNUseInquiryWithCrossline(short propVal)
{
	SetProperty(0x39, VT_I2, propVal);
}

BOOL CDRChartOcx::GetBShowPriceRateInquiry()
{
	BOOL result;
	GetProperty(0x3a, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBShowPriceRateInquiry(BOOL propVal)
{
	SetProperty(0x3a, VT_BOOL, propVal);
}

BOOL CDRChartOcx::GetBDoesUseSkinColor()
{
	BOOL result;
	GetProperty(0x3b, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBDoesUseSkinColor(BOOL propVal)
{
	SetProperty(0x3b, VT_BOOL, propVal);
}

CString CDRChartOcx::GetStrMapName()
{
	CString result;
	GetProperty(0x3c, VT_BSTR, (void*)&result);
	return result;
}

void CDRChartOcx::SetStrMapName(LPCTSTR propVal)
{
	SetProperty(0x3c, VT_BSTR, propVal);
}

short CDRChartOcx::GetNBongCountMargin()
{
	short result;
	GetProperty(0x3d, VT_I2, (void*)&result);
	return result;
}

void CDRChartOcx::SetNBongCountMargin(short propVal)
{
	SetProperty(0x3d, VT_I2, propVal);
}

BOOL CDRChartOcx::GetBOnePageDataCountInTRCount()
{
	BOOL result;
	GetProperty(0x3e, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBOnePageDataCountInTRCount(BOOL propVal)
{
	SetProperty(0x3e, VT_BOOL, propVal);
}

BOOL CDRChartOcx::GetBIsMapDefault()
{
	BOOL result;
	GetProperty(0x3f, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBIsMapDefault(BOOL propVal)
{
	SetProperty(0x3f, VT_BOOL, propVal);
}

short CDRChartOcx::GetNPacketCountDataSize()
{
	short result;
	GetProperty(0x40, VT_I2, (void*)&result);
	return result;
}

void CDRChartOcx::SetNPacketCountDataSize(short propVal)
{
	SetProperty(0x40, VT_I2, propVal);
}

short CDRChartOcx::GetNLanguageID()
{
	short result;
	GetProperty(0x41, VT_I2, (void*)&result);
	return result;
}

void CDRChartOcx::SetNLanguageID(short propVal)
{
	SetProperty(0x41, VT_I2, propVal);
}

BOOL CDRChartOcx::GetBFreezedPageState()
{
	BOOL result;
	GetProperty(0x42, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBFreezedPageState(BOOL propVal)
{
	SetProperty(0x42, VT_BOOL, propVal);
}

BOOL CDRChartOcx::GetIsShowInneerToolBar()
{
	BOOL result;
	GetProperty(0x46, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetIsShowInneerToolBar(BOOL propVal)
{
	SetProperty(0x46, VT_BOOL, propVal);
}

CString CDRChartOcx::GetStrChartList()
{
	CString result;
	GetProperty(0x47, VT_BSTR, (void*)&result);
	return result;
}

void CDRChartOcx::SetStrChartList(LPCTSTR propVal)
{
	SetProperty(0x47, VT_BSTR, propVal);
}

unsigned long CDRChartOcx::GetClrBackground()
{
	unsigned long result;
	GetProperty(0x48, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetClrBackground(unsigned long propVal)
{
	SetProperty(0x48, VT_I4, propVal);
}

unsigned long CDRChartOcx::GetClrBackBorder()
{
	unsigned long result;
	GetProperty(0x49, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetClrBackBorder(unsigned long propVal)
{
	SetProperty(0x49, VT_I4, propVal);
}

unsigned long CDRChartOcx::GetClrBlock()
{
	unsigned long result;
	GetProperty(0x4a, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetClrBlock(unsigned long propVal)
{
	SetProperty(0x4a, VT_I4, propVal);
}

unsigned long CDRChartOcx::GetClrBlockBorder()
{
	unsigned long result;
	GetProperty(0x4b, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetClrBlockBorder(unsigned long propVal)
{
	SetProperty(0x4b, VT_I4, propVal);
}

unsigned long CDRChartOcx::GetClrScaleLine()
{
	unsigned long result;
	GetProperty(0x4c, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetClrScaleLine(unsigned long propVal)
{
	SetProperty(0x4c, VT_I4, propVal);
}

unsigned long CDRChartOcx::GetClrScaleText()
{
	unsigned long result;
	GetProperty(0x4d, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetClrScaleText(unsigned long propVal)
{
	SetProperty(0x4d, VT_I4, propVal);
}

unsigned long CDRChartOcx::GetClrGraphBase1()
{
	unsigned long result;
	GetProperty(0x4e, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetClrGraphBase1(unsigned long propVal)
{
	SetProperty(0x4e, VT_I4, propVal);
}

unsigned long CDRChartOcx::GetClrGraphBase2()
{
	unsigned long result;
	GetProperty(0x4f, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetClrGraphBase2(unsigned long propVal)
{
	SetProperty(0x4f, VT_I4, propVal);
}

unsigned long CDRChartOcx::GetClrGraphBase3()
{
	unsigned long result;
	GetProperty(0x50, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetClrGraphBase3(unsigned long propVal)
{
	SetProperty(0x50, VT_I4, propVal);
}

unsigned long CDRChartOcx::GetClrGraphBase4()
{
	unsigned long result;
	GetProperty(0x51, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetClrGraphBase4(unsigned long propVal)
{
	SetProperty(0x51, VT_I4, propVal);
}

unsigned long CDRChartOcx::GetClrGraphBase5()
{
	unsigned long result;
	GetProperty(0x52, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetClrGraphBase5(unsigned long propVal)
{
	SetProperty(0x52, VT_I4, propVal);
}

unsigned long CDRChartOcx::GetClrGraphBase6()
{
	unsigned long result;
	GetProperty(0x53, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetClrGraphBase6(unsigned long propVal)
{
	SetProperty(0x53, VT_I4, propVal);
}

unsigned long CDRChartOcx::GetClrAnalysisTool()
{
	unsigned long result;
	GetProperty(0x54, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetClrAnalysisTool(unsigned long propVal)
{
	SetProperty(0x54, VT_I4, propVal);
}

CString CDRChartOcx::GetStrBlockRegion()
{
	CString result;
	GetProperty(0x55, VT_BSTR, (void*)&result);
	return result;
}

void CDRChartOcx::SetStrBlockRegion(LPCTSTR propVal)
{
	SetProperty(0x55, VT_BSTR, propVal);
}

unsigned long CDRChartOcx::GetClrScaleLine2()
{
	unsigned long result;
	GetProperty(0x56, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetClrScaleLine2(unsigned long propVal)
{
	SetProperty(0x56, VT_I4, propVal);
}

unsigned long CDRChartOcx::GetClrInquiryWindow()
{
	unsigned long result;
	GetProperty(0x57, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetClrInquiryWindow(unsigned long propVal)
{
	SetProperty(0x57, VT_I4, propVal);
}

CString CDRChartOcx::GetCustomFont()
{
	CString result;
	GetProperty(0x58, VT_BSTR, (void*)&result);
	return result;
}

void CDRChartOcx::SetCustomFont(LPCTSTR propVal)
{
	SetProperty(0x58, VT_BSTR, propVal);
}

unsigned long CDRChartOcx::GetClrLattice()
{
	unsigned long result;
	GetProperty(0x59, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetClrLattice(unsigned long propVal)
{
	SetProperty(0x59, VT_I4, propVal);
}

CString CDRChartOcx::GetStrStartDateOfData()
{
	CString result;
	GetProperty(0x5a, VT_BSTR, (void*)&result);
	return result;
}

void CDRChartOcx::SetStrStartDateOfData(LPCTSTR propVal)
{
	SetProperty(0x5a, VT_BSTR, propVal);
}

BOOL CDRChartOcx::GetOnRunningOneChart()
{
	BOOL result;
	GetProperty(0x5b, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetOnRunningOneChart(BOOL propVal)
{
	SetProperty(0x5b, VT_BOOL, propVal);
}

BOOL CDRChartOcx::GetEnableHorizontalLineInNIDLG()
{
	BOOL result;
	GetProperty(0x5c, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetEnableHorizontalLineInNIDLG(BOOL propVal)
{
	SetProperty(0x5c, VT_BOOL, propVal);
}

BOOL CDRChartOcx::GetBShowPriceMinMaxText()
{
	BOOL result;
	GetProperty(0x5d, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBShowPriceMinMaxText(BOOL propVal)
{
	SetProperty(0x5d, VT_BOOL, propVal);
}

BOOL CDRChartOcx::GetBHideAllTitle()
{
	BOOL result;
	GetProperty(0x5e, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBHideAllTitle(BOOL propVal)
{
	SetProperty(0x5e, VT_BOOL, propVal);
}

CString CDRChartOcx::GetStrMapIndicatorInfo()
{
	CString result;
	GetProperty(0x5f, VT_BSTR, (void*)&result);
	return result;
}

void CDRChartOcx::SetStrMapIndicatorInfo(LPCTSTR propVal)
{
	SetProperty(0x5f, VT_BSTR, propVal);
}

BOOL CDRChartOcx::GetBEnableIndicatorCalculation()
{
	BOOL result;
	GetProperty(0x60, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBEnableIndicatorCalculation(BOOL propVal)
{
	SetProperty(0x60, VT_BOOL, propVal);
}

CString CDRChartOcx::GetStrPagePathWithPrefix()
{
	CString result;
	GetProperty(0x43, VT_BSTR, (void*)&result);
	return result;
}

void CDRChartOcx::SetStrPagePathWithPrefix(LPCTSTR propVal)
{
	SetProperty(0x43, VT_BSTR, propVal);
}

long CDRChartOcx::GetNCurrentDrawCount()
{
	long result;
	GetProperty(0x61, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetNCurrentDrawCount(long propVal)
{
	SetProperty(0x61, VT_I4, propVal);
}

short CDRChartOcx::GetNRealTimeTruncationType()
{
	short result;
	GetProperty(0x44, VT_I2, (void*)&result);
	return result;
}

void CDRChartOcx::SetNRealTimeTruncationType(short propVal)
{
	SetProperty(0x44, VT_I2, propVal);
}

BOOL CDRChartOcx::GetBUseGapRevision()
{
	BOOL result;
	GetProperty(0x45, VT_BOOL, (void*)&result);
	return result;
}

void CDRChartOcx::SetBUseGapRevision(BOOL propVal)
{
	SetProperty(0x45, VT_BOOL, propVal);
}

long CDRChartOcx::GetNFullDataCount()
{
	long result;
	GetProperty(0x62, VT_I4, (void*)&result);
	return result;
}

void CDRChartOcx::SetNFullDataCount(long propVal)
{
	SetProperty(0x62, VT_I4, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CDRChartOcx operations

BOOL CDRChartOcx::SetAllProperties2(long dwData)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x63, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		dwData);
	return result;
}

void CDRChartOcx::SetBaseDesk(long lKey)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x64, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 lKey);
}

long CDRChartOcx::GetBase(LPCTSTR szKey)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x65, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szKey);
	return result;
}

short CDRChartOcx::SetChartData(long pChartData, short nCount, short nType)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_I2 VTS_I2;
	InvokeHelper(0x66, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		pChartData, nCount, nType);
	return result;
}

short CDRChartOcx::SetChartDataStr(LPCTSTR szChartData, short nCount, short nType)
{
	short result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2 VTS_I2;
	InvokeHelper(0x67, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		szChartData, nCount, nType);
	return result;
}

short CDRChartOcx::testGetPacketdatasize(LPCTSTR pIn)
{
	short result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x68, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		pIn);
	return result;
}

void CDRChartOcx::testLoadAnalysisTools(short nToolOption, short nOption)
{
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x69, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nToolOption, nOption);
}

void CDRChartOcx::MakeSaveShortKey(LPCTSTR szFileName, short nFlag)
{
	static BYTE parms[] =
		VTS_BSTR VTS_I2;
	InvokeHelper(0x6a, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 szFileName, nFlag);
}

short CDRChartOcx::ChangeChart(short nBlockRowPosition, short nBlockColumnPosition, LPCTSTR strGraphTitle, LPCTSTR strGraphName, LPCTSTR strPacketName, LPCTSTR strGraphType, LPCTSTR strGraphStyle, short nLineWidth, unsigned long clrLineColor)
{
	short result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR VTS_I2 VTS_I4;
	InvokeHelper(0x6b, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		nBlockRowPosition, nBlockColumnPosition, strGraphTitle, strGraphName, strPacketName, strGraphType, strGraphStyle, nLineWidth, clrLineColor);
	return result;
}

short CDRChartOcx::ClearChartData(short nOption)
{
	short result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x6c, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		nOption);
	return result;
}

short CDRChartOcx::SetGraphHide(short nRow, short nColumn, LPCTSTR strTitle, BOOL bHide)
{
	short result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_BSTR VTS_BOOL;
	InvokeHelper(0x6d, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		nRow, nColumn, strTitle, bHide);
	return result;
}

BOOL CDRChartOcx::AddChartBlock(LPCTSTR strChartName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x6e, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strChartName);
	return result;
}

void CDRChartOcx::SetOnePageDataCount(long nOnePageDataCount)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x6f, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nOnePageDataCount);
}

long CDRChartOcx::GetOnePageDataCount()
{
	long result;
	InvokeHelper(0x70, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CDRChartOcx::SaveandOpenFromFile(LPCTSTR strOpenFileName, LPCTSTR strSaveFileName, BOOL bOpenOption, BOOL bSaveOption)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BOOL VTS_BOOL;
	InvokeHelper(0x71, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strOpenFileName, strSaveFileName, bOpenOption, bSaveOption);
	return result;
}

BOOL CDRChartOcx::JoinandDevisionforCompareChart(long nRowCount, long nColumnCount, BOOL bJoin)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0x72, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRowCount, nColumnCount, bJoin);
	return result;
}

BOOL CDRChartOcx::ChangeGraphTitle(short nRowIndex, short nColumnIndex, short nGraphIndex, LPCTSTR strNewTitle)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_BSTR;
	InvokeHelper(0x73, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRowIndex, nColumnIndex, nGraphIndex, strNewTitle);
	return result;
}

short CDRChartOcx::SetChartDataFromFile(LPCTSTR szFileName, short nType)
{
	short result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2;
	InvokeHelper(0x74, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		szFileName, nType);
	return result;
}

BOOL CDRChartOcx::RemoveChart(LPCTSTR strChartName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x75, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strChartName);
	return result;
}

BOOL CDRChartOcx::ChangeGraphType(LPCTSTR strGraphName, LPCTSTR strGraphType, LPCTSTR strGraphStyle, LPCTSTR strPacketNameList, BOOL bRunatOnce)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR VTS_BOOL;
	InvokeHelper(0x76, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strGraphName, strGraphType, strGraphStyle, strPacketNameList, bRunatOnce);
	return result;
}

void CDRChartOcx::SetChartAllInfo()
{
	InvokeHelper(0x77, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

CString CDRChartOcx::GetData(LPCTSTR strPacketName, short nDataIndex)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2;
	InvokeHelper(0x78, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		strPacketName, nDataIndex);
	return result;
}

BOOL CDRChartOcx::SetDrdsAdvise(BOOL bOnAdvise)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x79, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bOnAdvise);
	return result;
}

short CDRChartOcx::GetDataCount()
{
	short result;
	InvokeHelper(0x7a, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

BOOL CDRChartOcx::ChangeChartItem(LPCTSTR strGraphName, short nSubGraphIndex, LPCTSTR strNewTitle, LPCTSTR strNewPacketName, LPCTSTR strNewGraphType, LPCTSTR strNewGraphStyle, short nNewUpLineWidth, short nNewDownLineWidth, short nNewEqualLineWidth, 
		BOOL bRunatOnce)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2 VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR VTS_I2 VTS_I2 VTS_I2 VTS_BOOL;
	InvokeHelper(0x7b, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strGraphName, nSubGraphIndex, strNewTitle, strNewPacketName, strNewGraphType, strNewGraphStyle, nNewUpLineWidth, nNewDownLineWidth, nNewEqualLineWidth, bRunatOnce);
	return result;
}

BOOL CDRChartOcx::SetStopLossPrice(BOOL bIsStopLoss, double dStopLossPrice, BOOL bIsProfit, double dProfitPrice)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL VTS_R8 VTS_BOOL VTS_R8;
	InvokeHelper(0x7c, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bIsStopLoss, dStopLossPrice, bIsProfit, dProfitPrice);
	return result;
}

BOOL CDRChartOcx::RestoreMinMax(LPCTSTR strPacketName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x7d, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strPacketName);
	return result;
}

BOOL CDRChartOcx::RestoreMin(LPCTSTR strPacketName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x7e, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strPacketName);
	return result;
}

BOOL CDRChartOcx::RestorMax(LPCTSTR strPacketName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x7f, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strPacketName);
	return result;
}

BOOL CDRChartOcx::SetMin(LPCTSTR strPacketName, double dMin)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_R8;
	InvokeHelper(0x80, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strPacketName, dMin);
	return result;
}

BOOL CDRChartOcx::SetMax(LPCTSTR strPacketName, double dMax)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_R8;
	InvokeHelper(0x81, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strPacketName, dMax);
	return result;
}

BOOL CDRChartOcx::SetMinMax(LPCTSTR strPacketName, double dMin, double dMax)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_R8 VTS_R8;
	InvokeHelper(0x82, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strPacketName, dMin, dMax);
	return result;
}

BOOL CDRChartOcx::SetHorzScaleData(short nRowIndex, short nColumnIndex, LPCTSTR strScaleData)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_BSTR;
	InvokeHelper(0x83, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRowIndex, nColumnIndex, strScaleData);
	return result;
}

double CDRChartOcx::GetMin(LPCTSTR strPacketName)
{
	double result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x84, DISPATCH_METHOD, VT_R8, (void*)&result, parms,
		strPacketName);
	return result;
}

double CDRChartOcx::GetMax(LPCTSTR strPacketName)
{
	double result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x85, DISPATCH_METHOD, VT_R8, (void*)&result, parms,
		strPacketName);
	return result;
}

BOOL CDRChartOcx::SetGraphHide2(short nRowIndex, short nColumnIndex, short nVerticalIndex, short nGraphIndex, short nSubGraphIndex, BOOL bHide)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_BOOL;
	InvokeHelper(0x86, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRowIndex, nColumnIndex, nVerticalIndex, nGraphIndex, nSubGraphIndex, bHide);
	return result;
}

BOOL CDRChartOcx::ChangeGraphDatas(short nRowIndex, short nColumnIndex, short nVerticalIndex, short nGraphIndex, LPCTSTR strNewGraphName, LPCTSTR strNewTitle, LPCTSTR strNewPacketName, LPCTSTR strNewGraphType, LPCTSTR strNewGraphStyle, 
		short nNewUpLineWidth, short nNewDownLineWidth, short nNewEqualLineWidth, BOOL bRunatOnce)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR VTS_I2 VTS_I2 VTS_I2 VTS_BOOL;
	InvokeHelper(0x87, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRowIndex, nColumnIndex, nVerticalIndex, nGraphIndex, strNewGraphName, strNewTitle, strNewPacketName, strNewGraphType, strNewGraphStyle, nNewUpLineWidth, nNewDownLineWidth, nNewEqualLineWidth, bRunatOnce);
	return result;
}

void CDRChartOcx::SaveandApplyGraphStyle(short nSaveDataType, short nChangeDataType)
{
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x88, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nSaveDataType, nChangeDataType);
}

void CDRChartOcx::SetDataRegionInBlock(short nDataStartIndex)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x89, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nDataStartIndex);
}

void CDRChartOcx::SetItemInfo(LPCTSTR lpstrCode, LPCTSTR lpstrName)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x8a, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 lpstrCode, lpstrName);
}

void CDRChartOcx::AddandDeleteIndicator(LPCTSTR strGraphName)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x8b, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 strGraphName);
}

long CDRChartOcx::GetAllProperties2(long lpData)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x8c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		lpData);
	return result;
}

long CDRChartOcx::GetBasePropIf()
{
	long result;
	InvokeHelper(0x8d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CDRChartOcx::SetVertScaleData(short nRowIndex, short nColumnIndex, short nVertScaleGroupIndex, LPCTSTR strVertScaleData)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_BSTR;
	InvokeHelper(0x8e, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRowIndex, nColumnIndex, nVertScaleGroupIndex, strVertScaleData);
	return result;
}

BOOL CDRChartOcx::ChangeBlockType(short nBlockType, short nRowCount, short nColumnCount)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x8f, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nBlockType, nRowCount, nColumnCount);
	return result;
}

BOOL CDRChartOcx::ChangeHorzScalePosition(short nScalePosition, short nRowIndex, short nColumnIndex)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x90, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nScalePosition, nRowIndex, nColumnIndex);
	return result;
}

BOOL CDRChartOcx::ResetChart()
{
	BOOL result;
	InvokeHelper(0x91, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CDRChartOcx::SetRealData(LPCTSTR strPacketName, double dData, short nOption)
{
	static BYTE parms[] =
		VTS_BSTR VTS_R8 VTS_I2;
	InvokeHelper(0x92, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 strPacketName, dData, nOption);
}

BOOL CDRChartOcx::SetGraphTitle(LPCTSTR strGraphName, short nSubGraphIndex, LPCTSTR strNewGraphTitle, BOOL bGraphShowing)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2 VTS_BSTR VTS_BOOL;
	InvokeHelper(0x93, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strGraphName, nSubGraphIndex, strNewGraphTitle, bGraphShowing);
	return result;
}

CString CDRChartOcx::GetIndicatorNameList(LPCTSTR p_strGroup)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x94, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		p_strGroup);
	return result;
}

void CDRChartOcx::AddGraph(short nRow, short nColumn, short nVertScaleGroup, LPCTSTR szGraphOption, BOOL bCreateBlock, BOOL bCreateVertScaleGroup, BOOL bUseAutoScale)
{
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_BSTR VTS_BOOL VTS_BOOL VTS_BOOL;
	InvokeHelper(0x95, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow, nColumn, nVertScaleGroup, szGraphOption, bCreateBlock, bCreateVertScaleGroup, bUseAutoScale);
}

void CDRChartOcx::AddPacket(LPCTSTR szPacketOption)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x96, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 szPacketOption);
}

long CDRChartOcx::RemovePacket(LPCTSTR szPacketName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x97, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szPacketName);
	return result;
}

void CDRChartOcx::SetContainerDllInfo(long p_lDllWnd, short p_nID)
{
	static BYTE parms[] =
		VTS_I4 VTS_I2;
	InvokeHelper(0x98, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 p_lDllWnd, p_nID);
}

BOOL CDRChartOcx::SetPacketData(LPCTSTR szPacketName, long szData, long lLength, BOOL bReset)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0x99, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		szPacketName, szData, lLength, bReset);
	return result;
}

void CDRChartOcx::SetBackgroundColors(unsigned long p_rgbBlockArea, unsigned long p_rgbScaleArea)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x9a, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 p_rgbBlockArea, p_rgbScaleArea);
}

BOOL CDRChartOcx::AddRealItem(LPCTSTR szRealInfo)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x9b, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		szRealInfo);
	return result;
}

void CDRChartOcx::ShowIndicatorConfigDlg()
{
	InvokeHelper(0x9c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CDRChartOcx::ResetChartCfgWith(short p_nIndex)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x9d, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 p_nIndex);
}

BOOL CDRChartOcx::EmptyChart(BOOL bIsDeleteAllPacket, BOOL bIsDefault)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL VTS_BOOL;
	InvokeHelper(0x9e, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bIsDeleteAllPacket, bIsDefault);
	return result;
}

BOOL CDRChartOcx::HasGraph(LPCTSTR p_szGraphName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x9f, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szGraphName);
	return result;
}

void CDRChartOcx::RemoveRealItem(LPCTSTR szRealInfo)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xa0, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 szRealInfo);
}

void CDRChartOcx::ShowInnerToolBar(BOOL p_bShow)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xa1, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 p_bShow);
}

BOOL CDRChartOcx::ChangeVertScalePosition(short nScalePosition, short nRowIndex, short nColumnIndex, short nVSGroupIndex)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0xa2, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nScalePosition, nRowIndex, nColumnIndex, nVSGroupIndex);
	return result;
}

short CDRChartOcx::GetRowBlockCount()
{
	short result;
	InvokeHelper(0xa3, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

short CDRChartOcx::GetColumnBlockCount()
{
	short result;
	InvokeHelper(0xa4, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

BOOL CDRChartOcx::SetStartPeriodOfPacket(LPCTSTR p_szPacketName, long p_lStartPeriod, long p_bAddSpace)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0xa5, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szPacketName, p_lStartPeriod, p_bAddSpace);
	return result;
}

long CDRChartOcx::GetStartPeriodOfPacket(LPCTSTR p_szPacketName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xa6, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		p_szPacketName);
	return result;
}

BOOL CDRChartOcx::GetStartEndDateOnView(double* p_pStartDate, double* p_pEndDate)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PR8 VTS_PR8;
	InvokeHelper(0xa7, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_pStartDate, p_pEndDate);
	return result;
}

BOOL CDRChartOcx::SetStartEndDateOfView(double p_dStartDate, double p_dEndDate)
{
	BOOL result;
	static BYTE parms[] =
		VTS_R8 VTS_R8;
	InvokeHelper(0xa8, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_dStartDate, p_dEndDate);
	return result;
}

BOOL CDRChartOcx::ScrollToDataOfEnd(double p_dData)
{
	BOOL result;
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0xa9, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_dData);
	return result;
}

short CDRChartOcx::ZoomToWithRightFix(short p_nZoomValue, BOOL p_bWithRightFix)
{
	short result;
	static BYTE parms[] =
		VTS_I2 VTS_BOOL;
	InvokeHelper(0xaa, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		p_nZoomValue, p_bWithRightFix);
	return result;
}

void CDRChartOcx::ClearTimeMark()
{
	InvokeHelper(0xab, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CDRChartOcx::ShowEnvironmentDlg()
{
	InvokeHelper(0xac, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CDRChartOcx::SetTimeMark(LPCTSTR p_szMarkTime, BOOL p_bWithScroll)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BOOL;
	InvokeHelper(0xad, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 p_szMarkTime, p_bWithScroll);
}

short CDRChartOcx::GetVertScalePosition(short p_nRowIndex, short p_nColumnIndex, short p_nVSGroupIndex)
{
	short result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0xae, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		p_nRowIndex, p_nColumnIndex, p_nVSGroupIndex);
	return result;
}

void CDRChartOcx::EnableBoundMark(BOOL p_bEnable)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xaf, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 p_bEnable);
}

void CDRChartOcx::EnableReceivingTimeShare(BOOL p_bEnable)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xb0, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 p_bEnable);
}

BOOL CDRChartOcx::ChangePacketType(LPCTSTR p_szPacketName, LPCTSTR p_szPacketType)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0xb1, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szPacketName, p_szPacketType);
	return result;
}

BOOL CDRChartOcx::ChangeGraphDrawingData(LPCTSTR p_szGraphName, BOOL p_bLowHigh, BOOL p_bLowCur, BOOL p_bHighCur, BOOL p_bPrevCur, short p_nCurData)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BOOL VTS_BOOL VTS_BOOL VTS_BOOL VTS_I2;
	InvokeHelper(0xb2, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szGraphName, p_bLowHigh, p_bLowCur, p_bHighCur, p_bPrevCur, p_nCurData);
	return result;
}

BOOL CDRChartOcx::ChangePriceGraphDrawingData(BOOL p_bLowHigh, BOOL p_bLowCur, BOOL p_bHighCur, BOOL p_bPrevCur, short p_nCurData, short p_nDefaultType)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL VTS_BOOL VTS_BOOL VTS_BOOL VTS_I2 VTS_I2;
	InvokeHelper(0xb3, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_bLowHigh, p_bLowCur, p_bHighCur, p_bPrevCur, p_nCurData, p_nDefaultType);
	return result;
}

void CDRChartOcx::ShowAnalysisToolText(BOOL p_bTimeLine, BOOL p_bPriceLineLeft, BOOL p_bPriceLineRight, BOOL p_bTrendLine, BOOL p_bTrisectionLine, BOOL p_bQuadrisectionLine, BOOL p_bFibonacciRetraceLine)
{
	static BYTE parms[] =
		VTS_BOOL VTS_BOOL VTS_BOOL VTS_BOOL VTS_BOOL VTS_BOOL VTS_BOOL;
	InvokeHelper(0xb4, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 p_bTimeLine, p_bPriceLineLeft, p_bPriceLineRight, p_bTrendLine, p_bTrisectionLine, p_bQuadrisectionLine, p_bFibonacciRetraceLine);
}

BOOL CDRChartOcx::HasGraphInSpecialBack(LPCTSTR p_szGraphName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xb5, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szGraphName);
	return result;
}

BOOL CDRChartOcx::LoadAddIn(LPCTSTR p_szAddInDllName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xb6, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szAddInDllName);
	return result;
}

BOOL CDRChartOcx::InvokeAddIn(LPCTSTR p_szAddInDllName, short p_nCommandType, long p_lData)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2 VTS_I4;
	InvokeHelper(0xb7, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szAddInDllName, p_nCommandType, p_lData);
	return result;
}

void CDRChartOcx::SetDragModeType(short p_nDragModeType)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0xb8, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 p_nDragModeType);
}

BOOL CDRChartOcx::ResetRealListString(LPCTSTR p_szRealList, BOOL p_bAdviseNow)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BOOL;
	InvokeHelper(0xb9, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szRealList, p_bAdviseNow);
	return result;
}

BOOL CDRChartOcx::AddOrRemoveChart(LPCTSTR strGraphName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xba, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strGraphName);
	return result;
}

void CDRChartOcx::SetHtsPath(LPCTSTR pcszHtsPath)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xbb, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pcszHtsPath);
}

CString CDRChartOcx::GetRealSettingInfo()
{
	CString result;
	InvokeHelper(0xbc, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CDRChartOcx::SetAllLogScale(BOOL bLogScale)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xbd, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bLogScale);
}

void CDRChartOcx::GetListViewerData(BSTR* bstrTitle, BSTR* bstrHorzScale, BSTR* bstrPacketNamesPerBlock, BSTR* bstrPacketNames, BSTR* bstrSaveFilePath, BOOL* bViewPacketSequence, long* lpPacketList)
{
	static BYTE parms[] =
		VTS_PBSTR VTS_PBSTR VTS_PBSTR VTS_PBSTR VTS_PBSTR VTS_PBOOL VTS_PI4;
	InvokeHelper(0xbe, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bstrTitle, bstrHorzScale, bstrPacketNamesPerBlock, bstrPacketNames, bstrSaveFilePath, bViewPacketSequence, lpPacketList);
}

void CDRChartOcx::SetDataIndexByDate(LPCTSTR pcszStartDate, LPCTSTR pcszEndDate)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0xbf, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pcszStartDate, pcszEndDate);
}

void CDRChartOcx::SetRunTimeMode(BOOL bRunTimeMode)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xc0, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bRunTimeMode);
}

CString CDRChartOcx::GetPacketOption()
{
	CString result;
	InvokeHelper(0xc1, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CDRChartOcx::SetPacketOption(LPCTSTR strPacketOption)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xc2, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 strPacketOption);
}

void CDRChartOcx::SetOutsideCommonInterface(long lpOutsideCommonInterface)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xc3, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 lpOutsideCommonInterface);
}

BOOL CDRChartOcx::RemoveGraph_Title(short nRowIndex, short nColumnIndex, LPCTSTR szGraphTitle, BOOL bIsOnlyNoTRData, BOOL bIsAutoHorzScalePosition)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_BSTR VTS_BOOL VTS_BOOL;
	InvokeHelper(0xc4, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRowIndex, nColumnIndex, szGraphTitle, bIsOnlyNoTRData, bIsAutoHorzScalePosition);
	return result;
}

CString CDRChartOcx::GetGraphPacketName(short nRowIndex, short nColumnIndex, LPCTSTR szGraphTitle)
{
	CString result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_BSTR;
	InvokeHelper(0xc5, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nRowIndex, nColumnIndex, szGraphTitle);
	return result;
}

BOOL CDRChartOcx::ChangeGraphTitle2(LPCTSTR szTargetTitle, LPCTSTR szSourceTitle)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0xc6, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		szTargetTitle, szSourceTitle);
	return result;
}

BOOL CDRChartOcx::PartitionAllGraph()
{
	BOOL result;
	InvokeHelper(0xc7, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CDRChartOcx::JoinAllGraph(BOOL bIsOneVertScaleGroup)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xc8, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bIsOneVertScaleGroup);
	return result;
}

BOOL CDRChartOcx::ChangeAllFunctionName(LPCTSTR szTargetGraphName, LPCTSTR szSourceGraphName, BOOL bKeepOldGraphColor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BOOL;
	InvokeHelper(0xc9, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		szTargetGraphName, szSourceGraphName, bKeepOldGraphColor);
	return result;
}

BOOL CDRChartOcx::ChangeIndicatorPacketName(LPCTSTR strGraphName, short nSubGraphIndex, LPCTSTR strNewPacketName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2 VTS_BSTR;
	InvokeHelper(0xca, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strGraphName, nSubGraphIndex, strNewPacketName);
	return result;
}

void CDRChartOcx::RunEnvironmentDlg(short nOption)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0xcb, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nOption);
}

BOOL CDRChartOcx::SetIndicatorCondition(LPCTSTR strGraphName, short nConditionType, short nConditionIndex, double dConditionValue, BOOL bReCalculate)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2 VTS_I2 VTS_R8 VTS_BOOL;
	InvokeHelper(0xcc, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strGraphName, nConditionType, nConditionIndex, dConditionValue, bReCalculate);
	return result;
}

BOOL CDRChartOcx::SetPacketData2(LPCTSTR strPacketName, LPCTSTR strPacketType, LPCTSTR strPacketData, short nDataCount, BOOL bReCalculate)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR VTS_I2 VTS_BOOL;
	InvokeHelper(0xcd, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strPacketName, strPacketType, strPacketData, nDataCount, bReCalculate);
	return result;
}

BOOL CDRChartOcx::SetLogScale(LPCTSTR strGraphName, BOOL bLogScale)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BOOL;
	InvokeHelper(0xce, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strGraphName, bLogScale);
	return result;
}

BOOL CDRChartOcx::GetLogScale(LPCTSTR strGraphName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xcf, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strGraphName);
	return result;
}

BOOL CDRChartOcx::SetPacketHelpMessage(LPCTSTR strHelpMsg, BOOL bIsAllRemove)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BOOL;
	InvokeHelper(0xd0, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strHelpMsg, bIsAllRemove);
	return result;
}

BOOL CDRChartOcx::InvokeAddInStr(LPCTSTR p_szAddInDllName, LPCTSTR p_szCommandName, LPCTSTR p_szData)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0xd1, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szAddInDllName, p_szCommandName, p_szData);
	return result;
}

BOOL CDRChartOcx::SetHelpMessageRealDataRate(LPCTSTR strHelpMessageData, BOOL bIsRemove)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BOOL;
	InvokeHelper(0xd2, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strHelpMessageData, bIsRemove);
	return result;
}

void CDRChartOcx::SetBongCountMargin(short nBongCountMargin)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0xd3, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nBongCountMargin);
}

BOOL CDRChartOcx::SetAllPropertiesFromFile(LPCTSTR strFilePath, LPCTSTR strFileName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0xd4, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strFilePath, strFileName);
	return result;
}

BOOL CDRChartOcx::SetGraphHide3(LPCTSTR strTitle, BOOL bIsHide)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BOOL;
	InvokeHelper(0xd5, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strTitle, bIsHide);
	return result;
}

BOOL CDRChartOcx::GetBoundMarkFlag()
{
	BOOL result;
	InvokeHelper(0xd6, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CDRChartOcx::UnloadAddIn(LPCTSTR p_szAddInDllName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xd7, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szAddInDllName);
	return result;
}

void CDRChartOcx::SetOnePageDataCount2(long nOnePageDataCount, BOOL bIncludeBongCountMargin)
{
	static BYTE parms[] =
		VTS_I4 VTS_BOOL;
	InvokeHelper(0xd8, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nOnePageDataCount, bIncludeBongCountMargin);
}

BOOL CDRChartOcx::ClearPacketData(LPCTSTR strPacketName, BOOL bIsAbsoluteClear)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BOOL;
	InvokeHelper(0xd9, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strPacketName, bIsAbsoluteClear);
	return result;
}

void CDRChartOcx::SetAllGraphHide(short nRowIndex, short nColumnIndex, short bHide)
{
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0xda, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRowIndex, nColumnIndex, bHide);
}

void CDRChartOcx::InitStaticIndiCond(LPCTSTR p_szBasePath)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xdb, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 p_szBasePath);
}

void CDRChartOcx::SetAllGraphsHide(short nRowIndex, short nColumnIndex, BOOL bHide)
{
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_BOOL;
	InvokeHelper(0xdc, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRowIndex, nColumnIndex, bHide);
}

CString CDRChartOcx::GetPacketData2(LPCTSTR strPacketName, short nDataIndex, BOOL bIsFullDataSize)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2 VTS_BOOL;
	InvokeHelper(0xdd, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		strPacketName, nDataIndex, bIsFullDataSize);
	return result;
}

CString CDRChartOcx::GetSelectedSubGraphData(short nPoint_x, short nPoint_y)
{
	CString result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0xde, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nPoint_x, nPoint_y);
	return result;
}

short CDRChartOcx::GetPacketIndex(LPCTSTR szPacketName, double dKeyValue)
{
	short result;
	static BYTE parms[] =
		VTS_BSTR VTS_R8;
	InvokeHelper(0xdf, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		szPacketName, dKeyValue);
	return result;
}

short CDRChartOcx::GetCurrentPriceChartType()
{
	short result;
	InvokeHelper(0xe0, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

BOOL CDRChartOcx::RemoveBlock(short nPoint_x, short nPoint_y)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0xe1, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nPoint_x, nPoint_y);
	return result;
}

BOOL CDRChartOcx::RemoveGraph(short nRowIndex, short nColumnIndex, LPCTSTR strGraphTitle)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_BSTR;
	InvokeHelper(0xe2, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRowIndex, nColumnIndex, strGraphTitle);
	return result;
}

BOOL CDRChartOcx::SetGraphColor(short nRowIndex, short nColumnIndex, short nVertScaleGroupIndex, short nGraphIndex, short nSubGraphIndex, LPCTSTR strNewColor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_BSTR;
	InvokeHelper(0xe3, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRowIndex, nColumnIndex, nVertScaleGroupIndex, nGraphIndex, nSubGraphIndex, strNewColor);
	return result;
}

BOOL CDRChartOcx::SetPacketDataInIndex(LPCTSTR strPacketName, short nIndex, LPCTSTR strData, BOOL bIsRealData)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2 VTS_BSTR VTS_BOOL;
	InvokeHelper(0xe4, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strPacketName, nIndex, strData, bIsRealData);
	return result;
}

BOOL CDRChartOcx::SetVertScaleLogType(short nRowIndex, short nColumnIndex, BOOL bIsLogType)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_BOOL;
	InvokeHelper(0xe5, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRowIndex, nColumnIndex, bIsLogType);
	return result;
}

BOOL CDRChartOcx::OpenFileOfEnvAndIndi(LPCTSTR strFileName_Env, LPCTSTR strFileName_Indi, BOOL bIsCurrentSave)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BOOL;
	InvokeHelper(0xe6, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strFileName_Env, strFileName_Indi, bIsCurrentSave);
	return result;
}

BOOL CDRChartOcx::SetPacketDataInAdditionPacket(LPCTSTR szPacketName, long szData, long lLength, BOOL bReset)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0xe7, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		szPacketName, szData, lLength, bReset);
	return result;
}

void CDRChartOcx::SetOnePageDataCountInTRCount(BOOL bIsTRCount, BOOL bIsNowChange)
{
	static BYTE parms[] =
		VTS_BOOL VTS_BOOL;
	InvokeHelper(0xe8, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bIsTRCount, bIsNowChange);
}

void CDRChartOcx::PrintChatImage()
{
	InvokeHelper(0xe9, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CDRChartOcx::ExportToExcel()
{
	InvokeHelper(0xea, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CDRChartOcx::RunToolFunction(short nToolCommand, short nOption)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0xeb, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nToolCommand, nOption);
	return result;
}

BOOL CDRChartOcx::SetSubIndicatorCondition(LPCTSTR strGraphName, short nConditionType, short nSubGraphIndex, short nConditionIndex, double dConditionValue, BOOL bReCalculate)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2 VTS_I2 VTS_I2 VTS_R8 VTS_BOOL;
	InvokeHelper(0xec, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strGraphName, nConditionType, nSubGraphIndex, nConditionIndex, dConditionValue, bReCalculate);
	return result;
}

BOOL CDRChartOcx::SetGraphHide4(LPCTSTR strGraphName, short nSubGraphIndex, BOOL bHide)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2 VTS_BOOL;
	InvokeHelper(0xed, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strGraphName, nSubGraphIndex, bHide);
	return result;
}

BOOL CDRChartOcx::SetMapDefaultInCurrent(BOOL bIsNewMapDefault)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xee, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bIsNewMapDefault);
	return result;
}

BOOL CDRChartOcx::ChangeFunctionName(LPCTSTR p_szTargetFName, LPCTSTR p_szNewFName, LPCTSTR p_szNewSGName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0xef, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szTargetFName, p_szNewFName, p_szNewSGName);
	return result;
}

BOOL CDRChartOcx::GetHeadAndTailData(LPCTSTR strPacketName, double* pHeadData, double* pTailData)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_PR8 VTS_PR8;
	InvokeHelper(0xf0, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strPacketName, pHeadData, pTailData);
	return result;
}

LPUNKNOWN CDRChartOcx::GetAddInCustomInterface(LPCTSTR p_szAddInName)
{
	LPUNKNOWN result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xf1, DISPATCH_METHOD, VT_UNKNOWN, (void*)&result, parms,
		p_szAddInName);
	return result;
}

BOOL CDRChartOcx::LoadAddInWithOverExclusive(LPCTSTR p_szAddInName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xf2, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szAddInName);
	return result;
}

BOOL CDRChartOcx::OpenFromFile(LPCTSTR p_szFileName, BOOL p_bAutoPrevSave)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BOOL;
	InvokeHelper(0xf3, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szFileName, p_bAutoPrevSave);
	return result;
}

BOOL CDRChartOcx::SaveandOpenFromFileWithMSave(LPCTSTR strOpenFileName, LPCTSTR strSaveFileName, BOOL bOpenOption, BOOL bSaveOption)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BOOL VTS_BOOL;
	InvokeHelper(0xf4, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strOpenFileName, strSaveFileName, bOpenOption, bSaveOption);
	return result;
}

BOOL CDRChartOcx::AddRealItemWithSeparator(LPCTSTR szRealInfo, LPCTSTR szSeparatorChar)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0xf5, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		szRealInfo, szSeparatorChar);
	return result;
}

void CDRChartOcx::RemoveRealItemWithSeparator(LPCTSTR szRealInfo, LPCTSTR szSeparatorChar)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0xf6, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 szRealInfo, szSeparatorChar);
}

long CDRChartOcx::GetAllProperties3(long p_lIPropertyMap)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xf7, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		p_lIPropertyMap);
	return result;
}

long CDRChartOcx::SetAllProperties3(long p_lIPropertyMap)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xf8, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		p_lIPropertyMap);
	return result;
}

BOOL CDRChartOcx::ShowIndicatorConfigDlgWithName(LPCTSTR p_szGraphName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xf9, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szGraphName);
	return result;
}

BOOL CDRChartOcx::RemoveBlockWithIndex(short p_nRowIndex, short p_nColumnIndex)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0xfa, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_nRowIndex, p_nColumnIndex);
	return result;
}

BOOL CDRChartOcx::SetBinTrHelpMsg(LPCTSTR p_szHelpMessage)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xfb, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szHelpMessage);
	return result;
}

BOOL CDRChartOcx::SetBinTrDoubleData(LPCTSTR p_szPacketName, long p_nCount, double* p_pdData)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_PR8;
	InvokeHelper(0xfc, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szPacketName, p_nCount, p_pdData);
	return result;
}

BOOL CDRChartOcx::SetBinTrStringData(LPCTSTR p_szPacketName, long p_nCount, long p_lData)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0xfd, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szPacketName, p_nCount, p_lData);
	return result;
}

BOOL CDRChartOcx::SetBinTrEnd()
{
	BOOL result;
	InvokeHelper(0xfe, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CDRChartOcx::EmptyChart2(LPCTSTR p_szChartList, BOOL p_bIsDeleteAllPacket, BOOL p_bIsDefault)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BOOL VTS_BOOL;
	InvokeHelper(0xff, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szChartList, p_bIsDeleteAllPacket, p_bIsDefault);
	return result;
}

short CDRChartOcx::GetHorzScalePosition(short p_nRowIndex, short p_nColumnIndex)
{
	short result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x100, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		p_nRowIndex, p_nColumnIndex);
	return result;
}

BOOL CDRChartOcx::HasIndicator(LPCTSTR p_szIndicatorName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x101, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szIndicatorName);
	return result;
}

BOOL CDRChartOcx::HasIndicatorInSpecialBack(LPCTSTR p_szIndicatorName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x102, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szIndicatorName);
	return result;
}

BOOL CDRChartOcx::LockWindowUpdate()
{
	BOOL result;
	InvokeHelper(0x103, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CDRChartOcx::UnlockWindowUpdate()
{
	InvokeHelper(0x104, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

CString CDRChartOcx::AddChartItem(LPCTSTR lpszItemCode, LPCTSTR lpszItemName, BOOL bBuiltChart)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BOOL;
	InvokeHelper(0x105, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		lpszItemCode, lpszItemName, bBuiltChart);
	return result;
}

void CDRChartOcx::SetRealDataCode(LPCTSTR strCode, LPCTSTR strPacketName, double dData, short nOption)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_R8 VTS_I2;
	InvokeHelper(0x106, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 strCode, strPacketName, dData, nOption);
}

void CDRChartOcx::ShowIndicator(LPCTSTR p_szIndicatorName, BOOL p_bShow, BOOL p_bRecalculate)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BOOL VTS_BOOL;
	InvokeHelper(0x107, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 p_szIndicatorName, p_bShow, p_bRecalculate);
}

void CDRChartOcx::SetPacketAutoScaleType(LPCTSTR p_szPacketName, BOOL p_bAutoScaleType)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BOOL;
	InvokeHelper(0x108, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 p_szPacketName, p_bAutoScaleType);
}

BOOL CDRChartOcx::SetPacketTypeWithAutoScale(LPCTSTR p_szPacketName, LPCTSTR p_szPacketType, BOOL p_bAutoScale)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BOOL;
	InvokeHelper(0x109, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szPacketName, p_szPacketType, p_bAutoScale);
	return result;
}

void CDRChartOcx::ShowBaseText(BOOL p_bShow)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x10a, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 p_bShow);
}

BOOL CDRChartOcx::ChangeGraphColor(LPCTSTR p_szGraphTitle, LPCTSTR p_szColors)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x10b, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szGraphTitle, p_szColors);
	return result;
}

void CDRChartOcx::AddPacketRQ(LPCTSTR lpszRQ, LPCTSTR lpszPacketOption)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x10c, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 lpszRQ, lpszPacketOption);
}

BOOL CDRChartOcx::SetPacketDataRQ(LPCTSTR lpszRQ, LPCTSTR lpszPacketName, long nData, long nLength, BOOL bReset)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0x10d, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		lpszRQ, lpszPacketName, nData, nLength, bReset);
	return result;
}

BOOL CDRChartOcx::AddChartItemRQ(LPCTSTR lpszRQ, LPCTSTR lpszItemCode, LPCTSTR lpszItemName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0x10e, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		lpszRQ, lpszItemCode, lpszItemName);
	return result;
}

void CDRChartOcx::SetCurrentRQ(LPCTSTR lpszRQ)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x10f, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 lpszRQ);
}

void CDRChartOcx::SetResetTotalCountWhileDraw(BOOL bReset)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x110, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bReset);
}

void CDRChartOcx::SetFutureScaleVisible(long nScaleVisible)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x111, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nScaleVisible);
}

void CDRChartOcx::SetMultiItemMode(BOOL bMultiItem)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x112, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bMultiItem);
}

void CDRChartOcx::SetVertScaleType(short nBlockRow, short nBlockCol, short nScaleGroup, short nScaleType, double dTypeValue)
{
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_R8;
	InvokeHelper(0x113, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nBlockRow, nBlockCol, nScaleGroup, nScaleType, dTypeValue);
}

void CDRChartOcx::OpenFromPage(LPCTSTR p_szPagePath, BOOL p_bIsVirtualPage, short p_nVirtualPageIndex, short p_nDuplicateIndex)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BOOL VTS_I2 VTS_I2;
	InvokeHelper(0x114, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 p_szPagePath, p_bIsVirtualPage, p_nVirtualPageIndex, p_nDuplicateIndex);
}

void CDRChartOcx::SaveToPage(LPCTSTR p_szPagePath, BOOL p_bIsVirtualPage, short p_nVirtualPageIndex, short p_nDuplicateIndex)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BOOL VTS_I2 VTS_I2;
	InvokeHelper(0x115, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 p_szPagePath, p_bIsVirtualPage, p_nVirtualPageIndex, p_nDuplicateIndex);
}

BOOL CDRChartOcx::ZoomTo(long p_nZoomValue, BOOL p_bRelative)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_BOOL;
	InvokeHelper(0x116, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_nZoomValue, p_bRelative);
	return result;
}

BOOL CDRChartOcx::ShiftPacket(LPCTSTR p_szPacketNames, long p_szShiftCount)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x117, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szPacketNames, p_szShiftCount);
	return result;
}

BOOL CDRChartOcx::SaveandOpenFromAnalToolFile(LPCTSTR lpszOpenFileName, LPCTSTR lpszSaveFileName, BOOL bOpenOption, BOOL bSaveOption)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BOOL VTS_BOOL;
	InvokeHelper(0x118, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		lpszOpenFileName, lpszSaveFileName, bOpenOption, bSaveOption);
	return result;
}

void CDRChartOcx::SetHorizontalScaleHeight(long nHeight)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x119, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nHeight);
}

void CDRChartOcx::ChangeGraphPropertyAtOnce(LPCTSTR lpszRQ, LPCTSTR lpszTargetTitle, LPCTSTR lpszNewTitle, short nGraphType, short nGraphStyle, short nDrawStyle, LPCTSTR lpszColors, short nThickness1, short nThickness2, short nThickness3)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR VTS_I2 VTS_I2 VTS_I2 VTS_BSTR VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x11a, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 lpszRQ, lpszTargetTitle, lpszNewTitle, nGraphType, nGraphStyle, nDrawStyle, lpszColors, nThickness1, nThickness2, nThickness3);
}

BOOL CDRChartOcx::EmptyChart3(LPCTSTR lpszChartList, BOOL bIsDeleteAllPacket, BOOL bIsDefault, short nBlockCount)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BOOL VTS_BOOL VTS_I2;
	InvokeHelper(0x11b, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		lpszChartList, bIsDeleteAllPacket, bIsDefault, nBlockCount);
	return result;
}

BOOL CDRChartOcx::AddChartAllBlock(LPCTSTR strChartName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x11c, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strChartName);
	return result;
}

BOOL CDRChartOcx::RemoveGraphRQ(LPCTSTR lpszRQ, LPCTSTR lpszTitle)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x11d, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		lpszRQ, lpszTitle);
	return result;
}

CString CDRChartOcx::AddPairItem(LPCTSTR lpszItemCode, LPCTSTR lpszItemName, BOOL bBuiltChart)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BOOL;
	InvokeHelper(0x11e, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		lpszItemCode, lpszItemName, bBuiltChart);
	return result;
}

BOOL CDRChartOcx::HasIndicatorWithRQ(LPCTSTR p_szIndicatorName2, LPCTSTR p_szRQ)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x11f, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szIndicatorName2, p_szRQ);
	return result;
}

void CDRChartOcx::RemoveAllGraphOfRQ(LPCTSTR p_szRQ)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x120, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 p_szRQ);
}

short CDRChartOcx::GetRowOfGraphWithRQ(LPCTSTR p_szIndicatorName2, LPCTSTR p_szRQ)
{
	short result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x121, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		p_szIndicatorName2, p_szRQ);
	return result;
}

BOOL CDRChartOcx::SetGraphColorWithRQ(LPCTSTR p_szRQ, LPCTSTR p_szIndicatorName2, LPCTSTR p_szColor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0x122, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		p_szRQ, p_szIndicatorName2, p_szColor);
	return result;
}

void CDRChartOcx::SetUseSTExtData(LPCTSTR lpszExtDataName)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x123, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 lpszExtDataName);
}

BOOL CDRChartOcx::ShowGraphDataDrawingData(LPCTSTR lpszRQ, LPCTSTR lpszIndicatorName, BOOL bShow, short nShowType)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BOOL VTS_I2;
	InvokeHelper(0x124, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		lpszRQ, lpszIndicatorName, bShow, nShowType);
	return result;
}

void CDRChartOcx::ShowSelEnvironmentDlg(short nPage)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x125, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nPage);
}

long CDRChartOcx::GetVertScaleGroupCount(short nRow, short nColumn)
{
	long result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x126, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nRow, nColumn);
	return result;
}

void CDRChartOcx::SetSyncPacketData(LPCTSTR strSyncPacketNames)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x127, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 strSyncPacketNames);
}

void CDRChartOcx::SetEmptyChart()
{
	InvokeHelper(0x128, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CDRChartOcx::SetDrawVerticalBox(double dHorzValue, LPCTSTR strColor, BOOL bFill)
{
	static BYTE parms[] =
		VTS_R8 VTS_BSTR VTS_BOOL;
	InvokeHelper(0x129, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 dHorzValue, strColor, bFill);
}

void CDRChartOcx::UseDummyPacketData(BOOL bUse)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x12a, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bUse);
}

void CDRChartOcx::SetDoubleSizeBlock(short nRowIndex, short nColIndex)
{
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x12b, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRowIndex, nColIndex);
}

long CDRChartOcx::AddHorizontalLine(LPCTSTR lpszTitle, unsigned long clrLine, short nLine, double dPrice)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I2 VTS_R8;
	InvokeHelper(0x12c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		lpszTitle, clrLine, nLine, dPrice);
	return result;
}

void CDRChartOcx::DeleteHorizontalLine(long nIndex)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x12d, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nIndex);
}

void CDRChartOcx::DeleteAllHorizontalLine()
{
	InvokeHelper(0x12e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CDRChartOcx::UpdateHorizontalLine(long nIndex, LPCTSTR lpszTitle, unsigned long clrLine, short nLine, double dPrice)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4 VTS_I2 VTS_R8;
	InvokeHelper(0x12f, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nIndex, lpszTitle, clrLine, nLine, dPrice);
}

CString CDRChartOcx::GetPacketTypeFromKrxCmeCode(LPCTSTR p_szKrxCmeCode)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x130, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		p_szKrxCmeCode);
	return result;
}

void CDRChartOcx::SetEncUserID(LPCTSTR strUserID)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x131, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 strUserID);
}

void CDRChartOcx::ReCalculateAllGraphs()
{
	InvokeHelper(0x132, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

CString CDRChartOcx::GetGraphPropertyAtOnce(LPCTSTR lpszRQ, LPCTSTR lpszTargetTitle)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x133, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		lpszRQ, lpszTargetTitle);
	return result;
}

void CDRChartOcx::ChangeVertScaleMinMaxType(short nRowIndex, short nColumnIndex, short nVertScaleGroupIndex, short nScaleType, double dMinValue, double dMaxValue)
{
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_R8 VTS_R8;
	InvokeHelper(0x134, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		nRowIndex, nColumnIndex, nVertScaleGroupIndex, nScaleType, dMinValue, dMaxValue);
}

void CDRChartOcx::SetAvgUnitPrice(double dAvgPrice)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x135, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		dAvgPrice);
}

long CDRChartOcx::GetPacketCount(LPCTSTR strPacketName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x136, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		strPacketName);
	return result;
}

BOOL CDRChartOcx::FindRQ(LPCTSTR lpszRQ)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x137, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		lpszRQ);
	return result;
}

short CDRChartOcx::GetPacketNearIndex(LPCTSTR szPacketName, double dKeyValue)
{
	short result;
	static BYTE parms[] =
		VTS_BSTR VTS_R8;
	InvokeHelper(0x138, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		szPacketName, dKeyValue);
	return result;
}

BOOL CDRChartOcx::ChangePacketTypeRQ(LPCTSTR lpszRQ, LPCTSTR p_szPacketName, LPCTSTR p_szPacketType)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0x139, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		lpszRQ, p_szPacketName, p_szPacketType);
	return result;
}

void CDRChartOcx::SetDrawBaseLine(BOOL bDraw)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x13A, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		bDraw);
}

BOOL CDRChartOcx::GetGraphHide4(LPCTSTR strGraphName, short nSubGraphIndex)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2;
	InvokeHelper(0x13B, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strGraphName, nSubGraphIndex);
	return result;
}

// (2011/2/28 - Seung-Won, Bae) to set the item name for DEFAULT RQ of Single Chart.
void CDRChartOcx::SetItemCode(LPCTSTR lpszRQ, LPCTSTR lpszItemCode, LPCTSTR lpszItemName)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0x13C, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		lpszRQ, lpszItemCode, lpszItemName);
}