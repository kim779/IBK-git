#if !defined(AFX_NTSOUTPUT_H__6E50E69C_ED1D_4D72_BB03_813BD89D0A43__INCLUDED_)
#define AFX_NTSOUTPUT_H__6E50E69C_ED1D_4D72_BB03_813BD89D0A43__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CNtsOutput wrapper class

class CDispOutput : public COleDispatchDriver
{
//{{ Dispid 자동처리
public:
	CDispOutput();
	~CDispOutput();

	LPDISPATCH m_pdispatch;

	// 1. 변수선언. m_pdID, m_osInterfaceName[]
	DISPID*			m_pdID;
	static OLECHAR *	m_osInterfaceName[];

	// 2. enum 추가, 필요한 것만 리스트업.
	typedef enum {
		IIx_GetBase=0,
		IIx_GetText,
		IIx_SetText,
		IIx_SetComment,
		IIx_SetData,
		IIx_GetSStr,
		IIx_SetSStr,
	};

	// 3. void InitInterfaceName(IDispatch *pDisp);
	void InitInterfaceName(IDispatch *pDisp);
	long GetCtrlBasePacket();
	long GetBase(LPCTSTR szKey);


	CString GetText();
	void SetText(LPCTSTR);
	void SetComment(LPCTSTR);
	BOOL SetData(LPCTSTR szData);

	CString GetSStr();
	void SetSStr(LPCTSTR);
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_NTSOUTPUT_H__6E50E69C_ED1D_4D72_BB03_813BD89D0A43__INCLUDED_)



/*
// Attributes
public:
	BOOL GetStyleComma();
	void SetStyleComma(BOOL);
	short GetStylePlusSign();
	void SetStylePlusSign(short);
	BOOL GetStylePoint();
	void SetStylePoint(BOOL);
	short GetStylePointLen();
	void SetStylePointLen(short);
	BOOL GetErrorShow();
	void SetErrorShow(BOOL);
	OLE_COLOR GetBackColor();
	void SetBackColor(OLE_COLOR);
	OLE_COLOR GetForeColor();
	void SetForeColor(OLE_COLOR);
	short GetStyleAlign();
	void SetStyleAlign(short);
	short GetStyleVAlign();
	void SetStyleVAlign(short);
	short GetLabelType();
	void SetLabelType(short);
	short GetStyleDate();
	void SetStyleDate(short);
	short GetStyleTime();
	void SetStyleTime(short);
	short GetBackColorID();
	void SetBackColorID(short);
	short GetForeColorID();
	void SetForeColorID(short);
	CString GetText();
	void SetText(LPCTSTR);
	short GetAppearance();
	void SetAppearance(short);
	short GetBorderStyle();
	void SetBorderStyle(short);
	short GetEdgeStyle();
	void SetEdgeStyle(short);
	short GetAttribute();
	void SetAttribute(short);
	short GetMaxLength();
	void SetMaxLength(short);
	short GetUserInfo();
	void SetUserInfo(short);
	BOOL GetUseDefaultCharWidth();
	void SetUseDefaultCharWidth(BOOL);
	CString GetKeyName();
	void SetKeyName(LPCTSTR);
	CString GetDataName();
	void SetDataName(LPCTSTR);
	CString GetFieldName();
	void SetFieldName(LPCTSTR);
	CString GetKeyCtrlName();
	void SetKeyCtrlName(LPCTSTR);
	BOOL GetUseRealData();
	void SetUseRealData(BOOL);
	CString GetRelateNum();
	void SetRelateNum(LPCTSTR);
	long GetBrightTickTime();
	void SetBrightTickTime(long);
	BOOL GetUseBrightBoard();
	void SetUseBrightBoard(BOOL);
	unsigned long GetClrBrightItem();
	void SetClrBrightItem(unsigned long);
	CString GetRefControlName();
	void SetRefControlName(LPCTSTR);
	short GetRuleGubun();
	void SetRuleGubun(short);
	CString GetSStr();
	void SetSStr(LPCTSTR);
	CString GetServerTag();
	void SetServerTag(LPCTSTR);
	BOOL GetHide();
	void SetHide(BOOL);
	unsigned long GetBullColor();
	void SetBullColor(unsigned long);
	unsigned long GetSteadyColor();
	void SetSteadyColor(unsigned long);
	unsigned long GetBearColor();
	void SetBearColor(unsigned long);
	CString GetRealDLLName();
	void SetRealDLLName(LPCTSTR);
	CString GetDataUser();
	void SetDataUser(LPCTSTR);
	CString GetSLocalSharedList();
	void SetSLocalSharedList(LPCTSTR);
	BOOL GetUserColorTable();
	void SetUserColorTable(BOOL);
	long GetBackColorTable();
	void SetBackColorTable(long);
	long GetTextColorTable();
	void SetTextColorTable(long);
	long GetBullColorTable();
	void SetBullColorTable(long);
	long GetSteadyColorTable();
	void SetSteadyColorTable(long);
	long GetBearColorTable();
	void SetBearColorTable(long);
	long GetBrightColorTable();
	void SetBrightColorTable(long);
	OLE_HANDLE GetHWnd();
	void SetHWnd(OLE_HANDLE);
	CString GetComment();
	void SetComment(LPCTSTR);
	CString GetControlID();
	void SetControlID(LPCTSTR);
	unsigned long GetLineColor();
	void SetLineColor(unsigned long);
	long GetLineColorTable();
	void SetLineColorTable(long);
	CString GetCustomFont();
	void SetCustomFont(LPCTSTR);
	long GetTabKeyStop();
	void SetTabKeyStop(long);
	long GetUseDefaultFont();
	void SetUseDefaultFont(long);

// Operations
public:
	BOOL SetAttribute(short nForeColorID, short nBackColorID, short nState);
	BOOL SetField(LPCTSTR szField);
	BOOL SetEditWidth(short nCharCount);
	BOOL SetAttribute2(short nForeColorID, short nBackColorID, LPCTSTR chState);
	BOOL OnDrdsAdvise();
	BOOL OffDrdsAdvise();
	BOOL SetUpdownSign(LPCTSTR szState);
	BOOL SetData(LPCTSTR szData);
	long GetHWnd();
	BOOL SetAllProperties(long dwVersion, long dwDataClass);
	BOOL SetAllProperties2(long dwData);
	long GetBase(LPCTSTR szKey);
	void SetBaseDesk(long lKey);
	BOOL SetAttribute3(unsigned long clrForeColor, unsigned long clrBackColor, short nState);
	void MakeSaveShortKey(LPCTSTR szFileName, long nFlag);
	void SetCellAttrColorTable(short foreColorTable, short BackColorTable);
	long OnReceiveFetchData(long pData);
	void SetRscMng(long lKey);
	long GetAllProperties2(long lpData);
	long GetBasePropIf();
	void SetBlink();
	void AboutBox();  */