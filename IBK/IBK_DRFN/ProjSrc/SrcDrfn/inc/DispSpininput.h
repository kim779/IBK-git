#if !defined(AFX_DispSpininput_H__089F1C18_8D37_4C42_AFB6_7C929B3EFB7F__INCLUDED_)
#define AFX_DispSpininput_H__089F1C18_8D37_4C42_AFB6_7C929B3EFB7F__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CDispSpinInput wrapper class

class CDispSpinInput : public COleDispatchDriver
{
public:
	CDispSpinInput();
	
//{{ Dispid 자동처리
public:
	LPDISPATCH m_pdispatch;

	// 1. 변수선언. m_pdID, m_osInterfaceName[]
	DISPID*			m_pdID;
	static OLECHAR *	m_osInterfaceName[];

	// 2. enum 추가, 필요한 것만 리스트업.
	typedef enum {
		// Variable
		IIx_GetBase=0,
		IIx_GetData,
		IIx_SetDataText,
		IIx_GetDataName,
	};

	// 3. void InitInterfaceName(IDispatch *pDisp);
	void InitInterfaceName(IDispatch *pDisp);
	long GetCtrlBasePacket();
	long GetBase(LPCTSTR szKey);
	
// Attributes
public:
	CString GetDataName();
	void SetDataText(LPCTSTR szText);
	CString GetData();
	
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_DispSpininput_H__089F1C18_8D37_4C42_AFB6_7C929B3EFB7F__INCLUDED_)





/*unsigned long GetBackColor();
	void SetBackColor(unsigned long);
	BOOL GetButtonChoice();
	void SetButtonChoice(BOOL);
	short GetComma();
	void SetComma(short);
	CString GetComment();
	void SetComment(LPCTSTR);
	CString GetControlID();
	void SetControlID(LPCTSTR);
	CString GetCustomFont();
	void SetCustomFont(LPCTSTR);
	BOOL GetEnabled();
	void SetEnabled(BOOL);
	unsigned long GetForeColor();
	void SetForeColor(unsigned long);
	BOOL GetHide();
	void SetHide(BOOL);
	long GetInitValue();
	void SetInitValue(long);
	BOOL GetInputRequire();
	void SetInputRequire(BOOL);
	short GetMaxLength();
	void SetMaxLength(short);
	long GetMaxLimit();
	void SetMaxLimit(long);
	long GetMinLimit();
	void SetMinLimit(long);
	BOOL GetMinusVisible();
	void SetMinusVisible(BOOL);
	BOOL GetMoveTab();
	void SetMoveTab(BOOL);
	BOOL GetPlusVisible();
	void SetPlusVisible(BOOL);
	short GetSpinAlignment();
	void SetSpinAlignment(short);
	BOOL GetSpinButtonVisible();
	void SetSpinButtonVisible(BOOL);
	short GetSpinHelperType();
	void SetSpinHelperType(short);
	short GetSpinType();
	void SetSpinType(short);
	long GetTabKeyStop();
	void SetTabKeyStop(long);
	short GetTextAlignment();
	void SetTextAlignment(short);
	long GetUseDefaultFont();
	void SetUseDefaultFont(long);
	long GetUserBackColor();
	void SetUserBackColor(long);
	BOOL GetUserColorTable();
	void SetUserColorTable(BOOL);
	long GetUserForeColor();
	void SetUserForeColor(long);
	BOOL GetUsingComma();
	void SetUsingComma(BOOL);
	BOOL GetUsingMinLimit();
	void SetUsingMinLimit(BOOL);
	BOOL GetUsingMaxLimit();
	void SetUsingMaxLimit(BOOL);
	BOOL GetUsingSpinHelper();
	void SetUsingSpinHelper(BOOL);
	long GetVariation();
	void SetVariation(long);
	CString GetSStr();
	void SetSStr(LPCTSTR);
	BOOL GetUseRealData();
	void SetUseRealData(BOOL);
	CString GetFieldName();
	void SetFieldName(LPCTSTR);
	CString GetKeyName();
	void SetKeyName(LPCTSTR);
	CString GetSLocalSharedList();
	void SetSLocalSharedList(LPCTSTR);
	CString GetSGlobalSharedList();
	void SetSGlobalSharedList(LPCTSTR);
	CString GetDataName();
	void SetDataName(LPCTSTR);

// Operations
public:
	BOOL SetAllProperties2(long dwData);
	long GetBase(LPCTSTR szKey);
	CString GetData();
	void ClearEditText();
	void SetSpinInputData(short JangGubun, LPCTSTR Data);
	void GotoFocus();
	void MakeSaveShortKey(LPCTSTR szFileName, long nFlag);
	long OnReceiveFetchData(long pData);
	void SetDataText(LPCTSTR szText);
	void SetRscMng(long lKey);
	void SetDebugData(LPCTSTR szText);
	long GetAllProperties2(long lpData);
	long GetBasePropIf();
	void SetBaseDesk(long lKey);
	BOOL OnDrdsAdvise();
	BOOL OffDrdsAdvise();
	void SetButtonEnable(short bLeft, short bRight);
	void AboutBox();*/