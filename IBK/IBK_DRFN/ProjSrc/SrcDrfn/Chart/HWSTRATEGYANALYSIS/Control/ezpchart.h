#if !defined(AFX_EZPCHART_H__755DD33F_465C_4E65_BBB1_B3633E495A43__INCLUDED_)
#define AFX_EZPCHART_H__755DD33F_465C_4E65_BBB1_B3633E495A43__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CEzpChart wrapper class

/////////////////////////////////////////////////////////////////////////////
// CEzpChart wrapper class

class CEzpChart : public CWnd
{
protected:
	DECLARE_DYNCREATE(CEzpChart)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x292e99ba, 0x8db1, 0x459d, { 0xa8, 0x38, 0x2c, 0x54, 0x72, 0x3d, 0xbf, 0x8 } };
		return clsid;
	}

	CEzpChart();
	virtual ~CEzpChart();


    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL);
//	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
//		pPersist, bStorage, bstrLicKey); }
/*
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }
*/
protected:
	DISPID *			m_pdID;
	static OLECHAR *	m_osInterfaceName[];

// Attributes
public:
	BOOL GetEnabled();
	void SetEnabled(BOOL);
	OLE_HANDLE GetHWnd();
	void SetHWnd(OLE_HANDLE);
/*	BOOL GetBNormalizedMinuteTimeRule();
	void SetBNormalizedMinuteTimeRule(BOOL);
	long GetNBlockType();
	void SetNBlockType(long);
	long GetNBlockCompart();
	void SetNBlockCompart(long);
	long GetNBlockRowCount();
	void SetNBlockRowCount(long);
	long GetNBlockColumnCount();
	void SetNBlockColumnCount(long);
	long GetNBlockGap();
	void SetNBlockGap(long);
	long GetNBlockBorderThickness();
	void SetNBlockBorderThickness(long);
	CString GetStrChartList();
	void SetStrChartList(LPCTSTR);
	long GetNBorderType();
	void SetNBorderType(long);
	long GetNScaleLineType();
	void SetNScaleLineType(long);
	BOOL GetBWholeView();
	void SetBWholeView(BOOL);
	long GetNOnePageDataCount();
	void SetNOnePageDataCount(long);
	long GetNUserBlockAddCount();
	void SetNUserBlockAddCount(long);
	BOOL GetBGraphDragDrop();
	void SetBGraphDragDrop(BOOL);
	long GetNLeftMargin();
	void SetNLeftMargin(long);
	long GetNRightMargin();
	void SetNRightMargin(long);
	long GetNTopMargin();
	void SetNTopMargin(long);
	long GetNBottomMargin();
	void SetNBottomMargin(long);
	BOOL GetBAddGraphMenuShow();
	void SetBAddGraphMenuShow(BOOL);
	CString GetStrUserEnvironmentFileName();
	void SetStrUserEnvironmentFileName(LPCTSTR);
	CString GetStrUserIndicatorListFileName();
	void SetStrUserIndicatorListFileName(LPCTSTR);
	CString GetStrUserSeriesListFileName();
	void SetStrUserSeriesListFileName(LPCTSTR);
	BOOL GetBHide();
	void SetBHide(BOOL);
	BOOL GetBIsInput();
	void SetBIsInput(BOOL);
	CString GetStrToolbarOption();
	void SetStrToolbarOption(LPCTSTR);
	CString GetStrPacketOption();
	void SetStrPacketOption(LPCTSTR);
	CString GetStrLocalSharedList();
	void SetStrLocalSharedList(LPCTSTR);
	BOOL GetBUseRealData();
	void SetBUseRealData(BOOL);
	CString GetStrRealList();
	void SetStrRealList(LPCTSTR);
	short GetNMarginBorderType();
	void SetNMarginBorderType(short);
	long GetNRowDoubleSizeBlock();
	void SetNRowDoubleSizeBlock(long);
	BOOL GetBUseInquiryDlgWhenUseCrossLine();
	void SetBUseInquiryDlgWhenUseCrossLine(BOOL);
	long GetNColumnDoubleSizeBlock();
	void SetNColumnDoubleSizeBlock(long);
	BOOL GetBUseShortKey();
	void SetBUseShortKey(BOOL);
	BOOL GetBUseConditiontoTitle();
	void SetBUseConditiontoTitle(BOOL);
	BOOL GetBUseDatatoTitle();
	void SetBUseDatatoTitle(BOOL);
	short GetNHorzGap();
	void SetNHorzGap(short);
	short GetNVertGap();
	void SetNVertGap(short);
	short GetNRButtonMenuType();
	void SetNRButtonMenuType(short);
	BOOL GetBShowWarningMessageBox();
	void SetBShowWarningMessageBox(BOOL);
	BOOL GetBControlBlockSize();
	void SetBControlBlockSize(BOOL);
	BOOL GetBBlockMoveDelete();
	void SetBBlockMoveDelete(BOOL);
	BOOL GetBSelectTitle();
	void SetBSelectTitle(BOOL);
	BOOL GetBSelectGraph();
	void SetBSelectGraph(BOOL);
	BOOL GetBUseScaleRButtonMenu();
	void SetBUseScaleRButtonMenu(BOOL);
	short GetNGraphRButtonType();
	void SetNGraphRButtonType(short);
	short GetNHoldingPacketSize();
	void SetNHoldingPacketSize(short);
	CString GetSzBasePacketName();
	void SetSzBasePacketName(LPCTSTR);
	BOOL GetBRedrawAfterUpdatedAllPackets();
	void SetBRedrawAfterUpdatedAllPackets(BOOL);
	short GetNMinDataCountOnOnePage();
	void SetNMinDataCountOnOnePage(short);
	BOOL GetBFireRealEvent();
	void SetBFireRealEvent(BOOL);
	short GetNInquiryType();
	void SetNInquiryType(short);
	BOOL GetBOcxAreaNumericalInquiry();
	void SetBOcxAreaNumericalInquiry(BOOL);
*/
// Operations
public:
	typedef enum {
		IIx_SetAllProperties2,
		IIx_SetBaseDesk,
		IIx_GetBase,
		IIx_AddGraph,
		IIx_AddPacket,
		IIx_RemovePacket,
		IIx_GetIndicatorNameList,
		IIx_SetContainerDllInfo,
		IIx_SetChartData,
		IIx_SetPacketData,
		IIx_AddChartBlock,
		IIx_ResetChart,
		IIx_SetBackgroundColors,
		IIx_SetDrdsAdvise,
		IIx_AddRealItem,
		IIx_ShowIndicatorConfigDlg,
		IIx_NOnePageDataCount,
		IIx_StrStartDateOfData,
		IIx_ResetChartCfgWith,
		IIx_ResetOCX,
		IIx_HasGraph,
		IIx_RemoveRealItem,
		IIx_SaveandOpenFromFile,
		IIx_ClearChartData,
		IIx_ShowInnerToolBar,
		IIx_ChangeVertScalePosition,
		IIx_GetRowBlockCount,
		IIx_GetColumnBlockCount,
		IIx_ChangeHorzScalePosition,
		IIx_RemoveChart,
		IIx_SetStartPeriodOfPacket,
		IIx_GetStartPeriodOfPacket,
		IIx_StrUserIndicatorListFileName,
		IIx_StrUserEnvironmentFileName,
		IIx_GetStartEndDateOnView,
		IIx_SetStartEndDateOfView,
		IIx_ScrollToDataOfEnd,
		IIx_ZoomToWithRightFix,
		IIx_ClearTimeMark,
		IIx_ShowEnvironmentDlg,
		IIx_SetTimeMark,
		IIx_BOcxAreaNumericalInquiry,
		IIx_OnRunningOneChart,
		IIx_EnableBoundMark,
		IIx_EnableReceivingTimeShare,
		IIx_ChangePacketType,
		IIx_ChangePriceGraphDrawingData,
		IIx_NUseInquiryWithCrossline,
		IIx_BShowPriceRateInquiry,
		IIx_BNormalizedMinuteTimeRule,
		IIx_HasGraphInSpecialBack,
		IIx_InvokeAddIn,
		IIx_LoadAddIn,
		IIx_SetDragModeType,
		IIx_SetHtsPath,
		IIx_SetAllLogScale,
		IIx_SetMultiChartDlg,
		IIx_GetListViewerData,
		IIx_SetDataIndexByDate,
		IIx_GetDataIndexInDataListViewer
	};
	// 가로 scale 위치
	enum HORZSCALEPOSITION
	{
		HORZ_TOP,
		HORZ_BOTTOM,
		HORZ_BOTH,
		HORZ_HIDE,
		HORZ_NONE
	};
	
	// 세로 scale 위치
	enum VERTSCALEPOSITION
	{
		VERT_LEFT,
		VERT_RIGHT,
		VERT_BOTH,
		VERT_NONE
	};

	long GetNNumericalInquiryOption();
	void SetNNumericalInquiryOption(long);
	CString GetStrGlobalSharedList();
	void SetStrGlobalSharedList(LPCTSTR);
//	short GetNUseInquiryWithCrossline();
//	void SetNUseInquiryWithCrossline(short);
//	BOOL GetBShowPriceRateInquiry();
//	void SetBShowPriceRateInquiry(BOOL);
/*	unsigned long GetClrBackground();
	void SetClrBackground(unsigned long);
	unsigned long GetClrBackBorder();
	void SetClrBackBorder(unsigned long);
	unsigned long GetClrBlock();
	void SetClrBlock(unsigned long);
	unsigned long GetClrBlockBorder();
	void SetClrBlockBorder(unsigned long);
	unsigned long GetClrScaleLine();
	void SetClrScaleLine(unsigned long);
	unsigned long GetClrScaleText();
	void SetClrScaleText(unsigned long);
	unsigned long GetClrGraphBase1();
	void SetClrGraphBase1(unsigned long);
	unsigned long GetClrGraphBase2();
	void SetClrGraphBase2(unsigned long);
	unsigned long GetClrGraphBase3();
	void SetClrGraphBase3(unsigned long);
	unsigned long GetClrGraphBase4();
	void SetClrGraphBase4(unsigned long);
	unsigned long GetClrGraphBase5();
	void SetClrGraphBase5(unsigned long);
	unsigned long GetClrGraphBase6();
	void SetClrGraphBase6(unsigned long);
	unsigned long GetClrAnalysisTool();
	void SetClrAnalysisTool(unsigned long);
	CString GetStrBlockRegion();
	void SetStrBlockRegion(LPCTSTR);
	unsigned long GetClrScaleLine2();
	void SetClrScaleLine2(unsigned long);
	unsigned long GetClrInquiryWindow();
	void SetClrInquiryWindow(unsigned long);
	CString GetCustomFont();
	void SetCustomFont(LPCTSTR);
	unsigned long GetClrLattice();
	void SetClrLattice(unsigned long);
	CString GetStrStartDateOfData();BOOL GetOnRunningOneChart();*/
	void SetStrStartDateOfData(LPCTSTR);
	
	void SetOnRunningOneChart(BOOL);
	BOOL GetBDoesUseSkinColor();
	void SetBDoesUseSkinColor(BOOL);

// Operations
public:
	BOOL SetAllProperties2(long dwData);
	void SetBaseDesk(long lKey);
	long GetBase(LPCTSTR szKey);
	void AddGraph(short nRow, short nColumn, short nVertScaleGroup, LPCTSTR szGraphOption, BOOL bCreateBlock, BOOL bCreateVertScaleGroup, BOOL bUseAutoScale);
	void AddPacket(LPCTSTR szPacketOption);
	void RemovePacket(LPCTSTR szPacketName);
	CString GetIndicatorNameList(LPCTSTR p_strGroup);
	void SetContainerDllInfo(long p_lDllWnd, short p_nID);
	short SetChartData(long pChartData, short nCount, short nType);
	BOOL SetPacketData(LPCTSTR szPacketName, long szData, long nLength, BOOL bReset);
	BOOL AddChartBlock(LPCTSTR strChartName);
	BOOL ResetChart();
	void SetBackgroundColors(unsigned long p_rgbBlockArea, unsigned long p_rgbScaleArea);
	BOOL SetDrdsAdvise(BOOL bOnAdvise);
	void AddRealItem(LPCTSTR szRealInfo);
	void ShowIndicatorConfigDlg();
	long GetNOnePageDataCount();
	void SetNOnePageDataCount(long propVal);
	CString GetStrStartDateOfData();
	void ResetChartCfgWith(short p_nIndex);
	void ResetOCX();
	BOOL HasGraph(LPCTSTR p_szGraphName);
	void RemoveRealItem(LPCTSTR szRealInfo);
	BOOL SaveandOpenFromFile(LPCTSTR strOpenFileName, LPCTSTR strSaveFileName, BOOL bOpenOption, BOOL bSaveOption);
	short ClearChartData(short nOption);
	void ShowInnerToolBar(BOOL p_bShow);
	BOOL ChangeVertScalePosition(short nScalePosition, short nRowIndex, short nColumnIndex, short nVSGroupIndex);
	short GetRowBlockCount();
	short GetColumnBlockCount();
	BOOL ChangeHorzScalePosition(short nScalePosition, short nRowIndex, short nColumnIndex);
	BOOL RemoveChart(LPCTSTR strChartName);
	BOOL SetStartPeriodOfPacket(LPCTSTR p_szPacketName, long p_lStartPeriod, long p_bAddSpace);
	long GetStartPeriodOfPacket(LPCTSTR p_szPacketName);
	void SetStrUserIndicatorListFileName(LPCTSTR propVal);
	void SetStrUserEnvironmentFileName(LPCTSTR propVal);
	BOOL GetStartEndDateOnView(double* p_pStartDate, double* p_pEndDate);
	BOOL SetStartEndDateOfView(double p_dStartDate, double p_dEndDate);
	BOOL ScrollToDataOfEnd(double p_dData);
	short ZoomToWithRightFix(short p_nZoomValue, BOOL p_bWithRightFix);
	void ClearTimeMark();
	void ShowEnvironmentDlg();
	void SetTimeMark(LPCTSTR p_szMarkTime, BOOL p_bWithScroll);
	void SetBOcxAreaNumericalInquiry(BOOL propVal);
	BOOL GetOnRunningOneChart();
	void EnableBoundMark(BOOL p_bEnable);
	void EnableReceivingTimeShare(BOOL p_bEnable);
	BOOL ChangePacketType(LPCTSTR p_szPacketName, LPCTSTR p_szPacketType);
	BOOL ChangePriceGraphDrawingData(BOOL p_bLowHigh, BOOL p_bLowCur, BOOL p_bHighCur, BOOL p_bPrevCur, BOOL p_bPrevCurRate, short p_nDefaultType);
	void SetNUseInquiryWithCrossline(short propVal);
	short GetNUseInquiryWithCrossline();
	BOOL GetBShowPriceRateInquiry();
	void SetBShowPriceRateInquiry(BOOL propVal);
	BOOL GetBNormalizedMinuteTimeRule();
	void SetBNormalizedMinuteTimeRule(BOOL);
	BOOL HasGraphInSpecialBack(LPCTSTR p_szGraphName);
	BOOL InvokeAddIn(LPCTSTR p_szAddInDllName, short p_nCommandType, long p_lData);
	BOOL LoadAddIn(LPCTSTR p_szAddInDllName);
	void SetDragModeType(short p_nDragModeType);
	void SetHtsPath(LPCTSTR pcszHtsPath);	
	void SetAllLogScale(BOOL bLogScale);
	void SetMultiChartDlg(long lpMultiChartDlg);	

	//2005. 06. 28 add ===================================================================
	//데이터 리스트 뷰에 보일 값을 조회한다.
	void GetListViewerData(	BSTR* bstrTitle,
							BSTR* bstrHorzScale,
							BSTR* bstrPacketNamesPerBlock,
							BSTR* bstrPacketNames, 
							BSTR* bstrSaveFilePath,
							BOOL* bViewPacketSequence,
							long* lpPacketList); 
	//chart에 보이는 범위를 해당 매개변수의 값으로 셋한다. YYYYMMDDHHMMSS 형태로 넘긴다.
	void SetDataIndexByDate(LPCTSTR pcszStartDate, LPCTSTR pcszEndDate); 

	//Data List View에 필요한 마우스 포인터 위치 를 보낸다.	
	long GetDataIndexInDataListViewer(long nPointX, long nPointY); 

/*	BOOL SetAllProperties2(long dwData);
	void SetBaseDesk(long lKey);
	long GetBase(LPCTSTR szKey);
	short SetChartData(long pChartData, short nCount, short nType);
	short SetChartDataStr(LPCTSTR szChartData, short nCount, short nType);
	short testGetPacketdatasize(LPCTSTR pIn);
	void testLoadAnalysisTools(short nToolOption, short nOption);
	void MakeSaveShortKey(LPCTSTR szFileName, short nFlag);
	short ChangeChart(short nBlockRowPosition, short nBlockColumnPosition, LPCTSTR strGraphTitle, LPCTSTR strIndicatorName, LPCTSTR strPacketName, LPCTSTR strGraphType, LPCTSTR strGraphStyle, short nLineWidth, unsigned long clrLineColor);
	short ClearChartData(short nOption);
	short SetGraphHide(short nRow, short nColumn, LPCTSTR strTitle, BOOL bHide);
	BOOL AddChartBlock(LPCTSTR strChartName);
	void SetOnePageDataCount(long nOnePageDataCount);
	long GetOnePageDataCount();
	BOOL SaveandOpenFromFile(LPCTSTR strOpenFileName, LPCTSTR strSaveFileName, BOOL bOpenOption, BOOL bSaveOption);
	BOOL JoinandDevisionforCompareChart(long nRowCount, long nColumnCount, BOOL bJoin);
	BOOL ChangeGraphTitle(short nRowIndex, short nColumnIndex, short nGraphIndex, LPCTSTR strNewTitle);
	short SetChartDataFromFile(LPCTSTR szFileName, short nType);
	BOOL RemoveChart(LPCTSTR strChartName);
	BOOL ChangeGraphType(LPCTSTR strIndicatorName, LPCTSTR strGraphType, LPCTSTR strGraphStyle, LPCTSTR strPacketNameList, BOOL bRunatOnce);
	void SetChartAllInfo();
	CString GetData(LPCTSTR strPacketName, short nDataIndex);
	BOOL SetDrdsAdvise(BOOL bOnAdvise);
	short GetDataCount();
	BOOL ChangeChartItem(LPCTSTR strIndicatorName, short nSubGraphIndex, LPCTSTR strNewTitle, LPCTSTR strNewPacketName, LPCTSTR strNewGraphType, LPCTSTR strNewGraphStyle, short nNewUpLineWidth, short nNewDownLineWidth, short nNewEqualLineWidth, 
		BOOL bRunatOnce);
	BOOL SetStopLossPrice(BOOL bIsStopLoss, double dStopLossPrice, BOOL bIsProfit, double dProfitPrice);
	BOOL RestoreMinMax(LPCTSTR strPacketName);
	BOOL RestoreMin(LPCTSTR strPacketName);
	BOOL RestorMax(LPCTSTR strPacketName);
	BOOL SetMin(LPCTSTR strPacketName, double dMin);
	BOOL SetMax(LPCTSTR strPacketName, double dMax);
	BOOL SetMinMax(LPCTSTR strPacketName, double dMin, double dMax);
	BOOL SetHorzScaleData(short nRowIndex, short nColumnIndex, LPCTSTR strScaleData);
	double GetMin(LPCTSTR strPacketName);
	double GetMax(LPCTSTR strPacketName);
	BOOL SetGraphHide2(short nRowIndex, short nColumnIndex, short nVerticalIndex, short nGraphIndex, short nSubGraphIndex, BOOL bHide);
	BOOL ChangeGraphDatas(short nRowIndex, short nColumnIndex, short nVerticalIndex, short nGraphIndex, LPCTSTR strNewIndicatorName, LPCTSTR strNewTitle, LPCTSTR strNewPacketName, LPCTSTR strNewGraphType, LPCTSTR strNewGraphStyle, 
		short nNewUpLineWidth, short nNewDownLineWidth, short nNewEqualLineWidth, BOOL bRunatOnce);
	void SaveandApplyGraphStyle(short nSaveDataType, short nChangeDataType);
	void SetDataRegionInBlock(short nDataStartIndex);
	void SetItemInfo(LPCTSTR lpstrCode, LPCTSTR lpstrName);
	void AddandDeleteIndicator(LPCTSTR strIndicatorName);
	long GetAllProperties2(long lpData);
	long GetBasePropIf();
	BOOL SetVertScaleData(short nRowIndex, short nColumnIndex, short nVertScaleGroupIndex, LPCTSTR strVertScaleData);
	BOOL ChangeBlockType(short nBlockType, short nRowCount, short nColumnCount);
	BOOL ChangeHorzScalePosition(short nScalePosition, short nRowIndex, short nColumnIndex);
	BOOL ResetChart();
	void SetRealData(LPCTSTR strPacketName, double dData, short nOption);
	BOOL SetGraphTitle(LPCTSTR strIndicatorName, short nSubGraphIndex, LPCTSTR strNewGraphTitle, BOOL bGraphShowing);
	CString GetIndicatorNameList(LPCTSTR p_strGroup);
	void AddGraph(short nRow, short nColumn, short nVertScaleGroup, LPCTSTR szGraphOption, BOOL bCreateBlock, BOOL bCreateVertScaleGroup, BOOL bUseAutoScale);
	void AddPacket(LPCTSTR szPacketOption);
	void RemovePacket(LPCTSTR szPacketName);
	void SetContainerDllInfo(long p_lDllWnd, short p_nID);
	BOOL SetPacketData(LPCTSTR szPacketName, long szData, long lLength, BOOL bReset);
	void SetBackgroundColors(unsigned long p_rgbBlockArea, unsigned long p_rgbScaleArea);
	void AddRealItem(LPCTSTR szRealInfo);
	void ShowIndicatorConfigDlg();
	void ResetChartCfgWith(short p_nIndex);
	void ResetOCX();
	BOOL HasGraph(LPCTSTR p_szGraphName);
	void RemoveRealItem(LPCTSTR szRealInfo);
	void ShowInnerToolBar(BOOL p_bShow);
	BOOL ChangeVertScalePosition(short nScalePosition, short nRowIndex, short nColumnIndex, short nVSGroupIndex);
	short GetRowBlockCount();
	short GetColumnBlockCount();
	BOOL SetStartPeriodOfPacket(LPCTSTR p_szPacketName, long p_lStartPeriod, long p_bAddSpace);
	long GetStartPeriodOfPacket(LPCTSTR p_szPacketName);
	BOOL GetStartEndDateOnView(double* p_pStartDate, double* p_pEndDate);
	BOOL SetStartEndDateOfView(double p_dStartDate, double p_dEndDate);
	BOOL ScrollToDataOfEnd(double p_dData);
	short ZoomToWithRightFix(short p_nZoomValue, BOOL p_bWithRightFix);
	void ClearTimeMark();
	void ShowEnvironmentDlg();
	void SetTimeMark(LPCTSTR p_szMarkTime, BOOL p_bWithScroll);
	short GetVertScalePosition(short p_nRowIndex, short p_nColumnIndex, short p_nVSGroupIndex);
	void EnableBoundMark(BOOL p_bEnable);
	void EnableReceivingTimeShare(BOOL p_bEnable);
	BOOL ChangePacketType(LPCTSTR p_szPacketName, LPCTSTR p_szPacketType);
	BOOL ChangeGraphDrawingData(LPCTSTR p_szGraphName, BOOL p_bLowHigh, BOOL p_bLowCur, BOOL p_bHighCur, BOOL p_bPrevCur, BOOL p_bPrevCurRate);
	BOOL ChangePriceGraphDrawingData(BOOL p_bLowHigh, BOOL p_bLowCur, BOOL p_bHighCur, BOOL p_bPrevCur, BOOL p_bPrevCurRate, short p_nDefaultType);
	void ShowAnalysisToolText(BOOL p_bTimeLine, BOOL p_bPriceLineLeft, BOOL p_bPriceLineRight, BOOL p_bTrendLine, BOOL p_bTrisectionLine, BOOL p_bQuadrisectionLine, BOOL p_bFibonacciRetraceLine);
	BOOL HasGraphInSpecialBack(LPCTSTR p_szGraphName);
	BOOL LoadAddIn(LPCTSTR p_szAddInDllName);
	BOOL InvokeAddIn(LPCTSTR p_szAddInDllName, short p_nCommandType, long p_lData);
	void SetDragModeType(short p_nDragModeType);
	BOOL ResetRealListString(LPCTSTR p_szRealList, BOOL p_bAdviseNow);
	BOOL AddOrRemoveChart(LPCTSTR strIndicatorName);
*/
};
//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_EZPCHART_H__755DD33F_465C_4E65_BBB1_B3633E495A43__INCLUDED_)
